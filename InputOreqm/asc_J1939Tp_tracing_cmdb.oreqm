<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_J1939Tp_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_Native/asc_J1939Tp_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_Native/asc_J1939Tp_requirements_AUTOSAR_SWS_SAEJ1939TransportLayer_R20-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_Native/asc_J1939Tp_requirements_EB_Refinements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_Native/asc_J1939Tp_requirements_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_Native/asc_J1939Tp_requirements_SAE_J1939-21.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_Native/asc_J1939Tp_requirements_SAE_J1939-22.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_Native/asc_J1939Tp_requirements_SRS_J1939.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/common_req/J1939Tp_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 20:01:37 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_J1939Tp_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_Native/asc_J1939Tp_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_Native/asc_J1939Tp_requirements_AUTOSAR_SWS_SAEJ1939TransportLayer_R20-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_Native/asc_J1939Tp_requirements_EB_Refinements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_Native/asc_J1939Tp_requirements_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_Native/asc_J1939Tp_requirements_SAE_J1939-21.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_Native/asc_J1939Tp_requirements_SAE_J1939-22.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_Native/asc_J1939Tp_requirements_SRS_J1939.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/common_req/J1939Tp_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">
    <specobject>
      <id>lim.J1939Tp.EB_INTREQ_J1939TP_FULL_DUPLEX_CONFIGURATION</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        To enable FullDuplex communication in a designated Rx/Tx channel pair, specific configurations shall be set. These configurations are as follows:
          1- J1939TpTxCmNPduRef and J1939TpTxFcNPduRef shall be configured to reference the same EcuCPduRef.
          2- J1939TpTxCmNPduTxConfId and J1939TpTxFcNPduTxConfId shall share identical values.
          3- J1939TpRxFcNPduRef and J1939TpRxCmNPduRef shall be configured to reference the same EcuCPduRef.
          4- J1939TpRxFcNPduId and J1939TpRxCmNPduId shall have identical values.
      </description>
      <rationale>
        The purpose of the 'FullDuplex' is to allow the bi-directional communication between Tx and Rx channels with the same Sa, Da.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxProtocolType
        Parameter Type: Enumeration
        Parent Containers: J1939TpRxChannel,
        Description: Protocol type used by this channel. This parameter is only required for channels 
        with fixed destination address.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Enumeration Literal: J1939TP_PROTOCOL_BAM, AUTOSAR_ECUC
        Enumeration Literal: J1939TP_PROTOCOL_CMDT, AUTOSAR_ECUC
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_210</srcid><srcstatus/><internalId>974</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpGeneral
        Container Type: Container
        Description: This container describes the general configuration parameters of the J1939Tp 
        module.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_1015</srcid><srcstatus/><internalId>1027</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpDevErrorDetect
        Parameter Type: Boolean
        Parent Containers: J1939TpGeneral,
        Description: Switches the development error detection and notification on or off.
        Introduction: * true: detection and notification is enabled. * false: detection and 
        notification is disabled.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_1066</srcid><srcstatus/><internalId>1030</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpMainFunctionPeriod
        Parameter Type: FloatValue
        Parent Containers: J1939TpGeneral,
        Description: Allow to configure the time for the MainFunction (in seconds)
        Introduction: Please note: This configuration value shall be equal to the value in the 
        ScheduleManager module.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: INF (Type: OPEN)
        Min-Value: 0 (Type: OPEN)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_1127</srcid><srcstatus/><internalId>1032</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00050</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxPg
        Container Type: Sub-Container
        Parent Containers: J1939TpRxChannel,
        Sub-Containers: J1939TpRxDirectNPdu J1939TpRxNSdu 
        Description: Parameter group received by the J1939 transport layer.
        Lower Multiplicity: 1
        infinite
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_350</srcid><srcstatus/><internalId>984</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00051</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpVersionInfoApi
        Parameter Type: Boolean
        Parent Containers: J1939TpGeneral,
        Description: The function J1939Tp_GetVersionInfo is configurable (On/Off) by this configuration 
        parameter.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_1144</srcid><srcstatus/><internalId>1033</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00052</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpConfiguration
        Container Type: Container
        Sub-Containers: J1939TpRxChannel J1939TpTxChannel 
        Description: This container contains the configuration parameters and sub containers of the 
        J1939Tp module that define the communication paths.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_68</srcid><srcstatus/><internalId>967</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00053</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxChannel
        Container Type: Sub-Container
        Parent Containers: J1939TpConfiguration,
        Sub-Containers: J1939TpRxCmNPdu J1939TpRxDtNPdu J1939TpRxPg J1939TpTxFcNPdu 
        Description: This container describes a reception channel of the J1939Tp module. A channel 
        referencing N-PDUs without MetaData is used for all N-SDUs that share the same source address (
        SA) and the same destination address (BAM: DA = 0xFF, CMDT: DA != 0xFF). A channel with N-PDUs 
        with MetaData is used for all possible source and destination addresses.
        Lower Multiplicity: 0
        infinite
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_74</srcid><srcstatus/><internalId>968</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00059</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxChannel
        Container Type: Sub-Container
        Parent Containers: J1939TpConfiguration,
        Sub-Containers: J1939TpRxFcNPdu J1939TpTxCmNPdu J1939TpTxDtNPdu J1939TpTxPg 
        Description: This container describes a transmission channel of the J1939Tp module. A channel 
        referencing N-PDUs without MetaData is used for all N-SDUs that share the same source address (
        SA) and the same destination address (BAM: DA = 0xFF, CMDT: DA != 0xFF). A channel with N-PDUs 
        with MetaData is used for all possible source and destination addresses.
        Lower Multiplicity: 0
        infinite
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_556</srcid><srcstatus/><internalId>998</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxNSdu
        Container Type: Sub-Container
        Parent Containers: J1939TpRxPg,
        Description: This container describes the parameters that are relevant for the reception of a 
        specific N-SDU. This N-SDU produces meta data items of type SOURCE_ADDRESS_16, 
        TARGET_ADDRESS_16, and PRIORITY_8.
        Lower Multiplicity: 1
        infinite
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_431</srcid><srcstatus/><internalId>990</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01029_Err_J1939Tp_Invalid_PdurRef_RxSdus</srcid><srcstatus/><internalId>1630</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxPgPGN
        Parameter Type: Integer
        Parent Containers: J1939TpRxPg,
        Description: PGN of the referenced N-SDUs.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 262143 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_372</srcid><srcstatus/><internalId>986</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00066</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxPgDynLength
        Parameter Type: Boolean
        Parent Containers: J1939TpRxPg,
        Description: This flag is set to TRUE when the N-SDU refers to a PGN with variable length.
        Introduction: Please note: When this attribute is TRUE, the sub container J1939TpRxDirectNPdu 
        is required.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_359</srcid><srcstatus/><internalId>985</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxNSduRef
        Parameter Type: Reference
        Parent Containers: J1939TpRxNSdu,
        Description: Reference to the Pdu object representing the N-SDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_457</srcid><srcstatus/><internalId>992</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00070</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxPg
        Container Type: Sub-Container
        Parent Containers: J1939TpTxChannel,
        Sub-Containers: J1939TpTxDirectNPdu J1939TpTxNSdu 
        Description: Parameter group transmitted by the J1939 transport layer.
        Lower Multiplicity: 1
        infinite
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_852</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00117</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxDtNPdu
        Container Type: Sub-Container
        Parent Containers: J1939TpRxChannel,
        Description: This N-PDU represents the TP.DT frame of a J1939 transport protocol session. TP.DT 
        is used both by BAM and CMDT to transfer the contents of an N-SDU. This N-PDU consumes a meta 
        data item of type CAN_ID_32.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_314</srcid><srcstatus/><internalId>981</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01008_Err_J1939Tp_Invalid_Metadata_RxDtNPdu</srcid><srcstatus/><internalId>1609</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01020_Err_J1939Tp_Invalid_MetadataRef_RxDTPdus</srcid><srcstatus/><internalId>1621</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00128</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxCmNPdu
        Container Type: Sub-Container
        Parent Containers: J1939TpRxChannel,
        Description: This N-PDU represents the TP.CM frame of a J1939 transport protocol session. TP.CM 
        is used both by BAM and CMDT to initialize the connection. For CMDT, it is also used to abort 
        the connection. This N-PDU consumes a meta data item of type CAN_ID_32.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_278</srcid><srcstatus/><internalId>978</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01007_Err_J1939Tp_Invalid_Metadata_RxCmNPdu</srcid><srcstatus/><internalId>1608</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01019_Err_J1939Tp_Invalid_MetadataRef_RxCMPdus</srcid><srcstatus/><internalId>1620</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00129</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxCmNPduId
        Parameter Type: Integer
        Parent Containers: J1939TpRxCmNPdu,
        Description: The N-PDU identifier used for communication with CanIf.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_282</srcid><srcstatus/><internalId>979</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01025_Err_J1939Tp_Invalid_NPduId_RxCMPdus</srcid><srcstatus/><internalId>1626</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00130</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxDirectNPdu
        Container Type: Sub-Container
        Parent Containers: J1939TpRxPg,
        Description: This N-PDU represents the short frame that is used for a dynamic length PGN when 
        it has a length of less that 8 bytes. This N-PDU consumes a meta data item of type CAN_ID_32.
        Introduction: Please note: This sub container is only necessary when J1939TpRxPgDynLength is 
        TRUE.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_389</srcid><srcstatus/><internalId>987</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01028_Err_J1939Tp_Invalid_MetadataRef_RxDirectPdus</srcid><srcstatus/><internalId>1629</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00131</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxDirectNPduId
        Parameter Type: Integer
        Parent Containers: J1939TpRxDirectNPdu,
        Description: The N-PDU identifier used for communication with CanIf.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_400</srcid><srcstatus/><internalId>988</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01027_Err_J1939Tp_Invalid_Metadata_RxDirectNPdu</srcid><srcstatus/><internalId>1628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00132</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxDirectNPduRef
        Parameter Type: Reference
        Parent Containers: J1939TpRxDirectNPdu,
        Description: Reference to the Pdu object representing the N-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_417</srcid><srcstatus/><internalId>989</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00133</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxDtNPduId
        Parameter Type: Integer
        Parent Containers: J1939TpRxDtNPdu,
        Description: The N-PDU identifier used for communication with CanIf.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_318</srcid><srcstatus/><internalId>982</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01024_Err_J1939Tp_Invalid_NPduId_RxDTPdus</srcid><srcstatus/><internalId>1625</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00134</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxDtNPduRef
        Parameter Type: Reference
        Parent Containers: J1939TpRxDtNPdu,
        Description: Reference to the Pdu object representing the N-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_335</srcid><srcstatus/><internalId>983</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00135</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxFcNPdu
        Container Type: Sub-Container
        Parent Containers: J1939TpRxChannel,
        Description: This N-PDU represents the TP.CM frame that is used in reverse direction for a 
        J1939 transport protocol session using the CMDT protocol type. TP.CM in reverse direction is 
        used for intermediate and final acknowledgement of received data and to abort the connection. 
        This N-PDU produces a meta data item of type CAN_ID_32.
        Introduction: Please note: This sub container is only required when J1939TpRxProtocolType is 
        J1939TP_PROTOCOL_CMDT or when it is not configured at all.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_512</srcid><srcstatus/><internalId>995</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01003_Err_J1939Tp_Invalid_Metadata_TxFcNPdu</srcid><srcstatus/><internalId>1604</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01021_Err_J1939Tp_Invalid_MetadataRef_TxFCPdus</srcid><srcstatus/><internalId>1622</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01026_Err_J1939Tp_Invalid_NPduId_TxFcPdus</srcid><srcstatus/><internalId>1627</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00136</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxFcNPduRef
        Parameter Type: Reference
        Parent Containers: J1939TpTxFcNPdu,
        Description: Reference to the Pdu object representing the N-PDU.
        Introduction: Please note: When two channels have identical but exchanged source and 
        destination addresses, the Pdu referenced by this parameter is shared with J1939TpTxCmNPduRef 
        of the corresponding J1939TpTxChannel.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_540</srcid><srcstatus/><internalId>997</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00137</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxProtocolType
        Parameter Type: Enumeration
        Parent Containers: J1939TpTxChannel,
        Description: Protocol type used by this channel. This parameter is only required for channels 
        with fixed destination address.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Enumeration Literal: J1939TP_PROTOCOL_BAM, AUTOSAR_ECUC
        Enumeration Literal: J1939TP_PROTOCOL_CMDT, AUTOSAR_ECUC
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_670</srcid><srcstatus/><internalId>1003</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00138</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxCmNPdu
        Container Type: Sub-Container
        Parent Containers: J1939TpTxChannel,
        Description: This N-PDU represents the TP.CM frame of a J1939 transport protocol session. TP.CM 
        is used both by BAM and CMDT to initialize the connection. For CMDT, it is also used to abort 
        the connection. This N-PDU produces a meta data item of type CAN_ID_32.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_782</srcid><srcstatus/><internalId>1010</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01002_Err_J1939Tp_Invalid_Metadata_TxCMNPdu</srcid><srcstatus/><internalId>1603</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01018_Err_J1939Tp_Invalid_MetadataRef_TxCMPdus</srcid><srcstatus/><internalId>1619</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00139</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxCmNPduRef
        Parameter Type: Reference
        Parent Containers: J1939TpTxCmNPdu,
        Description: Reference to the Pdu object representing the N-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_803</srcid><srcstatus/><internalId>1012</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00140</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxDirectNPdu
        Container Type: Sub-Container
        Parent Containers: J1939TpTxPg,
        Description: This N-PDU represents the short frame that is used for a dynamic length PGN when 
        it has a length of less that 8 bytes. This N-PDU produces a meta data item of type CAN_ID_32.
        Introduction: Please note: This sub container is only necessary when J1939TpTxPgDynLength is 
        TRUE.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_892</srcid><srcstatus/><internalId>1019</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01005_Err_J1939Tp_Invalid_Metadata_TxDirectNPdu</srcid><srcstatus/><internalId>1606</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01022_Err_J1939Tp_Invalid_MetadataRef_TxDirectPdus</srcid><srcstatus/><internalId>1623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00141</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxDirectNPduRef
        Parameter Type: Reference
        Parent Containers: J1939TpTxDirectNPdu,
        Description: Reference to the Pdu object representing the N-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_920</srcid><srcstatus/><internalId>1021</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00142</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxDtNPdu
        Container Type: Sub-Container
        Parent Containers: J1939TpTxChannel,
        Description: This N-PDU represents the TP.DT frame of a J1939 transport protocol session. TP.DT 
        is used both by BAM and CMDT to transfer the contents of an N-SDU. This N-PDU produces a meta 
        data item of type CAN_ID_32.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_817</srcid><srcstatus/><internalId>1013</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01004_Err_J1939Tp_Invalid_Metadata_TxDtNPdu</srcid><srcstatus/><internalId>1605</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_DIRECT_TX_NPDU_UNLOCK_VALIDATION</srcid><srcstatus/><internalId>1637</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00143</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxDtNPduRef
        Parameter Type: Reference
        Parent Containers: J1939TpTxDtNPdu,
        Description: Reference to the Pdu object representing the N-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_838</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00144</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxFcNPdu
        Container Type: Sub-Container
        Parent Containers: J1939TpTxChannel,
        Description: This N-PDU represents the TP.CM frame that is used in reverse direction for a 
        J1939 transport protocol session using the CMDT protocol type. TP.CM in reverse direction is 
        used for intermediate and final acknowledgement of received data and to abort the connection. 
        This N-PDU consumes a meta data item of type CAN_ID_32.
        Introduction: Please note: This sub container is only required when J1939TpTxProtocolType is 
        J1939TP_PROTOCOL_CMDT or when it is not configured at all.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_740</srcid><srcstatus/><internalId>1007</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01006_Err_J1939Tp_Invalid_Metadata_RxFcNPdu</srcid><srcstatus/><internalId>1607</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01023_Err_J1939Tp_Invalid_MetadataRef_RxFCPdus</srcid><srcstatus/><internalId>1624</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00145</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxFcNPduId
        Parameter Type: Integer
        Parent Containers: J1939TpRxFcNPdu,
        Description: The N-PDU identifier used for communication with CanIf.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_751</srcid><srcstatus/><internalId>1008</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00146</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxFcNPduRef
        Parameter Type: Reference
        Parent Containers: J1939TpRxFcNPdu,
        Description: Reference to the Pdu object representing the N-PDU.
        Introduction: Please note: When two channels have identical but exchanged source and 
        destination addresses, the Pdu referenced by this parameter is shared with J1939TpRxCmNPduRef 
        of the corresponding J1939TpRxChannel.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_768</srcid><srcstatus/><internalId>1009</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00147</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxNSdu
        Container Type: Sub-Container
        Parent Containers: J1939TpTxPg,
        Description: This container describes the parameters that are relevant for the transmission of 
        a specific N-SDU. This N-SDU consumes meta data items of type SOURCE_ADDRESS_16, 
        TARGET_ADDRESS_16, and PRIORITY_8.
        Lower Multiplicity: 1
        infinite
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_934</srcid><srcstatus/><internalId>1022</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00148</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxPgDynLength
        Parameter Type: Boolean
        Parent Containers: J1939TpTxPg,
        Description: This flag is set to TRUE when the N-SDU refers to a PGN with variable length.
        Introduction: Please note: When this attribute is TRUE, the sub container J1939TpTxDirectNPdu 
        is required.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_861</srcid><srcstatus/><internalId>1017</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00149</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxNSduId
        Parameter Type: Integer
        Parent Containers: J1939TpTxNSdu,
        Description: The N-SDU identifier used for communication with PduR.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_943</srcid><srcstatus/><internalId>1023</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01009_Err_J1939Tp_Invalid_Src_Addr_Metadata_4_TxSdu</srcid><srcstatus/><internalId>1610</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01010_Err_J1939Tp_Invalid_Src_Addr_Metadata_2_TxSdu</srcid><srcstatus/><internalId>1611</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01011_Err_J1939Tp_Invalid_Src_Addr_Metadata_1_TxSdu</srcid><srcstatus/><internalId>1612</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01014_Err_J1939Tp_Invalid_Dst_Addr_Metadata_4_TxSdu</srcid><srcstatus/><internalId>1615</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01016_Err_J1939Tp_Invalid_MetadataRef_TxSdu</srcid><srcstatus/><internalId>1617</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00150</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxPgPGN
        Parameter Type: Integer
        Parent Containers: J1939TpTxPg,
        Description: PGN of the referenced N-SDUs.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 262143 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_875</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00151</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxNSduRef
        Parameter Type: Reference
        Parent Containers: J1939TpTxNSdu,
        Description: Reference to the Pdu object representing the N-SDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_960</srcid><srcstatus/><internalId>1024</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01001_Err_J1939Tp_Invalid_TxNSduRef</srcid><srcstatus/><internalId>1602</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00158</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxCmNPduRef
        Parameter Type: Reference
        Parent Containers: J1939TpRxCmNPdu,
        Description: Reference to the Pdu object representing the N-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_299</srcid><srcstatus/><internalId>980</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00168</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxFcNPduTxConfId
        Parameter Type: Integer
        Parent Containers: J1939TpTxFcNPdu,
        Description: The N-PDU identifier used for Tx confirmation from CanIf.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_523</srcid><srcstatus/><internalId>996</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00169</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxDirectNPduTxConfId
        Parameter Type: Integer
        Parent Containers: J1939TpTxDirectNPdu,
        Description: The N-PDU identifier used for Tx confirmation from CanIf.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_903</srcid><srcstatus/><internalId>1020</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00170</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxCmNPduTxConfId
        Parameter Type: Integer
        Parent Containers: J1939TpTxCmNPdu,
        Description: The N-PDU identifier used for Tx confirmation from CanIf.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_786</srcid><srcstatus/><internalId>1011</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00171</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxDtNPduTxConfId
        Parameter Type: Integer
        Parent Containers: J1939TpTxDtNPdu,
        Description: The N-PDU identifier used for Tx confirmation from CanIf.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_821</srcid><srcstatus/><internalId>1014</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Internally used data types and functions shall be defined locally in the implementation source 
        files.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00007.data</srcid><srcstatus/><internalId>166</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00007.functions</srcid><srcstatus/><internalId>167</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939Tp module shall follow the recommendations of SAE J1939-21 [REF] if they are not 
        explicitly excluded in this document.
      </description>
      <comment>
        Rationale: This requirement is informational only
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.NotMandatoryJ1939_21</srcid><srcstatus/><internalId>483</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939Tp module shall have two global states, J1939TP_ON and J1939TP_OFF.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Tp_Typedefs.h_20</srcid><srcstatus/><internalId>493</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CHECK_INIT_4</srcid><srcstatus/><internalId>1285</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939Tp module shall be in the J1939TP_OFF state after power up.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_237</srcid><srcstatus/><internalId>503</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_RX_INDICATION_TEST_3</srcid><srcstatus/><internalId>1238</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RX_INDICATION_TEST_3</srcid><srcstatus/><internalId>1405</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        J1939Tp_Init() shall change to the internal state J1939TP_ON after successful initialization.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5119</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CHECK_INIT_2</srcid><srcstatus/><internalId>1283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939Tp module shall perform segmentation and reassembly tasks only when the J1939Tp is in 
        the J1939TP_ON state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00023.Segmentation</srcid><srcstatus/><internalId>288</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00023.Reassembly</srcid><srcstatus/><internalId>289</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The function J1939Tp_Init() shall initialize all global variables of the module and reset all 
        transport protocol connections.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00024.InitGlobalVar</srcid><srcstatus/><internalId>260</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00024.Reset.Tx</srcid><srcstatus/><internalId>261</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00024.Reset.Rx</srcid><srcstatus/><internalId>262</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If called when the J1939Tp module is in the global state J1939TP_ON, the function J1939Tp_Init(
        shall raise the development error J1939TP_E_REINIT and do nothing.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5125</srcid><srcstatus/><internalId>760</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CHECK_INIT_2</srcid><srcstatus/><internalId>1283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The function J1939Tp_Transmit() shall reject the transmit request and return the status value 
        E_NOT_OK if the transmission needs a transport protocol and the channel is occupied (see also [
        REF]
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5302</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_TRANSMIT_TEST_1</srcid><srcstatus/><internalId>1581</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        An Abort Reception feature shall indicate the upper layer that the reception of a given N-SDU 
        has been aborted. It uses the PduR_J1939TpRxIndication() with state E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00031.CMDT</srcid><srcstatus/><internalId>318</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00031.BAM</srcid><srcstatus/><internalId>319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        An Abort Transmission feature shall indicate the upper layer that the transmission of a given N-
        SDU has been aborted. It uses the callback function PduR_J1939TpTxConfirmation with E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00032.CMDT</srcid><srcstatus/><internalId>315</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00032.BAM</srcid><srcstatus/><internalId>316</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00032.DirectPg</srcid><srcstatus/><internalId>317</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        When J1939Tp_TxConfirmation() is called with result E_NOT_OK, the J1939Tp module shall abort 
        the corresponding session.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_535</srcid><srcstatus/><internalId>516</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1247</srcid><srcstatus/><internalId>562</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2066</srcid><srcstatus/><internalId>620</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_14</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_14</srcid><srcstatus/><internalId>1356</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_9</srcid><srcstatus/><internalId>1448</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_10</srcid><srcstatus/><internalId>1449</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_DIRECT_5</srcid><srcstatus/><internalId>1486</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_DIRECT_6</srcid><srcstatus/><internalId>1487</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_5</srcid><srcstatus/><internalId>1591</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_6</srcid><srcstatus/><internalId>1592</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        When receiving an N-PDU containing a TP.CM_BAM or a TP.CM_RTS the J1939Tp module shall first 
        notify the upper layer (PDU Router) before processing the frame reassembly. It uses the 
        PduR_J1939TpStartOfReception function with the following parameters:
        the Identifier of the corresponding N-SDU,
        depending on the configured meta data items: the SA, DA and Priority,
        the total Data Length (after reassembly) and
        a pointer to a location where the upper layer stores its currently available buffer size.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00038.RTS</srcid><srcstatus/><internalId>168</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00038.CM_BAM</srcid><srcstatus/><internalId>169</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        When configured, the transport protocol variant (BAM/CMDT, see ECUC_J1939Tp_00137 :) and the SA/
        DA (see ECUC_J1939Tp_00181 : / ECUC_J1939Tp_00180 :) shall be used for transmission. For N-SDUs 
        with MetaInfo, these parameters are optional. If SA or DA is not configured, the value provided 
        via the MetaData shall be used. If the transport protocol is not configured, it shall be chosen 
        based on the actual DA: BAM when DA is 0xFF, CMDT otherwise.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</srcid><srcstatus/><internalId>170</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00039.NOConfigSaDa</srcid><srcstatus/><internalId>171</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</srcid><srcstatus/><internalId>172</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939Tp module shall abort the reception like indicated in SWS_J1939Tp_00031 if any of the 
        following conditions occurs:
        The value returned by PduR_J1939TpStartOfReception via bufferSizePtr is smaller than the total 
        data length of the N-SDU when received via the direct N-PDU,
        the PduR_J1939TpCopyRxData function returns BUFREQ_E_NOT_OK, or
        the J1939Tp_CancelReceive function is called.
        In case of a BAM connection, no further activity is required. In case of a CMDT connection, a 
        CMDT Connection Abort shall be performed as described in SWS_J1939Tp_00097, and the connection 
        abort reason shall be set to 1 (Already in one or more connection managed sessions and cannot 
        support another) after the call to PduR_J1939TpStartOfReception, and to 2 (System resources 
        were needed for another task so this connection managed session was terminated) in the other 
        two cases.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00040.StartOfReception.Direct</srcid><srcstatus/><internalId>173</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00040.CopyRxData.BAM</srcid><srcstatus/><internalId>174</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00040.CopyRxData.CMDT</srcid><srcstatus/><internalId>175</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00040.CancelReceive.BAM</srcid><srcstatus/><internalId>176</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00040.CancelReceive.CMDT</srcid><srcstatus/><internalId>177</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        J1939Tp shall send the transport frames TP.CM and TP.DT and direct frames using the service 
        function CanIf_Transmit(
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00041.CM.BAM</srcid><srcstatus/><internalId>178</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00041.DT.BAM</srcid><srcstatus/><internalId>179</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</srcid><srcstatus/><internalId>180</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00041.directPg</srcid><srcstatus/><internalId>181</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00041.CM.CTS</srcid><srcstatus/><internalId>182</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00041.CM.RTS</srcid><srcstatus/><internalId>183</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00041.CM.Abort</srcid><srcstatus/><internalId>184</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00041.EndOfMsgAck</srcid><srcstatus/><internalId>185</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00041.CM.CTS0</srcid><srcstatus/><internalId>186</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Depending on the control byte of the initializing TP.CM frame (BAM or RTS), the J1939Tp module 
        shall use the variant BAM or CMDT of the J1939 transport protocol to handle the data reception.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00043.RTS</srcid><srcstatus/><internalId>187</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00043.BAM</srcid><srcstatus/><internalId>188</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The function J1939Tp_Transmit shall use the NSduId and the SduLength provided in the 
        PduInfoType structure. It shall not use the payload of N-SDUs, only the contained MetaData.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00045.NSduId</srcid><srcstatus/><internalId>189</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00045.SduLength</srcid><srcstatus/><internalId>190</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00045.MetaData</srcid><srcstatus/><internalId>191</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00046</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        For each TP.DT frame to be sent, the J1939Tp module shall previously call 
        PduR_J1939TpCopyTxData with the following parameters:
        the Identifier of the corresponding N-SDU,
        PduInfoType structure with up to 7 bytes as SduLength,
        the retry parameter, and
        a pointer to a location where the upper layer stores its currently available data.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00046.BAM</srcid><srcstatus/><internalId>192</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00046.DirectPg</srcid><srcstatus/><internalId>193</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00046.CMDT.Retry</srcid><srcstatus/><internalId>194</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</srcid><srcstatus/><internalId>195</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        After a transmission request from the upper layer, the J1939Tp module shall initiate the 
        transmission by sending:
        For CMDT: a TP.CM_RTS frame
        For BAM: a TP.CM_BAM frame
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00047.CMDT</srcid><srcstatus/><internalId>196</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00047.BAM</srcid><srcstatus/><internalId>197</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939Tp module shall abort the transmission session like specified in SWS_J1939Tp_00032 if 
        any of the following conditions occur:
        The upper Layer returns the PduR_J1939TpCopyTxData function call with BUFREQ_E_NOT_OK or
        the J1939Tp_CancelTransmit function is called.
        In case of a CMDT connection, a CMDT Connection Abort shall be performed as described in 
        SWS_J1939Tp_00097, and the connection abort reason shall be set to 2 (System resources were 
        needed for another task so this connection managed session was terminated)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00048.CopyTxData.Direct</srcid><srcstatus/><internalId>198</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00048.CopyTxData.CMDT</srcid><srcstatus/><internalId>199</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00048.CopyTxData.BAM</srcid><srcstatus/><internalId>200</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00048.CancelTransmit.BAM</srcid><srcstatus/><internalId>201</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00048.CancelTransmit.CMDT</srcid><srcstatus/><internalId>202</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        During reception, the N-SDU is identified by a combination of the PGN included in the payload 
        of TP.CM and, when the N-SDU has no MetaData, from the addressing information implicitly 
        encoded in the NPduIds or explicitly provided via the MetaData of the N-PDUs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00057.PGN</srcid><srcstatus/><internalId>203</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00057.SaDa</srcid><srcstatus/><internalId>204</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00060</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        API Function | Header File | Description 
        Det_ReportError | Det.h | Service to report development errors.
      </description>
      <comment>
        This requirement is informational only.
        Rationale: This requirement only informs about the external APIs used from other modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.NotMandatoryDet</srcid><srcstatus/><internalId>484</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00062</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Each connection shall be independent of the other connections.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00062.Tx.Timer</srcid><srcstatus/><internalId>311</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00062.Tx.State</srcid><srcstatus/><internalId>312</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00062.Rx.Timer</srcid><srcstatus/><internalId>313</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00062.Rx.State</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00064</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939Tp shall ignore unexpected N-PDUs that do not correspond to a currently active 
        connection.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00064.Data</srcid><srcstatus/><internalId>324</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00064.Bam</srcid><srcstatus/><internalId>325</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00064.Rts</srcid><srcstatus/><internalId>326</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00064.CTS</srcid><srcstatus/><internalId>327</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00064.Eom</srcid><srcstatus/><internalId>328</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00064.Abort</srcid><srcstatus/><internalId>329</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00068</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        According to [REF], all unused data bytes within the last TP.DT frame or the direct frame shall 
        be set to 0xFF.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</srcid><srcstatus/><internalId>292</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00068.Padding.BAM</srcid><srcstatus/><internalId>293</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00068.Padding.DirectPg</srcid><srcstatus/><internalId>294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        On errors and exceptions, the J1939Tp module shall not modify its current module state (see 
        Figure 7-1: J1939 Transport Layer life cycle) but shall simply report the error event.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.NoErrorReporting</srcid><srcstatus/><internalId>479</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00076</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The global state (see SWS_J1939Tp_00019) shall be used to check if the module has been 
        initialized before calling an API.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_13</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CHECK_INIT_4</srcid><srcstatus/><internalId>1285</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00087</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Tp_Init 
        Syntax 
        void J1939Tp_Init (const J1939Tp_ConfigType* ConfigPtr)
        Service ID [hex] | 0x01 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | ConfigPtr | Pointer to configuration data structure.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | This function initializes the J1939Tp module.
        Available via | J1939Tp.h 
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5032</srcid><srcstatus/><internalId>748</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_ComTest_APISyntax_1</srcid><srcstatus/><internalId>1117</internalId></linkedfrom><linkedfrom><srcid>TS_J1939Tp_ComTest_02_APISyntax_1</srcid><srcstatus/><internalId>1118</internalId></linkedfrom><linkedfrom><srcid>J1939Tp_Compile_NoRxChannels</srcid><srcstatus/><internalId>1125</internalId></linkedfrom><linkedfrom><srcid>J1939Tp_Compile_NoTxChannels</srcid><srcstatus/><internalId>1126</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_RX_INDICATION_TEST_1</srcid><srcstatus/><internalId>1236</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_RX_INDICATION_TEST_7</srcid><srcstatus/><internalId>1242</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_ECUC_NOT_OK_TEST_2</srcid><srcstatus/><internalId>1269</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHECK_INIT_1</srcid><srcstatus/><internalId>1282</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_NOCHANNELS_1</srcid><srcstatus/><internalId>1299</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RX_INDICATION_TEST_1</srcid><srcstatus/><internalId>1403</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RX_INDICATION_TEST_7</srcid><srcstatus/><internalId>1409</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_SEQUENCE_NUMBER_VALIDATION</srcid><srcstatus/><internalId>1642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00089</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Tp_GetVersionInfo 
        Syntax 
        void J1939Tp_GetVersionInfo (Std_VersionInfoType* VersionInfo)
        Service ID [hex] | 0x03 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | VersionInfo | Pointer to the location where the version information of 
        J1939Tp shall be stored.
        Return value | None 
        Description | Returns the version information of J1939Tp.
        Available via | J1939Tp.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4995</srcid><srcstatus/><internalId>747</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_GET_VERSION_INFO_TEST_1</srcid><srcstatus/><internalId>1279</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_GET_VERSION_INFO_TEST_2</srcid><srcstatus/><internalId>1280</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_GET_VERSION_INFO_TEST_3</srcid><srcstatus/><internalId>1281</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00093</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Tp_Shutdown 
        Syntax 
        void J1939Tp_Shutdown (void)
        Service ID [hex] | 0x02 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | This function is used to shutdown the J1939Tp module.
        Available via | J1939Tp.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5151</srcid><srcstatus/><internalId>763</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SHUTDOWN_TEST_1</srcid><srcstatus/><internalId>1412</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00094</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        J1939Tp_Shutdown() shall close all pending transport protocol connections, free all resources 
        and set the J1939Tp module into the global state J1939TP_OFF state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5157</srcid><srcstatus/><internalId>764</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SHUTDOWN_TEST_1</srcid><srcstatus/><internalId>1412</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00095</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        J1939Tp_Shutdown() shall not raise a notification about the pending frame transmission or 
        reception.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5158</srcid><srcstatus/><internalId>765</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SHUTDOWN_TEST_1</srcid><srcstatus/><internalId>1412</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00096</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Tp_Transmit 
        Syntax 
        Std_ReturnType J1939Tp_Transmit (PduIdType TxPduId, const PduInfoType* PduInfoPtr)
        Service ID [hex] | 0x49 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in) | TxPduId | Identifier of the PDU to be transmitted 
        PduInfoPtr | Length of and pointer to the PDU data and pointer to MetaData.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: Transmit request has been accepted.E_NOT_OK: Transmit 
        request has not been accepted.
        Description | Requests transmission of a PDU.
        Available via | J1939Tp.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5182</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_ABORT_3</srcid><srcstatus/><internalId>1415</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_3</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_8</srcid><srcstatus/><internalId>1554</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_8</srcid><srcstatus/><internalId>1562</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TRANSMIT_TEST_4</srcid><srcstatus/><internalId>1584</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TX_STATE_VALIDATION</srcid><srcstatus/><internalId>1631</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CMDT_TX_STATE_VALIDATION</srcid><srcstatus/><internalId>1632</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_DIRECT_TX_STATE_VALIDATION</srcid><srcstatus/><internalId>1635</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00097</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        An Abort CMDT Connection feature shall indicate to the other ECU participating in the concerned 
        connection that the current CMDT session (transmission or reception) cannot be completed 
        successfully. A TP.Conn_Abort abort message shall be transmitted to the other ECU via CAN as 
        specified by [REF]
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00097.Transmission</srcid><srcstatus/><internalId>298</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00097.Reception</srcid><srcstatus/><internalId>299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00098</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If a TP.Conn_Abort frame is received after a TP.CM_RTS frame has been successfully sent by the 
        ECU, the transmission shall be aborted like indicated in SWS_J1939Tp_00032. No transmission of 
        TP.Conn_Abort is necessary.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5713</srcid><srcstatus/><internalId>819</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_4</srcid><srcstatus/><internalId>1443</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_5</srcid><srcstatus/><internalId>1444</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_4</srcid><srcstatus/><internalId>1494</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_5</srcid><srcstatus/><internalId>1495</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00100</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If a timeout occurs during CMDT transmission (see [REF] for details) then the J1939Tp module 
        shall abort the transmission session
        as specified in SWS_J1939Tp_00032 and
        as specified in SWS_J1939Tp_00097 with connection abort reason 3 (A timeout occurred and this 
        is the connection abort to close the session) when the timeout occurred after successful 
        transmission of the TP.CM_RTS frame.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00100.Tx.T3</srcid><srcstatus/><internalId>205</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00100.Tx.T4</srcid><srcstatus/><internalId>206</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00100.Tx.Tr</srcid><srcstatus/><internalId>207</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00101</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The function J1939Tp_Transmit shall reject a request, if the J1939Tp_Transmit service is called 
        for an N-SDU identifier that is being used in a currently running J1939 Transport Layer session.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5303</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_TRANSMIT_TEST_1</srcid><srcstatus/><internalId>1581</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00104</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Tp_MainFunction 
        Syntax 
        void J1939Tp_MainFunction (void)
        Service ID [hex] | 0x04 
        Description | Main function of the J1939Tp. Used for scheduling purposes and timeout 
        supervision.
        Available via | SchM_J1939Tp.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4941</srcid><srcstatus/><internalId>742</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_ECUC_NOT_OK_TEST_1</srcid><srcstatus/><internalId>1268</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_ECUC_NOT_OK_TEST_4</srcid><srcstatus/><internalId>1271</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_MAINFUNCTION_TEST</srcid><srcstatus/><internalId>1298</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_DIRECT_ABORT_2</srcid><srcstatus/><internalId>1599</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00106</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The calling frequency of the function J1939Tp_MainFunction is determined by the parameter 
        J1939TpMainFunctionPeriod (see ECUC_J1939Tp_00044 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Tp_Bswmd.arxml.m4_43</srcid><srcstatus/><internalId>1046</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00108</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Tp_RxIndication 
        Syntax 
        void J1939Tp_RxIndication (PduIdType RxPduId, const PduInfoType* PduInfoPtr)
        Service ID [hex] | 0x42 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in) | RxPduId | ID of the received PDU.
        PduInfoPtr | Contains the length (SduLength) of the received PDU, a pointer to a buffer (
        SduDataPtr) containing the PDU, and the MetaData related to this PDU.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | Indication of a received PDU from a lower layer communication interface module.
        Available via | J1939Tp.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_Main_Rx_Abort_Idle</srcid><srcstatus/><internalId>1432</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_Main_Rx_CM_8_Bytes</srcid><srcstatus/><internalId>1433</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_DIRECT_RX_STATE_VALIDATION</srcid><srcstatus/><internalId>1636</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.VarPduInfoPtr</srcid><srcstatus/><internalId>481</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00110</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The function J1939Tp_RxIndication shall be callable in interrupt context (it could be called 
        from the CAN receive interrupt)
      </description>
      <comment>
        This requirement is informational only.
        Rationale: This requirement only informs about the external APIs used from other modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.NotMandatoryRxIndInterrupt</srcid><srcstatus/><internalId>485</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00112</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Tp_TxConfirmation 
        Syntax 
        void J1939Tp_TxConfirmation (PduIdType TxPduId, Std_ReturnType result)
        Service ID [hex] | 0x40 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in) | TxPduId | ID of the PDU that has been transmitted.
        result | E_OK: The PDU was transmitted. E_NOT_OK: Transmission of the PDU failed.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | The lower layer communication interface module confirms the transmission of a PDU,
        or the failure to transmit a PDU.
        Available via | J1939Tp.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8094</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_4</srcid><srcstatus/><internalId>1590</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_10</srcid><srcstatus/><internalId>1596</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_11</srcid><srcstatus/><internalId>1597</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00114</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The function J1939Tp_TxConfirmation shall be callable in interrupt context (it could be called 
        from the CAN transmit interrupt)
      </description>
      <comment>
        This requirement is informational only.
        Rationale: This requirement only informs about the external APIs used from other modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.NotMandatoryTxConfInterrupt</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00115</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Type of error | Related error code | Error value 
        API service used in state J1939TP_OFF | J1939TP_E_UNINITJ1939Tp.J1939TP_E_UNINIT | 0x01 
        J1939Tp_Init() called in state J1939TP_ON. | J1939TP_E_REINITJ1939Tp.J1939TP_E_REINIT | 0x02 
        J1939Tp_Init() was called with an invalid configuration pointer | J1939TP_E_INIT_FAILEDJ1939Tp.
        J1939TP_E_INIT_FAILED | 0x03 
        API service called with null pointer. | J1939TP_E_PARAM_POINTERJ1939Tp.J1939TP_E_PARAM_POINTER 
        0x10 
        API service called with wrong ID. | J1939TP_E_INVALID_PDU_SDU_IDJ1939Tp.
        J1939TP_E_INVALID_PDU_SDU_ID | 0x11 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00115.E_UNINIT</srcid><srcstatus/><internalId>269</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00115.E_REINIT</srcid><srcstatus/><internalId>270</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00115.E_INIT_FAILED</srcid><srcstatus/><internalId>271</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00115.E_PARAM_POINTER</srcid><srcstatus/><internalId>272</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00115.E_INVALID_PDU_SDU_ID</srcid><srcstatus/><internalId>273</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00116</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        API Function | Header File | Description 
        CanIf_Transmit | CanIf.h | Requests transmission of a PDU.
        Det_ReportRuntimeError | Det.h | Service to report runtime errors. If a callout has been 
        configured then this callout shall be called.
        PduR_J1939TpCopyRxData | PduR_J1939Tp.h | This function is called to provide the received data 
        of an I-PDU segment (N-PDU) to the upper layer. Each call to this function provides the next 
        part of the I-PDU data. The size of the remaining buffer is written to the position indicated 
        by bufferSizePtr.
        PduR_J1939TpCopyTxData | PduR_J1939Tp.h | This function is called to acquire the transmit data 
        of an I-PDU segment (N-PDU). Each call to this function provides the next part of the I-PDU 
        data unless retry-&gt;TpDataState is TP_DATARETRY. In this case the function restarts to copy the 
        data beginning at the offset from the current position indicated by retry-&gt;TxTpDataCnt. The 
        size of the remaining data is written to the position indicated by availableDataPtr.
        PduR_J1939TpRxIndication | PduR_J1939Tp.h | Called after an I-PDU has been received via the TP 
        API, the result indicates whether the transmission was successful or not.
        PduR_J1939TpStartOfReception | PduR_J1939Tp.h | This function is called at the start of 
        receiving an N-SDU. The N-SDU might be fragmented into multiple N-PDUs (FF with one or more 
        following CFs) or might consist of a single N-PDU (SF). The service shall provide the currently 
        available maximum buffer size when invoked with TpSduLength equal to 0.
        PduR_J1939TpTxConfirmation | PduR_J1939Tp.h | This function is called after the I-PDU has been 
        transmitted on its network, the result indicates whether the transmission was successful or not.
      </description>
      <comment>
        This requirement is informational only.
        Rationale: This requirement only informs about the external APIs used from other modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.NotMandatoryPdur</srcid><srcstatus/><internalId>487</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00118</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        A close connection feature shall indicate the upper layer that the transport reception session 
        is completed. It uses the PduR_J1939TpRxIndication() with E_OK to indicate that the N-SDU 
        reception is successfully processed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00118.CMDT</srcid><srcstatus/><internalId>208</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00118.BAM</srcid><srcstatus/><internalId>209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00119</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        When the transport transmission session is successfully completed, the J1939Tp module shall 
        call a notification service of the upper layer, PduR_J1939TpTxConfirmation, with the result 
        E_OK, to notify that the N-SDU transfer is successfully processed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00119.Trans.BAM</srcid><srcstatus/><internalId>210</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</srcid><srcstatus/><internalId>211</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00119.Trans.Direct</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00120</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939Tp shall be able to handle connections in parallel for all N-SDUs that do not 
        interfere in the usage of TP.DT frames with the same SA and DA. For channels with defined SA/DA 
        and protocol type, only one TP connection and one direct connection for each PG can be open at 
        any time. For channels with variable SA/DA, the maximum number of parallel connections is 
        limited by the number of N-SDUs assigned to this channel.
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7701</srcid><srcstatus/><internalId>907</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_PGN_SAME_SA_DA_LEGACY_SESSION_NUMB_FORMAT</srcid><srcstatus/><internalId>1231</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_PGN_DIFF_SA_DA</srcid><srcstatus/><internalId>1234</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_PGN_SAME_SA_DA</srcid><srcstatus/><internalId>1235</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_RCV_TWO_CMDT_SAME_PGN</srcid><srcstatus/><internalId>1402</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1471</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM_Fast_Confirmation</srcid><srcstatus/><internalId>1472</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_TWO_CMDT</srcid><srcstatus/><internalId>1473</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM_PARALLELFEATURE</srcid><srcstatus/><internalId>1476</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM_Fast_Confirmation_PARALLELFEATURE</srcid><srcstatus/><internalId>1477</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_TWO_CMDT_PARALLELFEATURE</srcid><srcstatus/><internalId>1478</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_Direct</srcid><srcstatus/><internalId>1479</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_Direct_Immediate</srcid><srcstatus/><internalId>1480</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_Direct_3</srcid><srcstatus/><internalId>1481</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00121</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        J1939Tp shall implement the BAM related timing constraints (50ms, Tr, T1) as described in [REF]
        They supervise the BAM data flow.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00121.tbammin</srcid><srcstatus/><internalId>306</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00121.Tr</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00121.T1</srcid><srcstatus/><internalId>308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00123</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        J1939Tp shall implement all CMDT related timing constraints (Tr, Th, T1, T2, T3, T4) as 
        described in [REF]. They supervise the CMDT data flow.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00123.Tr</srcid><srcstatus/><internalId>300</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00123.Th</srcid><srcstatus/><internalId>301</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00123.T1</srcid><srcstatus/><internalId>302</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00123.T2</srcid><srcstatus/><internalId>303</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00123.T3</srcid><srcstatus/><internalId>304</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00123.T4</srcid><srcstatus/><internalId>305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00125</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939 Transport Layer shall be configurable to either use both BAM and CMDT transport 
        protocol variants, or only BAM, or only CMDT.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_211</srcid><srcstatus/><internalId>975</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_671</srcid><srcstatus/><internalId>1004</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00155</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939 transport layer shall implement the following two J1939 transport protocol variants 
        defined in [REF]
        BAM for broadcast transmission
        CMDT for point-to-point transmission
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00155.BAMTransmission</srcid><srcstatus/><internalId>290</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00155.CMDTTransmission</srcid><srcstatus/><internalId>291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00157</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        All service interfaces provided to the lower layer shall be independent of the internal 
        communication configuration and implementation of the J1939Tp.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00157.Configuration</srcid><srcstatus/><internalId>295</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00157.TxConfirmation</srcid><srcstatus/><internalId>296</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00157.RxIndication</srcid><srcstatus/><internalId>297</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00159</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If a timeout occurs during reception (see [REF] for details) then the J1939Tp module shall 
        abort the reception session
        as specified in SWS_J1939Tp_00031 and
        as specified in SWS_J1939Tp_00097 with connection abort reason 3 (A timeout occurred and this 
        is the connection abort to close the session)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00159.Rx.T1</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00159.Rx.T2</srcid><srcstatus/><internalId>214</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</srcid><srcstatus/><internalId>215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00160</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If a timeout occurs during the BAM reception, the J1939Tp module shall abort the reception 
        session as specified in SWS_J1939Tp_00031.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2371</srcid><srcstatus/><internalId>640</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2595</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_1</srcid><srcstatus/><internalId>1247</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_BAM_1</srcid><srcstatus/><internalId>1300</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00162</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        After the reception of an N-PDU containing a TP.DT frame, the function PduR_J1939TpCopyRxData 
        shall be called with the following parameters:
        the Identifier of the corresponding N-SDU,
        PduInfoPtr with max. 7 bytes of data,
        a pointer to a location where the upper layer stores its currently available buffer size.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00162.CMDT</srcid><srcstatus/><internalId>216</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00162.BAM</srcid><srcstatus/><internalId>217</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00162.DirectPg</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00163</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If a TP.Conn_Abort frame is received after a TP.CM_RTS frame has been received, the reception 
        shall be aborted like indicated in SWS_J1939Tp_00031. No transmission of TP.Conn_Abort is 
        necessary.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5714</srcid><srcstatus/><internalId>820</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_NO_DEV</srcid><srcstatus/><internalId>1133</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_5</srcid><srcstatus/><internalId>1138</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_5</srcid><srcstatus/><internalId>1170</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_5</srcid><srcstatus/><internalId>1320</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_5</srcid><srcstatus/><internalId>1347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00165</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpTxDynamicBlockCalculation is enabled, after J1939Tp_Transmit has been called, the 
        J1939Tp shall call PduR_J1939TpCopyTxData once with info-&gt;SduLength set to 0 and retry set to 
        NULL_PTR to obtain the available amount of data via availableDataPtr.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1490</srcid><srcstatus/><internalId>582</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>103</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00173</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939Tp module shall abort the reception silently if any of the following conditions occurs:
        The PduR_J1939TpStartOfReception function returns BUFREQ_E_NOT_OK or BUFREQ_E_OVFL or
        the protocol chosen in SWS_J1939Tp_00043 does not match the transport protocol configured for 
        the transported PGN (see ECUC_J1939Tp_00029 :) or
        the SA/DA of N-PDUs with MetaData do not match the configured SA/DA (see ECUC_J1939Tp_00179 : /
        ECUC_J1939Tp_00178 
        In case of a BAM connection, no further activity is required. In case of a CMDT connection, a 
        CMDT Connection Abort shall be performed as described in SWS_J1939Tp_00097, and the connection 
        abort reason shall be set to 1 (Already in one or more connection managed sessions and cannot 
        support another)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00173.TransProtocol.BAM</srcid><srcstatus/><internalId>219</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</srcid><srcstatus/><internalId>220</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00173.DiffSaDa</srcid><srcstatus/><internalId>221</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00173.StartOfReception.CMDT</srcid><srcstatus/><internalId>222</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00173.StartOfReception.BAM</srcid><srcstatus/><internalId>223</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00175</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name | J1939Tp_ConfigType 
        Kind | Structure 
        Elements | implementation specific 
        Type 
        Comment | The content of the initialization data structure is implementation specific.
        Description | Data structure containing post-build configuration data of J1939-TP.
        Available via | J1939Tp.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5033</srcid><srcstatus/><internalId>749</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00176</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Tp_CancelReceive 
        Syntax 
        Std_ReturnType J1939Tp_CancelReceive (PduIdType RxPduId)
        Service ID [hex] | 0x4c 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | RxPduId | Identification of the PDU to be cancelled.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: Cancellation was executed successfully by the destination 
        module.E_NOT_OK: Cancellation was rejected by the destination module.
        Description | Requests cancellation of an ongoing reception of a PDU in a lower layer transport 
        protocol module.
        Available via | J1939Tp.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5476</srcid><srcstatus/><internalId>797</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_CMDT_CancelReceive_1</srcid><srcstatus/><internalId>1198</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_CMDT_CancelReceive_4</srcid><srcstatus/><internalId>1201</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CMDT_CancelReceive_1</srcid><srcstatus/><internalId>1371</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CMDT_CancelReceive_4</srcid><srcstatus/><internalId>1374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00177</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Tp_CancelTransmit 
        Syntax 
        Std_ReturnType J1939Tp_CancelTransmit (PduIdType TxPduId)
        Service ID [hex] | 0x4a 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in) | TxPduId | Identification of the PDU to be cancelled.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: Cancellation was executed successfully by the destination 
        module.E_NOT_OK: Cancellation was rejected by the destination module.
        Description | Requests cancellation of an ongoing transmission of a PDU in a lower layer 
        communication module.
        Available via | J1939Tp.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5367</srcid><srcstatus/><internalId>786</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_CANCELTRANSMIT_2</srcid><srcstatus/><internalId>1420</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_CANCELTRANSMIT_2</srcid><srcstatus/><internalId>1426</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CancelTransmit_1</srcid><srcstatus/><internalId>1464</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CancelTransmit_3</srcid><srcstatus/><internalId>1466</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CancelTransmit_4</srcid><srcstatus/><internalId>1467</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00180</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Tp_ChangeParameter 
        Syntax 
        Std_ReturnType J1939Tp_ChangeParameter (PduIdType id, TPParameterType parameter, uint16 value)
        Service ID [hex] | 0x4b 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | id | Identification of the PDU which the parameter change shall affect.
        parameter | ID of the parameter that shall be changed.
        value | The new value of the parameter.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: The parameter was changed successfully.E_NOT_OK: The 
        parameter change was rejected.
        Description | Request to change a specific transport protocol parameter (e.g. block size)
        Available via | J1939Tp.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5572</srcid><srcstatus/><internalId>809</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_13</srcid><srcstatus/><internalId>1146</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_13</srcid><srcstatus/><internalId>1178</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHANGE_PARAMETER_TEST_1</srcid><srcstatus/><internalId>1263</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHANGE_PARAMETER_TEST_5</srcid><srcstatus/><internalId>1267</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_13</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_13</srcid><srcstatus/><internalId>1355</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00187</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The provided ConfigPtr shall only be used, when post-build configuration is enabled, or when 
        different configuration variants must be supported. Otherwise, the parameters should be 
        accessed directly to avoid indirection via the ConfigPtr.
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations, and in some places in implementation.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5050</srcid><srcstatus/><internalId>751</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_51</srcid><srcstatus/><internalId>965</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_1038</srcid><srcstatus/><internalId>1029</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_PBSELECTABLE</srcid><srcstatus/><internalId>1127</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHECK_INIT_5</srcid><srcstatus/><internalId>1286</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHECK_INIT_6</srcid><srcstatus/><internalId>1287</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHECK_INIT_7</srcid><srcstatus/><internalId>1288</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHECK_INIT_8</srcid><srcstatus/><internalId>1289</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHECK_INIT_9</srcid><srcstatus/><internalId>1290</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHECK_PBCFG_INIT_1</srcid><srcstatus/><internalId>1291</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHECK_PBCFG_INIT_2</srcid><srcstatus/><internalId>1292</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHECK_PBCFG_INIT_3</srcid><srcstatus/><internalId>1293</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHECK_PBCFG_INIT_4</srcid><srcstatus/><internalId>1294</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHECK_INIT_NO_DEV_1</srcid><srcstatus/><internalId>1295</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHECK_INIT_NO_DEV_2</srcid><srcstatus/><internalId>1296</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHECK_INIT_NO_DEV_3</srcid><srcstatus/><internalId>1297</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00188</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If development error detection for the J1939Tp is enabled, all APIs using a SDU- or PDU-
        Identifier shall check the input Identifier and raise the development error: 
        J1939TP_E_INVALID_PDU_SDU_ID in case the API has been called for a not configured PDU or SDU.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00188.Transmit</srcid><srcstatus/><internalId>263</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00188.CancelTransmit</srcid><srcstatus/><internalId>264</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00188.CancelReceive</srcid><srcstatus/><internalId>265</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00188.ChangeParameter</srcid><srcstatus/><internalId>266</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00188.RxIndication</srcid><srcstatus/><internalId>267</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00188.TxConfirmation</srcid><srcstatus/><internalId>268</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00192</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        After a sequence error, J1939Tp shall abort BAM connections as specified in SWS_J1939Tp_00031.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1179</srcid><srcstatus/><internalId>559</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_2</srcid><srcstatus/><internalId>1248</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_BAM_2</srcid><srcstatus/><internalId>1301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00194</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpTxRetrySupport is disabled, when the J1939Tp receives a TP.CM_CTS frame requesting 
        already sent data, it shall abort the transmission using the mechanisms described by 
        SWS_J1939Tp_00032 and SWS_J1939Tp_00097 with reason 255 (unassigned)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7355</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_RETRY_TRSMT_2</srcid><srcstatus/><internalId>1574</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RETRY_TRSMT_2</srcid><srcstatus/><internalId>1578</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_7</srcid><srcstatus/><internalId>1593</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00195</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If a TP.CM_CTS wait frame (number of packets set to 0, see also [REF]) is received, the J1939Tp 
        shall wait for another TP.CM_CTS frame.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7296</srcid><srcstatus/><internalId>878</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_2</srcid><srcstatus/><internalId>1535</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_2</srcid><srcstatus/><internalId>1538</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_2</srcid><srcstatus/><internalId>1541</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_2</srcid><srcstatus/><internalId>1544</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00174</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpCancellationSupport
        Parameter Type: Boolean
        Parent Containers: J1939TpGeneral,
        Description: Enable transmit and receive cancellation.
        Introduction: The APIs J1939Tp_CancelTransmit() and J1939Tp_CancelReceive() will only be 
        available when this parameter is enabled.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_1018</srcid><srcstatus/><internalId>1028</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00178</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxDa
        Parameter Type: Integer
        Parent Containers: J1939TpRxChannel,
        Description: Destination address (DA) of this channel. This parameter is only required for 
        channels with fixed DA which use N-PDUs with MetaData containing the DA.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: true
        Post-Build-Variant-Value: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 253 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_119</srcid><srcstatus/><internalId>970</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00179</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxSa
        Parameter Type: Integer
        Parent Containers: J1939TpRxChannel,
        Description: Source address (SA) of this channel. This parameter is only required for channels 
        with fixed SA which use N-PDUs with MetaData containing the SA.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: true
        Post-Build-Variant-Value: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 253 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_255</srcid><srcstatus/><internalId>977</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00180</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxDa
        Parameter Type: Integer
        Parent Containers: J1939TpTxChannel,
        Description: Destination address (DA) of this channel. This parameter is only required for 
        channels with fixed DA which use N-PDUs with MetaData containing the DA.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: true
        Post-Build-Variant-Value: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 253 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_602</srcid><srcstatus/><internalId>1000</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00181</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxSa
        Parameter Type: Integer
        Parent Containers: J1939TpTxChannel,
        Description: Source address (SA) of this channel. This parameter is only required for channels 
        with fixed SA which use N-PDUs with MetaData containing the SA.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: true
        Post-Build-Variant-Value: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 253 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_717</srcid><srcstatus/><internalId>1006</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00184</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxNSduId
        Parameter Type: Integer
        Parent Containers: J1939TpRxNSdu,
        Description: This is a unique identifier for a received N-SDU. This Id is used in the 
        CancelReceive and ChangeParameter API call.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_440</srcid><srcstatus/><internalId>991</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01012_Err_J1939Tp_Invalid_Src_Addr_Metadata_4_RxSdu</srcid><srcstatus/><internalId>1613</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01013_Err_J1939Tp_Invalid_Src_Addr_Metadata_2_RxSdu</srcid><srcstatus/><internalId>1614</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01015_Err_J1939Tp_Invalid_Dst_Addr_Metadata_4_RxSdu</srcid><srcstatus/><internalId>1616</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01017_Err_J1939Tp_Invalid_MetadataRef_RxSdu</srcid><srcstatus/><internalId>1618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00185</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxRetrySupport
        Parameter Type: Boolean
        Parent Containers: J1939TpRxChannel,
        Description: Enable support for triggering repetition of failed transmission using TP.CM_CTS 
        with a packet number that has already been sent. Retransmission is triggered when a sequence 
        number is missing or a timeout occurs during reception.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_234</srcid><srcstatus/><internalId>976</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00186</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxCancellationSupport
        Parameter Type: Boolean
        Parent Containers: J1939TpRxChannel,
        Description: Enable receive cancellation using the API J1939Tp_CancelReceive() for this channel.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_84</srcid><srcstatus/><internalId>969</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00187</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxDynamicBlockCalculation
        Parameter Type: Boolean
        Parent Containers: J1939TpRxChannel,
        Description: Enable dynamic calculation of "number of packets that can be sent" value in TP.
        CM_CTS, based on the size of buffers in upper layers reported via StartOfReception and 
        PduR_J1939TpCopyRxData.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_142</srcid><srcstatus/><internalId>971</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00188</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxDynamicBufferRatio
        Parameter Type: Integer
        Parent Containers: J1939TpRxChannel,
        Description: Percentage of available buffer that shall be used for retry.
        Introduction: This parameter is only applicable when "J1939TpRxRetrySupport" and "
        J1939TpRxDynamicBlockCalculation" are enabled.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 100 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_162</srcid><srcstatus/><internalId>972</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00189</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpRxPacketsPerBlock
        Parameter Type: Integer
        Parent Containers: J1939TpRxChannel,
        Description: Number of TP.DT frames the receiving J1939Tp module allows the sender to send 
        before waiting for another TP.CM_CTS. This parameter is transmitted in the TP.CM_CTS frame, and 
        is thus only relevant for reception of messages via CMDT. When J1939TpRxDynamicBlockCalculation 
        is enabled, this parameter specifies a maximum for the calculated value. For further details on 
        this parameter value see SAE J1939/21.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 255 (Type:
        Min-Value: 1 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_186</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00190</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxMaxPacketsPerBlock
        Parameter Type: Integer
        Parent Containers: J1939TpTxChannel,
        Description: Maximum number of TP.DT frames the transmitting J1939Tp module is ready to send 
        before waiting for another TP.CM_CTS. This parameter is transmitted in the TP.CM_RTS frame, and 
        is thus only relevant for transmission of messages via CMDT. When 
        J1939TpTxDynamicBlockCalculation is enabled, this parameter specifies a maximum for the 
        calculated value. For further details on this parameter value see SAE J1939/21.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 255 (Type:
        Min-Value: 1 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_646</srcid><srcstatus/><internalId>1002</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00191</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxDynamicBlockCalculation
        Parameter Type: Boolean
        Parent Containers: J1939TpTxChannel,
        Description: Enable dynamic calculation of "maximum number of packets that can be sent" value 
        in TP.CM_RTS, based on the available amount of data in upper layers reported via 
        PduR_J1939TpCopyTxData.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_625</srcid><srcstatus/><internalId>1001</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00192</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxCancellationSupport
        Parameter Type: Boolean
        Parent Containers: J1939TpTxChannel,
        Description: Enable transmit cancellation using the API J1939Tp_CancelTransmit() for this 
        channel.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_566</srcid><srcstatus/><internalId>999</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00193</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939TpTxRetrySupport
        Parameter Type: Boolean
        Parent Containers: J1939TpTxChannel,
        Description: Enable support for repetition of failed transmission using TP.CM_CTS with a packet 
        number that has already been sent. Retransmission is handled via the retry feature of 
        PduR_J1939TpCopyTxData.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_697</srcid><srcstatus/><internalId>1005</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00084</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The consistency of the configuration must be checked by the configuration tool at configuration 
        time. Configuration rules and constraints for plausibility checks will be performed where 
        possible, during configuration time.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp_Extension.xdm.m4_28</srcid><srcstatus/><internalId>1034</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00198</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939 Transport Layer shall use meta data items of type SOURCE_ADDRESS_16, 
        TARGET_ADDRESS_16, and PRIORITY_8 of all N-SDUs, and meta data items of type CAN_ID_32 for all 
        N-PDUs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00198.NSDU.NoMetaData</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDa</srcid><srcstatus/><internalId>225</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</srcid><srcstatus/><internalId>226</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00198.NSDU.Sa</srcid><srcstatus/><internalId>227</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00198.NPDU.NoMetaData</srcid><srcstatus/><internalId>228</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</srcid><srcstatus/><internalId>229</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00198.NPDU.Direct</srcid><srcstatus/><internalId>230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00199</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        During transmission, the relevant set of N-PDUs is identified by the configured SA/DA of N-SDUs 
        without MetaData, or by the SA/DA explicitly provided in the MetaData by the upper layer.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00199.MetaData</srcid><srcstatus/><internalId>322</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00199.NoMetaData</srcid><srcstatus/><internalId>323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00200</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939 Transport Layer module shall send TP.DT frames always with 8 bytes according to [REF]
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Tp_Typedefs.h_75</srcid><srcstatus/><internalId>494</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00203</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        J1939Tp_CancelTransmit shall return E_NOT_OK if 'TxPduId' is invalid, if 'TxPduId' is currently 
        not active, if currently a direct frame is transmitted, if the last TP.DT frame has already 
        been transmitted during BAM transmission, or if the TP.CM_EOMAck frame has already been 
        received during CMDT transmission.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00203.TxPduId.invalid</srcid><srcstatus/><internalId>231</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00203.TxPduId.NotActive</srcid><srcstatus/><internalId>232</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00203.Transmitted.DirectPg</srcid><srcstatus/><internalId>233</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00203.Transmitted.BAM</srcid><srcstatus/><internalId>234</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00203.Transmitted.CMDT</srcid><srcstatus/><internalId>235</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00204</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        J1939Tp_CancelReceive shall return E_NOT_OK if 'RxPduId' is invalid, if 'RxPduId' is currently 
        not active, if currently a direct frame is received, if the last TP.DT frame has already been 
        received during BAM reception, or if the TP.CM_EOMAck frame has already been sent during CMDT 
        reception.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00204.RxPduId.Invalid</srcid><srcstatus/><internalId>236</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00204.RxPduId.NotActive</srcid><srcstatus/><internalId>237</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00204.received.DirectPg</srcid><srcstatus/><internalId>238</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00204.received.BAM</srcid><srcstatus/><internalId>239</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00204.received.CMDT</srcid><srcstatus/><internalId>240</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00206</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        J1939Tp_ChangeParameter shall return E_NOT_OK if 'id' is invalid, if 'parameter' is not TP_BS, 
        or if 'value' is larger than 255.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00206.Invalid.SduId</srcid><srcstatus/><internalId>241</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00206.Param.NotTP_BS</srcid><srcstatus/><internalId>242</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00206.LargerVal</srcid><srcstatus/><internalId>243</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00207</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpTxDynamicBlockCalculation and J1939TpTxMaxPacketsPerBlock are enabled, the J1939Tp 
        shall compare the available amount of data returned by PduR_J1939TpCopyTxData to 
        J1939TpTxMaxPacketsPerBlock and use use the smaller of these two values to calculate the 
        maximum number of packets field of the TP.CM_RTS message.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1519</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1541</srcid><srcstatus/><internalId>584</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>136</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00208</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpTxDynamicBlockCalculation is enabled but J1939TpTxMaxPacketsPerBlock is disabled, the 
        J1939Tp shall use the available amount of data returned by PduR_J1939TpCopyTxData to calculate 
        the maximum number of packets field of the TP.CM_RTS message.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.MaxPacketsAlwaysConfigured</srcid><srcstatus/><internalId>476</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00209</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpTxDynamicBlockCalculation is disabled, the J1939Tp shall use 
        J1939TpTxMaxPacketsPerBlock for the maximum number of packets field of the TP.CM_RTS message.
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1572</srcid><srcstatus/><internalId>586</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_1</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_1</srcid><srcstatus/><internalId>1393</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1397</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00210</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpRxDynamicBlockCalculation and J1939TpRxPacketsPerBlock are enabled, the J1939Tp shall 
        compare the value returned by PduR_J1939TpStartOfReception for the available buffer size to 
        J1939TpRxPacketsPerBlock and use the lower value to calculate the number of packets field of 
        the TP.CM_CTS message.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1435</srcid><srcstatus/><internalId>575</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4760</srcid><srcstatus/><internalId>736</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_CMDT_CancelReceive_1</srcid><srcstatus/><internalId>1198</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CMDT_CancelReceive_1</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00211</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpRxDynamicBlockCalculation is enabled but J1939TpRxPacketsPerBlock is disabled, the 
        J1939Tp shall use the value returned by PduR_J1939TpStartOfReception for the available buffer 
        size to calculate the number of packets field of the TP.CM_CTS message.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.MaxPacketsAlwaysConfigured</srcid><srcstatus/><internalId>476</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00212</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpRxRetrySupport is enabled, the J1939Tp shall adapt the value returned by 
        PduR_J1939TpStartOfReception for the available buffer size according to 
        J1939TpRxDynamicBufferRatio before using it to calculate the number of packets field of the TP.
        CM_CTS message as specified in SWS_J1939Tp_00210 and SWS_J1939Tp_00211.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1441</srcid><srcstatus/><internalId>576</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_RCV_RETRY_BUFFER_RATIO_1</srcid><srcstatus/><internalId>1210</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RCV_RETRY_BUFFER_RATIO_1</srcid><srcstatus/><internalId>1385</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00213</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpRxDynamicBlockCalculation is disabled, the J1939Tp shall use J1939TpRxPacketsPerBlock 
        to calculate the number of packets field of the TP.CM_CTS message.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4772</srcid><srcstatus/><internalId>737</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_1</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_1</srcid><srcstatus/><internalId>1393</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00214</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939Tp_CancelTransmit API shall only be available when J1939TpCancellationSupport is 
        enabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5368</srcid><srcstatus/><internalId>787</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_CANCELTRANSMIT_1</srcid><srcstatus/><internalId>1419</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_CANCELTRANSMIT_2</srcid><srcstatus/><internalId>1420</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_CANCELTRANSMIT_1</srcid><srcstatus/><internalId>1425</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_CANCELTRANSMIT_2</srcid><srcstatus/><internalId>1426</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CancelTransmit_1</srcid><srcstatus/><internalId>1464</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CancelTransmit_2</srcid><srcstatus/><internalId>1465</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_9</srcid><srcstatus/><internalId>1555</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_9</srcid><srcstatus/><internalId>1563</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00215</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939Tp_CancelReceive API shall only be available when J1939TpCancellationSupport is 
        enabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5477</srcid><srcstatus/><internalId>798</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_CMDT_CancelReceive_1</srcid><srcstatus/><internalId>1198</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_CMDT_CancelReceive_2</srcid><srcstatus/><internalId>1199</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CANCELRECEIVE_BAM_1</srcid><srcstatus/><internalId>1311</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CANCELRECEIVE_BAM_2</srcid><srcstatus/><internalId>1312</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CMDT_CancelReceive_1</srcid><srcstatus/><internalId>1371</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CMDT_CancelReceive_2</srcid><srcstatus/><internalId>1372</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00216</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpRxRetrySupport is disabled, when a sequence error occurs during reception, the 
        J1939Tp module shall abort the reception session
        as specified in SWS_J1939Tp_00031 and
        as specified in SWS_J1939Tp_00097 with connection abort reason FF16 (SNA)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3382</srcid><srcstatus/><internalId>705</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_1</srcid><srcstatus/><internalId>1134</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_1</srcid><srcstatus/><internalId>1166</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_1</srcid><srcstatus/><internalId>1316</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_1</srcid><srcstatus/><internalId>1343</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00217</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpTxRetrySupport is enabled, the J1939Tp shall call PduR_J1939TpCopyTxData with
        TpDataState set to TP_DATACONF for the first call after reception of a TP.CM_CTS, and
        TpDataState set to TP_CONFPENDING for the following calls.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00217.FirstDT</srcid><srcstatus/><internalId>309</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00217.NextDT</srcid><srcstatus/><internalId>310</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00218</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpTxRetrySupport is disabled, the parameter retry of PduR_J1939TpCopyTxData shall 
        allways be set to the NULL_PTR.
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1844</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8762</srcid><srcstatus/><internalId>937</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8963</srcid><srcstatus/><internalId>954</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00219</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        For BAM transmissions, the parameter retry of PduR_J1939TpCopyTxData shall allways be set to 
        the NULL_PTR.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_723</srcid><srcstatus/><internalId>529</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_967</srcid><srcstatus/><internalId>538</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1422</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1423</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1424</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_Main_Longer_25ms</srcid><srcstatus/><internalId>1431</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_1</srcid><srcstatus/><internalId>1434</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA</srcid><srcstatus/><internalId>1437</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_DIFF_CHANNEL</srcid><srcstatus/><internalId>1438</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_MULTI_NSDU_PENDING</srcid><srcstatus/><internalId>1439</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00220</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpTxRetrySupport is enabled, a valid RetryInfoType stuct shall be provided via the 
        parameter retry of PduR_J1939TpCopyTxData during CMDT transmissions.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1838</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8756</srcid><srcstatus/><internalId>935</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8957</srcid><srcstatus/><internalId>952</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_RETRY_TRSMT_1</srcid><srcstatus/><internalId>1573</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RETRY_TRSMT_1</srcid><srcstatus/><internalId>1577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00221</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpTxRetrySupport is enabled, when the J1939Tp receives a TP.CM_CTS frame requesting 
        already sent data, it shall call PduR_J1939TpCopyTxData with TpDataState set to TP_DATARETRY 
        and TxTpDataCnt set to the number of bytes to be retransmitted.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1819</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8743</srcid><srcstatus/><internalId>932</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8938</srcid><srcstatus/><internalId>948</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_RETRY_TRSMT_1</srcid><srcstatus/><internalId>1573</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RETRY_TRSMT_1</srcid><srcstatus/><internalId>1577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00222</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpRxRetrySupport is enabled, when a sequence error occurs during reception, the J1939Tp 
        module shall, after the last TP.DT message of the block was received, send a TP.CM_CTS frame 
        requesting the packages that follow the last correctly received package of the current block.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3388</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_RETRY_1</srcid><srcstatus/><internalId>1214</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_RETRY_2</srcid><srcstatus/><internalId>1215</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_CTS_RETRY_1</srcid><srcstatus/><internalId>1386</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_CTS_RETRY_2</srcid><srcstatus/><internalId>1387</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_CTS_RETRY_3</srcid><srcstatus/><internalId>1388</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_RETRY_1</srcid><srcstatus/><internalId>1389</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_RETRY_2</srcid><srcstatus/><internalId>1390</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_RETRY_3</srcid><srcstatus/><internalId>1391</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00223</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        When the J1939Tp receives a TP.CM_CTS frame that requests data beyond the current position or 
        preceding the position where the last TP.CM_CTS was received, it shall abort the transmission 
        using the mechanisms described by SWS_J1939Tp_00032 and SWS_J1939Tp_00097 with reason FF16 (SNA)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7342</srcid><srcstatus/><internalId>883</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_RETRY_TRSMT_3</srcid><srcstatus/><internalId>1575</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_RETRY_TRSMT_4</srcid><srcstatus/><internalId>1576</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RETRY_TRSMT_3</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RETRY_TRSMT_4</srcid><srcstatus/><internalId>1580</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00224</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If J1939TpTxRetrySupport is disabled, when a TP.CM_CTS is received while TP.DT messages are 
        being transmitted, J1939Tp shall abort the connection as specified in SWS_J1939Tp_00032 and in 
        SWS_J1939Tp_00097 with connection abort reason 4 (CTS messages received when data transfer is 
        in progress)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7376</srcid><srcstatus/><internalId>889</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_15</srcid><srcstatus/><internalId>1454</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_14</srcid><srcstatus/><internalId>1504</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00225</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        When a TP.CM_RTS is received for a currently active connection, the J1939Tp shall stop this 
        connection as specified in SWS_J1939Tp_00031 and start a new connection as described in 
        SWS_J1939Tp_00038.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6090</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_17</srcid><srcstatus/><internalId>1150</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_17</srcid><srcstatus/><internalId>1182</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_3</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_3</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_17</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_3</srcid><srcstatus/><internalId>1395</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_3</srcid><srcstatus/><internalId>1399</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00226</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        After reception of the TP.CM_RTS and after reception of the last N-PDU of a block, if the 
        reported buffer size is large enough for the next block, the J1939Tp shall transmit a TP.CM_CTS 
        message requesting the next block. The number of packets requested by TP.CM_CTS shall be 
        constant during the complete reception of one N-SDU, only in the last TP.CM_CTS this number 
        shall be reduced to the number of remaining packets.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00226.BuffSize</srcid><srcstatus/><internalId>250</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00226.NewCTS</srcid><srcstatus/><internalId>251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00227</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        When there is not enough buffer reported by PduR_J1939TpStartOfReception or 
        PduR_J1939TpCopyRxData for the reception of a complete block, the J1939Tp shall call 
        PduR_J1939TpCopyRxData with info-&gt;SduLength set to 0 until the buffer is large enough for one 
        block, or a timeout occurs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00227.StartOfReception.EnoughBuff</srcid><srcstatus/><internalId>252</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00227.StartOfReception.Timeout</srcid><srcstatus/><internalId>253</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00227.CopyRxData.EnoughBuff</srcid><srcstatus/><internalId>254</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00227.CopyRxData.Timeout</srcid><srcstatus/><internalId>255</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00228</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        When PduR_J1939TpCopyTxData returns BUFREQ_E_BUSY, the J1939Tp shall retry the call to 
        PduR_J1939TpCopyTxData until the data is available or a timeout occurs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</srcid><srcstatus/><internalId>244</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00228.CMDT.timeout</srcid><srcstatus/><internalId>245</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00228.BAM.DataAvailable</srcid><srcstatus/><internalId>246</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00228.BAM.Timeout</srcid><srcstatus/><internalId>247</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00228.Direct.DataAvailable</srcid><srcstatus/><internalId>248</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00228.Direct.Timeout</srcid><srcstatus/><internalId>249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00229</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        While monitoring the buffer state as defined by SWS_J1939Tp_00227, the J1939Tp shall send TP.
        CM_CTS wait frames (number of packets set to 0, see also [REF]) according to the timing 
        requirements defined in [REF]
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00229.StartOfReception</srcid><srcstatus/><internalId>320</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00229.CopyRxData</srcid><srcstatus/><internalId>321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00230</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Module | Header File | Imported Type 
        ComStack_Types | ComStack_Types.h | BufReq_ReturnType 
        ComStack_Types.h | PduIdType 
        ComStack_Types.h | PduInfoType 
        ComStack_Types.h | PduLengthType 
        ComStack_Types.h | RetryInfoType 
        ComStack_Types.h | TPParameterType 
        ComStack_Types.h | TpDataStateType 
        Std | Std_Types.h | Std_ReturnType 
        Std_Types.h | Std_VersionInfoType 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00230.ComStack_Types</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00230.Std_Types</srcid><srcstatus/><internalId>257</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00231</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The J1939 Transport Layer module shall support several connections for the same PGN in parallel 
        as long as they can be received or transmitted independently.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7702</srcid><srcstatus/><internalId>908</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_PGN_SAME_SA_DA_LEGACY_SESSION_NUMB_FORMAT</srcid><srcstatus/><internalId>1231</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_PGN_DIFF_SA_DA</srcid><srcstatus/><internalId>1234</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_PGN_SAME_SA_DA</srcid><srcstatus/><internalId>1235</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_RCV_TWO_CMDT_SAME_PGN</srcid><srcstatus/><internalId>1402</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_99999</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        These requirements are not applicable to this specification.
      </description>
      <comment>
        This requirement is not applicable to this specification.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.NotApplicable</srcid><srcstatus/><internalId>488</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00232</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        The content of a TP.DT message with a sequence error and of the TP.DT messages following a 
        sequence error in the same block shall be discarded.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00232.CMDT</srcid><srcstatus/><internalId>258</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00232.BAM</srcid><srcstatus/><internalId>259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00233</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        If several receiving connections are configured with identical PGNs and matching channel 
        parameters, the J1939Tp shall allocate an arbitrary free connection with matching parameters.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5757</srcid><srcstatus/><internalId>821</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6091</srcid><srcstatus/><internalId>833</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_3</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_3</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_SESSION_NUMB_LEGACY_FORMAT</srcid><srcstatus/><internalId>1246</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_8</srcid><srcstatus/><internalId>1254</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_13</srcid><srcstatus/><internalId>1259</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_3</srcid><srcstatus/><internalId>1274</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_BAM_8</srcid><srcstatus/><internalId>1307</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_3</srcid><srcstatus/><internalId>1395</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_3</srcid><srcstatus/><internalId>1399</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>
    <specobject>
      <id>J1939Tp.SWS_J1939Tp_00234</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        Type of error | Related error code | Error value 
        Timeout occurred on receiver side after reception of an intermediate TP.DT frame of a block. | 
        J1939TP_E_TIMEOUT_T1J1939Tp.J1939TP_E_TIMEOUT_T1 | 0x30 
        Timeout occurred on receiver side after transmission of a TP.CM/CTS frame. | 
        J1939TP_E_TIMEOUT_T2J1939Tp.J1939TP_E_TIMEOUT_T2 | 0x31 
        Timeout occurred on transmitter side after transmission of the last TP.DT frame of a block. | 
        J1939TP_E_TIMEOUT_T3J1939Tp.J1939TP_E_TIMEOUT_T3 | 0x32 
        Timeout occurred on transmitter side after reception of a TP.CM/CTS(0) frame. | 
        J1939TP_E_TIMEOUT_T4J1939Tp.J1939TP_E_TIMEOUT_T4 | 0x33 
        Timeout occurred on transmitter or receiver side while trying to send the next TP.DT or TP.CM 
        frame. | J1939TP_E_TIMEOUT_TRJ1939Tp.J1939TP_E_TIMEOUT_TR | 0x34 
        Timeout occurred on receiver side while trying to send the next TP.CM/CTS frame after a TP.CM/
        CTS(0) frame. | J1939TP_E_TIMEOUT_THJ1939Tp.J1939TP_E_TIMEOUT_TH | 0x35 
        Invalid value for "total message size" in received TP.CM/RTS frame. | 
        J1939TP_E_INVALID_TMSJ1939Tp.J1939TP_E_INVALID_TMS | 0x40 
        Value for "total number of packets" in received TP.CM/RTS frame does not match the "total 
        message size". | J1939TP_E_INVALID_TNOPJ1939Tp.J1939TP_E_INVALID_TNOP | 0x41 
        Invalid value for "maximum number of packets" in received TP.CM/RTS frame. | 
        J1939TP_E_INVALID_MNOPJ1939Tp.J1939TP_E_INVALID_MNOP | 0x42 
        Unexpected PGN in received TP.CM frame. | J1939TP_E_INVALID_PGNJ1939Tp.J1939TP_E_INVALID_PGN | 
        0x43 
        Invalid value for "number of packets" in received TP.CM/CTS frame. | 
        J1939TP_E_INVALID_NOPJ1939Tp.J1939TP_E_INVALID_NOP | 0x44 
        Invalid value for "next packet number" in received TP.CM/CTS frame. | 
        J1939TP_E_INVALID_NPNJ1939Tp.J1939TP_E_INVALID_NPN | 0x45 
        Invalid value for "connection abort reason" in received TP.Conn_Abort frame. | 
        J1939TP_E_INVALID_CARJ1939Tp.J1939TP_E_INVALID_CAR | 0x46 
        Unexpected serial number in received TP.DT frame. | J1939TP_E_INVALID_SNJ1939Tp.
        J1939TP_E_INVALID_SN | 0x47 
      </description>
     <furtherinfo>WRN.swurs.needscoverage.count: Requirement use case is refined in more than 10 refined 
	        	requirements due to use case consistency and the fact that there can be numerous possible error reasons
      </furtherinfo>	
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T1</srcid><srcstatus/><internalId>274</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T2</srcid><srcstatus/><internalId>275</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T3</srcid><srcstatus/><internalId>276</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T4</srcid><srcstatus/><internalId>277</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</srcid><srcstatus/><internalId>278</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TH</srcid><srcstatus/><internalId>279</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TMS</srcid><srcstatus/><internalId>280</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TNOP</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_INVALID_MNOP</srcid><srcstatus/><internalId>282</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_INVALID_PGN</srcid><srcstatus/><internalId>283</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_INVALID_NOP</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_INVALID_NPN</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_INVALID_CAR</srcid><srcstatus/><internalId>286</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_INVALID_SN</srcid><srcstatus/><internalId>287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>
    <specobject>
      <id>J1939Tp.ECUC_J1939Tp_00127</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939TransportLayer, R20-11</source>
      <version>1</version>
      <description>
        See"J1939Tp_x_Module"
        Module Name | J1939TpJ1939Tp 
        Module Description | Configuration of the J1939Tp (J1939 Transport Protocol) module.
        Post-Build Variant Support | true 
        Supported Config Variants | VARIANT-LINK-TIME, VARIANT-POST-BUILD, VARIANT-PRE-COMPILE 
        Included containers: "J1939Tp_x_Included_Containers"
        Included Containers 
        Container Name | Multiplicity | Scope / Dependency 
        J1939TpConfiguration | 1 | This container contains the configuration parameters and sub 
        containers of the J1939Tp module that define the communication paths.
        J1939TpGeneral | 1 | This container describes the general configuration parameters of the 
        J1939Tp module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_35</srcid><srcstatus/><internalId>964</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00007.data</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Internally used data types shall be defined locally in the implementation source files.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_233</srcid><srcstatus/><internalId>502</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00007.functions</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Internally used data functions shall be defined locally in the implementation source files.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_36</srcid><srcstatus/><internalId>501</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00038.RTS</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When receiving an N-PDU containing a TP.CM_RTS frame, the J1939Tp module
        shall first notify the upper layer (PDU Router) before processing the frame reassembly.
        It uses the PduR_J1939TpStartOfReception function with the following parameters:
        - the Identifier of the corresponding N-SDU,
        - depending on MetaDataLength: the SA, DA and Priority,
        - the total Data Length (after reassembly) and
        - a pointer to a location where the upper layer stores its currently available buffer size.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1421</srcid><srcstatus/><internalId>574</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_1</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_1</srcid><srcstatus/><internalId>1393</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00038.CM_BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When receiving an N-PDU containing a TP.CM_BAM frame, the J1939Tp module
        shall first notify the upper layer (PDU Router) before processing the frame reassembly.
        It uses the PduR_J1939TpStartOfReception function with the following parameters:
        - the Identifier of the corresponding N-SDU,
        - depending on MetaDataLength: the SA, DA and Priority,
        - the total Data Length (after reassembly) and
        - a pointer to a location where the upper layer stores its currently available buffer size.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2334</srcid><srcstatus/><internalId>636</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_BAM_1</srcid><srcstatus/><internalId>1314</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_BAM_263_DLC</srcid><srcstatus/><internalId>1315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When configured, the transport protocol variant (BAM/CMDT, see SWS_J1939Tp_00137) and the SA/DA
        (see SWS_J1939Tp_00181/SWS_J1939Tp_00180) shall be used for transmission. For N-SDUs with MetaInfo, these
        parameters are optional.
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5242</srcid><srcstatus/><internalId>773</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_CLASSICBAM</srcid><srcstatus/><internalId>1565</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONCURRENT_CONFIRMATION_TEST</srcid><srcstatus/><internalId>1566</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_CONC_SESSIONS_TRSMT</srcid><srcstatus/><internalId>1567</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_NOT_FD_TRSMT</srcid><srcstatus/><internalId>1572</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00039.NOConfigSaDa</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If SA or DA is not configured, the value provided via the MetaData shall be used.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.SaDaConfig</srcid><srcstatus/><internalId>475</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>
    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If the transport protocol is not configured, it shall be chosen based on the
        actual DA: BAM when DA is 0xFF, CMDT otherwise.
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7809</srcid><srcstatus/><internalId>913</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00040.StartOfReception.Direct</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939Tp module shall abort the reception like indicated in
        SWS_J1939Tp_00031 if the value returned by PduR_J1939TpStartOfReception via bufferSizePtr
        is smaller than the total data length of the N-SDU when received via the direct N-PDU.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6911</srcid><srcstatus/><internalId>861</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_5</srcid><srcstatus/><internalId>1206</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_6</srcid><srcstatus/><internalId>1207</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_7</srcid><srcstatus/><internalId>1208</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_DIRECT_8</srcid><srcstatus/><internalId>1382</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_DIRECT_9</srcid><srcstatus/><internalId>1383</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_DIRECT_10</srcid><srcstatus/><internalId>1384</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>


    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00040.CopyRxData.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>2</version>
      <description>
        In case of a BAM connection, The J1939Tp module shall abort the reception like indicated in
        SWS_J1939Tp_00031 if the PduR_J1939TpCopyRxData function returns BUFREQ_E_NOT_OK.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1157</srcid><srcstatus/><internalId>557</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_4</srcid><srcstatus/><internalId>1250</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_9</srcid><srcstatus/><internalId>1255</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_10</srcid><srcstatus/><internalId>1256</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_11</srcid><srcstatus/><internalId>1257</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_12</srcid><srcstatus/><internalId>1258</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_BAM_4</srcid><srcstatus/><internalId>1303</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_BAM_9</srcid><srcstatus/><internalId>1308</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_BAM_10</srcid><srcstatus/><internalId>1309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00040.CopyRxData.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939Tp module shall abort the reception like indicated in
        SWS_J1939Tp_00031 if the PduR_J1939TpCopyRxData function returns BUFREQ_E_NOT_OK, or
        In case of a CMDT connection, a CMDT Connection Abort shall be performed as
        described in SWS_J1939Tp_00097, and the connection abort reason shall be set to 2 (System
        resources were needed for another task so this connection managed session was terminated).
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3366</srcid><srcstatus/><internalId>702</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_4</srcid><srcstatus/><internalId>1137</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_18</srcid><srcstatus/><internalId>1151</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_4</srcid><srcstatus/><internalId>1169</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_18</srcid><srcstatus/><internalId>1183</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_4</srcid><srcstatus/><internalId>1319</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_18</srcid><srcstatus/><internalId>1333</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_4</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_17</srcid><srcstatus/><internalId>1359</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00040.CancelReceive.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939Tp module shall abort the reception like indicated in
        SWS_J1939Tp_00031 if the J1939Tp_CancelReceive function is called.
        In case of a BAM connection, no further activity is required.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5508</srcid><srcstatus/><internalId>799</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_CANCELRECEIVE_BAM_2</srcid><srcstatus/><internalId>1312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00040.CancelReceive.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939Tp module shall abort the reception like indicated in
        SWS_J1939Tp_00031 if the J1939Tp_CancelReceive function is called.
        In case of a CMDT connection, a CMDT Connection Abort shall be performed as
        described in SWS_J1939Tp_00097, and the connection abort reason shall be set to 2 (System
        resources were needed for another task so this connection managed session was
        terminated).
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5514</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_CMDT_CancelReceive_2</srcid><srcstatus/><internalId>1199</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CMDT_CancelReceive_2</srcid><srcstatus/><internalId>1372</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00041.CM.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall send the TP.CM_BAM frame using the service
        function CanIf_Transmit().
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_477</srcid><srcstatus/><internalId>511</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_ABORT_5</srcid><srcstatus/><internalId>1417</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_ABORT_6</srcid><srcstatus/><internalId>1418</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1422</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1423</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1424</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_Main_Longer_25ms</srcid><srcstatus/><internalId>1431</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_1</srcid><srcstatus/><internalId>1434</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_2</srcid><srcstatus/><internalId>1435</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_3</srcid><srcstatus/><internalId>1436</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA</srcid><srcstatus/><internalId>1437</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_DIFF_CHANNEL</srcid><srcstatus/><internalId>1438</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_MULTI_NSDU_PENDING</srcid><srcstatus/><internalId>1439</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>178</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00041.DT.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall send the broadcast TP.DT frame using the service
        function CanIf_Transmit().
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_771</srcid><srcstatus/><internalId>533</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1046</srcid><srcstatus/><internalId>547</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1422</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1423</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1424</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_Main_Longer_25ms</srcid><srcstatus/><internalId>1431</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_1</srcid><srcstatus/><internalId>1434</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_2</srcid><srcstatus/><internalId>1435</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_3</srcid><srcstatus/><internalId>1436</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA</srcid><srcstatus/><internalId>1437</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_DIFF_CHANNEL</srcid><srcstatus/><internalId>1438</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_MULTI_NSDU_PENDING</srcid><srcstatus/><internalId>1439</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall send the CMDT TP.DT frame using the service function CanIf_Transmit().
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1893</srcid><srcstatus/><internalId>602</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8882</srcid><srcstatus/><internalId>943</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_21</srcid><srcstatus/><internalId>1460</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_20</srcid><srcstatus/><internalId>1510</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00041.directPg</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        For messages with a payload length smaller or equal to 8 bytes no trasnport protocol is required, 
        J1939Tp shall send the message via CanIf_Transmit() with the PGN contained in the CanID
        and the data contained in the 8 byte payload, with padding if necessary
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2211</srcid><srcstatus/><internalId>630</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_DIRECT_1</srcid><srcstatus/><internalId>1482</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_CONCURRENT_MESSAGE_DOUBLE_CONFIRMATION</srcid><srcstatus/><internalId>1489</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_CONCURRENT_MESSAGE_SINGLE_CONFIRMATION</srcid><srcstatus/><internalId>1490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00041.CM.CTS</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall send the TP.CTS frame using the service function CanIf_Transmit().
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2932</srcid><srcstatus/><internalId>678</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>182</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00041.CM.RTS</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall send the TP.RTS frame using the service function CanIf_Transmit().
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3164</srcid><srcstatus/><internalId>689</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_20</srcid><srcstatus/><internalId>1459</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_19</srcid><srcstatus/><internalId>1509</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00041.CM.Abort</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall send the abort frame using the service function CanIf_Transmit().
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4055</srcid><srcstatus/><internalId>724</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_1</srcid><srcstatus/><internalId>1440</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_7</srcid><srcstatus/><internalId>1446</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_22</srcid><srcstatus/><internalId>1461</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_1</srcid><srcstatus/><internalId>1491</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_7</srcid><srcstatus/><internalId>1497</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_21</srcid><srcstatus/><internalId>1511</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00041.EndOfMsgAck</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall send the EndOfMsgAck frame using the service function CanIf_Transmit().
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4227</srcid><srcstatus/><internalId>728</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_4</srcid><srcstatus/><internalId>1223</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_4</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_4</srcid><srcstatus/><internalId>1275</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_1</srcid><srcstatus/><internalId>1393</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_4</srcid><srcstatus/><internalId>1396</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1397</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_4</srcid><srcstatus/><internalId>1400</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00041.CM.CTS0</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall send the  wait CTS0 frame using the service function CanIf_Transmit().
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4592</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_13</srcid><srcstatus/><internalId>1146</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_22</srcid><srcstatus/><internalId>1155</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_13</srcid><srcstatus/><internalId>1178</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_22</srcid><srcstatus/><internalId>1187</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CHANGE_PARAMETER_TEST_5</srcid><srcstatus/><internalId>1267</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_13</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_22</srcid><srcstatus/><internalId>1337</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_13</srcid><srcstatus/><internalId>1355</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_21</srcid><srcstatus/><internalId>1363</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00043.RTS</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If the control byte of the initializing TP.CM frame is RTS, the J1939Tp
        module shall use the variant CMDT of the J1939 transport protocol to handle the
        data reception.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4913</srcid><srcstatus/><internalId>741</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_1</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_1</srcid><srcstatus/><internalId>1393</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00043.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If the control byte of the initializing TP.CM frame is a BAM, theJ1939Tp
        module shall use the variant BAM of the J1939 transport protocol to handle the
        data reception.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4893</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_5</srcid><srcstatus/><internalId>1251</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_BAM_5</srcid><srcstatus/><internalId>1304</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_BAM_1</srcid><srcstatus/><internalId>1314</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_BAM_263_DLC</srcid><srcstatus/><internalId>1315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00045.NSduId</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The function J1939Tp_Transmit shall use the NSduId provided in the
        PduInfoType structure.
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5217</srcid><srcstatus/><internalId>770</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00045.SduLength</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The function J1939Tp_Transmit shall use the SduLength provided in the
        PduInfoType structure.
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5227</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00045.MetaData</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The function J1939Tp_Transmit shall not use the payload of N-SDUs, only the contained MetaData.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.NoMetaData</srcid><srcstatus/><internalId>477</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00046.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        For each BAM TP.DT frame to be sent, the J1939Tp module shall previously call
        PduR_J1939TpCopyTxData with the following parameters:
        - the Identifier of the corresponding N-SDU,
        - PduInfoType structure with up to 7 bytes as SduLength,
        - the retry parameter, 
        - a pointer to a location where the upper layer stores its currently available data.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_724</srcid><srcstatus/><internalId>530</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_968</srcid><srcstatus/><internalId>539</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1422</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1423</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1424</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_Main_Longer_25ms</srcid><srcstatus/><internalId>1431</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_1</srcid><srcstatus/><internalId>1434</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA</srcid><srcstatus/><internalId>1437</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_DIFF_CHANNEL</srcid><srcstatus/><internalId>1438</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_MULTI_NSDU_PENDING</srcid><srcstatus/><internalId>1439</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00046.DirectPg</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        For the TP.DT frame to be sent, the J1939Tp module shall previously call
        PduR_J1939TpCopyTxData with the following parameters:
        - the Identifier of the corresponding N-SDU,
        - PduInfoType structure with up to 8 bytes as SduLength,
        - the retry parameter, and
        - a pointer to a location where the upper layer stores its currently available data.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2138</srcid><srcstatus/><internalId>623</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_DIRECT_1</srcid><srcstatus/><internalId>1482</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_CONCURRENT_MESSAGE_DOUBLE_CONFIRMATION</srcid><srcstatus/><internalId>1489</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_CONCURRENT_MESSAGE_SINGLE_CONFIRMATION</srcid><srcstatus/><internalId>1490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00046.CMDT.Retry</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        For each TP.DT frame to be sent, the J1939Tp module shall previously call
        PduR_J1939TpCopyTxData with the following parameters:
        - the Identifier of the corresponding N-SDU,
        - PduInfoType structure with up to 7 bytes as SduLength,
        - the retry parameter, and
        - a pointer to a location where the upper layer stores its currently available data.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1837</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8755</srcid><srcstatus/><internalId>934</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8956</srcid><srcstatus/><internalId>951</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_RETRY_TRSMT_1</srcid><srcstatus/><internalId>1573</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RETRY_TRSMT_1</srcid><srcstatus/><internalId>1577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        For each TP.DT frame to be sent, the J1939Tp module shall previously call
        PduR_J1939TpCopyTxData with the following parameters:
        - the Identifier of the corresponding N-SDU,
        - PduInfoType structure with up to 7 bytes as SduLength,
        - NULL_PTR  when Retry is disabled , and
        - a pointer to a location where the upper layer stores its currently available data.
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1843</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8761</srcid><srcstatus/><internalId>936</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8962</srcid><srcstatus/><internalId>953</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00047.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        After a CMDT transmission request from the upper layer, the J1939Tp module shall initiate the
        transmission by sending a TP.CM_RTS frame.
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1203</srcid><srcstatus/><internalId>561</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TXCM_NPDUS_BUSY</srcid><srcstatus/><internalId>1463</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00047.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        After a BAM transmission request from the upper layer, the J1939Tp module shall initiate the
        transmission by sending a TP.CM_BAM frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_415</srcid><srcstatus/><internalId>507</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1422</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1423</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1424</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_Main_Longer_25ms</srcid><srcstatus/><internalId>1431</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_1</srcid><srcstatus/><internalId>1434</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA</srcid><srcstatus/><internalId>1437</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_DIFF_CHANNEL</srcid><srcstatus/><internalId>1438</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_MULTI_NSDU_PENDING</srcid><srcstatus/><internalId>1439</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TXCM_NPDUS_BUSY</srcid><srcstatus/><internalId>1463</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00048.CopyTxData.Direct</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        During direct pg transmission , the J1939Tp module shall abort the transmission session like specified in SWS_J1939Tp_00032 if
        The upper Layer returns the PduR_J1939TpCopyTxData function call with BUFREQ_E_NOT_OK.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2248</srcid><srcstatus/><internalId>633</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_DIRECT_ABORT_1</srcid><srcstatus/><internalId>1598</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_DIRECT_ABORT_3</srcid><srcstatus/><internalId>1600</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_DIRECT_ABORT_4</srcid><srcstatus/><internalId>1601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00048.CopyTxData.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        During a CMDT connection, the J1939Tp module shall abort the transmission session like specified in SWS_J1939Tp_00032 if
        The upper Layer returns the PduR_J1939TpCopyTxData function call with BUFREQ_E_NOT_OK, a
        Connection Abort shall be performed as described in SWS_J1939Tp_00097, and the connection abort
        reason shall be set to 2 (System resources were needed for another task so this connection
        managed session was terminated).
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1922</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8813</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8991</srcid><srcstatus/><internalId>955</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_2</srcid><srcstatus/><internalId>1441</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_2</srcid><srcstatus/><internalId>1492</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00048.CopyTxData.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        During BAM transmission,the J1939Tp module shall abort the transmission session like specified in SWS_J1939Tp_00032 if
        The upper Layer returns the PduR_J1939TpCopyTxData function call with BUFREQ_E_NOT_OK.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_802</srcid><srcstatus/><internalId>535</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_ABORT_1</srcid><srcstatus/><internalId>1413</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_1</srcid><srcstatus/><internalId>1547</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_1</srcid><srcstatus/><internalId>1557</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00048.CancelTransmit.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        During BAM transmission,the J1939Tp module shall abort the transmission session like specified in SWS_J1939Tp_000032 if
        the J1939Tp_CancelTransmit function is called.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5351</srcid><srcstatus/><internalId>785</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_CANCELTRANSMIT_2</srcid><srcstatus/><internalId>1420</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_CANCELTRANSMIT_2</srcid><srcstatus/><internalId>1426</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00048.CancelTransmit.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        During a CMDT connection,the J1939Tp module shall abort the transmission session like specified in SWS_J1939Tp_000032 if
        the J1939Tp_CancelTransmit function is called ,a
        Connection Abort shall be performed as described in SWS_J1939Tp_00097, and the connection abort
        reason shall be set to 2 (System resources were needed for another task so this connection
        managed session was terminated).
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5419</srcid><srcstatus/><internalId>788</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_CancelTransmit_2</srcid><srcstatus/><internalId>1465</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00057.PGN</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        During reception, the N-SDU is identified by the PGN included in the payload of TP.CM .
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6799</srcid><srcstatus/><internalId>855</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_1</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_1</srcid><srcstatus/><internalId>1393</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00057.SaDa</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        During reception, the N-SDU is identified by the addressing information implicitly encoded in the NPduIds when the N-SDU has no MetaData , or explicitly provided via the MetaData of the N-PDUs.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6325</srcid><srcstatus/><internalId>837</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_1</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_1</srcid><srcstatus/><internalId>1393</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00100.Tx.T3</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If a timeout T3 occurs during CMDT transmission (see SAE J1939-21 for details) then the
        J1939Tpmodule shall abort the transmission session - as specified in SWS_J1939Tp_00032 and as
        specified in SWS_J1939Tp_00097 with connection abort reason 3 (A timeout occurred and this is
        the connection abort to close the session) when the timeout occurred after successful
        transmission of the TP.CM_RTS frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1968</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2016</srcid><srcstatus/><internalId>615</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_8</srcid><srcstatus/><internalId>1447</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Tx.T3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00100.Tx.T4</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If a timeout T4 occurs during CMDT transmission (see SAE J1939-21 for details) then the
        J1939Tpmodule shall abort the transmission session - as specified in SWS_J1939Tp_00032 and as
        specified in SWS_J1939Tp_00097 with connection abort reason 3 (A timeout occurred and this is
        the connection abort to close the session) when the timeout occurred after successful
        transmission of the TP.CM_RTS frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1963</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_14</srcid><srcstatus/><internalId>1453</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_13</srcid><srcstatus/><internalId>1503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Tx.T4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00100.Tx.Tr</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If a timeout Tr occurs during CMDT transmission (see SAE J1939-21 for details) then the
        J1939Tpmodule shall abort the transmission session - as specified in SWS_J1939Tp_00032 and as
        specified in SWS_J1939Tp_00097 with connection abort reason 3 (A timeout occurred and this is
        the connection abort to close the session) when the timeout occurred after successful
        transmission of the TP.CM_RTS frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_575</srcid><srcstatus/><internalId>518</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1315</srcid><srcstatus/><internalId>565</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_9035</srcid><srcstatus/><internalId>959</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_3</srcid><srcstatus/><internalId>1442</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_3</srcid><srcstatus/><internalId>1493</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00118.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        A close of CMDT connection feature shall indicate the upper layer that the transport reception
        session is completed. It uses the PduR_J1939TpRxIndication() with E_OK to indicate that the
        N-SDU reception is successfully processed.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2527</srcid><srcstatus/><internalId>645</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_1</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_1</srcid><srcstatus/><internalId>1393</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00118.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        A close of a BAM connection feature shall indicate the upper layer that the transport reception
        session is completed. It uses the PduR_J1939TpRxIndication() with E_OK to indicate that the
        N-SDU reception is successfully processed.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1145</srcid><srcstatus/><internalId>555</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_BAM_1</srcid><srcstatus/><internalId>1314</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_BAM_263_DLC</srcid><srcstatus/><internalId>1315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00119.Trans.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When the BAM transport transmission session is successfully completed, the J1939Tp module shall
        call a notification service of the upper layer, PduR_J1939TpTxConfirmation with the result
        E_OK, to notify that the N-SDU transfer is successfully processed.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_526</srcid><srcstatus/><internalId>514</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1422</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1423</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1424</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_Main_Longer_25ms</srcid><srcstatus/><internalId>1431</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_1</srcid><srcstatus/><internalId>1434</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA</srcid><srcstatus/><internalId>1437</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_DIFF_CHANNEL</srcid><srcstatus/><internalId>1438</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_MULTI_NSDU_PENDING</srcid><srcstatus/><internalId>1439</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When the CMDT transport transmission session is successfully completed, the J1939Tp module shall
        call a notification service of the upper layer, PduR_J1939TpTxConfirmation with the result
        E_OK, to notify that the N-SDU transfer is successfully processed.
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7084</srcid><srcstatus/><internalId>870</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00119.Trans.Direct</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When the Direct transport transmission session is successfully completed, the J1939Tp module shall
        call a notification service of the upper layer, PduR_J1939TpTxConfirmation with the result
        E_OK, to notify that the N-SDU transfer is successfully processed.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2060</srcid><srcstatus/><internalId>618</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_DIRECT_1</srcid><srcstatus/><internalId>1482</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_CONCURRENT_MESSAGE_DOUBLE_CONFIRMATION</srcid><srcstatus/><internalId>1489</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_CONCURRENT_MESSAGE_SINGLE_CONFIRMATION</srcid><srcstatus/><internalId>1490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00159.Rx.T1</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If a T1 timeout occurs during reception (see SAE J1939-21 for details) then the J1939Tp module
        shall abort the reception session - as specified in SWS_J1939Tp_00031 and as specified in
        SWS_J1939Tp_00097 with connection abort reason 3 (A timeout occurred and this is the connection
        abort to close the session).
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3045</srcid><srcstatus/><internalId>682</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_2</srcid><srcstatus/><internalId>1135</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_27</srcid><srcstatus/><internalId>1160</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_28</srcid><srcstatus/><internalId>1161</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_32</srcid><srcstatus/><internalId>1165</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Rx.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00159.Rx.T2</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If a T2 timeout occurs during reception (see SAE J1939-21 for details) then the J1939Tp module
        shall abort the reception session - as specified in SWS_J1939Tp_00031 and as specified in
        SWS_J1939Tp_00097 with connection abort reason 3 (A timeout occurred and this is the connection
        abort to close the session).
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3050</srcid><srcstatus/><internalId>683</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_8</srcid><srcstatus/><internalId>1141</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_8</srcid><srcstatus/><internalId>1173</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_8</srcid><srcstatus/><internalId>1323</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_8</srcid><srcstatus/><internalId>1350</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Rx.T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If a Tr timeout occurs during reception (see SAE J1939-21 for details) then the J1939Tp module
        shall abort the reception session - as specified in  SWS_J1939Tp_00031 and as specified in
        SWS_J1939Tp_00097 with connection abort reason 3 (A timeout occurred and this is the connection
        abort to close the session).
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2821</srcid><srcstatus/><internalId>671</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_9</srcid><srcstatus/><internalId>1142</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_12</srcid><srcstatus/><internalId>1145</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_14</srcid><srcstatus/><internalId>1147</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_9</srcid><srcstatus/><internalId>1174</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_12</srcid><srcstatus/><internalId>1177</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_14</srcid><srcstatus/><internalId>1179</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_9</srcid><srcstatus/><internalId>1324</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_12</srcid><srcstatus/><internalId>1327</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_14</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_9</srcid><srcstatus/><internalId>1351</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_12</srcid><srcstatus/><internalId>1354</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_14</srcid><srcstatus/><internalId>1356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>215</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00162.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        After the CMDT reception of an N-PDU containing a TP.DT frame, the function
        PduR_J1939TpCopyRxData shall be called with the following parameters:
        - the Identifier of the corresponding N-SDU,
        - PduInfoPtr with max. 7 bytes of data,
        - a pointer to a location where the upper layer stores its currently available buffer size.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3302</srcid><srcstatus/><internalId>692</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_1</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_1</srcid><srcstatus/><internalId>1393</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00162.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        After the BAM reception of an N-PDU containing a TP.DT frame, the function
        PduR_J1939TpCopyRxData shall be called with the following parameters:
        - the Identifier of the corresponding N-SDU,
        - PduInfoPtr with max. 7 bytes of data,
        - a pointer to a location where the upper layer stores its currently available buffer size.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1114</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_BAM_1</srcid><srcstatus/><internalId>1314</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_BAM_263_DLC</srcid><srcstatus/><internalId>1315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00162.DirectPg</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        After the Direct pg reception of an N-PDU containing a TP.DT frame, the function
        PduR_J1939TpCopyRxData shall be called with the following parameters:
        - the Identifier of the corresponding N-SDU,
        - PduInfoPtr with max. 8 bytes of data,
        - a pointer to a location where the upper layer stores its currently available buffer size.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6916</srcid><srcstatus/><internalId>862</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_1</srcid><srcstatus/><internalId>1202</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_3</srcid><srcstatus/><internalId>1204</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_6</srcid><srcstatus/><internalId>1207</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_8</srcid><srcstatus/><internalId>1209</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_DIRECT_1</srcid><srcstatus/><internalId>1375</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_DIRECT_3</srcid><srcstatus/><internalId>1377</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_DIRECT_9</srcid><srcstatus/><internalId>1383</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00173.TransProtocol.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939Tp module shall abort the reception silently if the protocol chosen in SWS_J1939Tp_00043 is not a BAM  (see ECUC_J1939Tp_00029).
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5809</srcid><srcstatus/><internalId>823</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_7</srcid><srcstatus/><internalId>1253</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_BAM_7</srcid><srcstatus/><internalId>1306</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>2</version>
      <description>
        The J1939Tp module shall abort the reception silently if the protocol chosen in SWS_J1939Tp_00043 is not CMDT (see ECUC_J1939Tp_00029), a CMDT Connection Abort shall be performed as described in SWS_J1939Tp_00097, and the
        connection abort reason shall be set to 1 (Already in one or more connection managed
        sessions and cannot support another).
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6000</srcid><srcstatus/><internalId>828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_10</srcid><srcstatus/><internalId>1143</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_11</srcid><srcstatus/><internalId>1144</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_25</srcid><srcstatus/><internalId>1158</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_10</srcid><srcstatus/><internalId>1175</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_11</srcid><srcstatus/><internalId>1176</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_25</srcid><srcstatus/><internalId>1190</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_10</srcid><srcstatus/><internalId>1325</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_11</srcid><srcstatus/><internalId>1326</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_25</srcid><srcstatus/><internalId>1340</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_10</srcid><srcstatus/><internalId>1352</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_11</srcid><srcstatus/><internalId>1353</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_24</srcid><srcstatus/><internalId>1366</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_13</srcid><srcstatus/><internalId>1452</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>220</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00173.DiffSaDa</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939Tp module shall abort the reception silently if the SA/DA of N-PDUs with MetaData do not match the configured SA/DA (see SWS_J1939Tp_00179:
        /SWS_J1939Tp_00178). In case of a BAM connection, no further activity is required.In case of a CMDT
        connection, a CMDT Connection Abort shall be performed as described in SWS_J1939Tp_00097, and the
        connection abort reason shall be set to 1 (Already in one or more connection managed
        sessions and cannot support another).
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.MetaDataDiffSaDa</srcid><srcstatus/><internalId>478</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00173.StartOfReception.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>2</version>
      <description>
        The J1939Tp module shall abort the CMDT reception silently if The PduR_J1939TpStartOfReception function returns BUFREQ_E_NOT_OK or BUFREQ_E_OVFL, a CMDT Connection Abort shall be performed as described in SWS_J1939Tp_00097, and the
        connection abort reason shall be set to 1 (Already in one or more connection managed
        sessions and cannot support another).
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1465</srcid><srcstatus/><internalId>579</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2556</srcid><srcstatus/><internalId>648</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_3</srcid><srcstatus/><internalId>1136</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_3</srcid><srcstatus/><internalId>1168</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_5</srcid><srcstatus/><internalId>1206</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_3</srcid><srcstatus/><internalId>1318</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_3</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_DIRECT_8</srcid><srcstatus/><internalId>1382</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00173.StartOfReception.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939Tp module shall abort the BAM reception silently if The PduR_J1939TpStartOfReception function returns BUFREQ_E_NOT_OK or BUFREQ_E_OVFL
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2357</srcid><srcstatus/><internalId>639</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_3</srcid><srcstatus/><internalId>1249</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_BAM_3</srcid><srcstatus/><internalId>1302</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00198.NSDU.NoMetaData</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The layout and content of MetaData of N-SDUs used by the J1939Tp is determined by MetaDataLength:
        MetaDataLength    Content of MetaData
        0               [no meta data]
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5266</srcid><srcstatus/><internalId>776</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>224</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDa</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The layout and content of MetaData of N-SDUs used by the J1939Tp is determined by MetaDataLength:
        MetaDataLength    Content of MetaData
        2               SA, DA
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7596</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>225</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The layout and content of MetaData of N-SDUs used by the J1939Tp is determined by MetaDataLength:
        MetaDataLength    Content of MetaData
        4               SA, DA, [don’t care], Priority which needs to be shifted by 2 bits [lower 2 bits ignored]
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7604</srcid><srcstatus/><internalId>902</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00198.NSDU.Sa</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The layout and content of MetaData of N-SDUs used by the J1939Tp is determined by MetaDataLength:
        MetaDataLength    Content of MetaData
        1               SA
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7590</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>227</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00198.NPDU.NoMetaData</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The layout and content of MetaData of N-PDUs used by the J1939Tp is determined by MetaDataLength:
        MetaDataLength    Content of MetaData
        0               [no meta data]
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_449</srcid><srcstatus/><internalId>508</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>228</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The layout and content of MetaData of N-PDUs used by the J1939Tp is determined by MetaDataLength:
        MetaDataLength    Content of MetaData
        4               SA, DA, [don’t care], Priority which needs to be shifted by 2 bits [lower 2 bits ignored]
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8526</srcid><srcstatus/><internalId>930</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00198.NPDU.Direct</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The layout and content of MetaData of N-PDUs used by the J1939Tp is determined by MetaDataLength:
        MetaDataLength    Content of MetaData
        4               SA, DA, [don’t care], Priority which needs to be shifted by 2 bits [lower 2 bits ignored]
        Direct N-PDUs will contain the PGN in the ignored parts and instead of the DA in case of format 2 PGNs.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.NoPgnInMetaData</srcid><srcstatus/><internalId>480</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00203.TxPduId.invalid</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp_CancelTransmit shall return E_NOT_OK if the TxPduId is invalid.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5444</srcid><srcstatus/><internalId>794</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_CANCELTRANSMIT_3</srcid><srcstatus/><internalId>1421</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_CANCELTRANSMIT_3</srcid><srcstatus/><internalId>1427</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00203.TxPduId.NotActive</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp_CancelTransmit shall return E_NOT_OK if TxPduId is currently not active.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5429</srcid><srcstatus/><internalId>790</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_CancelTransmit_5</srcid><srcstatus/><internalId>1468</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00203.Transmitted.DirectPg</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp_CancelTransmit shall return E_NOT_OK if currently a direct frame is transmitted.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5430</srcid><srcstatus/><internalId>791</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_DIRECT_3</srcid><srcstatus/><internalId>1484</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_3</srcid><srcstatus/><internalId>1528</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00203.Transmitted.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp_CancelTransmit shall return E_NOT_OK if the last TP.DT frame
        has already been transmitted during BAM transmission
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5431</srcid><srcstatus/><internalId>792</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_CANCELTRANSMIT_1</srcid><srcstatus/><internalId>1419</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_CANCELTRANSMIT_1</srcid><srcstatus/><internalId>1425</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_9</srcid><srcstatus/><internalId>1555</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_9</srcid><srcstatus/><internalId>1563</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00203.Transmitted.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp_CancelTransmit shall return E_NOT_OK if the TP.CM_EOMAck frame has
        already been received during CMDT transmission.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5432</srcid><srcstatus/><internalId>793</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_CancelTransmit_1</srcid><srcstatus/><internalId>1464</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00204.RxPduId.Invalid</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp_CancelReceive shall return E_NOT_OK if the RxPduId is invalid.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5538</srcid><srcstatus/><internalId>807</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_CMDT_CancelReceive_3</srcid><srcstatus/><internalId>1200</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CANCELRECEIVE_BAM_3</srcid><srcstatus/><internalId>1313</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CMDT_CancelReceive_3</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00204.RxPduId.NotActive</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp_CancelReceive shall return E_NOT_OK ,if RxPduId is currently not active .
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5523</srcid><srcstatus/><internalId>802</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_CMDT_CancelReceive_2</srcid><srcstatus/><internalId>1199</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CMDT_CancelReceive_2</srcid><srcstatus/><internalId>1372</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00204.received.DirectPg</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp_CancelReceive shall return E_NOT_OK if currently a direct frame is received .
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5524</srcid><srcstatus/><internalId>803</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_2</srcid><srcstatus/><internalId>1203</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_DIRECT_2</srcid><srcstatus/><internalId>1376</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00204.received.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp_CancelReceive shall return E_NOT_OK if the
        lastTP.DT frame has already been received during BAM reception .
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5525</srcid><srcstatus/><internalId>804</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_CANCELRECEIVE_BAM_1</srcid><srcstatus/><internalId>1311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00204.received.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp_CancelReceive shall return E_NOT_OK if theTP.CM_EOMAck frame
        has already been sent during CMDT reception.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5526</srcid><srcstatus/><internalId>805</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_CMDT_CancelReceive_1</srcid><srcstatus/><internalId>1198</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CMDT_CancelReceive_1</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00206.Invalid.SduId</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp_ChangeParameter shall return E_NOT_OK if the SduId is invalid .
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5645</srcid><srcstatus/><internalId>813</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CHANGE_PARAMETER_TEST_2</srcid><srcstatus/><internalId>1264</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00206.Param.NotTP_BS</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp_ChangeParameter shall return E_NOT_OK if the Parameter is not TP_BS.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5628</srcid><srcstatus/><internalId>810</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CHANGE_PARAMETER_TEST_3</srcid><srcstatus/><internalId>1265</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00206.LargerVal</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp_ChangeParameter shall return E_NOT_OK if the Value is larger than 255.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5634</srcid><srcstatus/><internalId>811</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CHANGE_PARAMETER_TEST_4</srcid><srcstatus/><internalId>1266</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When PduR_J1939TpCopyTxData returns BUFREQ_E_BUSY during CMDT transmission the J1939Tp shall retry the call to
        PduR_J1939TpCopyTxData until the data is available.
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1853</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8835</srcid><srcstatus/><internalId>941</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00228.CMDT.timeout</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When PduR_J1939TpCopyTxData returns BUFREQ_E_BUSY during CMDT transmission, the J1939Tp shall retry the call to
        PduR_J1939TpCopyTxData until a timeout occurs.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1798</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8917</srcid><srcstatus/><internalId>947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_3</srcid><srcstatus/><internalId>1442</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_3</srcid><srcstatus/><internalId>1493</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_24</srcid><srcstatus/><internalId>1514</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00228.BAM.DataAvailable</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When PduR_J1939TpCopyTxData returns BUFREQ_E_BUSY during BAM transmission, the J1939Tp shall retry the call to
        PduR_J1939TpCopyTxData until the data is available.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_731</srcid><srcstatus/><internalId>531</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_976</srcid><srcstatus/><internalId>540</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1422</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1423</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1424</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_Main_Longer_25ms</srcid><srcstatus/><internalId>1431</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_1</srcid><srcstatus/><internalId>1434</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA</srcid><srcstatus/><internalId>1437</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_DIFF_CHANNEL</srcid><srcstatus/><internalId>1438</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_MULTI_NSDU_PENDING</srcid><srcstatus/><internalId>1439</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00228.BAM.Timeout</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When PduR_J1939TpCopyTxData returns BUFREQ_E_BUSY during CMDT transmission, the J1939Tp shall retry the call to
        PduR_J1939TpCopyTxData until a timeout occurs.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_701</srcid><srcstatus/><internalId>528</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_ABORT_2</srcid><srcstatus/><internalId>1414</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_2</srcid><srcstatus/><internalId>1548</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_2</srcid><srcstatus/><internalId>1558</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00228.Direct.DataAvailable</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When PduR_J1939TpCopyTxData returns BUFREQ_E_BUSY during direct pg transmission, the J1939Tp shall retry the call to
        PduR_J1939TpCopyTxData until the data is available.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2146</srcid><srcstatus/><internalId>624</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_DIRECT_1</srcid><srcstatus/><internalId>1482</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_CONCURRENT_MESSAGE_DOUBLE_CONFIRMATION</srcid><srcstatus/><internalId>1489</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_CONCURRENT_MESSAGE_SINGLE_CONFIRMATION</srcid><srcstatus/><internalId>1490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00228.Direct.Timeout</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When PduR_J1939TpCopyTxData returns BUFREQ_E_BUSY during direct pg transmission, the J1939Tp shall retry the call to
        PduR_J1939TpCopyTxData until a timeout occurs.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2120</srcid><srcstatus/><internalId>621</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_DIRECT_4</srcid><srcstatus/><internalId>1485</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_4</srcid><srcstatus/><internalId>1529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00226.BuffSize</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        After reception of the TP.CM_RTS and after reception of the last N-PDU of a block, the reported buffer size shall be large enough for the next block.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4703</srcid><srcstatus/><internalId>735</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_2</srcid><srcstatus/><internalId>1394</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1398</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_8</srcid><srcstatus/><internalId>1594</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00226.NewCTS</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        After reception of the TP.CM_RTS and after reception of the last N-PDU of a
        block, the J1939Tp shall transmit a TP.CM_CTS message requesting the next
        block , after check that the reported buffer is enough, The number of packets
        requested by TP.CM_CTS shall be constant during the complete reception of one
        N-SDU, only in the last TP.CM_CTS this number shall be reduced to the number
        of remaining packets.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3328</srcid><srcstatus/><internalId>696</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_2</srcid><srcstatus/><internalId>1273</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_2</srcid><srcstatus/><internalId>1394</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1398</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_8</srcid><srcstatus/><internalId>1594</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00227.StartOfReception.EnoughBuff</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When there is not enough buffer reported by PduR_J1939TpStartOfReception for the reception of a complete block, the J1939Tp shall call
        PduR_J1939TpCopyRxData with info-&gt;SduLength set to 0 until the buffer is large enough for
        one block.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1449</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_2</srcid><srcstatus/><internalId>1273</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_2</srcid><srcstatus/><internalId>1394</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1398</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00227.StartOfReception.Timeout</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When there is not enough buffer reported by PduR_J1939TpStartOfReception for the reception of a complete block, the J1939Tp shall call
        PduR_J1939TpCopyRxData with info-&gt;SduLength set to 0 until a timeout occurs.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3531</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_2</srcid><srcstatus/><internalId>1273</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_2</srcid><srcstatus/><internalId>1394</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1398</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00227.CopyRxData.EnoughBuff</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When there is not enough buffer reported by PduR_J1939TpCopyRxData for the reception of a complete block, the J1939Tp shall call
        PduR_J1939TpCopyRxData with info-&gt;SduLength set to 0 until the buffer is large enough for
        one block.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3326</srcid><srcstatus/><internalId>695</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_15</srcid><srcstatus/><internalId>1148</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_15</srcid><srcstatus/><internalId>1180</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_CMDT_4</srcid><srcstatus/><internalId>1205</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_15</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_15</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_CMDT_4</srcid><srcstatus/><internalId>1378</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_CMDT_7</srcid><srcstatus/><internalId>1381</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00227.CopyRxData.Timeout</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        When there is not enough buffer reported by PduR_J1939TpCopyRxData for the reception of a complete block, the J1939Tp shall call
        PduR_J1939TpCopyRxData with info-&gt;SduLength set to 0 until a timeout occurs.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3532</srcid><srcstatus/><internalId>711</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_17</srcid><srcstatus/><internalId>1150</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_26</srcid><srcstatus/><internalId>1159</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_26</srcid><srcstatus/><internalId>1341</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_25</srcid><srcstatus/><internalId>1367</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_CMDT_5</srcid><srcstatus/><internalId>1379</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_CMDT_6</srcid><srcstatus/><internalId>1380</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00230.ComStack_Types</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Module              Header File         Imported Type
        ComStack_Types      ComStack_Types.h    BufReq_ReturnType
                            ComStack_Types.h    PduIdType
                            ComStack_Types.h    PduInfoType
                            ComStack_Types.h    PduLengthType
                            ComStack_Types.h    RetryInfoType
                            ComStack_Types.h    TPParameterType
                            ComStack_Types.h    TpDataStateType
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Tp_Typedefs.h_14</srcid><srcstatus/><internalId>491</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00230.Std_Types</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Module              Header File         Imported Type
        Std                 Std_Types.h         Std_ReturnType
                            Std_Types.h         Std_VersionInfoType
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Tp_Typedefs.h_15</srcid><srcstatus/><internalId>492</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00232.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The content of a TP.DT message with a sequence error and of the TP.DT messages following
        a sequence error in the same block shall be discarded.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_1</srcid><srcstatus/><internalId>1134</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_1</srcid><srcstatus/><internalId>1166</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_CTS_RETRY_1</srcid><srcstatus/><internalId>1211</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_CTS_RETRY_2</srcid><srcstatus/><internalId>1212</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_CTS_RETRY_3</srcid><srcstatus/><internalId>1213</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_RETRY_3</srcid><srcstatus/><internalId>1216</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_1</srcid><srcstatus/><internalId>1316</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_1</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_RETRY_1</srcid><srcstatus/><internalId>1389</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3381</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00232.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The content of a TP.DT message with a sequence error and of the TP.DT messages following
        a sequence error in the same block shall be discarded.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_2</srcid><srcstatus/><internalId>1248</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_BAM_2</srcid><srcstatus/><internalId>1301</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1180</srcid><srcstatus/><internalId>560</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00024.InitGlobalVar</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The function J1939Tp_Init() shall initialize all global variables of the module.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_1</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_1</srcid><srcstatus/><internalId>1393</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1397</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5044</srcid><srcstatus/><internalId>750</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00024.Reset.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The function J1939Tp_Init() shall reset all transmission connections, timers and parameters per message
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5074</srcid><srcstatus/><internalId>752</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>261</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00024.Reset.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The function J1939Tp_Init() shall reset all reception connections timers and parameters per message.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_1</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_1</srcid><srcstatus/><internalId>1393</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1397</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5095</srcid><srcstatus/><internalId>756</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00188.Transmit</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If default error detection for the J1939Tp is enabled, J1939Tp_Transmit shall check the input Identifier and raise the development error:
        J1939TP_E_INVALID_PDU_SDU_ID in case the API has been called for a not configured SDU.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_ECUC_NOT_OK_TEST_3</srcid><srcstatus/><internalId>1270</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TRANSMIT_TEST_5</srcid><srcstatus/><internalId>1585</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7623</srcid><srcstatus/><internalId>903</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00188.CancelTransmit</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If default error detection for the J1939Tp is enabled, J1939Tp_CancelTransmit shall check the input Identifier and raise the development error:
        J1939TP_E_INVALID_PDU_SDU_ID in case the API has been called for an unconfigured SDU.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_CancelTransmit_3</srcid><srcstatus/><internalId>1466</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5445</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00188.CancelReceive</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If default error detection for the J1939Tp is enabled, J1939Tp_CancelReceive shall check the input Identifier and raise the development error:
        J1939TP_E_INVALID_PDU_SDU_ID in case the API has been called for an unconfigured SDU.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_CMDT_CancelReceive_3</srcid><srcstatus/><internalId>1200</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CMDT_CancelReceive_3</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5537</srcid><srcstatus/><internalId>806</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00188.ChangeParameter</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If default error detection for the J1939Tp is enabled, J1939Tp_ChangeParameter shall check the input Identifier and raise the development error:
        J1939TP_E_INVALID_PDU_SDU_ID in case the API has been called for a not configured SDU.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CHANGE_PARAMETER_TEST_2</srcid><srcstatus/><internalId>1264</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5644</srcid><srcstatus/><internalId>812</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00188.RxIndication</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If default error detection for the J1939Tp is enabled, J1939Tp_RxIndication shall check the input Identifier and raise the development error:
        J1939TP_E_INVALID_PDU_SDU_ID in case the API has been called for a not configured PDU .
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_RX_INDICATION_TEST_6</srcid><srcstatus/><internalId>1241</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RX_INDICATION_TEST_6</srcid><srcstatus/><internalId>1408</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8084</srcid><srcstatus/><internalId>919</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00188.TxConfirmation</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If default error detection for the J1939Tp is enabled, J1939Tp_TxConfirmation shall check the input Identifier and raise the development error:
        J1939TP_E_INVALID_PDU_SDU_ID in case the API has been called for a not configured PDU.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_1</srcid><srcstatus/><internalId>1587</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8268</srcid><srcstatus/><internalId>925</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00115.E_UNINIT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                       Related error code            Error value
        API service used in                 J1939TP_E_UNINIT              0x01
        state J1939TP_OFF.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_TRANSMIT_TEST_2</srcid><srcstatus/><internalId>1582</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4976</srcid><srcstatus/><internalId>745</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00115.E_REINIT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        J1939Tp_Init() called in state           J1939TP_E_REINIT              0x02
        J1939TP_ON.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CHECK_INIT_2</srcid><srcstatus/><internalId>1283</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5126</srcid><srcstatus/><internalId>761</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00115.E_INIT_FAILED</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Eror value
        J1939Tp_Init was called with an          J1939TP_E_INIT_FAILED         0x03
        invalid configuration pointer
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CHECK_INIT_3</srcid><srcstatus/><internalId>1284</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5135</srcid><srcstatus/><internalId>762</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00115.E_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        API service called with null             J1939TP_E_PARAM_POINTER       0x10
        pointer.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_RX_INDICATION_TEST_2</srcid><srcstatus/><internalId>1237</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RX_INDICATION_TEST_2</srcid><srcstatus/><internalId>1404</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TRANSMIT_TEST_3</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5208</srcid><srcstatus/><internalId>769</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7970</srcid><srcstatus/><internalId>918</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00115.E_INVALID_PDU_SDU_ID</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        API service called with wrong ID.        J1939TP_E_INVALID_PDU_SDU_ID  0x11
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_ECUC_NOT_OK_TEST_3</srcid><srcstatus/><internalId>1270</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_1</srcid><srcstatus/><internalId>1587</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7624</srcid><srcstatus/><internalId>904</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T1</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        Timeout occurred on receiver side        J1939TP_E_TIMEOUT_T1          0x30
        after reception of an intermediate 
        TP.DT frame of a block.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_RETRY_6</srcid><srcstatus/><internalId>1219</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_2</srcid><srcstatus/><internalId>1317</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_2</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_RETRY_4</srcid><srcstatus/><internalId>1392</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2372</srcid><srcstatus/><internalId>641</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2584</srcid><srcstatus/><internalId>649</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T2</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                             Related error code            Error value
        Timeout occurred on receiver side         J1939TP_E_TIMEOUT_T2          0x31
        after transmission of a TP.CM/CTS frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_8</srcid><srcstatus/><internalId>1141</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_8</srcid><srcstatus/><internalId>1173</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_8</srcid><srcstatus/><internalId>1323</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_8</srcid><srcstatus/><internalId>1350</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3040</srcid><srcstatus/><internalId>681</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Rx.T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T3</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        Timeout occurred on transmitter          J1939TP_E_TIMEOUT_T3          0x32
        side after transmission of the last
        TP.DT frame of a block.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_6</srcid><srcstatus/><internalId>1445</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_6</srcid><srcstatus/><internalId>1496</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1969</srcid><srcstatus/><internalId>609</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Tx.T3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T4</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        Timeout occurred on transmitter          J1939TP_E_TIMEOUT_T4          0x33
        side after reception of a
        TP.CM/CTS(0) frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_14</srcid><srcstatus/><internalId>1453</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_13</srcid><srcstatus/><internalId>1503</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1959</srcid><srcstatus/><internalId>606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Tx.T4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        Timeout occurred on transmitter          J1939TP_E_TIMEOUT_TR          0x34
        or receiver side while trying to
        send the next TP.DT or TP.CM frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_9</srcid><srcstatus/><internalId>1142</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_12</srcid><srcstatus/><internalId>1145</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_14</srcid><srcstatus/><internalId>1147</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_9</srcid><srcstatus/><internalId>1174</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_12</srcid><srcstatus/><internalId>1177</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_14</srcid><srcstatus/><internalId>1179</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_9</srcid><srcstatus/><internalId>1324</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_12</srcid><srcstatus/><internalId>1327</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_14</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_9</srcid><srcstatus/><internalId>1351</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_12</srcid><srcstatus/><internalId>1354</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_14</srcid><srcstatus/><internalId>1356</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1303</srcid><srcstatus/><internalId>564</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1334</srcid><srcstatus/><internalId>569</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_9030</srcid><srcstatus/><internalId>958</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>278</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TH</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        Timeout occurred on receiver side        J1939TP_E_TIMEOUT_TH          0x35
        while trying to send the next
        TP.CM/CTS frame after a
        TP.CM/CTS(0) frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_2</srcid><srcstatus/><internalId>1273</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_2</srcid><srcstatus/><internalId>1394</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1398</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_8</srcid><srcstatus/><internalId>1594</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3533</srcid><srcstatus/><internalId>712</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Rx.Th</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TMS</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        Invalid value for "total message         J1939TP_E_INVALID_TMS         0x40
        size" in received TP.CM/RTS frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_7</srcid><srcstatus/><internalId>1140</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_7</srcid><srcstatus/><internalId>1172</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_RX_INDICATION_TEST_8</srcid><srcstatus/><internalId>1243</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_7</srcid><srcstatus/><internalId>1322</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_7</srcid><srcstatus/><internalId>1349</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RX_INDICATION_TEST_8</srcid><srcstatus/><internalId>1410</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6512</srcid><srcstatus/><internalId>840</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Rx.Th</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TNOP</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        Value for "total number of packets"      J1939TP_E_INVALID_TNOP        0x41
        in received TP.CM/RTS frame does
        not match the "total message size".
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_20</srcid><srcstatus/><internalId>1153</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_20</srcid><srcstatus/><internalId>1185</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_20</srcid><srcstatus/><internalId>1335</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_19</srcid><srcstatus/><internalId>1361</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6519</srcid><srcstatus/><internalId>841</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00234.E_INVALID_MNOP</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        Invalid value for "maximum number        J1939TP_E_INVALID_MNOP        0x42
        of packets" in received TP.CM/RTS
        frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_RX_INDICATION_TEST_9</srcid><srcstatus/><internalId>1244</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RX_INDICATION_TEST_9</srcid><srcstatus/><internalId>1411</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6018</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00234.E_INVALID_PGN</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        Unexpected PGN in received               J1939TP_E_INVALID_PGN         0x43
        TP.CM frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_RX_INDICATION_TEST_4</srcid><srcstatus/><internalId>1239</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RX_INDICATION_TEST_4</srcid><srcstatus/><internalId>1406</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_3</srcid><srcstatus/><internalId>1536</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_3</srcid><srcstatus/><internalId>1539</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_3</srcid><srcstatus/><internalId>1542</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_3</srcid><srcstatus/><internalId>1545</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7109</srcid><srcstatus/><internalId>875</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00234.E_INVALID_NOP</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        Invalid value for "number of             J1939TP_E_INVALID_NOP         0x44
        packets" in received TP.CM/CTS
        frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_19</srcid><srcstatus/><internalId>1458</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_18</srcid><srcstatus/><internalId>1508</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7365</srcid><srcstatus/><internalId>888</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00234.E_INVALID_NPN</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        Invalid value for "next packet           J1939TP_E_INVALID_NPN         0x45
        number" in received TP.CM/CTS
        frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_16</srcid><srcstatus/><internalId>1455</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_15</srcid><srcstatus/><internalId>1505</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7346</srcid><srcstatus/><internalId>885</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00234.E_INVALID_CAR</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        Invalid value for "connection            J1939TP_E_INVALID_CAR         0x46
        abort reason" in received
        TP.Conn_Abort frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_6</srcid><srcstatus/><internalId>1139</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_6</srcid><srcstatus/><internalId>1171</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_6</srcid><srcstatus/><internalId>1321</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_6</srcid><srcstatus/><internalId>1348</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5707</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00234.E_INVALID_SN</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Type of error                            Related error code            Error value
        Unexpected serial number in              J1939TP_E_INVALID_SN          0x47
        received TP.DT frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_1</srcid><srcstatus/><internalId>1134</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_1</srcid><srcstatus/><internalId>1166</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_1</srcid><srcstatus/><internalId>1316</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_1</srcid><srcstatus/><internalId>1343</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1174</srcid><srcstatus/><internalId>558</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00023.Segmentation</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939Tp module shall perform segmentation tasks only when the J1939Tp
        is in the J1939TP_ON state.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_17</srcid><srcstatus/><internalId>1456</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_18</srcid><srcstatus/><internalId>1457</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4959</srcid><srcstatus/><internalId>743</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>288</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00023.Reassembly</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939Tp module shall perform reassembly tasks only when the J1939Tp
        is in the J1939TP_ON state.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_1</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_1</srcid><srcstatus/><internalId>1393</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1397</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4965</srcid><srcstatus/><internalId>744</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00155.BAMTransmission</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939 transport layer shall implement the BAM (broadcast) transport protocol
        defined in SAE J1939-21 via J1939Tp_BAM_Transmit().
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1422</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1423</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1424</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_Main_Longer_25ms</srcid><srcstatus/><internalId>1431</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_1</srcid><srcstatus/><internalId>1434</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA</srcid><srcstatus/><internalId>1437</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_DIFF_CHANNEL</srcid><srcstatus/><internalId>1438</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_MULTI_NSDU_PENDING</srcid><srcstatus/><internalId>1439</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_RX_STATE_VALIDATION</srcid><srcstatus/><internalId>1633</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4820</srcid><srcstatus/><internalId>738</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00155.CMDTTransmission</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939 transport layer shall implement the CMDT (point-to-point) transport protocol
        defined in SAE J1939-21 via J1939Tp_CMDT_Transmit().
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_17</srcid><srcstatus/><internalId>1456</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_18</srcid><srcstatus/><internalId>1457</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_16</srcid><srcstatus/><internalId>1506</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_17</srcid><srcstatus/><internalId>1507</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CMDT_RX_STATE_VALIDATION</srcid><srcstatus/><internalId>1634</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4838</srcid><srcstatus/><internalId>739</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        According to SAE J1939-21, during CMDT transmission, all unused data bytes within the last TP.DT frame shall be set to 0xFF.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1783</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8908</srcid><srcstatus/><internalId>946</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>292</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00068.Padding.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        According to SAE J1939-21, during BAM transmission, all unused data bytes within the last TP.DT frame shall be set to 0xFF.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1422</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1423</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1424</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_Main_Longer_25ms</srcid><srcstatus/><internalId>1431</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_1</srcid><srcstatus/><internalId>1434</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA</srcid><srcstatus/><internalId>1437</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_DIFF_CHANNEL</srcid><srcstatus/><internalId>1438</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_SAME_METADATA_MULTI_NSDU_PENDING</srcid><srcstatus/><internalId>1439</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_683</srcid><srcstatus/><internalId>527</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_935</srcid><srcstatus/><internalId>537</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00068.Padding.DirectPg</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        According to SAE J1939-21, during Direct pg transmission, all unused data bytes within the direct frame shall be set to 0xFF.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_DIRECT_2</srcid><srcstatus/><internalId>1483</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2147</srcid><srcstatus/><internalId>625</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00157.Configuration</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        All service interfaces provided to the lower layer shall be independent of the internal
        communication configuration of the J1939Tp.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_67</srcid><srcstatus/><internalId>966</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00157.TxConfirmation</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp_TxConfirmation shall be independent of the internal
        communication configuration and implementation of the J1939Tp.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8095</srcid><srcstatus/><internalId>921</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00157.RxIndication</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp_RxIndication shall be independent of the internal
        communication configuration and implementation of the J1939Tp.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7925</srcid><srcstatus/><internalId>916</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00097.Transmission</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        An Abort CMDT Connection feature shall indicate to the other ECU participating in the
        concerned connection that the current CMDT transmission session cannot be
        completed successfully. A TP.Conn_Abort abort message shall be retransmitted to the other ECU
        via CAN as specified by SAE J1939-21.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1664</srcid><srcstatus/><internalId>588</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_2</srcid><srcstatus/><internalId>1441</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_2</srcid><srcstatus/><internalId>1492</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TP.Conn_Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00097.Reception</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        An Abort CMDT Connection feature shall indicate to the other ECU participating in the
        concerned connection that the current CMDT reception session  cannot be
        completed successfully. A TP.Conn_Abort abort message shall be retransmitted to the other ECU
        via CAN as specified by SAE J1939-21.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1608</srcid><srcstatus/><internalId>587</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_1</srcid><srcstatus/><internalId>1134</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_19</srcid><srcstatus/><internalId>1152</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_1</srcid><srcstatus/><internalId>1166</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TimeOut_19</srcid><srcstatus/><internalId>1184</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_1</srcid><srcstatus/><internalId>1316</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_19</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_1</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_18</srcid><srcstatus/><internalId>1360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TP.Conn_Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00123.Tr</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall implement the Tr (200 ms)timing constraint .
        as described in SAE J1939-21. They supervise the CMDT data flow.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_3</srcid><srcstatus/><internalId>1442</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_12</srcid><srcstatus/><internalId>1451</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_3</srcid><srcstatus/><internalId>1493</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_11</srcid><srcstatus/><internalId>1501</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2962</srcid><srcstatus/><internalId>680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00123.Th</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall implement the Th (500 ms)timing constraint .
        as described in SAE J1939-21. They supervise the CMDT data flow.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_2</srcid><srcstatus/><internalId>1273</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_2</srcid><srcstatus/><internalId>1394</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1398</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_8</srcid><srcstatus/><internalId>1594</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4588</srcid><srcstatus/><internalId>731</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Rx.Th</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00123.T1</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall implement the CMDT  T1 (750ms) timing constraint.
        as described in SAE J1939-21.
        T1 is the maximum allowed gap after the reception of the last packet
        when CTS alowed more.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_2</srcid><srcstatus/><internalId>1167</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_2</srcid><srcstatus/><internalId>1317</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_2</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_RETRY_4</srcid><srcstatus/><internalId>1392</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2886</srcid><srcstatus/><internalId>674</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7522</srcid><srcstatus/><internalId>897</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Rx.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00123.T2</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall implement the CMDT  T2 (1250ms) timing constraint.
        as described in SAE J1939-21.
        T2 is the maximum alowed gap after CTS was transmitted (originator faliure).
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_8</srcid><srcstatus/><internalId>1141</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_8</srcid><srcstatus/><internalId>1173</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_8</srcid><srcstatus/><internalId>1323</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_8</srcid><srcstatus/><internalId>1350</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2894</srcid><srcstatus/><internalId>675</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Rx.T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00123.T3</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall implement the CMDT  T3 (1250ms) timing constraint.
        as described in SAE J1939-21.
        T3 is the maximum wait time for CM_EndOfMsgACK or CTS after 
        the last packet was transmitted. (responder faliure)
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_6</srcid><srcstatus/><internalId>1445</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_6</srcid><srcstatus/><internalId>1496</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3130</srcid><srcstatus/><internalId>687</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Tx.T3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00123.T4</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall implement the CMDT T4 (1050ms) timing constraint.
        as described in SAE J1939-21. 
        T4 is the maximum wait time for for a CTS message after a TP.CM_CTS message
        with data byte 2 set to zero to “hold the connection open”.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_14</srcid><srcstatus/><internalId>1453</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_13</srcid><srcstatus/><internalId>1503</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7297</srcid><srcstatus/><internalId>879</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
          <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Tx.T4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00121.tbammin</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall implement the BAM related timing constraints 50ms as described in
        SAE J1939-21. They supervise the BAM data flow.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_CANCELTRANSMIT_2</srcid><srcstatus/><internalId>1420</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_CANCELTRANSMIT_2</srcid><srcstatus/><internalId>1426</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_467</srcid><srcstatus/><internalId>509</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.BAM.tbammin</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00121.Tr</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall implement the BAM related timing constraints Tr (200ms) as described in
        SAE J1939-21. They supervise the BAM data flow.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_ABORT_2</srcid><srcstatus/><internalId>1414</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_2</srcid><srcstatus/><internalId>1548</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_2</srcid><srcstatus/><internalId>1558</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_601</srcid><srcstatus/><internalId>523</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00121.T1</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        J1939Tp shall implement the BAM related timing constraints T1 (750ms)as described in
        SAE J1939-21. They supervise the BAM data flow.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_6</srcid><srcstatus/><internalId>1252</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_BAM_6</srcid><srcstatus/><internalId>1305</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2347</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.Rx.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00217.FirstDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If J1939TpTxRetrySupport is enabled, the J1939Tp shall call PduR_J1939TpCopyTxData with
        - TpDataState set to TP_DATACONF for the first call after reception of a TP.CM_CTS
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_RETRY_TRSMT_1</srcid><srcstatus/><internalId>1573</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RETRY_TRSMT_1</srcid><srcstatus/><internalId>1577</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1827</srcid><srcstatus/><internalId>594</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8946</srcid><srcstatus/><internalId>949</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00217.NextDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If J1939TpTxRetrySupport is enabled, the J1939Tp shall call PduR_J1939TpCopyTxData with
        - TpDataState set to TP_CONFPENDING for the following calls.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_RETRY_TRSMT_1</srcid><srcstatus/><internalId>1573</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RETRY_TRSMT_1</srcid><srcstatus/><internalId>1577</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1833</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8751</srcid><srcstatus/><internalId>933</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8952</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00062.Tx.Timer</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Each connection shall be independent of the other connections.(SRS_J1939_00025)
        This means that a connection shall use its own resources, such as timer or state
        machine.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1471</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM_Fast_Confirmation</srcid><srcstatus/><internalId>1472</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM_PARALLELFEATURE</srcid><srcstatus/><internalId>1476</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM_Fast_Confirmation_PARALLELFEATURE</srcid><srcstatus/><internalId>1477</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_TIMERS_VALIDATION</srcid><srcstatus/><internalId>1638</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_TIMERS_VALIDATION_TimeOut</srcid><srcstatus/><internalId>1640</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3699</srcid><srcstatus/><internalId>716</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00062.Tx.State</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Each connection shall be independent of the other connections. ⌋ (SRS_J1939_00025)
        This means that a connection shall use its own resources, such as timer or state
        machine.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1471</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM_Fast_Confirmation</srcid><srcstatus/><internalId>1472</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_TWO_CMDT</srcid><srcstatus/><internalId>1473</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM_PARALLELFEATURE</srcid><srcstatus/><internalId>1476</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM_Fast_Confirmation_PARALLELFEATURE</srcid><srcstatus/><internalId>1477</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_TWO_CMDT_PARALLELFEATURE</srcid><srcstatus/><internalId>1478</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3709</srcid><srcstatus/><internalId>717</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00062.Rx.Timer</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Each connection shall be independent of the other connections.(SRS_J1939_00025)
        This means that a connection shall use its own resources, such as timer or state
        machine.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_SA_DA_LEGACY_SESSION_NUMB_FORMAT</srcid><srcstatus/><internalId>1230</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_DIFF_SA_DA</srcid><srcstatus/><internalId>1232</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_SA_DA</srcid><srcstatus/><internalId>1233</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_RCV_TWO_CMDT</srcid><srcstatus/><internalId>1401</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RX_TIMERS_VALIDATION</srcid><srcstatus/><internalId>1639</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RX_TIMERS_VALIDATION_TimeOut</srcid><srcstatus/><internalId>1641</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3760</srcid><srcstatus/><internalId>718</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00062.Rx.State</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Each connection shall be independent of the other connections.(SRS_J1939_00025)
        This means that a connection shall use its own resources, such as timer or state
        machine.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_SA_DA_LEGACY_SESSION_NUMB_FORMAT</srcid><srcstatus/><internalId>1230</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_DIFF_SA_DA</srcid><srcstatus/><internalId>1232</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_SA_DA</srcid><srcstatus/><internalId>1233</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_RCV_TWO_CMDT</srcid><srcstatus/><internalId>1401</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3767</srcid><srcstatus/><internalId>719</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00032.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        An Abort Transmission feature shall indicate to the upper layer that the CMDT transmission of a
        given N-SDU has been aborted. It uses the callback function PduR_J1939TpTxConfirmation
        with the state parameter E_NOT_OK.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_9</srcid><srcstatus/><internalId>1499</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_10</srcid><srcstatus/><internalId>1500</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_12</srcid><srcstatus/><internalId>1502</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_3</srcid><srcstatus/><internalId>1589</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1323</srcid><srcstatus/><internalId>568</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00032.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        An Abort Transmission feature shall indicate to the upper layer that the broadcast transmission of a
        given N-SDU has been aborted. It uses the callback function PduR_J1939TpTxConfirmation
        with the state parameter E_NOT_OK.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_TRSMT_ABORT_4</srcid><srcstatus/><internalId>1416</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_4</srcid><srcstatus/><internalId>1550</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_585</srcid><srcstatus/><internalId>522</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00032.DirectPg</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        An Abort Transmission feature shall indicate to the upper layer that the Direct pg transmission of a
        given N-SDU has been aborted. It uses the callback function PduR_J1939TpTxConfirmation
        with state E_NOT_OK.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_11</srcid><srcstatus/><internalId>1450</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2127</srcid><srcstatus/><internalId>622</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00031.CMDT</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        An Abort Reception feature shall indicate to the upper layer that the CMDT reception of a given
        N-SDU has been aborted. It uses the PduR_J1939TpRxIndication() with state parameter E_NOT_OK.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_1</srcid><srcstatus/><internalId>1134</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_1</srcid><srcstatus/><internalId>1166</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_1</srcid><srcstatus/><internalId>1316</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_1</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_9</srcid><srcstatus/><internalId>1595</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2494</srcid><srcstatus/><internalId>644</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00031.BAM</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        An Abort Reception feature shall indicate to the upper layer that the BAM reception of a given
        N-SDU has been aborted. It uses the PduR_J1939TpRxIndication() with state parameter E_NOT_OK.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_1</srcid><srcstatus/><internalId>1247</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_BAM_1</srcid><srcstatus/><internalId>1300</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2377</srcid><srcstatus/><internalId>642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00229.StartOfReception</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        While monitoring the buffer state returned be PduR_J1939TpStartOfReception , the J1939Tp shall send
        TP.CM_CTS wait frames (number of packets set to 0, see also SAE J1939-21)according to the
        timing requirements defined in SAE J1939-21.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_2</srcid><srcstatus/><internalId>1273</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_2</srcid><srcstatus/><internalId>1394</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1398</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3535</srcid><srcstatus/><internalId>713</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00229.CopyRxData</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        While monitoring the buffer state returned be PduR_J1939TpCopyRxData , the J1939Tp shall send
        TP.CM_CTS wait frames (number of packets set to 0, see also SAE J1939-21)according to the
        timing requirements defined in SAE J1939-21.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_15</srcid><srcstatus/><internalId>1148</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_16</srcid><srcstatus/><internalId>1149</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_15</srcid><srcstatus/><internalId>1180</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_16</srcid><srcstatus/><internalId>1181</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_CMDT_4</srcid><srcstatus/><internalId>1205</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_15</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_15</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_CMDT_4</srcid><srcstatus/><internalId>1378</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3536</srcid><srcstatus/><internalId>714</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00199.MetaData</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        During transmission, the relevant set of N-PDUs is identified by the SA/DA in case 
        metadata is provided by the upper layer.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5243</srcid><srcstatus/><internalId>774</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>322</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00199.NoMetaData</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        During transmission, the relevant set of N-PDUs is identified by the configured SA/DA of
        N-SDUs without MetaData.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_BAM</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_TRSMT_CMDT</srcid><srcstatus/><internalId>1525</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5265</srcid><srcstatus/><internalId>775</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>323</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00064.Data</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Unexpected TP.DT frames shall be ignored.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_18</srcid><srcstatus/><internalId>1151</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_18</srcid><srcstatus/><internalId>1183</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_18</srcid><srcstatus/><internalId>1333</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_17</srcid><srcstatus/><internalId>1359</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7458</srcid><srcstatus/><internalId>893</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SRS.Unexpected.Data</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00064.Bam</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Unexpected TP.CM_BAM frames shall terminate an active connection and start a new one.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_17</srcid><srcstatus/><internalId>1150</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_17</srcid><srcstatus/><internalId>1182</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_SESSION_NUMB_LEGACY_FORMAT</srcid><srcstatus/><internalId>1246</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_8</srcid><srcstatus/><internalId>1254</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_13</srcid><srcstatus/><internalId>1259</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_BAM_8</srcid><srcstatus/><internalId>1307</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_17</srcid><srcstatus/><internalId>1332</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6630</srcid><srcstatus/><internalId>846</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SRS.Unexpected.Bam</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00064.Rts</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Unexpected TP.CM_RTS frames shall terminate an active connection and start a new one if the PGN is the same.
        Otherwise they shall be answered by a TP.Conn_Abort frame.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_14</srcid><srcstatus/><internalId>1147</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_29</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_30</srcid><srcstatus/><internalId>1163</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_29</srcid><srcstatus/><internalId>1194</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_30</srcid><srcstatus/><internalId>1195</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_27</srcid><srcstatus/><internalId>1342</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_26</srcid><srcstatus/><internalId>1368</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_27</srcid><srcstatus/><internalId>1369</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_28</srcid><srcstatus/><internalId>1370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6104</srcid><srcstatus/><internalId>836</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SRS.Unexpected.Rts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00064.CTS</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Unexpected TP.CM_CTS frames shall be ignored.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_16</srcid><srcstatus/><internalId>1149</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_16</srcid><srcstatus/><internalId>1181</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_16</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_16</srcid><srcstatus/><internalId>1358</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6992</srcid><srcstatus/><internalId>863</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7033</srcid><srcstatus/><internalId>866</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7102</srcid><srcstatus/><internalId>872</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SRS.Unexpected.Cts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00064.Eom</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Unexpected TP.CM_EndOfMsgACK frames shall be ignored.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_3</srcid><srcstatus/><internalId>1536</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_3</srcid><srcstatus/><internalId>1539</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_3</srcid><srcstatus/><internalId>1542</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_3</srcid><srcstatus/><internalId>1545</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6993</srcid><srcstatus/><internalId>864</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7034</srcid><srcstatus/><internalId>867</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7103</srcid><srcstatus/><internalId>873</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SRS.Unexpected.Eom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Tp_00064.Abort</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Unexpected TP.Conn_Abort frames for a different PGN shall be ignored.
      </description>
      <tags>
        <tag>basic</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_6</srcid><srcstatus/><internalId>1139</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_6</srcid><srcstatus/><internalId>1171</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_6</srcid><srcstatus/><internalId>1321</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_6</srcid><srcstatus/><internalId>1348</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_5</srcid><srcstatus/><internalId>1444</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_5</srcid><srcstatus/><internalId>1495</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_ABORT_IDLE_TEST</srcid><srcstatus/><internalId>1516</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_DIRECT_CM_Abort_IDLE</srcid><srcstatus/><internalId>1533</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6631</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6994</srcid><srcstatus/><internalId>865</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7035</srcid><srcstatus/><internalId>868</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7104</srcid><srcstatus/><internalId>874</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SRS.Unexpected.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.PDU_Specific.PDU1</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If the value of the PF field is below 240, indicating PDU1 Format, then the PS field is a DA.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2185</srcid><srcstatus/><internalId>627</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_DIRECT_1</srcid><srcstatus/><internalId>1482</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_CONCURRENT_MESSAGE_DOUBLE_CONFIRMATION</srcid><srcstatus/><internalId>1489</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_CONCURRENT_MESSAGE_SINGLE_CONFIRMATION</srcid><srcstatus/><internalId>1490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.PDU_Specific</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.PDU_Specific.PDU2</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If the value of the PF field is 240 to 255, indicating PDU2 Format, then the PS field contains a GE value.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2177</srcid><srcstatus/><internalId>626</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_DIRECT_1</srcid><srcstatus/><internalId>1482</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_CONCURRENT_MESSAGE_DOUBLE_CONFIRMATION</srcid><srcstatus/><internalId>1489</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_CONCURRENT_MESSAGE_SINGLE_CONFIRMATION</srcid><srcstatus/><internalId>1490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.PDU_Specific</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.BamTransfer.MaxPDUSize.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        For an FD BAM transfer, the maximum A_PDU data size that can be received is limited to 15300 bytes.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6445</srcid><srcstatus/><internalId>838</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_5</srcid><srcstatus/><internalId>1251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.BamTransfer.MaxPDUSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.BamTransfer.MaxPDUSize.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        For an FD BAM transfer, the maximum A_PDU data size that can be Transmitted is limited to 15300 bytes,
        and the FD BAM transfer that exceeds this limit should be rejected by returning E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5288</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_BAM_Invalid_Length</srcid><srcstatus/><internalId>1556</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_Invalid_Length_TiemOut</srcid><srcstatus/><internalId>1564</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.BamTransfer.MaxPDUSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.BamTransfer.Initiation.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        An FD BAM reception session is initiated when the receiver receives the FD.TP.CM_BAM message to the global Destination
        Address.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5906</srcid><srcstatus/><internalId>825</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_1</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_1</srcid><srcstatus/><internalId>1247</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_2</srcid><srcstatus/><internalId>1248</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_3</srcid><srcstatus/><internalId>1249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.BamTransfer.Initiation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.BamTransfer.Initiation.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        An FD BAM transmission session is initiated when the originator transmits the FD.TP.CM_BAM message to the global Destination
        Address.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_386</srcid><srcstatus/><internalId>506</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1422</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1423</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1424</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.BamTransfer.Initiation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.BamTransfer.DT.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        After receiving the FD.TP.CM_BAM message, the receiver receives the PG data using a series of Data Transfer
        (FD.TP.DT) messages to the global Destination Address.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1095</srcid><srcstatus/><internalId>550</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_1</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_2</srcid><srcstatus/><internalId>1129</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_3</srcid><srcstatus/><internalId>1130</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_4</srcid><srcstatus/><internalId>1131</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_5</srcid><srcstatus/><internalId>1132</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_1</srcid><srcstatus/><internalId>1247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.BamTransfer.DT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.BamTransfer.DT.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        After sending the FD.TP.CM_BAM message, the transmitter begins sending the PG data using a series of Data Transfer
        (FD.TP.DT) messages to the global Destination Address.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_628</srcid><srcstatus/><internalId>524</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_FD_TRSMT_1</srcid><srcstatus/><internalId>1428</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_TRSMT_2</srcid><srcstatus/><internalId>1429</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_TRSMT_3</srcid><srcstatus/><internalId>1430</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.BamTransfer.DT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.BamTransfer.EOMS.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        After receiving the Data Transfer (FD.TP.DT) message for the final data segment, the receiver receives the
        FD.TP.CM_EndOfMsgStatus (EOMS) completion message to close the connection (call the PduR_J1939TpRxIndication with E_OK).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2703</srcid><srcstatus/><internalId>659</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_8</srcid><srcstatus/><internalId>1254</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.BamTransfer.EOMS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.BamTransfer.EOMS.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        After sending the Data Transfer (FD.TP.DT) message for the final data segment, the originator transmits the
        FD.TP.CM_EndOfMsgStatus (EOMS) completion message to close the connection.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_378</srcid><srcstatus/><internalId>504</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_FD_TRSMT_1</srcid><srcstatus/><internalId>1428</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_TRSMT_2</srcid><srcstatus/><internalId>1429</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_TRSMT_3</srcid><srcstatus/><internalId>1430</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.BamTransfer.EOMS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.BamTransfer.ConcurrentSessions.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Up to four concurrent BAM sessions per originator address can be received and can be simultaneous with RTS/CTS sessions.
        BAM transfers shall only use Session numbers 0 to 3.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6770</srcid><srcstatus/><internalId>854</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_1</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_SESSION_NUMB_LEGACY_FORMAT</srcid><srcstatus/><internalId>1246</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_13</srcid><srcstatus/><internalId>1259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.BamTransfer.ConcurrentSessions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.BamTransfer.ConcurrentSessions.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Up to four concurrent BAM sessions per originator address can be transmitted and can be simultaneous with RTS/CTS sessions.
        BAM transfers shall only use Session numbers 0 to 3.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7751</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_BAM_CLASSICBAM</srcid><srcstatus/><internalId>1565</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONCURRENT_CONFIRMATION_TEST</srcid><srcstatus/><internalId>1566</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_CONC_SESSIONS_TRSMT</srcid><srcstatus/><internalId>1567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.BamTransfer.ConcurrentSessions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.UniqueSession.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        A reception session (connection) is unique to the combination of the originator source address, responder source address,
        and the session number.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5758</srcid><srcstatus/><internalId>822</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5957</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7450</srcid><srcstatus/><internalId>892</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_SESSION_NUMB_LEGACY_FORMAT</srcid><srcstatus/><internalId>1246</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_8</srcid><srcstatus/><internalId>1254</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_13</srcid><srcstatus/><internalId>1259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.UniqueSession</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.UniqueSession.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        A transmission session (connection) is unique to the combination of the originator source address, responder source address,
        and the session number.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7748</srcid><srcstatus/><internalId>909</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_BAM_CLASSICBAM</srcid><srcstatus/><internalId>1565</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONCURRENT_CONFIRMATION_TEST</srcid><srcstatus/><internalId>1566</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_CONC_SESSIONS_TRSMT</srcid><srcstatus/><internalId>1567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.UniqueSession</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.MaxPDUSize.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        For an FD CMDT transfer, the maximum A_PDU data size that can be received is limited to 16777215 bytes.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6450</srcid><srcstatus/><internalId>839</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.MaxPDUSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.MaxPDUSize.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        For an FD CMDT transfer, the maximum A_PDU data size that can be transmitted is limited to 16777215 bytes,
        and the FD CMDT transfer that exceeds this limit should be rejected by returning E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5289</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_CMDT_Invalid_Length</srcid><srcstatus/><internalId>1515</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.MaxPDUSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        An FD CMDT reception session is initiated when the receiver receives the FD.TP.CM_RTS message from its specific responder Destination
        Address.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6103</srcid><srcstatus/><internalId>835</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_3</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_4</srcid><srcstatus/><internalId>1223</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_5</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_3</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_4</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_5</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.Initiation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        An FD CMDT transmission session is initiated when the originator transmits the FD.TP.CM_RTS message to a specific responder Destination
        Address.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3240</srcid><srcstatus/><internalId>691</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1534</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_2</srcid><srcstatus/><internalId>1535</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1537</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_2</srcid><srcstatus/><internalId>1538</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.Initiation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.Accept.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        To accept CMDT connection, the responder transmits a FD.TP.CM_CTS message to the originator Destination Address
        after ensuring that it has sufficient resources to handle the message size it is accepting to establish the connection.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2931</srcid><srcstatus/><internalId>677</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_3</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_4</srcid><srcstatus/><internalId>1223</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_5</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_3</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_4</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_5</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.Accept</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.Accept.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The connection is considered established for the originator when the originator receives the CTS message from the
        responder in response to its RTS message.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7307</srcid><srcstatus/><internalId>881</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_2</srcid><srcstatus/><internalId>1535</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_2</srcid><srcstatus/><internalId>1538</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.Accept</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.Reject.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        To reject the connection, the responder sends an FD.TP.Conn_Abort message.
        The connection can be rejected for any reason.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2458</srcid><srcstatus/><internalId>643</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_4</srcid><srcstatus/><internalId>1137</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_24</srcid><srcstatus/><internalId>1189</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_RETRY_4</srcid><srcstatus/><internalId>1217</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.Reject</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.Reject.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The connection is rejected if the originator receives an FD.TP.Conn_Abort message.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7059</srcid><srcstatus/><internalId>869</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_4</srcid><srcstatus/><internalId>1494</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.Reject</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.DT.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        After the responder sends an FD.TP.CM_CTS message, the responder begins receiving Data Transfer
        (FD.TP.DT) messages to its own Address. The series of FD.TP.DT (DT) messages will contain the PG
        data segments according to the “next segment” and “number of segment” values specified in the CTS.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3315</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_3</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_4</srcid><srcstatus/><internalId>1223</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_5</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_3</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_4</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_5</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.DT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.DT.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        After receiving an FD.TP.CM_CTS message from the responder, the originator begins sending Data Transfer
        (FD.TP.DT) messages to the responder Destination Address. The series of FD.TP.DT (DT) messages will contain the PG
        data segments according to the “next segment” and “number of segment” values specified in the CTS.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8883</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_2</srcid><srcstatus/><internalId>1535</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_2</srcid><srcstatus/><internalId>1538</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.DT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.ContinueDT.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        While more PG data remains to be received, the responder shall send another CTS for the next set of data segments after
        it receives the last FD.TP.DT message per the previous FD.TP.CM_CTS. Upon sending a subsequent FD.TP.CM_CTS,
        the responder begins receiving Data Transfer (FD.TP.DT) messages with the next set of cleared data segments.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3330</srcid><srcstatus/><internalId>698</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_23</srcid><srcstatus/><internalId>1156</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_23</srcid><srcstatus/><internalId>1188</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_26</srcid><srcstatus/><internalId>1191</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.ContinueDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.ContinueDT.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        While more PG data remains to be transmitted, the originator shall receive CTS for the next set of data segments after
        it sends the last FD.TP.DT message per the previous FD.TP.CM_CTS. Upon receiving a subsequent FD.TP.CM_CTS
        message from the responder, the originator begins sending Data Transfer (FD.TP.DT) messages with the next set
        of cleared data segments.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7308</srcid><srcstatus/><internalId>882</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_3</srcid><srcstatus/><internalId>1536</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_3</srcid><srcstatus/><internalId>1539</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.ContinueDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        After receiving the Data Transfer (FD.TP.DT) message for the final data segment, the receiver receives the
        FD.TP.CM_EndOfMsgStatus (EOMS) completion message to close the connection (call the PduR_J1939TpRxIndication with E_OK).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2740</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_3</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_4</srcid><srcstatus/><internalId>1223</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_5</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_3</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_4</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_5</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.EOMS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        After sending the Data Transfer (FD.TP.DT) message for the final data segment, the originator transmits the
        FD.TP.CM_EndOfMsgStatus (EOMS) completion message to close the connection.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_9057</srcid><srcstatus/><internalId>963</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_2</srcid><srcstatus/><internalId>1535</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_2</srcid><srcstatus/><internalId>1538</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.EOMS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed.RetryEnabled</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If the timeout T1 elapsed set after receiving the Data Transfer (FD.TP.DT) message
        for the final data segment of a CMDT message elapses and the retry is enabled for the responder,
        The responder will Request the FD.TP.CM_EndOfMsgStatus to be resent.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2612</srcid><srcstatus/><internalId>655</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_RETRY_5</srcid><srcstatus/><internalId>1218</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_RETRY_6</srcid><srcstatus/><internalId>1219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed.RetryDisabled.NoAssuranceData</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If the timeout T1 elapsed after receiving the Data Transfer (FD.TP.DT) message
        for the final data segment of a CMDT message elapses and the retry is disabled for the responder,
        and the responder doesn't expect assurance data,
        The responder will not Request the FD.TP.CM_EndOfMsgStatus to be present and will abort the connection
        with abort reason 3 (TPCM_ABORT_REASON_TIMEOUT).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2596</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_27</srcid><srcstatus/><internalId>1160</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_27</srcid><srcstatus/><internalId>1192</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.ConnectionAbortReasons.CanNotSupportAnotherSession</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Abort reason 1, indicate that J1939Tp cannot support another transport session
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1468</srcid><srcstatus/><internalId>581</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5961</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6004</srcid><srcstatus/><internalId>829</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6077</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6617</srcid><srcstatus/><internalId>845</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_11</srcid><srcstatus/><internalId>1144</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.ConnectionAbortReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Abort reason 2, indicate that System resources were needed for another task so this connection managed session was terminated
      </description>
	    <furtherinfo>WRN.impl.needscoverage.count: Based on configuration parameters, the abort reason is varied
           and must be checked in the code in a large number of places.      
	    </furtherinfo>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_578</srcid><srcstatus/><internalId>521</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_907</srcid><srcstatus/><internalId>536</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1022</srcid><srcstatus/><internalId>544</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1347</srcid><srcstatus/><internalId>570</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1555</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1924</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2755</srcid><srcstatus/><internalId>668</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3369</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5344</srcid><srcstatus/><internalId>784</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5421</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5517</srcid><srcstatus/><internalId>801</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8815</srcid><srcstatus/><internalId>940</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8994</srcid><srcstatus/><internalId>956</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_9040</srcid><srcstatus/><internalId>961</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_9051</srcid><srcstatus/><internalId>962</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_25</srcid><srcstatus/><internalId>1158</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.ConnectionAbortReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.ConnectionAbortReasons.Timeout</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Abort reason 3, indicate that A timeout occurred and this is the connection abort to close the session
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1317</srcid><srcstatus/><internalId>567</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1353</srcid><srcstatus/><internalId>571</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1975</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2004</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2024</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2598</srcid><srcstatus/><internalId>652</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3055</srcid><srcstatus/><internalId>684</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3099</srcid><srcstatus/><internalId>686</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3518</srcid><srcstatus/><internalId>709</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_8</srcid><srcstatus/><internalId>1173</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.ConnectionAbortReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.ConnectionAbortReasons.UnexpectedCtsReceived</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Abort reason 4, indicate that CTS messages received when data transfer is in progress
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7379</srcid><srcstatus/><internalId>890</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_15</srcid><srcstatus/><internalId>1454</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_14</srcid><srcstatus/><internalId>1504</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.ConnectionAbortReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.ConnectionAbortReasons.MaxRetransmitLimitReached</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Abort reason 5, indicate that  Maximum retransmit Request limit reached
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7358</srcid><srcstatus/><internalId>887</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_1</srcid><srcstatus/><internalId>1440</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_7</srcid><srcstatus/><internalId>1446</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_22</srcid><srcstatus/><internalId>1461</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_1</srcid><srcstatus/><internalId>1491</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_7</srcid><srcstatus/><internalId>1497</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_21</srcid><srcstatus/><internalId>1511</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_RETRY_TRSMT_2</srcid><srcstatus/><internalId>1574</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RETRY_TRSMT_2</srcid><srcstatus/><internalId>1578</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_7</srcid><srcstatus/><internalId>1593</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.ConnectionAbortReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.ConnectionAbortReasons.UnexpectedDatasegmentReceived</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Abort reason 6, indicate that Unexpected data transfer segment
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5695</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_DIRECT_CM_Abort_IDLE</srcid><srcstatus/><internalId>1533</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.ConnectionAbortReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Abort reason 7, indicate that Bad sequence/segment number (software cannot recover).
      </description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in test configurations.
          Due to the highly important nature of this topic the count limit is surpassed.
	    </furtherinfo>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3384</srcid><srcstatus/><internalId>706</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7344</srcid><srcstatus/><internalId>884</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_1</srcid><srcstatus/><internalId>1134</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_12</srcid><srcstatus/><internalId>1145</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_24</srcid><srcstatus/><internalId>1157</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_1</srcid><srcstatus/><internalId>1166</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_12</srcid><srcstatus/><internalId>1177</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_24</srcid><srcstatus/><internalId>1189</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_1</srcid><srcstatus/><internalId>1316</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_12</srcid><srcstatus/><internalId>1327</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_24</srcid><srcstatus/><internalId>1339</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_1</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_12</srcid><srcstatus/><internalId>1354</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_23</srcid><srcstatus/><internalId>1365</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_ABORT_16</srcid><srcstatus/><internalId>1455</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_15</srcid><srcstatus/><internalId>1505</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_RETRY_TRSMT_3</srcid><srcstatus/><internalId>1575</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_RETRY_TRSMT_4</srcid><srcstatus/><internalId>1576</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RETRY_TRSMT_3</srcid><srcstatus/><internalId>1579</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RETRY_TRSMT_4</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_11</srcid><srcstatus/><internalId>1597</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.ConnectionAbortReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.ConnectionAbortReasons.DuplicateSequenceNumberReceived</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Abort reason 8, indicate that Duplicate sequence/segment number (software cannot recover).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5696</srcid><srcstatus/><internalId>817</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_NO_DEV</srcid><srcstatus/><internalId>1133</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_5</srcid><srcstatus/><internalId>1138</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.ConnectionAbortReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.ConnectionAbortReasons.InsufficientSystemResources</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Abort reason 9, indicate that “Total Message Size” exceeds system resources
      </description>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.NoMsgAbort</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.ConnectionAbortReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.ConnectionAbortReasons.AssuranceDataMismatch</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        In case of CMDT CanFD reception, if the assurance data received doesn't match the expected value,
        then the transfer shall be aborted with abort reason 10 (TPCM_ABORT_REASON_ASSURANCE_DATA_MISMATCH).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2773</srcid><srcstatus/><internalId>670</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_28</srcid><srcstatus/><internalId>1161</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_28</srcid><srcstatus/><internalId>1193</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.ConnectionAbortReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.ConnectionAbortReasons.AssuranceDataNotReceived</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Abort reason 11, Assurance Data not received (if required)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2606</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_32</srcid><srcstatus/><internalId>1165</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_32</srcid><srcstatus/><internalId>1197</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.ConnectionAbortReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.ConnectionAbortReasons.Reserved</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Abort reasons 0 , 12–249 are Reserved for SAE assignment.
      </description>
      <comment>
        Rationale: This requirement is informational only.
      </comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Tp.ConnectionAbortReasons.Reserved</srcid><srcstatus/><internalId>489</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.ConnectionAbortReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.ConnectionAbortReasons.NotListed</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If a Connection Abort reason is identified that is not listed in the table, use code 250
      </description>
      <comment>
        This abort reason is used when unknown PGN is received.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6641</srcid><srcstatus/><internalId>848</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_RX_INDICATION_TEST_4</srcid><srcstatus/><internalId>1239</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.ConnectionAbortReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.ConnectionAbortReasons.ApplicationLayerReasons</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Abort reasons from 251–255 are defined via SAE J1939-71.  
      </description>
      <comment>
       The modules do not set abort reasons from 251–255 when sending Conn_Abort in the current implementation. However, it's considered a valid abort reason when receiving Conn_Abort, and the connection is aborted accordingly.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5694</srcid><srcstatus/><internalId>815</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_RX_INDICATION_TEST_10</srcid><srcstatus/><internalId>1245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.ConnectionAbortReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed.RetryDisabled.AssuranceData</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        If the timeout T1 elapsed after receiving the Data Transfer (FD.TP.DT) message
        for the final data segment of a CMDT message elapses and the retry is disabled for the responder,
        and the responder expects assurance data,
        The responder will not Request the FD.TP.CM_EndOfMsgStatus to be present and will abort the connection
        with abort reason 11 (TPCM_ABORT_REASON_ASSURANCE_DATA_NOT_RECEIVED).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2604</srcid><srcstatus/><internalId>653</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_32</srcid><srcstatus/><internalId>1165</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_32</srcid><srcstatus/><internalId>1197</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Up to eight concurrent RTS/CTS sessions per originator address can be received and can be simultaneous with BAM sessions.
        RTS/CTS transfers shall only use Session numbers 0 to 7.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6714</srcid><srcstatus/><internalId>850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_5</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_5</srcid><srcstatus/><internalId>1229</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_SA_DA_LEGACY_SESSION_NUMB_FORMAT</srcid><srcstatus/><internalId>1230</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_PGN_SAME_SA_DA_LEGACY_SESSION_NUMB_FORMAT</srcid><srcstatus/><internalId>1231</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_SA_DA</srcid><srcstatus/><internalId>1233</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_PGN_SAME_SA_DA</srcid><srcstatus/><internalId>1235</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.ConcurrentSessions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        Up to eight concurrent RTS/CTS sessions per originator address can be transmitted and can be simultaneous with CMDT sessions.
        RTS/CTS transfers shall only use Session numbers 0 to 7.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7765</srcid><srcstatus/><internalId>911</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_MAX_CONC_SESSIONS_TRSMT</srcid><srcstatus/><internalId>1568</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_SESSIONS_TRSMT_3</srcid><srcstatus/><internalId>1569</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_SESSIONS_TRSMT_2</srcid><srcstatus/><internalId>1570</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_CONC_SESSIONS_TRSMT</srcid><srcstatus/><internalId>1571</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.ConcurrentSessions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.TP_CM_CTS.RequestCode.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The responder Requests the originator to resend the FD.TP.CM_EndOfMsgStatus by sending
        a CTS message with the RQST field set to 1 and the and the Next Segment Number set to FFFFFFh.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2862</srcid><srcstatus/><internalId>673</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_RETRY_5</srcid><srcstatus/><internalId>1218</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_RETRY_6</srcid><srcstatus/><internalId>1219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_CTS.RequestCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.TP_DT.DataField.Rx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The Data field (DATA) of the received DT is used to contain the identified sequential data segment of the PG data. The Data field shall contain
        the 60 byte segment of the PG data, except for the last segment of the PG data. If the last segment of the PG data is less
        than 60 bytes in length and the message length doesn't equal one of the standard CAN FD data frame lengths, then padding
        bytes, AAh (alternating bits of 1 and 0), shall be added following the data segment data.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7471</srcid><srcstatus/><internalId>894</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_1</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_2</srcid><srcstatus/><internalId>1129</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_3</srcid><srcstatus/><internalId>1130</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_4</srcid><srcstatus/><internalId>1131</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_5</srcid><srcstatus/><internalId>1132</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_5</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_5</srcid><srcstatus/><internalId>1229</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_1</srcid><srcstatus/><internalId>1247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_DT.DataField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>378</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.TP_DT.DataField.Tx</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The Data field (DATA) of the transmitted DT is used to contain the identified sequential data segment of the PG data. The Data field shall contain
        the 60 byte segment of the PG data, except for the last segment of the PG data. If the last segment of the PG data is less
        than 60 bytes in length and the message length doesn't equal one of the standard CAN FD data frame lengths, then padding
        bytes, AAh (alternating bits of 1 and 0), shall be added following the data segment data.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_998</srcid><srcstatus/><internalId>542</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_FD_CANCELTRANSMIT_1</srcid><srcstatus/><internalId>1425</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_9</srcid><srcstatus/><internalId>1555</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_9</srcid><srcstatus/><internalId>1563</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_DT.DataField</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.D_PDU3.Format.DA</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The global DA is implied by the D_PDU3 Format and does not appear in the arbitration field.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6884</srcid><srcstatus/><internalId>859</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_8</srcid><srcstatus/><internalId>1209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.D_PDU3.Format</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.D_PDU3.Format.SA</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The Source Address of the D_PDU3 format (least significant 8 bits of the identifier)
        defines the sender of the message.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6881</srcid><srcstatus/><internalId>858</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_8</srcid><srcstatus/><internalId>1209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.D_PDU3.Format</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>

    <specobject>
      <id>EB_Ref.SAE.FD.D_PDU3.Format.Priority</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The most significant 3 bits the D_PDU3 format (though it is unnecessary) could be reported as the priority in the metadata.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6887</srcid><srcstatus/><internalId>860</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_8</srcid><srcstatus/><internalId>1209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.D_PDU3.Format</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <!-- EB specific features ====================================================================== -->
    <specobject>
      <id>J1939Tp.EB.GeneralConfigType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name: J1939Tp_GeneralConfigType
        Type: Structure
        Range: implementation specific The content of the initialization data structure is implementation specific.
        Description: Data structure containing post-build configuration data of J1939-TP
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Tp_Typedefs.h_381</srcid><srcstatus/><internalId>495</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.ECUC.TBAMMinTimeout</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name J1939TpTBAMMinTimeout
        Description: Timeout in seconds for BAM data frames ,After this time the J1939Tp shall transmit the next data frame.
        Multiplicity: 1
        Type: EcucFloatParamDef
        Range: 0 .. 65.535
        Default value: .050
        Post-Build Variant Value: false
        Value Configuration Class
        Pre-compile time X All Variants
        Link time       --
        Post-build time --
        Scope / Dependency scope: local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp_Extension.xdm.m4_1970</srcid><srcstatus/><internalId>1045</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.J1939TpTxConcurent</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        J1939Tp should support parallel transmit conections with same SA/DA on different CAN channels when enabling the configuration parameter J1939TpTxChannelHandling.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</srcid><srcstatus/><internalId>1475</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3601</srcid><srcstatus/><internalId>715</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7689</srcid><srcstatus/><internalId>906</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.RxIndication.InvalidSduLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If default error detection (DET) for the J1939Tp module is enabled,
        the J1939Tp module shall raise an error (J1939TP_E_INVALID_SDU_LENGTH)
        when J1939Tp_RxIndication function is called with and invalid Sdu length
        which doesn't equal eight bytes in case of non CanFD channel.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6570</srcid><srcstatus/><internalId>842</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6817</srcid><srcstatus/><internalId>856</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7132</srcid><srcstatus/><internalId>876</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7545</srcid><srcstatus/><internalId>898</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CHANGE_PARAMETER_TEST_5</srcid><srcstatus/><internalId>1267</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_BAM_11</srcid><srcstatus/><internalId>1310</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RX_INDICATION_TEST_5</srcid><srcstatus/><internalId>1407</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_3</srcid><srcstatus/><internalId>1542</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_3</srcid><srcstatus/><internalId>1545</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.FD.TIMEOUT_T5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If default error detection (DET) for the J1939Tp module is enabled,
        the J1939Tp module shall raise an error (J1939TP_E_TIMEOUT_T5)
        when T5 (3000ms) Timeout occurred on transmitter side after transmission of the D.TP.CM_EndOfMsgStatus.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1998</srcid><srcstatus/><internalId>613</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_8</srcid><srcstatus/><internalId>1498</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.RxIndication.InvalidSduLength.FD.CM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If default error detection (DET) for the J1939Tp module is enabled,
        the J1939Tp module shall raise an error (J1939TP_E_INVALID_SDU_LENGTH)
        when J1939Tp_RxIndication function is called with and invalid Sdu length
        which doesn't equal 12 bytes in case of CanFD channel when receiving an FD.CM message.
        The valid length of EOMS message is 12 added to the size of the assurance data set in the EOMS.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6571</srcid><srcstatus/><internalId>843</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6818</srcid><srcstatus/><internalId>857</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_RX_INDICATION_TEST_5</srcid><srcstatus/><internalId>1240</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_RX_INDICATION_TEST_10</srcid><srcstatus/><internalId>1245</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_15</srcid><srcstatus/><internalId>1261</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_16</srcid><srcstatus/><internalId>1262</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_10</srcid><srcstatus/><internalId>1325</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_10</srcid><srcstatus/><internalId>1352</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.RxIndication.InvalidSduLength.FD.DT</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If default error detection (DET) for the J1939Tp module is enabled,
        the J1939Tp module shall raise an error (J1939TP_E_INVALID_SDU_LENGTH)
        when J1939Tp_RxIndication function is called with and invalid Sdu length
        which doesn't equal 64 bytes in case of CanFD channel when receiving an FD.DT message.
        The valid length of the last DT message is required to be one of the valid lengths
        specified by the CAN FD Data Length Code (DLC), as described in ISO 11898-1,
        as long as it's larger than or equal to the remaining bytes in the current transfer.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7546</srcid><srcstatus/><internalId>899</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_RX_INDICATION_TEST_10</srcid><srcstatus/><internalId>1245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.DET.MAINFUNCTION</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If default error detection (DET) for the J1939Tp module is enabled, the J1939Tp module
        shall raise an error (J1939TP_E_UNINIT) when J1939Tp_MainFunction is called before the
        function J1939Tp_Init() has been called.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_MAINFUNCTION_TEST</srcid><srcstatus/><internalId>1298</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4977</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.DET.SHUTDOWN</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If default error detection (DET) for the J1939Tp module is enabled, the J1939Tp module
        shall raise an error (J1939TP_E_UNINIT) when J1939Tp_Shutdown is called before the function
        J1939Tp_Init() has been called.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SHUTDOWN_TEST_1</srcid><srcstatus/><internalId>1412</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5165</srcid><srcstatus/><internalId>766</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.DET.TRANSMIT</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If default error detection (DET) for the J1939Tp module is enabled, the J1939Tp module
        shall raise an error (J1939TP_E_UNINIT) when J1939Tp_Transmit is called before the function
        J1939Tp_Init() has been called.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_TRANSMIT_TEST_2</srcid><srcstatus/><internalId>1582</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5199</srcid><srcstatus/><internalId>768</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.DET.CANCELTRANSMIT</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If default error detection (DET) for the J1939Tp module is enabled, the J1939Tp module
        shall raise an error (J1939TP_E_UNINIT) when J1939Tp_CancelTransmit is called before the 
        function J1939Tp_Init() has been called.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_CancelTransmit_4</srcid><srcstatus/><internalId>1467</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5458</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.DET.CANCELRECEIVE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If default error detection (DET) for the J1939Tp module is enabled, the J1939Tp module
        shall raise an error (J1939TP_E_UNINIT) when CancelReceive is called before the function
        J1939Tp_Init() has been called.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_CMDT_CancelReceive_4</srcid><srcstatus/><internalId>1201</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_CMDT_CancelReceive_4</srcid><srcstatus/><internalId>1374</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5551</srcid><srcstatus/><internalId>808</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.DET.CHANGEPARAMETER</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If default error detection (DET) for the J1939Tp module is enabled, the J1939Tp module
        shall raise an error (J1939TP_E_UNINIT) when ChangeParameter is called before the function
        J1939Tp_Init() has been called.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CHANGE_PARAMETER_TEST_1</srcid><srcstatus/><internalId>1263</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5659</srcid><srcstatus/><internalId>814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.DET.RXINDICATION</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If default error detection (DET) for the J1939Tp module is enabled, the J1939Tp module
        shall raise an error (J1939TP_E_UNINIT) when J1939Tp_RxIndication is called before the
        function J1939Tp_Init() has been called.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_RX_INDICATION_TEST_3</srcid><srcstatus/><internalId>1238</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_RX_INDICATION_TEST_3</srcid><srcstatus/><internalId>1405</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7962</srcid><srcstatus/><internalId>917</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.DET.TXCONFIRMATION</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If default error detection (DET) for the J1939Tp module is enabled, the J1939Tp module
        shall raise an error (J1939TP_E_UNINIT) when J1939Tp_TxConfirmation is called before the
        function J1939Tp_Init() has been called.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_TX_CONFIRMATION_TEST_2</srcid><srcstatus/><internalId>1588</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8135</srcid><srcstatus/><internalId>922</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Header.ComStack</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The implementation header files shall include ComStack_Types.h.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Tp_Typedefs.h_13</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Header.Det</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The implementation source files shall include Det.h to import the
        default error notification API. This API is optional; the header is 
        included depending on ECUC_J1939Tp_00042.
      </description>
      <needscoverage>
      <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_27</srcid><srcstatus/><internalId>500</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Header.PduRJ1939Tp</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The implementation source files shall include PduR_J1939Tp.h, which contains the callbacks
        functions of the PduR module that are used by the J1939Tp module.
      </description>
      <needscoverage>
      <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_24</srcid><srcstatus/><internalId>499</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Header.CanIf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The implementation source files shall include CanIf.h, which contains the service functions
        of the CanIf module that are used by the J1939Tp module.
      </description>
      <needscoverage>
      <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_22</srcid><srcstatus/><internalId>498</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If CanIf_Transmit() returns E_NOT_OK for transmission of a PDU during transmission session,
        the J1939Tp module shall abort the session as defined in SWS_J1939Tp_00032.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_776</srcid><srcstatus/><internalId>534</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1051</srcid><srcstatus/><internalId>548</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1679</srcid><srcstatus/><internalId>589</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1736</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1899</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2221</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3169</srcid><srcstatus/><internalId>690</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8788</srcid><srcstatus/><internalId>938</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8887</srcid><srcstatus/><internalId>945</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_SEGM_TRSMT_DIRECT_7</srcid><srcstatus/><internalId>1488</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_22</srcid><srcstatus/><internalId>1512</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_5</srcid><srcstatus/><internalId>1551</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_6</srcid><srcstatus/><internalId>1552</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_7</srcid><srcstatus/><internalId>1553</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_5</srcid><srcstatus/><internalId>1559</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_6</srcid><srcstatus/><internalId>1560</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_7</srcid><srcstatus/><internalId>1561</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.CanIfTransmit.Rx.ENOTOK</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If CanIf_Transmit() returns E_NOT_OK for transmission of a PDU during reception session,
        the J1939Tp module shall abort the session as defined in SWS_J1939Tp_00031.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2949</srcid><srcstatus/><internalId>679</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4596</srcid><srcstatus/><internalId>733</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_21</srcid><srcstatus/><internalId>1154</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_24</srcid><srcstatus/><internalId>1157</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_21</srcid><srcstatus/><internalId>1186</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_21</srcid><srcstatus/><internalId>1336</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_23</srcid><srcstatus/><internalId>1338</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_RCV_ABORT_24</srcid><srcstatus/><internalId>1339</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_20</srcid><srcstatus/><internalId>1362</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_22</srcid><srcstatus/><internalId>1364</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_23</srcid><srcstatus/><internalId>1365</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.FD.InvalidSession.Rx</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If an invalid session ID is received in an FD_CM message, the J1939Tp shall ignore the transfer and report the error J1939TP_E_INVALID_SESSION_NUMBER.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6583</srcid><srcstatus/><internalId>844</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_1</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_5</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_5</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.FD.C_PGN.Tx</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        J1939Tp shall send the C_PGN frame using the service
        function PduR_J1939TpTransmit().
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2200</srcid><srcstatus/><internalId>629</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_1</srcid><srcstatus/><internalId>1526</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_2</srcid><srcstatus/><internalId>1527</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_3</srcid><srcstatus/><internalId>1528</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_5</srcid><srcstatus/><internalId>1530</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_6</srcid><srcstatus/><internalId>1531</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_DIRECT_Invalid_CM_Abort_Length</srcid><srcstatus/><internalId>1532</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.PduR_J1939TpTransmit.Tx.ENOTOK</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PduR_J1939TpTransmit() returns E_NOT_OK for transmission of a PDU during C-PGN transmission,
        the J1939Tp module shall abort the session as defined in SWS_J1939Tp_00032.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2222</srcid><srcstatus/><internalId>632</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_6</srcid><srcstatus/><internalId>1531</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.FD.AssuranceData.SduLength.Tx</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In case of CanFD transmission, the total length is reported to the J1939Tp module via the J1939Tp_Transmit()
        is the total message length to be transmitted on the bus in addition to the length of the configured assurance data.
      </description>
      <comment>
        In case of no assurance data configured for the Tx NSDU, the assurance data length is set to 0
        and the message length reported via the J1939Tp_Transmit() is the message length that will be sent on the bus.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5233</srcid><srcstatus/><internalId>772</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_BAM_FD_TRSMT_1</srcid><srcstatus/><internalId>1428</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_TRSMT_2</srcid><srcstatus/><internalId>1429</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_BAM_FD_TRSMT_3</srcid><srcstatus/><internalId>1430</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1534</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_2</srcid><srcstatus/><internalId>1535</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_3</srcid><srcstatus/><internalId>1536</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1537</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_2</srcid><srcstatus/><internalId>1538</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_3</srcid><srcstatus/><internalId>1539</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.FD.AssuranceData.StaticSduLength.Rx</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In case of CanFD reception, the total length reported to the PduR module via the PduR_J1939TpStartOfReception()
        is the total message length reported via the TP.FD.CM_BAM or TP.FD.CM_RTS in addition to the length of the configured assurance data.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2324</srcid><srcstatus/><internalId>635</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_1</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_1</srcid><srcstatus/><internalId>1134</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_1</srcid><srcstatus/><internalId>1166</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.FD.AssuranceData.DynamicSduLength.Rx</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In case of CanFD reception, if the J1939TpRxAssuranceDataLength is not configured and assurance data is received
        then the message length reported to the PduR via PduR_J1939TpStartOfReception() is 0 stating that the total length is unknown.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1405</srcid><srcstatus/><internalId>572</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1411</srcid><srcstatus/><internalId>573</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2318</srcid><srcstatus/><internalId>634</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_1</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_1</srcid><srcstatus/><internalId>1134</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_1</srcid><srcstatus/><internalId>1166</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.FD.BAM.CopyAssuranceData.NOTOK</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In case of BAM CanFD reception, if the PduR_J1939TpCopyRxData doesn't return BUFREQ_OK while copying the assurance data during EOMS
        reception, then the transfer shall be silently aborted and the module shall PduR_J1939TpRxIndication with E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2713</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_5</srcid><srcstatus/><internalId>1132</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.FD.CMDT.CopyAssuranceData.NOTOK</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In case of CMDT CanFD reception, if the PduR_J1939TpCopyRxData doesn't return BUFREQ_OK while copying the assurance data during EOMS
        reception, then the transfer shall be aborted with abort reason 2 (TPCM_ABORT_REASON_RESOURCES).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2751</srcid><srcstatus/><internalId>666</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_31</srcid><srcstatus/><internalId>1164</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_31</srcid><srcstatus/><internalId>1196</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.FD.BAM.AssuranceData.MisMatch</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In case of BAM CanFD reception, if the assurance data received doesn't match the expected value,
        then the transfer shall be silently aborted and the module shall PduR_J1939TpRxIndication with E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2766</srcid><srcstatus/><internalId>669</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_2</srcid><srcstatus/><internalId>1129</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.ECUC_J1939TpTxAssuranceDataType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name J1939TpTxAssuranceDataType
        Description: Type of the assurance data for CanFD transmission.
        Multiplicity: 0..1
        Type: EcucEnumerationParamDef
        Range: J1939TP_NO_ASSURANCE_DATA                                        No assurance data for this NSDU.
               J1939TP_CYBERSECURITY_ASSURANCE_DATA                             Cybersecurity assurance data for this NSDU.
               J1939TP_FUNCTIONAL_SAFETY_ASSURANCE_DATA                         Functional safety assurance data for this NSDU.
               J1939TP_COMBINED_CYBERSECURITY_FUNCTIONAL_SAFETY_ASSURANCE_DATA  Combined assurance data for this NSDU.
        Post-Build Variant Multiplicity: false
        Post-Build Variant Value: false
        Multiplicity Configuration Class: Pre-compile time X All Variants
                                          Link time       --
                                          Post-build time --
        Value Configuration Class:        Pre-compile time X All Variants
                                          Link time       --
                                          Post-build time --
        Scope / Dependency scope: local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_973</srcid><srcstatus/><internalId>1025</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.ECUC_J1939TpTxAssuranceDataLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name J1939TpTxAssuranceDataLength
        Description: Length of the assurance data for CanFD transmission in the EOMS if supported for this NSDU.
        Multiplicity: 0..1
        Type: EcucIntegerParamDef
        Range: 0..52
        Default value: --
        Post-Build Variant Multiplicity: true
        Post-Build Variant Value: true
        Multiplicity Configuration Class: Pre-compile time X VARIANT-PRE-COMPILE
                                          Link time       --
                                          Post-build time  X VARIANT-LINK-TIME, VARIANT-POST-BUILD
        Value Configuration Class         Pre-compile time X VARIANT-PRE-COMPILE
                                          Link time       --
                                          Post-build time  X VARIANT-LINK-TIME, VARIANT-POST-BUILD
        Scope / Dependency scope: local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_991</srcid><srcstatus/><internalId>1026</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.ECUC_J1939TpRxAssuranceDataType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name J1939TpRxAssuranceDataType
        Description: Type of the assurance data for CanFD reception.
        Multiplicity: 0..1
        Type: EcucEnumerationParamDef
        Range: J1939TP_NO_ASSURANCE_DATA                                        No assurance data for this NSDU.
               J1939TP_CYBERSECURITY_ASSURANCE_DATA                             Cybersecurity assurance data for this NSDU.
               J1939TP_FUNCTIONAL_SAFETY_ASSURANCE_DATA                         Functional safety assurance data for this NSDU.
               J1939TP_COMBINED_CYBERSECURITY_FUNCTIONAL_SAFETY_ASSURANCE_DATA  Combined assurance data for this NSDU.
        Post-Build Variant Multiplicity: false
        Post-Build Variant Value: false
        Multiplicity Configuration Class: Pre-compile time X All Variants
                                          Link time       --
                                          Post-build time --
        Value Configuration Class:        Pre-compile time X All Variants
                                          Link time       --
                                          Post-build time --
        Scope / Dependency scope: local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_470</srcid><srcstatus/><internalId>993</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.ECUC_J1939TpRxAssuranceDataLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name J1939TpRxAssuranceDataLength
        Description: Length of the assurance data for CanFD reception in the EOMS if supported for this NSDU.
                     If the enabling condition is met and the prameter is not configured, then the assurance data size is dynamic.
        Multiplicity: 0..1
        Type: EcucIntegerParamDef
        Range: 0..52
        Default value: --
        Post-Build Variant Multiplicity: true
        Post-Build Variant Value: true
        Multiplicity Configuration Class: Pre-compile time X VARIANT-PRE-COMPILE
                                          Link time       --
                                          Post-build time  X VARIANT-LINK-TIME, VARIANT-POST-BUILD
        Value Configuration Class         Pre-compile time X VARIANT-PRE-COMPILE
                                          Link time       --
                                          Post-build time  X VARIANT-LINK-TIME, VARIANT-POST-BUILD
        Scope / Dependency scope: local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_488</srcid><srcstatus/><internalId>994</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>
	 <specobject>
      <id>J1939Tp.EB.NumberOfRxChannels</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> J1939Tp configuration generator shall reject configurations where
        more than 65535 reception channels  are configured. 
	  </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp_Extension.xdm.m4_43</srcid><srcstatus/><internalId>1035</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Tp_ComTest_03_RxChannels</srcid><srcstatus/><internalId>1119</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>
	 <specobject>
      <id>J1939Tp.EB.NumberOfTxChannels</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> J1939Tp configuration generator shall reject configurations where
        more than 65535 transmission channels  are configured. 
	  </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp_Extension.xdm.m4_997</srcid><srcstatus/><internalId>1040</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Tp_ComTest_04_TxChannels</srcid><srcstatus/><internalId>1120</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>
	 <specobject>
      <id>J1939Tp.EB.NumberOfRxPgs</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> J1939Tp configuration generator shall reject configurations where
        more than 65535 Reception Pgs  are configured. 
	  </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp_Extension.xdm.m4_495</srcid><srcstatus/><internalId>1037</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Tp_ComTest_07_RxPgs</srcid><srcstatus/><internalId>1123</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>
	 <specobject>
      <id>J1939Tp.EB.NumberOfTxPgs</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> J1939Tp configuration generator shall reject configurations where
        more than 65535 Transmission Pgs  are configured. 
	  </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp_Extension.xdm.m4_1601</srcid><srcstatus/><internalId>1043</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Tp_ComTest_05_TxPg</srcid><srcstatus/><internalId>1121</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>
	 <specobject>
      <id>J1939Tp.EB.NumberOfRxNsdus</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description> J1939Tp configuration generator shall reject configurations where
        more than 255 Reception Nsdus are configured. 
	  </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp_Extension.xdm.m4_634</srcid><srcstatus/><internalId>1038</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Tp_ComTest_08_RxNSdus</srcid><srcstatus/><internalId>1124</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>
	 <specobject>
      <id>J1939Tp.EB.NumberOfTxNsdus</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> J1939Tp configuration generator shall reject configurations where
        more than 65535 Transmission Nsdus  are configured. 
	  </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp_Extension.xdm.m4_1740</srcid><srcstatus/><internalId>1044</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Tp_ComTest_06_TxNsdu</srcid><srcstatus/><internalId>1122</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.FullDuplex</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The J1939Tp configuration generator shall enable full-duplex communication across complementary Tx/Rx channels when both J1939TpTxCmNPdu and J1939TpTxFcNPduRef, or J1939TpRxCmNPdu and J1939TpRxFcNPduRef, are set with identical PDU references within a Tx/Rx channel pair.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Tp_Extension.xdm.m4_298</srcid><srcstatus/><internalId>1036</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Tp_Extension.xdm.m4_888</srcid><srcstatus/><internalId>1039</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Tp_Extension.xdm.m4_1223</srcid><srcstatus/><internalId>1041</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Tp_Extension.xdm.m4_1406</srcid><srcstatus/><internalId>1042</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_1</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_2</srcid><srcstatus/><internalId>1273</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_3</srcid><srcstatus/><internalId>1274</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_RCV_4</srcid><srcstatus/><internalId>1275</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</srcid><srcstatus/><internalId>1278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>J1939Tp.SAE.TimingConstraints.Rx.T1</id>
      <status>approved</status>
      <source>SAE_J1939_21.pdf, Oct 2018</source>
      <version>1</version>
      <description>
        T1 (750 ms) is the time between two successive packets receipt when more were expected.
      </description>
      <comment>
        Please refer to figures J1939Tp_Timing_Constraints_CMDT.png and J1939Tp_Timing_Constraints_BAM.png for CMDT and
        BAM timing constraints respectively.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00159.Rx.T1</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00123.T1</srcid><srcstatus/><internalId>302</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00121.T1</srcid><srcstatus/><internalId>308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.TimingConstraints.Rx.T2</id>
      <status>approved</status>
      <source>SAE_J1939_21.pdf, Oct 2018</source>
      <version>1</version>
      <description>
        T2 (1250 ms) is the time between CTS transmission and first data packet receipt.
      </description>
      <comment>
        Please refer to figure J1939Tp_Timing_Constraints_CMDT.png.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00159.Rx.T2</srcid><srcstatus/><internalId>214</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T2</srcid><srcstatus/><internalId>275</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00123.T2</srcid><srcstatus/><internalId>303</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.TimingConstraints.Tx.T3</id>
      <status>approved</status>
      <source>SAE_J1939_21.pdf, Oct 2018</source>
      <version>1</version>
      <description>
        T3 (1250 ms) is the time between last packet transmission and receipt of new CTS or TP.CM_EndOfMsgACK.
      </description>
      <comment>
        Please refer to figure J1939Tp_Timing_Constraints_CMDT.png.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00100.Tx.T3</srcid><srcstatus/><internalId>205</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T3</srcid><srcstatus/><internalId>276</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00123.T3</srcid><srcstatus/><internalId>304</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.TimingConstraints.Tx.T4</id>
      <status>approved</status>
      <source>SAE_J1939_21.pdf, Oct 2018</source>
      <version>1</version>
      <description>
        T4 (1050 ms) is the time between CTS receipt to hold the connection open and receipt of new CTS.
      </description>
      <comment>
        Please refer to figure J1939Tp_Timing_Constraints_CMDT.png.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00100.Tx.T4</srcid><srcstatus/><internalId>206</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T4</srcid><srcstatus/><internalId>277</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00123.T4</srcid><srcstatus/><internalId>305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.TimingConstraints.Tr</id>
      <status>approved</status>
      <source>SAE_J1939_21.pdf, Oct 2018</source>
      <version>1</version>
      <description>
        Tr (10-200 ms) is the response time in the following cases :
            - Time between receipt of CTS and transmit of first data packet
            - Time between receipt of RTS and CTS transmission
            - Time between each data packet transmission
            - Time between receipt of last packet and new CTS or TP.CM_EndOfMsgACK transmission.
      </description>
      <comment>
        Please refer to figure J1939Tp_Timing_Constraints_CMDT.png.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00100.Tx.Tr</srcid><srcstatus/><internalId>207</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</srcid><srcstatus/><internalId>215</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</srcid><srcstatus/><internalId>278</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00123.Tr</srcid><srcstatus/><internalId>300</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00121.Tr</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.TimingConstraints.Rx.Th</id>
      <status>approved</status>
      <source>SAE_J1939_21.pdf, Oct 2018</source>
      <version>1</version>
      <description>
        Th (500 ms) is the hold time used to keep connection open but cannot receive any packets right now.
      </description>
      <comment>
        Please refer to figure J1939Tp_Timing_Constraints_CMDT.png.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TH</srcid><srcstatus/><internalId>279</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TMS</srcid><srcstatus/><internalId>280</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00123.Th</srcid><srcstatus/><internalId>301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.TimingConstraints.BAM.tbammin</id>
      <status>approved</status>
      <source>SAE_J1939_21.pdf, Oct 2018</source>
      <version>1</version>
      <description>
        The minimal time between two Data packets during BAM transmission is 10 to 200 ms
      </description>
      <comment>
        Please refer to figure J1939Tp_Timing_Constraints_BAM.png.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00121.tbammin</srcid><srcstatus/><internalId>306</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.TP.Conn_Abort</id>
      <status>approved</status>
      <source>SAE_J1939_21.pdf, Oct 2018</source>
      <version>1</version>
      <description>
        When either the originator or responder decides to close out a connection for any reason, prior to completing the data transfer, including a timeout, it shall send a TP.Conn_Abort message with the appropriate Connection Abort reason.
      </description>
      <comment>
        Please refer to figure J1939Tp_messages_format.png for TP.Conn_Abort message format , and J1939Tp_abort_reasons.png for the list of Connection Abort reasons.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00097.Transmission</srcid><srcstatus/><internalId>298</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00097.Reception</srcid><srcstatus/><internalId>299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.PDU_Specific</id>
      <status>approved</status>
      <source>SAE_J1939_21.pdf, Oct 2018</source>
      <version>1</version>
      <description>
        The PDU Specific field is an 8-bit field and its definition depends on the PF field.
        Depending on the PF field, it can be a Destination Address (DA) or a Group Extension (GE).
        If the value of the PF field is below 240, then the PS field is a DA.
        If the value of the PF field is 240 to 255, then the PS field contains a GE value.
      </description>
      <comment>
        The PDU Format (PF) is an 8-bit field that defines whether a PGN has a PDU1 or PDU2 Format,
        and is one of the fields used to determine the PGN assigned to the Data field.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.PDU_Specific.PDU1</srcid><srcstatus/><internalId>330</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.PDU_Specific.PDU2</srcid><srcstatus/><internalId>331</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.MaxPDUSize</id>
      <status>approved</status>
      <source>SAE_J1939_21.pdf, Oct 2018</source>
      <version>1</version>
      <description>
        The maximum message size that can be transferred is limited to 1785 bytes,
        and the transfer that exceeds this limit should be rejected by returning E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5278</srcid><srcstatus/><internalId>777</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_TRANSMIT_TEST_6</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>  
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>J1939Tp.SAE.FD.BamTransfer.MaxPDUSize</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        For an FD BAM transfer, the maximum A_PDU data size that can be transferred is limited to 15300 bytes.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.BamTransfer.MaxPDUSize.Rx</srcid><srcstatus/><internalId>332</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.BamTransfer.MaxPDUSize.Tx</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.BamTransfer.Initiation</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        An FD BAM transfer session is initiated when the originator transmits the FD.TP.CM_BAM message to the global Destination
        Address. This message announces to all nodes on the network that a globally destined large message transfer is about to
        take place.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.BamTransfer.Initiation.Rx</srcid><srcstatus/><internalId>334</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.BamTransfer.Initiation.Tx</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.BamTransfer.DT</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        After sending the FD.TP.CM_BAM message, the originator begins sending the PG data using a series of Data Transfer
        (FD.TP.DT) messages to the global Destination Address.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.BamTransfer.DT.Rx</srcid><srcstatus/><internalId>336</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.BamTransfer.DT.Tx</srcid><srcstatus/><internalId>337</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.BamTransfer.EOMS.TimeOut</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        After receiving the Data Transfer (FD.TP.DT) message for the final data segment of a BAM message,
        the receiver sets the timeout T1 till the (EOMS) completion message is received.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1137</srcid><srcstatus/><internalId>554</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_10</srcid><srcstatus/><internalId>1256</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.BamTransfer.EOMS</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        After sending the Data Transfer (FD.TP.DT) message for the final data segment, the originator transmits the
        FD.TP.CM_EndOfMsgStatus (EOMS) completion message to close the connection. The EOMS message includes
        Assurance Data, if applicable.
      </description>
      <comment>
        After receiving the Data Transfer (FD.TP.DT) message for the final data segment and receiving the EOMS message, a
        responder shall verify the entire message was received and reassembled correctly.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.BamTransfer.EOMS.Rx</srcid><srcstatus/><internalId>338</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.BamTransfer.EOMS.Tx</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.BamTransfer.ConcurrentSessions</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        Up to four concurrent BAM sessions per originator address are allowed and can be simultaneous with RTS/CTS sessions.
        BAM transfers shall only use Session numbers 0 to 3.
      </description>
      <comment>
        Abort messages which correlate to the same connection. The originator shall also use the same session
        value in the EOMS message and Abort message (if needed). Likewise, the same session value shall be used in the related
        Data Transfer messages. The session value used by the originator of a BAM message shall also be used for the EOMS,
        Abort, and Data Transfer of the same connection.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.BamTransfer.ConcurrentSessions.Rx</srcid><srcstatus/><internalId>340</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.BamTransfer.ConcurrentSessions.Tx</srcid><srcstatus/><internalId>341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.UniqueSession</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        A transfer session (connection) is unique to the combination of the originator source address, responder source address,
        and the session number.
      </description>
      <comment>
        The responder source address shall be used to differentiate RTS/CTS from BAM sessions. For a
        BAM transfer the responder source address shall be the global Destination Address.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.UniqueSession.Rx</srcid><srcstatus/><internalId>342</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.UniqueSession.Tx</srcid><srcstatus/><internalId>343</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.CmdtTransfer.MaxPDUSize</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        For an FD CMDT transfer, the maximum A_PDU data size that can be transferred is limited to 16777215 bytes.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.MaxPDUSize.Rx</srcid><srcstatus/><internalId>344</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.MaxPDUSize.Tx</srcid><srcstatus/><internalId>345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.CmdtTransfer.Initiation</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        An FD CMDT transfer session is initiated when the originator transmits the FD.TP.CM_RTS message to a specific responder Destination
        Address. Upon receipt of the RTS message, the responder may elect to accept the connection or to reject it.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Rx</srcid><srcstatus/><internalId>346</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Tx</srcid><srcstatus/><internalId>347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.CmdtTransfer.Accept</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        To accept CMDT connection, the responder transmits a FD.TP.CM_CTS message to the originator Destination Address.
        The responder must ensure that it has sufficient resources to handle the message size it is accepting.
      </description>
      <comment>
        The connection is considered established for the originator when the originator receives the CTS message from the
        responder in response to its RTS message. The connection is considered established for the responder when it has
        successfully transmitted its CTS message in response to the RTS message.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.Accept.Rx</srcid><srcstatus/><internalId>348</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.Accept.Tx</srcid><srcstatus/><internalId>349</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.CmdtTransfer.Reject</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        To reject the connection, the responder sends an FD.TP.Conn_Abort message.
        The connection can be rejected for any reason, although lack of resources, memory, etc.,
        are likely to be the causes.
      </description>
      <comment>
        Sending an Abort message allows the originator to move on to a new connection
        without having to wait for a timeout.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.Reject.Rx</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.Reject.Tx</srcid><srcstatus/><internalId>351</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.CmdtTransfer.DT</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        After receiving an FD.TP.CM_CTS message from the responder, the originator begins sending Data Transfer
        (FD.TP.DT) messages to the responder Destination Address. The series of FD.TP.DT (DT) messages will contain the PG
        data segments according to the “next segment” and “number of segment” values specified in the CTS.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.DT.Rx</srcid><srcstatus/><internalId>352</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.DT.Tx</srcid><srcstatus/><internalId>353</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.CmdtTransfer.ContinueDT</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        While more PG data remains to be received, the responder shall send another CTS for the next set of data segments after
        it receives the last FD.TP.DT message per the previous FD.TP.CM_CTS. Upon receiving a subsequent FD.TP.CM_CTS
        message from the responder, the originator begins sending Data Transfer (FD.TP.DT) messages with the next set
        of cleared data segments.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.ContinueDT.Rx</srcid><srcstatus/><internalId>354</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.ContinueDT.Tx</srcid><srcstatus/><internalId>355</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.CmdtTransfer.EOMS</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        After sending the Data Transfer (FD.TP.DT) message for the final data segment, the originator transmits the
        FD.TP.CM_EndOfMsgStatus (EOMS) completion message to close the connection. The EOMS message includes
        Assurance Data, if applicable.
      </description>
      <comment>
        After receiving the Data Transfer (FD.TP.DT) message for the final data segment and receiving the EOMS message, a
        responder shall verify the entire message was received and reassembled correctly.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Rx</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Tx</srcid><srcstatus/><internalId>357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.CmdtTransfer.EOMS.TimeOut</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        After receiving the Data Transfer (FD.TP.DT) message for the final data segment of a CMDT message,
        the responder sets the timeout T1 till the (EOMS) completion message is received.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3347</srcid><srcstatus/><internalId>700</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_27</srcid><srcstatus/><internalId>1160</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_32</srcid><srcstatus/><internalId>1165</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_27</srcid><srcstatus/><internalId>1192</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_32</srcid><srcstatus/><internalId>1197</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_RETRY_5</srcid><srcstatus/><internalId>1218</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_RETRY_6</srcid><srcstatus/><internalId>1219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.TimingConstraints.Tx.T5</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        T5 (3000 ms) is the time between EOMS transmission and receiving of TP.CM_EndOfMsgACK.
      </description>
      <comment>
        Please refer to Figure A1 - RTS/CTS data transfer without errors.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1995</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_8</srcid><srcstatus/><internalId>1498</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.TimingConstraints.EOMS.Tr</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        Tr (10-200 ms) is the response time between sending last data frame and sending FD.TP.CM_EndOfMsgStatus.
      </description>
      <comment>
        Note that Tr is the same as SAE_J1939-21.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_9029</srcid><srcstatus/><internalId>957</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_ABORT_23</srcid><srcstatus/><internalId>1513</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        If the timeout T1 After set after receiving the Data Transfer (FD.TP.DT) message
        for the final data segment of a CMDT message elapses, The responder may Request
        the FD.TP.CM_EndOfMsgStatus to be resent by sending a CTS message with the
        RQST field set to 1 and the and the Next Segment Number set to FFFFFFh.
      </description>
      <comment>
        In this case, the Number of Segments to Transfer in the CTS message may be set
        to any value as it should be ignored by the originator.
        When used, this Request must be sent prior to sending the FD.TP.CM_EndOfMsgACK.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed.RetryEnabled</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed.RetryDisabled.NoAssuranceData</srcid><srcstatus/><internalId>359</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed.RetryDisabled.AssuranceData</srcid><srcstatus/><internalId>374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.CmdtTransfer.Tx.EOMS.TimeOut.Elapsed</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        As long as the timeout T3 after sending the EOMS message didn't elapse and the retry is enabled
        for the originator, The responder may Request the FD.TP.CM_EndOfMsgStatus to be resent by sending
        a CTS message with the RQST field set to 1 and the and the Next Segment Number set to FFFFFFh
      </description>
      <comment>
        If the timeout T3 elapsed or the RQST code is wrong in the CTS message,
        the originator shall drop the message.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7249</srcid><srcstatus/><internalId>877</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_SEGM_RETRY_ASSURANCE_DATA_TRSMT_1</srcid><srcstatus/><internalId>1517</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_RETRY_ASSURANCE_DATA_TRSMT_2</srcid><srcstatus/><internalId>1518</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_RETRY_ASSURANCE_DATA_TRSMT_3</srcid><srcstatus/><internalId>1519</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_RETRY_ASSURANCE_DATA_TRSMT_4</srcid><srcstatus/><internalId>1520</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_RETRY_ASSURANCE_DATA_TRSMT_5</srcid><srcstatus/><internalId>1521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.CmdtTransfer.ConcurrentSessions</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        Up to eight concurrent RTS/CTS sessions per originator address are allowed and can be simultaneous with CMTD sessions.
        RTS/CTS transfers shall only use Session numbers 0 to 7.
      </description>
      <comment>
        Abort messages which correlate to the same connection. The originator shall also use the same session
        value in the EOMS message and Abort message (if needed). Likewise, the same session value shall be used in the related
        Data Transfer messages. The session value used by the originator of a CMDT message shall also be used for the EOMS,
        Abort, and Data Transfer of the same connection.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Rx</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Tx</srcid><srcstatus/><internalId>376</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.FD.SduLength.Tx</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        In case of CanFD transmission, if the total length is reported to the J1939Tp module via the J1939Tp_Transmit()
        is smaller than 60 bytes and the direct transmission is enabled, then the NSDU is transmitted directly to the IpduM
        via the PduR as a C-PGN.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7670</srcid><srcstatus/><internalId>905</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_1</srcid><srcstatus/><internalId>1526</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_2</srcid><srcstatus/><internalId>1527</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_3</srcid><srcstatus/><internalId>1528</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_4</srcid><srcstatus/><internalId>1529</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_5</srcid><srcstatus/><internalId>1530</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_6</srcid><srcstatus/><internalId>1531</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_DIRECT_Invalid_CM_Abort_Length</srcid><srcstatus/><internalId>1532</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.TP_CM.Frame</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        Parameter Group Name:  FD Transport Protocol Connection Management (FD.TP.CM)
        Definition:            Used for managing the transfer of PGs whose data and any assurance data cannot
                               be transferred using the Multi-PG message.
        Data length:           12 bytes (up to 64 bytes for EOMS with functional safety/cybersecurity assurance data)
        Extended Date Page:    0
        Data Page:             0
        PDU Format:            77
        PDU Specific:          Destination Address (global or specific)
        Default priority:      7
        Parameter Group Number: 19712 (004D00h)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4005</srcid><srcstatus/><internalId>721</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4166</srcid><srcstatus/><internalId>726</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8591</srcid><srcstatus/><internalId>931</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_3</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_4</srcid><srcstatus/><internalId>1223</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_5</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_3</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_4</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_5</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.TP_CM_RTS.FrameFormat</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        Byte: 1.1 to 1.4  Control Type = 0000b, Destination Specific Request_To_Send (RTS)
              1.5 to 1.8  Session Number
        Bytes 2 to 4      Total message size, number of bytes
        Bytes 5 to 7      Total number of segments
        Byte  8           Maximum number of segments that can be sent in response to one CTS.
        Byte  9           Assurance Data Type (ADT)
        Bytes 10 to 12    PGN of the segmented message
          Byte  10          LSB of PGN
          Byte  11          2nd byte of PGN
          Byte  12          MSB of PGN
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6711</srcid><srcstatus/><internalId>849</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Tp.xdm.m4_1102</srcid><srcstatus/><internalId>1031</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_3</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_4</srcid><srcstatus/><internalId>1223</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_5</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_3</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_4</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_5</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.TP_CM_CTS.FrameFormat</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        Byte: 1.1 to 1.4  Control Type = 0001b, Destination Specific Request_To_Send (CTS)
              1.5 to 1.8  Session Number
        Bytes 2 to 4      Reserved for assignment by SAE, these bytes should be filled with FFh in each
        Bytes 5 to 7      Next segment number to be sent
        Byte  8           Maximum number of segments that can be sent.
        Byte  9           Request code
        Bytes 10 to 12    PGN of the segmented message
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2852</srcid><srcstatus/><internalId>672</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_3</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_4</srcid><srcstatus/><internalId>1223</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_5</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_3</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_4</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_5</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.TP_CM_EndOfMsgStatus.FrameFormat</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        Byte: 1.1 to 1.4   Control byte = 0010b, End_of_Message Status
              1.5 to 1.8   Session Number
        Bytes 2 to 4       Total message size transmitted, number of bytes
        Bytes 5 to 7       Total number of segments transmitted
        Byte  8            Size of Assurance Data
        Byte  9            Assurance Data Type (must match RTS or BAM indication of ADT)
        Bytes 10 to 12     PGN of the segmented message
        Bytes 13 up to 64  Assurance Data of full message calculated using AD Type. Total length = Size in byte 8.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2675</srcid><srcstatus/><internalId>656</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6733</srcid><srcstatus/><internalId>851</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_1</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_2</srcid><srcstatus/><internalId>1129</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_8</srcid><srcstatus/><internalId>1254</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_11</srcid><srcstatus/><internalId>1257</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.TP_CM_EndOfMsgACK.FrameFormat</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        Byte: 1.1 to 1.4   Control byte = 0011b, End_of_Message Acknowledge
              1.5 to 1.8   Session Number
        Bytes 2 to 4       Total message size, number of bytes
        Bytes 5 to 7       Total number of segments
        Byte  8            Reserved for assignment by SAE, this byte should be filled with FFh
        Byte  9            Reserved for assignment by SAE, this byte should be filled with FFh
        Bytes 10 to 12     PGN of the segmented message
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4152</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_1</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_2</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_3</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_4</srcid><srcstatus/><internalId>1223</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_5</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</srcid><srcstatus/><internalId>1225</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</srcid><srcstatus/><internalId>1226</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_3</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_4</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_5</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.Conn_Abort.FrameFormat</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        Byte: 1.1 to 1.4   Control byte = 1111b, Connection Abort
              1.5 to 1.8   Session Number
        Bytes 2 to 4       Reserved for assignment by SAE, this byte should be filled with FFh
        Bytes 5 to 7       Reserved for assignment by SAE, this byte should be filled with FFh
        Byte  8            Reserved for assignment by SAE, this byte should be filled with FFh
        Byte  9            Connection Abort reason
        Bytes 10 to 12     PGN of the segmented message
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4002</srcid><srcstatus/><internalId>720</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6751</srcid><srcstatus/><internalId>852</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_14</srcid><srcstatus/><internalId>1260</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.TP_CM_BAM.FrameFormat</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        Byte: 1.1 to 1.4   Control byte = 0100b, Broadcast Announce Message
              1.5 to 1.8   Session Number
        Bytes 2 to 4       Total message size, number of bytes
        Bytes 5 to 7       Total number of segments
        Byte  8            Reserved for assignment by SAE, this byte should be filled with FFh
        Byte  9            Assurance Data Type
        Bytes 10 to 12     PGN of the segmented message
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6767</srcid><srcstatus/><internalId>853</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_BAM_1</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_1</srcid><srcstatus/><internalId>1247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.TP_CM_CTS.RequestCode</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        The Request field (RQST) allows the responder to Request the originator to resend the FD.TP.CM_EndOfMsgStatus
        (EOMS) message. The originator is required to send the EOMS after it transmits the final data segment for the PG data.
        If the responder fails to receive the EOMS, the responder shall use this field to Request the EOMS to be resent.
      </description>
      <comment>
        The Request Field shall be set to 0 for all other instances of CTS message. Originators shall ignore this field until all
        FD.TP.DT segments have been sent.
      </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.TP_CM_CTS.RequestCode.Rx</srcid><srcstatus/><internalId>377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.TP_DT.Frame</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        Parameter Group Name:          FD Transport Protocol Data Transfer (FD.TP.DT)
        Definition:                    Used for the transfer PG data segments using the FD Transport Protocol.
        Transmission repetition rate:  10 - 200ms for BAM data transfers
                                       No more than 200ms for RTS/CTS data transfers
        Data length:                   Up to 64 bytes
        Extended Date Page:            0
        Data Page:                     0
        PDU Format:                    78
        PDU Specific:                  Destination Address (global or specific)
                                       Global DA = 255 is used for BAM data transfers
                                       Global DA is not allowed for RTS/CTS data transfers
        Default priority:              7
        Parameter Group Number:        19968 (004E00h)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1037</srcid><srcstatus/><internalId>545</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_FD_SEGM_TRSMT_1</srcid><srcstatus/><internalId>1534</internalId></linkedfrom><linkedfrom><srcid>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_1</srcid><srcstatus/><internalId>1537</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.TP_DT.FrameFormat</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        Byte: 1.1 to 1.4  Session Number
              1.5 to 1.8  Data Transfer Format Indicator (shall be reported as 0 to indicate the current standard format)
        Bytes 2 to 4      Segment Number
        Bytes 5 to 64     Segmented data. Note the last segment of a segmented PG could contain fewer
                          bytes than the previous segments.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_977</srcid><srcstatus/><internalId>541</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1094</srcid><srcstatus/><internalId>549</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7424</srcid><srcstatus/><internalId>891</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_1</srcid><srcstatus/><internalId>1247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.TP_DT.DataField</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        The Data field (DATA) is used to contain the identified sequential data segment of the PG data. The Data field shall contain
        the 60 byte segment of the PG data, except for the last segment of the PG data. If the last segment of the PG data is less
        than 60 bytes in length and the message length doesn't equal one of the standard CAN FD data frame lengths, then padding
        bytes, AAh (alternating bits of 1 and 0), shall be added following the data segment data.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.TP_DT.DataField.Rx</srcid><srcstatus/><internalId>378</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.TP_DT.DataField.Tx</srcid><srcstatus/><internalId>379</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.ConnectionAbortReasons</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        0          Reserved for SAE assignment
        1          Cannot support another transport session
        2          System resources were needed for another task so this connection managed session was terminated
        3          A timeout occurred and this is the connection abort to close the session
        4          CTS messages received when data transfer is in progress
        5          Maximum retransmit Request limit reached
        6          Unexpected data transfer segment
        7          Bad sequence/segment number (software cannot recover).
        8          Duplicate sequence/segment number (software cannot recover).
        9          “Total Message Size” exceeds system resources
        10         Assurance Data does not match expected value (software cannot recover)
        11         Assurance Data not received (if required)
        12–249     Reserved for SAE assignment
        250        If a Connection Abort reason is identified that is not listed in the table, use code 250
        251–255    Per SAE J1939-71 definitions
      </description>
     <furtherinfo>WRN.swurs.needscoverage.count: Requirement use case is refined in more than 10 refined 
		        requirements due to use case consistency and the fact that there can be numerous reasons for a connection abort
      </furtherinfo>	
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.ConnectionAbortReasons.CanNotSupportAnotherSession</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</srcid><srcstatus/><internalId>361</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.ConnectionAbortReasons.Timeout</srcid><srcstatus/><internalId>362</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.ConnectionAbortReasons.UnexpectedCtsReceived</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.ConnectionAbortReasons.MaxRetransmitLimitReached</srcid><srcstatus/><internalId>364</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.ConnectionAbortReasons.UnexpectedDatasegmentReceived</srcid><srcstatus/><internalId>365</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</srcid><srcstatus/><internalId>366</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.ConnectionAbortReasons.DuplicateSequenceNumberReceived</srcid><srcstatus/><internalId>367</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.ConnectionAbortReasons.InsufficientSystemResources</srcid><srcstatus/><internalId>368</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.ConnectionAbortReasons.AssuranceDataMismatch</srcid><srcstatus/><internalId>369</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.ConnectionAbortReasons.AssuranceDataNotReceived</srcid><srcstatus/><internalId>370</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.ConnectionAbortReasons.Reserved</srcid><srcstatus/><internalId>371</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.ConnectionAbortReasons.NotListed</srcid><srcstatus/><internalId>372</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.ConnectionAbortReasons.ApplicationLayerReasons</srcid><srcstatus/><internalId>373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>
    <specobject>
      <id>J1939Tp.SAE.FD.D_PDU3.Format</id>
      <status>approved</status>
      <source>SAE_J1939_22.pdf, March 2021</source>
      <version>1</version>
      <description>
        This format can only be used to communicate Multi-PG or Proprietary content globally using 11 bit identifier.
        The global DA is implied by the D_PDU3 Format and does not appear in the arbitration field.
        The Source Address (least significant 8 bits of the identifier) defines the sender of the message.
        The most significant 3 bits (though it is unnecessary) could be reported as the priority in the metadata.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SAE.FD.D_PDU3.Format.DA</srcid><srcstatus/><internalId>380</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.D_PDU3.Format.SA</srcid><srcstatus/><internalId>381</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SAE.FD.D_PDU3.Format.Priority</srcid><srcstatus/><internalId>382</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
        <specobject>
            <id>J1939Tp.SRS.Unexpected.Data</id>
            <status>approved</status>
            <source>AUTOSAR_SRS_SAEJ1939.pdf, R4.1 Rev 2</source>
            <version>1</version>
            <description>
              Unexpected TP.DT frames shall be ignored.
            </description>
            <comment>
            </comment>
            <needscoverage>
                <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00064.Data</srcid><srcstatus/><internalId>324</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>
        <specobject>
            <id>J1939Tp.SRS.Unexpected.Bam</id>
            <status>approved</status>
            <source>AUTOSAR_SRS_SAEJ1939.pdf, R4.1 Rev 2</source>
            <version>1</version>
            <description>
              Unexpected TP.CM_BAM frames shall terminate an active connection and start a new one.
            </description>
            <comment>
            </comment>
            <needscoverage>
                <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00064.Bam</srcid><srcstatus/><internalId>325</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>
        <specobject>
            <id>J1939Tp.SRS.Unexpected.Rts</id>
            <status>approved</status>
            <source>AUTOSAR_SRS_SAEJ1939.pdf, R4.1 Rev 2</source>
            <version>1</version>
            <description>
              Unexpected TP.CM_RTS frames shall terminate an active connection and start a new one if the PGN is the same. 
              Otherwise they shall be answered by a TP.Conn_Abort frame.
            </description>
            <comment>
            </comment>
            <needscoverage>
                <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00064.Rts</srcid><srcstatus/><internalId>326</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>
        <specobject>
            <id>J1939Tp.SRS.Unexpected.Cts</id>
            <status>approved</status>
            <source>AUTOSAR_SRS_SAEJ1939.pdf, R4.1 Rev 2</source>
            <version>1</version>
            <description>
              Unexpected TP.CM_CTS frames shall be ignored.
            </description>
            <comment>
            </comment>
            <needscoverage>
                <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00064.CTS</srcid><srcstatus/><internalId>327</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>
        <specobject>
            <id>J1939Tp.SRS.Unexpected.Eom</id>
            <status>approved</status>
            <source>AUTOSAR_SRS_SAEJ1939.pdf, R4.1 Rev 2</source>
            <version>1</version>
            <description>
              Unexpected TP.CM_EndOfMsgACK frames shall be ignored.
            </description>
            <comment>
            </comment>
            <needscoverage>
                <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00064.Eom</srcid><srcstatus/><internalId>328</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>
        <specobject>
            <id>J1939Tp.SRS.Unexpected.Abort</id>
            <status>approved</status>
            <source>AUTOSAR_SRS_SAEJ1939.pdf, R4.1 Rev 2</source>
            <version>1</version>
            <description>
              Unexpected TP.Conn_Abort frames for a different PGN shall be ignored.
            </description>
            <comment>
            </comment>
            <needscoverage>
                <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Tp_00064.Abort</srcid><srcstatus/><internalId>329</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>
    </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>J1939Tp.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Tp_VerifyCodeStub</srcid><srcstatus/><internalId>1116</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.J1939Tp.SaDaConfig</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>13</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>
    <specobject>
      <id>dev.J1939Tp.MaxPacketsAlwaysConfigured</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>
    <specobject>
      <id>dev.J1939Tp.NoMetaData</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>
    <specobject>
      <id>dev.J1939Tp.MetaDataDiffSaDa</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.DiffSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>
    <specobject>
      <id>dev.J1939Tp.NoErrorReporting</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>74</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>
    <specobject>
      <id>dev.J1939Tp.NoPgnInMetaData</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>
    <specobject>
      <id>dev.J1939Tp.VarPduInfoPtr</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>
    <specobject>
      <id>dev.J1939Tp.NoMsgAbort</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>119</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.InsufficientSystemResources</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>
    <specobject>
      <id>dev.J1939Tp.NotMandatoryJ1939_21</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>131</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>
    <specobject>
      <id>dev.J1939Tp.NotMandatoryDet</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>143</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>
    <specobject>
      <id>dev.J1939Tp.NotMandatoryRxIndInterrupt</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>155</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>
    <specobject>
      <id>dev.J1939Tp.NotMandatoryTxConfInterrupt</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>167</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>
    <specobject>
      <id>dev.J1939Tp.NotMandatoryPdur</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>198</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>
    <specobject>
      <id>dev.J1939Tp.NotApplicable</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>209</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_99999</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>
    <specobject>
      <id>dev.J1939Tp.ConnectionAbortReasons.Reserved</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>220</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.Reserved</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/J1939Tp_Typedefs.h_13</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/generate/include/J1939Tp_Typedefs.h</sourcefile>
      <sourceline>13</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Header.ComStack</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Tp_Typedefs.h_14</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/generate/include/J1939Tp_Typedefs.h</sourcefile>
      <sourceline>14</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00230.ComStack_Types</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Tp_Typedefs.h_15</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/generate/include/J1939Tp_Typedefs.h</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00230.Std_Types</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Tp_Typedefs.h_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/generate/include/J1939Tp_Typedefs.h</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Tp_Typedefs.h_75</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/generate/include/J1939Tp_Typedefs.h</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Tp_Typedefs.h_381</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/generate/include/J1939Tp_Typedefs.h</sourcefile>
      <sourceline>381</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.GeneralConfigType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/J1939Tp_Cfg.c_37</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/generate/src/J1939Tp_Cfg.c</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.dsn.PrecompileTimeConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1047</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_13</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>13</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Header.CanIf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Header.PduRJ1939Tp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_27</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Header.Det</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_36</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00007.functions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_233</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>233</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00007.data</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_237</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>237</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_378</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>378</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.EOMS.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_379</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>379</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CANFD.BAM.Tx.EOMS.WaitConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_386</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>386</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.Initiation.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_415</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>415</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_449</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>449</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_467</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>467</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00121.tbammin</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_472</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>472</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.Tx.CM.WaitConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_477</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>477</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_510</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>510</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.Tx.Data</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_520</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>520</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CANFD.BAM.Tx.EOMS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_526</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>526</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_527</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>527</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.Tx.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_535</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>535</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_536</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>536</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CANFD.EOMS.BAM.Tx.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_575</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>575</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00100.Tx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_576</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>576</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.DT.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1087</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_577</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>577</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CANFD.BAM.Tx.EOMS.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_578</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>578</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_585</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>585</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00032.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_601</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>601</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00121.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_628</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>628</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.DT.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_642</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>642</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CANFD.BAM.Tx.Abort.WaitConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_651</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>651</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CANFD.ABORT.BAM.Tx.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_683</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>683</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_701</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>701</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.BAM.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_723</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>723</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_724</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>724</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_731</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>731</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.BAM.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_768</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>768</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.Tx.WaitConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_771</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>771</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_776</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>776</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_802</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>802</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CopyTxData.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_907</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>907</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_935</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>935</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_967</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>967</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_968</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>968</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_976</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>976</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.BAM.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_977</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>977</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_DT.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_998</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>998</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1021</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1021</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CANFD.BAM.Tx.Data.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1022</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1022</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1037</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1037</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_DT.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1043</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1043</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.Tx.WaitConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1046</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1046</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1051</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1051</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1094</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1094</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_DT.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1095</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1095</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1114</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1114</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.Rx.DT.All</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1053</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1135</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1135</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.Rx.DT.End.EOMS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1054</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1137</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1137</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.BamTransfer.EOMS.TimeOut</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1145</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1145</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00118.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1146</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1146</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.Rx.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1052</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1157</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1157</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.BAM</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1174</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1174</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_SN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1179</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1179</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1180</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1180</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00232.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1203</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1203</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1247</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1247</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1271</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1271</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.Abort.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1093</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1303</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1303</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1315</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1315</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00100.Tx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1316</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1316</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.DT.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1087</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1317</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1317</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1323</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1323</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00032.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1334</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1334</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1347</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1347</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1353</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1353</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1405</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1405</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.DynamicSduLength.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1411</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1411</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.DynamicSduLength.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1421</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1421</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00038.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1435</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1435</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1441</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1441</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1449</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1449</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.StartOfReception.EnoughBuff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1450</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1450</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1066</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1465</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1465</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.StartOfReception.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1466</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1466</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.RTS.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1062</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1468</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1468</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.CanNotSupportAnotherSession</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1490</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1490</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1519</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1519</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1541</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1541</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1555</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1555</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1572</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1572</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1608</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1608</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00097.Reception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1664</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1664</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00097.Transmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1679</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1679</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1736</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1736</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1783</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1783</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1798</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1798</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1819</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1819</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1827</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1827</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00217.FirstDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1833</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1833</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00217.NextDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1837</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1837</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1838</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1838</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1843</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1843</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1844</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1844</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1853</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1853</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1890</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1890</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.DT.Sent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1089</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1893</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1893</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1899</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1899</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1922</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1922</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CopyTxData.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1924</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1924</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1959</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1959</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1963</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1963</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00100.Tx.T4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1968</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1968</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00100.Tx.T3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1969</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1969</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1973</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1973</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.CTS.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1082</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1975</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1975</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1995</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1995</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TimingConstraints.Tx.T5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_1998</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>1998</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.TIMEOUT_T5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2004</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2004</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2016</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2016</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00100.Tx.T3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2021</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2021</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.EOMACK.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1086</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2024</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2024</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2060</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2060</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2061</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2061</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.DirectPg.Tx.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1099</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2066</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2066</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2120</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2120</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.Direct.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2127</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2127</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00032.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2138</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2138</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2146</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2146</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.Direct.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2147</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2147</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2177</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2177</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.PDU_Specific.PDU2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2185</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2185</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.PDU_Specific.PDU1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2194</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2194</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.DirectPg.Tx.WaitConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1097</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2200</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2200</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.C_PGN.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2211</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2211</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.directPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2221</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2221</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2222</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2222</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.PduR_J1939TpTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2248</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2248</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CopyTxData.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2318</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2318</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.DynamicSduLength.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2324</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2324</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.StaticSduLength.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2334</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2334</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00038.CM_BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2345</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2345</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.Rx.DT.start</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1050</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2347</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2347</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00121.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2357</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2357</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.StartOfReception.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2371</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2371</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2372</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2372</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2377</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2377</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00031.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2458</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2458</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Reject.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2494</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2494</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00031.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2527</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2527</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00118.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2529</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2529</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1079</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2548</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2548</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.Data.abort.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1077</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2556</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2556</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.StartOfReception.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2584</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2584</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2595</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2595</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2596</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2596</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed.RetryDisabled.NoAssuranceData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2598</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2598</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2604</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2604</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed.RetryDisabled.AssuranceData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2606</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2606</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.AssuranceDataNotReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2612</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2612</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed.RetryEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2675</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2675</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgStatus.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2691</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2691</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.FD.Rx.DataComplete.AssuranceData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1049</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2697</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2697</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.FD.Rx.Reset.NoAssuranceData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1056</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2703</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2703</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.EOMS.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2704</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2704</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.FD.Rx.Reset.AssuranceData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1048</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2713</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2713</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.BAM.CopyAssuranceData.NOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2728</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2728</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.FD.Rx.DataComplete.AssuranceData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1060</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2734</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2734</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.FD.Rx.DataComplete.NoAssuranceData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1071</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2740</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2740</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2741</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2741</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.FD.Rx.AssuranceData.CopySuccess</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1059</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2751</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2751</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.CMDT.CopyAssuranceData.NOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2752</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2752</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.FD.Rx.AssuranceData.CopyFail</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1058</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2755</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2755</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2766</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2766</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.BAM.AssuranceData.MisMatch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2773</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2773</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.AssuranceDataMismatch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2821</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2821</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2852</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2852</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_CTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2862</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2862</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_CM_CTS.RequestCode.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2886</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2886</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2894</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2894</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2928</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2928</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.CTS.Confirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1063</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2931</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2931</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Accept.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2932</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2932</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2949</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2949</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Rx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_2962</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>2962</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3040</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3040</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3045</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3045</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3050</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3050</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3055</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3055</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3098</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3098</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.RTS.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1088</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3099</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3099</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3130</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3130</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3158</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3158</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.RTS.Confirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1091</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3164</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3164</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3169</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3169</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3240</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3240</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3302</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3302</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3314</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3314</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.Dt.all</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1073</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3315</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3315</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3326</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3326</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.CopyRxData.EnoughBuff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3328</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3328</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00226.NewCTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3329</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3329</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.CTS.New</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1064</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3330</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3330</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ContinueDT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3345</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3345</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.DT.End.EOMS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1072</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3347</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3347</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.EOMS.TimeOut</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3355</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3355</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.Data.Com</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1070</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3366</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3366</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3369</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3369</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3381</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3381</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00232.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3382</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3382</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3384</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3384</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3388</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3388</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3502</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3502</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.CTS0.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1065</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3518</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3518</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3531</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3531</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.StartOfReception.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3532</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3532</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.CopyRxData.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3533</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3533</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TH</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3535</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3535</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00229.StartOfReception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3536</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3536</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00229.CopyRxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3601</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3601</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.J1939TpTxConcurent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3699</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3699</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Tx.Timer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3709</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3709</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Tx.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3760</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3760</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Rx.Timer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>718</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_3767</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>3767</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Rx.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4002</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4002</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.Conn_Abort.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>460</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4005</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4005</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4040</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4040</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.Data.abort.Confirm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1061</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4041</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4041</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.Abort.Sent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1085</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4055</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4055</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4152</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4152</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgACK.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4166</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4166</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4216</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4216</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.Data.Com.Confirm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1069</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4227</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4227</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.EndOfMsgAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4585</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4585</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.CTS0.WaitConfirm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1075</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4586</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4586</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.CT0.Sent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1067</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4588</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4588</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.Th</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4592</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4592</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4596</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4596</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Rx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4611</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4611</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.CTS0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1068</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4703</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4703</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00226.BuffSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4760</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4760</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4772</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4772</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4820</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4820</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.BAMTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4838</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4838</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.CMDTTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4893</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4893</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00043.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4913</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4913</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00043.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4941</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4941</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4959</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4959</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4965</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4965</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Reassembly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4976</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4976</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00115.E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>745</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4977</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4977</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.DET.MAINFUNCTION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>746</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_4995</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>4995</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00089</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>747</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5032</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5032</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>748</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5033</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5033</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>749</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5044</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5044</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.InitGlobalVar</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>750</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5050</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5050</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>751</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5074</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5074</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>752</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5075</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5075</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.Tx.initState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>753</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5076</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5076</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.initState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1096</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>754</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5077</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5077</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.DirectPg.Tx.initState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>755</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5095</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5095</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>756</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5096</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5096</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.Rx.initState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1057</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>757</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5097</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5097</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.InitState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1080</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>758</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5119</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5119</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>759</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5125</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5125</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>760</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5126</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5126</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00115.E_REINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>761</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5135</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5135</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00115.E_INIT_FAILED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>762</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5151</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5151</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>763</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5157</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5157</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>764</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5158</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5158</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>765</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5165</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5165</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.DET.SHUTDOWN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>766</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5182</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5182</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>767</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5199</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5199</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.DET.TRANSMIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>768</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5208</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5208</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00115.E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>769</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5217</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5217</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>770</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5227</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5227</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>771</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5233</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5233</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>772</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5242</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5242</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>773</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5243</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5243</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>774</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5265</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5265</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>775</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5266</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5266</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>776</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5278</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5278</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.MaxPDUSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>777</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5288</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5288</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.MaxPDUSize.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>778</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5289</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5289</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.MaxPDUSize.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>779</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5302</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5302</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>780</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5303</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5303</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>781</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5341</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5341</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CANFD.BAM.Tx.EOMS.Confirmation.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>782</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5342</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5342</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CANFD.BAM.Tx.Req.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>783</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5344</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5344</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>784</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5351</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5351</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CancelTransmit.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>785</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5367</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5367</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>786</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5368</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5368</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>787</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5419</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5419</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CancelTransmit.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>788</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5421</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5421</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>789</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5429</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5429</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00203.TxPduId.NotActive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>790</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5430</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5430</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00203.Transmitted.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>791</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5431</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5431</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00203.Transmitted.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>792</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5432</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5432</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00203.Transmitted.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>793</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5444</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5444</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00203.TxPduId.invalid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>794</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5445</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5445</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00188.CancelTransmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>795</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5458</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5458</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.DET.CANCELTRANSMIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>796</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5476</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5476</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>797</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5477</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5477</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>798</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5508</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5508</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CancelReceive.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>799</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5514</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5514</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CancelReceive.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>800</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5517</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5517</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>801</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5523</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5523</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00204.RxPduId.NotActive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>802</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5524</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5524</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00204.received.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>803</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5525</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5525</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00204.received.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>804</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5526</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5526</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00204.received.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>805</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5537</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5537</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00188.CancelReceive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>806</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5538</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5538</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00204.RxPduId.Invalid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>807</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5551</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5551</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.DET.CANCELRECEIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>808</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5572</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5572</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>809</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5628</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5628</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00206.Param.NotTP_BS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>810</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5634</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5634</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00206.LargerVal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>811</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5644</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5644</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00188.ChangeParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>812</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5645</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5645</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00206.Invalid.SduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>813</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5659</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5659</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.DET.CHANGEPARAMETER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>814</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5694</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5694</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.ApplicationLayerReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>815</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5695</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5695</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.UnexpectedDatasegmentReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>816</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5696</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5696</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.DuplicateSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>817</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5707</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5707</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_CAR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>818</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5713</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5713</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>819</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5714</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5714</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>820</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5757</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5757</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>821</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5758</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5758</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.UniqueSession.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>822</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5809</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5809</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>823</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5905</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5905</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.Rx.CM_BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1051</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>824</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5906</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5906</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>825</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5957</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5957</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.UniqueSession.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>826</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_5961</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>5961</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.CanNotSupportAnotherSession</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>827</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6000</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6000</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>828</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6004</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6004</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.CanNotSupportAnotherSession</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>829</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6018</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6018</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_MNOP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>830</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6077</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6077</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.CanNotSupportAnotherSession</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>831</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6090</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6090</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>832</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6091</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6091</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>833</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1076</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>834</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>835</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6104</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6104</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Rts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>836</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6325</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6325</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00057.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>837</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6445</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6445</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.MaxPDUSize.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>838</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6450</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6450</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.MaxPDUSize.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>839</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6512</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6512</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TMS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>840</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6519</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6519</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TNOP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>841</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6570</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6570</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>842</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6571</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6571</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength.FD.CM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>843</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6583</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6583</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.InvalidSession.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>844</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6617</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6617</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.CanNotSupportAnotherSession</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>845</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6630</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6630</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Bam</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>846</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6631</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6631</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>847</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6641</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6641</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.NotListed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>848</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6711</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6711</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_RTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>849</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6714</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6714</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>850</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6733</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6733</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgStatus.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>851</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6751</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6751</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.Conn_Abort.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>460</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>852</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6767</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6767</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_BAM.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>461</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>853</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6770</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6770</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.ConcurrentSessions.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>854</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6799</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6799</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00057.PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>855</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6817</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6817</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>856</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6818</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6818</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength.FD.CM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>857</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6881</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6881</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.D_PDU3.Format.SA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>858</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6884</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6884</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.D_PDU3.Format.DA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>859</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6887</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6887</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.D_PDU3.Format.Priority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>860</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6911</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6911</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.StartOfReception.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>861</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6916</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6916</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>862</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6992</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6992</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>863</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6993</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6993</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Eom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>864</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_6994</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>6994</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>865</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7033</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7033</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>866</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7034</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7034</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Eom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>867</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7035</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7035</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>868</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7059</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7059</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Reject.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>869</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7084</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7084</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>870</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7086</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7086</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1095</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>871</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>872</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Eom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>873</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7104</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7104</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>874</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7109</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>875</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>876</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7249</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7249</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.Tx.EOMS.TimeOut.Elapsed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>877</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7296</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7296</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>878</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7297</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7297</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>879</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7306</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7306</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.CTS.Received</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1081</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>880</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7307</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7307</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Accept.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>881</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7308</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7308</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ContinueDT.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>882</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7342</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7342</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>883</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7344</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7344</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>884</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7346</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7346</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_NPN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>885</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7355</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7355</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>886</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7358</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7358</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.MaxRetransmitLimitReached</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>887</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7365</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7365</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_NOP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>888</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7376</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7376</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>889</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7379</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7379</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.UnexpectedCtsReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>890</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7424</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7424</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_DT.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>891</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7450</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7450</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.UniqueSession.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>892</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7458</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7458</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Data</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>893</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7471</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7471</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>894</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7513</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7513</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.Rx.Received.DT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1055</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>895</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7521</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7521</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.DT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1074</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>896</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7522</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7522</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>897</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7545</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7545</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>898</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7546</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7546</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength.FD.DT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>899</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7590</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7590</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.Sa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>900</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7596</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7596</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>901</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7604</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7604</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>902</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7623</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7623</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00188.Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>903</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7624</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7624</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00115.E_INVALID_PDU_SDU_ID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>904</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7670</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7670</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>905</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7689</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7689</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.J1939TpTxConcurent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>906</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7701</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7701</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>907</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7702</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7702</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>908</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7748</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7748</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.UniqueSession.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>909</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7751</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7751</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.ConcurrentSessions.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>910</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7765</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7765</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>911</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7804</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7804</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.DirectPg.Tx.REQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1098</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>912</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7809</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7809</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>913</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7825</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7825</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.BAM.Tx.REQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>914</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7842</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7842</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1092</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>915</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7925</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7925</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00157.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>916</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7962</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7962</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.DET.RXINDICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>917</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_7970</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>7970</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00115.E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>918</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8084</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8084</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00188.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>919</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8094</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8094</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>920</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8095</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8095</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00157.TxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>921</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8135</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8135</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.DET.TXCONFIRMATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>922</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8220</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8220</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.DT.Start</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1078</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>923</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8238</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8238</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Rx.DT.Start</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1078</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>924</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8268</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8268</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00188.TxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>925</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8370</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8370</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1084</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>926</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8423</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8423</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.CTS.NEW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1083</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>927</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8431</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8431</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.DT.All</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1090</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>928</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8444</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8444</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.EOMACK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1094</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>929</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8526</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8526</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>930</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8591</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8591</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>931</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8743</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8743</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>932</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8751</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8751</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00217.NextDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>933</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8755</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8755</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>934</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8756</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8756</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>935</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8761</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8761</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>936</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8762</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8762</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>937</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8788</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8788</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>938</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8813</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8813</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CopyTxData.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>939</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8815</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8815</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>940</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8835</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8835</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>941</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8880</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8880</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.DT.Sent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1089</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>942</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8882</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8882</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>943</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8883</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8883</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.DT.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>944</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8887</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8887</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>945</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8908</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8908</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>946</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8917</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8917</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>947</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8938</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8938</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>948</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8946</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8946</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00217.FirstDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>949</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8952</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8952</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00217.NextDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>950</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8956</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8956</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>951</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8957</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8957</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>952</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8962</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8962</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>953</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8963</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8963</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>954</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8991</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8991</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CopyTxData.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>955</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_8994</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>8994</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>956</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_9029</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>9029</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.EOMS.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>957</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_9030</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>9030</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>958</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_9035</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>9035</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00100.Tx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>959</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_9036</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>9036</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Dsn.CMDT.Tx.DT.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1087</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>960</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_9040</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>9040</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>961</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_9051</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>9051</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>962</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Tp.c.m4_9057</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/src/J1939Tp.c.m4</sourcefile>
      <sourceline>9057</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>963</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_35</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>964</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_51</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>965</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_67</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00157.Configuration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>966</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_68</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>68</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>967</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_74</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>74</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>968</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_84</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>84</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>969</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_119</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>119</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>970</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_142</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>142</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>971</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_162</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>162</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>972</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_186</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>186</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>973</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_210</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>210</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>974</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_211</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>211</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>975</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_234</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>976</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_255</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>255</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00179</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>977</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_278</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>278</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>978</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_282</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>282</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>979</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_299</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>299</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>980</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_314</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>314</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>981</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_318</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>318</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>982</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_335</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>335</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>983</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_350</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>350</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>984</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_359</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>359</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>985</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_372</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>372</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>986</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_389</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>389</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>987</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_400</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>400</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>988</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_417</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>417</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>989</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_431</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>431</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>990</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_440</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>440</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>991</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_457</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>457</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>992</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_470</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>470</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.ECUC_J1939TpRxAssuranceDataType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>993</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_488</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>488</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.ECUC_J1939TpRxAssuranceDataLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>994</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_512</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>512</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>995</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_523</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>523</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>996</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_540</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>540</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>997</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_556</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>556</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>998</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_566</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>566</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>999</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_602</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>602</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1000</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_625</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>625</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1001</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_646</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>646</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1002</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_670</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>670</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1003</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_671</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>671</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1004</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_697</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>697</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1005</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_717</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>717</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1006</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_740</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>740</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1007</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_751</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>751</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1008</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_768</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>768</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1009</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_782</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>782</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1010</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_786</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>786</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1011</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_803</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>803</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1012</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_817</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>817</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1013</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_821</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>821</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1014</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_838</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>838</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1015</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_852</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>852</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1016</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_861</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>861</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1017</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_875</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>875</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1018</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_892</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>892</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1019</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_903</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>903</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1020</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_920</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>920</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1021</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_934</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>934</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1022</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_943</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>943</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1023</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_960</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>960</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1024</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_973</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>973</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.ECUC_J1939TpTxAssuranceDataType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1025</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_991</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>991</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.ECUC_J1939TpTxAssuranceDataLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1026</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_1015</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>1015</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1027</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_1018</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>1018</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1028</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_1038</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>1038</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1029</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_1066</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>1066</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1030</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_1102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>1102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_RTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1031</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_1127</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>1127</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1032</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp.xdm.m4_1144</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp.xdm.m4</sourcefile>
      <sourceline>1144</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1033</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/J1939Tp_Extension.xdm.m4_28</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp_Extension.xdm.m4</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1034</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp_Extension.xdm.m4_43</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp_Extension.xdm.m4</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.NumberOfRxChannels</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1035</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp_Extension.xdm.m4_298</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp_Extension.xdm.m4</sourcefile>
      <sourceline>298</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FullDuplex</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1036</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp_Extension.xdm.m4_495</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp_Extension.xdm.m4</sourcefile>
      <sourceline>495</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.NumberOfRxPgs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1037</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp_Extension.xdm.m4_634</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp_Extension.xdm.m4</sourcefile>
      <sourceline>634</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.NumberOfRxNsdus</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1038</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp_Extension.xdm.m4_888</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp_Extension.xdm.m4</sourcefile>
      <sourceline>888</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FullDuplex</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1039</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp_Extension.xdm.m4_997</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp_Extension.xdm.m4</sourcefile>
      <sourceline>997</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.NumberOfTxChannels</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1040</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp_Extension.xdm.m4_1223</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp_Extension.xdm.m4</sourcefile>
      <sourceline>1223</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FullDuplex</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1041</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp_Extension.xdm.m4_1406</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp_Extension.xdm.m4</sourcefile>
      <sourceline>1406</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FullDuplex</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1042</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp_Extension.xdm.m4_1601</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp_Extension.xdm.m4</sourcefile>
      <sourceline>1601</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.NumberOfTxPgs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1043</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp_Extension.xdm.m4_1740</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp_Extension.xdm.m4</sourcefile>
      <sourceline>1740</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.NumberOfTxNsdus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1044</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Tp_Extension.xdm.m4_1970</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/config/J1939Tp_Extension.xdm.m4</sourcefile>
      <sourceline>1970</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.ECUC.TBAMMinTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1045</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Tp_Bswmd.arxml.m4_43</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/src/Autosar/generate_swcd/swcd/J1939Tp_Bswmd.arxml.m4</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1046</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>J1939Tp.dsn.PrecompileTimeConfig</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15485</sourceline>
      <version>1</version>
      <description>The J1939Tp shall provide a precompile-time configuration as defined in the Data Structure View.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/J1939Tp_Cfg.c_37</srcid><srcstatus/><internalId>496</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1047</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.FD.Rx.Reset.AssuranceData</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15495</sourceline>
      <version>1</version>
      <description>Assurance data copied, reset the status</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2704</srcid><srcstatus/><internalId>660</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1048</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.FD.Rx.DataComplete.AssuranceData</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15505</sourceline>
      <version>1</version>
      <description>EOMS received with assurance data expected, copy assurance data</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2691</srcid><srcstatus/><internalId>657</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1049</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.Rx.DT.start</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15515</sourceline>
      <version>1</version>
      <description>PduR_J1939TpStartOfReception called after TP.CM_BAM frame received</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2345</srcid><srcstatus/><internalId>637</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1050</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.Rx.CM_BAM</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15525</sourceline>
      <version>1</version>
      <description>TP.CM_BAM frame recieved </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5905</srcid><srcstatus/><internalId>824</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1051</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.Rx.Reset</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15535</sourceline>
      <version>1</version>
      <description>&lt;description/&gt;</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1146</srcid><srcstatus/><internalId>556</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1052</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.Rx.DT.All</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15545</sourceline>
      <version>1</version>
      <description>PduR_J1939TpCopyRxData called and received data &amp;lt; message length</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1124</srcid><srcstatus/><internalId>552</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1053</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.Rx.DT.End.EOMS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15555</sourceline>
      <version>1</version>
      <description>Last FD.TP.DT frame received for FD channel for BAM transfer, waiting for the EOMS</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1135</srcid><srcstatus/><internalId>553</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1054</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.Rx.Received.DT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15565</sourceline>
      <version>1</version>
      <description>TP.DT frame received </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7513</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1055</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.FD.Rx.Reset.NoAssuranceData</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15575</sourceline>
      <version>1</version>
      <description>EOMS received with no expected assurance data, reset status</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2697</srcid><srcstatus/><internalId>658</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1056</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.Rx.initState</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15585</sourceline>
      <version>1</version>
      <description>&lt;description/&gt;</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5096</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1057</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.FD.Rx.AssuranceData.CopyFail</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15595</sourceline>
      <version>1</version>
      <description>Assurance data has not been copied successfully</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2752</srcid><srcstatus/><internalId>667</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1058</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.FD.Rx.AssuranceData.CopySuccess</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15605</sourceline>
      <version>1</version>
      <description>Assurance data has been copied successfully</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2741</srcid><srcstatus/><internalId>665</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1059</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.FD.Rx.DataComplete.AssuranceData</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15615</sourceline>
      <version>1</version>
      <description>EOMS is received with assurance data, assurance data being copied</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2728</srcid><srcstatus/><internalId>662</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1060</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.Data.abort.Confirm</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15625</sourceline>
      <version>1</version>
      <description>&lt;description/&gt;</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4040</srcid><srcstatus/><internalId>722</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1061</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.RTS.Abort</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15635</sourceline>
      <version>1</version>
      <description>PduR_J1939TpStartOfReception return value is not BUFREQ_OK </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1466</srcid><srcstatus/><internalId>580</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1062</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.CTS.Confirmation</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15645</sourceline>
      <version>1</version>
      <description>TP.CM_CTS frame sent and J1939Tp waits for a confirmation from CanIf</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2928</srcid><srcstatus/><internalId>676</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1063</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.CTS.New</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15655</sourceline>
      <version>1</version>
      <description>all block packets received and a new CTS shall be sent </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3329</srcid><srcstatus/><internalId>697</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1064</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.CTS0.CTS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15665</sourceline>
      <version>1</version>
      <description>PduR_J1939TpCopyRxData returns BUFREQ_OK and the available buffer is enough. </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3502</srcid><srcstatus/><internalId>708</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1065</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.CTS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15675</sourceline>
      <version>1</version>
      <description>PduR_J1939TpStartOfReception returns BUFREQ_OK and the available buffer is enough for packets per CTS.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1450</srcid><srcstatus/><internalId>578</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1066</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.CT0.Sent</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15685</sourceline>
      <version>1</version>
      <description>Th timeout elapsed and J1939Tp shall send another waiting  CTS</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4586</srcid><srcstatus/><internalId>730</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1067</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.CTS0</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15695</sourceline>
      <version>1</version>
      <description>PduR_J1939TpStartOfReception returns BUFREQ_OK and the available buffer is not enough, 
while NPDU is not available.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4611</srcid><srcstatus/><internalId>734</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1068</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.Data.Com.Confirm</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15706</sourceline>
      <version>1</version>
      <description>EOMACK frame sent and connection shall be terminated </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4216</srcid><srcstatus/><internalId>727</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1069</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.Data.Com</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15716</sourceline>
      <version>1</version>
      <description>All blocks data received and EOMACK shall be sent </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3355</srcid><srcstatus/><internalId>701</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1070</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.FD.Rx.DataComplete.NoAssuranceData</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15726</sourceline>
      <version>1</version>
      <description>EOMS is received with no assurance data expected, data is complete</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2734</srcid><srcstatus/><internalId>663</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1071</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.DT.End.EOMS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15736</sourceline>
      <version>1</version>
      <description>Last FD.TP.DT frame received for FD channel for CMDT transfer, waiting for the EOMS</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3345</srcid><srcstatus/><internalId>699</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1072</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.Dt.all</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15746</sourceline>
      <version>1</version>
      <description>remaining block packets shall be received </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3314</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1073</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.DT</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15756</sourceline>
      <version>1</version>
      <description>TP.CM_CTS frame confirmed </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7521</srcid><srcstatus/><internalId>896</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1074</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.CTS0.WaitConfirm</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15766</sourceline>
      <version>1</version>
      <description>PduR_J1939TpStartOfReception returns BUFREQ_OK and the available buffer is not enough. </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4585</srcid><srcstatus/><internalId>729</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1075</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.RTS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15776</sourceline>
      <version>1</version>
      <description>TP.CM_RTS frame received </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_6102</srcid><srcstatus/><internalId>834</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1076</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.Data.abort.Reset</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15786</sourceline>
      <version>1</version>
      <description>&lt;description/&gt;</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2548</srcid><srcstatus/><internalId>647</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1077</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.DT.Start</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15796</sourceline>
      <version>1</version>
      <description>TP.CM_CTS frame confirmed </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8220</srcid><srcstatus/><internalId>923</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8238</srcid><srcstatus/><internalId>924</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1078</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.Reset</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15806</sourceline>
      <version>1</version>
      <description>reception finished and connection shall be terminated </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2529</srcid><srcstatus/><internalId>646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1079</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Rx.InitState</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15816</sourceline>
      <version>1</version>
      <description>&lt;description/&gt;</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5097</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1080</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.CTS.Received</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15826</sourceline>
      <version>1</version>
      <description>CTS frame received and J1939Tp stars to send packets per CTS.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7306</srcid><srcstatus/><internalId>880</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1081</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.CTS.Timeout</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15836</sourceline>
      <version>1</version>
      <description>T3 timeout elapsed, connection shall be aborted. </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1973</srcid><srcstatus/><internalId>610</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1082</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.CTS.NEW</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15846</sourceline>
      <version>1</version>
      <description>J1939Tp waits for a new CTS after all packets per cts was sent </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8423</srcid><srcstatus/><internalId>927</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1083</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.CTS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15856</sourceline>
      <version>1</version>
      <description>RTS sent and J1939Tp waits for CTS frame</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8370</srcid><srcstatus/><internalId>926</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1084</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.Abort.Sent</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15866</sourceline>
      <version>1</version>
      <description>TP.Conn_Abort frame sent and J1939Tp waits for a confirmation from CanIf</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_4041</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1085</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.EOMACK.Timeout</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15876</sourceline>
      <version>1</version>
      <description>T3 timeout elapsed and connection shall be aborted </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2021</srcid><srcstatus/><internalId>616</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1086</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.DT.Timeout</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15886</sourceline>
      <version>1</version>
      <description>T3 timeout elapsed , and connection shall be aborted </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_576</srcid><srcstatus/><internalId>519</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1316</srcid><srcstatus/><internalId>566</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_9036</srcid><srcstatus/><internalId>960</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1087</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.RTS.Timeout</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15896</sourceline>
      <version>1</version>
      <description>NPDU  for transmission is not available and Tr timeout elapsed </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3098</srcid><srcstatus/><internalId>685</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1088</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.DT.Sent</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15906</sourceline>
      <version>1</version>
      <description>TP.DT frame sent , J1939Tp waits for confirmation from CanIf</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1890</srcid><srcstatus/><internalId>601</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8880</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1089</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.DT.All</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15916</sourceline>
      <version>1</version>
      <description>transmitted TP.DT frame confirmed and number of sent packets &amp;lt; number of packets per CTS</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8431</srcid><srcstatus/><internalId>928</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1090</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.RTS.Confirmation</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15926</sourceline>
      <version>1</version>
      <description>RTS frame sent and J1939Tp wait for confirmation from CanIf.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_3158</srcid><srcstatus/><internalId>688</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1091</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.RTS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15936</sourceline>
      <version>1</version>
      <description>J1939Tp_Transmit called with message length is &amp;gt; 8 and destination address is not 0xff</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7842</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1092</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.Abort.Reset</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15946</sourceline>
      <version>1</version>
      <description>TP.Conn_Abort frame sent and transmission session shall be closed</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1271</srcid><srcstatus/><internalId>563</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1093</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.EOMACK</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15956</sourceline>
      <version>1</version>
      <description>all data was sent , J1939Tp waits for EOMACK frame </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_8444</srcid><srcstatus/><internalId>929</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1094</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.Reset</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15966</sourceline>
      <version>1</version>
      <description>EOMACK frame received and transmission session finished </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7086</srcid><srcstatus/><internalId>871</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1095</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CMDT.Tx.initState</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15976</sourceline>
      <version>1</version>
      <description>&lt;description/&gt;</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5076</srcid><srcstatus/><internalId>754</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1096</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.DirectPg.Tx.WaitConfirmation</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15986</sourceline>
      <version>1</version>
      <description>Direct PG message sent through CanIf</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2194</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1097</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.DirectPg.Tx.REQ</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>15996</sourceline>
      <version>1</version>
      <description>J1939Tp_Transmit called with message length is less than or equal 8 while J1939TpTxPgDynLength is enabled</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7804</srcid><srcstatus/><internalId>912</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1098</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.DirectPg.Tx.Reset</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16006</sourceline>
      <version>1</version>
      <description>J1939Tp_TxConfirmation called to confirm direct pg transmission through CanIf</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_2061</srcid><srcstatus/><internalId>619</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1099</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.DirectPg.Tx.initState</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16016</sourceline>
      <version>1</version>
      <description>the initial state for NSDU is idle </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5077</srcid><srcstatus/><internalId>755</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1100</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CANFD.BAM.Tx.Abort.WaitConfirmation</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16026</sourceline>
      <version>1</version>
      <description>Abort frame sent, and waiting for confirmation</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_642</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1101</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CANFD.BAM.Tx.EOMS.Confirmation.Abort</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16036</sourceline>
      <version>1</version>
      <description>&lt;description/&gt;</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5341</srcid><srcstatus/><internalId>782</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1102</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CANFD.BAM.Tx.EOMS.Abort</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16046</sourceline>
      <version>1</version>
      <description>J1939Tp failed to get the Assurance Data</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_577</srcid><srcstatus/><internalId>520</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1103</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CANFD.BAM.Tx.Req.Abort</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16056</sourceline>
      <version>1</version>
      <description>&lt;description/&gt;</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5342</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1104</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CANFD.BAM.Tx.Data.Abort</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16066</sourceline>
      <version>1</version>
      <description>J1939Tp failed to get new data</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1021</srcid><srcstatus/><internalId>543</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1105</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.Tx.WaitConfirmation</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16076</sourceline>
      <version>1</version>
      <description>TP.DT frame sent and J1939Tp wait for confirmation form CanIf</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_768</srcid><srcstatus/><internalId>532</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_1043</srcid><srcstatus/><internalId>546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1106</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.Tx.Data</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16086</sourceline>
      <version>1</version>
      <description>TbamminTime elapsed and Tx confirmation received while data sent &amp;lt; message length</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_510</srcid><srcstatus/><internalId>512</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1107</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CANFD.BAM.Tx.EOMS.WaitConfirmation</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16096</sourceline>
      <version>1</version>
      <description>Send EOMS and wait confirmation</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_379</srcid><srcstatus/><internalId>505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1108</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CANFD.BAM.Tx.EOMS</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16106</sourceline>
      <version>1</version>
      <description>message sent, and J1939Tp sends FD.TP.CM_EndOfMsgStatus</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_520</srcid><srcstatus/><internalId>513</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1109</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.Tx.CM.WaitConfirmation</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16116</sourceline>
      <version>1</version>
      <description>TP.CM_BAM sent and J1939TP is waiting for confirmation form CanIf</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_472</srcid><srcstatus/><internalId>510</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1110</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.Tx.REQ</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16126</sourceline>
      <version>1</version>
      <description>J1939Tp_Transmit called with message length is &amp;gt; 8 and destination address is 0xff</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_7825</srcid><srcstatus/><internalId>914</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1111</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.Tx.Reset</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16136</sourceline>
      <version>1</version>
      <description>message sent and confirmation recieved for CanIf</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_527</srcid><srcstatus/><internalId>515</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1112</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CANFD.ABORT.BAM.Tx.Reset</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16146</sourceline>
      <version>1</version>
      <description>Confirmation received for Abort message</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_651</srcid><srcstatus/><internalId>526</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1113</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.CANFD.EOMS.BAM.Tx.Reset</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16156</sourceline>
      <version>1</version>
      <description>confirmation recieved for EOMS</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_536</srcid><srcstatus/><internalId>517</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1114</internalId></specobject>
    <specobject>
      <id>J1939Tp.EB.Dsn.BAM.Tx.initState</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/doc/project/design/pdf/J1939Tp_Design-profiled.xml</sourcefile>
      <sourceline>16166</sourceline>
      <version>1</version>
      <description>&lt;description/&gt;</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Tp.c.m4_5075</srcid><srcstatus/><internalId>753</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1115</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939Tp_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/build/reqm/common_req/J1939Tp_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(J1939Tp.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1116</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_ComTest_APISyntax_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Compile/IN/J1939Tp_ComTest_01/source/application/Tests.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_Init(), shall initialized the module.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is not initialized.

Test Execution: 
    01: Call the J1939Tp_Init() with value zero to initialize the module.
    02: Call J1939Tp_MainFunction
    03: Call the J1939Tp_Shutdown() to shutdown the module.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1117</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939Tp_ComTest_02_APISyntax_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Compile/IN/J1939Tp_ComTest_02/source/application/Tests.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test behavior when no tx or rx channels configured . 
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is not initialized.

Test Execution: 
    1: Call the J1939Tp_Init() with value zero to initialize the module.
    02: Call J1939Tp_MainFunction
    03: Call the J1939Tp_Shutdown() to shutdown the module.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1118</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939Tp_ComTest_03_RxChannels</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Compile/IN/J1939Tp_ComTest_03/source/application/Tests.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test generation when more than 255 RxChannels are configured.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    None.

Test Execution: 
    1: Call the J1939Tp_Init() with value zero to initialize the module.
    02: Call J1939Tp_MainFunction
    03: Call the J1939Tp_Shutdown() to shutdown the module.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.NumberOfRxChannels</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1119</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939Tp_ComTest_04_TxChannels</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Compile/IN/J1939Tp_ComTest_04/source/application/Tests.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test generation when more than 255 TxChannels are configured.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    None.

Test Execution: 
    1: Call the J1939Tp_Init() with value zero to initialize the module.
    02: Call J1939Tp_MainFunction
    03: Call the J1939Tp_Shutdown() to shutdown the module.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.NumberOfTxChannels</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1120</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939Tp_ComTest_05_TxPg</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Compile/IN/J1939Tp_ComTest_05/source/application/Tests.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test generation when more than 255 TxPgs are configured.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    None.

Test Execution: 
    1: Call the J1939Tp_Init() with value zero to initialize the module.
    02: Call J1939Tp_MainFunction
    03: Call the J1939Tp_Shutdown() to shutdown the module.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.NumberOfTxPgs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1121</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939Tp_ComTest_06_TxNsdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Compile/IN/J1939Tp_ComTest_06/source/application/Tests.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test generation when more than 255 TxNsdus are configured.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    None.

Test Execution: 
    1: Call the J1939Tp_Init() with value zero to initialize the module.
    02: Call J1939Tp_MainFunction
    03: Call the J1939Tp_Shutdown() to shutdown the module.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.NumberOfTxNsdus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1122</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939Tp_ComTest_07_RxPgs</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Compile/IN/J1939Tp_ComTest_07/source/application/Tests.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test generation when more than 255 RxPgs are configured.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    None.

Test Execution: 
    1: Call the J1939Tp_Init() with value zero to initialize the module.
    02: Call J1939Tp_MainFunction
    03: Call the J1939Tp_Shutdown() to shutdown the module.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.NumberOfRxPgs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1123</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939Tp_ComTest_08_RxNSdus</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Compile/IN/J1939Tp_ComTest_08/source/application/Tests.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test generation when less than 255 RxNSdus are configured.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    None.

Test Execution: 
    1: Call the J1939Tp_Init() with value zero to initialize the module.
    02: Call J1939Tp_MainFunction
    03: Call the J1939Tp_Shutdown() to shutdown the module.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.NumberOfRxNsdus</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1124</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>J1939Tp_Compile_NoRxChannels</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Compile/IN/J1939Tp_Compile_NoRxChannels/source/application/Tests.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test generation when no J1939TpRxChannel is configured.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    None.

Test Execution: 
    01: Call the J1939Tp_Init() to initialize the module.
    02: Call the All extern APIs of the module.
    03: Call J1939Tp_MainFunction
    04: Call the J1939Tp_Shutdown() to shutdown the module.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1125</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>J1939Tp_Compile_NoTxChannels</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Compile/IN/J1939Tp_Compile_NoTxChannels/source/application/Tests.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test generation when no J1939TpTxChannel is configured.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    None.

Test Execution: 
    01: Call the J1939Tp_Init() to initialize the module.
    02: Call the All extern APIs of the module.
    03: Call J1939Tp_MainFunction
    04: Call the J1939Tp_Shutdown() to shutdown the module.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1126</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_PBSELECTABLE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Compile/IN/J1939Tp_Compile_PostBuildSelectableGeneration/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case verifies that when PostBuildSelectable is enabled the generated files are the same
    as expected. The expected files have been place in the directory reference and if there is 
    no difference at all between the generated post build configuration files and those from the directory
    reference this test will be successful.

Test Object: 
    PostBuildSelectable

Test Precondition: 
   Expected postbuild configuration files have been placed in directory reference.
   Postbuild selectable is enabled. 

Test Execution: None.
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1127</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_BAM_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_BAM_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>114</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving broadcast frame on CanFD channel

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId Can id
    04: Receive a TP.CM_BAM packet with a wrong value in Reserved Byte[7]
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Receive a TP.CM_BAM packet with an invalid session ID and valid frame
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    08: VP: The module calls Det_ReportError with J1939TP_E_INVALID_SESSION_NUMBER
    09: Receive a valid TP.CM_BAM packet
    10: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    11: Call J1939Tp_MainFunction
    12: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    13: VP: Check call of PduR_J1939TpStartOfReception
    14: Call J1939Tp_RxIndication to receive a TP.DT packet
    15: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    16: Call J1939Tp_MainFunction
    17: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    18: VP: Check call to PduR_J1939TpCopyRxData
        :repeat steps from 14 to 18 two times
    19: Call J1939Tp_MainFunction
    20: Receive a TP.CM_EOMS packet
    21: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    22: VP: The module calls PduR_J1939TpCopyRxData API according to assurance data configuration
    23: VP: The module calls PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_BAM.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>461</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgStatus.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.ConcurrentSessions.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.InvalidSession.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.StaticSduLength.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.DynamicSduLength.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1128</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_BAM_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_BAM_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>406</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of EOMS with different length and assurance data type than in the BAM

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId Can id
    04: Receive a valid TP.CM_BAM packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: Call J1939Tp_RxIndication to receive a TP.DT packet
    10: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    11: Call J1939Tp_MainFunction
    12: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    13: VP: Check call to PduR_J1939TpCopyRxData
        :repeat steps from 14 to 18 two times
    14: Call J1939Tp_MainFunction
    15: Receive a TP.CM_EOMS packet with different legnth than received in the BAM
    16: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    17: VP: The module discards the EOMS with different message length
    18: Receive a TP.CM_EOMS packet with a different assurance data type than in the BAM
    19: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    20: VP: The module silently aborts the transfer calling PduR_J1939TpRxIndication with E_NOT_OK
    21: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgStatus.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.BAM.AssuranceData.MisMatch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1129</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_BAM_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_BAM_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>675</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving broadcast frame on CanFD channel with invalid assurance data type

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId Can id
    04: Receive a valid TP.CM_BAM packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: Receive a new BAM message with the same SA/DA/SN with invalid assurance data type
    10: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    11: VP: The module silently aborts the old transfer calling PduR_J1939TpRxIndication with E_NOT_OK
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: Call J1939Tp_MainFunction
    14: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    15: Data frame is ignored as the previous BAM message had invalid assurance data type
    16: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1130</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_BAM_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_BAM_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>841</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of EOMS with different length and assurance data type than in the BAM

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId Can id
    04: Receive a valid TP.CM_BAM packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: Call J1939Tp_RxIndication to receive a TP.DT packet
    10: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    11: Call J1939Tp_MainFunction
    12: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    13: VP: Check call to PduR_J1939TpCopyRxData
        :repeat steps from 14 to 18 two times
    14: Call J1939Tp_MainFunction
    15: Receive a TP.CM_EOMS packet with different assurance data legnth than configured
    16: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    17: VP: The module silently aborts the transfer calling PduR_J1939TpRxIndication with according to assurance data legnth configuration
    18: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1131</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_BAM_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_BAM_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1114</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving broadcast frame on CanFD channel with another valid assurance data type
    than being currently received, and the handling if the PduR_J1939TpCopyRxData doesn't return BUFREQ_OK for EOMS message

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId Can id
    04: Receive a valid TP.CM_BAM packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: Receive a new BAM message with the same SA/DA/SN with different acceptable assurance data type
    10: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    11: VP: The module silently aborts the old transfer calling PduR_J1939TpRxIndication with E_NOT_OK
    12: VP: Check call of PduR_J1939TpStartOfReception
    13: Call J1939Tp_RxIndication to receive a TP.DT packet
    14: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    17: VP: Check call to PduR_J1939TpCopyRxData
    18: Call J1939Tp_MainFunction
    19: Set the PduR_J1939TpCopyRxData copying assurance data to return BUFREQ_E_BUSY
    20: Receive a TP.CM_EOMS packet
    21: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    22: VP: The module calls PduR_J1939TpCopyRxData API to copy the assurance data
    23: VP: The module silently aborts the transfer calling PduR_J1939TpRxIndication with E_NOT_OK
    24: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.BAM.CopyAssuranceData.NOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1132</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_NO_DEV</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_NoDevError_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception abort when TP.Conn_Abort reception after TP.CM_CTS transmission

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.Conn_Abort
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: Call PduR_J1939TpRxIndication
    19: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.DuplicateSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1133</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception with invalid sequence number , which cause connection to be aborted.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId can id
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_SetMetaDataSourceAddr
        09: VP: The module calls EcuC_SetMetaDataTargetAddr
        10: VP: The module calls EcuC_SetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: confirm the TP.CM_CTS packet
        15: Call J1939Tp_RxIndication to receive a TP.DT packet
        16: VP: The module calls EcuC_GetMetaDataCanId
        17: Call J1939Tp_MainFunction two times
        18: The module calls Det_ReportError due to invalid sequence number
        19: VP: Check call to EcuC_SetMetaDataCanId
        20: VP: The module calls CanIf_Transmit
        21: confirm the TP.Conn_Abort packet
        22: Call J1939Tp_MainFunction two times
        23: Call PduR_J1939TpRxIndication
        24: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00031.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00232.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00097.Reception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_SN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.StaticSduLength.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.DynamicSduLength.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1134</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>249</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after timeout T1

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
        repeat steps from 15 to 19 one more time
    20: Call J1939Tp_MainFunction till timeout T1 passed
    21: The module calls Det_ReportError due to Timeout
    22: VP: Check call to EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: confirm the TP.Conn_Abort packet
    25: Call J1939Tp_MainFunction two times
    26: VP: The module calls PduR_J1939TpRxIndication
    27: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1135</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>501</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after PduR_J1939TpStartOfReception returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.Conn_Abort packet
    15: Call J1939Tp_MainFunction two times
    16: VP: make sure the upper layer isn't notified, as no connection is established
    17: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.StartOfReception.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1136</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>647</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after when PduR_J1939TpCopyRxData returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.Conn_Abort packet
    22: Call J1939Tp_MainFunction two times
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Reject.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1137</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>862</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception abort when TP.Conn_Abort reception after TP.CM_CTS transmission

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.Conn_Abort
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: Call PduR_J1939TpRxIndication
    19: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.DuplicateSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1138</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1025</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of reception abort when TP.Conn_Abort with invalid reason reception after TP.CM_CTS transmission

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.Conn_Abort packet to with different SA
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: Call stack empty to check that Abort frame is ignored
    19: Call J1939Tp_RxIndication to receive a TP.Conn_Abort
    20: VP: The module calls EcuC_GetMetaDataCanId
    21: Call J1939Tp_MainFunction two times
    22: module Call Det_ReportError
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_CAR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1139</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1213</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception abort when TP.CM_CTS reception where max data length is allowed
    but the number of packets is not compatible with the message length

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: module Call Det_ReportError
    07: call J1939Tp_MainFunction
    08: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TMS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1140</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1300</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after timeout T2

Test Object: 
    TP.CM_RTS transmission,
TP.CM_CTS reception,
TP.DT
TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_MainFunction till timeout T2 passed
    16: The module calls Det_ReportError due to Timeout
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_SetMetaDataCanId
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.Conn_Abort packet
    21: Call J1939Tp_MainFunction two times
    22: VP: The module calls PduR_J1939TpRxIndication
    23: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1141</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1494</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test abort reception when J1939TpTxFcNPduAvailable is not available .

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: Receive a TP.CM_RTS packet again
    15: VP: Check call of EcuC_GetMetaDataCanId
    16: Call J1939Tp_MainFunction two times
    17: VP: The module calls EcuC_GetMetaDataCanId
    18: VP: Check call of PduR_J1939TpStartOfReception
    19: Call J1939Tp_MainFunction till TR timeout
    20: The module calls Det_ReportError due to Timeout
    21: Call PduR_J1939TpRxIndication
    22: Call J1939Tp_MainFunction till J1939Tp_TxConfirmation is received with E_NOT_OK
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1142</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1683</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    The J1939Tp module shall abort the reception silently if the protocol chosen does not match the transport protocol configured for the transported PGN

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit
    07: confirm the TP.Conn_Abort packet
    08: Call J1939Tp_MainFunction two times
    09: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1143</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1766</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test abort reception when all NSDUs in the module are busy

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: The module calls Det_ReportError due to invalid sequence number
    19: VP: Check call to EcuC_SetMetaDataCanId
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.Conn_Abort packet
    22: Call J1939Tp_MainFunction two times
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.CanNotSupportAnotherSession</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1144</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1946</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    check behavior when two reception connections are aborted.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Receive a TP.CM_RTS packet again
    16: VP: Check call of EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: VP: Check call of PduR_J1939TpStartOfReception
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.CM_CTS packet
    23: Call J1939Tp_RxIndication to receive a TP.DT packet
    24: VP: The module calls EcuC_GetMetaDataCanId
    25: Call J1939Tp_MainFunction two times
    26: The module calls Det_ReportError due to invalid sequence number
    27: VP: Check call to EcuC_SetMetaDataCanId
    28: VP: The module calls CanIf_Transmit
    29: Call J1939Tp_RxIndication to receive a TP.DT packet
    30: VP: The module calls EcuC_GetMetaDataCanId
    31: Call J1939Tp_MainFunction two times
    32: The module calls Det_ReportError due to invalid sequence number
    33: Call J1939Tp_MainFunction till J1939Tp_TxConfirmation is received with E_NOT_OK
    34: The module calls Det_ReportError due to Timeout
    35: Call PduR_J1939TpRxIndication
    36: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1145</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_13</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2240</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test check reception abort when CTS0 Pdu is not available

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    05: Receive a TP.CM_RTS packet
    06: VP: Check call of EcuC_GetMetaDataCanId
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaDataCanId
    09: VP: The module calls EcuC_SetMetaDataSourceAddr
    10: VP: The module calls EcuC_SetMetaDataTargetAddr
    11: VP: The module calls EcuC_SetMetaDataPriority
    12: VP: Check call of PduR_J1939TpStartOfReception
    13: VP: The module calls EcuC_SetMetaDataCanId
    14: VP: The module calls CanIf_Transmit
    15: Initialize EcuC_GetMetaDataCanId can id
    16: Receive a TP.CM_RTS packet
    17: VP: Check call of EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: The module calls EcuC_GetMetaDataCanId
    20: VP: Check call of PduR_J1939TpStartOfReception
    21: Call J1939Tp_MainFunction till TH timeout
    22: The module calls Det_ReportError due to Timeout
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_MainFunction till J1939Tp_TxConfirmation is received with E_NOT_OK
    25: Call PduR_J1939TpRxIndication
    26: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1146</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_14</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2439</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test abort reception when module can't send EOM Frame

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.CM_EOMS reception
    TP.EOM

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 110 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: VP: Check call of PduR_J1939TpStartOfReception
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.CM_CTS packet
    23: Call J1939Tp_RxIndication to receive a TP.DT packet
    24: VP: The module calls EcuC_GetMetaDataCanId
    25: Call J1939Tp_MainFunction
    26: VP: Check call to EcuC_GetMetaDataCanId
    27: VP: Check call to PduR_J1939TpCopyRxData
        : repeat steps from 23 to 27 one more time
    28: Call J1939Tp_RxIndication to receive a TP.DT packet
    29: VP: The module calls EcuC_GetMetaDataCanId
    30: VP: Check call to EcuC_GetMetaDataCanId
    31: VP: Check call to PduR_J1939TpCopyRxData
    32: Call J1939Tp_MainFunction
    33: Receive a TP.CM_EOMS packet
    34: VP: Check call of EcuC_GetMetaDataCanId
    35: VP: Check call to EcuC_SetMetaDataCanId
    36: VP: The module calls CanIf_Transmit
    37: Call J1939Tp_RxIndication to receive a TP.DT packet
    38: VP: Check call to PduR_J1939TpCopyRxData
    39: VP: The module calls EcuC_GetMetaDataCanId
    40: VP: Check call to PduR_J1939TpCopyRxData
    41: Call J1939Tp_MainFunction
    42: Receive a TP.CM_EOMS packet
    43: VP: Check call of EcuC_GetMetaDataCanId
    44: Call J1939Tp_MainFunction till TR timeout
    45: The module calls Det_ReportError due to Timeout
    46: Call PduR_J1939TpRxIndication
    47: Call J1939Tp_MainFunction till J1939Tp_TxConfirmation is received with E_NOT_OK
    48: Call PduR_J1939TpRxIndication
    49: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Rts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1147</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_15</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2822</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception with PduR_J1939TpCopyRxData returning lesser
    buffer and handling CTS wait frame.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS Transmission,
    TP.DT
    TP.CM_EOM

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 220 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to PduR_J1939TpCopyRxData
    19: Call J1939Tp_MainFunction
    20: Call J1939Tp_RxIndication to receive a TP.DT packet
    21: VP: The module calls EcuC_GetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: Check call to PduR_J1939TpCopyRxData
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaDataCanId
    26: Set lesser buffer size for PduR_J1939TpCopyRxData
    27: Call J1939Tp_MainFunction
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: VP: The module calls EcuC_SetMetaDataCanId
    30: VP: Check that module sends CTS Wait frame as buffer is not available
    31: confirm the TP.CM_CTS packet
    32: Loop until Th timeout
    33: VP: Check that module calls PduR_J1939TpCopyRxData until data is available
    34: VP: Check that module logs DET Error with reason J1939TP_E_TIMEOUT_TH
    35: VP: The module calls EcuC_SetMetaDataCanId
    36: Check that after Th timeout, module sends CTS Wait frame again
    37: VP: Check that module calls PduR_J1939TpCopyRxData until data is available
    37: Provide buffer for next data reception via PduR_J1939TpCopyRxData
    38: VP: The module calls CanIf_Transmit
    39: confirm the TP.CM_CTS packet
    40: Call stack empty?
    41: Call J1939Tp_RxIndication to receive a TP.DT packet
    42: VP: The module calls EcuC_GetMetaDataCanId
    43: Call J1939Tp_MainFunction two times
    44: VP: Check call to PduR_J1939TpCopyRxData
    45: Receive a TP.CM_EOMS packet
    46: VP: Check call of EcuC_GetMetaDataCanId
    47: VP: The module calls EOM Frame
    48: confirm the TP.CM_EOM packet
    49: Call J1939Tp_MainFunction
    50: Call PduR_J1939TpRxIndication
    51: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.CopyRxData.EnoughBuff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00229.CopyRxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1148</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_16</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>3277</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception with PduR_J1939TpCopyRxData returning lesser
    buffer, Unexpected CTS Frame and handling CTS wait frame.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.CM_EOMS reception
    TP.EOM

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 220 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_MainFunction
    16: Call J1939Tp_RxIndication to receive a TP.DT packet
    17: VP: The module calls EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction two times
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: Trigger CTS and Check that the module rejects the unexpected CTS frame
    21: VP: Call stack empty to check if the frame is dropped
    22: Call J1939Tp_RxIndication to receive a TP.DT packet
    23: VP: The module calls EcuC_GetMetaDataCanId
    24: Call J1939Tp_MainFunction
    25: VP: Check call to PduR_J1939TpCopyRxData
    26: Call J1939Tp_RxIndication to receive a TP.DT packet
    27: VP: The module calls EcuC_GetMetaDataCanId
    28: Set PduR_J1939TpCopyRxData with lesser buffer
    29: VP: Check call to PduR_J1939TpCopyRxData
    30: VP: The module calls EcuC_SetMetaDataCanId
    31: VP: Check if the CTS Wait frame is transmitted
    32: confirm the TP.CM_CTS packet
    33: VP: Check if DET Error is raised for J1939TP_E_TIMEOUT_TH
    34: VP: The module calls EcuC_SetMetaDataCanId
    35: VP: Check if the CTS Wait frame is transmitted
    36: Provide buffer for next data reception via PduR_J1939TpCopyRxData
    37: VP: The module calls CanIf_Transmit
    38: confirm the TP.CM_CTS packet
    39: Call J1939Tp_RxIndication to receive a TP.DT packet
    40: VP: The module calls EcuC_GetMetaDataCanId
    41: Call J1939Tp_MainFunction two times
    42: VP: Check call to PduR_J1939TpCopyRxData
    43: Receive a TP.CM_EOMS packet
    44: VP: Check call of EcuC_GetMetaDataCanId
    43: Call J1939Tp_RxIndication to receive a TP.DT packet
    44: VP: The module calls EcuC_GetMetaDataCanId
    45: VP: The module calls EcuC_SetMetaDataCanId
    46: VP: The module calls EOM Frame
    47: confirm the TP.CM_EOM packet
    48: Call J1939Tp_MainFunction
    49: Call PduR_J1939TpRxIndication
    50: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00229.CopyRxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1149</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_17</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>3745</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of unexpected TP.CM_RTS frame with different PGN and
    also unexpected BAM frame.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.CM_EOMS reception
    TP.Conn_Abort
    TP.Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 220 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Trigger a BAM Connection for a different Source
    16: Receive a TP.CM_BAM packet
    17: VP: Check call of EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: The module calls EcuC_GetMetaDataCanId
    20: Ignores the BAM Request
    21: Trigger a new CMDT reception with a different PGN
    22: Receive a TP.CM_RTS packet
    23: VP: Check call of EcuC_GetMetaDataCanId
    24: Call J1939Tp_MainFunction
    25: VP: The module calls EcuC_GetMetaDataCanId
    26: VP: Check call to EcuC_SetMetaDataCanId
    27: VP: The module calls CanIf_Transmit
    28: VP: Check that the module shall send abort frame for new connection
    29: confirm the TP.Conn_Abort packet
    30: VP: The module calls EcuC_SetMetaDataSourceAddr
    31: VP: The module calls EcuC_SetMetaDataTargetAddr
    32: VP: The module calls EcuC_SetMetaDataPriority
    33: VP: Check call of PduR_J1939TpStartOfReception
    34: VP: Check that module calls PduR_J1939TpRxIndication with E_NOT_OK
    35: VP: The module calls EcuC_SetMetaDataCanId
    36: VP: The module calls CanIf_Transmit
    37: confirm the TP.CM_CTS packet
    38: Call J1939Tp_RxIndication to receive a TP.DT packet
    39: VP: The module calls EcuC_GetMetaDataCanId
    40: Call J1939Tp_MainFunction two times
    41: VP: Check call to PduR_J1939TpCopyRxData
    42: Call J1939Tp_RxIndication to receive a TP.DT packet
    43: VP: The module calls EcuC_GetMetaDataCanId
    44: Call J1939Tp_MainFunction two times
    45: VP: Check call to PduR_J1939TpCopyRxData
    46: Call J1939Tp_RxIndication to receive a TP.DT packet
    47: VP: The module calls EcuC_GetMetaDataCanId
    48: VP: Check call to PduR_J1939TpCopyRxData
    49: VP: The module calls EcuC_SetMetaDataCanId
    50: VP: Check for the CTS Wait frame
    51: confirm the TP.CM_CTS packet
    52: Check for the DET Error for J1939TP_E_TIMEOUT_TH
    53: VP: The module calls EcuC_SetMetaDataCanId
    54: VP: Check for the CTS Wait frame
    55: Tx Confirmation for CTS frame
    56: VP: The module calls CanIf_Transmit
    57: confirm the TP.CM_CTS packet
    58: Call J1939Tp_RxIndication to receive a TP.DT packet
    59: VP: The module calls EcuC_GetMetaDataCanId
    60: Call J1939Tp_MainFunction two times
    61: VP: Check call to PduR_J1939TpCopyRxData
    62: Receive a TP.CM_EOMS packet
    63: VP: Check call of EcuC_GetMetaDataCanId
    64: VP: The module calls EcuC_SetMetaDataCanId
    65: VP: Check for EOM frame
    66: confirm the TP.CM_EOM packet
    67: Call J1939Tp_MainFunction
    68: Call PduR_J1939TpRxIndication
    69: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.CopyRxData.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Bam</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1150</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_18</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>4316</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception when PduR_J1939TpCopyRxData returns invalid return values to adhere
    code coverage.

Test Object: 
    TP.CM_RTS Reception,
    TP.CM_CTS Transmission,
    TP.DT

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp and EcuC_GetMetaDataCanId can id
    03: VP: Receive unexpected TP.CM_DT packet and Check that trace is
        empty indicating that Data frame is ignored.
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Set the invalid return Value for PduR_J1939TpCopyRxData
    16: Call J1939Tp_RxIndication to receive a TP.DT packet
    17: VP: The module calls EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction two times
    19: Call J1939Tp_MainFunction two times
    20: VP: Check call to EcuC_SetMetaDataCanId
    21: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Data</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1151</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_19</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>4515</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test waits for Abort counter to reach to maximum to adhere code coverage.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: Initialize EcuC_GetMetaDataCanId can id
    15: Receive a TP.CM_RTS packet again
    16: VP: Check call of EcuC_GetMetaDataCanId
    17:  Additional Delay to make NDUP unavailable for Abort Frame sending
    18: confirm the TP.CTS packet
    19: Call J1939Tp_MainFunction till the Abort counter reaches to maximum
    20: VP: Check call to EcuC_SetMetaDataCanId and EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.Conn_Abort packet
    23: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00097.Reception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1152</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_20</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>4701</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the behavior when "total number of packets" in received TP.CM/RTS frame does not match the "total message size".

Test Object: 
    TP.CM_RTS reception.

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: module Call Det_ReportError
    07: call J1939Tp_MainFunction
    08: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TNOP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1153</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_21</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>4785</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception after receiving E_NOT_OK for CanIf_Transmit
    of a CTS Frame.

Test Object: 
    TP.CM_RTS reception.
    TP.CM_CTS transmission,

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId can id and CanIf_Transmit return value to E_NOT_OK
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_SetMetaDataSourceAddr
        09: VP: The module calls EcuC_SetMetaDataTargetAddr
        10: VP: The module calls EcuC_SetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: VP: Check PduR_J1939TpRxIndication returns E_NOT_OK
        15: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Rx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1154</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_22</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>4926</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception after receiving E_NOT_OK for CanIf_Transmit
    of a CTS0 Frame.

Test Object: 
    TP.CM_RTS reception.
    TP.CM_CTS transmission,

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id and CanIf_Transmit return value to E_NOT_OK
    05: Receive a TP.CM_RTS packet
    06: VP: Check call of EcuC_GetMetaDataCanId
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaDataCanId
    09: VP: The module calls EcuC_SetMetaDataSourceAddr
    10: VP: The module calls EcuC_SetMetaDataTargetAddr
    11: VP: The module calls EcuC_SetMetaDataPriority
    12: VP: Check call of PduR_J1939TpStartOfReception
    13: VP: The module calls EcuC_SetMetaDataCanId
    14: VP: The module calls CanIf_Transmit
    15: VP: Check PduR_J1939TpRxIndication returns E_NOT_OK
    16: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1155</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_23</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>5062</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception after receiving E_NOT_OK for CanIf_Transmit
    of EOM Frame.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS Transmission,
    TP.DT
    TP.CM_EOMS reception
    TP.CM_EOM

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 220 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to PduR_J1939TpCopyRxData
    19: Call J1939Tp_MainFunction
    20: Call J1939Tp_RxIndication to receive a TP.DT packet
    21: VP: The module calls EcuC_GetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: Check call to PduR_J1939TpCopyRxData
    24: Set lesser buffer size for PduR_J1939TpCopyRxData
    25: Call J1939Tp_RxIndication to receive a TP.DT packet
    26: VP: The module calls EcuC_GetMetaDataCanId
    27: Call J1939Tp_MainFunction
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: VP: The module calls CanIf_Transmit
    30: confirm the TP.CM_CTS packet
    31: Call stack empty?
    32: Call J1939Tp_RxIndication to receive a TP.DT packet
    33: VP: The module calls EcuC_GetMetaDataCanId
    34: Call J1939Tp_MainFunction
    35: VP: Check call to PduR_J1939TpCopyRxData
    36: Set the return value to E_NOT_OK for CanIf_Transmit
    37: Receive a TP.CM_EOMS packet
    38: VP: Check call of EcuC_GetMetaDataCanId
    39: VP: The module calls EcuC_SetMetaDataCanId
    40: VP: The module calls EOM Frame
    41: Call J1939Tp_MainFunction
    42: VP: Check if the PduR_J1939TpRxIndication returns E_NOT_OK
    43: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ContinueDT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1156</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_24</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>5422</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of silent abort reception after receiving E_NOT_OK for
    CanIf_Transmit of an Abort Frame.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId can id
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_SetMetaDataSourceAddr
        09: VP: The module calls EcuC_SetMetaDataTargetAddr
        10: VP: The module calls EcuC_SetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: confirm the TP.CM_CTS packet and set the return value of CanIf_Transmit
        15: Call J1939Tp_RxIndication to receive a TP.DT packet
        16: VP: The module calls EcuC_GetMetaDataCanId
        17: Call J1939Tp_MainFunction two times
        18: The module calls Det_ReportError due to invalid sequence number
        19: VP: Check call to EcuC_SetMetaDataCanId
        20: VP: The module calls CanIf_Transmit
        21: Call J1939Tp_MainFunction
        22: VP: Check if PduR_J1939TpRxIndication returns E_NOT_OK
        23: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Rx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1157</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_25</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>5630</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test silent abort reception when all NSDUs in the module are busy and CanIf_Transmit
    returns E_NOT_OK.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14. Initialize EcuC_GetMetaDataCanId can id
    15: Receive a TP.CM_RTS packet again
    16: VP: Check call of EcuC_GetMetaDataCanId
    17: confirm the TP.CTS packet and set return value of CanIf_Transmit to E_NOT_OK
    18: Call J1939Tp_MainFunction two times
    19: VP: Check call to EcuC_SetMetaDataCanId and EcuC_SetMetaDataCanId
    20. VP: The module calls CanIf_Transmit
    21: VP: Call J1939Tp_MainFunction and Check for Trace Empty
    22: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.SystemResourcesBusy</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1158</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_26</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>5810</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception of Data Frames with frame delay less than J1939TpMainFunctionPeriod.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS Transmission,
    TP.DT
    TP.CM_EOMS reception
    TP.CM_EOM

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 280 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT1 packet
    16: VP: The module calls EcuC_GetMetaDataCanId for TP.DT1
    17: VP: Check call to PduR_J1939TpCopyRxData for TP.DT1
    18: Call J1939Tp_RxIndication to receive a TP.DT2 packet without J1939Tp_MainFunction
    19: VP: The module calls EcuC_GetMetaDataCanId for TP.DT2
    20: VP: Check call to PduR_J1939TpCopyRxData for TP.DT2
    21: Call J1939Tp_RxIndication to receive a TP.DT3 packet without J1939Tp_MainFunction
    22: VP: The module calls EcuC_GetMetaDataCanId for TP.DT3
    23: VP: Check call to PduR_J1939TpCopyRxData for TP.DT3
    24: Call J1939Tp_RxIndication to receive a TP.DT4 packet without J1939Tp_MainFunction
    28: VP: The module calls EcuC_GetMetaDataCanId for TP.DT4
    26: VP: Check call to PduR_J1939TpCopyRxData for TP.DT4
    27: Call J1939Tp_RxIndication to receive a TP.DT5 packet without J1939Tp_MainFunction
    28: VP: The module calls EcuC_GetMetaDataCanId for TP.DT5
    29: VP: Check call to PduR_J1939TpCopyRxData for TP.DT5
    30: Receive a TP.CM_EOMS packet
    31: VP: Check call of EcuC_GetMetaDataCanId
    32: VP: The module calls EOM Frame
    33: confirm the TP.CM_EOM packet
    34: Call J1939Tp_MainFunction two times
    35: Call PduR_J1939TpRxIndication
    36: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.CopyRxData.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1159</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_27</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>6153</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after timeout T1 to receive the EOMS

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: Call J1939Tp_RxIndication to receive a TP.DT packet
    21: VP: The module calls EcuC_GetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: The module calls EcuC_GetMetaDataCanId
    24: VP: Check call to PduR_J1939TpCopyRxData
    25: Call J1939Tp_RxIndication to receive a TP.DT packet
    26: VP: The module calls EcuC_GetMetaDataCanId
    27: Call J1939Tp_MainFunction
    28: VP: The module calls EcuC_GetMetaDataCanId
    29: VP: Check call to PduR_J1939TpCopyRxData
    30: Call J1939Tp_MainFunction till timeout T1 passed
    31: The module calls Det_ReportError due to Timeout
    32: VP: Check call to EcuC_SetMetaDataCanId
    33: VP: The module calls CanIf_Transmit
    34: confirm the TP.Conn_Abort packet
    35: Call J1939Tp_MainFunction two times
    36: VP: The module calls PduR_J1939TpRxIndication
    37: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.EOMS.TimeOut</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed.RetryDisabled.NoAssuranceData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1160</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_28</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>6447</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of unexpected TP.EOMS message before any transmission
    as well as a TP.EOMS message with invalid RTS length at the end of the transmission
    and a TP.EOMS message with an invalid assurance data type

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.CM_EOMS reception

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive an unexpected TP.CM_EOMS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Receive a TP.CM_RTS packet
    07: VP: Check call of EcuC_GetMetaDataCanId
    08: Call J1939Tp_MainFunction two times
    09: VP: The module calls EcuC_GetMetaDataCanId
    10: VP: The module calls EcuC_SetMetaDataSourceAddr
    11: VP: The module calls EcuC_SetMetaDataTargetAddr
    12: VP: The module calls EcuC_SetMetaDataPriority
    13: VP: Check call of PduR_J1939TpStartOfReception
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: VP: The module calls CanIf_Transmit
    16: confirm the TP.CM_CTS packet
    17: Call J1939Tp_RxIndication to receive a TP.DT packet
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: Call J1939Tp_MainFunction two times
    20: VP: Check call to EcuC_GetMetaDataCanId
    21: VP: Check call to PduR_J1939TpCopyRxData
    22: Call J1939Tp_RxIndication to receive a TP.DT packet
    23: VP: The module calls EcuC_GetMetaDataCanId
    24: Call J1939Tp_MainFunction
    25: VP: Check call to EcuC_GetMetaDataCanId
    26: VP: Check call to PduR_J1939TpCopyRxData
    27: Call J1939Tp_RxIndication to receive a TP.DT packet
    28: VP: The module calls EcuC_GetMetaDataCanId
    29: Call J1939Tp_MainFunction
    30: VP: Check call to EcuC_GetMetaDataCanId
    31: VP: Check call to PduR_J1939TpCopyRxData
    32: Receive an invalid TP.CM_EOMS packet
    33: VP: Check call of EcuC_GetMetaDataCanId
    34: VP: The module ignores the EOMS with invalid value
    35: Receive an TP.CM_EOMS packet with invalid assurance data type
    36: VP: The module calls EcuC_GetMetaDataCanId
    37: VP: Check call to EcuC_SetMetaDataCanId
    38: VP: The module calls CanIf_Transmit
    39: confirm the TP.CM_Abort packet
    40: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.AssuranceDataMismatch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1161</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_29</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>6775</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of unexpected TP.CM_RTS frame with same PGN and
    invalid assurance data type.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.CM_EOMS reception
    TP.Conn_Abort
    TP.Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 220 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Trigger a new CMDT reception with the same PGN and invalid assurance data type
    16: Receive a TP.CM_RTS packet
    17: VP: Check call of EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: The module calls EcuC_GetMetaDataCanId
    20: VP: Check call to EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: VP: Check that the module shall send abort frame for new connection
    23: confirm the TP.Conn_Abort packet
    24: VP: Check that module calls PduR_J1939TpRxIndication with E_NOT_OK for the old connection
    25: Call J1939Tp_MainFunction
    26: VP: The previous CMDT message was ignored as it had invalid assurance data type
    27: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Rts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1162</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_30</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>6986</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of TP.CM_RTS frame with invalid assurance data type.

Test Object: 
    TP.CM_RTS reception,
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 220 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet with invalid assurance data type
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: Check call to EcuC_SetMetaDataCanId
    09: VP: The module calls CanIf_Transmit
    10: VP: Check that the module shall send abort frame for new connection
    11: confirm the TP.Conn_Abort packet
    12: VP: Check that module calls PduR_J1939TpRxIndication with E_NOT_OK for the old connection
    13: Call J1939Tp_MainFunction
    14: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Rts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1163</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_31</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>7102</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of unexpected TP.CM_RTS frame with same PGN and
    valid assurance data type as well the handling of PduR_J1939TpCopyRxData API returns
    not BUFREQ_OK during the reception of the assurance data.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.CM_EOMS reception
    TP.Conn_Abort
    TP.Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Trigger a new CMDT reception with the same PGN and and a different valid assurance data type
    16: Receive a TP.CM_RTS packet
    17: VP: Check call of EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: The module calls EcuC_GetMetaDataCanId
    20: VP: Check that module calls PduR_J1939TpRxIndication with E_NOT_OK for the old connection
    21: VP: The module calls EcuC_SetMetaDataSourceAddr
    22: VP: The module calls EcuC_SetMetaDataTargetAddr
    23: VP: The module calls EcuC_SetMetaDataPriority
    24: VP: Check call of PduR_J1939TpStartOfReception
    25: VP: The module calls EcuC_SetMetaDataCanId
    26: VP: The module calls CanIf_Transmit
    27: confirm the TP.CM_CTS packet
    28: Call J1939Tp_RxIndication to receive a TP.DT packet
    29: VP: The module calls EcuC_GetMetaDataCanId
    30: Call J1939Tp_MainFunction two times
    31: VP: Check call to EcuC_GetMetaDataCanId
    32: VP: Check call to PduR_J1939TpCopyRxData
    33: Call J1939Tp_RxIndication to receive a TP.DT packet
    34: VP: Check call to EcuC_GetMetaDataCanId
    35: Call J1939Tp_MainFunction
    36: VP: Check call to EcuC_GetMetaDataCanId
    37: VP: Check call to PduR_J1939TpCopyRxData
    38: Call J1939Tp_RxIndication to receive a TP.DT packet
    39: VP: Check call to EcuC_GetMetaDataCanId
    40: Call J1939Tp_MainFunction
    41: VP: Check call to EcuC_GetMetaDataCanId
    42: VP: Check call to PduR_J1939TpCopyRxData
    43: Receive an TP.CM_EOMS packet
    44: VP: The module calls EcuC_GetMetaDataCanId
    45: VP: Check call to EcuC_SetMetaDataCanId
    46: VP: The module calls CanIf_Transmit
    47: VP: Check that the module shall send abort frame with J1939TP_TPCM_ABORT_REASON_RESOURCES reason
    48: confirm the TP.Conn_Abort packet
    49: VP: Check that module calls PduR_J1939TpRxIndication with E_NOT_OK for the current connection
    50: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.CMDT.CopyAssuranceData.NOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1164</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_32</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>7488</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after timeout T1 to receive the EOMS with assurance data

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: Call J1939Tp_RxIndication to receive a TP.DT packet
    21: VP: The module calls EcuC_GetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: The module calls EcuC_GetMetaDataCanId
    24: VP: Check call to PduR_J1939TpCopyRxData
    25: Call J1939Tp_RxIndication to receive a TP.DT packet
    26: VP: The module calls EcuC_GetMetaDataCanId
    27: Call J1939Tp_MainFunction
    28: VP: The module calls EcuC_GetMetaDataCanId
    29: VP: Check call to PduR_J1939TpCopyRxData
    30: Call J1939Tp_MainFunction till timeout T1 passed
    31: The module calls Det_ReportError due to Timeout
    32: VP: Check call to EcuC_SetMetaDataCanId
    33: VP: The module calls CanIf_Transmit
    34: confirm the TP.Conn_Abort packet
    35: Call J1939Tp_MainFunction two times
    36: VP: The module calls PduR_J1939TpRxIndication
    37: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.EOMS.TimeOut</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed.RetryDisabled.AssuranceData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.AssuranceDataNotReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1165</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception with invalid sequence number , which cause connection to be aborted.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId can id
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_SetMetaDataSourceAddr
        09: VP: The module calls EcuC_SetMetaDataTargetAddr
        10: VP: The module calls EcuC_SetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: confirm the TP.CM_CTS packet
        15: Call J1939Tp_RxIndication to receive a TP.DT packet
        16: VP: The module calls EcuC_GetMetaDataCanId
        17: Call J1939Tp_MainFunction two times
        18: The module calls Det_ReportError due to invalid sequence number
        19: VP: Check call to EcuC_SetMetaDataCanId
        20: VP: The module calls CanIf_Transmit
        21: confirm the TP.Conn_Abort packet
        22: Call J1939Tp_MainFunction two times
        23: Call PduR_J1939TpRxIndication
        24: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00031.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00232.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00097.Reception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_SN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.StaticSduLength.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.DynamicSduLength.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1166</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>249</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after timeout T1

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
        repeat steps from 15 to 19 one more time
    20: Call J1939Tp_MainFunction till timeout T1 passed
    21: The module calls Det_ReportError due to Timeout
    22: VP: Check call to EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: confirm the TP.Conn_Abort packet
    25: Call J1939Tp_MainFunction two times
    26: VP: The module calls PduR_J1939TpRxIndication
    27: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1167</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>501</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after PduR_J1939TpStartOfReception returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.Conn_Abort packet
    15: Call J1939Tp_MainFunction two times
    16: VP: make sure the upper layer isn't notified, as no connection is established
    17: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.StartOfReception.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1168</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>647</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after when PduR_J1939TpCopyRxData returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.Conn_Abort packet
    22: Call J1939Tp_MainFunction two times
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1169</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>861</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception abort when TP.Conn_Abort reception after TP.CM_CTS transmission

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.Conn_Abort
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: Call PduR_J1939TpRxIndication
    19: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1170</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>1022</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of reception abort when TP.Conn_Abort with invalid reason reception after TP.CM_CTS transmission

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.Conn_Abort packet to with different SA
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: Call stack empty to check that Abort frame is ignored
    19: Call J1939Tp_RxIndication to receive a TP.Conn_Abort
    20: VP: The module calls EcuC_GetMetaDataCanId
    21: Call J1939Tp_MainFunction two times
    22: module Call Det_ReportError
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_CAR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1171</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>1210</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception abort when TP.CM_CTS reception where max data length is allowed
    but the number of packets is not compatible with the message length

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: module Call Det_ReportError
    07: call J1939Tp_MainFunction
    08: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TMS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1172</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>1297</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after timeout T2

Test Object: 
    TP.CM_RTS transmission,
TP.CM_CTS reception,
TP.DT
TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_MainFunction till timeout T2 passed
    16: The module calls Det_ReportError due to Timeout
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_SetMetaDataCanId
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.Conn_Abort packet
    21: Call J1939Tp_MainFunction two times
    22: VP: The module calls PduR_J1939TpRxIndication
    23: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1173</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>1492</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test abort reception when J1939TpTxFcNPduAvailable is not available .

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: Receive a TP.CM_RTS packet again
    15: VP: Check call of EcuC_GetMetaDataCanId
    16: Call J1939Tp_MainFunction two times
    17: VP: The module calls EcuC_GetMetaDataCanId
    18: VP: Check call of PduR_J1939TpStartOfReception
    19: Call J1939Tp_MainFunction till TR timeout
    20: The module calls Det_ReportError due to Timeout
    21: Call PduR_J1939TpRxIndication
    23: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1174</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>1668</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    The J1939Tp module shall abort the reception silently if the protocol chosen does not match the transport protocol configured for the transported PGN

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit
    07: confirm the TP.Conn_Abort packet
    08: Call J1939Tp_MainFunction two times
    09: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1175</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>1751</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test abort reception when all NSDUs in the module are busy

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: The module calls Det_ReportError due to invalid sequence number
    19: VP: Check call to EcuC_SetMetaDataCanId
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.Conn_Abort packet
    22: Call J1939Tp_MainFunction two times
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1176</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>1930</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    check behavior when two reception connections are aborted.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Receive a TP.CM_RTS packet again
    16: VP: Check call of EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: VP: Check call of PduR_J1939TpStartOfReception
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.CM_CTS packet
    23: Call J1939Tp_RxIndication to receive a TP.DT packet
    24: VP: The module calls EcuC_GetMetaDataCanId
    25: Call J1939Tp_MainFunction two times
    26: The module calls Det_ReportError due to invalid sequence number
    27: VP: Check call to EcuC_SetMetaDataCanId
    28: VP: The module calls CanIf_Transmit
    29: Call J1939Tp_RxIndication to receive a TP.DT packet
    30: VP: The module calls EcuC_GetMetaDataCanId
    31: Call J1939Tp_MainFunction two times
    32: The module calls Det_ReportError due to invalid sequence number
    33: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1177</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_13</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>2204</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test check reception abort when CTS0 Pdu is not available

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    05: Receive a TP.CM_RTS packet
    06: VP: Check call of EcuC_GetMetaDataCanId
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaDataCanId
    09: VP: The module calls EcuC_SetMetaDataSourceAddr
    10: VP: The module calls EcuC_SetMetaDataTargetAddr
    11: VP: The module calls EcuC_SetMetaDataPriority
    12: VP: Check call of PduR_J1939TpStartOfReception
    13: VP: The module calls EcuC_SetMetaDataCanId
    14: VP: The module calls CanIf_Transmit
    15: Initialize EcuC_GetMetaDataCanId can id
    16: Receive a TP.CM_RTS packet
    17: VP: Check call of EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: The module calls EcuC_GetMetaDataCanId
    20: VP: Check call of PduR_J1939TpStartOfReception
    21: Call J1939Tp_MainFunction till TH timeout
    22: The module calls Det_ReportError due to Timeout
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1178</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_14</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>2390</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test abort reception when module can't send EOM Frame

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.CM_EOMS reception
    TP.EOM

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 110 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: VP: Check call of PduR_J1939TpStartOfReception
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.CM_CTS packet
    23: Call J1939Tp_RxIndication to receive a TP.DT packet
    24: VP: The module calls EcuC_GetMetaDataCanId
    25: Call J1939Tp_MainFunction
    26: VP: Check call to EcuC_GetMetaDataCanId
    27: VP: Check call to PduR_J1939TpCopyRxData
        : repeat steps from 23 to 27 one more time
    28: Call J1939Tp_RxIndication to receive a TP.DT packet
    29: VP: The module calls EcuC_GetMetaDataCanId
    30: VP: Check call to EcuC_GetMetaDataCanId
    31: VP: Check call to PduR_J1939TpCopyRxData
    32: Call J1939Tp_MainFunction
    33: Receive a TP.CM_EOMS packet
    34: VP: Check call of EcuC_GetMetaDataCanId
    35: VP: Check call to EcuC_SetMetaDataCanId
    36: VP: The module calls CanIf_Transmit
    37: Call J1939Tp_RxIndication to receive a TP.DT packet
    38: VP: Check call to PduR_J1939TpCopyRxData
    39: VP: The module calls EcuC_GetMetaDataCanId
    40: VP: Check call to PduR_J1939TpCopyRxData
    41: Call J1939Tp_MainFunction
    42: Receive a TP.CM_EOMS packet
    43: VP: Check call of EcuC_GetMetaDataCanId
    44: Call J1939Tp_MainFunction till TR timeout
    45: The module calls Det_ReportError due to Timeout
    46: Call PduR_J1939TpRxIndication
    47: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1179</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_15</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>2759</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception with PduR_J1939TpCopyRxData returning lesser
    buffer and handling CTS wait frame.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS Transmission,
    TP.DT
    TP.CM_EOM

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 220 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to PduR_J1939TpCopyRxData
    19: Call J1939Tp_MainFunction
    20: Call J1939Tp_RxIndication to receive a TP.DT packet
    21: VP: The module calls EcuC_GetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: Check call to PduR_J1939TpCopyRxData
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaDataCanId
    26: Set lesser buffer size for PduR_J1939TpCopyRxData
    27: Call J1939Tp_MainFunction
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: VP: The module calls EcuC_SetMetaDataCanId
    30: VP: Check that module sends CTS Wait frame as buffer is not available
    31: confirm the TP.CM_CTS packet
    32: Loop until Th timeout
    33: VP: Check that module calls PduR_J1939TpCopyRxData until data is available
    34: VP: Check that module logs DET Error with reason J1939TP_E_TIMEOUT_TH
    35: VP: The module calls EcuC_SetMetaDataCanId
    36: Check that after Th timeout, module sends CTS Wait frame again
    37: VP: Check that module calls PduR_J1939TpCopyRxData until data is available
    37: Provide buffer for next data reception via PduR_J1939TpCopyRxData
    38: VP: The module calls CanIf_Transmit
    39: confirm the TP.CM_CTS packet
    40: Call stack empty?
    41: Call J1939Tp_RxIndication to receive a TP.DT packet
    42: VP: The module calls EcuC_GetMetaDataCanId
    43: Call J1939Tp_MainFunction two times
    44: VP: Check call to PduR_J1939TpCopyRxData
    45: Receive a TP.CM_EOMS packet
    46: VP: Check call of EcuC_GetMetaDataCanId
    47: VP: The module calls EOM Frame
    48: confirm the TP.CM_EOM packet
    49: Call J1939Tp_MainFunction
    50: Call PduR_J1939TpRxIndication
    51: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.CopyRxData.EnoughBuff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00229.CopyRxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1180</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_16</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>3214</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception with PduR_J1939TpCopyRxData returning lesser
    buffer, Unexpected CTS Frame and handling CTS wait frame.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.CM_EOMS reception
    TP.EOM

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 220 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_MainFunction
    16: Call J1939Tp_RxIndication to receive a TP.DT packet
    17: VP: The module calls EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction two times
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: Trigger CTS and Check that the module rejects the unexpected CTS frame
    21: VP: Call stack empty to check if the frame is dropped
    22: Call J1939Tp_RxIndication to receive a TP.DT packet
    23: VP: The module calls EcuC_GetMetaDataCanId
    24: Call J1939Tp_MainFunction
    25: VP: Check call to PduR_J1939TpCopyRxData
    26: Call J1939Tp_RxIndication to receive a TP.DT packet
    27: VP: The module calls EcuC_GetMetaDataCanId
    28: Set PduR_J1939TpCopyRxData with lesser buffer
    29: VP: Check call to PduR_J1939TpCopyRxData
    30: VP: The module calls EcuC_SetMetaDataCanId
    31: VP: Check if the CTS Wait frame is transmitted
    32: confirm the TP.CM_CTS packet
    33: VP: Check if DET Error is raised for J1939TP_E_TIMEOUT_TH
    34: VP: The module calls EcuC_SetMetaDataCanId
    35: VP: Check if the CTS Wait frame is transmitted
    36: Provide buffer for next data reception via PduR_J1939TpCopyRxData
    37: VP: The module calls CanIf_Transmit
    38: confirm the TP.CM_CTS packet
    39: Call J1939Tp_RxIndication to receive a TP.DT packet
    40: VP: The module calls EcuC_GetMetaDataCanId
    41: Call J1939Tp_MainFunction two times
    42: VP: Check call to PduR_J1939TpCopyRxData
    43: Receive a TP.CM_EOMS packet
    44: VP: Check call of EcuC_GetMetaDataCanId
    43: Call J1939Tp_RxIndication to receive a TP.DT packet
    44: VP: The module calls EcuC_GetMetaDataCanId
    45: VP: The module calls EcuC_SetMetaDataCanId
    46: VP: The module calls EOM Frame
    47: confirm the TP.CM_EOM packet
    48: Call J1939Tp_MainFunction
    49: Call PduR_J1939TpRxIndication
    50: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00229.CopyRxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1181</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_17</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>3681</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of unexpected TP.CM_RTS frame with different PGN and
    also unexpected BAM frame.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.CM_EOMS reception
    TP.Conn_Abort
    TP.Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 220 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Trigger a BAM Connection for a different Source
    16: Receive a TP.CM_BAM packet
    17: VP: Check call of EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: The module calls EcuC_GetMetaDataCanId
    20: Ignores the BAM Request
    21: Trigger a new CMDT reception with a different PGN
    22: Receive a TP.CM_RTS packet
    23: VP: Check call of EcuC_GetMetaDataCanId
    24: Call J1939Tp_MainFunction
    25: VP: The module calls EcuC_GetMetaDataCanId
    26: VP: Check call to EcuC_SetMetaDataCanId
    27: VP: The module calls CanIf_Transmit
    28: VP: Check that the module shall send abort frame for new connection
    29: confirm the TP.Conn_Abort packet
    30: VP: The module calls EcuC_SetMetaDataSourceAddr
    31: VP: The module calls EcuC_SetMetaDataTargetAddr
    32: VP: The module calls EcuC_SetMetaDataPriority
    33: VP: Check call of PduR_J1939TpStartOfReception
    34: VP: Check that module calls PduR_J1939TpRxIndication with E_NOT_OK
    35: VP: The module calls EcuC_SetMetaDataCanId
    36: VP: The module calls CanIf_Transmit
    37: confirm the TP.CM_CTS packet
    38: Call J1939Tp_RxIndication to receive a TP.DT packet
    39: VP: The module calls EcuC_GetMetaDataCanId
    40: Call J1939Tp_MainFunction two times
    41: VP: Check call to PduR_J1939TpCopyRxData
    42: Call J1939Tp_RxIndication to receive a TP.DT packet
    43: VP: The module calls EcuC_GetMetaDataCanId
    44: Call J1939Tp_MainFunction two times
    45: VP: Check call to PduR_J1939TpCopyRxData
    46: Call J1939Tp_RxIndication to receive a TP.DT packet
    47: VP: The module calls EcuC_GetMetaDataCanId
    48: VP: Check call to PduR_J1939TpCopyRxData
    49: VP: The module calls EcuC_SetMetaDataCanId
    50: VP: Check for the CTS Wait frame
    51: confirm the TP.CM_CTS packet
    52: Check for the DET Error for J1939TP_E_TIMEOUT_TH
    53: VP: The module calls EcuC_SetMetaDataCanId
    54: VP: Check for the CTS Wait frame
    55: Tx Confirmation for CTS frame
    56: VP: The module calls CanIf_Transmit
    57: confirm the TP.CM_CTS packet
    58: Call J1939Tp_RxIndication to receive a TP.DT packet
    59: VP: The module calls EcuC_GetMetaDataCanId
    60: Call J1939Tp_MainFunction two times
    61: VP: Check call to PduR_J1939TpCopyRxData
    62: Receive a TP.CM_EOMS packet
    63: VP: Check call of EcuC_GetMetaDataCanId
    64: VP: The module calls EcuC_SetMetaDataCanId
    65: VP: Check for EOM frame
    66: confirm the TP.CM_EOM packet
    67: Call J1939Tp_MainFunction
    68: Call PduR_J1939TpRxIndication
    69: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Bam</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1182</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_18</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>4251</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception when PduR_J1939TpCopyRxData returns invalid return values to adhere
    code coverage.

Test Object: 
    TP.CM_RTS Reception,
    TP.CM_CTS Transmission,
    TP.DT

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp and EcuC_GetMetaDataCanId can id
    03: VP: Receive unexpected TP.CM_DT packet and Check that trace is
        empty indicating that Data frame is ignored.
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Set the invalid return Value for PduR_J1939TpCopyRxData
    16: Call J1939Tp_RxIndication to receive a TP.DT packet
    17: VP: The module calls EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction two times
    19: Call J1939Tp_MainFunction two times
    20: VP: Check call to EcuC_SetMetaDataCanId
    21: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Data</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1183</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TimeOut_19</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>4450</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test waits for Abort counter to reach to maximum to adhere code coverage.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: Initialize EcuC_GetMetaDataCanId can id
    15: Receive a TP.CM_RTS packet again
    16: VP: Check call of EcuC_GetMetaDataCanId
    17:  Additional Delay to make NDUP unavailable for Abort Frame sending
    18: confirm the TP.CTS packet
    19: Call J1939Tp_MainFunction till the Abort counter reaches to maximum
    20: VP: Check call to EcuC_SetMetaDataCanId and EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.Conn_Abort packet
    23: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00097.Reception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1184</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_20</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>4636</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the behavior when "total number of packets" in received TP.CM/RTS frame does not match the "total message size".

Test Object: 
    TP.CM_RTS reception.

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: module Call Det_ReportError
    07: call J1939Tp_MainFunction
    08: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TNOP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1185</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_21</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>4720</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception after receiving E_NOT_OK for CanIf_Transmit
    of a CTS Frame.

Test Object: 
    TP.CM_RTS reception.
    TP.CM_CTS transmission,

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId can id and CanIf_Transmit return value to E_NOT_OK
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_SetMetaDataSourceAddr
        09: VP: The module calls EcuC_SetMetaDataTargetAddr
        10: VP: The module calls EcuC_SetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: VP: Check PduR_J1939TpRxIndication returns E_NOT_OK
        15: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Rx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1186</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_22</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>4861</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception after receiving E_NOT_OK for CanIf_Transmit
    of a CTS0 Frame.

Test Object: 
    TP.CM_RTS reception.
    TP.CM_CTS transmission,

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id and CanIf_Transmit return value to E_NOT_OK
    05: Receive a TP.CM_RTS packet
    06: VP: Check call of EcuC_GetMetaDataCanId
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaDataCanId
    09: VP: The module calls EcuC_SetMetaDataSourceAddr
    10: VP: The module calls EcuC_SetMetaDataTargetAddr
    11: VP: The module calls EcuC_SetMetaDataPriority
    12: VP: Check call of PduR_J1939TpStartOfReception
    13: VP: The module calls EcuC_SetMetaDataCanId
    14: VP: The module calls CanIf_Transmit
    15: VP: Check PduR_J1939TpRxIndication returns E_NOT_OK
    16: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1187</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_23</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>4997</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception after receiving E_NOT_OK for CanIf_Transmit
    of EOM Frame.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS Transmission,
    TP.DT
    TP.CM_EOMS reception
    TP.CM_EOM

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 220 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to PduR_J1939TpCopyRxData
    19: Call J1939Tp_MainFunction
    20: Call J1939Tp_RxIndication to receive a TP.DT packet
    21: VP: The module calls EcuC_GetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: Check call to PduR_J1939TpCopyRxData
    24: Set lesser buffer size for PduR_J1939TpCopyRxData
    25: Call J1939Tp_RxIndication to receive a TP.DT packet
    26: VP: The module calls EcuC_GetMetaDataCanId
    27: Call J1939Tp_MainFunction
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: VP: The module calls CanIf_Transmit
    30: confirm the TP.CM_CTS packet
    31: Call stack empty?
    32: Call J1939Tp_RxIndication to receive a TP.DT packet
    33: VP: The module calls EcuC_GetMetaDataCanId
    34: Call J1939Tp_MainFunction
    35: VP: Check call to PduR_J1939TpCopyRxData
    36: Set the return value to E_NOT_OK for CanIf_Transmit
    37: Receive a TP.CM_EOMS packet
    38: VP: Check call of EcuC_GetMetaDataCanId
    39: VP: The module calls EcuC_SetMetaDataCanId
    40: VP: The module calls EOM Frame
    41: Call J1939Tp_MainFunction
    42: VP: Check if the PduR_J1939TpRxIndication returns E_NOT_OK
    43: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ContinueDT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1188</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_24</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>5357</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of silent abort reception after receiving E_NOT_OK for
    CanIf_Transmit of an Abort Frame.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId can id
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_SetMetaDataSourceAddr
        09: VP: The module calls EcuC_SetMetaDataTargetAddr
        10: VP: The module calls EcuC_SetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: confirm the TP.CM_CTS packet and set the return value of CanIf_Transmit
        15: Call J1939Tp_RxIndication to receive a TP.DT packet
        16: VP: The module calls EcuC_GetMetaDataCanId
        17: Call J1939Tp_MainFunction two times
        18: The module calls Det_ReportError due to invalid sequence number
        19: VP: Check call to EcuC_SetMetaDataCanId
        20: VP: The module calls CanIf_Transmit
        21: Call J1939Tp_MainFunction
        22: VP: Check if PduR_J1939TpRxIndication returns E_NOT_OK
        23: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Reject.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1189</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_25</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>5565</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test silent abort reception when all NSDUs in the module are busy and CanIf_Transmit
    returns E_NOT_OK.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14. Initialize EcuC_GetMetaDataCanId can id
    15: Receive a TP.CM_RTS packet again
    16: VP: Check call of EcuC_GetMetaDataCanId
    17: confirm the TP.CTS packet and set return value of CanIf_Transmit to E_NOT_OK
    18: Call J1939Tp_MainFunction two times
    19: VP: Check call to EcuC_SetMetaDataCanId and EcuC_SetMetaDataCanId
    20. VP: The module calls CanIf_Transmit
    21: VP: Call J1939Tp_MainFunction and Check for Trace Empty
    22: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1190</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_26</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>5744</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception of Data Frames with frame delay less than J1939TpMainFunctionPeriod.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS Transmission,
    TP.DT
    TP.CM_EOMS reception
    TP.CM_EOM

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 280 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT1 packet
    16: VP: The module calls EcuC_GetMetaDataCanId for TP.DT1
    17: VP: Check call to PduR_J1939TpCopyRxData for TP.DT1
    18: Call J1939Tp_RxIndication to receive a TP.DT2 packet without J1939Tp_MainFunction
    19: VP: The module calls EcuC_GetMetaDataCanId for TP.DT2
    20: VP: Check call to PduR_J1939TpCopyRxData for TP.DT2
    21: Call J1939Tp_RxIndication to receive a TP.DT3 packet without J1939Tp_MainFunction
    22: VP: The module calls EcuC_GetMetaDataCanId for TP.DT3
    23: VP: Check call to PduR_J1939TpCopyRxData for TP.DT3
    24: Call J1939Tp_RxIndication to receive a TP.DT4 packet without J1939Tp_MainFunction
    28: VP: The module calls EcuC_GetMetaDataCanId for TP.DT4
    26: VP: Check call to PduR_J1939TpCopyRxData for TP.DT4
    27: Call J1939Tp_RxIndication to receive a TP.DT5 packet without J1939Tp_MainFunction
    28: VP: The module calls EcuC_GetMetaDataCanId for TP.DT5
    29: VP: Check call to PduR_J1939TpCopyRxData for TP.DT5
    30: Receive a TP.CM_EOMS packet
    31: VP: Check call of EcuC_GetMetaDataCanId
    32: VP: The module calls EOM Frame
    33: confirm the TP.CM_EOM packet
    34: Call J1939Tp_MainFunction two times
    35: Call PduR_J1939TpRxIndication
    36: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ContinueDT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1191</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_27</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>6087</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after timeout T1 to receive the EOMS

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: Call J1939Tp_RxIndication to receive a TP.DT packet
    21: VP: The module calls EcuC_GetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: The module calls EcuC_GetMetaDataCanId
    24: VP: Check call to PduR_J1939TpCopyRxData
    25: Call J1939Tp_RxIndication to receive a TP.DT packet
    26: VP: The module calls EcuC_GetMetaDataCanId
    27: Call J1939Tp_MainFunction
    28: VP: The module calls EcuC_GetMetaDataCanId
    29: VP: Check call to PduR_J1939TpCopyRxData
    30: Call J1939Tp_MainFunction till timeout T1 passed
    31: The module calls Det_ReportError due to Timeout
    32: VP: Check call to EcuC_SetMetaDataCanId
    33: VP: The module calls CanIf_Transmit
    34: confirm the TP.Conn_Abort packet
    35: Call J1939Tp_MainFunction two times
    36: VP: The module calls PduR_J1939TpRxIndication
    37: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.EOMS.TimeOut</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed.RetryDisabled.NoAssuranceData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1192</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_28</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>6380</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of unexpected TP.EOMS message before any transmission
    as well as a TP.EOMS message with invalid RTS length at the end of the transmission
    and a TP.EOMS message with an invalid assurance data type

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.CM_EOMS reception

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive an unexpected TP.CM_EOMS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Receive a TP.CM_RTS packet
    07: VP: Check call of EcuC_GetMetaDataCanId
    08: Call J1939Tp_MainFunction two times
    09: VP: The module calls EcuC_GetMetaDataCanId
    10: VP: The module calls EcuC_SetMetaDataSourceAddr
    11: VP: The module calls EcuC_SetMetaDataTargetAddr
    12: VP: The module calls EcuC_SetMetaDataPriority
    13: VP: Check call of PduR_J1939TpStartOfReception
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: VP: The module calls CanIf_Transmit
    16: confirm the TP.CM_CTS packet
    17: Call J1939Tp_RxIndication to receive a TP.DT packet
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: Call J1939Tp_MainFunction two times
    20: VP: Check call to EcuC_GetMetaDataCanId
    21: VP: Check call to PduR_J1939TpCopyRxData
    22: Call J1939Tp_RxIndication to receive a TP.DT packet
    23: VP: The module calls EcuC_GetMetaDataCanId
    24: Call J1939Tp_MainFunction
    25: VP: Check call to EcuC_GetMetaDataCanId
    26: VP: Check call to PduR_J1939TpCopyRxData
    27: Call J1939Tp_RxIndication to receive a TP.DT packet
    28: VP: The module calls EcuC_GetMetaDataCanId
    29: Call J1939Tp_MainFunction
    30: VP: Check call to EcuC_GetMetaDataCanId
    31: VP: Check call to PduR_J1939TpCopyRxData
    32: Receive an invalid TP.CM_EOMS packet
    33: VP: Check call of EcuC_GetMetaDataCanId
    34: VP: The module ignores the EOMS with invalid value
    35: Receive an TP.CM_EOMS packet with invalid assurance data type
    36: VP: The module calls EcuC_GetMetaDataCanId
    37: VP: Check call to EcuC_SetMetaDataCanId
    38: VP: The module calls CanIf_Transmit
    39: confirm the TP.CM_Abort packet
    40: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.AssuranceDataMismatch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1193</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_29</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>6707</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of unexpected TP.CM_RTS frame with same PGN and
    invalid assurance data type.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.CM_EOMS reception
    TP.Conn_Abort
    TP.Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 220 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Trigger a new CMDT reception with the same PGN and invalid assurance data type
    16: Receive a TP.CM_RTS packet
    17: VP: Check call of EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: The module calls EcuC_GetMetaDataCanId
    20: VP: Check call to EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: VP: Check that the module shall send abort frame for new connection
    23: confirm the TP.Conn_Abort packet
    24: VP: Check that module calls PduR_J1939TpRxIndication with E_NOT_OK for the old connection
    25: Call J1939Tp_MainFunction
    26: VP: The previous CMDT message was ignored as it had invalid assurance data type
    27: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Rts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1194</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_30</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>6918</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of TP.CM_RTS frame with invalid assurance data type.

Test Object: 
    TP.CM_RTS reception,
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 220 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet with invalid assurance data type
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: Check call to EcuC_SetMetaDataCanId
    09: VP: The module calls CanIf_Transmit
    10: VP: Check that the module shall send abort frame for new connection
    11: confirm the TP.Conn_Abort packet
    12: VP: Check that module calls PduR_J1939TpRxIndication with E_NOT_OK for the old connection
    13: Call J1939Tp_MainFunction
    14: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Rts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1195</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_31</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>7033</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of unexpected TP.CM_RTS frame with same PGN and
    valid assurance data type as well the handling of PduR_J1939TpCopyRxData API returns
    not BUFREQ_OK during the reception of the assurance data.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.CM_EOMS reception
    TP.Conn_Abort
    TP.Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Trigger a new CMDT reception with the same PGN and and a different valid assurance data type
    16: Receive a TP.CM_RTS packet
    17: VP: Check call of EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: The module calls EcuC_GetMetaDataCanId
    20: VP: Check that module calls PduR_J1939TpRxIndication with E_NOT_OK for the old connection
    21: VP: The module calls EcuC_SetMetaDataSourceAddr
    22: VP: The module calls EcuC_SetMetaDataTargetAddr
    23: VP: The module calls EcuC_SetMetaDataPriority
    24: VP: Check call of PduR_J1939TpStartOfReception
    25: VP: The module calls EcuC_SetMetaDataCanId
    26: VP: The module calls CanIf_Transmit
    27: confirm the TP.CM_CTS packet
    28: Call J1939Tp_RxIndication to receive a TP.DT packet
    29: VP: The module calls EcuC_GetMetaDataCanId
    30: Call J1939Tp_MainFunction two times
    31: VP: Check call to EcuC_GetMetaDataCanId
    32: VP: Check call to PduR_J1939TpCopyRxData
    33: Call J1939Tp_RxIndication to receive a TP.DT packet
    34: VP: Check call to EcuC_GetMetaDataCanId
    35: Call J1939Tp_MainFunction
    36: VP: Check call to EcuC_GetMetaDataCanId
    37: VP: Check call to PduR_J1939TpCopyRxData
    38: Call J1939Tp_RxIndication to receive a TP.DT packet
    39: VP: Check call to EcuC_GetMetaDataCanId
    40: Call J1939Tp_MainFunction
    41: VP: Check call to EcuC_GetMetaDataCanId
    42: VP: Check call to PduR_J1939TpCopyRxData
    43: Receive an TP.CM_EOMS packet
    44: VP: The module calls EcuC_GetMetaDataCanId
    45: VP: Check call to EcuC_SetMetaDataCanId
    46: VP: The module calls CanIf_Transmit
    47: VP: Check that the module shall send abort frame with J1939TP_TPCM_ABORT_REASON_RESOURCES reason
    48: confirm the TP.Conn_Abort packet
    49: VP: Check that module calls PduR_J1939TpRxIndication with E_NOT_OK for the current connection
    50: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.CMDT.CopyAssuranceData.NOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1196</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_TiemOut_32</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>7419</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after timeout T1 to receive the EOMS with assurance data

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_SetMetaDataSourceAddr
    09: VP: The module calls EcuC_SetMetaDataTargetAddr
    10: VP: The module calls EcuC_SetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: Call J1939Tp_RxIndication to receive a TP.DT packet
    21: VP: The module calls EcuC_GetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: The module calls EcuC_GetMetaDataCanId
    24: VP: Check call to PduR_J1939TpCopyRxData
    25: Call J1939Tp_RxIndication to receive a TP.DT packet
    26: VP: The module calls EcuC_GetMetaDataCanId
    27: Call J1939Tp_MainFunction
    28: VP: The module calls EcuC_GetMetaDataCanId
    29: VP: Check call to PduR_J1939TpCopyRxData
    30: Call J1939Tp_MainFunction till timeout T1 passed
    31: The module calls Det_ReportError due to Timeout
    32: VP: Check call to EcuC_SetMetaDataCanId
    33: VP: The module calls CanIf_Transmit
    34: confirm the TP.Conn_Abort packet
    35: Call J1939Tp_MainFunction two times
    36: VP: The module calls PduR_J1939TpRxIndication
    37: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.EOMS.TimeOut</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed.RetryDisabled.AssuranceData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.AssuranceDataNotReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1197</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_CMDT_CancelReceive_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_CancelReceive_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks canceling reception after receiving EOM frame

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM reception

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 15 to 19 two more times
    20: Call J1939Tp_MainFunction
    21: Receive a TP.CM_EOMS packet
    22: VP: The module calls EcuC_GetMetaDataCanId
    23: VP: Check call to EcuC_SetMetaDataCanId
    24: VP: The module calls CanIf_Transmit
    25: confirm the TP.CM_EOM packet
    26: Call J1939Tp_MainFunction
    27: Call J1939Tp_CancelReceive after receiving EOM frame
    28: Call PduR_J1939TpRxIndication
    29: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00204.received.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1198</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_CMDT_CancelReceive_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_CancelReceive_Test/source/application/Tests.c</sourcefile>
      <sourceline>320</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks canceling reception before receiving EOM frame and also
    checks the cancel reception scenario when received with invalid RxSduId.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOM reception

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: Call J1939Tp_CancelReceive before receiving EOM frame with Not Active SduId
    21: VP: Check J1939Tp_CancelReceive returns E_NOT_OK
    22: Call J1939Tp_CancelReceive before receiving EOM frame
    23: Call J1939Tp_MainFunction
    24: VP: Check call to EcuC_SetMetaDataCanId
    25: VP: The module calls CanIf_Transmit
    26: confirm the TP.CM_EOM packet
    27: Call J1939Tp_MainFunction
    28: Call PduR_J1939TpRxIndication
    29: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CancelReceive.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00204.RxPduId.NotActive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1199</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_CMDT_CancelReceive_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_CancelReceive_Test/source/application/Tests.c</sourcefile>
      <sourceline>554</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks canceling reception with J1939TP_INVALID_IPDU before receiving EOM frame

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM reception

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 15 to 19 two more times for two more transmissions
    20: Call J1939Tp_CancelReceive before receiving EOM frame after first transmit
    21: The module calls Det_ReportError due to invalid RxSduId
    22: Call J1939Tp_MainFunction
    23: Receive a TP.CM_EOMS packet
    24: VP: The module calls EcuC_GetMetaDataCanId
    25: VP: Check call to EcuC_SetMetaDataCanId
    26: VP: The module calls CanIf_Transmit
    27: confirm the TP.CM_EOM packet
    28: Call J1939Tp_MainFunction
    29: Call PduR_J1939TpRxIndication
    30: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00204.RxPduId.Invalid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00188.CancelReceive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1200</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_CMDT_CancelReceive_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_CancelReceive_Test/source/application/Tests.c</sourcefile>
      <sourceline>849</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test call J1939Tp_CancelReceive() for initialized module .
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: call J1939Tp_CancelReceive
    02: Check that module call Det_ReportError

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.DET.CANCELRECEIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1201</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving direct pg.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
  Direct Reception

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to receive 10 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId Can id for PDU1 type
    4: Call J1939Tp_RxIndication to receive a direct pg
    5: VP: The module calls EcuC_GetMetaDataCanId
    6: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaDataSourceAddr
    08: VP: The module calls EcuC_GetMetaDataTargetAddr
    09: VP: The module calls EcuC_GetMetaDataPriority
    10: VP: Check call of PduR_J1939TpStartOfReception
    11: VP: Check call to PduR_J1939TpCopyRxData
    12: Call J1939Tp_MainFunction
    13: The module calls PduR_J1939TpRxIndication
    14: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1202</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>149</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the J1939Tp_CancelReceive handling of direct pg.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
  Direct Reception

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 8 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId Can id
    04: Call J1939Tp_RxIndication to receive a direct pg
    05: VP: The module calls EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction
    07: Call J1939Tp_CancelReceive() for the active Direct Pg
    08: VP: Check if the J1939Tp_CancelReceive returns E_NOT_OK
    09: VP: The module calls EcuC_GetMetaDataSourceAddr
    10: VP: The module calls EcuC_GetMetaDataTargetAddr
    11: VP: The module calls EcuC_GetMetaDataPriority
    12: VP: Check call of PduR_J1939TpStartOfReception
    13: VP: Check call to PduR_J1939TpCopyRxData
    14: Call J1939Tp_MainFunction
    15: The module calls PduR_J1939TpRxIndication
    16: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00204.received.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1203</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>269</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving direct pg without metadata.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
  Direct Reception

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId Can id
    04: Call J1939Tp_RxIndication to receive a direct pg
    05: VP: Check call of PduR_J1939TpStartOfReception
    06: Call J1939Tp_MainFunction
    07: VP: Check call to PduR_J1939TpCopyRxData
    08: Call J1939Tp_MainFunction
    09: The module calls PduR_J1939TpRxIndication
    10: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1204</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_CMDT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>369</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of available buffer scenarios/CTS wait and Dynamic block calculation disabled.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT,
    TP.CM_EOMS reception,
    TP.CM_EOM
    Dynamic block calculation disabled

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId Can id and set buffer only 180 bytes
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_MainFunction
    16: Call J1939Tp_RxIndication to receive a TP.DT packet
    17: VP: The module calls EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: Call J1939Tp_RxIndication to receive a TP.DT packet
    21: VP: The module calls EcuC_GetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: Check call to PduR_J1939TpCopyRxData
    24: Call J1939Tp_MainFunction
    25: VP: The module calls EcuC_SetMetaDataCanId
    26: VP: Check that the modules sends CTS Wait frame as not buffer available
    27: COnfirmation for CTS wait frame
    28: Call J1939Tp_MainFunction
    29: Provide the buffer to the module
    30: Call J1939Tp_MainFunction
    31: VP: The module calls CanIf_Transmit
    32: VP: Check that the module sends valid CTS frame
    33: confirm the TP.CM_CTS packet
    34: Call J1939Tp_RxIndication to receive a TP.DT packet
    35: VP: The module calls EcuC_GetMetaDataCanId
    36: Call J1939Tp_MainFunction
    37: VP: Check call to PduR_J1939TpCopyRxData
    38: Call J1939Tp_RxIndication to receive a TP.DT packet
    39: VP: The module calls EcuC_GetMetaDataCanId
    40: Call J1939Tp_MainFunction
    41: VP: Check call to PduR_J1939TpCopyRxData
    42: VP: The module calls EcuC_SetMetaDataCanId
    43: confirm the TP.CM_CTS packet
    44: Call J1939Tp_RxIndication to receive a TP.DT packet
    45: VP: The module calls EcuC_GetMetaDataCanId
    46: Call J1939Tp_MainFunction
    47: VP: Check call to PduR_J1939TpCopyRxData
    48: Call J1939Tp_RxIndication to receive a TP.DT packet
    49: VP: The module calls EcuC_GetMetaDataCanId
    50: Call J1939Tp_MainFunction
    51: VP: Check call to PduR_J1939TpCopyRxData
    52: confirm the TP.CM_EOM packet
    53: Call J1939Tp_MainFunction
    54: Call PduR_J1939TpRxIndication
    55: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.CopyRxData.EnoughBuff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00229.CopyRxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1205</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>846</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving direct pg when PduR_J1939TpStartOfReception
    returns BUFREQ_E_NOT_OK.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
  Direct Reception

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId Can id
    04: Set BUFREQ_E_NOT_OK for PduR_J1939TpStartOfReception
    05: Call J1939Tp_RxIndication to receive a direct pg
    06: VP: The module calls EcuC_GetMetaDataCanId
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: Call J1939Tp_MainFunction
    13: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.StartOfReception.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.StartOfReception.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1206</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>953</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving direct pg when PduR_J1939TpStartOfReception
    returns BUFREQ_OK and PduR_J1939TpCopyRxData returns BUFREQ_E_NOT_OK.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
  Direct Reception

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId Can id
    04: Set BUFREQ_OK for PduR_J1939TpStartOfReception
    05: Set BUFREQ_E_NOT_OK for PduR_J1939TpCopyRxData
    06: Call J1939Tp_RxIndication to receive a direct pg
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: Call J1939Tp_MainFunction
    09: VP: The module calls EcuC_GetMetaDataSourceAddr
    10: VP: The module calls EcuC_GetMetaDataTargetAddr
    11: VP: The module calls EcuC_GetMetaDataPriority
    12: VP: Check call of PduR_J1939TpStartOfReception
    13: VP: Check call to PduR_J1939TpCopyRxData
    14: Call J1939Tp_MainFunction
    13: The module calls PduR_J1939TpRxIndication
    16: VP: Check that the frame is dropped
    17: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.StartOfReception.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1207</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>1076</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving direct pg when PduR_J1939TpStartOfReception
    returns BUFREQ_OK with smaller buffer size than received Pdu.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
  Direct Reception

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId Can id
    04: Set BUFREQ_E_OK for PduR_J1939TpStartOfReception but small buffer size
    05: Call J1939Tp_RxIndication to receive a direct pg
    06: VP: The module calls EcuC_GetMetaDataCanId
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: The module calls PduR_J1939TpRxIndication
    13: Call J1939Tp_MainFunction
    14: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.StartOfReception.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1208</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_DIRECT_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>1187</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving direct pg.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
  Direct Reception

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to receive 10 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId Can id for PDU3 type
    4: Call J1939Tp_RxIndication to receive a direct pg
    5: VP: The module calls EcuC_GetMetaDataCanId
    6: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaDataSourceAddr
    08: VP: The module calls EcuC_GetMetaDataTargetAddr
    09: VP: The module calls EcuC_GetMetaDataPriority
    10: VP: Check call of PduR_J1939TpStartOfReception
    11: VP: Check call to PduR_J1939TpCopyRxData
    12: Call J1939Tp_MainFunction
    13: The module calls PduR_J1939TpRxIndication
    14: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.D_PDU3.Format.DA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.D_PDU3.Format.SA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.D_PDU3.Format.Priority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1209</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_RCV_RETRY_BUFFER_RATIO_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Retry_Buffer_Ratio_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the Buffer ratio is calculated correctly when the J1939TpRxDynamicBlockCalculation
    and J1939TpRxRetrySupport are enabled.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Set Sequence num in the frame
    16: Call J1939Tp_RxIndication to receive a TP.DT packet
    17: VP: The module calls EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: The module calls EcuC_SetMetaDataCanId
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.CM_CTS packet
    22: Call J1939Tp_MainFunction
    23: Call J1939Tp_MainFunction
    24: VP: The module calls EcuC_SetMetaDataCanId
    25: VP: The module calls CanIf_Transmit
    26: confirm the TP.CM_CTS packet
    27: Call J1939Tp_MainFunction
    28: Set SN in the frame
    29: Call J1939Tp_RxIndication to receive a TP.DT packet
    30: VP: The module calls EcuC_GetMetaDataCanId
    31: Call J1939Tp_MainFunction
    32: Receive a TP.CM_EOMS packet
    33: VP: The module calls EcuC_GetMetaDataCanId
    34: VP: The module calls EcuC_SetMetaDataCanId
    35: VP: The module calls CanIf_Transmit
    36: confirm the TP.CM_EOM packet
    37: Call J1939Tp_MainFunction
    38: Call PduR_J1939TpRxIndication
    39: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1210</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_CTS_RETRY_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Retry_MultiCTS_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that the module behaves correctly if a wrong sequence number is received be during
    multi block message.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: Loop until the module receives all the frames after the frame with the wrong Sequence num
    19: VP: The module calls EcuC_SetMetaDataCanId
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.CM_CTS packet
    22: Call J1939Tp_MainFunction
    23: Set Sequence num in the frame
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaDataCanId
    26: Set wrong Sequence num in the frame
    27: Call J1939Tp_RxIndication to receive a TP.DT packet
    28: VP: The module calls EcuC_GetMetaDataCanId
    29: Set last Sequence num in the frame
    30: Call J1939Tp_RxIndication to receive a TP.DT packet
    31: VP: The module calls EcuC_GetMetaDataCanId
    32: VP: The module calls EcuC_SetMetaDataCanId
    33: VP: The module calls CanIf_Transmit
    34: confirm the TP.CM_CTS packet
    35: Call J1939Tp_MainFunction
    36: Call J1939Tp_RxIndication to receive a TP.DT packet
    37: VP: The module calls EcuC_GetMetaDataCanId
    38: Call J1939Tp_MainFunction
    39: VP: The module calls EcuC_SetMetaDataCanId
    40: VP: The module calls CanIf_Transmit
    41: confirm the TP.CM_CTS packet
    42: Call J1939Tp_MainFunction
    43: Call J1939Tp_MainFunction
    44: VP: The module calls EcuC_SetMetaDataCanId
    45: VP: The module calls CanIf_Transmit
    46: confirm the TP.CM_CTS packet
    47: Call J1939Tp_MainFunction
    48: Call J1939Tp_RxIndication to receive a TP.DT packet
    49: VP: The module calls EcuC_GetMetaDataCanId
    50: Call J1939Tp_MainFunction
    51: Receive a TP.CM_EOMS packet
    52: VP: The module calls EcuC_GetMetaDataCanId
    53: VP: The module calls EcuC_SetMetaDataCanId
    54: VP: The module calls CanIf_Transmit
    55: confirm the TP.CM_EOM packet
    56: Call J1939Tp_MainFunction
    57: Call PduR_J1939TpRxIndication
    58: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00232.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1211</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_CTS_RETRY_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Retry_MultiCTS_Test/source/application/Tests.c</sourcefile>
      <sourceline>493</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    check the behavior in case a wrong sequence number is received during the first block. And
    another wrong sequence number is received during the second block.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: Loop until the module receives all the frames after the frame with the wrong Sequence num
    19: VP: The module calls EcuC_SetMetaDataCanId
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.CM_CTS packet
    22: Call J1939Tp_MainFunction
    23: Set Sequence num in the frame
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaDataCanId
    26: Call J1939Tp_RxIndication to receive a TP.DT packet
    27: VP: The module calls EcuC_GetMetaDataCanId
    28: Call J1939Tp_MainFunction
    29: VP: The module calls EcuC_SetMetaDataCanId
    30: VP: The module calls CanIf_Transmit
    31: confirm the TP.CM_CTS packet
    32: Call J1939Tp_MainFunction
    33: Call J1939Tp_MainFunction
    34: VP: The module calls EcuC_SetMetaDataCanId
    35: VP: The module calls CanIf_Transmit
    36: confirm the TP.CM_CTS packet
    37: Call J1939Tp_MainFunction
    38: Call J1939Tp_RxIndication to receive a TP.DT packet
    39: VP: The module calls EcuC_GetMetaDataCanId
    40: VP: The module calls EcuC_SetMetaDataCanId
    41: VP: The module calls CanIf_Transmit
    42: confirm the TP.CM_CTS packet
    43: Call J1939Tp_MainFunction
    44: Call J1939Tp_RxIndication to receive a TP.DT packet
    45: VP: The module calls EcuC_GetMetaDataCanId
    46: Call J1939Tp_MainFunction
    47: Receive a TP.CM_EOMS packet
    48: VP: The module calls EcuC_GetMetaDataCanId
    49: VP: The module calls EcuC_SetMetaDataCanId
    50: VP: The module calls CanIf_Transmit
    51: confirm the TP.CM_EOM packet
    52: Call J1939Tp_MainFunction
    53: Call PduR_J1939TpRxIndication
    54: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00232.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1212</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_CTS_RETRY_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Retry_MultiCTS_Test/source/application/Tests.c</sourcefile>
      <sourceline>932</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that the module behaves correctly if a wrong sequence number is received be during
    multi block of more than two blocks message.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 250 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: Loop until the module receives all the frames after the frame with the wrong Sequence num
    19: VP: The module calls EcuC_SetMetaDataCanId
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.CM_CTS packet
    22: Call J1939Tp_MainFunction
    23: Set Sequence num in the frame
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaDataCanId
    26: Set wrong Sequence num in the frame
    27: Call J1939Tp_RxIndication to receive a TP.DT packet
    28: VP: The module calls EcuC_GetMetaDataCanId
    29: Set last Sequence num in the frame
    30: Call J1939Tp_RxIndication to receive a TP.DT packet
    31: VP: The module calls EcuC_GetMetaDataCanId
    32: VP: The module calls EcuC_SetMetaDataCanId
    33: VP: The module calls CanIf_Transmit
    34: confirm the TP.CM_CTS packet
    35: Call J1939Tp_MainFunction
    36: Call J1939Tp_RxIndication to receive a TP.DT packet
    37: VP: The module calls EcuC_GetMetaDataCanId
    38: Call J1939Tp_MainFunction
    39: VP: The module calls EcuC_SetMetaDataCanId
    40: VP: The module calls CanIf_Transmit
    41: confirm the TP.CM_CTS packet
    42: Call J1939Tp_MainFunction
    43: Call J1939Tp_MainFunction
    44: VP: The module calls EcuC_SetMetaDataCanId
    45: VP: The module calls CanIf_Transmit
    46: confirm the TP.CM_CTS packet
    47: Call J1939Tp_MainFunction
    48: Call J1939Tp_RxIndication to receive a TP.DT packet
    49: VP: The module calls EcuC_GetMetaDataCanId
    50: Call J1939Tp_MainFunction
    51: Call J1939Tp_RxIndication to receive a TP.DT packet
    52: VP: The module calls EcuC_GetMetaDataCanId
    53: Call J1939Tp_MainFunction
    54: Call J1939Tp_RxIndication to receive a TP.DT packet
    55: VP: The module calls EcuC_GetMetaDataCanId
    56: Call J1939Tp_MainFunction
    57: VP: The module calls EcuC_SetMetaDataCanId
    58: VP: The module calls CanIf_Transmit
    59: confirm the TP.CM_CTS packet
    60: Call J1939Tp_MainFunction
    61: Call J1939Tp_RxIndication to receive a TP.DT packet
    62: VP: The module calls EcuC_GetMetaDataCanId
    63: Call J1939Tp_MainFunction
    64: VP: The module calls EcuC_SetMetaDataCanId
    65: VP: The module calls CanIf_Transmit
    66: confirm the TP.CM_CTS packet
    67: Call J1939Tp_MainFunction
    68: Call J1939Tp_RxIndication to receive a TP.DT packet
    69: VP: The module calls EcuC_GetMetaDataCanId
    70: Call J1939Tp_MainFunction
    71: VP: The module calls EcuC_SetMetaDataCanId
    72: VP: The module calls CanIf_Transmit
    73: confirm the TP.CM_CTS packet
    74: Call J1939Tp_MainFunction
    75: Call J1939Tp_RxIndication to receive a TP.DT packet
    76: VP: The module calls EcuC_GetMetaDataCanId
    77: Call J1939Tp_MainFunction
    78: Receive a TP.CM_EOMS packet
    79: VP: The module calls EcuC_GetMetaDataCanId
    80: Call J1939Tp_MainFunction
    81: VP: The module calls EcuC_SetMetaDataCanId
    82: VP: The module calls CanIf_Transmit
    83: confirm the TP.CM_EOM packet
    84: Call J1939Tp_MainFunction
    85: Call PduR_J1939TpRxIndication
    86: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00232.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1213</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_RETRY_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the first frame of the block was sent with wrong sequence number. And retry is enabled for this
    channel. That it will wait for it to finish the transmission then re-request the block.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: Loop until the module receives all the frames after the frame with the wrong Sequence num
    19: VP: The module calls EcuC_SetMetaDataCanId
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.CM_CTS packet
    22: Call J1939Tp_MainFunction
    23: Set Sequence num in the frame
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaDataCanId
    26: Repeat Steps 23 - 25 till all frames are sent
    27: Receive a TP.CM_EOMS packet
    28: VP: The module calls EcuC_GetMetaDataCanId
    29: Call J1939Tp_MainFunction
    30: VP: The module calls EcuC_SetMetaDataCanId
    31: VP: The module calls CanIf_Transmit
    32: confirm the TP.CM_EOM packet
    33: Call J1939Tp_MainFunction
    34: Call PduR_J1939TpRxIndication
    35: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1214</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_RETRY_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>338</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    check the behavior in case a sequence number is missed. That the module will re-request the missed frame and
    all the frames that follows.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_MainFunction two times
    16: Set Sequence num to the first frame
    17: Call J1939Tp_RxIndication to receive a TP.DT packet
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: Call J1939Tp_MainFunction
    20: VP: The module calls PduR_J1939TpCopyRxData
    21: Call J1939Tp_MainFunction
    22: Set Sequence num to the third frame
    23: Call J1939Tp_RxIndication to receive a TP.DT packet
    24: VP: The module calls EcuC_GetMetaDataCanId
    25: Call J1939Tp_MainFunction
    26: VP: The module calls EcuC_SetMetaDataCanId
    27: Call J1939Tp_MainFunction
    28: VP: The module calls EcuC_SetMetaDataCanId
    29: VP: The module calls CanIf_Transmit
    30: confirm the TP.Conn_Abort packet
    31: Call J1939Tp_MainFunction
    32: Set Sequence num to the second frame
    33: Call J1939Tp_RxIndication to receive a TP.DT packet
    34: VP: The module calls EcuC_GetMetaDataCanId
    35: Call J1939Tp_MainFunction
    36: VP: The module calls PduR_J1939TpCopyRxData
    37: Call J1939Tp_MainFunction
    38: Set Sequence num to the third frame
    39: Call J1939Tp_RxIndication to receive a TP.DT packet
    40: VP: The module calls EcuC_GetMetaDataCanId
    41: Call J1939Tp_MainFunction
    42: VP: The module calls PduR_J1939TpCopyRxData
    43: Call J1939Tp_MainFunction
    44: Receive a TP.CM_EOMS packet
    45: VP: The module calls EcuC_GetMetaDataCanId
    46: VP: The module calls EcuC_SetMetaDataCanId
    47: VP: The module calls CanIf_Transmit
    48: confirm the TP.CM_EOM packet
    49: Call J1939Tp_MainFunction
    50: Call PduR_J1939TpRxIndication
    51: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1215</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_RETRY_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>676</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    check the behavior in case multiple wrong Sequence num are received within same block.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_MainFunction two times
    16: Set Sequence num to the second frame
    17: Call J1939Tp_RxIndication to receive a TP.DT packet
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: Call J1939Tp_MainFunction
    20: Repeat steps from 16 - 19 with multiple consecutive wrong Sequence nums
    21: Call J1939Tp_MainFunction
    22: Set Sequence num to the third frame
    23: Call J1939Tp_RxIndication to receive a TP.DT packet
    24: VP: The module calls EcuC_GetMetaDataCanId
    25: Call J1939Tp_MainFunction
    26: VP: The module calls EcuC_SetMetaDataCanId
    27: Call J1939Tp_MainFunction
    28: VP: The module calls EcuC_SetMetaDataCanId
    29: VP: The module calls CanIf_Transmit
    30: confirm the TP.Conn_Abort packet
    31: Call J1939Tp_MainFunction
    32: Set Sequence num to the second frame
    33: Call J1939Tp_RxIndication to receive a TP.DT packet
    34: VP: The module calls EcuC_GetMetaDataCanId
    35: Call J1939Tp_MainFunction
    36: VP: The module calls PduR_J1939TpCopyRxData
    37: Call J1939Tp_MainFunction
    38: Set Sequence num to the third frame
    39: Call J1939Tp_RxIndication to receive a TP.DT packet
    40: VP: The module calls EcuC_GetMetaDataCanId
    41: Call J1939Tp_MainFunction
    42: VP: The module calls PduR_J1939TpCopyRxData
    43: Call J1939Tp_MainFunction
    44: Set Sequence num to the second frame
    45: Call J1939Tp_RxIndication to receive a TP.DT packet
    46: VP: The module calls EcuC_GetMetaDataCanId
    47: Call J1939Tp_MainFunction
    48: Set Sequence num to the third frame
    49: Call J1939Tp_RxIndication to receive a TP.DT packet
    50: VP: The module calls EcuC_GetMetaDataCanId
    51: Call J1939Tp_MainFunction
    52: VP: The module calls PduR_J1939TpCopyRxData
    53: Call J1939Tp_MainFunction
    54: VP: The module calls CanIf_Transmit
    55: confirm the TP.Conn_Abort packet
    56: Call J1939Tp_MainFunction
    57: Set Sequence num to the third frame
    58: Call J1939Tp_RxIndication to receive a TP.DT packet
    59: VP: The module calls EcuC_GetMetaDataCanId
    60: Call J1939Tp_MainFunction
    61: VP: The module calls PduR_J1939TpCopyRxData
    62: Call J1939Tp_MainFunction
    63: Receive a TP.CM_EOMS packet
    64: VP: The module calls EcuC_GetMetaDataCanId
    65: VP: The module calls EcuC_SetMetaDataCanId
    66: VP: The module calls CanIf_Transmit
    67: confirm the TP.CM_EOM packet
    68: Call J1939Tp_MainFunction
    69: Call PduR_J1939TpRxIndication
    70: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00232.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1216</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_RETRY_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>1178</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test to validate that if a wrong Sequence num is sent while retry is enabled. And the last Sequence num expected was not received
    the module will wait till timeout then abort.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId can id
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_GetMetaDataSourceAddr
        09: VP: The module calls EcuC_GetMetaDataTargetAddr
        10: VP: The module calls EcuC_GetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: confirm the TP.CM_CTS packet
        15: Set Sequence num in the frame
        16: Call J1939Tp_RxIndication to receive a TP.DT packet
        17: VP: The module calls EcuC_GetMetaDataCanId
        18: Repeat Steps 15 - 17 till first 2 frames are sent
        19: Set Sequence num in the frame to wrong Sequence num
        20: Call J1939Tp_RxIndication to receive a TP.DT packet
        21: VP: The module calls EcuC_GetMetaDataCanId
        22: Call J1939Tp_MainFunction till timeout T1 passed
        23: The module calls Det_ReportError due to Timeout
        24: VP: Check call to EcuC_SetMetaDataCanId
        25: VP: The module calls CanIf_Transmit
        26 confirm the TP.Conn_Abort packet
        27: Call J1939Tp_MainFunction two times
        28: VP: The module calls PduR_J1939TpRxIndication
        29: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Reject.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1217</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_RETRY_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>1423</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of the retry request for the EOMS frame after timeout T1 after the last DT packet was received

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
        repeat steps from 15 to 19 two more times
    20: Call J1939Tp_MainFunction till timeout T1 passed
    21: The module calls Det_ReportError due to Timeout
    22: VP: Check call to EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: confirm the TP.CM_CTS packet
    25: Call J1939Tp_MainFunction
    26: Receive a TP.CM_EOMS packet
    27: VP: The module calls EcuC_GetMetaDataCanId
    27: VP: The module calls EcuC_SetMetaDataCanId
    28: VP: The module calls CanIf_Transmit
    29: confirm the TP.CM_EOM packet
    30: VP: The module calls PduR_J1939TpRxIndication
    31: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.EOMS.TimeOut</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_CM_CTS.RequestCode.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed.RetryEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1218</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_RETRY_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>1741</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of the retry request for the EOMS frame after timeout T1 after a previous request for the EOMS was initiated

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission,
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
        repeat steps from 15 to 19 two more time
    20: Call J1939Tp_MainFunction till timeout T1 passed
    21: The module calls Det_ReportError due to Timeout
    22: VP: Check call to EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: confirm the TP.CM_CTS packet packet
    25: Call J1939Tp_MainFunction
    26: Call J1939Tp_MainFunction till timeout T1 passed
    27: The module calls Det_ReportError due to Timeout
    28: VP: Check call to EcuC_SetMetaDataCanId
    29: VP: The module calls CanIf_Transmit
    30: confirm the TP.CM_CTS packet packet
    31: Call J1939Tp_MainFunction
    32: VP: The module calls PduR_J1939TpRxIndication
    33: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_CM_CTS.RequestCode.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.EOMS.TimeOut</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Rx.EOMS.TimeOut.Elapsed.RetryEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1219</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>116</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving an initial, valid TP.CM_RTS packet. 
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet with invalid session number
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: VP: Check call of Det_ReportError with J1939TP_E_INVALID_SESSION_NUMBER
    07: Receive a TP.CM_RTS packet with a valid session number
    08: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaData API's according to metadata
    17: Call J1939Tp_MainFunction
    18: VP: The module calls EcuC_GetMetaData API's according to metadata
    19: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 15 to 19 two times
    20: Call J1939Tp_MainFunction
    21: Receive a TP.CM_EOMS packet
    22: VP: The module calls EcuC_GetMetaDataCanId API's according to metadata configuration
    23: VP: The module calls PduR_J1939TpCopyRxData API according to assurance data configuration
    24: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    25: VP: The module calls CanIf_Transmit
    26: confirm the TP.CM_EOM packet
    27: Call J1939Tp_MainFunction
    28: Call PduR_J1939TpRxIndication
    29: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.EndOfMsgAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00043.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00057.PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00057.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00118.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.InitGlobalVar</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Reassembly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Accept.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_RTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_CTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgStatus.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgACK.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.InvalidSession.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1220</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>492</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full reception scenario , with two wait cts during reception.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_CTS packet
    12: Call J1939Tp_MainFunction till Th elapse
    13: The module calls Det_ReportError due to Th timeout
    14: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    15: VP: The module calls CanIf_Transmit
    16: confirm the TP.CM_CTS packet
    17: Call J1939Tp_MainFunction
    18: VP: The module calls PduR_J1939TpCopyRxData
    19: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.CM_CTS packet
    22: Call J1939Tp_RxIndication to receive a TP.DT packet
    23: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    24: Call J1939Tp_MainFunction
    25: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    26: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 22 to 26 two more times
    27: Call J1939Tp_MainFunction
    28: Receive a TP.CM_EOMS packet
    29: VP: The module calls EcuC_GetMetaDataCanId API's according to metadata configuration
    30: VP: The module calls PduR_J1939TpCopyRxData API according to assurance data configuration
    31: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    32: VP: The module calls CanIf_Transmit
    33: confirm the TP.CM_EOM packet
    34: Call J1939Tp_MainFunction
    35: Call PduR_J1939TpRxIndication
    36: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00226.BuffSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00226.NewCTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.StartOfReception.EnoughBuff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.StartOfReception.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00229.StartOfReception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TH</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.Th</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Accept.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_RTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_CTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgStatus.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgACK.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1221</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>921</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling reception When a TP.CM_RTS is received for a currently active connection.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC MetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: VP: The module calls EcuC MetaData API's according to metadata configuration
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_CTS packet
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC MetaData API's according to metadata configuration
    14: Call J1939Tp_MainFunction
    15: VP: The module calls EcuC MetaData API's according to metadata configuration
    16: VP: Check call to PduR_J1939TpCopyRxData
    17: Initialize EcuC_GetMetaDataCanId can id
    18: Receive a TP.CM_RTS packet
    19: VP: The module calls EcuC MetaData API's according to metadata configuration
    20: Call J1939Tp_MainFunction
    21: VP: The module calls EcuC MetaData API's according to metadata configuration
    22: Call PduR_J1939TpRxIndication
    23: VP: The module calls EcuC MetaData API's according to metadata configuration
    24: VP: Check call of PduR_J1939TpStartOfReception
    25: VP: The module calls EcuC MetaData API's according to metadata configuration
    26: VP: The module calls CanIf_Transmit
    27: confirm the TP.CM_CTS packet
    28: Call J1939Tp_RxIndication to receive a TP.DT packet
    29: VP: The module calls EcuC MetaData API's according to metadata configuration
    30: Call J1939Tp_MainFunction
    31: VP: The module calls EcuC MetaData API's according to metadata configuration
    32: VP: Check call to PduR_J1939TpCopyRxData
    33: Call J1939Tp_CancelReceive with valid RxSduId during ongoing data reception
    34: VP: Check that J1939Tp_CancelReceive returns E_NOT_OK
    35: Call J1939Tp_MainFunction
    36: Receive a TP.CM_EOMS packet
    37: VP: The module calls EcuC_GetMetaDataCanId API's according to metadata configuration
    38: VP: The module calls PduR_J1939TpCopyRxData API according to assurance data configuration
    39: VP: The module calls EcuC_SetMetaDataCanId API's according to metadata configuration
    40: VP: The module calls CanIf_Transmit
    41: confirm the TP.CM_EOM packet
    42: Call J1939Tp_MainFunction
    43: Call PduR_J1939TpRxIndication
    44: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Accept.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_RTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_CTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgACK.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1222</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1398</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of invalid return value of PduR_J1939TpStartOfReception.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Set Invalid return Value of PduR_J1939TpStartOfReception
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    09: VP: Check call of PduR_J1939TpStartOfReception
    10: VP: Check that that abort frame is sent
    11: Confirm Conn.Abort Transmission
    12: Call J1939Tp_MainFunction
    13: Receive a TP.CM_RTS packet
    14: Set valid return Value of PduR_J1939TpStartOfReception
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    17: VP: Check call of PduR_J1939TpStartOfReception
    18: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.CM_CTS packet
    21: Call J1939Tp_RxIndication to receive a TP.DT packet
    22: VP: The module calls EcuC_GetMetaData API's according to metadata
    23: Call J1939Tp_MainFunction
    24: VP: The module calls EcuC_GetMetaData API's according to metadata
    25: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 17 to 21 two times
    26: Call J1939Tp_MainFunction
    27: Receive a TP.CM_EOMS packet
    28: VP: The module calls EcuC_GetMetaDataCanId API's according to metadata configuration
    29: VP: The module calls PduR_J1939TpCopyRxData API according to assurance data configuration
    30: VP: The module calls EcuC_SetMetaDataCanId
    31: VP: The module calls CanIf_Transmit
    32: confirm the TP.CM_EOM packet
    33: Call J1939Tp_MainFunction
    34: Call PduR_J1939TpRxIndication
    35: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.EndOfMsgAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Accept.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_RTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_CTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgACK.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1223</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1813</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of CMDT reception with a big size of 15600 bytes.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 15600 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet with a valid session number
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_CTS packet
    12: Call J1939Tp_RxIndication to receive a valid TP.DT packet
    13: VP: The module calls EcuC_GetMetaData API's according to metadata
    14: Call J1939Tp_MainFunction
    15: VP: The module calls EcuC_GetMetaData API's according to metadata
    16: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 11 to 15 five times to simulate 5 received frame
    17: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.CM_CTS packet
    : repeat steps from 11 to 19 52 times to simulate 52 TP.CM_CTS transmissions
    20: Call J1939Tp_MainFunction
    21: Receive a TP.CM_EOMS packet
    22: VP: The module calls EcuC_GetMetaDataCanId API's according to metadata configuration
    23: VP: The module calls PduR_J1939TpCopyRxData API according to assurance data configuration 
    24: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    25: VP: The module calls CanIf_Transmit
    26: confirm the TP.CM_EOM packet
    27: Call J1939Tp_MainFunction
    28: Call PduR_J1939TpRxIndication
    29: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Accept.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_RTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_CTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgACK.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.InvalidSession.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1224</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>116</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving an initial, valid TP.CM_RTS packet. 
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet with invalid session number
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: VP: Check call of Det_ReportError with J1939TP_E_INVALID_SESSION_NUMBER
    07: Receive a TP.CM_RTS packet with a valid session number
    08: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaData API's according to metadata
    17: Call J1939Tp_MainFunction
    18: VP: The module calls EcuC_GetMetaData API's according to metadata
    19: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 15 to 19 two times
    20: Call J1939Tp_MainFunction
    21: Receive a TP.CM_EOMS packet
    22: VP: The module calls EcuC_GetMetaDataCanId API's according to metadata configuration
    23: VP: The module calls PduR_J1939TpCopyRxData API according to assurance data configuration
    24: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    25: VP: The module calls CanIf_Transmit
    26: confirm the TP.CM_EOM packet
    27: Call J1939Tp_MainFunction
    28: Call PduR_J1939TpRxIndication
    29: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.EndOfMsgAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00043.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00057.PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00057.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00118.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.InitGlobalVar</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Reassembly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Accept.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_RTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_CTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgStatus.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgACK.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.InvalidSession.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1225</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>492</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full reception scenario , with two wait cts during reception.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_CTS packet
    12: Call J1939Tp_MainFunction till Th elapse
    13: The module calls Det_ReportError due to Th timeout
    14: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    15: VP: The module calls CanIf_Transmit
    16: confirm the TP.CM_CTS packet
    17: Call J1939Tp_MainFunction
    18: VP: The module calls PduR_J1939TpCopyRxData
    19: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.CM_CTS packet
    22: Call J1939Tp_RxIndication to receive a TP.DT packet
    23: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    24: Call J1939Tp_MainFunction
    25: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    26: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 22 to 26 two more times
    27: Call J1939Tp_MainFunction
    28: Receive a TP.CM_EOMS packet
    29: VP: The module calls EcuC_GetMetaDataCanId API's according to metadata configuration
    30: VP: The module calls PduR_J1939TpCopyRxData API according to assurance data configuration
    31: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    32: VP: The module calls CanIf_Transmit
    33: confirm the TP.CM_EOM packet
    34: Call J1939Tp_MainFunction
    35: Call PduR_J1939TpRxIndication
    36: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00226.BuffSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00226.NewCTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.StartOfReception.EnoughBuff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.StartOfReception.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00229.StartOfReception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TH</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.Th</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Accept.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_RTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_CTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgStatus.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgACK.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1226</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>921</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling reception When a TP.CM_RTS is received for a currently active connection.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC MetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: VP: The module calls EcuC MetaData API's according to metadata configuration
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_CTS packet
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC MetaData API's according to metadata configuration
    14: Call J1939Tp_MainFunction
    15: VP: The module calls EcuC MetaData API's according to metadata configuration
    16: VP: Check call to PduR_J1939TpCopyRxData
    17: Initialize EcuC_GetMetaDataCanId can id
    18: Receive a TP.CM_RTS packet
    19: VP: The module calls EcuC MetaData API's according to metadata configuration
    20: Call J1939Tp_MainFunction
    21: VP: The module calls EcuC MetaData API's according to metadata configuration
    22: Call PduR_J1939TpRxIndication
    23: VP: The module calls EcuC MetaData API's according to metadata configuration
    24: VP: Check call of PduR_J1939TpStartOfReception
    25: VP: The module calls EcuC MetaData API's according to metadata configuration
    26: VP: The module calls CanIf_Transmit
    27: confirm the TP.CM_CTS packet
    28: Call J1939Tp_RxIndication to receive a TP.DT packet
    29: VP: The module calls EcuC MetaData API's according to metadata configuration
    30: Call J1939Tp_MainFunction
    31: VP: The module calls EcuC MetaData API's according to metadata configuration
    32: VP: Check call to PduR_J1939TpCopyRxData
    33: Call J1939Tp_CancelReceive with valid RxSduId during ongoing data reception
    34: VP: Check that J1939Tp_CancelReceive returns E_NOT_OK
    35: Call J1939Tp_MainFunction
    36: Receive a TP.CM_EOMS packet
    37: VP: The module calls EcuC_GetMetaDataCanId API's according to metadata configuration
    38: VP: The module calls PduR_J1939TpCopyRxData API according to assurance data configuration
    39: VP: The module calls EcuC_SetMetaDataCanId API's according to metadata configuration
    40: VP: The module calls CanIf_Transmit
    41: confirm the TP.CM_EOM packet
    42: Call J1939Tp_MainFunction
    43: Call PduR_J1939TpRxIndication
    44: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Accept.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_RTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_CTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgACK.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1227</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>1398</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of invalid return value of PduR_J1939TpStartOfReception.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Set Invalid return Value of PduR_J1939TpStartOfReception
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    09: VP: Check call of PduR_J1939TpStartOfReception
    10: VP: Check that that abort frame is sent
    11: Confirm Conn.Abort Transmission
    12: Call J1939Tp_MainFunction
    13: Receive a TP.CM_RTS packet
    14: Set valid return Value of PduR_J1939TpStartOfReception
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    17: VP: Check call of PduR_J1939TpStartOfReception
    18: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.CM_CTS packet
    21: Call J1939Tp_RxIndication to receive a TP.DT packet
    22: VP: The module calls EcuC_GetMetaData API's according to metadata
    23: Call J1939Tp_MainFunction
    24: VP: The module calls EcuC_GetMetaData API's according to metadata
    25: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 17 to 21 two times
    26: Call J1939Tp_MainFunction
    27: Receive a TP.CM_EOMS packet
    28: VP: The module calls EcuC_GetMetaDataCanId API's according to metadata configuration
    29: VP: The module calls PduR_J1939TpCopyRxData API according to assurance data configuration
    30: VP: The module calls EcuC_SetMetaDataCanId
    31: VP: The module calls CanIf_Transmit
    32: confirm the TP.CM_EOM packet
    33: Call J1939Tp_MainFunction
    34: Call PduR_J1939TpRxIndication
    35: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.EndOfMsgAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Accept.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_RTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_CTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgACK.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1228</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_FULLDUPLEX_RCV_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_CMDT_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>1813</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of CMDT reception with a big size of 15600 bytes.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOMS reception,
    TP.CM_EOM transmission

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 15600 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId can id
    04: Receive a TP.CM_RTS packet with a valid session number
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_CTS packet
    12: Call J1939Tp_RxIndication to receive a valid TP.DT packet
    13: VP: The module calls EcuC_GetMetaData API's according to metadata
    14: Call J1939Tp_MainFunction
    15: VP: The module calls EcuC_GetMetaData API's according to metadata
    16: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 11 to 15 five times to simulate 5 received frame
    17: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.CM_CTS packet
    : repeat steps from 11 to 19 52 times to simulate 52 TP.CM_CTS transmissions
    20: Call J1939Tp_MainFunction
    21: Receive a TP.CM_EOMS packet
    22: VP: The module calls EcuC_GetMetaDataCanId API's according to metadata configuration
    23: VP: The module calls PduR_J1939TpCopyRxData API according to assurance data configuration 
    24: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    25: VP: The module calls CanIf_Transmit
    26: confirm the TP.CM_EOM packet
    27: Call J1939Tp_MainFunction
    28: Call PduR_J1939TpRxIndication
    29: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Accept.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_RTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_CTS.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgACK.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.InvalidSession.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1229</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_SA_DA_LEGACY_SESSION_NUMB_FORMAT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_Concurrent_SessionNumbLegacyFormat_Test/source/application/Tests.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test the concurrent reception of two CMDT Connection on a single Rx Channel with the same SA and DA
    using different session IDs.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.CM_EOMS reception
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id for Session 0
    04: Receive a TP.CM_RTS packet for Session 0
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: VP: The module calls EcuC_GetMetaDataCanId
    07: Initialize EcuC_GetMetaDataCanId cand id
    08: Receive a TP.CM_RTS packet
    09: VP: The module calls EcuC_GetMetaDataCanId
    10: Call J1939Tp_MainFunction two times
    11: VP: The module calls EcuC_GetMetaDataSourceAddr
    12: VP: The module calls EcuC_GetMetaDataTargetAddr
    13: VP: The module calls EcuC_GetMetaDataPriority
    14: VP: Check call of PduR_J1939TpStartOfReception
    15: Set MetadaCanId info for Session 0
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit for Session 0
    18: Block the Confirmation to adhere Code-Coverage by calling J1939Tp_MainFunction
    19: confirm the TP.CM_CTS packet
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit for Session 1
    22: confirm the TP.CM_CTS packet
    23: Set Data Frame for session 0
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaData API's according to metadata
    26: Call J1939Tp_MainFunction
    27: VP: The module calls EcuC_GetMetaData API's according to metadata
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: Call J1939Tp_RxIndication to receive a TP.DT packet for Session 1
    30: VP: The module calls EcuC_GetMetaData API's according to metadata
    31: Call J1939Tp_MainFunction
    32: VP: The module calls EcuC_GetMetaData API's according to metadata
    33: VP: Check call to PduR_J1939TpCopyRxData
    34: Call J1939Tp_RxIndication to receive a TP.DT 2 packet for Session 0
    35: VP: The module calls EcuC_GetMetaData API's according to metadata
    36: Call J1939Tp_MainFunction
    37: VP: The module calls EcuC_GetMetaData API's according to metadata
    38: VP: Check call to PduR_J1939TpCopyRxData
    39: Call J1939Tp_RxIndication to receive a TP.DT packet Session 1
    40: VP: The module calls EcuC_GetMetaData API's according to metadata
    41: Call J1939Tp_MainFunction
    42: VP: The module calls EcuC_GetMetaData API's according to metadata
    43: VP: Check call to PduR_J1939TpCopyRxData
    44: Call J1939Tp_RxIndication to receive a TP.DT packet Session 0
    45: VP: The module calls EcuC_GetMetaData API's according to metadata
    46: Call J1939Tp_MainFunction
    47: VP: The module calls EcuC_GetMetaData API's according to metadata
    48: VP: Check call to PduR_J1939TpCopyRxData
    49: Receive a TP.CM_EOMS packet for Session 0
    50: VP: The module calls EcuC_GetMetaDataCanId
    51: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    52: VP: The module calls CanIf_Transmit with EOM for Session 0
    53: confirm the TP.CM_EOM packet
    54: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    55: Call J1939Tp_RxIndication to receive a TP.DT packet for Session 1
    56: VP: The module calls EcuC_GetMetaData API's according to metadata
    57: Call J1939Tp_MainFunction
    58: VP: The module calls EcuC_GetMetaData API's according to metadata
    59: VP: Check call to PduR_J1939TpCopyRxData
    60: Call J1939Tp_MainFunction
    61: Receive a TP.CM_EOMS packet for Session 1
    62: VP: The module calls EcuC_GetMetaDataCanId
    63: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    64: VP: The module calls CanIf_Transmit with EOM for Session 1
    65: confirm the TP.CM_EOM packet
    66: Call J1939Tp_MainFunction
    67: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    68: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Rx.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Rx.Timer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1230</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_PGN_SAME_SA_DA_LEGACY_SESSION_NUMB_FORMAT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_Concurrent_SessionNumbLegacyFormat_Test/source/application/Tests.c</sourcefile>
      <sourceline>575</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test the concurrent reception of two CMDT Connection on a single rx channel with same PGN with the same SA and DA
    using different session IDs.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.CM_EOMS reception
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id for Session 0
    04: Receive a TP.CM_RTS packet for Session 0
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: VP: The module calls EcuC_GetMetaDataCanId
    07: Initialize EcuC_GetMetaDataCanId cand id
    08: Receive a TP.CM_RTS packet for Session 1
    09: VP: The module calls EcuC_GetMetaDataCanId
    10: Call J1939Tp_MainFunction two times
    11: VP: The module calls EcuC_GetMetaDataSourceAddr
    12: VP: The module calls EcuC_GetMetaDataTargetAddr
    13: VP: The module calls EcuC_GetMetaDataPriority
    14: VP: Check call of PduR_J1939TpStartOfReception
    15: Set MetadaCanId info for Session 0
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit for Session 0
    18: Block the Confirmation to adhere Code-Coverage by calling J1939Tp_MainFunction
    19: confirm the TP.CM_CTS packet
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit for Session 1
    22: confirm the TP.CM_CTS packet
    23: Set Data Frame for Session 0
    24: Call J1939Tp_RxIndication to receive a TP.DT packet for Session 0
    25: VP: The module calls EcuC_GetMetaData API's according to metadata
    26: Call J1939Tp_MainFunction
    27: VP: The module calls EcuC_GetMetaData API's according to metadata
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: Call J1939Tp_RxIndication to receive a TP.DT packet for Session 1
    30: VP: The module calls EcuC_GetMetaData API's according to metadata
    31: Call J1939Tp_MainFunction
    32: VP: The module calls EcuC_GetMetaData API's according to metadata
    33: VP: Check call to PduR_J1939TpCopyRxData
    34: Call J1939Tp_RxIndication to receive a TP.DT 2 packet for Session 0
    35: VP: The module calls EcuC_GetMetaData API's according to metadata
    36: Call J1939Tp_MainFunction
    37: VP: The module calls EcuC_GetMetaData API's according to metadata
    38: VP: Check call to PduR_J1939TpCopyRxData
    39: Call J1939Tp_RxIndication to receive a TP.DT 2 packet for Session 1
    40: VP: The module calls EcuC_GetMetaData API's according to metadata
    41: Call J1939Tp_MainFunction
    42: VP: The module calls EcuC_GetMetaData API's according to metadata
    43: VP: Check call to PduR_J1939TpCopyRxData
    44: Call J1939Tp_RxIndication to receive a TP.DT 3 packet for Session 0
    45: VP: The module calls EcuC_GetMetaData API's according to metadata
    46: Call J1939Tp_MainFunction
    47: VP: The module calls EcuC_GetMetaData API's according to metadata
    48: VP: Check call to PduR_J1939TpCopyRxData
    49: Receive a TP.CM_EOMS packet for Session 0
    50: VP: The module calls EcuC_GetMetaDataCanId
    51: VP: The module calls CanIf_Transmit with EOM for Session 0
    52: confirm the TP.CM_EOM packet
    53: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    54: Call J1939Tp_RxIndication to receive a TP.DT 3 packet for Session 1
    55: VP: The module calls EcuC_GetMetaData API's according to metadata
    56: Call J1939Tp_MainFunction
    57: VP: The module calls EcuC_GetMetaData API's according to metadata
    58: VP: Check call to PduR_J1939TpCopyRxData
    59: Call J1939Tp_MainFunction
    60: Receive a TP.CM_EOMS packet for Session 1
    61: VP: The module calls EcuC_GetMetaDataCanId
    62: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    63: VP: The module calls CanIf_Transmit with EOM for Session 1
    64: confirm the TP.CM_EOM packet
    65: Call J1939Tp_MainFunction
    66: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    67: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1231</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_DIFF_SA_DA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_Concurrent_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test the concurrent reception of two CanFD CMDT Connection on a single Rx Channel with different SA and DA.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.CM_EOMS reception
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id for CMDT 1
    04: Receive a TP.CM_RTS packet for CMDT 1
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: VP: The module calls EcuC_GetMetaDataCanId
    07: Initialize EcuC_GetMetaDataCanId cand id
    08: Receive a TP.CM_RTS packet
    09: VP: The module calls EcuC_GetMetaDataCanId
    10: Call J1939Tp_MainFunction two times
    11: VP: The module calls EcuC_GetMetaDataSourceAddr
    12: VP: The module calls EcuC_GetMetaDataTargetAddr
    13: VP: The module calls EcuC_GetMetaDataPriority
    14: VP: Check call of PduR_J1939TpStartOfReception
    15: Set MetadaCanId info for CMDT 1
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit for CMDT 1
    18: Block the Confirmation to adhere Code-Coverage by calling J1939Tp_MainFunction
    19: confirm the TP.CM_CTS packet
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit for CMDT 2
    22: confirm the TP.CM_CTS packet
    23: Set Data Frame
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaData API's according to metadata
    26: Call J1939Tp_MainFunction
    27: VP: The module calls EcuC_GetMetaData API's according to metadata
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: Call J1939Tp_RxIndication to receive a TP.DT packet for CMDT2
    30: VP: The module calls EcuC_GetMetaData API's according to metadata
    31: Call J1939Tp_MainFunction
    32: VP: The module calls EcuC_GetMetaData API's according to metadata
    33: VP: Check call to PduR_J1939TpCopyRxData
    34: Call J1939Tp_RxIndication to receive a TP.DT 2 packet for CMDT 1
    35: VP: The module calls EcuC_GetMetaData API's according to metadata
    36: Call J1939Tp_MainFunction
    37: VP: The module calls EcuC_GetMetaData API's according to metadata
    38: VP: Check call to PduR_J1939TpCopyRxData
    39: Call J1939Tp_RxIndication to receive a TP.DT packet
    40: VP: The module calls EcuC_GetMetaData API's according to metadata
    41: Call J1939Tp_MainFunction
    42: VP: The module calls EcuC_GetMetaData API's according to metadata
    43: VP: Check call to PduR_J1939TpCopyRxData
    44: Call J1939Tp_RxIndication to receive a TP.DT packet
    45: VP: The module calls EcuC_GetMetaData API's according to metadata
    46: Call J1939Tp_MainFunction
    47: VP: The module calls EcuC_GetMetaData API's according to metadata
    48: VP: Check call to PduR_J1939TpCopyRxData
    49: Receive a TP.CM_EOMS packet for CMDT 1
    50: VP: The module calls EcuC_GetMetaDataCanId
    51: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    52: VP: The module calls CanIf_Transmit with EOM for CMDT 1
    53: confirm the TP.CM_EOM packet
    54: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    55: Call J1939Tp_RxIndication to receive a TP.DT packet
    56: VP: The module calls EcuC_GetMetaData API's according to metadata
    57: Call J1939Tp_MainFunction
    58: VP: The module calls EcuC_GetMetaData API's according to metadata
    59: VP: Check call to PduR_J1939TpCopyRxData
    60: Call J1939Tp_MainFunction
    61: Receive a TP.CM_EOMS packet for CMDT 2
    62: VP: The module calls EcuC_GetMetaDataCanId
    63: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    64: VP: The module calls CanIf_Transmit with EOM for CMDT2
    65: confirm the TP.CM_EOM packet
    66: Call J1939Tp_MainFunction
    67: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    68: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Rx.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Rx.Timer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1232</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_SA_DA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_Concurrent_Test/source/application/Tests.c</sourcefile>
      <sourceline>578</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test the concurrent reception of two CMDT Connection on a single Rx Channel with the same SA and DA
    using different session IDs.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.CM_EOMS reception
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id for Session 0
    04: Receive a TP.CM_RTS packet for Session 0
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: VP: The module calls EcuC_GetMetaDataCanId
    07: Initialize EcuC_GetMetaDataCanId cand id
    08: Receive a TP.CM_RTS packet
    09: VP: The module calls EcuC_GetMetaDataCanId
    10: Call J1939Tp_MainFunction two times
    11: VP: The module calls EcuC_GetMetaDataSourceAddr
    12: VP: The module calls EcuC_GetMetaDataTargetAddr
    13: VP: The module calls EcuC_GetMetaDataPriority
    14: VP: Check call of PduR_J1939TpStartOfReception
    15: Set MetadaCanId info for Session 0
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit for Session 0
    18: Block the Confirmation to adhere Code-Coverage by calling J1939Tp_MainFunction
    19: confirm the TP.CM_CTS packet
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit for Session 1
    22: confirm the TP.CM_CTS packet
    23: Set Data Frame for session 0
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaData API's according to metadata
    26: Call J1939Tp_MainFunction
    27: VP: The module calls EcuC_GetMetaData API's according to metadata
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: Call J1939Tp_RxIndication to receive a TP.DT packet for Session 1
    30: VP: The module calls EcuC_GetMetaData API's according to metadata
    31: Call J1939Tp_MainFunction
    32: VP: The module calls EcuC_GetMetaData API's according to metadata
    33: VP: Check call to PduR_J1939TpCopyRxData
    34: Call J1939Tp_RxIndication to receive a TP.DT 2 packet for Session 0
    35: VP: The module calls EcuC_GetMetaData API's according to metadata
    36: Call J1939Tp_MainFunction
    37: VP: The module calls EcuC_GetMetaData API's according to metadata
    38: VP: Check call to PduR_J1939TpCopyRxData
    39: Call J1939Tp_RxIndication to receive a TP.DT packet Session 1
    40: VP: The module calls EcuC_GetMetaData API's according to metadata
    41: Call J1939Tp_MainFunction
    42: VP: The module calls EcuC_GetMetaData API's according to metadata
    43: VP: Check call to PduR_J1939TpCopyRxData
    44: Call J1939Tp_RxIndication to receive a TP.DT packet Session 0
    45: VP: The module calls EcuC_GetMetaData API's according to metadata
    46: Call J1939Tp_MainFunction
    47: VP: The module calls EcuC_GetMetaData API's according to metadata
    48: VP: Check call to PduR_J1939TpCopyRxData
    49: Receive a TP.CM_EOMS packet for Session 0
    50: VP: The module calls EcuC_GetMetaDataCanId
    51: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    52: VP: The module calls CanIf_Transmit with EOM for Session 0
    53: confirm the TP.CM_EOM packet
    54: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    55: Call J1939Tp_RxIndication to receive a TP.DT packet for Session 1
    56: VP: The module calls EcuC_GetMetaData API's according to metadata
    57: Call J1939Tp_MainFunction
    58: VP: The module calls EcuC_GetMetaData API's according to metadata
    59: VP: Check call to PduR_J1939TpCopyRxData
    60: Call J1939Tp_MainFunction
    61: Receive a TP.CM_EOMS packet for Session 1
    62: VP: The module calls EcuC_GetMetaDataCanId
    63: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    64: VP: The module calls CanIf_Transmit with EOM for Session 1
    65: confirm the TP.CM_EOM packet
    66: Call J1939Tp_MainFunction
    67: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    68: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Rx.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Rx.Timer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1233</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_PGN_DIFF_SA_DA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_Concurrent_Test/source/application/Tests.c</sourcefile>
      <sourceline>1118</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test the concurrent reception of two CMDT Connection on a single rx channel with same PGN with different SA and DA.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.CM_EOMS reception
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id for CMDT 1
    04: Receive a TP.CM_RTS packet for CMDT 1
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: VP: The module calls EcuC_GetMetaDataCanId
    07: Initialize EcuC_GetMetaDataCanId cand id
    08: Receive a TP.CM_RTS packet for CMDT 2
    09: VP: The module calls EcuC_GetMetaDataCanId
    10: Call J1939Tp_MainFunction two times
    11: VP: The module calls EcuC_GetMetaDataSourceAddr
    12: VP: The module calls EcuC_GetMetaDataTargetAddr
    13: VP: The module calls EcuC_GetMetaDataPriority
    14: VP: Check call of PduR_J1939TpStartOfReception
    15: Set MetadaCanId info for CMDT 1
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit for CMDT 1
    18: Block the Confirmation to adhere Code-Coverage by calling J1939Tp_MainFunction
    19: confirm the TP.CM_CTS packet
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit for CMDT 2
    22: confirm the TP.CM_CTS packet
    23: Set Data Frame for CMDT 1
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaData API's according to metadata
    26: Call J1939Tp_MainFunction
    27: VP: The module calls EcuC_GetMetaData API's according to metadata
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: Call J1939Tp_RxIndication to receive a TP.DT packet for CMDT 2
    30: VP: The module calls EcuC_GetMetaData API's according to metadata
    31: Call J1939Tp_MainFunction
    32: VP: The module calls EcuC_GetMetaData API's according to metadata
    33: VP: Check call to PduR_J1939TpCopyRxData
    34: Call J1939Tp_RxIndication to receive a TP.DT 2 packet for CMDT 1
    35: VP: The module calls EcuC_GetMetaData API's according to metadata
    36: Call J1939Tp_MainFunction
    37: VP: The module calls EcuC_GetMetaData API's according to metadata
    38: VP: Check call to PduR_J1939TpCopyRxData
    39: Call J1939Tp_RxIndication to receive a TP.DT 2 packet for CMDT 2
    40: VP: The module calls EcuC_GetMetaData API's according to metadata
    41: Call J1939Tp_MainFunction
    42: VP: The module calls EcuC_GetMetaData API's according to metadata
    43: VP: Check call to PduR_J1939TpCopyRxData
    44: Call J1939Tp_RxIndication to receive a TP.DT 3 packet for CMDT 1
    45: VP: The module calls EcuC_GetMetaData API's according to metadata
    46: Call J1939Tp_MainFunction
    47: VP: The module calls EcuC_GetMetaData API's according to metadata
    48: VP: Check call to PduR_J1939TpCopyRxData
    49: Receive a TP.CM_EOMS packet for CMDT 1
    50: VP: The module calls EcuC_GetMetaDataCanId
    51: VP: The module calls CanIf_Transmit with EOM for CMDT 1
    52: confirm the TP.CM_EOM packet
    53: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    54: Call J1939Tp_RxIndication to receive a TP.DT 3 packet for CMDT 2
    55: VP: The module calls EcuC_GetMetaData API's according to metadata
    56: Call J1939Tp_MainFunction
    57: VP: The module calls EcuC_GetMetaData API's according to metadata
    58: VP: Check call to PduR_J1939TpCopyRxData
    59: Call J1939Tp_MainFunction
    60: Receive a TP.CM_EOMS packet for CMDT 2
    61: VP: The module calls EcuC_GetMetaDataCanId
    62: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    63: VP: The module calls CanIf_Transmit with EOM for CMDT2
    64: confirm the TP.CM_EOM packet
    65: Call J1939Tp_MainFunction
    66: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    67: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1234</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_CONC_RCV_TWO_CMDT_SAME_PGN_SAME_SA_DA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_Reception_Concurrent_Test/source/application/Tests.c</sourcefile>
      <sourceline>1649</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test the concurrent reception of two CMDT Connection on a single rx channel with same PGN with the same SA and DA
    using different session IDs.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.CM_EOMS reception
    TP.Conn_Abort

Test Precondition: 
    The connection is going through CanFD.

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id for Session 0
    04: Receive a TP.CM_RTS packet for Session 0
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: VP: The module calls EcuC_GetMetaDataCanId
    07: Initialize EcuC_GetMetaDataCanId cand id
    08: Receive a TP.CM_RTS packet for Session 1
    09: VP: The module calls EcuC_GetMetaDataCanId
    10: Call J1939Tp_MainFunction two times
    11: VP: The module calls EcuC_GetMetaDataSourceAddr
    12: VP: The module calls EcuC_GetMetaDataTargetAddr
    13: VP: The module calls EcuC_GetMetaDataPriority
    14: VP: Check call of PduR_J1939TpStartOfReception
    15: Set MetadaCanId info for Session 0
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit for Session 0
    18: Block the Confirmation to adhere Code-Coverage by calling J1939Tp_MainFunction
    19: confirm the TP.CM_CTS packet
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit for Session 1
    22: confirm the TP.CM_CTS packet
    23: Set Data Frame for Session 0
    24: Call J1939Tp_RxIndication to receive a TP.DT packet for Session 0
    25: VP: The module calls EcuC_GetMetaData API's according to metadata
    26: Call J1939Tp_MainFunction
    27: VP: The module calls EcuC_GetMetaData API's according to metadata
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: Call J1939Tp_RxIndication to receive a TP.DT packet for Session 1
    30: VP: The module calls EcuC_GetMetaData API's according to metadata
    31: Call J1939Tp_MainFunction
    32: VP: The module calls EcuC_GetMetaData API's according to metadata
    33: VP: Check call to PduR_J1939TpCopyRxData
    34: Call J1939Tp_RxIndication to receive a TP.DT 2 packet for Session 0
    35: VP: The module calls EcuC_GetMetaData API's according to metadata
    36: Call J1939Tp_MainFunction
    37: VP: The module calls EcuC_GetMetaData API's according to metadata
    38: VP: Check call to PduR_J1939TpCopyRxData
    39: Call J1939Tp_RxIndication to receive a TP.DT 2 packet for Session 1
    40: VP: The module calls EcuC_GetMetaData API's according to metadata
    41: Call J1939Tp_MainFunction
    42: VP: The module calls EcuC_GetMetaData API's according to metadata
    43: VP: Check call to PduR_J1939TpCopyRxData
    44: Call J1939Tp_RxIndication to receive a TP.DT 3 packet for Session 0
    45: VP: The module calls EcuC_GetMetaData API's according to metadata
    46: Call J1939Tp_MainFunction
    47: VP: The module calls EcuC_GetMetaData API's according to metadata
    48: VP: Check call to PduR_J1939TpCopyRxData
    49: Receive a TP.CM_EOMS packet for Session 0
    50: VP: The module calls EcuC_GetMetaDataCanId
    51: VP: The module calls CanIf_Transmit with EOM for Session 0
    52: confirm the TP.CM_EOM packet
    53: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    54: Call J1939Tp_RxIndication to receive a TP.DT 3 packet for Session 1
    55: VP: The module calls EcuC_GetMetaData API's according to metadata
    56: Call J1939Tp_MainFunction
    57: VP: The module calls EcuC_GetMetaData API's according to metadata
    58: VP: Check call to PduR_J1939TpCopyRxData
    59: Call J1939Tp_MainFunction
    60: Receive a TP.CM_EOMS packet for Session 1
    61: VP: The module calls EcuC_GetMetaDataCanId
    62: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    63: VP: The module calls CanIf_Transmit with EOM for Session 1
    64: confirm the TP.CM_EOM packet
    65: Call J1939Tp_MainFunction
    66: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    67: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1235</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_RX_INDICATION_TEST_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(), with valid values for CanFD RTS and initialized module
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.
    The connection is going through CanFD.

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize EcuC_GetMetaDataCanId Can id
    03: Receive a TP.CM_RTS packet
    04: Check that module didn't report any DET
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: calls J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1236</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_RX_INDICATION_TEST_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(), with NULL_PTR and initialized module
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Receive a TP.CM_RTS packet
    03: Check that module call Det_ReportError
    04: Call the J1939Tp_Shutdown()

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00115.E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1237</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_RX_INDICATION_TEST_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>139</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test J1939Tp_RxIndication(), call with uninitialized module.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: J1939Tp_RxIndication
    02: Check that module call Det_ReportError

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.DET.RXINDICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1238</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_RX_INDICATION_TEST_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>187</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(), with unknown pgn
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize EcuC_GetMetaDataCanId Can id
    03: Receive a TP.CM_RTS packet with unknown pgn
    04: VP: Check call of EcuC_GetMetaDataCanId
    05: VP: Check call of Det_ReportError
    06: calls J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.NotListed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1239</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_RX_INDICATION_TEST_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>248</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(), with Invalid length
    &lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize EcuC_GetMetaDataCanId Can id
    03: Receive a TP.CM_RTS packet with Invalid length
    04: VP: Check call of EcuC_GetMetaDataCanId
    05: Check that module call Det_ReportError
    06: call J1939Tp_MainFunction twice
    07: calls J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength.FD.CM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1240</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_RX_INDICATION_TEST_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>309</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(), with Invalid RxPduId
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize EcuC_GetMetaDataCanId Can id
    03: Receive a TP.CM_RTS packet with Invalid RxPduId
    04: VP: Check call of Det_ReportError
    05: call J1939Tp_MainFunction twice
    06: calls J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00188.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1241</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_RX_INDICATION_TEST_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>370</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(),twice with valid values and initialized module
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize EcuC_GetMetaDataCanId Can id
    03: Receive a TP.CM_RTS packet
    04: VP: Check call of EcuC_GetMetaDataCanId
    05: Receive a TP.CM_RTS another packet
    06: VP: Check call of EcuC_GetMetaDataCanId
    07: VP: The module calls PduR_J1939TpRxIndication
    08: calls J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1242</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_RX_INDICATION_TEST_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>438</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(), for TP.CM_RTS with total message length equal zero
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize EcuC_GetMetaDataCanId Can id
    03: Receive a TP.CM_RTS packet
    04: VP: Check call of EcuC_GetMetaDataCanId
    05: VP: Check call of Det_ReportError
    06: calls J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TMS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1243</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_RX_INDICATION_TEST_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>498</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(), for TP.CM_RTS with max packets equal zero
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize EcuC_GetMetaDataCanId Can id
    03: Receive a TP.CM_RTS packet
    04: VP: Check call of EcuC_GetMetaDataCanId
    05: VP: Check call of Det_ReportError
    06: calls J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_MNOP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1244</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_RX_INDICATION_TEST_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CANFD_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>560</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(), with invalid length for EOMS and Abort with initialized module,
    as well as invalid DT frames, showing that invalid packets are ignored and the module continues.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.
    The connection is going through CanFD.

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize EcuC_GetMetaDataCanId Can id
    03: Receive a TP.CM_RTS packet
    04: VP: Check call of EcuC_GetMetaDataCanId
    05: Call J1939Tp_MainFunction two times
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: VP: Check call of PduR_J1939TpStartOfReception
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit for the TP.CM_CTS packet
    12: confirm the TP.CM_CTS packet
    13: Receive a TP.CM_ABORT packet with invalid length
    14: Check that module call Det_ReportError 
    15: Receive a TP.CM_EOMS packet with invalid length 
    16: VP: Check call of EcuC_GetMetaDataCanId 
    17: Check that module call Det_ReportError 
    18: Receive a TP.CM_EOMS packet with incoherent length between the EOMS frame and it's actual length 
    19: Check that module call Det_ReportError 
    20: Call J1939Tp_RxIndication to receive an invalid TP.DT packet 
    21: VP: The module calls EcuC_GetMetaDataCanId 
    22: Call J1939Tp_RxIndication to receive a valid TP.DT packet with invalid length 
    23: VP: The module calls EcuC_GetMetaDataCanId 
    24: Check that module call Det_ReportError 
    25: Call J1939Tp_RxIndication to receive a valid TP.DT packet with valid length 
    26: VP: The module calls EcuC_GetMetaDataCanId 
    27: VP: Check call to PduR_J1939TpCopyRxData 
    28: Call J1939Tp_RxIndication to receive TP.DT packet 
    29: VP: The module calls EcuC_GetMetaDataCanId 
    30: VP: Check call to PduR_J1939TpCopyRxData 
    31: Call J1939Tp_MainFunction 
    32: Receive a TP.CM_EOMS packet 
    33: VP: The module calls EcuC_GetMetaDataCanId 
    34: Call J1939Tp_MainFunction 
    35: VP: The module calls CanIf_Transmit for the TP.CM_EOM packet 
    37: confirm the TP.CM_EOM packet 
    38: Call J1939Tp_MainFunction 
    39: Call PduR_J1939TpRxIndication 
    40: calls J1939Tp_Shutdown 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength.FD.CM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength.FD.DT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.ApplicationLayerReasons</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1245</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_SESSION_NUMB_LEGACY_FORMAT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_SessionNumbLegacyFormat_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test check that concurrent BAM connections on the same channel is possible with different session IDs for each session.

Test Object: 
    TP.CM_BAM ,
    TP.DT reception

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId CanId
      04: Receive a TP.CM_BAM packet on session 0
      05: VP: Check call of EcuC_GetMetaDataCanId
      06: Call J1939Tp_MainFunction
      07: VP: The module calls EcuC_GetMetaDataCanId
      08: VP: The module calls EcuC_GetMetaDataSourceAddr
      09: VP: The module calls EcuC_GetMetaDataTargetAddr
      10: VP: The module calls EcuC_GetMetaDataPriority
      11: VP: Check call of PduR_J1939TpStartOfReception
      12: Call J1939Tp_RxIndication to receive a TP.DT packet on session 0
      13: VP: The module calls EcuC_GetMetaDataCanId
      14: Call J1939Tp_MainFunction
      15: VP: Check call of EcuC_GetMetaDataCanId
      16: VP: Check call to PduR_J1939TpCopyRxData
      17: Receive a new TP.CM_BAM packet on session 1
      18: VP: Check call of EcuC_GetMetaDataCanId
      19: Call J1939Tp_MainFunction
      20: VP: The module calls EcuC_GetMetaDataCanId
      21: Call J1939Tp_MainFunction
      22: VP: The module calls EcuC_GetMetaDataSourceAddr
      23: VP: The module calls EcuC_GetMetaDataTargetAddr
      24: VP: The module calls EcuC_GetMetaDataPriority
      25: VP: Check call of PduR_J1939TpStartOfReception
      26: Call J1939Tp_RxIndication to receive a TP.DT packet on session 1
      27: VP: The module calls EcuC_GetMetaDataCanId
      28: Call J1939Tp_MainFunction
      29: VP: The module calls EcuC_GetMetaDataCanId
      30: VP: Check call to PduR_J1939TpCopyRxData
      31: Call J1939Tp_MainFunction
      32: Call J1939Tp_RxIndication to receive a TP.DT packet on session 0
      33: VP: Check call of EcuC_GetMetaDataCanId
      34: Call J1939Tp_MainFunction
      35: VP: The module calls EcuC_GetMetaDataCanId
      36: VP: Check call to PduR_J1939TpCopyRxData
      37: Call J1939Tp_MainFunction
      38: Call J1939Tp_RxIndication to receive a TP.DT packet on session 1
      39: VP: Check call of EcuC_GetMetaDataCanId
      40: Call J1939Tp_MainFunction
      41: VP: The module calls EcuC_GetMetaDataCanId
      42: VP: Check call to PduR_J1939TpCopyRxData
      43: Call J1939Tp_MainFunction
      44: Call J1939Tp_RxIndication to receive a TP.DT packet on session 0
      45: VP: Check call of EcuC_GetMetaDataCanId
      46: Call J1939Tp_MainFunction
      47: VP: The module calls EcuC_GetMetaDataCanId
      48: VP: Check call to PduR_J1939TpCopyRxData
      49: Call J1939Tp_MainFunction
      50: Call J1939Tp_RxIndication to receive a TP.DT packet on session 1
      51: VP: Check call of EcuC_GetMetaDataCanId
      52: Call J1939Tp_MainFunction
      53: VP: The module calls EcuC_GetMetaDataCanId
      54: VP: Check call to PduR_J1939TpCopyRxData
      55: Call J1939Tp_MainFunction
      56: Call J1939Tp_RxIndication to receive a TP.CM_EOMS packet on session 0
      57: VP: The module calls EcuC_GetMetaDataCanId
      58: VP: Check PduR_J1939TpRxIndication for E_OK
      59: Call J1939Tp_RxIndication to receive a TP.CM_EOMS packet on session 1
      60: VP: The module calls EcuC_GetMetaDataCanId
      61: VP: Check PduR_J1939TpRxIndication for E_OK
      62: Check trace empty
      63: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Bam</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.ConcurrentSessions.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.UniqueSession.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1246</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of broadcast frame after timeout T1

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId CanId
    04: Receive a TP.CM_BAM packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC_GetMetaDataCanId
    14: Call J1939Tp_MainFunction
    15: VP: Check call to EcuC_GetMetaDataCanId
    16: VP: Check call to PduR_J1939TpCopyRxData
    17: Call J1939Tp_RxIndication to receive a TP.DT packet
    18: VP: The module calls EcuC_GetMetaDataCanId 
    19: Call J1939Tp_MainFunction
    20: VP: The module calls EcuC_GetMetaDataCanId
    21: VP: Check call to PduR_J1939TpCopyRxData
    22: Call J1939Tp_MainFunction till timeout T1 passed
    23: The module calls Det_ReportError due to Timeout
    24: Call PduR_J1939TpRxIndication 
    25: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00031.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_BAM.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>461</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.DT.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_DT.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1247</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of broadcast frame when receiving an invalid sequence number

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId CanId
    04: Receive a TP.CM_BAM packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC_GetMetaDataCanId
    14: Call J1939Tp_MainFunction
    15: VP: Check call to EcuC_GetMetaDataCanId
    16: VP: Check call to PduR_J1939TpCopyRxData
    17: Call J1939Tp_RxIndication to receive a TP.DT packet
    18: VP: The module calls EcuC_GetMetaDataCanId 
    19: Call J1939Tp_MainFunction
    20: The module calls Det_ReportError due to invalid sequence number
    21: Call PduR_J1939TpRxIndication
    22: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00232.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1248</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>406</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of broadcast frame when PduR_J1939TpStartOfReception function returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId CanId
    04: Receive a TP.CM_BAM packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.StartOfReception.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.Initiation.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1249</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>507</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of broadcast frame when PduR_J1939TpCopyRxData returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId CanId
    04: Receive a TP.CM_BAM packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC_GetMetaDataCanId
    14: Call J1939Tp_MainFunction
    15: VP: Check call to EcuC_GetMetaDataCanId
    16: VP: Check call to PduR_J1939TpCopyRxData
    17: Call PduR_J1939TpRxIndication with E_NOT_OK
    18: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.BAM</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1250</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>658</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of broadcast frame after reception TP.CM_BAM where data length exceed allowed

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId CanId
    04: Receive a TP.CM_BAM packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: module Call Det_ReportError
    09: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00043.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.MaxPDUSize.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1251</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>744</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of broadcast frame after timeout T1 after TP.CM_BAM

Test Object: 
    TP.CM_BAM ,
    TP.DT reception

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId CanId
      04: Receive a TP.CM_BAM packet
      05: VP: Check call of EcuC_GetMetaDataCanId
      06: Set Invalid return value for Start of reception
      07: Call J1939Tp_MainFunction
      08: VP: The module calls EcuC_GetMetaDataCanId
      09: VP: The module calls EcuC_GetMetaDataSourceAddr
      10: VP: The module calls EcuC_GetMetaDataTargetAddr
      11: VP: The module calls EcuC_GetMetaDataPriority
      12: VP: Check call of PduR_J1939TpStartOfReception
      13: Receive a TP.CM_BAM packet
      14: VP: Check call of EcuC_GetMetaDataCanId
      15: Set Invalid return value for Start of reception
      16: VP: The module calls EcuC_GetMetaDataCanId
      17: Reads the Metadata info from the stubs
      18: Call J1939Tp_MainFunction till timeout T1 passed
      19: The module calls Det_ReportError due to Timeout
      20: Call PduR_J1939TpRxIndication
      21: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00121.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1252</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>900</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    The J1939Tp module shall abort the reception silently if the protocol chosen does not match the transport protocol configured for the transported PGN

Test Object: 
    TP.CM_BAM ,
    TP.DT reception

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId CanId
    04: Receive a TP.CM_BAM packet on a CMDT channel
    05: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1253</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>957</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks that receiving TP.CM_BAM frame while there is
    an ongoing reception with same SA/DA, PGN &amp; session number shall terminate
    the active ongoing connection and start a new one.

Test Object: 
    TP.CM_BAM ,
    TP.DT reception

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId CanId
      04: Receive a TP.CM_BAM packet
      05: VP: Check call of EcuC_GetMetaDataCanId
      06: Call J1939Tp_MainFunction
      07: VP: The module calls EcuC_GetMetaDataCanId
      08: VP: The module calls EcuC_GetMetaDataSourceAddr
      09: VP: The module calls EcuC_GetMetaDataTargetAddr
      10: VP: The module calls EcuC_GetMetaDataPriority
      11: VP: Check call of PduR_J1939TpStartOfReception
      12: Call J1939Tp_RxIndication to receive a TP.DT packet
      13: VP: The module calls EcuC_GetMetaDataCanId
      14: Call J1939Tp_MainFunction
      15: VP: The module calls EcuC_GetMetaDataCanId
      16: VP: Check call to PduR_J1939TpCopyRxData
      17: Set Pdu Info for New BAM Connection
      18: Receive a new TP.CM_BAM packet
      19: VP: Check call of EcuC_GetMetaDataCanId
      20: Call J1939Tp_MainFunction
      21: VP: The module calls EcuC_GetMetaDataCanId
      22: VP: Check PduR_J1939TpRxIndication with E_NOT_OK for old connection
      23: Call J1939Tp_MainFunction
      24: VP: The module calls EcuC_GetMetaDataSourceAddr
      25: VP: The module calls EcuC_GetMetaDataTargetAddr
      26: VP: The module calls EcuC_GetMetaDataPriority
      27: VP: Check call of PduR_J1939TpStartOfReception
      28: Call J1939Tp_RxIndication to receive a TP.DT packet
      29: VP: The module calls EcuC_GetMetaDataCanId
      30: Call J1939Tp_MainFunction
      31: VP: The module calls EcuC_GetMetaDataCanId
      32: VP: Check call to PduR_J1939TpCopyRxData
      33: Call J1939Tp_MainFunction
      34: Receive a new TP.CM_BAM packet
      35: VP: Check call of EcuC_GetMetaDataCanId
      36: Call J1939Tp_MainFunction
      37: VP: The module calls EcuC_GetMetaDataCanId
      38: VP: Check PduR_J1939TpRxIndication with E_NOT_OK for previous connection
      39: Call J1939Tp_MainFunction
      40: VP: The module calls EcuC_GetMetaDataSourceAddr
      41: VP: The module calls EcuC_GetMetaDataTargetAddr
      42: VP: The module calls EcuC_GetMetaDataPriority
      43: VP: Check call of PduR_J1939TpStartOfReception
      44: Call J1939Tp_RxIndication to receive a TP.DT packet
      45: VP: The module calls EcuC_GetMetaDataCanId
      46: Call J1939Tp_MainFunction
      47: VP: The module calls EcuC_GetMetaDataCanId
      48: VP: Check call to PduR_J1939TpCopyRxData
      49: Call J1939Tp_MainFunction
      50: Call J1939Tp_RxIndication to receive a TP.DT packet
      51: VP: The module calls EcuC_GetMetaDataCanId
      52: Call J1939Tp_MainFunction
      53: VP: The module calls EcuC_GetMetaDataCanId
      54: VP: Check call to PduR_J1939TpCopyRxData
      55: Call J1939Tp_MainFunction
      56: Call J1939Tp_RxIndication to receive a TP.DT packet
      57: VP: The module calls EcuC_GetMetaDataCanId
      58: Call J1939Tp_MainFunction
      59: VP: The module calls EcuC_GetMetaDataCanId
      60: VP: Check call to PduR_J1939TpCopyRxData
      61: Call J1939Tp_MainFunction
      62: Receive a TP.CM_EOMS packet
      63: VP: Check call of EcuC_GetMetaDataCanId
      64: VP: Check PduR_J1939TpRxIndication  for E_OK
      65: Check trace empty
      66: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Bam</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgStatus.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.EOMS.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.UniqueSession.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1254</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1382</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of a BAM Reception scenario when invalid value is
    returned from PduR_J1939TpCopyRxData Api during Data reception.

Test Object: 
    TP.CM_BAM ,
    TP.DT Reception

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId CanId
      04: Receive a TP.CM_BAM packet
      05: VP: Check call of EcuC_GetMetaDataCanId
      06: Call J1939Tp_MainFunction
      07: VP: The module calls EcuC_GetMetaDataCanId
      08: VP: The module calls EcuC_GetMetaDataSourceAddr
      09: VP: The module calls EcuC_GetMetaDataTargetAddr
      10: VP: The module calls EcuC_GetMetaDataPriority
      11: VP: Check call of PduR_J1939TpStartOfReception
      12: Call J1939Tp_RxIndication to receive a TP.DT packet
      13: VP: The module calls EcuC_GetMetaDataCanId
      14: Call J1939Tp_MainFunction
      15: VP: The module calls EcuC_GetMetaDataCanId 
      16: VP: Check call to PduR_J1939TpCopyRxData
      17: Call J1939Tp_MainFunction
      18: Call J1939Tp_RxIndication to receive a TP.DT packet
      19: VP: The module calls EcuC_GetMetaDataCanId
      20: Call J1939Tp_MainFunction
      21: VP: The module calls EcuC_GetMetaDataCanId 
      22: VP: Check call to PduR_J1939TpCopyRxData
      23: Call J1939Tp_MainFunction
      24: Set Invalid Return value to PduR_J1939TpCopyRxData
      25: Call J1939Tp_RxIndication to receive a TP.DT packet
      26: VP: The module calls EcuC_GetMetaDataCanId
      27: Call J1939Tp_MainFunction
      28: VP: The module calls EcuC_GetMetaDataCanId
      29: VP: Check call to PduR_J1939TpCopyRxData
      30: Call J1939Tp_MainFunction till T1 expired
      31: The module calls Det_ReportError due to error in code
      32: Call PduR_J1939TpRxIndication
      33: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.BAM</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1255</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1632</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of a BAM Reception scenario when T1 expires
    while waiting for the EOMS.

Test Object: 
    TP.CM_BAM ,
    TP.DT Reception

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId CanId
      04: Receive a TP.CM_BAM packet
      05: VP: Check call of EcuC_GetMetaDataCanId
      06: Call J1939Tp_MainFunction
      07: VP: The module calls EcuC_GetMetaDataCanId
      08: VP: The module calls EcuC_GetMetaDataSourceAddr
      09: VP: The module calls EcuC_GetMetaDataTargetAddr
      10: VP: The module calls EcuC_GetMetaDataPriority
      11: VP: Check call of PduR_J1939TpStartOfReception
      12: Call J1939Tp_RxIndication to receive a TP.DT packet
      13: VP: The module calls EcuC_GetMetaDataCanId
      14: Call J1939Tp_MainFunction
      15: VP: The module calls EcuC_GetMetaDataCanId 
      16: VP: Check call to PduR_J1939TpCopyRxData
      17: Call J1939Tp_MainFunction
      18: Call J1939Tp_RxIndication to receive a TP.DT packet
      19: VP: The module calls EcuC_GetMetaDataCanId
      20: Call J1939Tp_MainFunction
      21: VP: The module calls EcuC_GetMetaDataCanId 
      22: VP: Check call to PduR_J1939TpCopyRxData
      23: Call J1939Tp_MainFunction
      24: Set Invalid Return value to PduR_J1939TpCopyRxData
      25: Call J1939Tp_RxIndication to receive a TP.DT packet
      26: VP: The module calls EcuC_GetMetaDataCanId
      27: Call J1939Tp_MainFunction
      28: VP: The module calls EcuC_GetMetaDataCanId
      29: VP: Check call to PduR_J1939TpCopyRxData
      30: Call J1939Tp_MainFunction till T1 expired
      31: The module calls Det_ReportError due to error in code
      32: Call PduR_J1939TpRxIndication
      33: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.BAM</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.BamTransfer.EOMS.TimeOut</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1256</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1883</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception of Data Frames with configured
    J1939TpMainFunctionPeriod greater than J1939TpTBAMMinTimeout.

Test Object: 
    TP.CM_BAM ,
    TP.DT Reception

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId CanId
      04: Receive a TP.CM_BAM packet
      05: VP: Check call of EcuC_GetMetaDataCanId
      06: Call J1939Tp_MainFunction
      07: VP: The module calls EcuC_GetMetaDataCanId
      08: VP: The module calls EcuC_GetMetaDataSourceAddr
      09: VP: The module calls EcuC_GetMetaDataTargetAddr
      10: VP: The module calls EcuC_GetMetaDataPriority
      11: VP: Check call of PduR_J1939TpStartOfReception
      12: Call J1939Tp_RxIndication to receive a TP.DT packet
      13: Call J1939Tp_RxIndication to receive a TP.DT 2 packet without J1939Tp_MainFunction
      14: Call J1939Tp_RxIndication to receive a TP.DT 3 packet without J1939Tp_MainFunction
      15: VP: The module calls EcuC_GetMetaDataCanId for TP.DT 1
      16: VP: Check call to PduR_J1939TpCopyRxData for TP.DT 1
      17: VP: The module calls EcuC_GetMetaDataCanId for TP.DT 2
      18: VP: Check call to PduR_J1939TpCopyRxData for TP.DT 2
      19: VP: The module calls EcuC_GetMetaDataCanId for TP.DT 3
      20: VP: Check call to PduR_J1939TpCopyRxData for TP.DT 3
      21: Receive a TP.CM_EOMS packet
      22: VP: Check call of EcuC_GetMetaDataCanId
      23: Call J1939Tp_MainFunction
      24: Call PduR_J1939TpRxIndication
      25: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.BAM</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_CM_EndOfMsgStatus.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1257</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2105</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception of unexpected EOMS message.

Test Object: 
    TP.CM_BAM ,
    TP.DT Reception

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId CanId
      04: Receive an unexpected TP.CM_EOMS packet
      05: VP: Check call of EcuC_GetMetaDataCanId
      06: Call J1939Tp_MainFunction
      07: Receive a TP.CM_BAM packet
      08: VP: The module calls EcuC_GetMetaDataCanId
      09: Call J1939Tp_MainFunction
      10: VP: The module calls EcuC_GetMetaDataCanId
      11: VP: The module calls EcuC_GetMetaDataSourceAddr
      12: VP: The module calls EcuC_GetMetaDataTargetAddr
      13: VP: The module calls EcuC_GetMetaDataPriority
      14: VP: Check call of PduR_J1939TpStartOfReception
      15: Call J1939Tp_RxIndication to receive a TP.DT packet
      16: Call J1939Tp_RxIndication to receive a TP.DT 2 packet without J1939Tp_MainFunction
      17: VP: The module calls EcuC_GetMetaDataCanId for TP.DT 1
      18: VP: Check call to PduR_J1939TpCopyRxData for TP.DT 1
      19: VP: The module calls EcuC_GetMetaDataCanId for TP.DT 2
      20: VP: Check call to PduR_J1939TpCopyRxData for TP.DT 2
      21: Receive a valid but unexpected TP.CM_EOMS packet
      22: VP: Check call of EcuC_GetMetaDataCanId
      23: Call J1939Tp_MainFunction
      24: VP: Check that the unexpected EOMS is ignored
      25: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.BAM</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1258</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_13</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2309</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test check that concurrent BAM connections on the same channel is possible with different session IDs for each session.

Test Object: 
    TP.CM_BAM ,
    TP.DT reception

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId CanId
      04: Receive a TP.CM_BAM packet on session 0
      05: VP: Check call of EcuC_GetMetaDataCanId
      06: Call J1939Tp_MainFunction
      07: VP: The module calls EcuC_GetMetaDataCanId
      08: VP: The module calls EcuC_GetMetaDataSourceAddr
      09: VP: The module calls EcuC_GetMetaDataTargetAddr
      10: VP: The module calls EcuC_GetMetaDataPriority
      11: VP: Check call of PduR_J1939TpStartOfReception
      12: Call J1939Tp_RxIndication to receive a TP.DT packet on session 0
      13: VP: The module calls EcuC_GetMetaDataCanId
      14: Call J1939Tp_MainFunction
      15: VP: Check call of EcuC_GetMetaDataCanId
      16: VP: Check call to PduR_J1939TpCopyRxData
      17: Receive a new TP.CM_BAM packet on session 1
      18: VP: Check call of EcuC_GetMetaDataCanId
      19: Call J1939Tp_MainFunction
      20: VP: The module calls EcuC_GetMetaDataCanId
      21: Call J1939Tp_MainFunction
      22: VP: The module calls EcuC_GetMetaDataSourceAddr
      23: VP: The module calls EcuC_GetMetaDataTargetAddr
      24: VP: The module calls EcuC_GetMetaDataPriority
      25: VP: Check call of PduR_J1939TpStartOfReception
      26: Call J1939Tp_RxIndication to receive a TP.DT packet on session 1
      27: VP: The module calls EcuC_GetMetaDataCanId
      28: Call J1939Tp_MainFunction
      29: VP: The module calls EcuC_GetMetaDataCanId
      30: VP: Check call to PduR_J1939TpCopyRxData
      31: Call J1939Tp_MainFunction
      32: Call J1939Tp_RxIndication to receive a TP.DT packet on session 0
      33: VP: Check call of EcuC_GetMetaDataCanId
      34: Call J1939Tp_MainFunction
      35: VP: The module calls EcuC_GetMetaDataCanId
      36: VP: Check call to PduR_J1939TpCopyRxData
      37: Call J1939Tp_MainFunction
      38: Call J1939Tp_RxIndication to receive a TP.DT packet on session 1
      39: VP: Check call of EcuC_GetMetaDataCanId
      40: Call J1939Tp_MainFunction
      41: VP: The module calls EcuC_GetMetaDataCanId
      42: VP: Check call to PduR_J1939TpCopyRxData
      43: Call J1939Tp_MainFunction
      44: Call J1939Tp_RxIndication to receive a TP.DT packet on session 0
      45: VP: Check call of EcuC_GetMetaDataCanId
      46: Call J1939Tp_MainFunction
      47: VP: The module calls EcuC_GetMetaDataCanId
      48: VP: Check call to PduR_J1939TpCopyRxData
      49: Call J1939Tp_MainFunction
      50: Call J1939Tp_RxIndication to receive a TP.DT packet on session 1
      51: VP: Check call of EcuC_GetMetaDataCanId
      52: Call J1939Tp_MainFunction
      53: VP: The module calls EcuC_GetMetaDataCanId
      54: VP: Check call to PduR_J1939TpCopyRxData
      55: Call J1939Tp_MainFunction
      56: Call J1939Tp_RxIndication to receive a TP.CM_EOMS packet on session 0
      57: VP: The module calls EcuC_GetMetaDataCanId
      58: VP: Check PduR_J1939TpRxIndication for E_OK
      59: Call J1939Tp_RxIndication to receive a TP.CM_EOMS packet on session 1
      60: VP: The module calls EcuC_GetMetaDataCanId
      61: VP: Check PduR_J1939TpRxIndication for E_OK
      62: Check trace empty
      63: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Bam</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.ConcurrentSessions.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.UniqueSession.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1259</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_14</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2777</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of broadcast frame when an abort frame is received after a BAM frame is received

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId CanId
    04: Receive a TP.CM_BAM packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: Call J1939Tp_MainFunction
    13: Receive a TP.CM_ABORT packet
    14: VP: The module calls EcuC_GetMetaDataCanId
    15: VP: The module calls PduR_J1939TpRxIndication with E_NOT_OK
    16: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.Conn_Abort.FrameFormat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>460</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1260</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_15</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2897</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception of FD.TP.BAM message with invalid length

Test Object: 
    TP.CM_BAM

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId CanId
    04: Receive a TP.CM_BAM packet with invalid length
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: VP: The module calls Det_ReportError with J1939TP_E_INVALID_SDU_LENGTH
    07: Call J1939Tp_MainFunction
    08: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength.FD.CM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1261</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_RCV_ABORT_BAM_16</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_CanFD_Reception_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2968</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of control frame with length equals 0

Test Object: 
    TP.CM

Test Precondition: 
    - The reception is on CanFD channel

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 170 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId Can Id
    04: Receive a TP.CM_BAM packet with length equals 0
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: module Call Det_ReportError with J1939TP_E_INVALID_SDU_LENGTH
    07: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength.FD.CM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1262</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CHANGE_PARAMETER_TEST_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_ChangeParameter_Test/source/application/Tests.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test  J1939Tp_ChangeParameter() for uninitialized module .
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: call J1939Tp_ChangeParameter
    02: Check that module call Det_ReportError

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.DET.CHANGEPARAMETER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1263</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHANGE_PARAMETER_TEST_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_ChangeParameter_Test/source/application/Tests.c</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test J1939Tp_ChangeParameter() with invalid RxSduId
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Call the J1939Tp_ChangeParameter() with invalid RxSduId
    03: Check that module call Det_ReportError
    04: shutdown J1939Tp

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00206.Invalid.SduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00188.ChangeParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1264</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHANGE_PARAMETER_TEST_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_ChangeParameter_Test/source/application/Tests.c</sourcefile>
      <sourceline>116</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test J1939Tp_ChangeParameter() with TP_STMIN as TPParameterType
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Call the J1939Tp_ChangeParameter() to change TP_STMIN 
    03: shutdown J1939Tp

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00206.Param.NotTP_BS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1265</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHANGE_PARAMETER_TEST_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_ChangeParameter_Test/source/application/Tests.c</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test J1939Tp_ChangeParameter() with value &gt; 0xff
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Call the J1939Tp_ChangeParameter() with invalid value
    03: shutdown J1939Tp

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00206.LargerVal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1266</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHANGE_PARAMETER_TEST_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_ChangeParameter_Test/source/application/Tests.c</sourcefile>
      <sourceline>198</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of full reception scenario , after J1939Tp_ChangeParameter to change J1939TpRxPacketsPerBlock

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
02: Initialize J1939Tp
03: Initialize EcuC_GetMetaDataCanId cand id
04: Call J1939Tp_ChangeParameter to change J1939TpRxPacketsPerBlock
05: Receive a TP.CM_RTS packet
06: VP: Check call of EcuC_GetMetaDataCanId
07: Call J1939Tp_MainFunction 
08: VP: The module calls EcuC_GetMetaDataCanId
09: VP: The module calls EcuC_GetMetaDataSourceAddr
10: VP: The module calls EcuC_GetMetaDataTargetAddr
11: VP: The module calls EcuC_GetMetaDataPriority
12: VP: Check call of PduR_J1939TpStartOfReception
13: VP: The module calls EcuC_SetMetaDataCanId
14: VP: The module calls CanIf_Transmit
15: confirm the TP.CM_CTS packet
    : Call J1939Tp_ChangeParameter when state is not idle
16: Call J1939Tp_RxIndication to receive a TP.DT packet
17: VP: The module calls EcuC_GetMetaDataCanId
18: Call J1939Tp_MainFunction
19: VP: Check call to EcuC_GetMetaDataCanId
20: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 16 to 20 one more times
21: VP: The module calls EcuC_SetMetaDataCanId 
22: VP: The module calls CanIf_Transmit to send wait CTS0
23: confirm the TP.CM_CTS packet
24: Call J1939Tp_MainFunction
25: VP: Check call to PduR_J1939TpCopyRxData
26: VP: The module calls EcuC_SetMetaDataCanId
27: VP: The module calls CanIf_Transmit to send the second CTS
28: confirm the TP.CM_CTS packet
:repeat steps from 16 to 20 one more times
29: Call J1939Tp_MainFunction 
30: VP: Check call to EcuC_SetMetaDataCanId
31: VP: The module calls CanIf_Transmit
32: confirm the TP.CM_EOM packet
33: Call J1939Tp_MainFunction
34: Call PduR_J1939TpRxIndication
35: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1267</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_ECUC_NOT_OK_TEST_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Ecuc_Not_Ok_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario, while Ecuc returns E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS receiption,
    TP.DT transmission,
    TP.CM_EOM receiption

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId and report DET
    11: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId and report DET
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId and report DET
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
    : repeat step from 15 to 19 two times to send all DT 
    20: Receive a TP.CM_EOM packet
    21: Module Call EcuC_GetMetaDataCanId and report DET
    22: Module Call PduR_J1939TpTxConfirmation  
    23: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1268</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_ECUC_NOT_OK_TEST_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Ecuc_Not_Ok_Test/source/application/Tests.c</sourcefile>
      <sourceline>275</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the complete handling of CMDT Reception when Ecuc returns E_NOT_OK.

Test Object: 
    TP.CM_RTS Reception,
    TP.CM_CTS Transmission,
    TP.DT Reception,
    TP.CM_EOM Transmission

Test Precondition: 
    -

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId canid
      04: set MetaData source ,destination and priority values
      05: Receive a TP.CM_RTS packet
      06: VP: Check call of EcuC_GetMetaDataCanId
      07: VP: The module calls EcuC_GetMetaDataCanId
      08: Call J1939Tp_MainFunction
      09: Set &amp; Get EcuC_SetMetaDataCanId_Stub &amp; EcuC_GetMetaDataCanId_Stub with E_NOT_OK
      10: VP: The module calls EcuC_GetMetaDataCanId
      11: VP: The module calls EcuC_GetMetaDataSourceAddr
      12: VP: The module calls EcuC_GetMetaDataTargetAddr
      13: VP: The module calls EcuC_GetMetaDataPriority
      14: VP: Check call of PduR_J1939TpStartOfReception
      15: VP: The module calls EcuC_SetMetaDataCanId
      16: VP: Check for the DET Errors logged for Invalid IDS
      17: VP: The module calls CanIf_Transmit
      18: confirm the TP.CM_CTS packet
      19: Call J1939Tp_RxIndication to receive a TP.DT packet
      20: VP: The module calls EcuC_GetMetaDataCanId
      21: VP: Check for the DET Errors logged for Invalid IDS
      22: Call J1939Tp_MainFunction
      23: VP: Check call to EcuC_GetMetaDataCanId
      24: VP: Check for the DET Errors logged for Invalid IDS
      25: VP: Check call to PduR_J1939TpCopyRxData
      26: Call J1939Tp_RxIndication to receive a TP.DT packet
      27: VP: Check for the DET Errors logged for Invalid IDS
      28: Call J1939Tp_MainFunction
      29: VP: Check call to EcuC_GetMetaDataCanId
      30: VP: Check for the DET Errors logged for Invalid IDS
      31: Call J1939Tp_RxIndication to receive a TP.DT packet
      32: VP: Check for the DET Errors logged for Invalid IDS
      33: VP: Check call to EcuC_GetMetaDataCanId
      34: VP: Check for the DET Errors logged for Invalid IDS
      35: VP: Check call to PduR_J1939TpCopyRxData
      36: Call J1939Tp_MainFunction
      37: VP: Check call to EcuC_SetMetaDataCanId
      38: VP: Check for the DET Errors logged for Invalid IDS
      39: VP: Check call to CanIf_Transmit
      40: confirm the TP.CM_EOM packet
      41: Call J1939Tp_MainFunction
      42: Call PduR_J1939TpRxIndication
      43: Check if stack trace is empty
      44: shutdown module 


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1269</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_ECUC_NOT_OK_TEST_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Ecuc_Not_Ok_Test/source/application/Tests.c</sourcefile>
      <sourceline>609</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of Direct reception scenario, while Ecuc returns E_NOT_OK

Test Object: 
    Direct Reception

Test Precondition: 
    -

Test Execution: 
      01: Initialize stubs
      02: Initialize J1939Tp
      03: Set Metadata Priority return value to E_NOT_OK
      04: Initialize EcuC_GetMetaDataCanId canid
      05: Call J1939Tp_RxIndication to receive a direct pg
      06: VP: The module calls EcuC_GetMetaDataCanId
      07: DET Error are logged for Invalid PDUs and for same cycle 2 Det_ReportError are logged
      08: Call J1939Tp_MainFunction
      09: VP: The module calls EcuC_GetMetaDataSourceAddr
      10: VP: The module calls EcuC_GetMetaDataTargetAddr
      11: VP: The module calls EcuC_GetMetaDataPriority
      12: VP: Check for the DET Errors logged for Invalid IDS
      13: VP: Check call of PduR_J1939TpStartOfReception
      14: VP: Check call to PduR_J1939TpCopyRxData
      15: Call J1939Tp_MainFunction
      16: The module calls PduR_J1939TpRxIndication
      17: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00188.Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00115.E_INVALID_PDU_SDU_ID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1270</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_ECUC_NOT_OK_TEST_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Ecuc_Not_Ok_Test/source/application/Tests.c</sourcefile>
      <sourceline>745</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the reporting of DET errors for Invalid SDU/PDU Ids and T2 Timeout
    during handling of CMDT Reception.

Test Object: 
    TP.CM_RTS Reception,
    TP.CM_CTS Transmission,
    TP.DT Reception,
    TP.CM_EOM Transmission

Test Precondition: 
    -

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId canid
      04: set MetaData source ,destination and priority values
      05: Receive a TP.CM_RTS packet
      06: VP: Check call of EcuC_GetMetaDataCanId
      07: VP: Check for the DET Errors logged for Invalid IDS
      08: VP: The module calls EcuC_GetMetaDataCanId
      09: VP: Check for the DET Errors logged for Invalid IDS
      10: Call J1939Tp_MainFunction
      11: VP: The module calls EcuC_GetMetaDataCanId
      12: VP: The module calls EcuC_GetMetaDataSourceAddr
      13: VP: The module calls EcuC_GetMetaDataTargetAddr
      14: VP: The module calls EcuC_GetMetaDataPriority
      15: VP: Check call of PduR_J1939TpStartOfReception
      16: VP: The module calls EcuC_SetMetaDataCanId
      17: VP: Check for the DET Errors logged for Invalid IDS
      18: VP: The module calls CanIf_Transmit
      19: confirm the TP.CM_CTS packet
      20:  Check if stack trace is empty
      21: Call J1939Tp_RxIndication to receive a TP.DT packet
      22: VP: The module calls EcuC_GetMetaDataCanId
      23: VP: Check for the DET Errors logged for Invalid IDS
      24: Call J1939Tp_MainFunction
      25: VP: Check for the DET Errors logged for T2 Timeout
      26: Module continues to call EcuC_SetMetaDataCanId and Det_ReportError
        as the code fails to access the valid Sa and DA
      27: VP: Check call to EcuC_SetMetaDataCanId
      28: VP: Check for the DET Errors logged for Invalid IDS
      29:  Check if stack trace is empty
      30: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1271</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_FULL_DUPLEX_RCV_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_FullDuplex_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving a initial, valid TP.CM_RTS packet.
    And test that Source /Destination Addresses used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel
    in full-duplex mode.


Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOM transmission

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration 
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_CTS packet
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC_GetMetaData API's according to metadata
    14: Call J1939Tp_MainFunction
    15: VP: Check call to PduR_J1939TpCopyRxData
    16: Call J1939Tp_MainFunction
    17: VP: The module calls EcuC_SetMetaData API's according to metadata configuration 
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.CM_EOM packet
    20: Call J1939Tp_MainFunction
    21: Call PduR_J1939TpRxIndication
    22: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FullDuplex</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00043.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00057.PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00057.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00118.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.InitGlobalVar</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Reassembly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00038.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1272</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FULL_DUPLEX_RCV_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_FullDuplex_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>324</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full reception scenario , with two wait cts during reception.
    And test that Source /Destination Addresses used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel
        in full-duplex mode.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOM transmission

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_CTS packet
    12: Call J1939Tp_MainFunction till Th elapse
    13: The module calls Det_ReportError due to Th timeout
    14: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    15: VP: The module calls CanIf_Transmit
    16: confirm the TP.CM_CTS packet
    17: Call J1939Tp_MainFunction
    18: VP: The module calls PduR_J1939TpCopyRxData
    19: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.CM_CTS packet
    22: Call J1939Tp_RxIndication to receive a TP.DT packet
    23: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    24: Call J1939Tp_MainFunction
    25: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 22 to 25 two more times
    28: Call J1939Tp_MainFunction
    29: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    30: VP: The module calls CanIf_Transmit
    31: confirm the TP.CM_EOM packet
    32: Call J1939Tp_MainFunction
    33: Call PduR_J1939TpRxIndication
    34: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FullDuplex</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00226.NewCTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.StartOfReception.EnoughBuff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.StartOfReception.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00229.StartOfReception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TH</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.Th</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1273</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FULL_DUPLEX_RCV_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_FullDuplex_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>645</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling reception When a TP.CM_RTS is received for a currently active connection.
    And test that Source /Destination Addresses used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel
    in full-duplex mode.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOM transmission

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC MetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: VP: The module calls EcuC MetaData API's according to metadata configuration
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_CTS packet
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC MetaData API's according to metadata configuration 
    14: Call J1939Tp_MainFunction
    15: VP: Check call to PduR_J1939TpCopyRxData
    16: Initialize EcuC_GetMetaDataCanId cand id
    17: Receive a TP.CM_RTS packet
    18: VP: The module calls EcuC MetaData API's according to metadata configuration 
    19: Call J1939Tp_MainFunction
    20: VP: The module calls EcuC MetaData API's according to metadata configuration 
    21: Call PduR_J1939TpRxIndication
    22: VP: The module calls EcuC MetaData API's according to metadata configuration 
    23: VP: Check call of PduR_J1939TpStartOfReception
    24: VP: The module calls EcuC MetaData API's according to metadata configuration 
    25: VP: The module calls CanIf_Transmit
    26: confirm the TP.CM_CTS packet
    27: Call J1939Tp_RxIndication to receive a TP.DT packet
    28: VP: The module calls EcuC MetaData API's according to metadata configuration 
    29: Call J1939Tp_MainFunction
    30: VP: Check call to PduR_J1939TpCopyRxData
    31: Call J1939Tp_CancelReceive with valid RxSduId during ongoing data reception
    32: VP: Check that J1939Tp_CancelReceive returns E_NOT_OK
    33: Call J1939Tp_MainFunction
    34: VP: The module calls EcuC MetaData API's according to metadata configuration 
    35: VP: The module calls CanIf_Transmit
    36: confirm the TP.CM_EOM packet
    37: Call J1939Tp_MainFunction
    38: Call PduR_J1939TpRxIndication
    39: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FullDuplex</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1274</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FULL_DUPLEX_RCV_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_FullDuplex_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>998</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of invalid return value of PduR_J1939TpStartOfReception.
    And test that Source /Destination Addresses used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel
    in full-duplex mode.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOM transmission

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Set Invalid return Value of PduR_J1939TpStartOfReception
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    09: VP: Check call of PduR_J1939TpStartOfReception
    10: VP: Check that that abort frame is sent
    11: Confirm Conn.Abort Transmission
    12: Call J1939Tp_MainFunction
    13: Receive a TP.CM_RTS packet
    14: Set valid return Value of PduR_J1939TpStartOfReception
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    17: VP: Check call of PduR_J1939TpStartOfReception
    18: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.CM_CTS packet
    21: Call J1939Tp_RxIndication to receive a TP.DT packet
    22: VP: The module calls EcuC_GetMetaData API's according to metadata
    23: Call J1939Tp_MainFunction
    24: VP: Check call to PduR_J1939TpCopyRxData
    25: Call J1939Tp_MainFunction
    26: Check call to PduR_J1939TpCopyRxData
    27: Call J1939Tp_MainFunction
    28: Call J1939Tp_MainFunction
    29: VP: The module calls EcuC_SetMetaDataCanId 
    30: VP: The module calls CanIf_Transmit
    31: confirm the TP.CM_EOM packet
    32: Call J1939Tp_MainFunction
    33: Call PduR_J1939TpRxIndication
    34: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.EndOfMsgAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FullDuplex</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1275</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FULL_DUPLEX_TRSMT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_FullDuplex_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1307</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario,from sending RTS till receiving EOM frame.
    And test that Source /Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    09: VP: The module calls CanIf_Transmit
    10: confirm the TP.CM_RTS packet
    11: Receive a TP.CM_CTS packet
    12: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    13: Call J1939Tp_MainFunction
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    16: VP: The module calls CanIf_Transmit
    17: confirm the TP.DT packet
    : repeat step from 13 to 17 two times to send all DT 
    18: Receive a TP.CM_EOM packet
    19: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    20: Module Call PduR_J1939TpTxConfirmation  
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FullDuplex</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.Sa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1276</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_FullDuplex_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1572</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission/reception scenario in full-duplex mode concurrently,
    from sending RTS till receiving EOM frame.

Test Object: 
    TP.CM_RTS transmission, reception,
    TP.CM_CTS transmission, reception,
    TP.DT transmission, reception,
    TP.CM_EOM transmission, reception.

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data 
    03: set MetaData source ,destination and priority values according to metadata configuration for Tx 
    04: Initialize EcuC_GetMetaDataCanId cand id for Rx 
    05: Call J1939Tp_Transmit 
    06: VP: J1939Tp_Transmit return E_OK 
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration  
    08: Call J1939Tp_MainFunction 
    09: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration 
    10: VP: The module calls CanIf_Transmit 
    11: confirm the TP.CM_RTS packet 
    12: Receive a TP.CM_RTS packet 
    13: VP: The module calls EcuC_GetMetaData API's according to metadata configuration  
    14: Call J1939Tp_MainFunction 
    15: VP: The module calls EcuC_GetMetaData API's according to metadata configuration  
    16: VP: Check call of PduR_J1939TpStartOfReception 
    17: VP: The module calls EcuC_SetMetaData API's according to metadata configuration  
    18: VP: The module calls CanIf_Transmit 
    19: confirm the TP.CM_CTS packet 
    20: Receive a TP.CM_CTS packet 
    21: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration 
    22: Call J1939Tp_MainFunction 
    23: VP: the module calls PduR_J1939TpCopyTxData to get new data 
    24: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration 
    25: VP: The module calls CanIf_Transmit 
    26: confirm the TP.DT packet 
    27: Call J1939Tp_RxIndication to receive a TP.DT packet 
    28: VP: The module calls EcuC_GetMetaData API's according to metadata  
    29: Call J1939Tp_MainFunction 
    30: VP: Check call to PduR_J1939TpCopyRxData
    31: Call J1939Tp_MainFunction
    32: Receive a TP.CM_EOM packet 
    33: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    34: Module Call PduR_J1939TpTxConfirmation 
    35: Call J1939Tp_MainFunction 
    36: VP: The module calls EcuC_SetMetaData API's according to metadata configuration  
    37: VP: The module calls CanIf_Transmit 
    38: confirm the TP.CM_EOM packet 
    39: Call J1939Tp_MainFunction 
    40: Call PduR_J1939TpRxIndication 
    41: shutdown module 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FullDuplex</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.Sa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1277</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FULL_DUPLEX_CONCURRENT_TX_RX_ABORT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_FullDuplex_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>2050</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of connection abort during concurrent transmission/reception scenario in full-duplex mode,
    from sending RTS till receiving EOM frame.

Test Object: 
    TP.CM_RTS transmission, reception,
    TP.CM_CTS transmission, reception,
    TP.DT transmission, reception,
    TP.CM_EOM transmission, reception.

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data 
    03: set MetaData source ,destination and priority values according to metadata configuration for Tx 
    04: Initialize EcuC_GetMetaDataCanId cand id for Rx 
    05: Call J1939Tp_Transmit 
    06: VP: J1939Tp_Transmit return E_OK 
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration  
    08: Call J1939Tp_MainFunction 
    09: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration 
    10: VP: The module calls CanIf_Transmit 
    11: confirm the TP.CM_RTS packet 
    12: Receive a TP.CM_RTS packet 
    13: VP: The module calls EcuC_GetMetaData API's according to metadata configuration  
    14: Call J1939Tp_MainFunction 
    15: VP: The module calls EcuC_GetMetaData API's according to metadata configuration  
    16: VP: Check call of PduR_J1939TpStartOfReception 
    17: VP: The module calls EcuC_SetMetaData API's according to metadata configuration  
    18: VP: The module calls CanIf_Transmit 
    19: confirm the TP.CM_CTS packet 
    20: Receive a TP.CM_CTS packet 
    21: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration 
    22: Call J1939Tp_MainFunction 
    23: VP: the module calls PduR_J1939TpCopyTxData to get new data 
    24: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration 
    25: VP: The module calls CanIf_Transmit 
    26: confirm the TP.DT packet 
    27: Call J1939Tp_RxIndication to receive a TP.DT packet 
    28: VP: The module calls EcuC_GetMetaData API's according to metadata  
    29: Call J1939Tp_MainFunction 
    30: VP: The module calls EcuC_GetMetaData API's according to metadata  
    31: VP: Check call to PduR_J1939TpCopyRxData 
    32: Receive a TP.CM_EOM packet 
    33: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    34: Module Call PduR_J1939TpTxConfirmation 
    35: Call J1939Tp_MainFunction 
    36: VP: The module calls EcuC_SetMetaData API's according to metadata configuration  
    37: VP: The module calls CanIf_Transmit 
    38: confirm the TP.CM_EOM packet 
    39: Call J1939Tp_MainFunction 
    40: Call PduR_J1939TpRxIndication 
    41: shutdown module 

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FullDuplex</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.Sa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1278</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_GET_VERSION_INFO_TEST_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_GetVersionInfo_Test/source/application/Tests.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_GetVersionInfo(), with intialized module shall process the API call.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    1: Call the J1939Tp_Init() with valid value  to initialize the module.
    2: Call the J1939Tp_GetVersionInfo().
    3: VP:
    Check the vendorID shall be set to J1939TP_VENDOR_ID.
    4: VP:
    Check the moduleID shall be set to J1939TP_MODULE_ID.
    5: VP:
    Check the sw_major_version shall be set to J1939TP_SW_MAJOR_VERSION.
    6: VP:
    Check the sw_minor_version shall be set to J1939TP_SW_MINOR_VERSION.
    7: VP:
    Check the sw_patch_version shall be set to J1939TP_SW_PATCH_VERSION.
    8: Call the J1939Tp_Shutdown() to Deinitialize the module.   

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00089</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1279</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_GET_VERSION_INFO_TEST_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_GetVersionInfo_Test/source/application/Tests.c</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_GetVersionInfo(), with unintialized module shall process the API call.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    1: Call the J1939Tp_GetVersionInfo().
    2: VP:
    Check the vendorID shall be set to J1939TP_VENDOR_ID.
    3: VP:
    Check the moduleID shall be set to J1939TP_MODULE_ID.
    4: VP:
    Check the sw_major_version shall be set to J1939TP_SW_MAJOR_VERSION.
    5: VP:
    Check the sw_minor_version shall be set to J1939TP_SW_MINOR_VERSION.
    6: VP:
    Check the sw_patch_version shall be set to J1939TP_SW_PATCH_VERSION.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00089</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1280</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_GET_VERSION_INFO_TEST_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_GetVersionInfo_Test/source/application/Tests.c</sourcefile>
      <sourceline>160</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_GetVersionInfo(), with NULL pointer shall report DET error.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    1: Call the J1939Tp_GetVersionInfo() with NULL pointer.
    2: Check that module call Det_ReportError

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00089</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1281</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CHECK_INIT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test the call of J1939Tp_Init() with a valid value, shall initialize the module successfully
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is not initialized.

Test Execution: 
    1: Call the J1939Tp_Init() with valid value to initialize the module.
    2: Check that module didn't report any DET .
    3: Call the J1939Tp_Shutdown() .

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1282</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHECK_INIT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that reinitialize the module shall report DET error.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is not initialized.

Test Execution: 
    1: Call the J1939Tp_Init() with valid value to initialize the module.
    2: Call the J1939Tp_Init() again with valid value to reinitialize the module.
    3: Check that module call Det_ReportError .
    4: Call the J1939Tp_Shutdown() .

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00115.E_REINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1283</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHECK_INIT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>121</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_Init(), with invalid value shall report DET error
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is not initialized.

Test Execution: 
    1: Call the J1939Tp_Init() with zero value to initialize the module.
    2: Check that module call Det_ReportError .

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00115.E_INIT_FAILED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1284</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHECK_INIT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>161</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that the global states J1939Tp_ON and J1939Tp_OFF shall be used to check if the module has been initialized
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is not initialized.

Test Execution: 
    01: Call J1939Tp_Transmit() before J1939Tp_Init()
    02: VP: J1939Tp_Transmit return E_OK
    03: Check that module call Det_ReportError,as the module global state is J1939TP_OFF
    04: Call the J1939Tp_Init() to Initialize the module
    05: Now call J1939Tp_Transmit() again after Init
    06: VP: J1939Tp_Transmit return E_OK as global state is changed to J1939TP_ON during Init
    07: Call the J1939Tp_Shutdown()

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1285</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHECK_INIT_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>224</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
       This tests that j1939TP reacts correctly to an attempt to initialize it with a null pointer
    &lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
        1: Call the J1939Tp_Init() with null pointer.
        2: Check  that module reports det error due to faulty initialization

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1286</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHECK_INIT_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>265</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
        This tests that j1939TP reacts correctly to an attempt to initialize it with a structure that has wrong signatures
    &lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
         01: Call J1939Tp_Init() with an invalid initialization structure
         02: Check to see that det error has been reported

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1287</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHECK_INIT_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>313</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
     &lt;para&gt;
         This tests that j1939TP reacts correctly to an attempt to initialize it with a structure that has wrong signatures
     &lt;/para&gt;
 
Test Object: None.
Test Precondition: 
 
Test Execution: 
          01: Call J1939Tp_Init() with an invalid initialization structure
          02: Check to see that det error has been reported
 
Test Input: 
 
Test Output: 
 </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1288</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHECK_INIT_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>358</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
        This tests that j1939TP reacts correctly to an attempt to initialize it with a structure that has wrong signatures
    &lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
         01: Call J1939Tp_Init() with an invalid initialization structure
         02: Check to see that det error has been reported

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1289</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHECK_INIT_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>405</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
         This tests that j1939TP reacts correctly to an attempt to initialize it with a structure that has wrong signatures
    &lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
         01: Call J1939Tp_Init() with an invalid initialization structure
         02: Check to see that det error has been reported

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1290</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CHECK_PBCFG_INIT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test_Pbcfg/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test the call of J1939Tp_Init() with a valid value, shall initialize the module successfully
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is not initialized using pbcfgm

Test Execution: 
    1: Call the J1939Tp_Init() with valid value to initialize the module.
    2: Check that module didn't report any DET .
    3: Call the J1939Tp_Shutdown() .

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1291</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHECK_PBCFG_INIT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test_Pbcfg/source/application/Tests.c</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
       check det error after faulty initialization
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized with configuration that has faulty signatures

Test Execution: 
    1: Call the J1939Tp_Init() with valid value to initialize the module.
    2: Check that module call Det_ReportError .
    3: Call the J1939Tp_Shutdown() .
    4: ShutDown also reports det error due to module not being propperly initialized.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1292</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHECK_PBCFG_INIT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test_Pbcfg/source/application/Tests.c</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_Init() called with NULL pointer gets config from PBCFGM
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is not initialized.

Test Execution: 
    1: Call the J1939Tp_Init() with NULL pointer
    2: Check that det errors have been signaled due to no initialization of pbcfgM.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1293</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHECK_PBCFG_INIT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test_Pbcfg/source/application/Tests.c</sourcefile>
      <sourceline>171</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_Init() called with null pointer and it still received a valid configuration from pbcfgmanager
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is not initialized.

Test Execution: 
    1: Call the J1939Tp_Init() with good config
    2: Check that det errors have not been signaled 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1294</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CHECK_INIT_NO_DEV_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test_no_dev/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test the call of J1939Tp_Init() with a valid value, shall initialize the module successfully
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is not initialized.

Test Execution: 
    1: Call the J1939Tp_Init() with valid value to initialize the module.
    2: Check that module didn't report any DET .
    3: Call the J1939Tp_Shutdown() .

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1295</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHECK_INIT_NO_DEV_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test_no_dev/source/application/Tests.c</sourcefile>
      <sourceline>74</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
       This tests that j1939TP reacts correctly to an attempt to initialize it with an invalid configuration
    &lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
        1: Call the J1939Tp_Init() with invalid configuration
        2: Check that module didn't report any DET .

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1296</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CHECK_INIT_NO_DEV_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Init_Test_no_dev/source/application/Tests.c</sourcefile>
      <sourceline>119</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
       This tests that j1939TP reacts correctly to an attempt to initialize it with a null pointer
    &lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
        1: Call the J1939Tp_Init() with NUll pointer
        2: Check that module didn't report any DET .

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1297</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_MAINFUNCTION_TEST</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_MainFunction_Test/source/application/Tests.c</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test the call of J1939Tp_Mainfunction(), for uninitialized module
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Call the J1939Tp_Mainfunction().
    02: Check that module call Det_ReportError

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.DET.MAINFUNCTION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1298</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_NOCHANNELS_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_NoChannels_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test behavior when no tx or rx channels configured.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is not initialized.

Test Execution: 
    01: Call the J1939Tp_Init() with value zero to initialize the module.
    02: Call J1939Tp_Transmit and check the return value
    03: Call J1939Tp_CancelTransmit and check the return value
    04: Call J1939Tp_CancelReceive and check the return value
    05: Call J1939Tp_ChangeParameter and check the return value
    06: Call J1939Tp_RxIndication
    07: VP: Check call of Det_ReportError
    08: Call J1939Tp_MainFunction
    09: Call the J1939Tp_Shutdown() to shutdown the module.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1299</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_BAM_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of broadcast frame after timeout T1

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_BAM packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC_GetMetaDataCanId
    14: Call J1939Tp_MainFunction
    15: VP: Check call to EcuC_GetMetaDataCanId
    16: VP: Check call to PduR_J1939TpCopyRxData
    17: Call J1939Tp_RxIndication to receive a TP.DT packet
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: Call J1939Tp_MainFunction
    20: VP: The module calls EcuC_GetMetaDataCanId
    21: VP: Check call to PduR_J1939TpCopyRxData
    22: Call J1939Tp_MainFunction till timeout T1 passed
    23: The module calls Det_ReportError due to Timeout
    24: Call PduR_J1939TpRxIndication
    25: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00031.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1300</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_BAM_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>217</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of broadcast frame when receiving invalid sequence number

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId canid
    04: Receive a TP.CM_BAM packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC_GetMetaDataCanId
    14: Call J1939Tp_MainFunction
    15: VP: Check call to EcuC_GetMetaDataCanId
    16: VP: Check call to PduR_J1939TpCopyRxData
    17: Call J1939Tp_RxIndication to receive a TP.DT packet
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: Call J1939Tp_MainFunction
    20: The module calls Det_ReportError due to invalid sequence number
    21: Call PduR_J1939TpRxIndication
    22: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00232.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1301</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_BAM_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>375</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of broadcast frame when PduR_J1939TpStartOfReception function returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId canid
    04: Receive a TP.CM_BAM packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.StartOfReception.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1302</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_BAM_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>475</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of broadcast frame when PduR_J1939TpCopyRxData returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId canid
    04: Receive a TP.CM_BAM packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC_GetMetaDataCanId
    14: Call J1939Tp_MainFunction
    15: VP: Check call to EcuC_GetMetaDataCanId
    16: VP: Check call to PduR_J1939TpCopyRxData
    17: Call PduR_J1939TpRxIndication
    18: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.BAM</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1303</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_BAM_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>620</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of broadcast frame after reception TP.CM_RTS where data length exceed allowed

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId canid
    04: Receive a TP.CM_BAM packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: module Call Det_ReportError
    09: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00043.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1304</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_BAM_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>707</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling invalid return value of PduR_J1939TpStartOfReception 
    and checks the handling of abort reception of broadcast frame after timeout T1 after TP.CM_RTS

Test Object: 
    TP.CM_BAM ,
    TP.DT reception

Test Precondition: 
    -

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId canid
      04: Receive a TP.CM_BAM packet
      05: VP: Check call of EcuC_GetMetaDataCanId
      06: Set Invalid return value for Start of reception
      07: Call J1939Tp_MainFunction
      08: VP: The module calls EcuC_GetMetaDataCanId
      09: VP: The module calls EcuC_GetMetaDataSourceAddr
      10: VP: The module calls EcuC_GetMetaDataTargetAddr
      11: VP: The module calls EcuC_GetMetaDataPriority
      12: VP: Check call of PduR_J1939TpStartOfReception
      13: Call J1939Tp_MainFunction
      14: VP: check that the reception aborted silently
      15: Receive a TP.CM_BAM packet
      16: VP: Check call of EcuC_GetMetaDataCanId
      17: Set a valid return value for Start of reception
      18: VP: The module calls EcuC_GetMetaDataCanId
      19: Reads the Metadata info from the stubs
      20: Call J1939Tp_MainFunction till timeout T1 passed
      21: The module calls Det_ReportError due to Timeout
      22: Call PduR_J1939TpRxIndication
      23: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00121.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1305</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_BAM_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>879</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    The J1939Tp module shall abort the reception silently if the protocol chosen does not match the transport protocol configured for the transported PGN

Test Object: 
    TP.CM_BAM ,
    TP.DT reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId canid
    04: Receive a TP.CM_BAM packet
    05: Det_ReportError or nothing depending on the configuration
    06: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1306</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_BAM_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>945</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test check that Unexpected TP.CM_BAM frames shall terminate an active
    connection and start a new one.

Test Object: 
    TP.CM_BAM ,
    TP.DT reception

Test Precondition: 
    -

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId canid
      04: Receive a TP.CM_BAM packet
      05: VP: Check call of EcuC_GetMetaDataCanId
      06: Call J1939Tp_MainFunction
      07: VP: The module calls EcuC_GetMetaDataCanId
      08: VP: The module calls EcuC_GetMetaDataSourceAddr
      09: VP: The module calls EcuC_GetMetaDataTargetAddr
      10: VP: The module calls EcuC_GetMetaDataPriority
      11: VP: Check call of PduR_J1939TpStartOfReception
      12: Call J1939Tp_RxIndication to receive a TP.DT packet
      13: VP: The module calls EcuC_GetMetaDataCanId
      14: Call J1939Tp_MainFunction
      15: VP: Check call to PduR_J1939TpCopyRxData
      16: VP: Check call to PduR_J1939TpCopyRxData
      17: Set Pdu Info for New BAM Connection
      18: Receive a new TP.CM_BAM packet
      19: VP: Check call of EcuC_GetMetaDataCanId
      20: Call J1939Tp_MainFunction
      21: VP: The module calls EcuC_GetMetaDataCanId
      22: VP: Check PduR_J1939TpRxIndication with E_NOT_OK for old connection
      23: Call J1939Tp_MainFunction
      24: VP: The module calls EcuC_GetMetaDataSourceAddr
      25: VP: The module calls EcuC_GetMetaDataTargetAddr
      26: VP: The module calls EcuC_GetMetaDataPriority
      27: VP: Check call of PduR_J1939TpStartOfReception
      28: Call J1939Tp_RxIndication to receive a TP.DT packet
      29: VP: The module calls EcuC_GetMetaDataCanId
      30: Call J1939Tp_MainFunction
      31: VP: Check call to PduR_J1939TpCopyRxData
      32: VP: Check call to PduR_J1939TpCopyRxData
      33: Call J1939Tp_MainFunction
      34: VP: Check call of EcuC_GetMetaDataCanId
      35: Call J1939Tp_MainFunction
      36: VP: The module calls EcuC_GetMetaDataCanId
      37: VP: Check PduR_J1939TpRxIndication with E_NOT_OK for previous connection
      38: Call J1939Tp_MainFunction
      39: VP: The module calls EcuC_GetMetaDataSourceAddr
      40: VP: The module calls EcuC_GetMetaDataTargetAddr
      41: VP: The module calls EcuC_GetMetaDataPriority
      42: VP: Check call of PduR_J1939TpStartOfReception
      43: Call J1939Tp_RxIndication to receive a TP.DT packet
      44: VP: The module calls EcuC_GetMetaDataCanId
      45: Call J1939Tp_MainFunction
      46: VP: Check call to PduR_J1939TpCopyRxData
      47: VP: Check call to PduR_J1939TpCopyRxData
      48: Call J1939Tp_MainFunction
      49: Call J1939Tp_RxIndication to receive a TP.DT packet
      50: VP: The module calls EcuC_GetMetaDataCanId
      51: Call J1939Tp_MainFunction
      52: VP: Check call to PduR_J1939TpCopyRxData
      53: VP: Check call to PduR_J1939TpCopyRxData
      54: Call J1939Tp_MainFunction
      55: Call J1939Tp_RxIndication to receive a TP.DT packet
      56: VP: The module calls EcuC_GetMetaDataCanId
      57: Call J1939Tp_MainFunction
      58: VP: Check call to PduR_J1939TpCopyRxData
      59: VP: Check call to PduR_J1939TpCopyRxData
      60: Call J1939Tp_MainFunction
      61: VP: Check PduR_J1939TpRxIndication  for E_OK
      62: Check trace empty
      63: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Bam</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1307</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_BAM_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1329</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of a BAM Reception scenario when invalid value is
    returned from PduR_J1939TpCopyRxData Api during Data reception.

Test Object: 
    TP.CM_BAM ,
    TP.DT Reception

Test Precondition: 
    -

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId canid
      04: Receive a TP.CM_BAM packet
      05: VP: Check call of EcuC_GetMetaDataCanId
      06: Call J1939Tp_MainFunction
      07: VP: The module calls EcuC_GetMetaDataCanId
      08: VP: The module calls EcuC_GetMetaDataSourceAddr
      09: VP: The module calls EcuC_GetMetaDataTargetAddr
      10: VP: The module calls EcuC_GetMetaDataPriority
      11: VP: Check call of PduR_J1939TpStartOfReception
      12: Call J1939Tp_RxIndication to receive a TP.DT packet
      13: VP: The module calls EcuC_GetMetaDataCanId
      14: Call J1939Tp_MainFunction
      15: VP: Check call to PduR_J1939TpCopyRxData
      16: VP: Check call to PduR_J1939TpCopyRxData
      17: Call J1939Tp_MainFunction
      18: Call J1939Tp_RxIndication to receive a TP.DT packet
      19: VP: The module calls EcuC_GetMetaDataCanId
      20: Call J1939Tp_MainFunction
      21: VP: Check call to PduR_J1939TpCopyRxData
      22: VP: Check call to PduR_J1939TpCopyRxData
      23: Call J1939Tp_MainFunction
      24: Set Invalid Return value to PduR_J1939TpCopyRxData
      25: Call J1939Tp_RxIndication to receive a TP.DT packet
      26: VP: The module calls EcuC_GetMetaDataCanId
      27: Call J1939Tp_MainFunction
      28: VP: Check call to PduR_J1939TpCopyRxData
      29: VP: Check call to PduR_J1939TpCopyRxData
      30: Call J1939Tp_MainFunction till T1 expired
      31: The module calls Det_ReportError due to error in code
      32: Call PduR_J1939TpRxIndication
      33: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.BAM</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1308</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_BAM_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1557</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception of Data Frames with configured
    J1939TpMainFunctionPeriod greater than J1939TpTBAMMinTimeout.

Test Object: 
    TP.CM_BAM ,
    TP.DT Reception

Test Precondition: 
    -

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId canid
      04: Receive a TP.CM_BAM packet
      05: VP: Check call of EcuC_GetMetaDataCanId
      06: Call J1939Tp_MainFunction
      07: VP: The module calls EcuC_GetMetaDataCanId
      08: VP: The module calls EcuC_GetMetaDataSourceAddr
      09: VP: The module calls EcuC_GetMetaDataTargetAddr
      10: VP: The module calls EcuC_GetMetaDataPriority
      11: VP: Check call of PduR_J1939TpStartOfReception
      12: Call J1939Tp_RxIndication to receive a TP.DT packet
      13: Call J1939Tp_RxIndication to receive a TP.DT 2 packet without J1939Tp_MainFunction
      14: Call J1939Tp_RxIndication to receive a TP.DT 3 packet without J1939Tp_MainFunction
      15: VP: The module calls EcuC_GetMetaDataCanId for TP.DT 1
      16: VP: Check call to PduR_J1939TpCopyRxData for TP.DT 1
      17: VP: The module calls EcuC_GetMetaDataCanId for TP.DT 2
      18: VP: Check call to PduR_J1939TpCopyRxData for TP.DT 2
      19: VP: The module calls EcuC_GetMetaDataCanId for TP.DT 3
      20: VP: Check call to PduR_J1939TpCopyRxData for TP.DT 3
      21: Call J1939Tp_MainFunction
      22: Call PduR_J1939TpRxIndication
      23: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.BAM</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1309</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_BAM_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1743</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of control frame with length equals 0

Test Object: 
    TP.CM

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId canid
    04: Receive a TP.CM_BAM packet with length equals 0
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: module Call Det_ReportError
    07: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1310</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_CANCELRECEIVE_BAM_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_CancelReceive_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks canceling reception after all DT BAM frames have been received 

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_BAM packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC_GetMetaDataCanId
    14: Call J1939Tp_MainFunction
    15: VP: Check call to EcuC_GetMetaDataCanId
    16: VP: Check call to PduR_J1939TpCopyRxData
    17: Call J1939Tp_RxIndication to receive a TP.DT packet
    18: VP: The module calls EcuC_GetMetaDataCanId 
    19: Call J1939Tp_MainFunction
    20: VP: The module calls EcuC_GetMetaDataCanId
    21: VP: Check call to PduR_J1939TpCopyRxData
    22: Call J1939Tp_RxIndication to receive a TP.DT packet
    23: VP: The module calls EcuC_GetMetaDataCanId
    24: Call J1939Tp_MainFunction
    25: VP: The module calls EcuC_GetMetaDataCanId
    26: Call J1939Tp_CancelReceive after all DT frames have been received
    27: Call J1939Tp_MainFunction
    28: Call PduR_J1939TpRxIndication
    29: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00204.received.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1311</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_CANCELRECEIVE_BAM_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_CancelReceive_Test/source/application/Tests.c</sourcefile>
      <sourceline>225</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks canceling reception before last DT BAM frame has been received  

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_BAM packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC_GetMetaDataCanId
    14: Call J1939Tp_MainFunction
    15: VP: Check call to EcuC_GetMetaDataCanId
    16: VP: Check call to PduR_J1939TpCopyRxData
    17: Call J1939Tp_CancelReceive after all DT frames have been received
    18: Call J1939Tp_MainFunction
    19: Call PduR_J1939TpRxIndication
    20: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CancelReceive.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1312</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_CANCELRECEIVE_BAM_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_CancelReceive_Test/source/application/Tests.c</sourcefile>
      <sourceline>368</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks canceling reception with invalid RxSduId

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_BAM packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC_GetMetaDataCanId
    14: Call J1939Tp_MainFunction
    15: VP: Check call to EcuC_GetMetaDataCanId
    16: VP: Check call to PduR_J1939TpCopyRxData
    17: Call J1939Tp_CancelReceive after all DT frames have been received
    18: The module calls Det_ReportError due to invalid RxSduId
    19: Call J1939Tp_RxIndication to receive a TP.DT packet
    20: VP: The module calls EcuC_GetMetaDataCanId 
    21: Call J1939Tp_MainFunction
    22: VP: The module calls EcuC_GetMetaDataCanId
    23: VP: Check call to PduR_J1939TpCopyRxData
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaDataCanId
    26: Call J1939Tp_MainFunction
    27: VP: The module calls EcuC_GetMetaDataCanId
    28: Call J1939Tp_MainFunction
    29: Call PduR_J1939TpRxIndication
    30: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00204.RxPduId.Invalid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1313</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_BAM_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving broadcast frame. And test that Source address used for reception 
    is got from MetaData (when it is configured) not from configured SA of the Channel.

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_BAM packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    09: VP: Check call of PduR_J1939TpStartOfReception
    09: Call J1939Tp_RxIndication to receive a TP.DT packet
    10: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    11: Call J1939Tp_MainFunction
    12: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    13: VP: Check call to PduR_J1939TpCopyRxData
        :repeat steps from 09 to 13 two times
    14: Call J1939Tp_MainFunction
    15: Call PduR_J1939TpRxIndication
    16: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00118.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00043.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00038.CM_BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1314</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_BAM_263_DLC</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_BAM_Test_263_Dlc/source/application/Tests.c.m4</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving of a multi frame bam message configured in such a way that at one point
    during transmission the difference between the MsgLength and the Data_cnt (ammount of data sent) is exactly 256.

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_BAM packet
    05: Call J1939Tp_MainFunction
    06: VP: Check call of PduR_J1939TpStartOfReception
    07: Call J1939Tp_RxIndication to receive a the first TP.DT packet
    08: Call J1939Tp_MainFunction
    09: VP: Check call to PduR_J1939TpCopyRxData
    10: Call J1939Tp_RxIndication to receive the second  TP.DT packet
    11: Call J1939Tp_MainFunction
    12: VP: Check call to PduR_J1939TpCopyRxData
        Second TP DT frame was received , meaning the message did not stop because of msgLength-Data_cnt=256
    13: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00118.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00043.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00038.CM_BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1315</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception with invalid sequence number , which cause connection to be aborted.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId cand id
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_GetMetaDataSourceAddr
        09: VP: The module calls EcuC_GetMetaDataTargetAddr
        10: VP: The module calls EcuC_GetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: confirm the TP.CM_CTS packet
        15: Call J1939Tp_RxIndication to receive a TP.DT packet
        16: VP: The module calls EcuC_GetMetaDataCanId
        17: Call J1939Tp_MainFunction two times
        18: The module calls Det_ReportError due to invalid sequence number
        19: VP: Check call to EcuC_SetMetaDataCanId
        20: VP: The module calls CanIf_Transmit
        21: confirm the TP.Conn_Abort packet
        22: Call J1939Tp_MainFunction two times
        23: Call PduR_J1939TpRxIndication
        24: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00031.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00232.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00097.Reception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_SN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1316</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>231</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after timeout T1

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
        repeat steps from 15 to 19 one more time

    20: Call J1939Tp_MainFunction till timeout T1 passed
    21: The module calls Det_ReportError due to Timeout
    22: VP: Check call to EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: confirm the TP.Conn_Abort packet
    25: Call J1939Tp_MainFunction two times
    26: VP: The module calls PduR_J1939TpRxIndication
    27: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1317</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>462</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after PduR_J1939TpStartOfReception returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.Conn_Abort packet
    15: Call J1939Tp_MainFunction two times
    16: VP: make sure the upper layer isn't notified, as no connection is established
    17: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.StartOfReception.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1318</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>603</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after when PduR_J1939TpCopyRxData returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.Conn_Abort packet
    22: Call J1939Tp_MainFunction two times
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1319</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>801</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception abort when TP.Conn_Abort reception after TP.CM_CTS transmission

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.Conn_Abort
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: Call PduR_J1939TpRxIndication
    19: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1320</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>957</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of reception abort when TP.Conn_Abort with invalid reason reception after TP.CM_CTS transmission

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.Conn_Abort packet to with different SA
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: Call stack empty to check that Abort frame is ignored
    19: Call J1939Tp_RxIndication to receive a TP.Conn_Abort
    20: VP: The module calls EcuC_GetMetaDataCanId
    21: Call J1939Tp_MainFunction two times
    22: module Call Det_ReportError
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_CAR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1321</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1140</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception abort when TP.CM_CTS reception where data length exceed allowed

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: module Call Det_ReportError
    07: call J1939Tp_MainFunction
    08: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TMS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1322</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1226</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after timeout T2

Test Object: 
    TP.CM_RTS transmission,
TP.CM_CTS reception,
TP.DT
TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_MainFunction till timeout T2 passed
    16: The module calls Det_ReportError due to Timeout
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_SetMetaDataCanId
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.Conn_Abort packet
    21: Call J1939Tp_MainFunction two times
    22: VP: The module calls PduR_J1939TpRxIndication
    23: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1323</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1410</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test abort reception when J1939TpTxFcNPduAvailable is not available .

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: Receive a TP.CM_RTS packet again
    15: VP: Check call of EcuC_GetMetaDataCanId
    16: Call J1939Tp_MainFunction two times
    17: VP: The module calls EcuC_GetMetaDataCanId
    18: VP: Check call of PduR_J1939TpStartOfReception
    19: Call J1939Tp_MainFunction till TR timeout
    20: The module calls Det_ReportError due to Timeout
    21: Call PduR_J1939TpRxIndication
    22: Call J1939Tp_MainFunction till J1939Tp_TxConfirmation is received with E_NOT_OK
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1324</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1594</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    The J1939Tp module shall abort the reception silently if the protocol chosen does not match the transport protocol configured for the transported PGN

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit or Det_ReportError depending on the configuration
    07: confirm the TP.Conn_Abort packet depending on the configuration
    09: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength.FD.CM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1325</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1683</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test abort reception when all NSDUs in the module are busy

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: The module calls Det_ReportError due to invalid sequence number
    19: VP: Check call to EcuC_SetMetaDataCanId
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.Conn_Abort packet
    22: Call J1939Tp_MainFunction two times
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1326</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1852</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    check behavior when abort two reception connections .

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Receive a TP.CM_RTS packet again
    16: VP: Check call of EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: VP: Check call of PduR_J1939TpStartOfReception
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.CM_CTS packet
    23: Call J1939Tp_RxIndication to receive a TP.DT packet
    24: VP: The module calls EcuC_GetMetaDataCanId
    25: Call J1939Tp_MainFunction two times
    26: The module calls Det_ReportError due to invalid sequence number
    27: VP: Check call to EcuC_SetMetaDataCanId
    28: VP: The module calls CanIf_Transmit
    29: Call J1939Tp_RxIndication to receive a TP.DT packet
    30: VP: The module calls EcuC_GetMetaDataCanId
    31: Call J1939Tp_MainFunction two times
    32: The module calls Det_ReportError due to invalid sequence number
    33: Call J1939Tp_MainFunction till J1939Tp_TxConfirmation is received with E_NOT_OK
    34: The module calls Det_ReportError due to Timeout
    35: Call PduR_J1939TpRxIndication
    36: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1327</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_13</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>2126</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test check reception abort when CTS0 Pdu is not available

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    05: Receive a TP.CM_RTS packet
    06: VP: Check call of EcuC_GetMetaDataCanId
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaDataCanId
    09: VP: The module calls EcuC_GetMetaDataSourceAddr
    10: VP: The module calls EcuC_GetMetaDataTargetAddr
    11: VP: The module calls EcuC_GetMetaDataPriority
    12: VP: Check call of PduR_J1939TpStartOfReception
    13: VP: The module calls EcuC_SetMetaDataCanId
    14: VP: The module calls CanIf_Transmit
    15: Initialize EcuC_GetMetaDataCanId cand id
    16: Receive a TP.CM_RTS packet
    17: VP: Check call of EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: The module calls EcuC_GetMetaDataCanId
    20: VP: Check call of PduR_J1939TpStartOfReception
    21: Call J1939Tp_MainFunction till TH timeout
    22: The module calls Det_ReportError due to Timeout
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_MainFunction till J1939Tp_TxConfirmation is received with E_NOT_OK
    25: Call PduR_J1939TpRxIndication
    26: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1328</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_14</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>2319</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test abort reception when module can't send EOM Frame

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.EOM

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: VP: Check call of PduR_J1939TpStartOfReception
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.CM_CTS packet
    23: Call J1939Tp_RxIndication to receive a TP.DT packet
    24: VP: The module calls EcuC_GetMetaDataCanId
    25: Call J1939Tp_MainFunction
    26: VP: Check call to EcuC_GetMetaDataCanId
    27: VP: Check call to PduR_J1939TpCopyRxData
        : repeat steps from 23 to 27 one more time
    28: Call J1939Tp_RxIndication to receive a TP.DT packet
    29: VP: The module calls EcuC_GetMetaDataCanId
    30: VP: Check call to EcuC_GetMetaDataCanId
    31: VP: Check call to PduR_J1939TpCopyRxData.
    32: VP: Check call to EcuC_SetMetaDataCanId
    33: VP: The module calls CanIf_Transmit
    34: Call J1939Tp_RxIndication to receive a TP.DT packet
    35: VP: Check call to PduR_J1939TpCopyRxData
    36: VP: The module calls EcuC_GetMetaDataCanId
    37: VP: Check call to PduR_J1939TpCopyRxData
    38: Call J1939Tp_MainFunction till TR timeout
    39: The module calls Det_ReportError due to Timeout
    40: Call PduR_J1939TpRxIndication
    41: Call J1939Tp_MainFunction till J1939Tp_TxConfirmation is received with E_NOT_OK
    42: Call PduR_J1939TpRxIndication
    43: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1329</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_15</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>2637</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception with PduR_J1939TpCopyRxData returning lesser
    buffer and handling CTS wait frame.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS Transmission,
    TP.DT
    TP.CM_EOM

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 40 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to PduR_J1939TpCopyRxData
    19: Call J1939Tp_MainFunction
    20: Call J1939Tp_RxIndication to receive a TP.DT packet
    21: VP: The module calls EcuC_GetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: Check call to PduR_J1939TpCopyRxData
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaDataCanId
    26: Set lesser buffer size for PduR_J1939TpCopyRxData
    27: Call J1939Tp_MainFunction
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: VP: The module calls EcuC_SetMetaDataCanId
    30: VP: Check that module sends CTS Wait frame as buffer is not available
    31: confirm the TP.CM_CTS packet
    32: Loop until Th timeout
    33: VP: Check that module calls PduR_J1939TpCopyRxData until data is available
    34: VP: Check that module logs DET Error with reason J1939TP_E_TIMEOUT_TH
    35: VP: The module calls EcuC_SetMetaDataCanId
    36: Check that after Th timeout, module sends CTS Wait frame again
    37: VP: Check that module calls PduR_J1939TpCopyRxData until data is available
    37: Provide buffer for next data reception via PduR_J1939TpCopyRxData
    38: VP: The module calls CanIf_Transmit
    39: confirm the TP.CM_CTS packet
    40: Call stack empty?
    41: Call J1939Tp_RxIndication to receive a TP.DT packet
    42: VP: The module calls EcuC_GetMetaDataCanId
    43: Call J1939Tp_MainFunction two times
    44: VP: Check call to PduR_J1939TpCopyRxData
    45: Call J1939Tp_RxIndication to receive a TP.DT packet
    46: VP: The module calls EcuC_GetMetaDataCanId
    47: Call J1939Tp_MainFunction two times
    48: VP: Check call to PduR_J1939TpCopyRxData
    49: Call J1939Tp_RxIndication to receive a TP.DT packet
    50: VP: The module calls EcuC_GetMetaDataCanId
    51: VP: The module calls EOM Frame
    52: confirm the TP.CM_EOM packet
    53: Call J1939Tp_MainFunction
    54: Call PduR_J1939TpRxIndication
    55: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.CopyRxData.EnoughBuff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00229.CopyRxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1330</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_16</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>3070</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception with PduR_J1939TpCopyRxData returning lesser
    buffer, Unexpected CTS Frame and handling CTS wait frame.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.EOM

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 40 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_MainFunction
    16: Call J1939Tp_RxIndication to receive a TP.DT packet
    17: VP: The module calls EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction two times
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: Trigger CTS and Check that the module rejects the unexpected CTS frame
    21: VP: Call stack empty to check if the frame is dropped
    22: Call J1939Tp_RxIndication to receive a TP.DT packet
    23: VP: The module calls EcuC_GetMetaDataCanId
    24: Call J1939Tp_MainFunction
    25: VP: Check call to PduR_J1939TpCopyRxData
    26: Call J1939Tp_RxIndication to receive a TP.DT packet
    27: VP: The module calls EcuC_GetMetaDataCanId
    28: Set PduR_J1939TpCopyRxData with lesser buffer
    29: VP: Check call to PduR_J1939TpCopyRxData
    30: VP: The module calls EcuC_SetMetaDataCanId
    31: VP: Check if the CTS Wait frame is transmitted
    32: confirm the TP.CM_CTS packet
    33: VP: Check if DET Error is raised for J1939TP_E_TIMEOUT_TH
    34: VP: The module calls EcuC_SetMetaDataCanId
    35: VP: Check if the CTS Wait frame is transmitted
    36: Provide buffer for next data reception via PduR_J1939TpCopyRxData
    37: VP: The module calls CanIf_Transmit
    38: confirm the TP.CM_CTS packet
    39: Call J1939Tp_RxIndication to receive a TP.DT packet
    40: VP: The module calls EcuC_GetMetaDataCanId
    41: Call J1939Tp_MainFunction two times
    42: VP: Check call to PduR_J1939TpCopyRxData
    43: Call J1939Tp_RxIndication to receive a TP.DT packet
    44: VP: The module calls EcuC_GetMetaDataCanId
    45: Call J1939Tp_MainFunction two times
    46: VP: Check call to PduR_J1939TpCopyRxData
    47: Call J1939Tp_RxIndication to receive a TP.DT packet
    48: VP: The module calls EcuC_GetMetaDataCanId
    49: VP: The module calls EOM Frame
    50: confirm the TP.CM_EOM packet
    51: Call J1939Tp_MainFunction
    52: Call PduR_J1939TpRxIndication
    53: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1331</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_17</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>3510</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of unexpected TP.CM_RTS frame with different PGN and
    also unexpected BAM frame.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.Conn_Abort
    TP.Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 40 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Trigger a BAM Connection for a different Source
    16: Receive a TP.CM_BAM packet
    17: VP: Check call of EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: The module calls EcuC_GetMetaDataCanId
    20: Ignores the BAM Request
    21: Trigger a new CMDT reception with a different PGN
    22: Receive a TP.CM_RTS packet
    23: VP: Check call of EcuC_GetMetaDataCanId
    24: Call J1939Tp_MainFunction
    25: VP: The module calls EcuC_GetMetaDataCanId
    26: VP: Check call to EcuC_SetMetaDataCanId
    27: VP: The module calls CanIf_Transmit
    28: VP: Check that the module shall send abort frame for old connection
    29: confirm the TP.Conn_Abort packet
    30: VP: The module calls EcuC_GetMetaDataSourceAddr
    31: VP: The module calls EcuC_GetMetaDataTargetAddr
    32: VP: The module calls EcuC_GetMetaDataPriority
    33: VP: Check call of PduR_J1939TpStartOfReception
    34: VP: Check that module calls PduR_J1939TpRxIndication with E_NOT_OK for old connection
    35: VP: The module calls EcuC_SetMetaDataCanId
    36: VP: The module calls CanIf_Transmit
    37: confirm the TP.CM_CTS packet
    38: Call J1939Tp_RxIndication to receive a TP.DT packet
    39: VP: The module calls EcuC_GetMetaDataCanId
    40: Call J1939Tp_MainFunction two times
    41: VP: Check call to PduR_J1939TpCopyRxData
    42: Call J1939Tp_RxIndication to receive a TP.DT packet
    43: VP: The module calls EcuC_GetMetaDataCanId
    44: Call J1939Tp_MainFunction
    45: VP: Check call to PduR_J1939TpCopyRxData
    46: Call J1939Tp_RxIndication to receive a TP.DT packet
    47: VP: The module calls EcuC_GetMetaDataCanId
    48: VP: Check call to PduR_J1939TpCopyRxData
    49: VP: The module calls EcuC_SetMetaDataCanId
    50: VP: Check for the CTS Wait frame
    51: confirm the TP.CM_CTS packet
    52: Check for the DET Error for J1939TP_E_TIMEOUT_TH
    53: VP: The module calls EcuC_SetMetaDataCanId
    54: VP: Check for the CTS Wait frame
    55: Tx Confirmation for CTS frame
    56: VP: The module calls CanIf_Transmit
    57: confirm the TP.CM_CTS packet
    58: Call J1939Tp_RxIndication to receive a TP.DT packet
    59: VP: The module calls EcuC_GetMetaDataCanId
    60: Call J1939Tp_MainFunction two times
    61: VP: Check call to PduR_J1939TpCopyRxData
    62: Call J1939Tp_RxIndication to receive a TP.DT packet
    63: VP: The module calls EcuC_GetMetaDataCanId
    64: Call J1939Tp_MainFunction
    65: VP: Check call to PduR_J1939TpCopyRxData
    66: Call J1939Tp_RxIndication to receive a TP.DT packet
    67: VP: The module calls EcuC_GetMetaDataCanId
    68: VP: Check for EOM frame
    69: confirm the TP.CM_EOM packet
    70: Call J1939Tp_MainFunction
    71: Call PduR_J1939TpRxIndication
    72: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Bam</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1332</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_18</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>4045</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception when PduR_J1939TpCopyRxData returns invalid return values to adhere
    code coverage.

Test Object: 
    TP.CM_RTS Reception,
    TP.CM_CTS Transmission,
    TP.DT

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp and EcuC_GetMetaDataCanId cand id
    03: VP: Receive unexpected TP.CM_DT packet and Check that trace is
        empty indicating that Data frame is ignored.
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Set the invalid return Value for PduR_J1939TpCopyRxData
    16: Call J1939Tp_RxIndication to receive a TP.DT packet
    17: VP: The module calls EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction two times
    19: Call J1939Tp_MainFunction two times
    20: VP: Check call to EcuC_SetMetaDataCanId
    21: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Data</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1333</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_19</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>4233</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test waits for Abort counter to reach to maximum to adhere code coverage.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: Initialize EcuC_GetMetaDataCanId cand id
    15: Receive a TP.CM_RTS packet again
    16: VP: Check call of EcuC_GetMetaDataCanId
    17:  Additional Delay to make NDUP unavailable for Abort Frame sending
    18: confirm the TP.CTS packet
    19: Call J1939Tp_MainFunction till the Abort counter reaches to maximum
    20: VP: Check call to EcuC_SetMetaDataCanId and EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.Conn_Abort packet
    23: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00097.Reception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1334</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_20</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>4409</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the behavior when "total number of packets" in received TP.CM/RTS frame does not match the "total message size".

Test Object: 
    TP.CM_RTS reception.

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: module Call Det_ReportError
    07: call J1939Tp_MainFunction
    08: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TNOP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1335</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_21</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>4492</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception after receiving E_NOT_OK for CanIf_Transmit
    of a CTS Frame.

Test Object: 
    TP.CM_RTS reception.
    TP.CM_CTS transmission,

Test Precondition: 
    -

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId cand id and CanIf_Transmit return value to E_NOT_OK
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_GetMetaDataSourceAddr
        09: VP: The module calls EcuC_GetMetaDataTargetAddr
        10: VP: The module calls EcuC_GetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: VP: Check PduR_J1939TpRxIndication returns E_NOT_OK
        15: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Rx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1336</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_22</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>4628</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception after receiving E_NOT_OK for CanIf_Transmit
    of a CTS0 Frame.

Test Object: 
    TP.CM_RTS reception.
    TP.CM_CTS transmission,

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id and CanIf_Transmit return value to E_NOT_OK
    05: Receive a TP.CM_RTS packet
    06: VP: Check call of EcuC_GetMetaDataCanId
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaDataCanId
    09: VP: The module calls EcuC_GetMetaDataSourceAddr
    10: VP: The module calls EcuC_GetMetaDataTargetAddr
    11: VP: The module calls EcuC_GetMetaDataPriority
    12: VP: Check call of PduR_J1939TpStartOfReception
    13: VP: The module calls EcuC_SetMetaDataCanId
    14: VP: The module calls CanIf_Transmit
    15: VP: Check PduR_J1939TpRxIndication returns E_NOT_OK
    16: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1337</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_23</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>4759</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception after receiving E_NOT_OK for CanIf_Transmit
    of EOM Frame.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS Transmission,
    TP.DT
    TP.CM_EOM

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 40 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to PduR_J1939TpCopyRxData
    19: Call J1939Tp_MainFunction
    20: Call J1939Tp_RxIndication to receive a TP.DT packet
    21: VP: The module calls EcuC_GetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: Check call to PduR_J1939TpCopyRxData
    24: Set lesser buffer size for PduR_J1939TpCopyRxData
    25: Call J1939Tp_RxIndication to receive a TP.DT packet
    26: VP: The module calls EcuC_GetMetaDataCanId
    27: Call J1939Tp_MainFunction
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: VP: The module calls CanIf_Transmit
    30: confirm the TP.CM_CTS packet
    31: Call stack empty?
    32: Call J1939Tp_RxIndication to receive a TP.DT packet
    33: VP: The module calls EcuC_GetMetaDataCanId
    34: Call J1939Tp_MainFunction two times
    35: VP: Check call to PduR_J1939TpCopyRxData
    36: Call J1939Tp_RxIndication to receive a TP.DT packet
    37: VP: The module calls EcuC_GetMetaDataCanId
    38: Call J1939Tp_MainFunction two times
    39: VP: Check call to PduR_J1939TpCopyRxData
    40: Call J1939Tp_RxIndication to receive a TP.DT packet
    41: VP: The module calls EcuC_GetMetaDataCanId
    42: Set the return value to E_NOT_OK for CanIf_Transmit
    43: VP: The module calls EOM Frame
    44: Call J1939Tp_MainFunction
    45: VP: Check if the PduR_J1939TpRxIndication returns E_NOT_OK
    46: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Rx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1338</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_24</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>5101</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of silent abort reception after receiving E_NOT_OK for
    CanIf_Transmit of an Abort Frame.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId cand id
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_GetMetaDataSourceAddr
        09: VP: The module calls EcuC_GetMetaDataTargetAddr
        10: VP: The module calls EcuC_GetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: confirm the TP.CM_CTS packet and set the return value of CanIf_Transmit
        15: Call J1939Tp_RxIndication to receive a TP.DT packet
        16: VP: The module calls EcuC_GetMetaDataCanId
        17: Call J1939Tp_MainFunction two times
        18: The module calls Det_ReportError due to invalid sequence number
        19: VP: Check call to EcuC_SetMetaDataCanId
        20: VP: The module calls CanIf_Transmit
        21: Call J1939Tp_MainFunction
        22: VP: Check if PduR_J1939TpRxIndication returns E_NOT_OK
        23: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Rx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1339</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_25</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>5294</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test silent abort reception when all NSDUs in the module are busy and CanIf_Transmit
    returns E_NOT_OK.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14. Initialize EcuC_GetMetaDataCanId cand id
    15: Receive a TP.CM_RTS packet again
    16: VP: Check call of EcuC_GetMetaDataCanId
    17: confirm the TP.CTS packet and set return value of CanIf_Transmit to E_NOT_OK
    18: Call J1939Tp_MainFunction two times
    19: VP: Check call to EcuC_SetMetaDataCanId and EcuC_SetMetaDataCanId
    20. VP: The module calls CanIf_Transmit
    21: VP: Call J1939Tp_MainFunction and Check for Trace Empty
    22: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1340</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_26</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>5465</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception of Data Frames with frame delay less than J1939TpMainFunctionPeriod.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS Transmission,
    TP.DT
    TP.CM_EOM

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 40 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT1 packet
    16: Call J1939Tp_RxIndication to receive a TP.DT2 packet without J1939Tp_MainFunction
    17: Call J1939Tp_RxIndication to receive a TP.DT3 packet without J1939Tp_MainFunction
    18: Call J1939Tp_RxIndication to receive a TP.DT4 packet without J1939Tp_MainFunction
    19: Call J1939Tp_RxIndication to receive a TP.DT5 packet without J1939Tp_MainFunction
    20: VP: The module calls EcuC_GetMetaDataCanId for TP.DT1
    21: VP: Check call to PduR_J1939TpCopyRxData for TP.DT1
    22: VP: The module calls EcuC_GetMetaDataCanId for TP.DT2
    23: VP: Check call to PduR_J1939TpCopyRxData for TP.DT2
    24: VP: The module calls EcuC_GetMetaDataCanId for TP.DT3
    25: VP: Check call to PduR_J1939TpCopyRxData for TP.DT3
    26: VP: The module calls EcuC_GetMetaDataCanId for TP.DT4
    27: VP: Check call to PduR_J1939TpCopyRxData for TP.DT4
    28: VP: The module calls EcuC_GetMetaDataCanId for TP.DT5
    29: VP: Check call to PduR_J1939TpCopyRxData for TP.DT5
    30: VP: The module calls EOM Frame
    31: confirm the TP.CM_EOM packet
    32: Call J1939Tp_MainFunction
    33: Call PduR_J1939TpRxIndication
    34: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.CopyRxData.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1341</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_ABORT_27</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>5743</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of unexpected TP.CM_RTS frame with the same PGN.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.Conn_Abort
    TP.Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 40 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Trigger a new CMDT reception with the same PGN
    16: Receive a TP.CM_RTS packet
    17: VP: Check call of EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: The module calls EcuC_GetMetaDataCanId
    20: VP: Check that module calls PduR_J1939TpRxIndication with E_NOT_OK to abort the old reception
    21: VP: The module calls EcuC_GetMetaDataSourceAddr
    22: VP: The module calls EcuC_GetMetaDataTargetAddr
    23: VP: The module calls EcuC_GetMetaDataPriority
    24: VP: Check call of PduR_J1939TpStartOfReception
    25: VP: The module calls EcuC_SetMetaDataCanId
    26: VP: The module calls CanIf_Transmit
    27: confirm the TP.CM_CTS packet
    28: Call J1939Tp_RxIndication to receive a TP.DT packet
    29: VP: The module calls EcuC_GetMetaDataCanId
    30: Call J1939Tp_MainFunction two times
    31: VP: Check call to PduR_J1939TpCopyRxData
    32: Call J1939Tp_RxIndication to receive a TP.DT packet
    33: VP: The module calls EcuC_GetMetaDataCanId
    34: Call J1939Tp_MainFunction two times
    35: VP: Check call to PduR_J1939TpCopyRxData
    36: Call J1939Tp_RxIndication to receive a TP.DT packet
    37: VP: The module calls EcuC_GetMetaDataCanId
    38: VP: Check call to PduR_J1939TpCopyRxData
    39: VP: The module calls EcuC_SetMetaDataCanId
    40: VP: Check for the CTS Wait frame
    41: confirm the TP.CM_CTS packet
    42: Check for the DET Error for J1939TP_E_TIMEOUT_TH
    43: VP: The module calls EcuC_SetMetaDataCanId
    44: VP: Check for the CTS Wait frame
    45: Tx Confirmation for CTS frame
    46: VP: The module calls CanIf_Transmit
    47: confirm the TP.CM_CTS packet
    48: Call J1939Tp_RxIndication to receive a TP.DT packet
    49: VP: The module calls EcuC_GetMetaDataCanId
    50: Call J1939Tp_MainFunction two times
    51: VP: Check call to PduR_J1939TpCopyRxData
    52: Call J1939Tp_RxIndication to receive a TP.DT packet
    53: VP: The module calls EcuC_GetMetaDataCanId
    54: Call J1939Tp_MainFunction
    55: VP: Check call to PduR_J1939TpCopyRxData
    56: Call J1939Tp_RxIndication to receive a TP.DT packet
    57: VP: The module calls EcuC_GetMetaDataCanId
    58: VP: Check for EOM frame
    59: confirm the TP.CM_EOM packet
    60: Call J1939Tp_MainFunction
    61: Call PduR_J1939TpRxIndication
    62: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Rts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1342</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception with invalid sequence number , which cause connection to be aborted.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId cand id
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_GetMetaDataSourceAddr
        09: VP: The module calls EcuC_GetMetaDataTargetAddr
        10: VP: The module calls EcuC_GetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: confirm the TP.CM_CTS packet
        15: Call J1939Tp_RxIndication to receive a TP.DT packet
        16: VP: The module calls EcuC_GetMetaDataCanId
        17: Call J1939Tp_MainFunction two times
        18: The module calls Det_ReportError due to invalid sequence number
        19: VP: Check call to EcuC_SetMetaDataCanId
        20: VP: The module calls CanIf_Transmit
        21: confirm the TP.Conn_Abort packet
        22: Call J1939Tp_MainFunction two times
        23: Call PduR_J1939TpRxIndication
        24: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00031.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00232.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00097.Reception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_SN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1343</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>246</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after timeout T1

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
        repeat steps from 15 to 19 one more time

    20: Call J1939Tp_MainFunction till timeout T1 passed
    21: The module calls Det_ReportError due to Timeout
    22: VP: Check call to EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: confirm the TP.Conn_Abort packet
    25: Call J1939Tp_MainFunction two times
    26: VP: The module calls PduR_J1939TpRxIndication
    27: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1344</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>475</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after PduR_J1939TpStartOfReception returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.Conn_Abort packet
    15: Call J1939Tp_MainFunction two times
    16: VP: make sure the upper layer isn't notified, as no connection is established
    17: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.StartOfReception.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1345</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>614</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after when PduR_J1939TpCopyRxData returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_GetMetaDataCanId
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.Conn_Abort packet
    22: Call J1939Tp_MainFunction two times
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1346</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>810</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception abort when TP.Conn_Abort reception after TP.CM_CTS transmission

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.Conn_Abort
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: Call PduR_J1939TpRxIndication
    19: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1347</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>964</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of reception abort when TP.Conn_Abort with invalid reason reception after TP.CM_CTS transmission

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.Conn_Abort packet to with different SA
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: Call stack empty to check that Abort frame is ignored
    19: Call J1939Tp_RxIndication to receive a TP.Conn_Abort
    20: VP: The module calls EcuC_GetMetaDataCanId
    21: Call J1939Tp_MainFunction two times
    22: module Call Det_ReportError
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_CAR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1348</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>1145</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception abort when TP.CM_CTS reception where data length exceed allowed

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: module Call Det_ReportError
    07: call J1939Tp_MainFunction
    08: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TMS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1349</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>1230</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception of CMDT frame after timeout T2

Test Object: 
    TP.CM_RTS transmission,
TP.CM_CTS reception,
TP.DT
TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_MainFunction till timeout T2 passed
    16: The module calls Det_ReportError due to Timeout
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to EcuC_SetMetaDataCanId
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.Conn_Abort packet
    21: Call J1939Tp_MainFunction two times
    22: VP: The module calls PduR_J1939TpRxIndication
    23: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1350</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>1412</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test abort reception when J1939TpTxFcNPduAvailable is not available .

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: Receive a TP.CM_RTS packet again
    15: VP: Check call of EcuC_GetMetaDataCanId
    16: Call J1939Tp_MainFunction two times
    17: VP: The module calls EcuC_GetMetaDataCanId
    18: VP: Check call of PduR_J1939TpStartOfReception
    19: Call J1939Tp_MainFunction till TR timeout
    20: The module calls Det_ReportError due to Timeout
    21: Call PduR_J1939TpRxIndication
    22: Call J1939Tp_MainFunction till J1939Tp_TxConfirmation is received with E_NOT_OK
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1351</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>1593</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    The J1939Tp module shall abort the reception silently if the protocol chosen does not match the transport protocol configured for the transported PGN

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit or Det_ReportError depending on the configuration
    07: confirm the TP.Conn_Abort packet depending on the configuration
    09: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength.FD.CM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1352</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>1705</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test abort reception when all NSDUs in the module are busy

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: The module calls Det_ReportError due to invalid sequence number
    19: VP: Check call to EcuC_SetMetaDataCanId
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.Conn_Abort packet
    22: Call J1939Tp_MainFunction two times
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1353</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>1872</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    check behavior when abort two reception connections .

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Receive a TP.CM_RTS packet again
    16: VP: Check call of EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: VP: Check call of PduR_J1939TpStartOfReception
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.CM_CTS packet
    23: Call J1939Tp_RxIndication to receive a TP.DT packet
    24: VP: The module calls EcuC_GetMetaDataCanId
    25: Call J1939Tp_MainFunction two times
    26: The module calls Det_ReportError due to invalid sequence number
    27: VP: Check call to EcuC_SetMetaDataCanId
    28: VP: The module calls CanIf_Transmit
    29: Call J1939Tp_RxIndication to receive a TP.DT packet
    30: VP: The module calls EcuC_GetMetaDataCanId
    31: Call J1939Tp_MainFunction two times
    32: The module calls Det_ReportError due to invalid sequence number
    33: Call J1939Tp_MainFunction till J1939Tp_TxConfirmation is received with E_NOT_OK
    34: The module calls Det_ReportError due to Timeout
    35: Call PduR_J1939TpRxIndication
    36: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1354</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_13</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>2144</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test check reception abort when CTS0 Pdu is not available

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    05: Receive a TP.CM_RTS packet
    06: VP: Check call of EcuC_GetMetaDataCanId
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaDataCanId
    09: VP: The module calls EcuC_GetMetaDataSourceAddr
    10: VP: The module calls EcuC_GetMetaDataTargetAddr
    11: VP: The module calls EcuC_GetMetaDataPriority
    12: VP: Check call of PduR_J1939TpStartOfReception
    13: VP: The module calls EcuC_SetMetaDataCanId
    14: VP: The module calls CanIf_Transmit
    15: Initialize EcuC_GetMetaDataCanId cand id
    16: Receive a TP.CM_RTS packet
    17: VP: Check call of EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: The module calls EcuC_GetMetaDataCanId
    20: VP: Check call of PduR_J1939TpStartOfReception
    21: Call J1939Tp_MainFunction till TH timeout
    22: The module calls Det_ReportError due to Timeout
    23: Call PduR_J1939TpRxIndication
    24: Call J1939Tp_MainFunction till J1939Tp_TxConfirmation is received with E_NOT_OK
    25: Call PduR_J1939TpRxIndication
    26: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1355</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_14</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>2335</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test abort reception when module can't send EOM Frame

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.EOM

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: VP: Check call of PduR_J1939TpStartOfReception
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.CM_CTS packet
    23: Call J1939Tp_RxIndication to receive a TP.DT packet
    24: VP: The module calls EcuC_GetMetaDataCanId
    25: Call J1939Tp_MainFunction
    26: VP: Check call to EcuC_GetMetaDataCanId
    27: VP: Check call to PduR_J1939TpCopyRxData
        : repeat steps from 23 to 27 one more time
    28: Call J1939Tp_RxIndication to receive a TP.DT packet
    29: VP: The module calls EcuC_GetMetaDataCanId
    30: VP: Check call to EcuC_GetMetaDataCanId
    31: VP: Check call to PduR_J1939TpCopyRxData.
    32: VP: Check call to EcuC_SetMetaDataCanId
    33: VP: The module calls CanIf_Transmit
    34: Call J1939Tp_RxIndication to receive a TP.DT packet
    35: VP: Check call to PduR_J1939TpCopyRxData
    36: VP: The module calls EcuC_GetMetaDataCanId
    37: VP: Check call to PduR_J1939TpCopyRxData
    38: Call J1939Tp_MainFunction till TR timeout
    39: The module calls Det_ReportError due to Timeout
    40: Call PduR_J1939TpRxIndication
    41: Call J1939Tp_MainFunction till J1939Tp_TxConfirmation is received with E_NOT_OK
    42: Call PduR_J1939TpRxIndication
    43: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00159.Rx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1356</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_15</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>2651</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception with PduR_J1939TpCopyRxData returning lesser
    buffer and handling CTS wait frame.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS Transmission,
    TP.DT
    TP.CM_EOM

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 40 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to PduR_J1939TpCopyRxData
    19: Call J1939Tp_MainFunction
    20: Call J1939Tp_RxIndication to receive a TP.DT packet
    21: VP: The module calls EcuC_GetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: Check call to PduR_J1939TpCopyRxData
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaDataCanId
    26: Set lesser buffer size for PduR_J1939TpCopyRxData
    27: Call J1939Tp_MainFunction
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: VP: The module calls EcuC_SetMetaDataCanId
    30: VP: Check that module sends CTS Wait frame as buffer is not available
    31: confirm the TP.CM_CTS packet
    32: Loop until Th timeout
    33: VP: Check that module calls PduR_J1939TpCopyRxData until data is available
    34: VP: Check that module logs DET Error with reason J1939TP_E_TIMEOUT_TH
    35: VP: The module calls EcuC_SetMetaDataCanId
    36: Check that after Th timeout, module sends CTS Wait frame again
    37: VP: Check that module calls PduR_J1939TpCopyRxData until data is available
    37: Provide buffer for next data reception via PduR_J1939TpCopyRxData
    38: VP: The module calls CanIf_Transmit
    39: confirm the TP.CM_CTS packet
    40: Call stack empty?
    41: Call J1939Tp_RxIndication to receive a TP.DT packet
    42: VP: The module calls EcuC_GetMetaDataCanId
    43: Call J1939Tp_MainFunction two times
    44: VP: Check call to PduR_J1939TpCopyRxData
    45: Call J1939Tp_RxIndication to receive a TP.DT packet
    46: VP: The module calls EcuC_GetMetaDataCanId
    47: Call J1939Tp_MainFunction two times
    48: VP: Check call to PduR_J1939TpCopyRxData
    49: Call J1939Tp_RxIndication to receive a TP.DT packet
    50: VP: The module calls EcuC_GetMetaDataCanId
    51: VP: The module calls EOM Frame
    52: confirm the TP.CM_EOM packet
    53: Call J1939Tp_MainFunction
    54: Call PduR_J1939TpRxIndication
    55: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.CopyRxData.EnoughBuff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00229.CopyRxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1357</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_16</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>3081</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception with PduR_J1939TpCopyRxData returning lesser
    buffer, Unexpected CTS Frame and handling CTS wait frame.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.EOM

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 40 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_MainFunction
    16: Call J1939Tp_RxIndication to receive a TP.DT packet
    17: VP: The module calls EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction two times
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: Trigger CTS and Check that the module rejects the unexpected CTS frame
    21: VP: Call stack empty to check if the frame is dropped
    22: Call J1939Tp_RxIndication to receive a TP.DT packet
    23: VP: The module calls EcuC_GetMetaDataCanId
    24: Call J1939Tp_MainFunction
    25: VP: Check call to PduR_J1939TpCopyRxData
    26: Call J1939Tp_RxIndication to receive a TP.DT packet
    27: VP: The module calls EcuC_GetMetaDataCanId
    28: Set PduR_J1939TpCopyRxData with lesser buffer
    29: VP: Check call to PduR_J1939TpCopyRxData
    30: VP: The module calls EcuC_SetMetaDataCanId
    31: VP: Check if the CTS Wait frame is transmitted
    32: confirm the TP.CM_CTS packet
    33: VP: Check if DET Error is raised for J1939TP_E_TIMEOUT_TH
    34: VP: The module calls EcuC_SetMetaDataCanId
    35: VP: Check if the CTS Wait frame is transmitted
    36: Provide buffer for next data reception via PduR_J1939TpCopyRxData
    37: VP: The module calls CanIf_Transmit
    38: confirm the TP.CM_CTS packet
    39: Call J1939Tp_RxIndication to receive a TP.DT packet
    40: VP: The module calls EcuC_GetMetaDataCanId
    41: Call J1939Tp_MainFunction two times
    42: VP: Check call to PduR_J1939TpCopyRxData
    43: Call J1939Tp_RxIndication to receive a TP.DT packet
    44: VP: The module calls EcuC_GetMetaDataCanId
    45: Call J1939Tp_MainFunction two times
    46: VP: Check call to PduR_J1939TpCopyRxData
    47: Call J1939Tp_RxIndication to receive a TP.DT packet
    48: VP: The module calls EcuC_GetMetaDataCanId
    49: VP: The module calls EOM Frame
    50: confirm the TP.CM_EOM packet
    51: Call J1939Tp_MainFunction
    52: Call PduR_J1939TpRxIndication
    53: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1358</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_17</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>3519</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception when PduR_J1939TpCopyRxData returns invalid return values to adhere
    code coverage.

Test Object: 
    TP.CM_RTS Reception,
    TP.CM_CTS Transmission,
    TP.DT

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp and EcuC_GetMetaDataCanId cand id
    03: VP: Receive unexpected TP.CM_DT packet and Check that trace is
        empty indicating that Data frame is ignored.
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Set the invalid return Value for PduR_J1939TpCopyRxData
    16: Call J1939Tp_RxIndication to receive a TP.DT packet
    17: VP: The module calls EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction two times
    19: Call J1939Tp_MainFunction two times
    20: VP: Check call to EcuC_SetMetaDataCanId
    21: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CopyRxData.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Data</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1359</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_18</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>3705</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test waits for Abort counter to reach to maximum to adhere code coverage.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: Initialize EcuC_GetMetaDataCanId cand id
    15: Receive a TP.CM_RTS packet again
    16: VP: Check call of EcuC_GetMetaDataCanId
    17:  Additional Delay to make NDUP unavailable for Abort Frame sending
    18: confirm the TP.CTS packet
    19: Call J1939Tp_MainFunction till the Abort counter reaches to maximum
    20: VP: Check call to EcuC_SetMetaDataCanId and EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.Conn_Abort packet
    23: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00097.Reception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1360</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_19</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>3879</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the behavior when "total number of packets" in received TP.CM/RTS frame does not match the "total message size".

Test Object: 
    TP.CM_RTS reception.

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: module Call Det_ReportError
    07: call J1939Tp_MainFunction
    08: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TNOP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1361</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_20</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>3961</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception after receiving E_NOT_OK for CanIf_Transmit
    of a CTS Frame.

Test Object: 
    TP.CM_RTS reception.
    TP.CM_CTS transmission,

Test Precondition: 
    -

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId cand id and CanIf_Transmit return value to E_NOT_OK
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_GetMetaDataSourceAddr
        09: VP: The module calls EcuC_GetMetaDataTargetAddr
        10: VP: The module calls EcuC_GetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: VP: Check PduR_J1939TpRxIndication returns E_NOT_OK
        15: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Rx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1362</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_21</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>4096</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception after receiving E_NOT_OK for CanIf_Transmit
    of a CTS0 Frame.

Test Object: 
    TP.CM_RTS reception.
    TP.CM_CTS transmission,

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id and CanIf_Transmit return value to E_NOT_OK
    05: Receive a TP.CM_RTS packet
    06: VP: Check call of EcuC_GetMetaDataCanId
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaDataCanId
    09: VP: The module calls EcuC_GetMetaDataSourceAddr
    10: VP: The module calls EcuC_GetMetaDataTargetAddr
    11: VP: The module calls EcuC_GetMetaDataPriority
    12: VP: Check call of PduR_J1939TpStartOfReception
    13: VP: The module calls EcuC_SetMetaDataCanId
    14: VP: The module calls CanIf_Transmit
    15: VP: Check PduR_J1939TpRxIndication returns E_NOT_OK
    16: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1363</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_22</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>4226</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort reception after receiving E_NOT_OK for CanIf_Transmit
    of EOM Frame.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS Transmission,
    TP.DT
    TP.CM_EOM

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 40 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: VP: Check call to PduR_J1939TpCopyRxData
    19: Call J1939Tp_MainFunction
    20: Call J1939Tp_RxIndication to receive a TP.DT packet
    21: VP: The module calls EcuC_GetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: Check call to PduR_J1939TpCopyRxData
    24: Set lesser buffer size for PduR_J1939TpCopyRxData
    25: Call J1939Tp_RxIndication to receive a TP.DT packet
    26: VP: The module calls EcuC_GetMetaDataCanId
    27: Call J1939Tp_MainFunction
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: VP: The module calls CanIf_Transmit
    30: confirm the TP.CM_CTS packet
    31: Call stack empty?
    32: Call J1939Tp_RxIndication to receive a TP.DT packet
    33: VP: The module calls EcuC_GetMetaDataCanId
    34: Call J1939Tp_MainFunction two times
    35: VP: Check call to PduR_J1939TpCopyRxData
    36: Call J1939Tp_RxIndication to receive a TP.DT packet
    37: VP: The module calls EcuC_GetMetaDataCanId
    38: Call J1939Tp_MainFunction two times
    39: VP: Check call to PduR_J1939TpCopyRxData
    40: Call J1939Tp_RxIndication to receive a TP.DT packet
    41: VP: The module calls EcuC_GetMetaDataCanId
    42: Set the return value to E_NOT_OK for CanIf_Transmit
    43: VP: The module calls EOM Frame
    44: Call J1939Tp_MainFunction
    45: VP: Check if the PduR_J1939TpRxIndication returns E_NOT_OK
    46: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Rx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1364</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_23</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>4566</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of silent abort reception after receiving E_NOT_OK for
    CanIf_Transmit of an Abort Frame.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId cand id
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_GetMetaDataSourceAddr
        09: VP: The module calls EcuC_GetMetaDataTargetAddr
        10: VP: The module calls EcuC_GetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: confirm the TP.CM_CTS packet and set the return value of CanIf_Transmit
        15: Call J1939Tp_RxIndication to receive a TP.DT packet
        16: VP: The module calls EcuC_GetMetaDataCanId
        17: Call J1939Tp_MainFunction two times
        18: The module calls Det_ReportError due to invalid sequence number
        19: VP: Check call to EcuC_SetMetaDataCanId
        20: VP: The module calls CanIf_Transmit
        21: Call J1939Tp_MainFunction
        22: VP: Check if PduR_J1939TpRxIndication returns E_NOT_OK
        23: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Rx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1365</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_24</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>4757</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test silent abort reception when all NSDUs in the module are busy and CanIf_Transmit
    returns E_NOT_OK.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14. Initialize EcuC_GetMetaDataCanId cand id
    15: Receive a TP.CM_RTS packet again
    16: VP: Check call of EcuC_GetMetaDataCanId
    17: confirm the TP.CTS packet and set return value of CanIf_Transmit to E_NOT_OK
    18: Call J1939Tp_MainFunction two times
    19: VP: Check call to EcuC_SetMetaDataCanId and EcuC_SetMetaDataCanId
    20. VP: The module calls CanIf_Transmit
    21: VP: Call J1939Tp_MainFunction and Check for Trace Empty
    22: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1366</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_25</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>4926</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of reception of Data Frames with frame delay less than J1939TpMainFunctionPeriod.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS Transmission,
    TP.DT
    TP.CM_EOM

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 40 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT1 packet
    16: Call J1939Tp_RxIndication to receive a TP.DT2 packet without J1939Tp_MainFunction
    17: Call J1939Tp_RxIndication to receive a TP.DT3 packet without J1939Tp_MainFunction
    18: Call J1939Tp_RxIndication to receive a TP.DT4 packet without J1939Tp_MainFunction
    19: Call J1939Tp_RxIndication to receive a TP.DT5 packet without J1939Tp_MainFunction
    20: VP: The module calls EcuC_GetMetaDataCanId for TP.DT1
    21: VP: Check call to PduR_J1939TpCopyRxData for TP.DT1
    22: VP: The module calls EcuC_GetMetaDataCanId for TP.DT2
    23: VP: Check call to PduR_J1939TpCopyRxData for TP.DT2
    24: VP: The module calls EcuC_GetMetaDataCanId for TP.DT3
    25: VP: Check call to PduR_J1939TpCopyRxData for TP.DT3
    26: VP: The module calls EcuC_GetMetaDataCanId for TP.DT4
    27: VP: Check call to PduR_J1939TpCopyRxData for TP.DT4
    28: VP: The module calls EcuC_GetMetaDataCanId for TP.DT5
    29: VP: Check call to PduR_J1939TpCopyRxData for TP.DT5
    30: VP: The module calls EOM Frame
    31: confirm the TP.CM_EOM packet
    32: Call J1939Tp_MainFunction
    33: Call PduR_J1939TpRxIndication
    34: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.CopyRxData.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1367</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_26</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>5204</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of unexpected TP.CM_RTS frame with the same PGN.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.Conn_Abort
    TP.Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 40 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Trigger a new CMDT reception with the same PGN
    16: Receive a TP.CM_RTS packet
    17: VP: Check call of EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: The module calls EcuC_GetMetaDataCanId
    20: VP: Check that module calls PduR_J1939TpRxIndication with E_NOT_OK to abort the old reception
    21: VP: The module calls EcuC_GetMetaDataSourceAddr
    22: VP: The module calls EcuC_GetMetaDataTargetAddr
    23: VP: The module calls EcuC_GetMetaDataPriority
    24: VP: Check call of PduR_J1939TpStartOfReception
    25: VP: The module calls EcuC_SetMetaDataCanId
    26: VP: The module calls CanIf_Transmit
    27: confirm the TP.CM_CTS packet
    28: Call J1939Tp_RxIndication to receive a TP.DT packet
    29: VP: The module calls EcuC_GetMetaDataCanId
    30: Call J1939Tp_MainFunction two times
    31: VP: Check call to PduR_J1939TpCopyRxData
    32: Call J1939Tp_RxIndication to receive a TP.DT packet
    33: VP: The module calls EcuC_GetMetaDataCanId
    34: Call J1939Tp_MainFunction two times
    35: VP: Check call to PduR_J1939TpCopyRxData
    36: Call J1939Tp_RxIndication to receive a TP.DT packet
    37: VP: The module calls EcuC_GetMetaDataCanId
    38: VP: Check call to PduR_J1939TpCopyRxData
    39: VP: The module calls EcuC_SetMetaDataCanId
    40: VP: Check for the CTS Wait frame
    41: confirm the TP.CM_CTS packet
    42: Check for the DET Error for J1939TP_E_TIMEOUT_TH
    43: VP: The module calls EcuC_SetMetaDataCanId
    44: VP: Check for the CTS Wait frame
    45: Tx Confirmation for CTS frame
    46: VP: The module calls CanIf_Transmit
    47: confirm the TP.CM_CTS packet
    48: Call J1939Tp_RxIndication to receive a TP.DT packet
    49: VP: The module calls EcuC_GetMetaDataCanId
    50: Call J1939Tp_MainFunction two times
    51: VP: Check call to PduR_J1939TpCopyRxData
    52: Call J1939Tp_RxIndication to receive a TP.DT packet
    53: VP: The module calls EcuC_GetMetaDataCanId
    54: Call J1939Tp_MainFunction
    55: VP: Check call to PduR_J1939TpCopyRxData
    56: Call J1939Tp_RxIndication to receive a TP.DT packet
    57: VP: The module calls EcuC_GetMetaDataCanId
    58: VP: Check for EOM frame
    59: confirm the TP.CM_EOM packet
    60: Call J1939Tp_MainFunction
    61: Call PduR_J1939TpRxIndication
    62: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Rts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1368</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_27</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>5680</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of unexpected TP.CM_RTS frame with the invalid PGN.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.Conn_Abort
    TP.Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 40 bytes of data 
    02: Initialize J1939Tp 
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Call J1939Tp_MainFunction
    05: The module calls Det_ReportError with J1939TP_E_INVALID_PGN
    06: Call J1939Tp_MainFunction two times
    07: confirm the TP.CM_CTS packet
    08: Call J1939Tp_MainFunction two times
    09: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Rts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1369</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_ABORT_28</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Abort_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>5769</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of unexpected TP.CM_ABORT frame with the invalid PGN.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.Conn_Abort
    TP.Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 40 bytes of data 
    02: Initialize J1939Tp 
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Call J1939Tp_MainFunction
    05: The module calls Det_ReportError with J1939TP_E_INVALID_PGN
    06: Call J1939Tp_MainFunction two times
    07: confirm the TP.CM_CTS packet
    08: Call J1939Tp_MainFunction two times
    09: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Rts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1370</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_CMDT_CancelReceive_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_CancelReceive_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks canceling reception after receiving EOM frame

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction
    18: VP: Check call to PduR_J1939TpCopyRxData
    19: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 15 to 19 two more times
    20: Call J1939Tp_MainFunction
    22: VP: Check call to EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: confirm the TP.CM_EOM packet
    25: Call J1939Tp_MainFunction
    26: Call J1939Tp_CancelReceive after receiving EOM frame
    27: Call PduR_J1939TpRxIndication
    28: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00204.received.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1371</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_CMDT_CancelReceive_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_CancelReceive_Test/source/application/Tests.c</sourcefile>
      <sourceline>276</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks canceling reception before receiving EOM frame and also
    checks the cancel reception scenario when received with invalid RxSduId.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction
    18: VP: Check call to PduR_J1939TpCopyRxData
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: Call J1939Tp_CancelReceive before receiving EOM frame with Not Active SduId
    21: VP: Check J1939Tp_CancelReceive returns E_NOT_OK
    22: Call J1939Tp_CancelReceive before receiving EOM frame
    23: Call J1939Tp_MainFunction
    24: VP: Check call to EcuC_SetMetaDataCanId
    25: VP: The module calls CanIf_Transmit
    26: confirm the TP.CM_EOM packet
    27: Call J1939Tp_MainFunction
    28: Call PduR_J1939TpRxIndication
    29: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.CancelReceive.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00204.RxPduId.NotActive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1372</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_CMDT_CancelReceive_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_CancelReceive_Test/source/application/Tests.c</sourcefile>
      <sourceline>494</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks canceling reception with J1939TP_INVALID_IPDU before receiving EOM frame 

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction
    18: VP: Check call to PduR_J1939TpCopyRxData
    19: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 15 to 19 two more times
    20: Call J1939Tp_CancelReceive before receiving EOM frame after first transmit
    21: The module calls Det_ReportError due to invalid RxSduId
    22: VP: Check call to PduR_J1939TpCopyRxData
    23: Call J1939Tp_MainFunction
    24: VP: Check call to EcuC_SetMetaDataCanId
    25: VP: The module calls CanIf_Transmit
    26: confirm the TP.CM_EOM packet
    27: Call J1939Tp_MainFunction
    28: Call PduR_J1939TpRxIndication
    29: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00204.RxPduId.Invalid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00188.CancelReceive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1373</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_CMDT_CancelReceive_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_CancelReceive_Test/source/application/Tests.c</sourcefile>
      <sourceline>745</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test call J1939Tp_CancelReceive() for initialized module .
    &lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    01: call J1939Tp_CancelReceive
    02: Check that module call Det_ReportError

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.DET.CANCELRECEIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1374</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_DIRECT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving direct pg.

Test Object: 
  Direct Reception

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    4: Call J1939Tp_RxIndication to receive a direct pg 
    5: VP: The module calls EcuC_GetMetaDataCanId
    6: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaDataSourceAddr
    08: VP: The module calls EcuC_GetMetaDataTargetAddr
    09: VP: The module calls EcuC_GetMetaDataPriority
    10: VP: Check call of PduR_J1939TpStartOfReception
    11: VP: Check call to PduR_J1939TpCopyRxData
    12: Call J1939Tp_MainFunction
    13: The module calls PduR_J1939TpRxIndication
    14: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1375</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_DIRECT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>143</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the J1939Tp_CancelReceive handling of direct pg.

Test Object: 
  Direct Reception

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 8 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Call J1939Tp_RxIndication to receive a direct pg
    05: VP: The module calls EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction
    07: Call J1939Tp_CancelReceive() for the active Direct Pg
    08: VP: Check if the J1939Tp_CancelReceive returns E_NOT_OK
    09: VP: The module calls EcuC_GetMetaDataSourceAddr
    10: VP: The module calls EcuC_GetMetaDataTargetAddr
    11: VP: The module calls EcuC_GetMetaDataPriority
    12: VP: Check call of PduR_J1939TpStartOfReception
    13: VP: Check call to PduR_J1939TpCopyRxData
    14: Call J1939Tp_MainFunction
    15: The module calls PduR_J1939TpRxIndication
    16: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00204.received.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1376</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_DIRECT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>260</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving direct pg without metadata.

Test Object: 
  Direct Reception

Test Precondition: 

Test Execution: 
    01: Initialize stubs
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Call J1939Tp_RxIndication to receive a direct pg
    05: VP: Check call of PduR_J1939TpStartOfReception
    06: Call J1939Tp_MainFunction
    07: VP: Check call to PduR_J1939TpCopyRxData
    08: Call J1939Tp_MainFunction
    09: The module calls PduR_J1939TpRxIndication
    10: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1377</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_CMDT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>357</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of available buffer scenarios/CTS wait and Dynamic block calculation disabled.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.CM_EOM
    Dynamic block calculation disabled

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 39 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId and set buffer only 14 bytes
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_MainFunction
    16: Call J1939Tp_RxIndication to receive a TP.DT packet
    17: VP: The module calls EcuC_GetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: Call J1939Tp_RxIndication to receive a TP.DT packet
    21: VP: The module calls EcuC_GetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: Check call to PduR_J1939TpCopyRxData
    24: Call J1939Tp_MainFunction
    25: VP: The module calls EcuC_SetMetaDataCanId
    26: VP: Check that the modules sends CTS Wait frame as not buffer available
    27: COnfirmation for CTS wait frame
    28: Call J1939Tp_MainFunction
    29: Provide the buffer to the module
    30: Call J1939Tp_MainFunction
    31: VP: The module calls CanIf_Transmit
    32: VP: Check that the module sends valid CTS frame
    33: confirm the TP.CM_CTS packet
    34: Call J1939Tp_RxIndication to receive a TP.DT packet
    35: VP: The module calls EcuC_GetMetaDataCanId
    36: Call J1939Tp_MainFunction
    37: VP: Check call to PduR_J1939TpCopyRxData
    38: Call J1939Tp_RxIndication to receive a TP.DT packet
    39: VP: The module calls EcuC_GetMetaDataCanId
    40: Call J1939Tp_MainFunction
    41: VP: Check call to PduR_J1939TpCopyRxData
    42: VP: The module calls EcuC_SetMetaDataCanId
    43: confirm the TP.CM_CTS packet
    44: Call J1939Tp_RxIndication to receive a TP.DT packet
    45: VP: The module calls EcuC_GetMetaDataCanId
    46: Call J1939Tp_MainFunction
    47: VP: Check call to PduR_J1939TpCopyRxData
    48: Call J1939Tp_RxIndication to receive a TP.DT packet
    49: VP: The module calls EcuC_GetMetaDataCanId
    50: Call J1939Tp_MainFunction
    51: VP: Check call to PduR_J1939TpCopyRxData
    52: confirm the TP.CM_EOM packet
    53: Call J1939Tp_MainFunction
    54: Call PduR_J1939TpRxIndication
    55: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.CopyRxData.EnoughBuff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00229.CopyRxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1378</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_CMDT_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>778</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of available buffer scenarios/CTS wait and Dynamic block calculation enabled.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.CM_EOM
    Dynamic block calculation enabled

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId and set buffer only 14 bytes
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: VP: Check that the modules sends CTS Wait frame as not buffer available
    15: confirm the TP.CM_CTS packet
    16: Set Invalid RetVal for PduR_J1939TpCopyRxData to test C-Coverage
    17: Call J1939Tp_MainFunction
    18: Set valid RetVal for PduR_J1939TpCopyRxData
    19: Call J1939Tp_MainFunction
    20: VP: The module calls CanIf_Transmit
    21: Check that the module sends valid CTS frame
    22: confirm the TP.CM_CTS packet
    23: Call J1939Tp_MainFunction
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaDataCanId
    26: Call J1939Tp_MainFunction
    27: VP: Check call to PduR_J1939TpCopyRxData
    28: Call J1939Tp_RxIndication to receive a TP.DT packet
    29: VP: The module calls EcuC_GetMetaDataCanId
    30: Call J1939Tp_MainFunction
    31: VP: Check call to PduR_J1939TpCopyRxData
    32: Call J1939Tp_RxIndication to receive a TP.DT packet
    33: Call J1939Tp_MainFunction
    34: Call J1939Tp_RxIndication to receive a TP.DT packet
    35: VP: The module calls EcuC_GetMetaDataCanId
    36: Call J1939Tp_MainFunction
    37: VP: Check call to PduR_J1939TpCopyRxData
    38: Call J1939Tp_RxIndication to receive a TP.DT packet
    39: VP: The module calls EcuC_GetMetaDataCanId
    40: Call J1939Tp_MainFunction
    41: VP: Check call to PduR_J1939TpCopyRxData
    42: VP: The module calls EcuC_SetMetaDataCanId
    43: confirm the TP.CM_CTS packet
    44: Call J1939Tp_RxIndication to receive a TP.DT packet
    45: Call J1939Tp_MainFunction
    46: VP: Check call to PduR_J1939TpCopyRxData
    47: confirm the TP.CM_EOM packet
    48: Call J1939Tp_MainFunction
    49: Call PduR_J1939TpRxIndication
    50: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.CopyRxData.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1379</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_CMDT_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>1172</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of available buffer scenarios during
    StartOfReception and CopyRxData for code coverage

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 39 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: VP: Check that the modules sends CTS Wait frame as not buffer available
    15: Set Invalid RetVal for PduR_J1939TpCopyRxData
    16: VP: Check call to PduR_J1939TpCopyRxData
    17: VP: The module calls CanIf_Transmit
    18: confirm the TP.CM packet
    19: VP: Check if PduR_J1939TpRxIndication is called with E_NOT_OK
    20: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.CopyRxData.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1380</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_CMDT_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>1361</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of available buffer scenarios when Dynamic block calculation enabled.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT
    TP.CM_EOM

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 39 bytes of data
    02: Initialize J1939Tp
    03: Set the Buffer for PduR_J1939TpStartOfReception
    04: Receive a TP.CM_RTS packet
    05: Call J1939Tp_MainFunction two times
    06: VP: Check call of PduR_J1939TpStartOfReception
    07: VP: The module calls EcuC_SetMetaDataCanId
    08: VP: The module calls CanIf_Transmit
    09: confirm the TP.CM_CTS packet
    10: Call J1939Tp_MainFunction
    11: Call J1939Tp_RxIndication to receive a TP.DT packet
    12: Call J1939Tp_MainFunction
    13: VP: Check call to PduR_J1939TpCopyRxData
    14: Call J1939Tp_RxIndication to receive a TP.DT packet
    15: Call J1939Tp_MainFunction
    16: VP: Check call to PduR_J1939TpCopyRxData
    17: Call J1939Tp_RxIndication to receive a TP.DT packet
    18: Call J1939Tp_MainFunction
    19: VP: Check call to PduR_J1939TpCopyRxData
    20: Call J1939Tp_RxIndication to receive a TP.DT packet
    21: Call J1939Tp_MainFunction
    22: VP: Check call to PduR_J1939TpCopyRxData
    23: Call J1939Tp_RxIndication to receive a TP.DT packet
    24: Call J1939Tp_MainFunction
    25: VP: Check call to PduR_J1939TpCopyRxData
    26: VP: The module calls EcuC_SetMetaDataCanId
    27: confirm the TP.CM_CTS packet
    28: Call J1939Tp_MainFunction
    29: Call J1939Tp_RxIndication to receive a TP.DT packet
    30: Call J1939Tp_MainFunction
    31: VP: Check call to PduR_J1939TpCopyRxData
    32: VP: The module calls EcuC_SetMetaDataCanId
    33: confirm the TP.CM_EOM packet
    34: Call J1939Tp_MainFunction
    35: Call PduR_J1939TpRxIndication
    36: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.CopyRxData.EnoughBuff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1381</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_DIRECT_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>1644</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving direct pg when PduR_J1939TpStartOfReception
    returns BUFREQ_E_NOT_OK.

Test Object: 
  Direct Reception

Test Precondition: 

Test Execution: 
    01: Initialize stubs
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Set BUFREQ_E_NOT_OK for PduR_J1939TpStartOfReception
    05: Call J1939Tp_RxIndication to receive a direct pg
    06: VP: The module calls EcuC_GetMetaDataCanId
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: Call J1939Tp_MainFunction
    13: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.StartOfReception.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.StartOfReception.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1382</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_DIRECT_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>1748</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving direct pg when PduR_J1939TpStartOfReception
    returns BUFREQ_OK and PduR_J1939TpCopyRxData returns BUFREQ_E_NOT_OK.

Test Object: 
  Direct Reception

Test Precondition: 

Test Execution: 
    01: Initialize stubs
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Set BUFREQ_OK for PduR_J1939TpStartOfReception
    05: Set BUFREQ_E_NOT_OK for PduR_J1939TpCopyRxData
    06: Call J1939Tp_RxIndication to receive a direct pg
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: Call J1939Tp_MainFunction
    09: VP: The module calls EcuC_GetMetaDataSourceAddr
    10: VP: The module calls EcuC_GetMetaDataTargetAddr
    11: VP: The module calls EcuC_GetMetaDataPriority
    12: VP: Check call of PduR_J1939TpStartOfReception
    13: VP: Check call to PduR_J1939TpCopyRxData
    14: Call J1939Tp_MainFunction
    13: The module calls PduR_J1939TpRxIndication
    16: VP: Check that the frame is dropped
    17: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.StartOfReception.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1383</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_DIRECT_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Direct_Test/source/application/Tests.c</sourcefile>
      <sourceline>1868</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving direct pg when PduR_J1939TpStartOfReception
    returns BUFREQ_E_NOT_OK.

Test Object: 
  Direct Reception

Test Precondition: 

Test Execution: 
    01: Initialize stubs
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Set BUFREQ_E_OK for PduR_J1939TpStartOfReception but small buffer size
    05: Call J1939Tp_RxIndication to receive a direct pg
    06: VP: The module calls EcuC_GetMetaDataCanId
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: The module calls PduR_J1939TpRxIndication
    13: Call J1939Tp_MainFunction
    14: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00040.StartOfReception.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1384</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_RCV_RETRY_BUFFER_RATIO_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Retry_Buffer_Ratio_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the Buffer ratio is calculated correctly when the J1939TpRxDynamicBlockCalculation
    and J1939TpRxRetrySupport are enabled.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId cand id
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_GetMetaDataSourceAddr
        09: VP: The module calls EcuC_GetMetaDataTargetAddr
        10: VP: The module calls EcuC_GetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: confirm the TP.CM_CTS packet
        15: Set SN in the frame
        16: Call J1939Tp_RxIndication to receive a TP.DT packet
        17: VP: The module calls EcuC_GetMetaDataCanId
        18: Call J1939Tp_MainFunction
        19: VP: The module calls EcuC_SetMetaDataCanId
        20: VP: The module calls CanIf_Transmit
        21: confirm the TP.CM_CTS packet
        22: Call J1939Tp_MainFunction
        23: Call J1939Tp_MainFunction
        24: VP: The module calls EcuC_SetMetaDataCanId
        25: VP: The module calls CanIf_Transmit
        26: confirm the TP.CM_CTS packet
        27: Call J1939Tp_MainFunction
        28: Set SN in the frame
        29: Call J1939Tp_RxIndication to receive a TP.DT packet
        30: VP: The module calls EcuC_GetMetaDataCanId
        31: Call J1939Tp_MainFunction
        32: VP: The module calls EcuC_SetMetaDataCanId
        33: VP: The module calls CanIf_Transmit
        34: confirm the TP.CM_EOM packet
        35: Call J1939Tp_MainFunction
        36: Call PduR_J1939TpRxIndication
        37: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1385</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_CTS_RETRY_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Retry_MultiCTS_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that the module behaves correctly if a wrong sequence number is received be during
    multi block message.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId cand id
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_GetMetaDataSourceAddr
        09: VP: The module calls EcuC_GetMetaDataTargetAddr
        10: VP: The module calls EcuC_GetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: confirm the TP.CM_CTS packet
        15: Call J1939Tp_RxIndication to receive a TP.DT packet
        16: VP: The module calls EcuC_GetMetaDataCanId
        17: Call J1939Tp_MainFunction two times
        18: Loop until the module receives all the frames after the frame with the wrong SN
        19: VP: The module calls EcuC_SetMetaDataCanId
        20: VP: The module calls CanIf_Transmit
        21: confirm the TP.CM_CTS packet
        22: Call J1939Tp_MainFunction
        23: Set SN in the frame
        24: Call J1939Tp_RxIndication to receive a TP.DT packet
        25: VP: The module calls EcuC_GetMetaDataCanId
        26: Set wrong SN in the frame
        27: Call J1939Tp_RxIndication to receive a TP.DT packet
        28: VP: The module calls EcuC_GetMetaDataCanId
        29: Set last SN in the frame
        30: Call J1939Tp_RxIndication to receive a TP.DT packet
        31: VP: The module calls EcuC_GetMetaDataCanId
        32: VP: The module calls EcuC_SetMetaDataCanId
        33: VP: The module calls CanIf_Transmit
        34: confirm the TP.CM_CTS packet
        35: Call J1939Tp_MainFunction
        36: Call J1939Tp_RxIndication to receive a TP.DT packet
        37: VP: The module calls EcuC_GetMetaDataCanId
        38: Call J1939Tp_MainFunction
        39: VP: The module calls EcuC_SetMetaDataCanId
        40: VP: The module calls CanIf_Transmit
        41: confirm the TP.CM_CTS packet
        42: Call J1939Tp_MainFunction
        43: Call J1939Tp_MainFunction
        44: VP: The module calls EcuC_SetMetaDataCanId
        45: VP: The module calls CanIf_Transmit
        46: confirm the TP.CM_CTS packet
        47: Call J1939Tp_MainFunction
        48: Call J1939Tp_RxIndication to receive a TP.DT packet
        49: VP: The module calls EcuC_GetMetaDataCanId
        50: Call J1939Tp_MainFunction
        51: VP: The module calls EcuC_SetMetaDataCanId
        52: VP: The module calls CanIf_Transmit
        53: confirm the TP.CM_EOM packet
        54: Call J1939Tp_MainFunction
        55: Call PduR_J1939TpRxIndication
        56: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1386</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_CTS_RETRY_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Retry_MultiCTS_Test/source/application/Tests.c</sourcefile>
      <sourceline>444</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    check the behavior in case a wrong sequence number is received during the first block. And
    another wrong sequence number is received during the second block.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId cand id
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_GetMetaDataSourceAddr
        09: VP: The module calls EcuC_GetMetaDataTargetAddr
        10: VP: The module calls EcuC_GetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: confirm the TP.CM_CTS packet
        15: Call J1939Tp_RxIndication to receive a TP.DT packet
        16: VP: The module calls EcuC_GetMetaDataCanId
        17: Call J1939Tp_MainFunction two times
        18: Loop until the module receives all the frames after the frame with the wrong SN
        19: VP: The module calls EcuC_SetMetaDataCanId
        20: VP: The module calls CanIf_Transmit
        21: confirm the TP.CM_CTS packet
        22: Call J1939Tp_MainFunction
        23: Set SN in the frame
        24: Call J1939Tp_RxIndication to receive a TP.DT packet
        25: VP: The module calls EcuC_GetMetaDataCanId
        26: Call J1939Tp_RxIndication to receive a TP.DT packet
        27: VP: The module calls EcuC_GetMetaDataCanId
        28: Call J1939Tp_MainFunction
        29: VP: The module calls EcuC_SetMetaDataCanId
        30: VP: The module calls CanIf_Transmit
        31: confirm the TP.CM_CTS packet
        32: Call J1939Tp_MainFunction
        33: Call J1939Tp_MainFunction
        34: VP: The module calls EcuC_SetMetaDataCanId
        35: VP: The module calls CanIf_Transmit
        36: confirm the TP.CM_CTS packet
        37: Call J1939Tp_MainFunction
        38: Call J1939Tp_RxIndication to receive a TP.DT packet
        39: VP: The module calls EcuC_GetMetaDataCanId
        40: VP: The module calls EcuC_SetMetaDataCanId
        41: VP: The module calls CanIf_Transmit
        42: confirm the TP.CM_CTS packet
        43: Call J1939Tp_MainFunction
        44: Call J1939Tp_RxIndication to receive a TP.DT packet
        45: VP: The module calls EcuC_GetMetaDataCanId
        46: Call J1939Tp_MainFunction
        47: VP: The module calls EcuC_SetMetaDataCanId
        48: VP: The module calls CanIf_Transmit
        49: confirm the TP.CM_EOM packet
        50: Call J1939Tp_MainFunction
        51: Call PduR_J1939TpRxIndication
        52: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1387</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_CTS_RETRY_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Retry_MultiCTS_Test/source/application/Tests.c</sourcefile>
      <sourceline>834</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that the module behaves correctly if a wrong sequence number is received be during
    multi block of more than two blocks message.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId cand id
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_GetMetaDataSourceAddr
        09: VP: The module calls EcuC_GetMetaDataTargetAddr
        10: VP: The module calls EcuC_GetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: confirm the TP.CM_CTS packet
        15: Call J1939Tp_RxIndication to receive a TP.DT packet
        16: VP: The module calls EcuC_GetMetaDataCanId
        17: Call J1939Tp_MainFunction two times
        18: Loop until the module receives all the frames after the frame with the wrong SN
        19: VP: The module calls EcuC_SetMetaDataCanId
        20: VP: The module calls CanIf_Transmit
        21: confirm the TP.CM_CTS packet
        22: Call J1939Tp_MainFunction
        23: Set SN in the frame
        24: Call J1939Tp_RxIndication to receive a TP.DT packet
        25: VP: The module calls EcuC_GetMetaDataCanId
        26: Set wrong SN in the frame
        27: Call J1939Tp_RxIndication to receive a TP.DT packet
        28: VP: The module calls EcuC_GetMetaDataCanId
        29: Set last SN in the frame
        30: Call J1939Tp_RxIndication to receive a TP.DT packet
        31: VP: The module calls EcuC_GetMetaDataCanId
        32: VP: The module calls EcuC_SetMetaDataCanId
        33: VP: The module calls CanIf_Transmit
        34: confirm the TP.CM_CTS packet
        35: Call J1939Tp_MainFunction
        36: Call J1939Tp_RxIndication to receive a TP.DT packet
        37: VP: The module calls EcuC_GetMetaDataCanId
        38: Call J1939Tp_MainFunction
        39: VP: The module calls EcuC_SetMetaDataCanId
        40: VP: The module calls CanIf_Transmit
        41: confirm the TP.CM_CTS packet
        42: Call J1939Tp_MainFunction
        43: Call J1939Tp_MainFunction
        44: VP: The module calls EcuC_SetMetaDataCanId
        45: VP: The module calls CanIf_Transmit
        46: confirm the TP.CM_CTS packet
        47: Call J1939Tp_MainFunction
        48: Call J1939Tp_RxIndication to receive a TP.DT packet
        49: VP: The module calls EcuC_GetMetaDataCanId
        50: Call J1939Tp_MainFunction
        51: Call J1939Tp_RxIndication to receive a TP.DT packet
        52: VP: The module calls EcuC_GetMetaDataCanId
        53: Call J1939Tp_MainFunction
        54: Call J1939Tp_RxIndication to receive a TP.DT packet
        55: VP: The module calls EcuC_GetMetaDataCanId
        56: Call J1939Tp_MainFunction
        57: VP: The module calls EcuC_SetMetaDataCanId
        58: VP: The module calls CanIf_Transmit
        59: confirm the TP.CM_CTS packet
        60: Call J1939Tp_MainFunction
        61: Call J1939Tp_RxIndication to receive a TP.DT packet
        62: VP: The module calls EcuC_GetMetaDataCanId
        63: Call J1939Tp_MainFunction
        64: VP: The module calls EcuC_SetMetaDataCanId
        65: VP: The module calls CanIf_Transmit
        66: confirm the TP.CM_CTS packet
        67: Call J1939Tp_MainFunction
        68: Call J1939Tp_RxIndication to receive a TP.DT packet
        69: VP: The module calls EcuC_GetMetaDataCanId
        70: Call J1939Tp_MainFunction
        71: VP: The module calls EcuC_SetMetaDataCanId
        72: VP: The module calls CanIf_Transmit
        73: confirm the TP.CM_CTS packet
        74: Call J1939Tp_MainFunction
        75: Call J1939Tp_RxIndication to receive a TP.DT packet
        76: VP: The module calls EcuC_GetMetaDataCanId
        77: Call J1939Tp_MainFunction
        78: VP: The module calls EcuC_SetMetaDataCanId
        79: VP: The module calls CanIf_Transmit
        80: confirm the TP.CM_EOM packet
        81: Call J1939Tp_MainFunction
        82: Call PduR_J1939TpRxIndication
        83: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1388</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_RETRY_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the first frame of the block was sent with wrong sequence number. And retry is enabled for this
    channel. That it will wait for it to finish the transmission then re-request the block.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId cand id
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_GetMetaDataSourceAddr
        09: VP: The module calls EcuC_GetMetaDataTargetAddr
        10: VP: The module calls EcuC_GetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: confirm the TP.CM_CTS packet
        15: Call J1939Tp_RxIndication to receive a TP.DT packet
        16: VP: The module calls EcuC_GetMetaDataCanId
        17: Call J1939Tp_MainFunction two times
        18: Loop until the module receives all the frames after the frame with the wrong SN
        19: VP: The module calls EcuC_SetMetaDataCanId
        20: VP: The module calls CanIf_Transmit
        21: confirm the TP.CM_CTS packet
        22: Call J1939Tp_MainFunction
        23: Set SN in the frame
        24: Call J1939Tp_RxIndication to receive a TP.DT packet
        25: VP: The module calls EcuC_GetMetaDataCanId
        26: Repeat Steps 29 - 31 till all frames are sent
        27: Call J1939Tp_MainFunction
        28: VP: The module calls EcuC_SetMetaDataCanId
        29: VP: The module calls CanIf_Transmit
        30: confirm the TP.CM_EOM packet
        31: Call J1939Tp_MainFunction
        32: Call PduR_J1939TpRxIndication
        33: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00232.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1389</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_RETRY_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>303</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    check the behavior in case a sequence number is missed. That the module will re-request the missed frame and
    all the frames that follows.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_MainFunction two times
    16: Set SN to the first frame
    17: Call J1939Tp_RxIndication to receive a TP.DT packet
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: Call J1939Tp_MainFunction
    20: VP: The module calls PduR_J1939TpCopyRxData
    21: Call J1939Tp_MainFunction two times
    22: Set SN to the third frame
    23: Call J1939Tp_RxIndication to receive a TP.DT packet
    24: VP: The module calls EcuC_GetMetaDataCanId
    25: Call J1939Tp_MainFunction
    26: VP: The module calls EcuC_SetMetaDataCanId
    27: Call J1939Tp_MainFunction
    28: VP: The module calls EcuC_SetMetaDataCanId
    29: VP: The module calls CanIf_Transmit
    30: confirm the TP.Conn_Abort packet
    31: Call J1939Tp_MainFunction
    32: Set SN to the second frame
    33: Call J1939Tp_RxIndication to receive a TP.DT packet
    34: VP: The module calls EcuC_GetMetaDataCanId
    35: Call J1939Tp_MainFunction
    36: VP: The module calls PduR_J1939TpCopyRxData
    37: Call J1939Tp_MainFunction
    38: Set SN to the third frame
    39: Call J1939Tp_RxIndication to receive a TP.DT packet
    40: VP: The module calls EcuC_GetMetaDataCanId
    41: Call J1939Tp_MainFunction
    42: VP: The module calls PduR_J1939TpCopyRxData
    43: Call J1939Tp_MainFunction two times
    44: VP: The module calls EcuC_GetMetaDataCanId
    45: VP: The module calls CanIf_Transmit
    46: confirm the TP.CM_EOM packet
    47: Call J1939Tp_MainFunction
    48: Call PduR_J1939TpRxIndication
    49: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1390</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_RETRY_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>609</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    check the behavior in case multiple wrong SN are received within same block.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_MainFunction two times
    16: Set SN to the second frame
    17: Call J1939Tp_RxIndication to receive a TP.DT packet
    18: VP: The module calls EcuC_GetMetaDataCanId
    19: Call J1939Tp_MainFunction
    20: Repeat steps from 16 - 19 with multiple consecutive wrong SNs
    21: Call J1939Tp_MainFunction
    22: Set SN to the third frame
    23: Call J1939Tp_RxIndication to receive a TP.DT packet
    24: VP: The module calls EcuC_GetMetaDataCanId
    25: Call J1939Tp_MainFunction
    26: VP: The module calls EcuC_SetMetaDataCanId
    27: Call J1939Tp_MainFunction
    28: VP: The module calls EcuC_SetMetaDataCanId
    29: VP: The module calls CanIf_Transmit
    30: confirm the TP.Conn_Abort packet
    31: Call J1939Tp_MainFunction
    32: Set SN to the second frame
    33: Call J1939Tp_RxIndication to receive a TP.DT packet
    34: VP: The module calls EcuC_GetMetaDataCanId
    35: Call J1939Tp_MainFunction
    36: VP: The module calls PduR_J1939TpCopyRxData
    37: Call J1939Tp_MainFunction
    38: Set SN to the third frame
    39: Call J1939Tp_RxIndication to receive a TP.DT packet
    40: VP: The module calls EcuC_GetMetaDataCanId
    41: Call J1939Tp_MainFunction
    42: VP: The module calls PduR_J1939TpCopyRxData
    43: Call J1939Tp_MainFunction two times
    44: Set SN to the second frame
    45: Call J1939Tp_RxIndication to receive a TP.DT packet
    46: VP: The module calls EcuC_GetMetaDataCanId
    47: Call J1939Tp_MainFunction
    48: Set SN to the third frame
    49: Call J1939Tp_RxIndication to receive a TP.DT packet
    50: VP: The module calls EcuC_GetMetaDataCanId
    51: Call J1939Tp_MainFunction
    52: VP: The module calls PduR_J1939TpCopyRxData
    53: Call J1939Tp_MainFunction
    54: VP: The module calls CanIf_Transmit
    55: confirm the TP.Conn_Abort packet
    56: Call J1939Tp_MainFunction
    57: Set SN to the second frame
    58: Call J1939Tp_RxIndication to receive a TP.DT packet
    59: VP: The module calls EcuC_GetMetaDataCanId
    60: Call J1939Tp_MainFunction
    61: VP: The module calls PduR_J1939TpCopyRxData
    62: Call J1939Tp_MainFunction
    63: VP: The module calls EcuC_GetMetaDataCanId
    64: VP: The module calls CanIf_Transmit
    65: confirm the TP.CM_EOM packet
    66: Call J1939Tp_MainFunction
    67: Call PduR_J1939TpRxIndication
    68: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1391</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_RETRY_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>1074</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test to validate that if a wrong SN is sent while retry is enabled. And the last SN expected was not received
    the module will wait till timeout then abort.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
        01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
        02: Initialize J1939Tp
        03: Initialize EcuC_GetMetaDataCanId cand id
        04: Receive a TP.CM_RTS packet
        05: VP: Check call of EcuC_GetMetaDataCanId
        06: Call J1939Tp_MainFunction two times
        07: VP: The module calls EcuC_GetMetaDataCanId
        08: VP: The module calls EcuC_GetMetaDataSourceAddr
        09: VP: The module calls EcuC_GetMetaDataTargetAddr
        10: VP: The module calls EcuC_GetMetaDataPriority
        11: VP: Check call of PduR_J1939TpStartOfReception
        12: VP: The module calls EcuC_SetMetaDataCanId
        13: VP: The module calls CanIf_Transmit
        14: confirm the TP.CM_CTS packet
        15: Set SN in the frame
        16: Call J1939Tp_RxIndication to receive a TP.DT packet
        17: VP: The module calls EcuC_GetMetaDataCanId
        18: Repeat Steps 15 - 17 till first 2 frames are sent
        19: Set SN in the frame to wrong SN
        20: Call J1939Tp_RxIndication to receive a TP.DT packet
        21: VP: The module calls EcuC_GetMetaDataCanId
        22: Call J1939Tp_MainFunction till timeout T1 passed
        23: The module calls Det_ReportError due to Timeout
        24: VP: Check call to EcuC_SetMetaDataCanId
        25: VP: The module calls CanIf_Transmit
        26 confirm the TP.Conn_Abort packet
        27: Call J1939Tp_MainFunction two times
        28: VP: The module calls PduR_J1939TpRxIndication
        29: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1392</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving a initial, valid TP.CM_RTS packet.
    And test that Source /Destination Addresses used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.


Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOM transmission

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration 
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_CTS packet
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC_GetMetaData API's according to metadata
    14: Call J1939Tp_MainFunction
    15: VP: The module calls EcuC_GetMetaData API's according to metadata
    16: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 12 to 16
    17: Call J1939Tp_MainFunction
    18: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.CM_EOM packet
    21: Call J1939Tp_MainFunction
    22: Call PduR_J1939TpRxIndication
    23: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.EndOfMsgAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00043.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00057.PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00057.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00118.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.InitGlobalVar</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Reassembly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00038.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1393</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>381</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full reception scenario , with two wait cts during reception.
    And test that Source /Destination Addresses used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOM transmission

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_CTS packet
    12: Call J1939Tp_MainFunction till Th elapse
    13: The module calls Det_ReportError due to Th timeout
    14: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    15: VP: The module calls CanIf_Transmit
    16: confirm the TP.CM_CTS packet
    17: Call J1939Tp_MainFunction
    18: VP: The module calls PduR_J1939TpCopyRxData
    19: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.CM_CTS packet
    22: Call J1939Tp_RxIndication to receive a TP.DT packet
    23: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    24: Call J1939Tp_MainFunction
    25: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    26: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 22 to 26 two more times
    27: Call J1939Tp_MainFunction
    28: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    27: VP: The module calls CanIf_Transmit
    30: confirm the TP.CM_EOM packet
    31: Call J1939Tp_MainFunction
    32: Call PduR_J1939TpRxIndication
    33: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00226.BuffSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00226.NewCTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.StartOfReception.EnoughBuff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.StartOfReception.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00229.StartOfReception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TH</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.Th</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1394</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>730</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling reception When a TP.CM_RTS is received for a currently active connection.
    And test that Source /Destination Addresses used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOM transmission

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC MetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: VP: The module calls EcuC MetaData API's according to metadata configuration
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_CTS packet
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC MetaData API's according to metadata configuration
    14: Call J1939Tp_MainFunction
    15: VP: The module calls EcuC MetaData API's according to metadata configuration
    16: VP: Check call to PduR_J1939TpCopyRxData
    17: Initialize EcuC_GetMetaDataCanId cand id
    18: Receive a TP.CM_RTS packet
    19: VP: The module calls EcuC MetaData API's according to metadata configuration
    20: Call J1939Tp_MainFunction
    21: VP: The module calls EcuC MetaData API's according to metadata configuration
    22: Call PduR_J1939TpRxIndication
    23: VP: The module calls EcuC MetaData API's according to metadata configuration
    24: VP: Check call of PduR_J1939TpStartOfReception
    25: VP: The module calls EcuC MetaData API's according to metadata configuration
    26: VP: The module calls CanIf_Transmit
    27: confirm the TP.CM_CTS packet
    28: Call J1939Tp_RxIndication to receive a TP.DT packet
    29: VP: The module calls EcuC MetaData API's according to metadata configuration
    30: Call J1939Tp_MainFunction
    31: VP: The module calls EcuC MetaData API's according to metadata configuration
    32: VP: Check call to PduR_J1939TpCopyRxData
    33: Call J1939Tp_CancelReceive with valid RxSduId during ongoing data reception
    34: VP: Check that J1939Tp_CancelReceive returns E_NOT_OK
    35: Call J1939Tp_MainFunction
    36: VP: The module calls EcuC MetaData API's according to metadata configuration
    37: VP: The module calls CanIf_Transmit
    38: confirm the TP.CM_EOM packet
    39: Call J1939Tp_MainFunction
    40: Call PduR_J1939TpRxIndication
    41: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1395</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_RCV_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1126</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of invalid return value of PduR_J1939TpStartOfReception.
    And test that Source /Destination Addresses used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOM transmission

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Set Invalid return Value of PduR_J1939TpStartOfReception
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    09: VP: Check call of PduR_J1939TpStartOfReception
    10: VP: Check that that abort frame is sent
    11: Confirm Conn.Abort Transmission
    12: Call J1939Tp_MainFunction
    13: Receive a TP.CM_RTS packet
    14: Set valid return Value of PduR_J1939TpStartOfReception
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    17: VP: Check call of PduR_J1939TpStartOfReception
    18: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.CM_CTS packet
    21: Call J1939Tp_RxIndication to receive a TP.DT packet
    22: VP: The module calls EcuC_GetMetaData API's according to metadata
    23: Call J1939Tp_MainFunction
    24: VP: The module calls EcuC_GetMetaData API's according to metadata
    25: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 17 to 21 two times
    26: Call J1939Tp_MainFunction
    27: Check call to PduR_J1939TpCopyRxData
    28: Call J1939Tp_MainFunction
    29: VP: The module calls EcuC_SetMetaDataCanId
    30: VP: The module calls CanIf_Transmit
    31: confirm the TP.CM_EOM packet
    32: Call J1939Tp_MainFunction
    33: Call PduR_J1939TpRxIndication 
    34: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.EndOfMsgAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1396</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving a initial, valid TP.CM_RTS packet.
    And test that Source /Destination Addresses used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.


Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOM transmission

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration 
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_CTS packet
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC_GetMetaData API's according to metadata
    14: Call J1939Tp_MainFunction
    15: VP: The module calls EcuC_GetMetaData API's according to metadata
    16: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 12 to 16
    17: Call J1939Tp_MainFunction
    18: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.CM_EOM packet
    21: Call J1939Tp_MainFunction
    22: Call PduR_J1939TpRxIndication
    23: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.EndOfMsgAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00043.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00057.PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00057.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00118.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00162.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.InitGlobalVar</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Reassembly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00038.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1397</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>381</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full reception scenario , with two wait cts during reception.
    And test that Source /Destination Addresses used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOM transmission

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_CTS packet
    12: Call J1939Tp_MainFunction till Th elapse
    13: The module calls Det_ReportError due to Th timeout
    14: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    15: VP: The module calls CanIf_Transmit
    16: confirm the TP.CM_CTS packet
    17: Call J1939Tp_MainFunction
    18: VP: The module calls PduR_J1939TpCopyRxData
    19: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    20: VP: The module calls CanIf_Transmit
    21: confirm the TP.CM_CTS packet
    22: Call J1939Tp_RxIndication to receive a TP.DT packet
    23: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    24: Call J1939Tp_MainFunction
    25: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    26: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 22 to 26 two more times
    27: Call J1939Tp_MainFunction
    28: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    27: VP: The module calls CanIf_Transmit
    30: confirm the TP.CM_EOM packet
    31: Call J1939Tp_MainFunction
    32: Call PduR_J1939TpRxIndication
    33: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00226.BuffSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00226.NewCTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.StartOfReception.EnoughBuff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00227.StartOfReception.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00229.StartOfReception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TH</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.Th</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1398</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>730</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling reception When a TP.CM_RTS is received for a currently active connection.
    And test that Source /Destination Addresses used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOM transmission

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction 
    07: VP: The module calls EcuC MetaData API's according to metadata configuration
    08: VP: Check call of PduR_J1939TpStartOfReception
    09: VP: The module calls EcuC MetaData API's according to metadata configuration
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_CTS packet
    12: Call J1939Tp_RxIndication to receive a TP.DT packet
    13: VP: The module calls EcuC MetaData API's according to metadata configuration
    14: Call J1939Tp_MainFunction
    15: VP: The module calls EcuC MetaData API's according to metadata configuration
    16: VP: Check call to PduR_J1939TpCopyRxData
    17: Initialize EcuC_GetMetaDataCanId cand id
    18: Receive a TP.CM_RTS packet
    19: VP: The module calls EcuC MetaData API's according to metadata configuration
    20: Call J1939Tp_MainFunction
    21: VP: The module calls EcuC MetaData API's according to metadata configuration
    22: Call PduR_J1939TpRxIndication
    23: VP: The module calls EcuC MetaData API's according to metadata configuration
    24: VP: Check call of PduR_J1939TpStartOfReception
    25: VP: The module calls EcuC MetaData API's according to metadata configuration
    26: VP: The module calls CanIf_Transmit
    27: confirm the TP.CM_CTS packet
    28: Call J1939Tp_RxIndication to receive a TP.DT packet
    29: VP: The module calls EcuC MetaData API's according to metadata configuration
    30: Call J1939Tp_MainFunction
    31: VP: The module calls EcuC MetaData API's according to metadata configuration
    32: VP: Check call to PduR_J1939TpCopyRxData
    33: Call J1939Tp_CancelReceive with valid RxSduId during ongoing data reception
    34: VP: Check that J1939Tp_CancelReceive returns E_NOT_OK
    35: Call J1939Tp_MainFunction
    36: VP: The module calls EcuC MetaData API's according to metadata configuration
    37: VP: The module calls CanIf_Transmit
    38: confirm the TP.CM_EOM packet
    39: Call J1939Tp_MainFunction
    40: Call PduR_J1939TpRxIndication
    41: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1399</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPLEX_RCV_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_CMDT_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>1126</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of invalid return value of PduR_J1939TpStartOfReception.
    And test that Source /Destination Addresses used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS reception,
    TP.CM_CTS transmission,
    TP.DT reception,
    TP.CM_EOM transmission

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Set Invalid return Value of PduR_J1939TpStartOfReception
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    09: VP: Check call of PduR_J1939TpStartOfReception
    10: VP: Check that that abort frame is sent
    11: Confirm Conn.Abort Transmission
    12: Call J1939Tp_MainFunction
    13: Receive a TP.CM_RTS packet
    14: Set valid return Value of PduR_J1939TpStartOfReception
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    17: VP: Check call of PduR_J1939TpStartOfReception
    18: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.CM_CTS packet
    21: Call J1939Tp_RxIndication to receive a TP.DT packet
    22: VP: The module calls EcuC_GetMetaData API's according to metadata
    23: Call J1939Tp_MainFunction
    24: VP: The module calls EcuC_GetMetaData API's according to metadata
    25: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 17 to 21 two times
    26: Call J1939Tp_MainFunction
    27: Check call to PduR_J1939TpCopyRxData
    28: Call J1939Tp_MainFunction
    29: VP: The module calls EcuC_SetMetaDataCanId
    30: VP: The module calls CanIf_Transmit
    31: confirm the TP.CM_EOM packet
    32: Call J1939Tp_MainFunction
    33: Call PduR_J1939TpRxIndication 
    34: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.EndOfMsgAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1400</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CONC_RCV_TWO_CMDT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_Concurrent_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test the concurrent reception of two CMDT Connection on a single Rx Channel.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id for CMDT 1
    04: Receive a TP.CM_RTS packet for CMDT 1
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: VP: The module calls EcuC_GetMetaDataCanId
    07: Initialize EcuC_GetMetaDataCanId cand id
    08: Receive a TP.CM_RTS packet
    09: VP: The module calls EcuC_GetMetaDataCanId
    10: Call J1939Tp_MainFunction two times
    11: VP: The module calls EcuC_GetMetaDataSourceAddr
    12: VP: The module calls EcuC_GetMetaDataTargetAddr
    13: VP: The module calls EcuC_GetMetaDataPriority
    14: VP: Check call of PduR_J1939TpStartOfReception
    15: Set MetadaCanId info for CMDT 1
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit for CMDT 1
    18: Block the Confirmation to adhere Code-Coverage by calling J1939Tp_MainFunction
    19: confirm the TP.CM_CTS packet
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit for CMDT 2
    22: confirm the TP.CM_CTS packet
    23: Set Data Frame
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaData API's according to metadata
    26: Call J1939Tp_MainFunction
    27: VP: The module calls EcuC_GetMetaData API's according to metadata
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: Call J1939Tp_RxIndication to receive a TP.DT packet for CMDT2
    30: VP: The module calls EcuC_GetMetaData API's according to metadata
    31: Call J1939Tp_MainFunction
    32: VP: The module calls EcuC_GetMetaData API's according to metadata
    33: VP: Check call to PduR_J1939TpCopyRxData
    34: Call J1939Tp_RxIndication to receive a TP.DT 2 packet for CMDT 1
    35: VP: The module calls EcuC_GetMetaData API's according to metadata
    36: Call J1939Tp_MainFunction
    37: VP: The module calls EcuC_GetMetaData API's according to metadata
    38: VP: Check call to PduR_J1939TpCopyRxData
    39: Call J1939Tp_RxIndication to receive a TP.DT packet
    40: VP: The module calls EcuC_GetMetaData API's according to metadata
    41: Call J1939Tp_MainFunction
    42: VP: The module calls EcuC_GetMetaData API's according to metadata
    43: VP: Check call to PduR_J1939TpCopyRxData
    44: Call J1939Tp_RxIndication to receive a TP.DT packet
    45: VP: The module calls EcuC_GetMetaData API's according to metadata
    46: Call J1939Tp_MainFunction
    47: VP: The module calls EcuC_GetMetaData API's according to metadata
    48: VP: Check call to PduR_J1939TpCopyRxData
    49: VP: The module calls CanIf_Transmit with EOM for CMDT 1
    50: confirm the TP.CM_EOM packet
    51: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    52: Call J1939Tp_RxIndication to receive a TP.DT packet
    53: VP: The module calls EcuC_GetMetaData API's according to metadata
    54: Call J1939Tp_MainFunction
    55: VP: The module calls EcuC_GetMetaData API's according to metadata
    56: VP: Check call to PduR_J1939TpCopyRxData
    57: Call J1939Tp_MainFunction
    58: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    59: VP: The module calls CanIf_Transmit with EOM for CMDT2
    60: confirm the TP.CM_EOM packet
    61: Call J1939Tp_MainFunction
    62: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    63: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Rx.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Rx.Timer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1401</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CONC_RCV_TWO_CMDT_SAME_PGN</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Reception_Concurrent_Test/source/application/Tests.c</sourcefile>
      <sourceline>504</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test the concurrent reception of two CMDT Connection on a single rx channel with same PGN.
    And test that Source/Destination address used for reception 
    is got from MetaData (when it is configured) not from configured SA/DA of the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id for CMDT 1
    04: Receive a TP.CM_RTS packet for CMDT 1
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: VP: The module calls EcuC_GetMetaDataCanId
    07: Initialize EcuC_GetMetaDataCanId cand id
    08: Receive a TP.CM_RTS packet
    09: VP: The module calls EcuC_GetMetaDataCanId
    10: Call J1939Tp_MainFunction two times
    11: VP: The module calls EcuC_GetMetaDataSourceAddr
    12: VP: The module calls EcuC_GetMetaDataTargetAddr
    13: VP: The module calls EcuC_GetMetaDataPriority
    14: VP: Check call of PduR_J1939TpStartOfReception
    15: Set MetadaCanId info for CMDT 1
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit for CMDT 1
    18: Block the Confirmation to adhere Code-Coverage by calling J1939Tp_MainFunction
    19: confirm the TP.CM_CTS packet
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit for CMDT 2
    22: confirm the TP.CM_CTS packet
    23: Set Data Frame
    24: Call J1939Tp_RxIndication to receive a TP.DT packet
    25: VP: The module calls EcuC_GetMetaData API's according to metadata
    26: Call J1939Tp_MainFunction
    27: VP: The module calls EcuC_GetMetaData API's according to metadata
    28: VP: Check call to PduR_J1939TpCopyRxData
    29: Call J1939Tp_RxIndication to receive a TP.DT packet for CMDT2
    30: VP: The module calls EcuC_GetMetaData API's according to metadata
    31: Call J1939Tp_MainFunction
    32: VP: The module calls EcuC_GetMetaData API's according to metadata
    33: VP: Check call to PduR_J1939TpCopyRxData
    34: Call J1939Tp_RxIndication to receive a TP.DT 2 packet for CMDT 1
    35: VP: The module calls EcuC_GetMetaData API's according to metadata
    36: Call J1939Tp_MainFunction
    37: VP: The module calls EcuC_GetMetaData API's according to metadata
    38: VP: Check call to PduR_J1939TpCopyRxData
    39: Call J1939Tp_RxIndication to receive a TP.DT packet
    40: VP: The module calls EcuC_GetMetaData API's according to metadata
    41: Call J1939Tp_MainFunction
    42: VP: The module calls EcuC_GetMetaData API's according to metadata
    43: VP: Check call to PduR_J1939TpCopyRxData
    44: Call J1939Tp_RxIndication to receive a TP.DT packet
    45: VP: The module calls EcuC_GetMetaData API's according to metadata
    46: Call J1939Tp_MainFunction
    47: VP: The module calls EcuC_GetMetaData API's according to metadata
    48: VP: Check call to PduR_J1939TpCopyRxData
    49: VP: The module calls CanIf_Transmit with EOM for CMDT 1
    50: confirm the TP.CM_EOM packet
    51: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    52: Call J1939Tp_RxIndication to receive a TP.DT packet
    53: VP: The module calls EcuC_GetMetaData API's according to metadata
    54: Call J1939Tp_MainFunction
    55: VP: The module calls EcuC_GetMetaData API's according to metadata
    56: VP: Check call to PduR_J1939TpCopyRxData
    57: Call J1939Tp_MainFunction
    58: VP: The module calls EcuC_SetMetaData API's according to metadata configuration
    59: VP: The module calls CanIf_Transmit with EOM for CMDT2
    60: confirm the TP.CM_EOM packet
    61: Call J1939Tp_MainFunction
    62: VP: Check if module calls PduR_J1939TpRxIndication with E_OK
    63: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1402</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_RX_INDICATION_TEST_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(), with valid values and initialized module
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize EcuC_GetMetaDataCanId cand id
    03: Receive a TP.CM_RTS packet
    04: Check that module didn't report any DET
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: calls J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1403</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_RX_INDICATION_TEST_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(), with NULL_PTR and initialized module
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Receive a TP.CM_RTS packet
    03: Check that module call Det_ReportError
    04: Call the J1939Tp_Shutdown()

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00115.E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1404</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_RX_INDICATION_TEST_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>136</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test J1939Tp_RxIndication(), call with uninitialized module.
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: J1939Tp_RxIndication
    02: Check that module call Det_ReportError

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.DET.RXINDICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1405</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_RX_INDICATION_TEST_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>183</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(), with unknown pgn
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize EcuC_GetMetaDataCanId cand id
    03: Receive a TP.CM_RTS packet with unknown pgn
    04: VP: Check call of EcuC_GetMetaDataCanId
    05: VP: Check call of Det_ReportError
    06: calls J1939Tp_Shutdown 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1406</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_RX_INDICATION_TEST_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>242</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(), with Invalid length
    &lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize EcuC_GetMetaDataCanId cand id
    03: Receive a TP.CM_RTS packet with Invalid length
    04: VP: Check call of EcuC_GetMetaDataCanId
    05: Check that module call Det_ReportError
    06: call J1939Tp_MainFunction twice
    07: calls J1939Tp_Shutdown 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1407</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_RX_INDICATION_TEST_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>303</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(), with Invalid RxPduId
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize EcuC_GetMetaDataCanId cand id
    03: Receive a TP.CM_RTS packet with Invalid RxPduId
    04: VP: Check call of Det_ReportError
    05: call J1939Tp_MainFunction twice
    06: calls J1939Tp_Shutdown 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00188.RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1408</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_RX_INDICATION_TEST_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>363</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(),twice with valid values and initialized module
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize EcuC_GetMetaDataCanId cand id
    03: Receive a TP.CM_RTS packet
    04: VP: Check call of EcuC_GetMetaDataCanId
    05: Receive a TP.CM_RTS another packet
    06: VP: Check call of EcuC_GetMetaDataCanId
    07: VP: The module calls PduR_J1939TpRxIndication
    08: calls J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1409</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_RX_INDICATION_TEST_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>430</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(), for TP.CM_RTS with total message length equal zero
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize EcuC_GetMetaDataCanId cand id
    03: Receive a TP.CM_RTS packet
    04: VP: Check call of EcuC_GetMetaDataCanId
    05: VP: Check call of Det_ReportError
    06: calls J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_TMS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1410</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_RX_INDICATION_TEST_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>489</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_RxIndication(), for TP.CM_RTS with max packets equal zero
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize EcuC_GetMetaDataCanId cand id
    03: Receive a TP.CM_RTS packet
    04: VP: Check call of EcuC_GetMetaDataCanId
    05: VP: Check call of Det_ReportError
    06: calls J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_MNOP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1411</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SHUTDOWN_TEST_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Shutdown_Test/source/application/Tests.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_Shutdown(), for uninitialized module , it shall report DET error
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    1: Initialize J1939Tp
    2: Call the J1939Tp_Shutdown()
    3: Call the J1939Tp_Shutdown() again 
    4: Check that module call Det_ReportError

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.DET.SHUTDOWN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1412</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_BAM_TRSMT_ABORT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when PduR_J1939TpCopyTxData returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source = 20 ,destination = 255 and priority values
    04: Call J1939Tp_Transmit to Transmit BAM message with multiple frames
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: confirm the TP.CM_BAM packet 
    13: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls PduR_J1939TpTxConfirmation
    16: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CopyTxData.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1413</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_TRSMT_ABORT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>180</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after Tr timeout due to PduR_J1939TpCopyTxData keep returns BUFREQ_E_BUSY

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: confirm the TP.CM_BAM packet 
    13: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: Call J1939Tp_MainFunction till TR timeout
    16: Call J1939Tp_MainFunction
    17: The module calls Det_ReportError due to Timeout
    18: VP: The module calls PduR_J1939TpTxConfirmation
    19: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.BAM.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00121.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1414</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_TRSMT_ABORT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>344</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when J1939TpTxCmNPduAvailable not available 

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: set MetaData source and destination values  for second transmit
    13: Call J1939Tp_Transmit again
    14: VP: J1939Tp_Transmit return E_OK
    15: VP: The module calls EcuC_GetMetaDataSourceAddr
    16: VP: The module calls EcuC_GetMetaDataTargetAddr
    17: VP: The module calls EcuC_GetMetaDataPriority
    18: Call J1939Tp_MainFunction till TR timeout
    19: The module calls Det_ReportError due to Timeout
    20: Module Call PduR_J1939TpTxConfirmation
    21: Call J1939Tp_TxConfirmation after random delay with result E_NOT_OK
    22: Module Call PduR_J1939TpTxConfirmation
    23: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1415</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_TRSMT_ABORT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>529</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when J1939TpTxDtNPduAvailable not available
    in case two different BAM messages with different SA are requested

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit for the first transmission
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067):
        The module calls CanIf_Transmit with following arguments:
        Pdu Id: 100
        Length: 8
        Payload:
        Byte 0: 0x11 = Identifier for BAM_CM
        Byte 1: 0x14 = Message size of PG (LSB)
        Byte 2: 0x00 = Message size of PG (MSB)
        Byte 3: 0x03 = total number of packets
        Byte 4: 0x03 = total number of packets in response to one CTS
        Byte 5: 0x00 = Parameter group number (LSB)
        Byte 6: 0xfe = Parameter group number
        Byte 7: 0x00 = Parameter group number (MSB)
    12: confirm the TP.BAM_CM packet for the first transmission
    13: set MetaData source and destination values  for second transmit 
    14: Call J1939Tp_Transmit again for the second transmission
    15: VP: J1939Tp_Transmit return E_OK
    16: VP: The module calls EcuC_GetMetaDataSourceAddr
    17: VP: The module calls EcuC_GetMetaDataTargetAddr
    18: VP: The module calls EcuC_GetMetaDataPriority
    19: Call J1939Tp_MainFunction
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit for the second transmission
    22: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    23: VP: the module calls PduR_J1939TpCopyTxData to get new data 
    24: VP: The module calls EcuC_SetMetaDataCanId
    25: VP: The module calls CanIf_Transmit first transmission
    26: confirm the TP.BAM_CM packet
    27: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    28: Call J1939Tp_MainFunction till TR timeout
    29: The module calls Det_ReportError due to Timeout
    30: Module Call PduR_J1939TpTxConfirmation
    31: Module Call PduR_J1939TpTxConfirmation
    32: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00032.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1416</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_TRSMT_ABORT_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>773</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when CanIf_Transmit returns
    E_NOT_OK for TP_CM_BAM Frame.

Test Object: 
    TP.CM_BAM

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source = 20 ,destination = 255 and priority and CanIf_Transmit return values
    04: Call J1939Tp_Transmit to Transmit BAM message with multiple frames
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    13: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1417</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_TRSMT_ABORT_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>905</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when CanIf_Transmit returns
    E_NOT_OK for Data Frame in BAM Transmission.

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source = 20 ,destination = 255 and priority values
    04: Call J1939Tp_Transmit to Transmit BAM message with multiple frames
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    13 : Set CanIf_Transmit return value to E_NOT_OK
    14: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    15: VP: the module calls PduR_J1939TpCopyTxData to get new data
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit to transmit data
    18: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    19: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1418</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_BAM_CANCELTRANSMIT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_CancelTransmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks J1939Tp_CancelTransmit with valid TxSduId  after the last DT frame sent  

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: confirm the TP.CM_BAM packet 
    13: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls EcuC_SetMetaDataCanId
    16: VP: The module calls CanIf_Transmit
    17: confirm the TP.DT packet
    18: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    19: VP: the module calls PduR_J1939TpCopyTxData to get new data
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.DT packet
    23: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    24: VP: the module calls PduR_J1939TpCopyTxData to get new data
    25: VP: The module calls EcuC_SetMetaDataCanId
    26: VP: The module calls CanIf_Transmit
    27: confirm the TP.DT packet
    28: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    29: VP: The module calls J1939Tp_CancelTransmit 
    30: VP: The module calls PduR_J1939TpTxConfirmation
    31: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00203.Transmitted.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1419</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_CANCELTRANSMIT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_CancelTransmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>254</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks J1939Tp_CancelTransmit with valid TxSduId  before the last DT frame sent 

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: confirm the TP.CM_BAM packet 
    13: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls EcuC_SetMetaDataCanId
    16: VP: The module calls CanIf_Transmit
    17: confirm the TP.DT packet
    18: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    19: VP: the module calls PduR_J1939TpCopyTxData to get new data
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.DT packet
    23: Call J1939Tp_CancelTransmit to cancel transmission
    24: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    25: VP: The module calls PduR_J1939TpTxConfirmation
    26: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00121.tbammin</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CancelTransmit.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1420</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_CANCELTRANSMIT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_CancelTransmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>453</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks J1939Tp_CancelTransmit with invalid TxSduId 

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: confirm the TP.CM_BAM packet 
    13: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls EcuC_SetMetaDataCanId
    16: VP: The module calls CanIf_Transmit
    17: confirm the TP.DT packet
    18: Call J1939Tp_CancelTransmit with invalid TxSduId
    19: The module calls Det_ReportError due to invalid RxSduId 
    20: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    21: VP: the module calls PduR_J1939TpCopyTxData to get new data
    22: VP: The module calls EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: confirm the TP.DT packet
    25: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    26: VP: the module calls PduR_J1939TpCopyTxData to get new data
    27: VP: The module calls EcuC_SetMetaDataCanId
    28: VP: The module calls CanIf_Transmit
    29: confirm the TP.DT packet
    30: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    31: VP: The module calls PduR_J1939TpTxConfirmation
    32: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00203.TxPduId.invalid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1421</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_FD_AssuranceData_Test/source/application/Tests.c</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of broadcast transmission in case of FD Channel

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK
    05: Call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit
    07: confirm the TP.CM_BAM packet
    08: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    09: VP: the module calls PduR_J1939TpCopyTxData to get new data
    10: VP: The module calls CanIf_Transmit to transmit 15 bytes of DT frame and the padding
    11: confirm the TP.DT packet
    12: Call J1939Tp_MainFunction till tbammin time elapse to send EOMS frame
    13: Set the PduR_J1939TpCopyTxData return to BUFREQ_E_BUSY
    14: VP: the module calls PduR_J1939TpCopyTxData trying to Assurance Data
    15: Set the PduR_J1939TpCopyTxData return to BUFREQ_OK
    16: VP: the module calls PduR_J1939TpCopyTxData to get Assurance Data
    17: VP: The module calls CanIf_Transmit to send EOMS
    18: confirm the EOMS packet
    19: VP: The module calls PduR_J1939TpTxConfirmation
    20: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.BAMTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.BAM.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.Initiation.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1422</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_FD_AssuranceData_Test/source/application/Tests.c</sourcefile>
      <sourceline>218</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of broadcast transmission in case of FD Channel

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK
    05: Call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit
    07: confirm the TP.CM_BAM packet
    08: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    09: VP: the module calls PduR_J1939TpCopyTxData to get new data
    10: VP: The module calls CanIf_Transmit to transmit 15 bytes of DT frame and the padding
    11: confirm the TP.DT packet
    12: Call J1939Tp_MainFunction till tbammin time elapse to send EOMS frame
    13: Set the PduR_J1939TpCopyTxData return to BUFREQ_E_NOT_OK
    14: VP: the module calls PduR_J1939TpCopyTxData trying to Assurance Data
    15: VP: The module calls CanIf_Transmit to send Abort message
    16: confirm the CM_ABORT packet
    17: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    18: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.BAMTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.BAM.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.Initiation.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1423</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_FD_ASSURANCE_DATA_TRSMT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_FD_AssuranceData_Test/source/application/Tests.c</sourcefile>
      <sourceline>385</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of broadcast transmission in case of FD Channel

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK
    05: Call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit
    07: confirm the TP.CM_BAM packet
    08: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    09: VP: the module calls PduR_J1939TpCopyTxData to get new data
    10: VP: The module calls CanIf_Transmit to transmit 15 bytes of DT frame and the padding
    11: confirm the TP.DT packet
    12: Call J1939Tp_MainFunction till tbammin time elapse to send EOMS frame
    13: Set the PduR_J1939TpCopyTxData return to BUFREQ_E_BUSY
    14: Wait for Tr to elapse
    15: VP: the module calls PduR_J1939TpCopyTxData trying to Assurance Data
    16: VP: The module calls Det_ReportError to report J1939TP_E_TIMEOUT_TR
    17: VP: The module calls CanIf_Transmit to send Abort message
    18: confirm the Abort packet
    19: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    20: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.BAMTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.BAM.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.Initiation.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1424</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_BAM_FD_CANCELTRANSMIT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_FD_CancelTransmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks J1939Tp_CancelTransmit with valid TxSduId  after the last DT frame and EOMS are sent in case of CanFD channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 70 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: confirm the TP.CM_BAM packet 
    13: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls EcuC_SetMetaDataCanId
    16: VP: The module calls CanIf_Transmit
    17: confirm the TP.DT packet
    18: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    19: VP: the module calls PduR_J1939TpCopyTxData to get new data
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.DT packet
    23: Call J1939Tp_MainFunction till tbammin time elapse to send EOMS frame
    24: VP: the module calls PduR_J1939TpCopyTxData to get new data
    25: VP: The module calls EcuC_SetMetaDataCanId
    26: VP: The module calls CanIf_Transmit
    27: Call J1939Tp_MainFunction till tbammin time elapse
    28: The module calls J1939Tp_CancelTransmit
    29: VP: The module calls PduR_J1939TpTxConfirmation
    30: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00203.Transmitted.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1425</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_FD_CANCELTRANSMIT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_FD_CancelTransmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>287</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks J1939Tp_CancelTransmit with valid TxSduId  before the last DT frame sent in case of CanFD channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 13 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    13: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls EcuC_SetMetaDataCanId
    16: VP: The module calls CanIf_Transmit
    17: confirm the TP.DT packet
    18: Call J1939Tp_CancelTransmit
    19: Call J1939Tp_MainFunction to send Connection abort frame
    20: VP: The module calls EcuC_SetMetaDataCanId before sending Connection abort frame
    21: VP: The module calls CanIf_Transmit to send Connection abort frame
    22: confirm the TP.CM_BAM packet
    23: VP: The module calls PduR_J1939TpTxConfirmation
    24: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00121.tbammin</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CancelTransmit.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1426</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_FD_CANCELTRANSMIT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_FD_CancelTransmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>485</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks J1939Tp_CancelTransmit with invalid TxSduId 

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 121 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: confirm the TP.CM_BAM packet 
    13: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls EcuC_SetMetaDataCanId
    16: VP: The module calls CanIf_Transmit
    17: confirm the TP.DT packet
    18: Call J1939Tp_CancelTransmit with invalid TxSduId
    19: The module calls Det_ReportError due to invalid RxSduId 
    20: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    21: VP: the module calls PduR_J1939TpCopyTxData to get new data
    22: VP: The module calls EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: confirm the TP.DT packet
    25: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    26: VP: the module calls PduR_J1939TpCopyTxData to get new data
    27: VP: The module calls EcuC_SetMetaDataCanId
    28: VP: The module calls CanIf_Transmit
    29: confirm the TP.DT packet
    30: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    31: VP: The module calls EcuC_SetMetaDataCanId and CanIf_Transmit to send EOMS
	32: confirm the TP.DT packet
	33: VP: The module calls PduR_J1939TpTxConfirmation
    34: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00203.TxPduId.invalid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1427</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_BAM_FD_TRSMT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_FD_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>110</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of broadcast transmission in case of FD Channel

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    09: VP: The module calls CanIf_Transmit
    10: confirm the TP.CM_BAM packet
    11: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    12: VP: the module calls PduR_J1939TpCopyTxData to get new data
    13: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    14: VP: The module calls CanIf_Transmit
    15: confirm the TP.DT packet
    16: Call J1939Tp_MainFunction till tbammin time elapse to send EOMS frame
    17: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration to send EOMS
    18: VP: The module calls CanIf_Transmit to send EOMS
    19: confirm the TP.CM packet
    20: VP: The module calls PduR_J1939TpTxConfirmation
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.DT.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.EOMS.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1428</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_FD_TRSMT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_FD_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>350</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of CanFD broadcast transmission with data length less than 60 bytes

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 


Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs - Prepare the PduR stub to send 21 bytes of data
      03: set MetaData source ,destination and priority values according to metadata configuration
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
      07: Call J1939Tp_MainFunction
      08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      09: VP: The module calls CanIf_Transmit
      10: confirm the TP.CM_BAM packet
      11: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
      12: VP: the module calls PduR_J1939TpCopyTxData to get new data
      13: VP: the module calls PduR_J1939TpCopyTxData to get new data
      14: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      15: VP: The module calls CanIf_Transmit
      16: confirm the TP.DT packet
      17: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
      18: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration to send EOMS
      19: VP: The module calls CanIf_Transmit to send EOMS
      20: confirm the TP.CM (EOMS) packet
      21: Call J1939Tp_MainFunction
      22: VP: The module calls PduR_J1939TpTxConfirmation
      23: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.DT.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.EOMS.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1429</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_FD_TRSMT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_FD_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>576</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of broadcast transmission with data length of 1785 Bytes

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs - Prepare the PduR stub to send 1785 bytes of data
      03: set MetaData source ,destination and priority values according to metadata configuration
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
      07: Call J1939Tp_MainFunction
      08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      09: VP: The module calls CanIf_Transmit
      10: Confirm the TP.CM_BAM packet with wrong NPduId
      11: Call J1939Tp_MainFunction
      12: VP: Tx_Confirmation with invalid NPduId is dropped
      13: Confirm the TP.CM_BAM packet
      14: Loop to transmit 255 DT frames as 1785/7 is 255 frames
      15: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
      16: Call J1939Tp_MainFunction
      17: VP: the module calls PduR_J1939TpCopyTxData to get new data
      18: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      19: VP: The module calls CanIf_Transmit
      20: confirm the TP.DT packet
      21: Call J1939Tp_MainFunction till tbammin time elapse to send  the last data frame
      22: Call J1939Tp_MainFunction
      23: VP: the module calls PduR_J1939TpCopyTxData to get new data
      24: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      25: VP: The module calls CanIf_Transmit
      26: confirm the TP.DT packet
      27: Call J1939Tp_MainFunction to send EOMS frame
      28: VP: The module calls EcuC_SetMetaDataCanId and CanIf_Transmit to send EOMS
      29: confirm the TP.CM packet
      30: Call J1939Tp_MainFunction
      31: VP: The module calls PduR_J1939TpTxConfirmation
      32: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.DT.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.EOMS.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1430</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_BAM_Main_Longer_25ms</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_Main_25ms_Test/source/application/Tests.c</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of broadcast transmission 

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK 
    05: Call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit
    07: confirm the TP.CM_BAM packet
    08: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    09: VP: the module calls PduR_J1939TpCopyTxData to get new data
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.DT packet
    12: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    13: VP: the module calls PduR_J1939TpCopyTxData to get new data
    14: VP: The module calls CanIf_Transmit
    15: confirm the TP.DT packet
    16: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    17: VP: the module calls PduR_J1939TpCopyTxData to get new data
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
    20: Call J1939Tp_MainFunction
    21: VP: The module calls PduR_J1939TpTxConfirmation
    22: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.BAMTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.BAM.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1431</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_Main_Rx_Abort_Idle</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_Main_25ms_Test/source/application/Tests.c</sourcefile>
      <sourceline>215</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks that receiving TP.Conn_Abort when nsdu is idle is ignored without notification to the upper layer, and BAM transmission will happen.

Test Object: 
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Call J1939Tp_RxIndication for receiving conenction abort. 
    03: VP: Check trace empty to conclude that unexpected Abort frame is ignored 
    05: Call J1939Tp_Transmit 
    06: VP: J1939Tp_Transmit return E_OK 
    07: Call J1939Tp_MainFunction 
    08: VP: The module calls CanIf_Transmit 
    09: confirm the TP.CM_BAM packet 
    10: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    11: VP: the module calls PduR_J1939TpCopyTxData to get new data 
    12: VP: The module calls CanIf_Transmit 
    13: confirm the TP.DT packet 
    14: Call J1939Tp_MainFunction
    15: VP: The module calls PduR_J1939TpTxConfirmation 
    16: shutdown module 

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1432</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_Main_Rx_CM_8_Bytes</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_Main_25ms_Test/source/application/Tests.c</sourcefile>
      <sourceline>349</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks receiving eight bytes connection abort CM on classical Tx channel and CanFd is enabled on another channel. This abort should be ignored as no established connection.

Test Object: 
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Call J1939Tp_RxIndication for receiving conenction abort. 
    03: Ignore the abort as no established connection exist by Calling stack empty check 
    05: Call J1939Tp_Transmit 
    06: VP: J1939Tp_Transmit return E_OK 
    07: Call J1939Tp_MainFunction 
    08: VP: The module calls CanIf_Transmit 
    09: confirm the TP.CM_BAM packet 
    10: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    11: VP: the module calls PduR_J1939TpCopyTxData to get new data 
    12: VP: The module calls CanIf_Transmit 
    13: confirm the TP.DT packet 
    14: Call J1939Tp_MainFunction
    15: VP: The module calls PduR_J1939TpTxConfirmation 
    16: shutdown module 

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1433</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_BAM_TRSMT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>102</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of broadcast transmission, and verify that Source address used during transmission is from MetaData when its configured.
    when no MetaData, source address is used from channel configurations. 

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    09: VP: The module calls CanIf_Transmit
    10: confirm the TP.CM_BAM packet
    11: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    12: VP: the module calls PduR_J1939TpCopyTxData to get new data
    13: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    14: VP: The module calls CanIf_Transmit
    15: confirm the TP.DT packet
    16: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    17: VP: the module calls PduR_J1939TpCopyTxData to get new data
    18: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.DT packet
    21: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    22: VP: the module calls PduR_J1939TpCopyTxData to get new data
    23: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    24: VP: The module calls CanIf_Transmit
    25: confirm the TP.DT packet
    26: Call J1939Tp_MainFunction
    27: VP: The module calls PduR_J1939TpTxConfirmation
    28: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.BAMTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.BAM.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1434</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_TRSMT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>342</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of broadcast transmission with data length multiple of 7, and verify that Source address used during transmission is from MetaData when its configured.
    when no MetaData, source address is used from channel configurations. 

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 


Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs - Prepare the PduR stub to send 21 bytes of data
      03: set MetaData source ,destination and priority values according to metadata configuration
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
      07: Call J1939Tp_MainFunction
      08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      09: VP: The module calls CanIf_Transmit
      10: confirm the TP.CM_BAM packet
      11: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
      12: VP: the module calls PduR_J1939TpCopyTxData to get new data
      13: VP: the module calls PduR_J1939TpCopyTxData to get new data
      14: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      15: VP: The module calls CanIf_Transmit
      16: confirm the TP.DT packet
      17: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
      18: VP: the module calls PduR_J1939TpCopyTxData to get new data
      19: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      20: VP: The module calls CanIf_Transmit
      21: confirm the TP.DT packet
      22: Set PduR_J1939TpCopyTxData return value to invalid intentionally for C1-Coverage
      23: Set back the valid return value to PduR_J1939TpCopyTxData
      24: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
      25: VP: the module calls PduR_J1939TpCopyTxData to get new data
      26: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      27: VP: The module calls CanIf_Transmit
      28: confirm the TP.DT packet
      29: Call J1939Tp_MainFunction
      30: VP: The module calls PduR_J1939TpTxConfirmation
      31: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1435</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_TRSMT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>584</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of broadcast transmission with data length of 1785 Bytes, and verify that Source address used during transmission is from MetaData when its configured.
    when no MetaData, source address is used from channel configurations. 

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs - Prepare the PduR stub to send 1785 bytes of data
      03: set MetaData source ,destination and priority values according to metadata configuration
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
      07: Call J1939Tp_MainFunction
      08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      09: VP: The module calls CanIf_Transmit
      10: Confirm the TP.CM_BAM packet with wrong NPduId
      11: Call J1939Tp_MainFunction
      12: VP: Tx_Confirmation with invalid NPduId is dropped
      13: Confirm the TP.CM_BAM packet
      14: Loop to transmit 255 DT frames as 1785/7 is 255 frames
      15: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
      16: Call J1939Tp_MainFunction
      17: VP: the module calls PduR_J1939TpCopyTxData to get new data
      18: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      19: VP: The module calls CanIf_Transmit
      20: confirm the TP.DT packet
      21: Call J1939Tp_MainFunction
      22: VP: The module calls PduR_J1939TpTxConfirmation
      23: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1436</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_BAM_TRSMT_SAME_METADATA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_Test_MultiSaDa/source/application/Tests.c.m4</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the queueing mechanism for a transmission with the same SA/DA on different Nsdu. 
    This test checks the handling of broadcast transmission, and verify that Source address used during transmission is from MetaData when its configured.
    when no MetaData, source address is used from channel configurations. 

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit for first NSDU
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_Transmit for second NSDU
    08: VP: J1939Tp_Transmit return E_OK for the second message. It is queued up to be sent after first transmission is done 
    09: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    10: Call J1939Tp_MainFunction
    11: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    12: VP: The module calls CanIf_Transmit
    13: confirm the TP.CM_BAM packet
    14: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    15: VP: the module calls PduR_J1939TpCopyTxData to get new data
    16: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    17: VP: The module calls CanIf_Transmit
    18: confirm the TP.DT packet
    19: Call J1939Tp_MainFunction untill tbammin time elapse to send data frame
    20: VP: the module calls PduR_J1939TpCopyTxData to get new data 
    21: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration 
    22: VP: The module calls CanIf_Transmit 
    23: confirm the TP.DT packet 
    24: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    25: VP: the module calls PduR_J1939TpCopyTxData to get new data 
    26: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration 
    27: VP: The module calls CanIf_Transmit 
    28: confirm the last TP.DT packet 
    29: Call J1939Tp_MainFunction to process the pending transmission
    30: VP: The module calls PduR_J1939TpTxConfirmation 
        Tx Confirmation is called for the first Nsdu, on reinit of the first NSDU, the second NSDU is moved from PENDING state 
        to original state, making it a valid message that will be cought by the main function 
        Transmission process is repeaded for the second NSDU
    31: confirm the TP.CM_BAM packet of the second NSDU
    32: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    33: VP: the module calls PduR_J1939TpCopyTxData to get new data 
    the function call itself, ... 
    34: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration 
    35: VP: The module calls CanIf_Transmit 
    36: confirm the TP.DT packet 
    37: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    38: VP: the module calls PduR_J1939TpCopyTxData to get new data 
    39: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration 
    40: VP: The module calls CanIf_Transmit 
    41: confirm the TP.DT packet 
    42: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    43: VP: the module calls PduR_J1939TpCopyTxData to get new data 
    44: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration 
    45: VP: The module calls CanIf_Transmit 
    46: confirm the TP.DT packet 
    47: Call J1939Tp_MainFunction
    48: VP: The module calls PduR_J1939TpTxConfirmation to indicate the end of the BAM transmission

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.BAMTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.BAM.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1437</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_TRSMT_SAME_METADATA_DIFF_CHANNEL</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_Test_MultiSaDa/source/application/Tests.c.m4</sourcefile>
      <sourceline>385</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the queueing mechanism for a transmission with the same SA/DA on different Nsdu on different channels,
    The objective of this test is validate that J1939Tp module will check the avabilablity of pending requests and make sure that
    there is no ongoing connection on this channel before moving the nsud from pending state to ongoing state. 

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    101:Sending first request
    04: Call J1939Tp_Transmit for first NSDU request (NsduId = 0) on channel #0
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_MainFunction to process the first request
    08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    09: VP: The module calls CanIf_Transmit of first request
    10: confirm the TP.CM_BAM packet for Nsdu 0 on Ch 0
    11: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    12: VP: the module calls PduR_J1939TpCopyTxData to get new data
    13: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    14: VP: The module calls CanIf_Transmit for DT message
    15: confirm the TP.DT packet
    16: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    17: VP: the module calls PduR_J1939TpCopyTxData to get new data
    18: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    19: VP: The module calls CanIf_Transmit
    20: Call J1939Tp_Transmit for second NSDU (NsduId = 2, ch2)
    21: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    22: Call J1939Tp_MainFunction to process second request (NsduId = 2 , Ch 2)
    23: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    24: VP: The module calls CanIf_Transmit
    25: confirm the TP.CM_BAM packet
    26: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    27: VP: the module calls PduR_J1939TpCopyTxData to get new data
    28: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    29: VP: The module calls CanIf_Transmit
    30: confirm the TP.DT packet
    31: confirm the TP.DT packet of Nsdu 0 (assumed it received lately to make another connection on another channel still open)
    32:Check PduR confirmation for NSDU 0 Ch 0
    33: Call J1939Tp_Transmit for second NSDU (NsduId = 4, ch2), will be queued as Ch 2 has ongoing connection
    34: VP: J1939Tp_Transmit return E_OK
    35: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    36: Call main to make sure that there is no new connection established on channel 2
    37: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    38: VP: the module calls PduR_J1939TpCopyTxData to get new data of Nsdu = 2 as still is ongoing
    39: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    40: VP: The module calls CanIf_Transmit
    41: confirm the TP.DT packet for Nsdu 2 ch 2
    42: Call main to check PduR confirmation and Call Tx_init internal function and process pending requests on this channel
    43:Call main function to Process request 3 (Nsdu = 4, Ch 2)
    44: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    45: VP: The module calls CanIf_Transmit
    46: confirm the TP.CM_BAM packet of the Third NSDU
    47: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    48: VP: the module calls PduR_J1939TpCopyTxData to get new data
    49: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    50: VP: The module calls CanIf_Transmit
    51: confirm the TP.DT packet
    52: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    53: VP: the module calls PduR_J1939TpCopyTxData to get new data
    54: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    55: VP: The module calls CanIf_Transmit
    56: confirm the TP.DT packet
    57: Call J1939Tp_MainFunction to get PduR Confirmation
    58: VP: The module calls PduR_J1939TpTxConfirmation to indicate the end of the BAM transmission
    59: Call main function to check there is no still ongoing connection on all channels and all requests has been processed Successfully
    60: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.BAMTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.BAM.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1438</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_TRSMT_SAME_METADATA_MULTI_NSDU_PENDING</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_BAM_Test_MultiSaDa/source/application/Tests.c.m4</sourcefile>
      <sourceline>800</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the queueing mechanism for a transmission more than one Nsdu on same channel with same SR/DA. 

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    101:Sending first request
    04: Call J1939Tp_Transmit for first NSDU request (NsduId = 2) on channel #2
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_MainFunction to process the first request
    08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    09: VP: The module calls CanIf_Transmit of first request
    10: confirm the TP.CM_BAM packet for Nsdu 2 on Ch 2
    11: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    12: VP: the module calls PduR_J1939TpCopyTxData to get new data
    13: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    14: VP: The module calls CanIf_Transmit for DT message
    15: confirm the TP.DT packet
    16: Call J1939Tp_Transmit for second NSDU (NsduId = 5, ch 2)
    17: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    18: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    19: VP: the module calls PduR_J1939TpCopyTxData to get new data
    20: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    21: VP: The module calls CanIf_Transmit
    22: Call J1939Tp_Transmit for third NSDU (NsduId = 4, ch2), will be queued as Ch 2 has ongoing connection
    23: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    24: Call main many time to make sure that there is no new connection established while another request on same channel still ongoing
    25: confirm the TP.DT packet Nsdu 2 ch 2
    26: Call main to check PduR confirmation and Call Tx_init internal function and process pending requests on this channel
    27:Call main function to Process request 2 (Nsdu = 4, Ch 2) because the J1939Tp module serve pending requests in order
    28: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    29: VP: The module calls CanIf_Transmit
    30: confirm the TP.CM_BAM packet
    31: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    32: VP: the module calls PduR_J1939TpCopyTxData to get new data
    33: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    34: VP: The module calls CanIf_Transmit
    35: confirm the TP.DT packet
    36: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    37: VP: the module calls PduR_J1939TpCopyTxData to get new data 
    38: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    39: VP: The module calls CanIf_Transmit
    40: confirm the TP.DT packet for Nsdu 4 ch 2
    41: Call J1939Tp_MainFunction to get PduR Confirmation*
    42: VP: The module calls PduR_J1939TpTxConfirmation to indicate the end of the BAM transmission
    43:Call main function to Process request 3 (Nsdu = 5, Ch 2)
    44: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    45: VP: The module calls CanIf_Transmit
    46: confirm the TP.CM_BAM packet of the Third NSDU
    47: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    48: VP: the module calls PduR_J1939TpCopyTxData to get new data
    49: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    50: VP: The module calls CanIf_Transmit
    51: confirm the TP.DT packet
    52: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    53: VP: the module calls PduR_J1939TpCopyTxData to get new data
    54: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    55: VP: The module calls CanIf_Transmit
    56: confirm the TP.DT packet
    57: Call J1939Tp_MainFunction to get PduR Confirmation
    58: VP: The module calls PduR_J1939TpTxConfirmation to indicate the end of the BAM transmission
    59: Call main function to check there is no still ongoing connection on all channels and all requests has been processed Successfully
    60: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.BAMTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.BAM.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1439</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after receiving wrong sequence number in CM_CTS

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit
    18: confirm the TP.Conn_Abort packet
    19: Call J1939Tp_MainFunction two times
    20: Call PduR_J1939TpTxConfirmation
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.MaxRetransmitLimitReached</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1440</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>216</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when PduR_J1939TpCopyTxData returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: Call J1939Tp_MainFunction
    18: VP: The module calls EcuC_SetMetaDataCanId 
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.Conn_Abort packet
    21: Call J1939Tp_MainFunction
    22: Module Call PduR_J1939TpTxConfirmation
    23: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CopyTxData.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00097.Transmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1441</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>407</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after Tr timeout due to PduR_J1939TpCopyTxData keep returns BUFREQ_E_BUSY

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: The module calls CanIf_Transmit 
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: Call J1939Tp_MainFunction till TR timeout
    18: Call J1939Tp_MainFunction
    19: The module calls Det_ReportError due to Timeout
    20: Call J1939Tp_MainFunction
    21: VP: The module calls EcuC_SetMetaDataCanId
    22: VP: The module calls CanIf_Transmit 
    23: confirm the TP.Conn_Abort packet
    24: Call J1939Tp_MainFunction
    25: Module Call PduR_J1939TpTxConfirmation
    26: shutdown module 

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00100.Tx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1442</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>615</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after recieving TP.Conn_Abort after TP.CM_RTS transmission.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: Call PduR_J1939TpTxConfirmation
    17: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1443</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>764</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after receiving TP.Conn_Abort with invalid abort reason after TP.CM_RTS transmission.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.Conn_Abort packet with different PGN
    14: VP: J1939Tp module calls Det_ReportError for J1939TP_E_INVALID_PGN
    15: Call J1939Tp_MainFunction
    16: VP: Check trace empty to conclude that unexpected Abort frame is ignored
    17: Receive a TP.Conn_Abort packet
    18: VP: The module calls EcuC_SetMetaDataCanId
    19: Call J1939Tp_MainFunction
    20: Call PduR_J1939TpTxConfirmation
    21: module Call Det_ReportError
    22: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1444</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>946</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after receiving wrong sequence number in CM_CTS

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit
    18: confirm the TP.Conn_Abort packet
    19: Call J1939Tp_MainFunction
    20: Call PduR_J1939TpTxConfirmation
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1445</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1124</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after T4 timeout 

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction till T3 timeout
    16: VP: The module calls EcuC_SetMetaDataCanId 
    17: VP: The module calls CanIf_Transmit
    18: confirm the TP.Conn_Abort packet
    19: Call J1939Tp_MainFunction
    20: Module Call PduR_J1939TpTxConfirmation
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.MaxRetransmitLimitReached</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1446</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1308</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after T3 timeout before receiving EOM frame

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId 
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
      : repeat step from 15 to 19 two times to send all DT 
    20: Call J1939Tp_MainFunction till T3 passes
    21: VP: The module calls Det_ReportError
    22: Call J1939Tp_MainFunction
    23: VP: The module calls EcuC_SetMetaDataCanId
    24: VP: The module calls CanIf_Transmit
    25: confirm the TP.Conn_Abort packet
    26: Call J1939Tp_MainFunction
    27: Module Call PduR_J1939TpTxConfirmation
    28: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00100.Tx.T3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1447</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1548</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when J1939TpTxCmNPduAvailable not available 

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit 
    12: set MetaData source and destination values  for second transmit
    13: Call J1939Tp_Transmit again
    14: VP: J1939Tp_Transmit return E_OK
    15: VP: The module calls EcuC_GetMetaDataSourceAddr
    16: VP: The module calls EcuC_GetMetaDataTargetAddr
    17: VP: The module calls EcuC_GetMetaDataPriority
    18: Call J1939Tp_MainFunction till TR timeout
    19: The module calls Det_ReportError due to Timeout
    20: Module calls PduR_J1939TpTxConfirmation
    21: Call J1939Tp_MainFunction until J1939Tp_TxConfirmation is received
    22: Module calls PduR_J1939TpTxConfirmation
    23: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1448</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1735</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when J1939TpTxDtNPduAvailable not available 

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit 
    12: set MetaData source and destination values  for second transmit
    13: Call J1939Tp_Transmit again
    14: VP: J1939Tp_Transmit return E_OK
    15: VP: The module calls EcuC_GetMetaDataSourceAddr
    16: VP: The module calls EcuC_GetMetaDataTargetAddr
    17: VP: The module calls EcuC_GetMetaDataPriority
    18: Call J1939Tp_MainFunction
    19: confirm the TP.CM_RTS packet
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.CM_RTS packet
    23: Receive a TP.CM_CTS packet
    24: VP: The module calls EcuC_SetMetaDataCanId
    25: Call J1939Tp_MainFunction
    26: VP: the module calls PduR_J1939TpCopyTxData to get new data 
    27: VP: The module calls EcuC_SetMetaDataCanId
    28: VP: The module calls CanIf_Transmit
    29: Receive a TP.CM_CTS packet  for second NSdu
    30: VP: The module calls EcuC_SetMetaDataCanId
    31: Call J1939Tp_MainFunction till TR timeout
    32: The module calls Det_ReportError due to Timeout
    33: Module calls PduR_J1939TpTxConfirmation
    34: Call J1939Tp_MainFunction till J1939Tp_TxConfirmation is received with E_NOT_OK
    35: Module calls PduR_J1939TpTxConfirmation
    36: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1449</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1985</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when J1939TpTxDirectNPduAvailable not available

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls EcuC_SetMetaDataCanId
    12: set MetaData source and destination values for second transmit
    13: Call J1939Tp_Transmit again
    14: VP: J1939Tp_Transmit return E_OK
    15: Call J1939Tp_MainFunction
    16: Call J1939Tp_MainFunction till TR timeout
    17: The module calls Det_ReportError due to Timeout
    18: Module calls PduR_J1939TpTxConfirmation
    19: Call J1939Tp_MainFunction till J1939Tp_TxConfirmation is triggered with E_NOT_OK
    20: Module calls PduR_J1939TpTxConfirmation
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00032.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1450</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2141</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after Tr timeout when abort connection fail

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: The module calls Det_ReportError due to Timeout
    18: Call J1939Tp_MainFunction till TR timeout
    19: VP: The module calls EcuC_SetMetaDataCanId
    20: The module calls Det_ReportError due to Timeout
    21: Call J1939Tp_MainFunction two times
    22: Call PduR_J1939TpTxConfirmation
    23: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1451</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_13</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2339</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when PduR_J1939TpCopyTxData return BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: Module Call PduR_J1939TpTxConfirmation
    12: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00173.TransProtocol.CMDT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1452</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_14</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2452</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after T4 timeout 

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit 
    12: confirm the TP.CM_RTS packet
    13: Receive a wait cts packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction till TR timeout
    16: The module calls Det_ReportError due to Timeout
    17: Call J1939Tp_MainFunction
    18: VP: The module calls EcuC_SetMetaDataCanId
    19: VP: The module calls CanIf_Transmit 
    20: confirm the TP.Conn_Abort packet
    21: Call J1939Tp_MainFunction
    22: Module Call PduR_J1939TpTxConfirmation
    23: shutdown module 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00100.Tx.T4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1453</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_15</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2651</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks behavior of j1939Tp when a TP.CM_CTS is received while TP.DT messages are being transmitted, J1939Tp shall abort the connection 

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit 
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId 
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
    20: Receive a TP.CM_CTS packet
    21: VP: The module calls EcuC_SetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: The module calls EcuC_SetMetaDataCanId
    24: VP: The module calls CanIf_Transmit
    25: confirm the TP.Conn_Abort packet
    26: Call J1939Tp_MainFunction
    27: Module Call PduR_J1939TpTxConfirmation  
    28: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.UnexpectedCtsReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1454</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_16</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2869</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after recieving CM_CTS with No. of packets large than Maximum no. of packets in RTS

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_GetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: module Call Det_ReportError
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.Conn_Abort packet
    20: Call J1939Tp_MainFunction two times
    21: Call PduR_J1939TpTxConfirmation
    22: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_NPN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1455</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_17</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>3047</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after PduR_J1939TpCopyTxData return BUFREQ_E_NOT_OK while PduR_J1939TpCopyTxData is enabled

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK 
    05: Call J1939Tp_MainFunction
    06: VP: The module calls PduR_J1939TpCopyTxData
    07: Call J1939Tp_MainFunction till TR timeout
    08: Call J1939Tp_MainFunction
    09: The module calls Det_ReportError due to Timeout
    10: Call J1939Tp_MainFunction
    11: VP: The module calls EcuC_SetMetaDataCanId
    12: VP: The module calls CanIf_Transmit
    13: confirm the TP.Conn_Abort packet
    14: Call J1939Tp_MainFunction two times
    15: Call PduR_J1939TpTxConfirmation
    16: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.CMDTTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1456</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_18</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>3176</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after PduR_J1939TpCopyTxData return BUFREQ_E_BUSY while PduR_J1939TpCopyTxData is enabled

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK 
    05: Call J1939Tp_MainFunction
    06: VP: The module calls PduR_J1939TpCopyTxData
    07: VP: The module calls EcuC_SetMetaDataCanId
    08: VP: The module calls CanIf_Transmit
    09: confirm the TP.Conn_Abort packet
    10: Call J1939Tp_MainFunction two times
    11: Call PduR_J1939TpTxConfirmation
    12: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.CMDTTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1457</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_19</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>3317</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of CTS frame when No_of_packets in received CTS frame
    is greater than Maximum No_of_packets in RTS frame

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      03: set MetaData source ,destination and priority values
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaDataSourceAddr
      07: VP: The module calls EcuC_GetMetaDataTargetAddr
      08: VP: The module calls EcuC_GetMetaDataPriority
      09: Call J1939Tp_MainFunction
      10: VP: The module calls EcuC_SetMetaDataCanId
      11: VP: The module calls CanIf_Transmit
      12: VP: Check the RTS frame transmitted with Max Number of packet as 5
      13: confirm the TP.CM_RTS packet
      14: Set CTS with invalid NOP
      15: Receive a TP.CM_CTS packet
      16: VP: The module calls EcuC_SetMetaDataCanId
      17: Call J1939Tp_MainFunction
      18: VP: Check the module calls Det_ReportError with J1939TP_E_INVALID_NOP
      19: Module shall wait for T3 Timeout for valid CTS frame
      20: Call J1939Tp_MainFunction
      21: VP : Check that the module calls Det_ReportError due to T3-Timeout
      22: VP: The module calls EcuC_SetMetaDataCanId
      23: VP: The module calls CanIf_Transmit
      24: VP: The module Send Abort frame with abort reason J1939TP_TPCM_ABORT_REASON_TIMEOUT
      25: confirm the TP.CM packet
      26: Call J1939Tp_MainFunction two times
      27: Call PduR_J1939TpTxConfirmation
      28: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_NOP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1458</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_20</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>3527</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after receiving E_NOT_OK for
    CanIf_Transmit during TP_CM_RTS frame transmission.

Test Object: 
    TP.CM_RTS transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority and CanIf_Transmit return values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: VP: Check PduR_J1939TpTxConfirmation returns E_NOT_OK
    13: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1459</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_21</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>3657</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after receiving E_NOT_OK for
    CanIf_Transmit during Data frame transmission of a CMDT Connection.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Set E_NOT_OK to the return value of CanIf_Transmit
    16: Call J1939Tp_MainFunction
    17: VP: the module calls PduR_J1939TpCopyTxData to get new data
    18: VP: The module calls EcuC_SetMetaDataCanId
    19: VP: The module calls CanIf_Transmit
    20: VP: Check PduR_J1939TpTxConfirmation returns E_NOT_OK
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1460</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_ABORT_22</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>3826</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after receiving E_NOT_OK for
    CanIf_Transmit of Abort Frame.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Set E_NOT_OK to the return value of CanIf_Transmit
    16: Call J1939Tp_MainFunction
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: Call J1939Tp_MainFunction two times
    20: VP: Check if PduR_J1939TpTxConfirmation returns E_NOT_OK
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.MaxRetransmitLimitReached</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1461</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CONC_TRSMT_CMDT_BAM</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_BAM_Test/source/application/Tests.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of CMDT and BAM transmissions concurrently

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03 Call J1939Tp_Transmit with SA = 20 and DA = 255 with message length = 20
    04: VP: J1939Tp_Transmit return E_OK 
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls CanIf_Transmit to send TP.CM_BAM
    08: confirm the TP.CM_BAM packet
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls CanIf_Transmit to send the first data frame of the BAM message
    12: confirm the TP.DT packet
    13: Call J1939Tp_MainFunction
    14: Call J1939Tp_Transmit with SA = 20 and DA = 70 and length = 15
    15: VP: J1939Tp_Transmit return E_OK
    16: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    17: Call J1939Tp_MainFunction
    18: VP: the module calls PduR_J1939TpCopyTxData to get new data
    19: VP: The module calls CanIf_Transmit for the BAM
    20: VP: The module calls CanIf_Transmit the CM
    21: Call J1939Tp_MainFunction
    22: confirm the TP.DT packet of the BAM
    23: confirm the TP.DT wrongly again
    24: Call J1939Tp_MainFunction
    25: Receive a TP.CM_CTS packet
    26: confirm the TP.CM_RTS packet
    27: Call J1939Tp_MainFunction
    28: VP: the module calls PduR_J1939TpCopyTxData to get new data
    29: VP: The module calls CanIf_Transmit for the BAM
    30: confirm the TP.DT packet
    31: Call J1939Tp_MainFunction
    32: VP: The module calls PduR_J1939TpTxConfirmation for the BAM
    33: Receive a TP.CM_CTS_1 packet
    34: Call J1939Tp_MainFunction
    35: VP: the module calls PduR_J1939TpCopyTxData to get new data
    36: VP: The module calls CanIf_Transmit for the CMDT
    37: confirm the TP.DT packet
    38: Call J1939Tp_MainFunction
    39: VP: the module calls PduR_J1939TpCopyTxData to get new data
    40: VP: The module calls CanIf_Transmit for the CMDT
    41: confirm the TP.DT packet
    42: Call J1939Tp_MainFunction
    43: VP: the module calls PduR_J1939TpCopyTxData to get new data
    44: VP: The module calls CanIf_Transmit for the CMDT
    45: confirm the TP.DT packet
    46: Call J1939Tp_MainFunction
    47: Receive a TP.CM_EOM_1 packet
    48: Module Call PduR_J1939TpTxConfirmation for the CMDT
    49: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.Sa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1462</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TXCM_NPDUS_BUSY</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_BAM_Test/source/application/Tests.c</sourcefile>
      <sourceline>401</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: None.
Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit with SA = 20 and DA = 70 and length = 21
    04: VP: Check J1939Tp_Transmit return E_OK
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls CanIf_Transmit and check the CM_RTS transmitted
    08: Call J1939Tp_Transmit with SA = 20 and DA = 255 with message length = 20 for BAM
        before triggering the Tx Confirmation  for previous CMDT_RTS Frame.
    09: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    10: 10: Call J1939Tp_MainFunction in a loop to wait for the Tx confirmation of CMDT Transmission
    11: VP: The module calls CanIf_Transmit for the CM_BAM after the availability of Tx CM NPDU due to
        J1939Tp_TxConfirmation received with E_NOT_OK for the previous CMDT Transmission
    12: VP: Check module calls PduR_J1939TpTxConfirmation for the CMDT Connection
    13: VP: Check module calls PduR_J1939TpTxConfirmation for the BAM Connection as Tx Confirmation
        is triggered with E_NOT_OK for the BAM connection
    14: Set up the Metadata info for New connection and continue the same scenario vice-versa with
        first BAM and then CMDT connection
    15: Call J1939Tp_Transmit with SA = 20 and DA = 255 with message length = 20
    16: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    17: Call J1939Tp_MainFunction
    18: VP: The module calls CanIf_Transmit the CM_BAM
    19: Call J1939Tp_Transmit with SA = 20 and DA = 70 and length = 15
    20: VP: J1939Tp_Transmit return E_OK
    21: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    22: Call J1939Tp_MainFunction
    23: VP: Check module calls PduR_J1939TpTxConfirmation for the CMDT Connection
    24: VP: VP: The module calls CanIf_Transmit the CM_RTS
	25: Trigger J1939Tp_TxConfirmation with result E_NOT_OK for CM NPDU after a random delay
    26: VP: Check module calls PduR_J1939TpTxConfirmation for the BAM Connection
    27 : shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1463</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_CancelTransmit_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_CancelTransmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks J1939Tp_CancelTransmit with valid TxSduId  after receiving EOM frame

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067):
        The module calls CanIf_Transmit with following arguments:
        Pdu Id: 100
        Length: 8
        Payload:
        Byte 0: 0x10 = Identifier for RTS
        Byte 1: 0x14 = Message size of PG (LSB)
        Byte 2: 0x00 = Message size of PG (MSB)
        Byte 3: 0x03 = total number of packets
        Byte 4: 0x03 = total number of packets in response to one CTS
        Byte 5: 0x00 = Parameter group number (LSB)
        Byte 6: 0xfe = Parameter group number
        Byte 7: 0x00 = Parameter group number (MSB)
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId 
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
    : repeat step from 15 to 19 two times to send all DT 
    20: Receive a TP.CM_EOM packet
    21: Module Call EcuC_GetMetaDataCanId
    22: Module Call PduR_J1939TpTxConfirmation
    23: calls J1939Tp_CancelTransmit with valid TxSduId  after receiving EOM frame
    24: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00203.Transmitted.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1464</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_CancelTransmit_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_CancelTransmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>261</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks J1939Tp_CancelTransmit with valid TxSduId  before receiving EOM frame

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId 
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
    : repeat step from 15 to 19 two times to send all DT 
    20: 20:calls J1939Tp_CancelTransmit with valid TxSduId  after receiving EOM frame
    21: Call J1939Tp_MainFunction
    22: VP: The module calls EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: confirm the TP.Conn_Abort packet
    25: Call J1939Tp_MainFunction two times
    26: Module Call PduR_J1939TpTxConfirmation
    27: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CancelTransmit.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1465</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_CancelTransmit_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_CancelTransmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>475</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks J1939Tp_CancelTransmit with invalid TxSduId  before receiving EOM frame

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit 
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId 
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
    : repeat step from 15 to 19 two times to send all DT
    20 : Call J1939Tp_CancelTransmit with invalid TxSduId after the first transmit
    21: The module calls Det_ReportError due to invalid RxSduId
    22: Receive a TP.CM_EOM packet
    23: Module Call EcuC_GetMetaDataCanId
    24: Module Call PduR_J1939TpTxConfirmation	
    25: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00188.CancelTransmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1466</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_CancelTransmit_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_CancelTransmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>697</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test call J1939Tp_CancelTransmit() for uninitialized module .
    &lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    01: call J1939Tp_CancelTransmit
    02: Check that module call Det_ReportError

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.DET.CANCELTRANSMIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1467</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_CancelTransmit_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_CancelTransmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>735</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks J1939Tp_CancelTransmit with one valid TxSduId and other with Not active TxSduId.

Test Object: 
    Direct Transmission

Test Precondition: 
    -

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      03: set MetaData source ,destination and priority values
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaDataSourceAddr
      07: VP: The module calls EcuC_GetMetaDataTargetAddr
      08: VP: The module calls EcuC_GetMetaDataPriority
      09: Call J1939Tp_MainFunction
      10: VP: The module calls EcuC_SetMetaDataCanId
      11: VP: The module calls CanIf_Transmit
      12: confirm the TP.CM_RTS packet
      13: Receive a TP.CM_CTS packet
      14: VP: The module calls EcuC_SetMetaDataCanId
      15: Call J1939Tp_MainFunction
      16: VP: the module calls PduR_J1939TpCopyTxData to get new data
      17: VP: The module calls EcuC_SetMetaDataCanId
      18: VP: The module calls CanIf_Transmit
      19: confirm the TP.DT packet
      20: Call J1939Tp_CancelTransmit with NonActive TxSduId before receiving EOM frame
      21: VP: Check if J1939Tp_CancelTransmit returns E_NOT_OK
      22: Call J1939Tp_CancelTransmit with valid TxSduId before receiving EOM frame
      23: VP: Check if J1939Tp_CancelTransmit returns E_OK
      24: Call J1939Tp_MainFunction
      25: VP: The module calls EcuC_SetMetaDataCanId
      26: VP: The module calls CanIf_Transmit
      27: confirm the TP.Conn_Abort packet
      28: Call J1939Tp_MainFunction two times
      29: Module Call PduR_J1939TpTxConfirmation
      30: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00203.TxPduId.NotActive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1468</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Concurrent_Test/source/application/Tests.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of concurrent CMDT transmission over different channels

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit (on channel J1939TpTxChannel_NoMetaData ...) with SA = 20, DA = 70 and Length = 20
    04: VP: J1939Tp_Transmit return E_OK
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls CanIf_Transmit
    08: confirm the TP.CM_RTS packet
    09: Call J1939Tp_MainFunction
    10: Receive a TP.CM_CTS packet for SA = 20
    11: Call J1939Tp_MainFunction
    12: VP: the module calls PduR_J1939TpCopyTxData to get new data
    13: VP: The module calls CanIf_Transmit for SA = 20
    14: Call J1939Tp_Transmit (on channel J1939TpTxChannel_Sa ...) with SA = 20, DA = 70 and Length = 20
    15: VP: J1939Tp_Transmit return E_NOT_OK as SA/DA is ongoing on different channels 
    16: confirm the TP.DT packet
    17: Call J1939Tp_Transmit with SA = 10, DA = 70 and Length = 15
    18: VP: J1939Tp_Transmit return E_OK
    19: Call J1939Tp_MainFunction
    20: VP: the module calls PduR_J1939TpCopyTxData to get new data
    21: VP: The module calls CanIf_Transmit for RTS for SA = 10
    22: VP: the module calls PduR_J1939TpCopyTxData calculate for RTS
    23: VP: The module calls CanIf_Transmit for DT for SA = 20
    24: Call J1939Tp_MainFunction
    25: confirm the TP.DT packet
    26: confirm the TP.DT packet to make sure the second confirmation is discarded
    27: Call J1939Tp_MainFunction
    28: Receive a TP.CM_CTS packet
    29: confirm the TP.CM_RTS packet
    30: VP: the module calls PduR_J1939TpCopyTxData to get new data
    31: VP: The module calls CanIf_Transmit for SA = 20
    32: confirm the TP.DT packet
    33: Call J1939Tp_MainFunction
    34: Receive a TP.CM_CTS_1 packet
    35: Call J1939Tp_MainFunction
    36: VP: the module calls PduR_J1939TpCopyTxData to get new data
    37: VP: The module calls CanIf_Transmit for SA = 20
    38: confirm the TP.DT packet
    39: Receive a TP.CM_EOM packet
    40: VP: The module calls PduR_J1939TpTxConfirmation for SA = 20
    41: Call J1939Tp_MainFunction
    42: VP: the module calls PduR_J1939TpCopyTxData to get new data
    43: VP: The module calls CanIf_Transmit for SA = 10
    44: confirm the TP.DT packet
    45: Call J1939Tp_MainFunction
    46: VP: the module calls PduR_J1939TpCopyTxData to get new data
    47: VP: The module calls CanIf_Transmit for SA = 10
    48: confirm the TP.DT packet
    49: Call J1939Tp_MainFunction
    50: Receive a TP.CM_EOM_1 packet
    51: VP: The module calls PduR_J1939TpTxConfirmation for SA = 10
    52: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.Sa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1469</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Concurrent_Test/source/application/Tests.c</sourcefile>
      <sourceline>434</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of concurrent CMDT transmission over the same channel with multiple Nsdu 

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit with SA = 20, DA = 70 and Length = 20
    04: VP: J1939Tp_Transmit return E_OK
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls CanIf_Transmit
    08: confirm the TP.CM_RTS packet
    09: Call J1939Tp_MainFunction
    10: Receive a TP.CM_CTS packet for SA = 20
    11: Call J1939Tp_MainFunction
    12: VP: the module calls PduR_J1939TpCopyTxData to get new data
    13: VP: The module calls CanIf_Transmit for SA = 20
    14: Call J1939Tp_Transmit with SA = 20, DA = 70 and Length = 20 ...
    15: VP: J1939Tp_Transmit return E_NOT_OK as SA/DA is ongoing
    16: confirm the TP.DT packet
    17: Call J1939Tp_Transmit with SA = 10, DA = 70 and Length = 15
    18: VP: J1939Tp_Transmit return E_OK
    19: Call J1939Tp_MainFunction
    20: VP: the module calls PduR_J1939TpCopyTxData to get new data
    21: VP: The module calls CanIf_Transmit for RTS for SA = 10
    22: VP: The module calls CanIf_Transmit for DT for SA = 20
    23: Call J1939Tp_MainFunction
    24: confirm the TP.DT packet
    25: confirm the TP.DT packet to make sure the second confirmation is discarded
    26: Call J1939Tp_MainFunction
    27: Receive a TP.CM_CTS packet
    28: confirm the TP.CM_RTS packet
    29: VP: the module calls PduR_J1939TpCopyTxData to get new data
    30: VP: The module calls CanIf_Transmit for SA = 20
    31: confirm the TP.DT packet
    32: Call J1939Tp_MainFunction
    33: Receive a TP.CM_CTS_1 packet
    34: Call J1939Tp_MainFunction
    35: VP: the module calls PduR_J1939TpCopyTxData to get new data
    36: VP: The module calls CanIf_Transmit for SA = 20
    37: confirm the TP.DT packet
    38: Receive a TP.CM_EOM packet
    39: VP: The module calls PduR_J1939TpTxConfirmation for SA = 20
    40: Call J1939Tp_MainFunction
    41: VP: the module calls PduR_J1939TpCopyTxData to get new data
    42: VP: The module calls CanIf_Transmit for SA = 10
    43: confirm the TP.DT packet
    44: Call J1939Tp_MainFunction
    45: VP: the module calls PduR_J1939TpCopyTxData to get new data
    46: VP: The module calls CanIf_Transmit for SA = 10
    47: confirm the TP.DT packet
    48: Call J1939Tp_MainFunction
    49: Receive a TP.CM_EOM_1 packet
    50: VP: The module calls PduR_J1939TpTxConfirmation for SA = 10
    51: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.Sa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1470</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Concurrent_Test/source/application/Tests.c</sourcefile>
      <sourceline>800</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of CMDT and BAM transmission concurrently.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit for CMDT
    05: VP: J1939Tp_Transmit return E_OK for CMDT
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: set MetaData source ,destination and priority values according to metadata configuration
    10: Call J1939Tp_Transmit for BAM
    11: VP: J1939Tp_Transmit return E_OK for BAM
    12: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    13: VP: The module calls EcuC_GetMetaDataTargetAddr
    14: VP: The module calls EcuC_GetMetaDataPriority
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration EBSTUBS_TRACE_CHECK(PduR_J1939TpCopyTxData);
    17: VP: The module calls CanIf_Transmit
    18: confirm the TP.CM_RTS packet
    19: Call J1939Tp_MainFunction
    20: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    21: BAM Metadata Info with Da - 0xff
    22: VP: The module calls CanIf_Transmit
    23: confirm the TP.CM_BAM packet
    24: Call J1939Tp_MainFunction
    25: Receive a TP.CM_CTS packet
    26: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    27: Call J1939Tp_MainFunction
    28: VP: the module calls PduR_J1939TpCopyTxData to get new data
    29: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    30: VP: The module calls CanIf_Transmit
    31: confirm the TP.DT packet
    32: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    33: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    34: VP: The module calls CanIf_Transmit
    35: confirm the TP.DT packet
    36: Receive a TP.CM_EOM packet
    37: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    38: Module Call PduR_J1939TpTxConfirmation
    38: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    39: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    40: confirm the TP.DT packet
    41: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    42: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    43: confirm the TP.DT packet
    44: VP: The module calls PduR_J1939TpTxConfirmation
    45: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Tx.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Tx.Timer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1471</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM_Fast_Confirmation</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Concurrent_Test/source/application/Tests.c</sourcefile>
      <sourceline>1192</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of CMDT and BAM transmission concurrently with fast confirmatio is received within the call of CanIf_Transmit.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit for CMDT
    05: VP: J1939Tp_Transmit return E_OK for CMDT
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: set MetaData source ,destination and priority values according to metadata configuration
    10: Call J1939Tp_Transmit for BAM
    11: VP: J1939Tp_Transmit return E_OK for BAM
    12: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    13: VP: The module calls EcuC_GetMetaDataTargetAddr
    14: VP: The module calls EcuC_GetMetaDataPriority
    15: Call J1939Tp_MainFunction : as fast confiramtion is received for CMDT connection, CM_BAM is transmitted within the same mainfunction call
    16: VP: The module calls EcuC_SetMetaDataCanId for CMDT connection according to metadata configuration 
    17: VP: The module calls CanIf_Transmit to send RTS, J1939Tp_TxConfirmation will be called within CanIf_Transmit to simulate fast confirmation TP.CM_RTS
    18: VP: The module calls EcuC_SetMetaDataCanId for BAM connection according to metadata configuration 
    19: BAM Metadata Info with Da - 0xff
    20: VP: The module calls CanIf_Transmit to send CM_BAM , J1939Tp_TxConfirmation will be called within CanIf_Transmit to simulate fast confirmation TP.CM_BAM  
    21: Call J1939Tp_MainFunction 
    22: Receive a TP.CM_CTS packet
    23: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    24: Call J1939Tp_MainFunction
    25: VP: the module calls PduR_J1939TpCopyTxData to get new data
    26: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    27: VP: The module calls CanIf_Transmit
    28: confirm the TP.DT packet
    29: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    30: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    31: VP: The module calls CanIf_Transmit
    32: confirm the TP.DT packet
    33: Receive a TP.CM_EOM packet
    34: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    35: Module Call PduR_J1939TpTxConfirmation
    36: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    37: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    38: confirm the TP.DT packet
    39: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    40: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    41: confirm the TP.DT packet
    42: VP: The module calls PduR_J1939TpTxConfirmation
    43: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Tx.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Tx.Timer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1472</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CONC_TRSMT_TWO_CMDT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Concurrent_Test/source/application/Tests.c</sourcefile>
      <sourceline>1597</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of two CMDT transmission concurrently.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK for CMDT
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: set MetaData source ,destination and priority values according to metadata configuration
    10: Call J1939Tp_Transmit
    11: VP: J1939Tp_Transmit return E_OK for BAM
    12: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    13: VP: The module calls EcuC_GetMetaDataTargetAddr
    14: VP: The module calls EcuC_GetMetaDataPriority
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    17: VP: The module calls CanIf_Transmit
    18: confirm the TP.CM_RTS packet
    19: Call J1939Tp_MainFunction
    20: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.CM_RTS packet
    23: Call J1939Tp_MainFunction
    24: Receive a TP.CM_CTS packet
    25: Trigger CTS in single mainfunction
    26: Receive a TP.CM_CTS packet
    27: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    28: Call J1939Tp_MainFunction
    29: VP: the module calls PduR_J1939TpCopyTxData to get new data
    30: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    31: VP: The module calls CanIf_Transmit
    32: confirm the TP.DT packet
    33: Call J1939Tp_MainFunction
    34: VP: the module calls PduR_J1939TpCopyTxData to get new data
    35: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    36: VP: The module calls CanIf_Transmit
    37: confirm the TP.DT packet
    38: Call J1939Tp_MainFunction
    39: VP: the module calls PduR_J1939TpCopyTxData to get new data
    40: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    41: VP: The module calls CanIf_Transmit
    42: confirm the TP.DT packet
    43: VP: the module calls PduR_J1939TpCopyTxData to get new data
    44: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    45: VP: The module calls CanIf_Transmit
    46: confirm the TP.DT packet
    47: VP: the module calls PduR_J1939TpCopyTxData to get new data
    48: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    49: VP: The module calls CanIf_Transmit
    50: confirm the TP.DT packet
    51: VP: the module calls PduR_J1939TpCopyTxData to get new data
    52: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    53: VP: The module calls CanIf_Transmit
    54: confirm the TP.DT packet
    55: Receive a TP.CM_EOM packet
    56: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    57: Module Call PduR_J1939TpTxConfirmation
    58: Receive a TP.CM_EOM packet
    59: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    60: Module Call PduR_J1939TpTxConfirmation
    61: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Tx.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1473</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CONC_TRSMT_CMDT_DIFFERENT_CHANNELS_PARALLELFEATURE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Concurrent_Test_ParallelFeature/source/application/Tests.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of concurrent CMDT transmission over different channels with the same SA/DA, and rejection on the same channel
    while the "J1939TpTxChannelHandling" is enabled.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit (on channel J1939TpTxChannel_NoMetaData ..) with SA = 20, DA = 70 and Length = 20
    04: VP: J1939Tp_Transmit return E_OK
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls CanIf_Transmit
    08: confirm the TP.CM_RTS packet
    09: Call J1939Tp_MainFunction
    10: Receive a TP.CM_CTS packet (for channel J1939TpTxChannel_NoMetaData)
    11: Call J1939Tp_MainFunction
    12: VP: the module calls PduR_J1939TpCopyTxData to get new data
    13: VP: The module calls CanIf_Transmit (for channel J1939TpTxChannel_NoMetaData)
    14: Call J1939Tp_Transmit (on the same channel J1939TpTxChannel_NoMetaData) with SA = 20, DA = 70 and Length = 20 ...
    15: VP: J1939Tp_Transmit return E_NOT_OK as SA/DA is ongoing on the same channel
    16: confirm the TP.DT packet (on channel J1939TpTxChannel_NoMetaData)
    17: Call J1939Tp_Transmit on different channel  (J1939TpTxChannel_Sa ) with the same SA = 20, DA = 70 and Length = 15
    18: VP: J1939Tp_Transmit returns E_OK while the same SA/DA is ongoing but on different channel
    19: Call J1939Tp_MainFunction
    20: VP: the module calls PduR_J1939TpCopyTxData to get new data
    21: VP: The module calls CanIf_Transmit for RTS  (on channel J1939TpTxChannel_Sa)
    22: VP: the module calls PduR_J1939TpCopyTxData calculate for RTS
    23: VP: The module calls CanIf_Transmit for DT (on channel J1939TpTxChannel_NoMetaData)
    24: Call J1939Tp_MainFunction
    25: confirm the TP.DT packet
    26: confirm the TP.DT packet to make sure the second confirmation is discarded
    27: Call J1939Tp_MainFunction
    28: Receive a TP.CM_CTS packet
    29: confirm the TP.CM_RTS packet (on channel J1939TpTxChannel_Sa)
    30: VP: the module calls PduR_J1939TpCopyTxData to get new data (on channel J1939TpTxChannel_NoMetaData)
    31: VP: The module calls CanIf_Transmit (on channel J1939TpTxChannel_NoMetaData)
    32: confirm the TP.DT packet 
    33: Call J1939Tp_MainFunction
    34: Receive a TP.CM_CTS_1 packet (for channel J1939TpTxChannel_Sa)
    35: Call J1939Tp_MainFunction
    36: VP: the module calls PduR_J1939TpCopyTxData to get new data (for channel J1939TpTxChannel_Sa)
    37: VP: The module calls CanIf_Transmit for SA = 20 (for channel J1939TpTxChannel_Sa)
    38: confirm the TP.DT packet (for channel J1939TpTxChannel_Sa)
    39: Receive a TP.CM_EOM packet  (on channel J1939TpTxChannel_NoMetaData)
    40: VP: The module calls PduR_J1939TpTxConfirmation (for channel J1939TpTxChannel_NoMetaData)
    41: Call J1939Tp_MainFunction
    42: VP: the module calls PduR_J1939TpCopyTxData to get new data
    43: VP: The module calls CanIf_Transmit (for channel J1939TpTxChannel_Sa)
    44: confirm the TP.DT packet (for channel J1939TpTxChannel_Sa)
    45: Call J1939Tp_MainFunction
    46: VP: the module calls PduR_J1939TpCopyTxData to get new data
    47: VP: The module calls CanIf_Transmit (for channel J1939TpTxChannel_Sa)
    48: confirm the TP.DT packet
    49: Call J1939Tp_MainFunction
    50: Receive a TP.CM_EOM_1 packet (for channel J1939TpTxChannel_Sa)
    51: VP: The module calls PduR_J1939TpTxConfirmation (for channel J1939TpTxChannel_Sa)
    52: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.J1939TpTxConcurent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.Sa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1474</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CONC_TRSMT_CMDT_SAME_CHANNEL_PARALLELFEATURE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Concurrent_Test_ParallelFeature/source/application/Tests.c</sourcefile>
      <sourceline>436</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of concurrent CMDT transmission over the same channel with multiple Nsdu 

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit with SA = 20, DA = 70 and Length = 20
    04: VP: J1939Tp_Transmit return E_OK
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls CanIf_Transmit
    08: confirm the TP.CM_RTS packet
    09: Call J1939Tp_MainFunction
    10: Receive a TP.CM_CTS packet for SA = 20
    11: Call J1939Tp_MainFunction
    12: VP: the module calls PduR_J1939TpCopyTxData to get new data
    13: VP: The module calls CanIf_Transmit for SA = 20
    14: Call J1939Tp_Transmit with SA = 20, DA = 70 and Length = 20 ...
    15: VP: J1939Tp_Transmit return E_NOT_OK as SA/DA is ongoing on the same channel
    16: confirm the TP.DT packet
    17: Call J1939Tp_Transmit with SA = 10, DA = 70 and Length = 15
    18: VP: J1939Tp_Transmit return E_OK
    19: Call J1939Tp_MainFunction
    20: VP: the module calls PduR_J1939TpCopyTxData to get new data
    21: VP: The module calls CanIf_Transmit for RTS for SA = 10
    22: VP: The module calls CanIf_Transmit for DT for SA = 20
    23: Call J1939Tp_MainFunction
    24: confirm the TP.DT packet
    25: confirm the TP.DT packet to make sure the second confiramtion is discarded
    26: Call J1939Tp_MainFunction
    27: Receive a TP.CM_CTS packet
    28: confirm the TP.CM_RTS packet
    29: VP: the module calls PduR_J1939TpCopyTxData to get new data
    30: VP: The module calls CanIf_Transmit for SA = 20
    31: confirm the TP.DT packet
    32: Call J1939Tp_MainFunction
    33: Receive a TP.CM_CTS_1 packet
    34: Call J1939Tp_MainFunction
    35: VP: the module calls PduR_J1939TpCopyTxData to get new data
    36: VP: The module calls CanIf_Transmit for SA = 20
    37: confirm the TP.DT packet
    38: Receive a TP.CM_EOM packet
    39: VP: The module calls PduR_J1939TpTxConfirmation for SA = 20
    40: Call J1939Tp_MainFunction
    41: VP: the module calls PduR_J1939TpCopyTxData to get new data
    42: VP: The module calls CanIf_Transmit for SA = 10
    43: confirm the TP.DT packet
    44: Call J1939Tp_MainFunction
    45: VP: the module calls PduR_J1939TpCopyTxData to get new data
    46: VP: The module calls CanIf_Transmit for SA = 10
    47: confirm the TP.DT packet
    48: Call J1939Tp_MainFunction
    49: Receive a TP.CM_EOM_1 packet
    50: VP: The module calls PduR_J1939TpTxConfirmation for SA = 10
    51: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.J1939TpTxConcurent</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.Sa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1475</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM_PARALLELFEATURE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Concurrent_Test_ParallelFeature/source/application/Tests.c</sourcefile>
      <sourceline>802</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of CMDT and BAM transmission concurrently.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit for CMDT
    05: VP: J1939Tp_Transmit return E_OK for CMDT
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: set MetaData source ,destination and priority values according to metadata configuration
    10: Call J1939Tp_Transmit for BAM
    11: VP: J1939Tp_Transmit return E_OK for BAM
    12: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    13: VP: The module calls EcuC_GetMetaDataTargetAddr
    14: VP: The module calls EcuC_GetMetaDataPriority
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration EBSTUBS_TRACE_CHECK(PduR_J1939TpCopyTxData);
    17: VP: The module calls CanIf_Transmit
    18: confirm the TP.CM_RTS packet
    19: Call J1939Tp_MainFunction
    20: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    21: BAM Metadata Info with Da - 0xff
    22: VP: The module calls CanIf_Transmit
    23: confirm the TP.CM_BAM packet
    24: Call J1939Tp_MainFunction
    25: Receive a TP.CM_CTS packet
    26: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    27: Call J1939Tp_MainFunction
    28: VP: the module calls PduR_J1939TpCopyTxData to get new data
    29: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    30: VP: The module calls CanIf_Transmit
    31: confirm the TP.DT packet
    32: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    33: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    34: VP: The module calls CanIf_Transmit
    35: confirm the TP.DT packet
    36: Receive a TP.CM_EOM packet
    37: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    38: Module Call PduR_J1939TpTxConfirmation
    38: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    39: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    40: confirm the TP.DT packet
    41: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    42: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    43: confirm the TP.DT packet
    44: VP: The module calls PduR_J1939TpTxConfirmation
    45: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Tx.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Tx.Timer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1476</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CONCURRENT_TRSMT_CMDT_BAM_Fast_Confirmation_PARALLELFEATURE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Concurrent_Test_ParallelFeature/source/application/Tests.c</sourcefile>
      <sourceline>1194</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of CMDT and BAM transmission concurrently with fast confirmatio is received within the call of CanIf_Transmit.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit for CMDT
    05: VP: J1939Tp_Transmit return E_OK for CMDT
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: set MetaData source ,destination and priority values according to metadata configuration
    10: Call J1939Tp_Transmit for BAM
    11: VP: J1939Tp_Transmit return E_OK for BAM
    12: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    13: VP: The module calls EcuC_GetMetaDataTargetAddr
    14: VP: The module calls EcuC_GetMetaDataPriority
    15: Call J1939Tp_MainFunction : as fast confiramtion is received for CMDT connection, CM_BAM is transmitted within the same mainfunction call
    16: VP: The module calls EcuC_SetMetaDataCanId for CMDT connection according to metadata configuration 
    17: VP: The module calls CanIf_Transmit to send RTS, J1939Tp_TxConfirmation will be called within CanIf_Transmit to simulate fast confirmation TP.CM_RTS
    18: VP: The module calls EcuC_SetMetaDataCanId for BAM connection according to metadata configuration 
    19: BAM Metadata Info with Da - 0xff
    20: VP: The module calls CanIf_Transmit to send CM_BAM , J1939Tp_TxConfirmation will be called within CanIf_Transmit to simulate fast confirmation TP.CM_BAM  
    21: Call J1939Tp_MainFunction 
    22: Receive a TP.CM_CTS packet
    23: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    24: Call J1939Tp_MainFunction
    25: VP: the module calls PduR_J1939TpCopyTxData to get new data
    26: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    27: VP: The module calls CanIf_Transmit
    28: confirm the TP.DT packet
    29: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    30: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    31: VP: The module calls CanIf_Transmit
    32: confirm the TP.DT packet
    33: Receive a TP.CM_EOM packet
    34: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    35: Module Call PduR_J1939TpTxConfirmation
    36: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    37: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    38: confirm the TP.DT packet
    39: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    40: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    41: confirm the TP.DT packet
    42: VP: The module calls PduR_J1939TpTxConfirmation
    43: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Tx.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Tx.Timer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1477</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CONC_TRSMT_TWO_CMDT_PARALLELFEATURE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Concurrent_Test_ParallelFeature/source/application/Tests.c</sourcefile>
      <sourceline>1599</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of two CMDT transmission concurrently.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK for CMDT
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: set MetaData source ,destination and priority values according to metadata configuration
    10: Call J1939Tp_Transmit
    11: VP: J1939Tp_Transmit return E_OK for BAM
    12: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    13: VP: The module calls EcuC_GetMetaDataTargetAddr
    14: VP: The module calls EcuC_GetMetaDataPriority
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    17: VP: The module calls CanIf_Transmit
    18: confirm the TP.CM_RTS packet
    19: Call J1939Tp_MainFunction
    20: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.CM_RTS packet
    23: Call J1939Tp_MainFunction
    24: Receive a TP.CM_CTS packet
    25: Trigger CTS in single mainfunction
    26: Receive a TP.CM_CTS packet
    27: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    28: Call J1939Tp_MainFunction
    29: VP: the module calls PduR_J1939TpCopyTxData to get new data
    30: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    31: VP: The module calls CanIf_Transmit
    32: confirm the TP.DT packet
    33: Call J1939Tp_MainFunction
    34: VP: the module calls PduR_J1939TpCopyTxData to get new data
    35: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    36: VP: The module calls CanIf_Transmit
    37: confirm the TP.DT packet
    38: Call J1939Tp_MainFunction
    39: VP: the module calls PduR_J1939TpCopyTxData to get new data
    40: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    41: VP: The module calls CanIf_Transmit
    42: confirm the TP.DT packet
    43: VP: the module calls PduR_J1939TpCopyTxData to get new data
    44: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    45: VP: The module calls CanIf_Transmit
    46: confirm the TP.DT packet
    47: VP: the module calls PduR_J1939TpCopyTxData to get new data
    48: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    49: VP: The module calls CanIf_Transmit
    50: confirm the TP.DT packet
    51: VP: the module calls PduR_J1939TpCopyTxData to get new data
    52: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    53: VP: The module calls CanIf_Transmit
    54: confirm the TP.DT packet
    55: Receive a TP.CM_EOM packet
    56: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    57: Module Call PduR_J1939TpTxConfirmation
    58: Receive a TP.CM_EOM packet
    59: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    60: Module Call PduR_J1939TpTxConfirmation
    61: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Tx.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1478</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CONC_TRSMT_CMDT_Direct</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Direct_Concurrent_Test/source/application/Tests.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of concurrent CMDT and Direct Transmission while J1939TpTxPgDynLength is enabled 

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit with SA = 20, DA = 70 and Length = 20
    04: VP: J1939Tp_Transmit return E_OK 
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls CanIf_Transmit
    08: confirm the TP.CM_RTS packet
    09: Call J1939Tp_MainFunction
    10: Receive a TP.CM_CTS packet for SA = 20
    11: Call J1939Tp_MainFunction
    12: VP: the module calls PduR_J1939TpCopyTxData to get new data
    13: VP: The module calls CanIf_Transmit for SA = 20
    14: Call J1939Tp_Transmit with SA = 20, DA = 70 and Length = 20
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls CanIf_Transmit
    18: confirm the TP.DT packet
    19: VP: The module calls PduR_J1939TpTxConfirmation
    20: confirm the TP.DT packet
    21: Call J1939Tp_MainFunction
    22: VP: the module calls PduR_J1939TpCopyTxData to get new data
    23: VP: The module calls CanIf_Transmit for RTS for SA = 10
    24: confirm the TP.DT packet
    25: Call J1939Tp_MainFunction
    26: VP: the module calls PduR_J1939TpCopyTxData to get new data
    27: VP: The module calls CanIf_Transmit for SA = 10
    28: confirm the TP.DT packet
    29: Call J1939Tp_MainFunction
    30: Receive a TP.CM_EOM packet
    31: Call J1939Tp_MainFunction
    32: VP: The module calls PduR_J1939TpTxConfirmation for SA = 20
    33: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1479</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CONC_TRSMT_CMDT_Direct_Immediate</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Direct_Concurrent_Test/source/application/Tests.c</sourcefile>
      <sourceline>281</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     This test checks the handling of concurrent CMDT and Direct Transmission when transmit is called
     in same MainFunction while J1939TpTxPgDynLength is enabled

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit with SA = 20, DA = 70 and Length = 20
    04: VP: J1939Tp_Transmit return E_OK
    05: Call J1939Tp_Transmit with SA = 20, DA = 70 and Length = 20
    06: VP: J1939Tp_Transmit return E_Ok
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    09: Call J1939Tp_MainFunction
    10: VP: The module calls CanIf_Transmit
    11: confirm the TP.CM_RTS packet
    12: VP: the module calls PduR_J1939TpCopyTxData to get new data
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.DT packet
    15: Call J1939Tp_MainFunction
    16: Receive a TP.CM_CTS packet for SA = 20
    17: Call J1939Tp_MainFunction
    18: VP: the module calls PduR_J1939TpCopyTxData to get new data
    19: VP: The module calls CanIf_Transmit for SA = 20
    20: confirm the TP.DT packet
    21: Call J1939Tp_MainFunction
    22: VP: the module calls PduR_J1939TpCopyTxData to get new data
    23: VP: The module calls CanIf_Transmit for RTS for SA = 10
    24: confirm the TP.DT packet
    25: Call J1939Tp_MainFunction
    26: Call J1939Tp_MainFunction
    27: VP: the module calls PduR_J1939TpCopyTxData to get new data
    28: VP: The module calls CanIf_Transmit for SA = 10
    29: confirm the TP.DT packet
    30: Call J1939Tp_MainFunction
    31: Receive a TP.CM_EOM packet
    32: Call J1939Tp_MainFunction
    33: VP: The module calls PduR_J1939TpTxConfirmation for SA = 20
    34: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1480</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CONC_TRSMT_CMDT_Direct_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Direct_Concurrent_Test/source/application/Tests.c</sourcefile>
      <sourceline>506</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of concurrent CMDT and Direct Transmission while J1939TpTxPgDynLength is disabled in the second transmission 

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit with SA = 20, DA = 70 and Length = 20
    04: VP: J1939Tp_Transmit return E_OK 
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls CanIf_Transmit
    08: confirm the TP.CM_RTS packet
    09: Call J1939Tp_MainFunction
    10: Receive a TP.CM_CTS packet for SA = 20
    11: Call J1939Tp_MainFunction
    12: VP: the module calls PduR_J1939TpCopyTxData to get new data
    13: VP: The module calls CanIf_Transmit for SA = 20
    14: Call J1939Tp_Transmit with SA = 20, DA = 70 and Length = 8
    15: Call J1939Tp_MainFunction
    16: confirm the TP.DT packet
    17: Call J1939Tp_MainFunction
    18: VP: the module calls PduR_J1939TpCopyTxData to get new data
    19: VP: The module calls CanIf_Transmit for RTS for SA = 10
    20: confirm the TP.DT packet
    21: Call J1939Tp_MainFunction
    22: VP: the module calls PduR_J1939TpCopyTxData to get new data
    23: VP: The module calls CanIf_Transmit for SA = 10
    24: confirm the TP.DT packet
    25: Call J1939Tp_MainFunction
    26: Receive a TP.CM_EOM packet
    27: Call J1939Tp_MainFunction
    28: VP: The module calls PduR_J1939TpTxConfirmation for SA = 20
    29: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1481</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_DIRECT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Direct_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario,from sending RTS till receiving EOM frame. 
    And test that Source/Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls EcuC_SetMetaDataCanId
    12: VP: The module calls CanIf_Transmit
    13: confirm the Direct pg packet
    14: Call J1939Tp_MainFunction
    15: Module Call PduR_J1939TpTxConfirmation
    16: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.directPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.Direct.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.PDU_Specific.PDU1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.PDU_Specific.PDU2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1482</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_DIRECT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Direct_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>190</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario when data length &lt; 8.
    And test that Source/Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls EcuC_SetMetaDataCanId
    12: VP: The module calls CanIf_Transmit
    13: confirm the Direct pg packet
    14: Call J1939Tp_MainFunction
    15: Module Call PduR_J1939TpTxConfirmation
    16: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1483</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_DIRECT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Direct_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>337</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of J1939Tp_CancelTransmit for direct pg.
    And test that Source/Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    Direct transmission

Test Precondition: 
    -

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs
      03: set MetaData source ,destination and priority values
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaDataSourceAddr
      07: VP: The module calls EcuC_GetMetaDataTargetAddr
      08: VP: The module calls EcuC_GetMetaDataPriority
      09: Set Invalid RetVal for PduR_J1939TpCopyTxData to adhere code coverage
      10: VP : Check if the J1939Tp_CancelTransmit returns E_NOT_OK even after
          accepting the J1939Tp_Transmit request
      11: Set valid RetVal for PduR_J1939TpCopyTxData
      12: Call J1939Tp_MainFunction
      13: VP: the module calls PduR_J1939TpCopyTxData to get new data
      14: VP: The module calls EcuC_SetMetaDataCanId
      15: VP: The module calls CanIf_Transmit
      16: confirm the TP.DT packet
      17: VP : Check if the J1939Tp_CancelTransmit returns E_NOT_OK after
          direct frame is transmitted to lower layer.
      18: Call J1939Tp_MainFunction
      19: Module Call PduR_J1939TpTxConfirmation
      20: VP : Check if the J1939Tp_CancelTransmit returns E_NOT_OK after
          direct frame is transmitted successfully
      21: Check for trace empty
      22: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00203.Transmitted.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1484</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_DIRECT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Direct_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>510</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of Direct Frame transmission scenario
    when PduR_J1939TpCopyTxData returns BUFREQ_E_BUSY until timeout.
    And test that Source/Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    Direct transmission

Test Precondition: 
    -

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs
      03: set MetaData source ,destination and priority values
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaDataSourceAddr
      07: VP: The module calls EcuC_GetMetaDataTargetAddr
      08: VP: The module calls EcuC_GetMetaDataPriority
      09: Set PduR_J1939TpCopyTxData return value to BUFREQ_E_BUSY
      10: Call J1939Tp_MainFunction till TR timeout
      11: Call J1939Tp_MainFunction
      12: The module calls Det_ReportError due to Timeout
      13: VP: The module calls PduR_J1939TpTxConfirmation
      14: Check Trace Empty
      15: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.Direct.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1485</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_DIRECT_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Direct_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>645</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the silent connection abort scenario when J1939Tp_TxConfirmation is
    received with result E_NOT_OK.
    And test that Source/Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    Direct Transmission

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls EcuC_SetMetaDataCanId
    12: VP: The module calls CanIf_Transmit
    13: Confirm the Direct packet with delayed E_NOT_OK result
    14: Call J1939Tp_MainFunction
    15: Module Call PduR_J1939TpTxConfirmation
    16: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1486</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_DIRECT_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Direct_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>794</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the silent connection abort scenario when J1939Tp_TxConfirmation is
    received with result different than E_OK and E_NOT_OK.
    And test that Source/Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    Direct Transmission

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls EcuC_SetMetaDataCanId
    12: VP: The module calls CanIf_Transmit
    13: Confirm the Direct packet with delayed result, different than E_OK and E_NOT_OK.
    14: Call J1939Tp_MainFunction
    15: Module Call PduR_J1939TpTxConfirmation
    16: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1487</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_DIRECT_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Direct_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>943</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of Direct Transmission when CanIf_Transmit returns
    E_NOT_OK for Direct PG.
    And test that Source/Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
  Direct Transmission

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority and CanIf_Transmit return values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls EcuC_SetMetaDataCanId
    12: VP: The module calls CanIf_Transmit
    13: VP: Check the TP.DT packet transmitted via CanIf_Transmit
    14: Call J1939Tp_MainFunction
    15: Module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    16: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1488</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_CONCURRENT_MESSAGE_DOUBLE_CONFIRMATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Direct_Test_Burst/source/application/tests.c.m4</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the correct handling of a simulatenous burst of direct frame messages that occur one after the other when both receive confirmation from canIf

Test Object: 
    Tp.Direct_transmission

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
	04: Call J1939Tp_Transmit for first message
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
	09: Call J1939Tp_Transmit for second message
    10: VP: J1939Tp_Transmit return E_OK
    11: VP: The module calls EcuC_GetMetaDataSourceAddr
    12: VP: The module calls EcuC_GetMetaDataTargetAddr
    13: VP: The module calls EcuC_GetMetaDataPriority
    14: Call J1939Tp_MainFunction
	15: VP: the module calls PduR_J1939TpCopyTxData to get new data for first message
	16: VP: The module calls EcuC_SetMetaDataCanId for first message
    17: VP: The module calls CanIf_Transmit
    18: VP: The module calls PduR_J1939TpCopyTxData for second message
    19: VP: The module calls EcuC_SetMetaDataCanId for second message
    20: VP: The module calls CanIf_Transmit for second message
    21: Confirm First sent message
	22: Confirm Second sent message
	23: Call J1939Tp_MainFunction
	24: Module Call PduR_J1939TpTxConfirmation for first message
	25: Module Call PduR_J1939TpTxConfirmation for second message 
	26: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.directPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.Direct.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.PDU_Specific.PDU1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.PDU_Specific.PDU2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1489</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_CONCURRENT_MESSAGE_SINGLE_CONFIRMATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Direct_Test_Burst/source/application/tests.c.m4</sourcefile>
      <sourceline>228</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test checks the correct handling of a simulatenous burst of direct frame messages that occur one after the other when only one receives confirmation from canIf

Test Object: 
    Tp.Direct_transmission

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit for first message
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_Transmit for second message
    10: VP: J1939Tp_Transmit return E_OK
    11: VP: The module calls EcuC_GetMetaDataSourceAddr
    12: VP: The module calls EcuC_GetMetaDataTargetAddr
    13: VP: The module calls EcuC_GetMetaDataPriority
    14: Call J1939Tp_MainFunction
    15: VP: the module calls PduR_J1939TpCopyTxData to get new data for first message
    16: VP: The module calls EcuC_SetMetaDataCanId for first message
    17: VP: The module calls CanIf_Transmit
    18: VP: The module calls PduR_J1939TpCopyTxData for second message
    19: VP: The module calls EcuC_SetMetaDataCanId for second message
    20: VP: The module calls CanIf_Transmit for second message
    21: No confirmation for the first message
    22: Confirm Second sent message
    23: Call J1939Tp_MainFunction
    24: Module Call PduR_J1939TpTxConfirmation for first message
    25: Module Call PduR_J1939TpTxConfirmation for second message 
    26: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.directPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.Direct.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.PDU_Specific.PDU1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.PDU_Specific.PDU2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1490</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after receiving wrong sequence number in CM_CTS

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 80 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit
    18: confirm the TP.Conn_Abort packet
    19: Call J1939Tp_MainFunction two times
    20: Call PduR_J1939TpTxConfirmation
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.MaxRetransmitLimitReached</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1491</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>228</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when PduR_J1939TpCopyTxData returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 90 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: Call J1939Tp_MainFunction
    18: VP: The module calls EcuC_SetMetaDataCanId
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.Conn_Abort packet
    21: Call J1939Tp_MainFunction
    22: Module Call PduR_J1939TpTxConfirmation
    23: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CopyTxData.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00097.Transmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1492</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>435</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after Tr timeout due to PduR_J1939TpCopyTxData keep returns BUFREQ_E_BUSY

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 120 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: Call J1939Tp_MainFunction till TR timeout
    18: Call J1939Tp_MainFunction
    19: The module calls Det_ReportError due to Timeout
    20: Call J1939Tp_MainFunction
    21: VP: The module calls EcuC_SetMetaDataCanId
    22: VP: The module calls CanIf_Transmit
    23: confirm the TP.Conn_Abort packet
    24: Call J1939Tp_MainFunction
    25: Module Call PduR_J1939TpTxConfirmation
    26: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00100.Tx.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1493</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>657</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after recieving TP.Conn_Abort after TP.CM_RTS transmission.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 81 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: Call PduR_J1939TpTxConfirmation
    17: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Reject.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1494</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>814</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after receiving TP.Conn_Abort with invalid abort reason after TP.CM_RTS transmission.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.Conn_Abort packet with different PGN
    14: VP: J1939Tp module calls Det_ReportError for J1939TP_E_INVALID_PGN
    15: Call J1939Tp_MainFunction
    16: VP: Check trace empty to conclude that unexpected Abort frame is ignored
    17: Receive a TP.Conn_Abort packet
    18: VP: The module calls EcuC_SetMetaDataCanId
    19: Call J1939Tp_MainFunction
    20: Call PduR_J1939TpTxConfirmation
    21: module Call Det_ReportError
    22: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1495</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>999</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after receiving wrong sequence number in CM_CTS

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 80 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit
    18: confirm the TP.Conn_Abort packet
    19: Call J1939Tp_MainFunction
    20: Call PduR_J1939TpTxConfirmation
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1496</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1191</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after T4 timeout

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 80 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction till T3 timeout
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit
    18: confirm the TP.Conn_Abort packet
    19: Call J1939Tp_MainFunction
    20: Module Call PduR_J1939TpTxConfirmation
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.MaxRetransmitLimitReached</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1497</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1390</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after T5 timeout before receiving EOM frame,
    and testing the content of the data frames.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: VP: The module send the correct content for data
    20: confirm the TP.DT packet
    21: VP: the module calls PduR_J1939TpCopyTxData to get new data
    22: VP: The module calls EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: VP: The module send the correct content for data
    25: confirm the TP.DT packet
    26: VP: The module calls EcuC_SetMetaDataCanId
    27: VP: The module calls CanIf_Transmit to send EOMS
    28: confirm the TP.CM packet
    29: Call J1939Tp_MainFunction till T5 passes
    30: VP: The module calls Det_ReportError
    31: Call J1939Tp_MainFunction
    32: VP: The module calls EcuC_SetMetaDataCanId
    33: VP: The module calls CanIf_Transmit
    34: confirm the TP.Conn_Abort packet
    35: Call J1939Tp_MainFunction
    36: Module Call PduR_J1939TpTxConfirmation
    37: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TimingConstraints.Tx.T5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.TIMEOUT_T5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1498</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1727</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when J1939TpTxCmNPduAvailable not available

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 80 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: set MetaData source and destination values  for second transmit
    13: Call J1939Tp_Transmit again
    14: VP: J1939Tp_Transmit return E_OK
    15: VP: The module calls EcuC_GetMetaDataSourceAddr
    16: VP: The module calls EcuC_GetMetaDataTargetAddr
    17: VP: The module calls EcuC_GetMetaDataPriority
    18: Call J1939Tp_MainFunction till TR timeout
    19: The module calls Det_ReportError due to Timeout
    20: Module calls PduR_J1939TpTxConfirmation
    21: Call J1939Tp_MainFunction until J1939Tp_TxConfirmation is received
    22: Module calls PduR_J1939TpTxConfirmation
    23: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00032.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1499</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1919</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when J1939TpTxDtNPduAvailable not available

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: set MetaData source and destination values  for second transmit
    13: Call J1939Tp_Transmit again
    14: VP: J1939Tp_Transmit return E_OK
    15: VP: The module calls EcuC_GetMetaDataSourceAddr
    16: VP: The module calls EcuC_GetMetaDataTargetAddr
    17: VP: The module calls EcuC_GetMetaDataPriority
    18: Call J1939Tp_MainFunction
    19: confirm the TP.CM_RTS packet
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.CM_RTS packet
    23: Receive a TP.CM_CTS packet
    24: VP: The module calls EcuC_SetMetaDataCanId
    25: Call J1939Tp_MainFunction
    26: VP: the module calls PduR_J1939TpCopyTxData to get new data
    27: VP: The module calls EcuC_SetMetaDataCanId
    28: VP: The module calls CanIf_Transmit
    29: Receive a TP.CM_CTS packet  for second NSdu
    30: VP: The module calls EcuC_SetMetaDataCanId
    31: Call J1939Tp_MainFunction till TR timeout
    32: The module calls Det_ReportError due to Timeout
    33: Module calls PduR_J1939TpTxConfirmation
    34: Call J1939Tp_MainFunction till J1939Tp_TxConfirmation is received with E_NOT_OK
    35: Module calls PduR_J1939TpTxConfirmation
    36: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00032.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1500</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2182</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after Tr timeout when abort connection fail

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: The module calls Det_ReportError due to Timeout
    18: Call J1939Tp_MainFunction till TR timeout
    19: VP: The module calls EcuC_SetMetaDataCanId
    20: The module calls Det_ReportError due to Timeout
    21: Call J1939Tp_MainFunction two times
    22: Call PduR_J1939TpTxConfirmation
    23: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1501</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2386</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when PduR_J1939TpCopyTxData return BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: Module Call PduR_J1939TpTxConfirmation
    12: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00032.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1502</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_13</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2499</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after T4 timeout

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a wait cts packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction till TR timeout
    16: The module calls Det_ReportError due to Timeout
    17: Call J1939Tp_MainFunction
    18: VP: The module calls EcuC_SetMetaDataCanId
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.Conn_Abort packet
    21: Call J1939Tp_MainFunction
    22: Module Call PduR_J1939TpTxConfirmation
    23: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.T4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_T4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00100.Tx.T4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1503</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_14</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2710</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks behavior of j1939Tp when a TP.CM_CTS is received while TP.DT messages are being transmitted, J1939Tp shall abort the connection

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
    20: Receive a TP.CM_CTS packet
    21: VP: The module calls EcuC_SetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: The module calls EcuC_SetMetaDataCanId
    24: VP: The module calls CanIf_Transmit
    25: confirm the TP.Conn_Abort packet
    26: Call J1939Tp_MainFunction
    27: Module Call PduR_J1939TpTxConfirmation
    28: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.UnexpectedCtsReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1504</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_15</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>2939</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after recieving CM_CTS with No. of packets large than Maximum no. of packets in RTS

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_GetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: module Call Det_ReportError
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.Conn_Abort packet
    20: Call J1939Tp_MainFunction two times
    21: Call PduR_J1939TpTxConfirmation
    22: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_NPN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1505</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_16</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>3130</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after PduR_J1939TpCopyTxData return BUFREQ_E_NOT_OK while PduR_J1939TpCopyTxData is enabled

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK
    05: Call J1939Tp_MainFunction
    06: VP: The module calls PduR_J1939TpCopyTxData
    07: Call J1939Tp_MainFunction till TR timeout
    08: Call J1939Tp_MainFunction
    09: The module calls Det_ReportError due to Timeout
    10: Call J1939Tp_MainFunction
    11: VP: The module calls EcuC_SetMetaDataCanId
    12: VP: The module calls CanIf_Transmit
    13: confirm the TP.Conn_Abort packet
    14: Call J1939Tp_MainFunction two times
    15: Call PduR_J1939TpTxConfirmation
    16: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.CMDTTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1506</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_17</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>3266</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after PduR_J1939TpCopyTxData return BUFREQ_E_BUSY while PduR_J1939TpCopyTxData is enabled

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK
    05: Call J1939Tp_MainFunction
    06: VP: The module calls PduR_J1939TpCopyTxData
    07: VP: The module calls EcuC_SetMetaDataCanId
    08: VP: The module calls CanIf_Transmit
    09: confirm the TP.Conn_Abort packet
    10: Call J1939Tp_MainFunction two times
    11: Call PduR_J1939TpTxConfirmation
    12: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.CMDTTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1507</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_18</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>3413</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of CTS frame when No_of_packets in received CTS frame
    is greater than Maximum No_of_packets in RTS frame

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      03: set MetaData source ,destination and priority values
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaDataSourceAddr
      07: VP: The module calls EcuC_GetMetaDataTargetAddr
      08: VP: The module calls EcuC_GetMetaDataPriority
      09: Call J1939Tp_MainFunction
      10: VP: The module calls EcuC_SetMetaDataCanId
      11: VP: The module calls CanIf_Transmit
      12: VP: Check the RTS frame transmitted with Max Number of packet as 5
      13: confirm the TP.CM_RTS packet
      14: Set CTS with invalid NOP
      15: Receive a TP.CM_CTS packet
      16: VP: The module calls EcuC_SetMetaDataCanId
      17: Call J1939Tp_MainFunction
      18: VP: Check the module calls Det_ReportError with J1939TP_E_INVALID_NOP
      19: Module shall wait for T3 Timeout for valid CTS frame
      20: Call J1939Tp_MainFunction
      21: VP : Check that the module calls Det_ReportError due to T3-Timeout
      22: VP: The module calls EcuC_SetMetaDataCanId
      23: VP: The module calls CanIf_Transmit
      24: VP: The module Send Abort frame with abort reason J1939TP_TPCM_ABORT_REASON_TIMEOUT
      25: confirm the TP.CM packet
      26: Call J1939Tp_MainFunction two times
      27: Call PduR_J1939TpTxConfirmation
      28: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_NOP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1508</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_19</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>3636</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after receiving E_NOT_OK for
    CanIf_Transmit during TP_CM_RTS frame transmission.

Test Object: 
    TP.CM_RTS transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority and CanIf_Transmit return values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: VP: Check PduR_J1939TpTxConfirmation returns E_NOT_OK
    13: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1509</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_20</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>3772</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after receiving E_NOT_OK for
    CanIf_Transmit during Data frame transmission of a CMDT Connection.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Set E_NOT_OK to the return value of CanIf_Transmit
    16: Call J1939Tp_MainFunction
    17: VP: the module calls PduR_J1939TpCopyTxData to get new data
    18: VP: The module calls EcuC_SetMetaDataCanId
    19: VP: The module calls CanIf_Transmit
    20: VP: Check PduR_J1939TpTxConfirmation returns E_NOT_OK
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1510</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_21</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>3947</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after receiving E_NOT_OK for
    CanIf_Transmit of Abort Frame.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Set E_NOT_OK to the return value of CanIf_Transmit
    16: Call J1939Tp_MainFunction
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: Call J1939Tp_MainFunction two times
    20: VP: Check if PduR_J1939TpTxConfirmation returns E_NOT_OK
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.MaxRetransmitLimitReached</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1511</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_22</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>4146</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when TxConfirmation is called with E_NOT_OK.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 81 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
      : repeat step from 15 to 19 two times to send all DT
    20: VP: the module calls PduR_J1939TpCopyTxData to get new data
    21: VP: The module calls EcuC_SetMetaDataCanId
    22: VP: The module calls CanIf_Transmit
    23: confirm the TP.DT packet
    24: VP: The module calls EcuC_SetMetaDataCanId before sending EOMS
    25: VP: The module calls CanIf_Transmit for sending EOMS
    26: confirm the TP.CM packet with E_NOT_OK for EOMS
    27: Call J1939Tp_MainFunction
    28: Module Call PduR_J1939TpTxConfirmation
    29: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1512</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_23</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>4373</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after Tr timeout, when EOMS fails to be transmitted.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 81 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Call J1939Tp_Transmit to send another sdu, now the CM pdu is busy, and the module will not be able to send EOMS for the first transmission till this pdu is confirmed
    14: VP: The module calls EcuC_SetMetaDataCanId for second Transmission
    15: VP: The module calls CanIf_Transmit for second Transmission
    16: Receive a TP.CM_CTS packet
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: Call J1939Tp_MainFunction
    19: VP: the module calls PduR_J1939TpCopyTxData to get new data
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit
    22: confirm the TP.DT packet
      : repeat step from 15 to 19 two times to send all DT
    23: VP: the module calls PduR_J1939TpCopyTxData to get new data
    24: VP: The module calls EcuC_SetMetaDataCanId
    25: VP: The module calls CanIf_Transmit
    26: confirm the TP.DT packet
    27: Call J1939Tp_MainFunction till Tr is elapsed
    28: Module Call PduR_J1939TpTxConfirmation with E_NOT_OK as it failed to send EOMS for the first transmission
    29: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.TimingConstraints.EOMS.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1513</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_ABORT_24</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>4614</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after Tr timeout, when EOMS fails to be transmitted.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Call J1939Tp_Transmit for another transmission
    14: VP: J1939Tp_Transmit return E_OK
    15: VP: The module calls EcuC_GetMetaDataSourceAddr
    16: VP: The module calls EcuC_GetMetaDataTargetAddr
    17: VP: The module calls EcuC_GetMetaDataPriority
    18: VP: The module calls EcuC_SetMetaDataCanId for second Transmission
    19: VP: The module calls CanIf_Transmit for second Transmission
    20: confirm the TP.CM packet for the second RTS
    22: VP: The module calls EcuC_SetMetaDataCanId
    23: Call J1939Tp_MainFunction
    25: VP: the module calls PduR_J1939TpCopyTxData to get new data
    26: VP: The module calls EcuC_SetMetaDataCanId
    27: VP: The module calls CanIf_Transmit
    28: confirm the TP.DT packet
    29: VP: the module calls PduR_J1939TpCopyTxData to get new data
    30: VP: The module calls EcuC_SetMetaDataCanId for second CTS
    31: VP: The module calls EcuC_SetMetaDataCanId
    32: VP: The module calls CanIf_Transmit
    33: Call J1939Tp_MainFunction till Tr is elapsed as J1939TpTxDtNPdu is not available as the TxConfirmation was not called
    35: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1514</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_CMDT_Invalid_Length</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>4880</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks that the CMDT transmission is rejected when the data size exceeds 17666215 bytes.

Test Object: 

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Call J1939Tp_Transmit
    03: VP: J1939Tp_Transmit return E_NOT_OK
    04: Check that module call Det_ReportError
    05: Call the J1939Tp_Shutdown()

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.MaxPDUSize.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1515</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_ABORT_IDLE_TEST</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>4936</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks that receiving TP.Conn_Abort when nsdu is idle is ignored without notification to the upper layer, and CMDT transmission will happen.

Test Object: 
    TP.Conn_Abort,
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOMS reception



Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 81 bytes of data
    03: set MetaData source ,destination and priority values
     call conn abort
    04: Receive a TP.Conn_Abort packet, when NSdu is in Idle State
    05: Call J1939Tp_MainFunction
    06: VP: Check trace empty to conclude that unexpected Abort frame is ignored 
    07: Call J1939Tp_Transmit
    08: VP: J1939Tp_Transmit return E_OK
    09: VP: The module calls EcuC_GetMetaDataSourceAddr
    10: VP: The module calls EcuC_GetMetaDataTargetAddr
    11: VP: The module calls EcuC_GetMetaDataPriority
    12: Call J1939Tp_MainFunction
    13: VP: The module calls EcuC_SetMetaDataCanId
    14: VP: The module calls CanIf_Transmit
    15: confirm the TP.CM_RTS packet
    16: Receive a TP.CM_CTS packet
    17: VP: The module calls EcuC_SetMetaDataCanId 
    18: Call J1939Tp_MainFunction
    19: VP: the module calls PduR_J1939TpCopyTxData to get new data
    20: VP: The module calls EcuC_SetMetaDataCanId 
    21: VP: The module calls CanIf_Transmit
    22: VP: The module send the correct content for data
    23: confirm the TP.DT packet
    24: VP: the module calls PduR_J1939TpCopyTxData to get new data
    25: VP: The module calls EcuC_SetMetaDataCanId 
    26: VP: The module calls CanIf_Transmit
    27: VP: The module send the correct content for data
    28: confirm the TP.DT packet
    29: VP: The module calls EcuC_SetMetaDataCanId 
    30: VP: The module calls CanIf_Transmit to send EOMS
    31: confirm the TP.CM packet
    32: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1516</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_FD_SEGM_RETRY_ASSURANCE_DATA_TRSMT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_AssuranceData_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario,from sending RTS till receiving EOM frame

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOMS transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK
    05: Call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit to transmit TP.CM_RTS message
    07: confirm the TP.CM_RTS packet
    08: Receive an invalid TP.CM_CTS packet to retry EOMS transmission
    09: Check that the frame is discarded and trace is empty
    10: Receive an invalid TP.CM_CTS packet with invalid request code
    11: Check that the frame is discarded and trace is empty
    12: Receive a valid TP.CM_CTS packet
    13: Call J1939Tp_MainFunction
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls CanIf_Transmit to transmit 15 bytes of DT frame and the padding
    16: confirm the TP.DT packet
    17: Set the PduR_J1939TpCopyTxData return to BUFREQ_E_BUSY
    18: VP: the module calls PduR_J1939TpCopyTxData trying to Assurance Data
    19: Set the PduR_J1939TpCopyTxData return to BUFREQ_OK
    20: VP: the module calls PduR_J1939TpCopyTxData to get Assurance Data
    21: VP: The module calls CanIf_Transmit to send EOMS
    22: confirm the EOMS packet
    23: Receive a TP.CM_EOM packet
    24: VP: The module calls PduR_J1939TpTxConfirmation
    25: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.Tx.EOMS.TimeOut.Elapsed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1517</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_RETRY_ASSURANCE_DATA_TRSMT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_AssuranceData_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>276</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling for PduR_J1939TpCopyTxData returnning BUFREQ_E_NOT_OK for EOMS

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_ABORT transmission

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK
    05: Call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit to transmit TP.CM_RTS message
    07: confirm the TP.CM_RTS packet
    08: Receive a TP.CM_CTS packet
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls CanIf_Transmit to transmit 15 bytes of DT frame and the padding
    12: confirm the TP.DT packet
    13: Set the PduR_J1939TpCopyTxData return to BUFREQ_E_NOT_OK
    14: VP: the module calls PduR_J1939TpCopyTxData trying to Assurance Data
    15: Call J1939Tp_MainFunction
    16: VP: The module calls CanIf_Transmit to send Abort message
    18: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    19: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.Tx.EOMS.TimeOut.Elapsed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1518</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_RETRY_ASSURANCE_DATA_TRSMT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_AssuranceData_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>443</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the TR timeout handling for PduR_J1939TpCopyTxData returnning BUFREQ_E_BUSY for EOMS message

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK
    05: Call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit to transmit TP.CM_RTS message
    07: confirm the TP.CM_RTS packet
    08: Receive a TP.CM_CTS packet
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls CanIf_Transmit to transmit 15 bytes of DT frame and the padding
    12: confirm the TP.DT packet
    13: Set the PduR_J1939TpCopyTxData return to BUFREQ_E_BUSY
    14: Wait for Tr to elapse
    15: VP: the module calls PduR_J1939TpCopyTxData trying to Assurance Data
    16: VP: The module calls Det_ReportError to report J1939TP_E_TIMEOUT_TR
    17: VP: The module calls CanIf_Transmit to send Abort message
    18: Confirm the Abort message
    19: Call J1939Tp_MainFunction
    20: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.Tx.EOMS.TimeOut.Elapsed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1519</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_RETRY_ASSURANCE_DATA_TRSMT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_AssuranceData_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>625</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the EOMS retry transmission before T3 elapses

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK
    05: Call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit to transmit TP.CM_RTS message
    07: confirm the TP.CM_RTS packet
    08: Receive an invalid TP.CM_CTS packet to retry EOMS transmission
    09: Check that the frame is discarded and trace is empty
    10: Receive an invalid TP.CM_CTS packet with invalid request code
    11: Check that the frame is discarded and trace is empty
    12: Receive a valid TP.CM_CTS packet
    13: Call J1939Tp_MainFunction
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls CanIf_Transmit to transmit 15 bytes of DT frame and the padding
    16: confirm the TP.DT packet
    17: Set the PduR_J1939TpCopyTxData return to BUFREQ_E_BUSY
    18: VP: the module calls PduR_J1939TpCopyTxData trying to Assurance Data
    19: Set the PduR_J1939TpCopyTxData return to BUFREQ_OK
    20: VP: the module calls PduR_J1939TpCopyTxData to get Assurance Data
    21: VP: The module calls CanIf_Transmit to send EOMS
    22: confirm the EOMS packet
    23: Receive a valid TP.CM_CTS packet to retry EOMS transmission
    24: VP: the module calls PduR_J1939TpCopyTxData to get the Assurance Data
    25: VP: The module calls CanIf_Transmit to send EOMS
    26: confirm the EOMS packet
    27: Receive a TP.CM_EOM packet
    28: VP: The module calls PduR_J1939TpTxConfirmation
    29: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.Tx.EOMS.TimeOut.Elapsed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1520</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_RETRY_ASSURANCE_DATA_TRSMT_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_AssuranceData_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>852</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the EOMS retry transmission after T3 elapses

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOMS transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK
    05: Call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit to transmit TP.CM_RTS message
    07: confirm the TP.CM_RTS packet
    08: Receive an invalid TP.CM_CTS packet to retry EOMS transmission
    09: Check that the frame is discarded and trace is empty
    10: Receive an invalid TP.CM_CTS packet with invalid request code
    11: Check that the frame is discarded and trace is empty
    12: Receive a valid TP.CM_CTS packet
    13: Call J1939Tp_MainFunction
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls CanIf_Transmit to transmit 15 bytes of DT frame and the padding
    16: confirm the TP.DT packet
    17: Set the PduR_J1939TpCopyTxData return to BUFREQ_E_BUSY
    18: VP: the module calls PduR_J1939TpCopyTxData trying to Assurance Data
    19: Set the PduR_J1939TpCopyTxData return to BUFREQ_OK
    20: VP: the module calls PduR_J1939TpCopyTxData to get Assurance Data
    21: VP: The module calls CanIf_Transmit to send EOMS
    22: confirm the EOMS packet
    23: wait till T3 elapses
    24: Receive a valid TP.CM_CTS packet to retry EOMS transmission after T3
    25: VP: The module rejects the retransmition request to send EOMS
    26: Receive a TP.CM_EOM packet 
    27: VP: The module calls PduR_J1939TpTxConfirmation
    28: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.FD.CmdtTransfer.Tx.EOMS.TimeOut.Elapsed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1521</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_AssuranceData_Test/source/application/Tests.c</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of the assurance data in the EOMS message

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK
    05: Call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit to transmit TP.CM_RTS message
    07: confirm the TP.CM_RTS packet
    08: Receive a TP.CM_CTS packet
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls CanIf_Transmit to transmit 15 bytes of DT frame and the padding
    12: confirm the TP.DT packet
    13: Set the PduR_J1939TpCopyTxData return to BUFREQ_E_BUSY
    14: VP: the module calls PduR_J1939TpCopyTxData trying to Assurance Data
    15: Set the PduR_J1939TpCopyTxData return to BUFREQ_OK
    16: VP: the module calls PduR_J1939TpCopyTxData to get Assurance Data
    17: VP: The module calls CanIf_Transmit to send EOMS
    18: confirm the EOMS packet
    19: Receive a TP.CM_EOM packet
    20: VP: The module calls PduR_J1939TpTxConfirmation
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1522</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_AssuranceData_Test/source/application/Tests.c</sourcefile>
      <sourceline>254</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of the assurance data when the PduR_J1939TpCopyTxData function returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK
    05: Call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit to transmit TP.CM_RTS message
    07: confirm the TP.CM_RTS packet
    08: Receive a TP.CM_CTS packet
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls CanIf_Transmit to transmit 15 bytes of DT frame and the padding
    12: confirm the TP.DT packet
    13: Set the PduR_J1939TpCopyTxData return to BUFREQ_E_NOT_OK
    14: VP: the module calls PduR_J1939TpCopyTxData trying to Assurance Data
    15: Call J1939Tp_MainFunction
    16: VP: The module calls CanIf_Transmit to send Abort message
    18: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    19: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1523</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_ASSURANCE_DATA_TRSMT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_AssuranceData_Test/source/application/Tests.c</sourcefile>
      <sourceline>437</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of the assurance data if the PduR_J1939TpCopyTxData returns BUFREQ_E_BUSY
    till the Tr timeout elapses

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit
    04: VP: J1939Tp_Transmit return E_OK
    05: Call J1939Tp_MainFunction
    06: VP: The module calls CanIf_Transmit to transmit TP.CM_RTS message
    07: confirm the TP.CM_RTS packet
    08: Receive a TP.CM_CTS packet
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls CanIf_Transmit to transmit 15 bytes of DT frame and the padding
    12: confirm the TP.DT packet
    13: Set the PduR_J1939TpCopyTxData return to BUFREQ_E_BUSY
    14: Wait for Tr to elapse
    15: VP: the module calls PduR_J1939TpCopyTxData trying to Assurance Data
    16: VP: The module calls Det_ReportError to report J1939TP_E_TIMEOUT_TR
    17: VP: The module calls CanIf_Transmit to send Abort message
    18: Confirm the Abort message
    19: Call J1939Tp_MainFunction
    20: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1524</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_FD_CONC_TRSMT_CMDT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Concurrent_Test/source/application/Tests.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of concurrent CMDT transmission 

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: Call J1939Tp_Transmit with SA = 20, DA = 70 and Length = 20
    04: VP: J1939Tp_Transmit return E_OK
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: The module calls CanIf_Transmit
    08: confirm the TP.CM_RTS packet
    09: Call J1939Tp_MainFunction
    10: Receive a TP.CM_CTS packet for SA = 20
    11: Call J1939Tp_MainFunction
    12: VP: the module calls PduR_J1939TpCopyTxData to get new data
    13: VP: The module calls CanIf_Transmit for SA = 20
    14: confirm the TP.DT packet
    15: Call J1939Tp_Transmit with SA = 10, DA = 70 and Length = 15
    16: VP: J1939Tp_Transmit return E_OK
    17: Call J1939Tp_MainFunction
    18: VP: the module calls PduR_J1939TpCopyTxData to get new data
    19: VP: The module calls CanIf_Transmit for RTS for SA = 10
    20: VP: The module calls CanIf_Transmit for DT for SA = 20
    21: Call J1939Tp_MainFunction
    22: confirm the TP.DT packet 
    23: Call J1939Tp_MainFunction
    24: Receive a TP.CM_CTS packet
    25: confirm the TP.CM_RTS packet
    26: VP: the module calls PduR_J1939TpCopyTxData to get new data
    27: VP: The module calls CanIf_Transmit for SA = 20
    28: confirm the TP.DT packet
    29: Call J1939Tp_MainFunction
    30: Receive a TP.CM_CTS_1 packet
    31: Call J1939Tp_MainFunction
	32: VP: The module calls CanIf_Transmit for EOMS
	33: confirm the TP.CM packet for EOMS
	34: Call J1939Tp_MainFunction
    35: VP: the module calls PduR_J1939TpCopyTxData to get new data
    36: VP: The module calls CanIf_Transmit for SA = 20
    37: confirm the TP.DT packet
    38: Receive a TP.CM_EOM packet
    39: VP: The module calls PduR_J1939TpTxConfirmation for SA = 20
    40: Call J1939Tp_MainFunction
    41: VP: the module calls PduR_J1939TpCopyTxData to get new data
    42: VP: The module calls CanIf_Transmit for SA = 10
    43: confirm the TP.DT packet
    44: Call J1939Tp_MainFunction
    45: VP: the module calls PduR_J1939TpCopyTxData to get new data
    46: VP: The module calls CanIf_Transmit for SA = 10
    47: confirm the TP.DT packet
    48: Call J1939Tp_MainFunction
	49: VP: The module calls CanIf_Transmit for EOMS
	50: confirm the TP.CM packet for EOMS
	51: Call J1939Tp_MainFunction
    52: Receive a TP.CM_EOM_1 packet
    53: VP: The module calls PduR_J1939TpTxConfirmation for SA = 10
    54: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.Sa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1525</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Direct_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of Direct transmission when PduR_J1939TpCopyTxData returns BUFREQ_E_BUSY

Test Object: 
    Multi-PG transmission
    Direct Pg transmission

Test Precondition: 
    - The transmission is on CanFD channel

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls EcuC_SetMetaDataCanId
    12: VP: The module calls PduR_J1939TpTransmit
    13: confirm the Direct pg packet
    14: Call J1939Tp_MainFunction
    15: Module Call PduR_J1939TpTxConfirmation
    16: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.C_PGN.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1526</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Direct_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>177</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario when data length &lt; 60 for CanFD channel,
    testing for no padding and the data length is transmitted as received from the upper layer

Test Object: 
    Multi-PG transmission
    Direct Pg transmission

Test Precondition: 
    - The transmission is on CanFD channel

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls EcuC_SetMetaDataCanId
    12: VP: The module calls PduR_J1939TpTransmit
    13: confirm the Direct pg packet
    14: Call J1939Tp_MainFunction
    15: Module Call PduR_J1939TpTxConfirmation
    16: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.C_PGN.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1527</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Direct_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>316</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of J1939Tp_CancelTransmit for direct pg.

Test Object: 
    Multi-PG transmission
    Direct Pg transmission

Test Precondition: 
    - The transmission is on CanFD channel

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs
      03: set MetaData source ,destination and priority values
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaDataSourceAddr
      07: VP: The module calls EcuC_GetMetaDataTargetAddr
      08: VP: The module calls EcuC_GetMetaDataPriority
      09: Set Invalid RetVal for PduR_J1939TpCopyTxData to adhere code coverage
      10: VP : Check if the J1939Tp_CancelTransmit returns E_NOT_OK even after
          accepting the J1939Tp_Transmit request
      11: Set valid RetVal for PduR_J1939TpCopyTxData
      12: Call J1939Tp_MainFunction
      13: VP: the module calls PduR_J1939TpCopyTxData to get new data
      14: VP: The module calls EcuC_SetMetaDataCanId
      15: VP: The module calls PduR_J1939TpTransmit
      16: confirm the TP.DT packet
      17: VP : Check if the J1939Tp_CancelTransmit returns E_NOT_OK after
          direct frame is transmitted to lower layer.
      18: Call J1939Tp_MainFunction
      19: Module Call PduR_J1939TpTxConfirmation
      20: VP : Check if the J1939Tp_CancelTransmit returns E_NOT_OK after
          direct frame is transmitted successfully
      21: Check for trace empty
      22: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.C_PGN.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00203.Transmitted.DirectPg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1528</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Direct_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>484</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of Direct Frame transmission scenario
    when PduR_J1939TpCopyTxData returns BUFREQ_E_BUSY until timeout

Test Object: 
    Multi-PG transmission
    Direct Pg transmission

Test Precondition: 
    - The transmission is on CanFD channel

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs
      03: set MetaData source ,destination and priority values
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaDataSourceAddr
      07: VP: The module calls EcuC_GetMetaDataTargetAddr
      08: VP: The module calls EcuC_GetMetaDataPriority
      09: Set PduR_J1939TpCopyTxData return value to BUFREQ_E_BUSY
      10: Call J1939Tp_MainFunction till TR timeout
      11: Call J1939Tp_MainFunction
      12: The module calls Det_ReportError due to Timeout
      13: VP: The module calls PduR_J1939TpTxConfirmation
      14: Check Trace Empty
      15: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.Direct.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1529</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Direct_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>613</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the silent connection abort scenario when J1939Tp_TxConfirmation is
    received with result E_NOT_OK.

Test Object: 
    Multi-PG transmission
    Direct Pg transmission

Test Precondition: 
    - The transmission is on CanFD channel

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls EcuC_SetMetaDataCanId
    12: VP: The module calls PduR_J1939TpTransmit
    13: Confirm the Direct packet with delayed E_NOT_OK result
    14: Call J1939Tp_MainFunction
    15: Module Call PduR_J1939TpTxConfirmation
    16: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.C_PGN.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1530</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CANFD_SEGM_TRSMT_DIRECT_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Direct_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>756</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of Direct Transmission when PduR_J1939TpTransmit returns
    E_NOT_OK for Direct PG.

Test Object: 
    Multi-PG transmission
    Direct Pg transmission

Test Precondition: 
    - The transmission is on CanFD channel

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority and PduR_J1939TpTransmit return values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls EcuC_SetMetaDataCanId
    12: VP: The module calls PduR_J1939TpTransmit
    13: VP: Check the TP.DT packet transmitted via PduR_J1939TpTransmit
    14: Call J1939Tp_MainFunction
    15: Module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    16: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.C_PGN.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.PduR_J1939TpTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1531</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_DIRECT_Invalid_CM_Abort_Length</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Direct_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>896</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test that receiving CM_Abort with invalid length (8 bytes) will be ignored, and checks that the direct transmission will be continued

Test Object: 
    Invalid Length Abort reception
    Direct Pg transmission

Test Precondition: 
    - The transmission is on CanFD channel

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Receive a TP.Conn_Abort packet with invalid length
    05: VP: The module calls Det_ReportError to report invalid length error
    06: Call J1939Tp_Transmit
    07: VP: J1939Tp_Transmit return E_OK
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: Call J1939Tp_MainFunction
    12: VP: the module calls PduR_J1939TpCopyTxData to get new data
    13: VP: The module calls EcuC_SetMetaDataCanId
    14: VP: The module calls PduR_J1939TpTransmit
    15: confirm the Direct pg packet
    16: Call J1939Tp_MainFunction
    17: Module Call PduR_J1939TpTxConfirmation
    18: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.C_PGN.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1532</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_DIRECT_CM_Abort_IDLE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Direct_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1048</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks that receiving TP.Conn_Abort when nsdu is idle is ignored without notification to the upper layer, and direct transmission will happen.

Test Object: 
    TP.Conn_Abort reception,
    Direct transmission

Test Precondition: 
    - The transmission is on CanFD channel

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Receive a TP.Conn_Abort packet 
    05: 05: Call main function
    06: VP: Check trace empty to conclude that unexpected Abort frame is ignored
    07: Call J1939Tp_TransmitCall J1939Tp_Transmit
    08: VP: J1939Tp_Transmit return E_OK
    09: VP: The module calls EcuC_GetMetaDataSourceAddr
    10: VP: The module calls EcuC_GetMetaDataTargetAddr
    11: VP: The module calls EcuC_GetMetaDataPriority
    12: Call J1939Tp_MainFunction
    13: VP: the module calls PduR_J1939TpCopyTxData to get new data
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: VP: The module calls PduR_J1939TpTransmit
    16: confirm the Direct pg packet
    17: Call J1939Tp_MainFunction
    18: Module Call PduR_J1939TpTxConfirmation
    19: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Abort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.UnexpectedDatasegmentReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1533</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>114</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario,from sending RTS till receiving EOM frame.
    And test that Source /Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    09: VP: The module calls CanIf_Transmit
    10: confirm the TP.CM_RTS packet
    11: Receive a TP.CM_CTS packet
    12: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    13: Call J1939Tp_MainFunction
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    16: VP: The module calls CanIf_Transmit
    17: confirm the TP.DT packet
    : repeat step from 13 to 17 two times to send all DT
    18: VP: the module calls PduR_J1939TpCopyTxData to get the Assurance data according to configuration
    19: VP: The module calls CanIf_Transmit to transmit the EOMS
    19: Receive a TP.CM_EOM packet
    20: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    21: Module Call PduR_J1939TpTxConfirmation
    22: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_DT.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1534</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>414</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario,while wait cts is received.
    And test that Source /Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 126 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    09: VP: The module calls CanIf_Transmit
    10: confirm the TP.CM_RTS packet
    11: Receive wait CTS packet
    12: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    13: Call J1939Tp_MainFunction
    14: Receive a TP.CM_CTS packet
    15: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    16: Call J1939Tp_MainFunction
    17: VP: the module calls PduR_J1939TpCopyTxData to get new data
    18: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.DT packet
    : repeat step from 16 to 20 two times to send all DT
    21: VP: the module calls PduR_J1939TpCopyTxData to get the Assurance data according to configuration
    22: Receive a TP.CM_EOM packet
    23: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    24: Module Call PduR_J1939TpTxConfirmation
    25: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Accept.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.DT.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1535</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_TRSMT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>729</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of 1785 bytes transmission scenario via CMDT, Also checks
    the handling of unexpected and invalid EOM Frame.
    And test that Source /Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception
    J1939TpTxCancellationSupport is disabled.

Test Precondition: 
    -

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs - Prepare the PduR stub to send 16777215 bytes of data
      03: set MetaData source ,destination and priority values according to metadata configuration
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
      07: Call J1939Tp_MainFunction
      08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      09: VP: The module calls CanIf_Transmit
      10: confirm the TP.CM_RTS packet
      11: Loop for complete 1785 bytes transmission 1785/7=255frames, 255/3=85 Block
      12: Trigger a CTS Frame with Invalid PGN
      13: Call J1939Tp_MainFunction
      14: The module calls Det_ReportError with J1939TP_E_INVALID_PGN
      15: Set a valid CTS Frame to continue valid CMDT Transmission
      16: Receive a TP.CM_CTS packet
      17: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
      18: Call J1939Tp_MainFunction
      19: VP: the module calls PduR_J1939TpCopyTxData to get new data
      20: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      21: VP: The module calls CanIf_Transmit
      22: confirm the TP.DT packet
      23: Scenario to test CancelTransmit when J1939TpTxCancellationSupport is disabled
      24: VP: Call J1939Tp_CancelTransmit with valid TxSduId during data transmission and
          check if the api returns E_NOT_OK
      25: Scenario to Test EOM Frame received with invalid Sdulength during Transmission
      26: Receive a TP.CM_EOM packet
      27: Check for trace empty, indicating Abort frame is dropped
      28: Scenario to Test ABORT Frame received for CanFD channel, with Sdulength of non-CanFD during Transmission
      29: Receive a TP.CM_EOM packet
      30: Check for trace empty, indicating Abort frame is dropped
      31: Scenario to Test Unexpected EOM Frame received during Transmission
      32: Receive a TP.CM_EOM packet
      33: Check for trace empty, indicating Abort frame is dropped
      34: Scenario to Test EOM Frame received with invalid message length during Transmission
      35: Receive a TP.CM_EOM packet
      36: Check for trace empty, indicating Abort frame is dropped
      37: Scenario to Test EOM Frame received with invalid Control Byte during Transmission
      38: Receive a TP.CM_EOM packet
      39: Check for trace empty, indicating Abort frame is dropped
      40: VP: the module calls PduR_J1939TpCopyTxData to get the Assurance data according to configuration
      41: VP: The module calls CanIf_Transmit to send EOMS
      42: confirm the EOMS packet
      43: Receive a TP.CM_EOM packet
      44: Module Call EcuC_GetMetaDataCanId according to metadata configuration
      45: Module Call PduR_J1939TpTxConfirmation
      46: Call stack empty?
      47: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Eom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ContinueDT.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1536</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>114</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario,from sending RTS till receiving EOM frame.
    And test that Source /Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    09: VP: The module calls CanIf_Transmit
    10: confirm the TP.CM_RTS packet
    11: Receive a TP.CM_CTS packet
    12: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    13: Call J1939Tp_MainFunction
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    16: VP: The module calls CanIf_Transmit
    17: confirm the TP.DT packet
    : repeat step from 13 to 17 two times to send all DT
    18: VP: the module calls PduR_J1939TpCopyTxData to get the Assurance data according to configuration
    19: VP: The module calls CanIf_Transmit to transmit the EOMS
    19: Receive a TP.CM_EOM packet
    20: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    21: Module Call PduR_J1939TpTxConfirmation
    22: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SAE.FD.TP_DT.Frame</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1537</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>414</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario,while wait cts is received.
    And test that Source /Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 126 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    09: VP: The module calls CanIf_Transmit
    10: confirm the TP.CM_RTS packet
    11: Receive wait CTS packet
    12: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    13: Call J1939Tp_MainFunction
    14: Receive a TP.CM_CTS packet
    15: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    16: Call J1939Tp_MainFunction
    17: VP: the module calls PduR_J1939TpCopyTxData to get new data
    18: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.DT packet
    : repeat step from 16 to 20 two times to send all DT
    21: VP: the module calls PduR_J1939TpCopyTxData to get the Assurance data according to configuration
    22: Receive a TP.CM_EOM packet
    23: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    24: Module Call PduR_J1939TpTxConfirmation
    25: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Initiation.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.Accept.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.DT.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.EOMS.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1538</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_SEGM_FULLDUPLEX_TRSMT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_FD_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>729</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of 1785 bytes transmission scenario via CMDT, Also checks
    the handling of unexpected and invalid EOM Frame.
    And test that Source /Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception
    J1939TpTxCancellationSupport is disabled.

Test Precondition: 
    -

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs - Prepare the PduR stub to send 16777215 bytes of data
      03: set MetaData source ,destination and priority values according to metadata configuration
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
      07: Call J1939Tp_MainFunction
      08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      09: VP: The module calls CanIf_Transmit
      10: confirm the TP.CM_RTS packet
      11: Loop for complete 1785 bytes transmission 1785/7=255frames, 255/3=85 Block
      12: Trigger a CTS Frame with Invalid PGN
      13: Call J1939Tp_MainFunction
      14: The module calls Det_ReportError with J1939TP_E_INVALID_PGN
      15: Set a valid CTS Frame to continue valid CMDT Transmission
      16: Receive a TP.CM_CTS packet
      17: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
      18: Call J1939Tp_MainFunction
      19: VP: the module calls PduR_J1939TpCopyTxData to get new data
      20: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      21: VP: The module calls CanIf_Transmit
      22: confirm the TP.DT packet
      23: Scenario to test CancelTransmit when J1939TpTxCancellationSupport is disabled
      24: VP: Call J1939Tp_CancelTransmit with valid TxSduId during data transmission and
          check if the api returns E_NOT_OK
      25: Scenario to Test EOM Frame received with invalid Sdulength during Transmission
      26: Receive a TP.CM_EOM packet
      27: Check for trace empty, indicating Abort frame is dropped
      28: Scenario to Test ABORT Frame received for CanFD channel, with Sdulength of non-CanFD during Transmission
      29: Receive a TP.CM_EOM packet
      30: Check for trace empty, indicating Abort frame is dropped
      31: Scenario to Test Unexpected EOM Frame received during Transmission
      32: Receive a TP.CM_EOM packet
      33: Check for trace empty, indicating Abort frame is dropped
      34: Scenario to Test EOM Frame received with invalid message length during Transmission
      35: Receive a TP.CM_EOM packet
      36: Check for trace empty, indicating Abort frame is dropped
      37: Scenario to Test EOM Frame received with invalid Control Byte during Transmission
      38: Receive a TP.CM_EOM packet
      39: Check for trace empty, indicating Abort frame is dropped
      40: VP: the module calls PduR_J1939TpCopyTxData to get the Assurance data according to configuration
      41: VP: The module calls CanIf_Transmit to send EOMS
      42: confirm the EOMS packet
      43: Receive a TP.CM_EOM packet
      44: Module Call EcuC_GetMetaDataCanId according to metadata configuration
      45: Module Call PduR_J1939TpTxConfirmation
      46: Call stack empty?
      47: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Eom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ContinueDT.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.FD.AssuranceData.SduLength.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1539</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>102</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario,from sending RTS till receiving EOM frame.
    And test that Source /Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    09: VP: The module calls CanIf_Transmit
    10: confirm the TP.CM_RTS packet
    11: Receive a TP.CM_CTS packet
    12: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    13: Call J1939Tp_MainFunction
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    16: VP: The module calls CanIf_Transmit
    17: confirm the TP.DT packet
    : repeat step from 13 to 17 two times to send all DT 
    18: Receive a TP.CM_EOM packet
    19: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    20: Module Call PduR_J1939TpTxConfirmation  
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.Sa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1540</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>384</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario,while wait cts is received.
    And test that Source /Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    09: VP: The module calls CanIf_Transmit
    10: confirm the TP.CM_RTS packet
    11: Receive wait CTS packet
    12: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    13: Call J1939Tp_MainFunction
    14: Receive a TP.CM_CTS packet
    15: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    16: Call J1939Tp_MainFunction
    17: VP: the module calls PduR_J1939TpCopyTxData to get new data
    18: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.DT packet
    : repeat step from 16 to 20 two times to send all DT 
    21: Receive a TP.CM_EOM packet
    22: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    23: Module Call PduR_J1939TpTxConfirmation  
    24: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1541</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>649</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of 1785 bytes transmission scenario via CMDT, Also checks
    the handling of unexpected and invalid EOM Frame.
    And test that Source /Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception
    J1939TpTxCancellationSupport is disabled.

Test Precondition: 
    -

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      03: set MetaData source ,destination and priority values according to metadata configuration
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
      07: Call J1939Tp_MainFunction
      08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      09: VP: The module calls CanIf_Transmit
      10: confirm the TP.CM_RTS packet
      11: Loop for complete 1785 bytes transmission 1785/7=255frames, 255/3=85 Block
      12: Trigger a CTS Frame with Invalid PGN
      13: Call J1939Tp_MainFunction
      14: The module calls Det_ReportError with J1939TP_E_INVALID_PGN
      15: Set a valid CTS Frame to continue valid CMDT Transmission
      16: Receive a TP.CM_CTS packet
      17: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
      18: Call J1939Tp_MainFunction
      19: VP: the module calls PduR_J1939TpCopyTxData to get new data
      20: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      21: VP: The module calls CanIf_Transmit
      22: confirm the TP.DT packet
      23: Scenario to test CancelTransmit when J1939TpTxCancellationSupport is disabled
      24: VP: Call J1939Tp_CancelTransmit with valid TxSduId during data transmission and
          check if the api returns E_NOT_OK
      25: Scenario to Test EOM Frame received with invalid Sdulength during Transmission
      26: Receive a TP.CM_EOM packet
      27: Check for trace empty, indicating Abort frame is dropped
      28: Scenario to Test Unexpected EOM Frame received during Transmission
      29: Receive a TP.CM_EOM packet
      30: Check for trace empty, indicating Abort frame is dropped
      31: Scenario to Test EOM Frame received with invalid message length during Transmission
      32: Receive a TP.CM_EOM packet
      33: Check for trace empty, indicating Abort frame is dropped
      34: Scenario to Test EOM Frame received with invalid Control Byte during Transmission
      35: Receive a TP.CM_EOM packet
      36: Check for trace empty, indicating Abort frame is dropped
      37: Receive a TP.CM_EOM packet
      38: Module Call EcuC_GetMetaDataCanId according to metadata configuration
      39: Module Call PduR_J1939TpTxConfirmation
      40: Call stack empty?
      41: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Eom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1542</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>102</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario,from sending RTS till receiving EOM frame.
    And test that Source /Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    09: VP: The module calls CanIf_Transmit
    10: confirm the TP.CM_RTS packet
    11: Receive a TP.CM_CTS packet
    12: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    13: Call J1939Tp_MainFunction
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    16: VP: The module calls CanIf_Transmit
    17: confirm the TP.DT packet
    : repeat step from 13 to 17 two times to send all DT 
    18: Receive a TP.CM_EOM packet
    19: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    20: Module Call PduR_J1939TpTxConfirmation  
    21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.Sa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1543</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>384</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario,while wait cts is received.
    And test that Source /Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK 
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_MainFunction
    08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    09: VP: The module calls CanIf_Transmit
    10: confirm the TP.CM_RTS packet
    11: Receive wait CTS packet
    12: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    13: Call J1939Tp_MainFunction
    14: Receive a TP.CM_CTS packet
    15: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    16: Call J1939Tp_MainFunction
    17: VP: the module calls PduR_J1939TpCopyTxData to get new data
    18: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.DT packet
    : repeat step from 16 to 20 two times to send all DT 
    21: Receive a TP.CM_EOM packet
    22: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    23: Module Call PduR_J1939TpTxConfirmation  
    24: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1544</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_FULLDUPEX_TRSMT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Test_FullDuplex/source/application/Tests.c.m4</sourcefile>
      <sourceline>649</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of 1785 bytes transmission scenario via CMDT, Also checks
    the handling of unexpected and invalid EOM Frame.
    And test that Source /Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception
    J1939TpTxCancellationSupport is disabled.

Test Precondition: 
    -

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      03: set MetaData source ,destination and priority values according to metadata configuration
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
      07: Call J1939Tp_MainFunction
      08: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      09: VP: The module calls CanIf_Transmit
      10: confirm the TP.CM_RTS packet
      11: Loop for complete 1785 bytes transmission 1785/7=255frames, 255/3=85 Block
      12: Trigger a CTS Frame with Invalid PGN
      13: Call J1939Tp_MainFunction
      14: The module calls Det_ReportError with J1939TP_E_INVALID_PGN
      15: Set a valid CTS Frame to continue valid CMDT Transmission
      16: Receive a TP.CM_CTS packet
      17: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
      18: Call J1939Tp_MainFunction
      19: VP: the module calls PduR_J1939TpCopyTxData to get new data
      20: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
      21: VP: The module calls CanIf_Transmit
      22: confirm the TP.DT packet
      23: Scenario to test CancelTransmit when J1939TpTxCancellationSupport is disabled
      24: VP: Call J1939Tp_CancelTransmit with valid TxSduId during data transmission and
          check if the api returns E_NOT_OK
      25: Scenario to Test EOM Frame received with invalid Sdulength during Transmission
      26: Receive a TP.CM_EOM packet
      27: Check for trace empty, indicating Abort frame is dropped
      28: Scenario to Test Unexpected EOM Frame received during Transmission
      29: Receive a TP.CM_EOM packet
      30: Check for trace empty, indicating Abort frame is dropped
      31: Scenario to Test EOM Frame received with invalid message length during Transmission
      32: Receive a TP.CM_EOM packet
      33: Check for trace empty, indicating Abort frame is dropped
      34: Scenario to Test EOM Frame received with invalid Control Byte during Transmission
      35: Receive a TP.CM_EOM packet
      36: Check for trace empty, indicating Abort frame is dropped
      37: Receive a TP.CM_EOM packet
      38: Module Call EcuC_GetMetaDataCanId according to metadata configuration
      39: Module Call PduR_J1939TpTxConfirmation
      40: Call stack empty?
      41: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00064.Eom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_INVALID_PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.RxIndication.InvalidSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1545</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_TRSMT_MultiSameSaDa</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_CMDT_Test_MultiSaDa/source/application/Tests.c.m4</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the queueing mechanism for a transmission with the same Sa/Da/Pg on different Nsdu. 
    This test checks the handling of full transmission scenario,from sending RTS till receiving EOM frame  
    And test that Source /Destination Addresses used for transmission 
    is got from MetaData (when it is configured) not from configured SA/DA or the Channel.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp 
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit for the first NSDU
    05: VP: J1939Tp_Transmit return E_OK for the first NSDU 
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_Transmit for the second NSDU
        Since there is already a connection for this SA/DA combination, NSDU state will be 
        set to PENDING, and will remain pending until the first connection is finished
    08: VP: J1939Tp_Transmit return E_OK for the second NSDU 
    09: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    10: Call J1939Tp_MainFunction
    11: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    12: VP: The module calls CanIf_Transmit
    13: confirm the TP.CM_RTS packet
    14: Receive a TP.CM_CTS packet
    15: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration
    16: Call J1939Tp_MainFunction
    17: VP: the module calls PduR_J1939TpCopyTxData to get new data
    18: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    19: VP: The module calls CanIf_Transmit
    20: confirm the TP.DT packet
      : repeat step from 14 to 17 two times to send all DT 
    21: Receive a TP.CM_EOM packet
    22: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    23: Module Call PduR_J1939TpTxConfirmation 
    24: Call main function to process Second message
    25 VP: The module calls PduR_J1939TpCopyTxData to calculate NoOfPackets for RTS frame
        for the NSDU that was previously in pending state
    26 VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration 
    27: VP: The module calls CanIf_Transmit 
    the function call itself, ... 
    28: confirm the TP.CM_RTS packet 
    29: Receive a TP.CM_CTS packet 
    30: VP: The module calls EcuC_GetMetaDataCanId  according to metadata configuration 
    31: VP: the module calls PduR_J1939TpCopyTxData to get new data 
    32: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration 
    33: VP: The module calls CanIf_Transmit 
    34: confirm the TP.DT packet 
    35: Receive a TP.CM_EOM packet 
    36: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    37: Module Call PduR_J1939TpTxConfirmation 
    38: Call main function to make sure nothing is pending
    39: shutdown module 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.NOTransProtocol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.DT.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.CTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00041.CM.RTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.NSduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00045.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.NoRetry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00047.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00119.Trans.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.CMDT.DataAvailable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.SaDaPrio</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NPDU.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00068.Padding.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00023.Segmentation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00024.Reset.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.SaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00198.NSDU.Sa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.NoMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00199.MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1546</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when PduR_J1939TpCopyTxData returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source = 20 ,destination = 255 and priority values
    04: Call J1939Tp_Transmit to Transmit BAM message with multiple frames
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: confirm the TP.CM_BAM packet
    13: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls PduR_J1939TpTxConfirmation
    16: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CopyTxData.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1547</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>214</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after Tr timeout due to PduR_J1939TpCopyTxData keep returns BUFREQ_E_BUSY

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: confirm the TP.CM_BAM packet
    13: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: Call J1939Tp_MainFunction till TR timeout
    16: Call J1939Tp_MainFunction
    17: The module calls Det_ReportError due to Timeout
    18: VP: The module calls PduR_J1939TpTxConfirmation
    19: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.BAM.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00121.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1548</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>408</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when J1939TpTxCmNPduAvailable not available

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 5 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: set MetaData source and destination values  for second transmit
    13: Call J1939Tp_Transmit again
    14: VP: J1939Tp_Transmit return E_OK
    15: VP: The module calls EcuC_GetMetaDataSourceAddr
    16: VP: The module calls EcuC_GetMetaDataTargetAddr
    17: VP: The module calls EcuC_GetMetaDataPriority
    18: Call J1939Tp_MainFunction till TR timeout
    19: The module calls Det_ReportError due to Timeout
    20: Module Call PduR_J1939TpTxConfirmation
    21: Call J1939Tp_TxConfirmation after random delay with result E_NOT_OK
    22: Module Call PduR_J1939TpTxConfirmation
    23: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1549</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>597</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when J1939TpTxDtNPduAvailable not available
    in case two different BAM messages with different SA are requested

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit for the first transmission
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067):
        The module calls CanIf_Transmit with following arguments:
        Pdu Id: 100
        Length: 8
        Payload:
        Byte 0: 0x11 = Identifier for BAM_CM
        Byte 1: 0x14 = Message size of PG (LSB)
        Byte 2: 0x00 = Message size of PG (MSB)
        Byte 3: 0x03 = total number of packets
        Byte 4: 0x03 = total number of packets in response to one CTS
        Byte 5: 0x00 = Parameter group number (LSB)
        Byte 6: 0xfe = Parameter group number
        Byte 7: 0x00 = Parameter group number (MSB)
    12: confirm the TP.BAM_CM packet for the first transmission
    13: set MetaData source and destination values  for second transmit
    14: Call J1939Tp_Transmit again for the second transmission
    15: VP: J1939Tp_Transmit return E_OK
    16: VP: The module calls EcuC_GetMetaDataSourceAddr
    17: VP: The module calls EcuC_GetMetaDataTargetAddr
    18: VP: The module calls EcuC_GetMetaDataPriority
    19: Call J1939Tp_MainFunction
    20: VP: The module calls EcuC_SetMetaDataCanId
    21: VP: The module calls CanIf_Transmit for the second transmission
    22: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    23: VP: the module calls PduR_J1939TpCopyTxData to get new data
    24: VP: The module calls EcuC_SetMetaDataCanId
    25: VP: The module calls CanIf_Transmit first transmission
    26: confirm the TP.BAM_CM packet
    27: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    28: Call J1939Tp_MainFunction till TR timeout
    29: The module calls Det_ReportError due to Timeout
    30: Module Call PduR_J1939TpTxConfirmation
    31: Module Call PduR_J1939TpTxConfirmation
    32: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00032.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1550</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>873</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when CanIf_Transmit returns
    E_NOT_OK for TP_CM_BAM Frame.

Test Object: 
    TP.CM_BAM

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source = 20 ,destination = 255 and priority and CanIf_Transmit return values
    04: Call J1939Tp_Transmit to Transmit BAM message with multiple frames
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    13: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1551</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1009</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when CanIf_Transmit returns
    E_NOT_OK for Data Frame in BAM Transmission.

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source = 20 ,destination = 255 and priority values
    04: Call J1939Tp_Transmit to Transmit BAM message with multiple frames
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    13 : Set CanIf_Transmit return value to E_NOT_OK
    14: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    15: VP: the module calls PduR_J1939TpCopyTxData to get new data
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit to transmit data
    18: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    19: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1552</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1173</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when CanIf_Transmit returns
    E_NOT_OK for CM Frame in BAM Connection abort Transmission.

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source = 20 ,destination = 255 and priority values
    04: Call J1939Tp_Transmit to Transmit BAM message with multiple frames
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    13: Call the J1939Tp_CancelTransmit
    14: Set CanIf_Transmit return value to E_NOT_OK
    15: Call J1939Tp_MainFunction to send Connection abort
    16: VP: The module calls EcuC_SetMetaDataCanId and CanIf_Transmit for sending Connection abort
    17: Call J1939Tp_MainFunction after failure in sending Conn abort
    18: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    19: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1553</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1332</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when J1939TpTxCmNPdu is not available

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 5 bytes of data
    03: set MetaData source, destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    13: Call the J1939Tp_MainFunction to send Data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls EcuC_SetMetaDataCanId
    16: VP: The module calls CanIf_Transmit to transmit data
    17: Confirm the TP.CM_BAM packet
    18: Call J1939Tp_Transmit again
    19: VP: J1939Tp_Transmit return E_OK
    20: VP: The module calls EcuC_GetMetaDataSourceAddr
    21: VP: The module calls EcuC_GetMetaDataTargetAddr
    22: VP: The module calls EcuC_GetMetaDataPriority
    23: Call the J1939Tp_MainFunction to send BAM CM frame
    24: VP: The module calls EcuC_SetMetaDataCanId
    25: VP: The module calls CanIf_Transmit
    26: Call the J1939Tp_CancelTransmit
    27: Call the J1939Tp_MainFunction to send Conn Abort for the first connection, while CM pdu is busy
    28: The module calls Det_ReportError due to Timeout
    29: VP: Module Call PduR_J1939TpTxConfirmation
    30: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1554</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1560</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the connection abort when CanIf_Transmit return E_NOT_OK for transmitting EOMS.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 70 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: confirm the TP.CM_BAM packet
    13: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls EcuC_SetMetaDataCanId
    16: VP: The module calls CanIf_Transmit
    17: confirm the TP.DT packet
    18: Call J1939Tp_MainFunction till tbammin time elapse to send EOMS frame
    19: VP: The module calls EcuC_SetMetaDataCanId for sending EOMS
    20: VP: The module calls CanIf_Transmit to send EOMS
    21: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    22: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00203.Transmitted.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1555</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_Invalid_Length</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>1779</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks that the BAM transmission is rejected when the data size exceeds 15300 bytes.

Test Object: 

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Call J1939Tp_Transmit
    03: VP: J1939Tp_Transmit return E_NOT_OK
    04: Check that module call Det_ReportError
    05: Call the J1939Tp_Shutdown()

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.MaxPDUSize.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1556</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when PduR_J1939TpCopyTxData returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source = 20 ,destination = 255 and priority values
    04: Call J1939Tp_Transmit to Transmit BAM message with multiple frames
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: confirm the TP.CM_BAM packet
    13: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls PduR_J1939TpTxConfirmation
    16: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CopyTxData.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1557</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>219</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission after Tr timeout due to PduR_J1939TpCopyTxData keep returns BUFREQ_E_BUSY

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: confirm the TP.CM_BAM packet
    13: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: Call J1939Tp_MainFunction till TR timeout
    16: Call J1939Tp_MainFunction
    17: The module calls Det_ReportError due to Timeout
    18: VP: The module calls PduR_J1939TpTxConfirmation
    19: shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00228.BAM.Timeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00121.Tr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1558</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>413</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when CanIf_Transmit returns
    E_NOT_OK for TP_CM_BAM Frame.

Test Object: 
    TP.CM_BAM

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source = 20 ,destination = 255 and priority and CanIf_Transmit return values
    04: Call J1939Tp_Transmit to Transmit BAM message with multiple frames
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    13: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1559</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>549</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when CanIf_Transmit returns
    E_NOT_OK for Data Frame in BAM Transmission.

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source = 20 ,destination = 255 and priority values
    04: Call J1939Tp_Transmit to Transmit BAM message with multiple frames
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    13 : Set CanIf_Transmit return value to E_NOT_OK
    14: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    15: VP: the module calls PduR_J1939TpCopyTxData to get new data
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit to transmit data
    18: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    19: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1560</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>713</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when CanIf_Transmit returns
    E_NOT_OK for CM Frame in BAM Connection abort Transmission.

Test Object: 
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source = 20 ,destination = 255 and priority values
    04: Call J1939Tp_Transmit to Transmit BAM message with multiple frames
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    13: Call the J1939Tp_CancelTransmit
    14: Set CanIf_Transmit return value to E_NOT_OK
    15: Call J1939Tp_MainFunction to send Connection abort
    16: VP: The module calls EcuC_SetMetaDataCanId and CanIf_Transmit for sending Connection abort
    17: Call J1939Tp_MainFunction after failure in sending Conn abort
    18: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    19: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.CanIfTransmit.Tx.ENOTOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1561</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>872</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of abort transmission when J1939TpTxCmNPdu is not available

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 5 bytes of data
    03: set MetaData source, destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    13: Call the J1939Tp_MainFunction to send Data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls EcuC_SetMetaDataCanId
    16: VP: The module calls CanIf_Transmit to transmit data
    17: Confirm the TP.CM_BAM packet
    18: Call J1939Tp_Transmit again
    19: VP: J1939Tp_Transmit return E_OK
    20: VP: The module calls EcuC_GetMetaDataSourceAddr
    21: VP: The module calls EcuC_GetMetaDataTargetAddr
    22: VP: The module calls EcuC_GetMetaDataPriority
    23: Call the J1939Tp_MainFunction to send BAM CM frame
    24: VP: The module calls EcuC_SetMetaDataCanId
    25: VP: The module calls CanIf_Transmit
    26: Call the J1939Tp_CancelTransmit
    27: Call the J1939Tp_MainFunction to send Conn Abort for the first connection, while CM pdu is busy
    28: The module calls Det_ReportError due to Timeout
    29: VP: Module Call PduR_J1939TpTxConfirmation
    30: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1562</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_TRSMT_ABORT_TiemOut_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>1100</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the connection abort when CanIf_Transmit return E_NOT_OK for transmitting EOMS.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 70 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_BAM packet
    11: VP (J1939TP0043, J1939TP0047_1, J1939TP.SAE.0037, J1939TP0067)
    12: confirm the TP.CM_BAM packet
    13: Call J1939Tp_MainFunction till tbammin time elapse to send data frame
    14: VP: the module calls PduR_J1939TpCopyTxData to get new data
    15: VP: The module calls EcuC_SetMetaDataCanId
    16: VP: The module calls CanIf_Transmit
    17: confirm the TP.DT packet
    18: Call J1939Tp_MainFunction till tbammin time elapse to send EOMS frame
    19: VP: The module calls EcuC_SetMetaDataCanId for sending EOMS
    20: VP: The module calls CanIf_Transmit to send EOMS
    21: VP: The module calls PduR_J1939TpTxConfirmation with E_NOT_OK
    22: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00203.Transmitted.BAM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.TP_DT.DataField.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1563</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_BAM_Invalid_Length_TiemOut</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Abort_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>1319</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks that the BAM transmission is rejected when the data size exceeds 15300 bytes.

Test Object: 

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Call J1939Tp_Transmit
    03: VP: J1939Tp_Transmit return E_NOT_OK
    04: Check that module call Det_ReportError
    05: Call the J1939Tp_Shutdown()

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.MaxPDUSize.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1564</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_FD_BAM_CLASSICBAM</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Classical_BAM/source/application/Tests.c</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks that J1939Tp can handle only 4 concurrent sessions per origanator and responder.

Test Object: 

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: Call J1939Tp_Transmit with SA = 30, DA = 0xFF and Length = 180
    04: VP: J1939Tp_Transmit return E_OK
    05: VP: The module calls EcuC_GetMetaDataSourceAddr
    06: VP: The module calls EcuC_GetMetaDataTargetAddr
    07: VP: The module calls EcuC_GetMetaDataPriority
    08: Call J1939Tp_MainFunction
    09: VP: The module calls PduR_J1939TpCopyTxData as the dynamic calculation is enabled
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    12: confirm the FD.TP.CM_RTS packet
    13: Call J1939Tp_MainFunction
    14: Call J1939Tp_Transmit with SA = 30, DA = 0xFF and Length = 180
    15: VP: J1939Tp_Transmit return E_OK
    16: VP: The module calls EcuC_GetMetaDataSourceAddr
    17: VP: The module calls EcuC_GetMetaDataTargetAddr
    18: VP: The module calls EcuC_GetMetaDataPriority
    19: VP: The module calls PduR_J1939TpCopyTxData
    20: Call J1939Tp_MainFunction
    21: VP: The module calls EcuC_SetMetaDataCanId
    22: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    23: confirm the FD.TP.CM_RTS packet
    24: Call J1939Tp_MainFunction
    25: Call J1939Tp_Transmit with SA = 30, DA = 0xFF and Length = 180
    26: VP: J1939Tp_Transmit return E_OK
    27: VP: The module calls EcuC_GetMetaDataSourceAddr
    28: VP: The module calls EcuC_GetMetaDataTargetAddr
    29: VP: The module calls EcuC_GetMetaDataPriority
    30: Call J1939Tp_MainFunction
    31: VP: The module calls PduR_J1939TpCopyTxData
    32: VP: The module calls EcuC_SetMetaDataCanId
    33: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    34: confirm the FD.TP.CM_RTS packet
    35: Call J1939Tp_MainFunction
        repeat steps from 26 to 36 five more times
    36: Call J1939Tp_Transmit with SA = 30, DA = 0xFF and Length = 180
    37: VP: J1939Tp_Transmit return E_NOT_OK as the max number of concurrent sessions achieved
    38: VP: The module calls EcuC_GetMetaDataSourceAddr
    39: VP: The module calls EcuC_GetMetaDataTargetAddr
    40: VP: The module calls EcuC_GetMetaDataPriority
    41: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.ConcurrentSessions.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.UniqueSession.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1565</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_FD_CONCURRENT_CONFIRMATION_TEST</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Concurrent_Confirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test checks that J1939Tp reacts correctly when two messages are sent simultaneously and their confirmations also come at the same time (before TBammin timer elapses)

Test Object: 

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: First transmission Call J1939Tp_Transmit with SA = 30, DA = 0xFF and Length = 180
    04: VP: J1939Tp_Transmit return E_OK
    05: VP: The module calls EcuC_GetMetaDataSourceAddr
    06: VP: The module calls EcuC_GetMetaDataTargetAddr
    07: VP: The module calls EcuC_GetMetaDataPriority
    08: Second transmission Call J1939Tp_Transmit with SA = 30, DA = 0xFF and Length = 180
    09: VP: J1939Tp_Transmit return E_OK
    10: VP: The module calls EcuC_GetMetaDataSourceAddr
    11: VP: The module calls EcuC_GetMetaDataTargetAddr
    12: VP: The module calls EcuC_GetMetaDataPriority
    13: Call J1939Tp_MainFunction
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_BAM packet
    16: Confirm the first FD.TP.CM_BAM packet
    17: Call J1939Tp_MainFunction
    18: VP: The module calls EcuC_SetMetaDataCanId
    19: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_BAM packet
    20: Confirm the second FD.TP.CM_BAM packet 
    21: Call J1939Tp_MainFunction untill TBAMMIN expires and both messages are in DATA_TRANSMISSION state, first message will be processed
    22: Confirm the first DT packet for the first message, DT-PDU becomes available for the second message
    23: Second message sends the its first packet of data
    24: Confirm first DT packet for second message
    25: Loop untill next frames
    26: First message second frame sent
    27: Confirm second frame for the first message
    28: Second message second frame
    29: Confirm second frame of the second message
    30: Call main function untill next frames
    31: First message Third frame
    32: Confirm Third frame for the first message
    33: Second message third frame
    34: Confirm Third frame for the first message
    35: Messages are now in EOMS state
    36: J1939TP sends EOMS frame for the first message and waits for confirmation
    37: Confirm the EOMS frame for the first message
    38: J1939Tp sends EOMS frame for the second message
    39: Confirm the EOMS frame for the second message
    40: Do 255 loops and see that the trace is empty
    41: Shutdown module

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.ConcurrentSessions.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.UniqueSession.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1566</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_FD_BAM_CONC_SESSIONS_TRSMT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_BAM_Concurrent_Sessions_Test/source/application/Tests.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks that J1939Tp can handle only 4 concurrent sessions per origanator and responder.

Test Object: 

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: Call J1939Tp_Transmit with SA = 30, DA = 0xFF and Length = 180
    04: VP: J1939Tp_Transmit return E_OK
    05: VP: The module calls EcuC_GetMetaDataSourceAddr
    06: VP: The module calls EcuC_GetMetaDataTargetAddr
    07: VP: The module calls EcuC_GetMetaDataPriority
    08: Call J1939Tp_MainFunction
    09: VP: The module calls PduR_J1939TpCopyTxData as the dynamic calculation is enabled
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    12: confirm the FD.TP.CM_RTS packet
    13: Call J1939Tp_MainFunction
    14: Call J1939Tp_Transmit with SA = 30, DA = 0xFF and Length = 180
    15: VP: J1939Tp_Transmit return E_OK
    16: VP: The module calls EcuC_GetMetaDataSourceAddr
    17: VP: The module calls EcuC_GetMetaDataTargetAddr
    18: VP: The module calls EcuC_GetMetaDataPriority
    19: VP: The module calls PduR_J1939TpCopyTxData
    20: Call J1939Tp_MainFunction
    21: VP: The module calls EcuC_SetMetaDataCanId
    22: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    23: confirm the FD.TP.CM_RTS packet
    24: Call J1939Tp_MainFunction
    25: Call J1939Tp_Transmit with SA = 30, DA = 0xFF and Length = 180
    26: VP: J1939Tp_Transmit return E_OK
    27: VP: The module calls EcuC_GetMetaDataSourceAddr
    28: VP: The module calls EcuC_GetMetaDataTargetAddr
    29: VP: The module calls EcuC_GetMetaDataPriority
    30: Call J1939Tp_MainFunction
    31: VP: The module calls PduR_J1939TpCopyTxData
    32: VP: The module calls EcuC_SetMetaDataCanId
    33: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    34: confirm the FD.TP.CM_RTS packet
    35: Call J1939Tp_MainFunction
        repeat steps from 26 to 36 five more times
    36: Call J1939Tp_Transmit with SA = 30, DA = 0xFF and Length = 180
    37: VP: J1939Tp_Transmit return E_NOT_OK as the max number of concurrent sessions achieved
    38: VP: The module calls EcuC_GetMetaDataSourceAddr
    39: VP: The module calls EcuC_GetMetaDataTargetAddr
    40: VP: The module calls EcuC_GetMetaDataPriority
    41: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.BamTransfer.ConcurrentSessions.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.UniqueSession.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1567</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_FD_MAX_CONC_SESSIONS_TRSMT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_Concurrent_Sessions_Test/source/application/Tests.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks that J1939Tp can handle only 8 concurrent sessions per origanator and responder.

Test Object: 

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 180 bytes of data
    03: Call J1939Tp_Transmit with SA = 30, DA = 10 and Length = 180
    04: VP: J1939Tp_Transmit return E_OK
    05: VP: The module calls EcuC_GetMetaDataSourceAddr
    06: VP: The module calls EcuC_GetMetaDataTargetAddr
    07: VP: The module calls EcuC_GetMetaDataPriority
    08: Call J1939Tp_MainFunction
    09: VP: The module calls PduR_J1939TpCopyTxData as the dynamic calculation is enabled
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    12: confirm the FD.TP.CM_RTS packet
    13: Call J1939Tp_MainFunction
    14: Call J1939Tp_Transmit with SA = 30, DA = 10 and Length = 180
    15: VP: J1939Tp_Transmit return E_OK
    16: VP: The module calls EcuC_GetMetaDataSourceAddr
    17: VP: The module calls EcuC_GetMetaDataTargetAddr
    18: VP: The module calls EcuC_GetMetaDataPriority
    19: Call J1939Tp_MainFunction
    20: VP: The module calls PduR_J1939TpCopyTxData
    21: Call J1939Tp_MainFunction
    22: VP: The module calls EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    24: confirm the FD.TP.CM_RTS packet
    25: Call J1939Tp_MainFunction
    26: Call J1939Tp_Transmit with SA = 30, DA = 10 and Length = 180
    27: VP: J1939Tp_Transmit return E_OK
    28: VP: The module calls EcuC_GetMetaDataSourceAddr
    29: VP: The module calls EcuC_GetMetaDataTargetAddr
    30: VP: The module calls EcuC_GetMetaDataPriority
    31: Call J1939Tp_MainFunction
    32: VP: The module calls PduR_J1939TpCopyTxData
    33: VP: The module calls EcuC_SetMetaDataCanId
    34: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    35: confirm the FD.TP.CM_RTS packet
    36: Call J1939Tp_MainFunction
        repeat steps from 26 to 36 five more times
    37: Call J1939Tp_Transmit with SA = 30, DA = 10 and Length = 180
    38: VP: J1939Tp_Transmit return E_NOT_OK as the max number of concurrent sessions achieved
    39: VP: The module calls EcuC_GetMetaDataSourceAddr
    40: VP: The module calls EcuC_GetMetaDataTargetAddr
    41: VP: The module calls EcuC_GetMetaDataPriority
    42: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1568</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_CONC_SESSIONS_TRSMT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_Concurrent_Sessions_Test/source/application/Tests.c</sourcefile>
      <sourceline>332</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of three channels concurrently per the same origanator and responder, and .

Test Object: 

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: Call J1939Tp_Transmit with SA = 30, DA = 10 and Length =
    04: VP: J1939Tp_Transmit return E_OK
    05: VP: The module calls EcuC_GetMetaDataSourceAddr
    06: VP: The module calls EcuC_GetMetaDataTargetAddr
    07: Call J1939Tp_MainFunction
    08: VP: The module calls PduR_J1939TpCopyTxData as the dynamic calculation is enabled
    09: VP: The module calls PduR_J1939TpTransmit for direct transmission
    10: Call J1939Tp_MainFunction
    11: Call J1939Tp_Transmit with SA = 30, DA = 10 and Length =
    12: VP: J1939Tp_Transmit return E_OK
    13: VP: The module calls EcuC_GetMetaDataSourceAddr
    14: VP: The module calls EcuC_GetMetaDataTargetAddr
    15: VP: The module calls EcuC_GetMetaDataPriority
    16: Call J1939Tp_MainFunction
    17: VP: The module calls PduR_J1939TpCopyTxData
    18: Call J1939Tp_MainFunction
    19: VP: The module calls EcuC_SetMetaDataCanId
    20: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    21: confirm the FD.TP.CM_RTS packet
    22: Call J1939Tp_MainFunction
    23: Call J1939Tp_MainFunction
    24: VP: the module calls PduR_J1939TpCopyTxData to get new data
    25: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    26: VP: The module calls CanIf_Transmit
    27: confirm the TP.DT packet
    28: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    29: VP: The module calls CanIf_Transmit
    30: confirm the TP.DT packet
    31: Call J1939Tp_Transmit for the third time for the same SA and DA
    32: VP: J1939Tp_Transmit return E_OK
    33: VP: The module calls EcuC_GetMetaDataSourceAddr
    34: VP: The module calls EcuC_GetMetaDataTargetAddr
    35: VP: The module calls EcuC_GetMetaDataPriority
    36: Call J1939Tp_MainFunction
    37: VP: The module calls PduR_J1939TpCopyTxData as the dynamic calculation is enabled
    38: VP: The module calls EcuC_SetMetaDataCanId
    39: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    40: confirm the FD.TP.CM_RTS packet
    41: Call J1939Tp_MainFunction
    42: Call J1939Tp_MainFunction
    43: VP: the module calls PduR_J1939TpCopyTxData to get new data
    44: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    45: VP: The module calls CanIf_Transmit
    46: confirm the TP.DT packet
    47: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    48: VP: The module calls CanIf_Transmit
    49: confirm the TP.DT packet
    50: Receive a TP.CM_EOM packet
    51: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    52: Module Call PduR_J1939TpTxConfirmation
    53: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1569</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_CONC_SESSIONS_TRSMT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_Concurrent_Sessions_Test/source/application/Tests.c</sourcefile>
      <sourceline>680</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of two channels concurrently per the same origanator and responder.

Test Object: 

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: Call J1939Tp_Transmit with SA = 30, DA = 10 and Length =
    04: VP: J1939Tp_Transmit return E_OK
    05: VP: The module calls EcuC_GetMetaDataSourceAddr
    06: VP: The module calls EcuC_GetMetaDataTargetAddr
    07: VP: The module calls EcuC_GetMetaDataPriority
    08: Call J1939Tp_MainFunction
    09: VP: The module calls PduR_J1939TpCopyTxData as the dynamic calculation is enabled
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    12: confirm the FD.TP.CM_RTS packet
    13: Call J1939Tp_MainFunction
    14: Call J1939Tp_Transmit with SA = 30, DA = 10 and Length = 20
    15: VP: J1939Tp_Transmit return E_OK
    16: VP: The module calls EcuC_GetMetaDataSourceAddr
    17: VP: The module calls EcuC_GetMetaDataTargetAddr
    18: VP: The module calls EcuC_GetMetaDataPriority
    19: Call J1939Tp_MainFunction
    20: VP: The module calls PduR_J1939TpCopyTxData
    21: Call J1939Tp_MainFunction
    22: VP: The module calls EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    24: confirm the FD.TP.CM_RTS packet
    25: Call J1939Tp_MainFunction
    26: Call J1939Tp_MainFunction
    27: VP: the module calls PduR_J1939TpCopyTxData to get new data
    28: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    29: VP: The module calls CanIf_Transmit
    30: confirm the TP.DT packet
    31: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    32: VP: The module calls CanIf_Transmit
    33: confirm the TP.DT packet
    34: Receive a TP.CM_EOM packet for the first transmission
    35: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    36: Module Call PduR_J1939TpTxConfirmation, now the first transmission is complete
    37: Call J1939Tp_Transmit for the third time for the same SA and DA
    38: VP: J1939Tp_Transmit return E_OK
    39: VP: The module calls EcuC_GetMetaDataSourceAddr
    40: VP: The module calls EcuC_GetMetaDataTargetAddr
    41: VP: The module calls EcuC_GetMetaDataPriority
    42: Call J1939Tp_MainFunction
    43: VP: The module calls PduR_J1939TpCopyTxData as the dynamic calculation is enabled
    44: VP: The module calls EcuC_SetMetaDataCanId
    45: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    46: confirm the FD.TP.CM_RTS packet
    47: Call J1939Tp_MainFunction
    48: Call J1939Tp_MainFunction
    49: VP: the module calls PduR_J1939TpCopyTxData to get new data
    50: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    51: VP: The module calls CanIf_Transmit
    52: confirm the TP.DT packet
    53: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    54: VP: The module calls CanIf_Transmit
    55: confirm the TP.DT packet
    56: Receive a TP.CM_EOM packet
    57: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    58: Module Call PduR_J1939TpTxConfirmation
    59: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1570</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_CONC_SESSIONS_TRSMT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_Concurrent_Sessions_Test/source/application/Tests.c</sourcefile>
      <sourceline>1078</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of two channels concurrently per the same origanator and responder.

Test Object: 

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: Call J1939Tp_Transmit with SA = 30, DA = 10 and Length =
    04: VP: J1939Tp_Transmit return E_OK
    05: VP: The module calls EcuC_GetMetaDataSourceAddr
    06: VP: The module calls EcuC_GetMetaDataTargetAddr
    07: VP: The module calls EcuC_GetMetaDataPriority
    08: Call J1939Tp_MainFunction
    09: VP: The module calls PduR_J1939TpCopyTxData as the dynamic calculation is enabled
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    12: confirm the FD.TP.CM_RTS packet
    13: Call J1939Tp_MainFunction
    14: Call J1939Tp_Transmit with SA = 30, DA = 10 and Length =
    15: VP: J1939Tp_Transmit return E_OK
    16: VP: The module calls EcuC_GetMetaDataSourceAddr
    17: VP: The module calls EcuC_GetMetaDataTargetAddr
    18: VP: The module calls EcuC_GetMetaDataPriority
    19: Call J1939Tp_MainFunction
    20: VP: The module calls PduR_J1939TpCopyTxData
    21: Call J1939Tp_MainFunction
    22: VP: The module calls EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    24: confirm the FD.TP.CM_RTS packet
    25: Call J1939Tp_MainFunction
    26: Call J1939Tp_MainFunction
    27: VP: the module calls PduR_J1939TpCopyTxData to get new data
    28: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    29: VP: The module calls CanIf_Transmit
    30: confirm the TP.DT packet
    31: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    32: VP: The module calls CanIf_Transmit
    33: confirm the TP.DT packet
    34: Call J1939Tp_MainFunction
    35: VP: the module calls PduR_J1939TpCopyTxData to get new data
    36: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    37: VP: The module calls CanIf_Transmit
    38: confirm the TP.DT packet
    39: VP: The module calls EcuC_SetMetaDataCanId according to metadata configuration
    40: VP: The module calls CanIf_Transmit
    41: confirm the TP.DT packet
    42: Receive a TP.CM_EOM packet
    43: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    44: Module Call PduR_J1939TpTxConfirmation
    45: Receive a TP.CM_EOM packet
    46: Module Call EcuC_GetMetaDataCanId according to metadata configuration
    47: Module Call PduR_J1939TpTxConfirmation
    48: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SAE.FD.CmdtTransfer.ConcurrentSessions.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1571</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_NOT_FD_TRSMT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_Concurrent_Sessions_Test/source/application/Tests.c</sourcefile>
      <sourceline>1415</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks that the connection is aborted when CanIf_Transmit returns E_NOT_OK while transmtting EOMS.

Test Object: 

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 129 bytes of data
    03: Call J1939Tp_Transmit with SA = 15, DA = 12 and Length = 180
    04: VP: J1939Tp_Transmit return E_OK
    05: VP: The module calls EcuC_GetMetaDataSourceAddr
    06: VP: The module calls EcuC_GetMetaDataTargetAddr
    07: Call J1939Tp_MainFunction
    08: VP: The module calls PduR_J1939TpCopyTxData
    09: VP: The module calls EcuC_SetMetaDataCanId
    10: VP: The module calls CanIf_Transmit with the format of the FD.TP.CM_RTS packet
    11: confirm the TP.CM_RTS packet
    12: Call J1939Tp_MainFunction
    13: Receive a FD.TP.CM_CTS packet for SA = 15
    14: Call J1939Tp_MainFunction
    15: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaData
    18: VP: The module calls CanIf_Transmit
    19: confirm theFD.TP.DT packet
    20: Call J1939Tp_MainFunction
    21: VP: the module calls PduR_J1939TpCopyTxData to get new data
    22: VP: The module calls EcuC_SetMetaData
    23: VP: The module calls CanIf_Transmit
    24: confirm theFD.TP.DT packet
    25: Call J1939Tp_MainFunction
    26: VP: the module calls PduR_J1939TpCopyTxData to get new data
    27: VP: The module calls EcuC_SetMetaData
    28: VP: The module calls CanIf_Transmit
    29: confirm theFD.TP.DT packet
    30: set the return value for CanIf_Transmit as E_NOT_OK
    31: Call J1939Tp_MainFunction
    32: VP: The module calls EcuC_SetMetaData
    33: VP: The module calls CanIf_Transmit for sending EOMS
    34: Call J1939Tp_MainFunction
    35: VP: The module calls PduR_J1939TpTxConfirmation
    36: Call J1939Tp_MainFunction
    37: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00039.ConfigSaDa</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1572</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_FD_RETRY_TRSMT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario,when J1939TpTxRetrySupport is enabled

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS receiption,
    TP.DT transmission,
    TP.CM_EOM receiption

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
    20: Receive a retry TP.CM_CTS packet
    21: VP: The module calls EcuC_SetMetaDataCanId
    22: Call J1939Tp_MainFunction
    23: VP: the module calls PduR_J1939TpCopyTxData to get new data
    24: VP: The module calls EcuC_SetMetaDataCanId
    25: VP: The module calls CanIf_Transmit
    26: confirm the TP.DT packet
    27: Call J1939Tp_Transmit with same TxNSDU and SA/DA...
    28: VP: J1939Tp_Transmit return E_NOT_OK
    29: Receive a second TP.CM_CTS packet
    30: VP: The module calls EcuC_SetMetaDataCanId
    31: Call J1939Tp_MainFunction
    32: VP: the module calls PduR_J1939TpCopyTxData to get new data
    33: VP: The module calls EcuC_SetMetaDataCanId
    34: VP: The module calls CanIf_Transmit
    35: confirm the TP.DT packet
    36: Call J1939Tp_MainFunction
    37: VP: the module calls PduR_J1939TpCopyTxData to get new data
    38: VP: The module calls EcuC_SetMetaDataCanId
    39: VP: The module calls CanIf_Transmit
    40: confirm the TP.DT packet
    41: Call J1939Tp_MainFunction
    42: VP: The module calls EcuC_SetMetaDataCanId and CanIf_Transmit for sending EOMS
    43: Call the confirmation for the TP.DT packet, and check check that it will be ignored.
    44: Confirm the TP.CM packet, to confirm EOMS
    45: Call J1939Tp_MainFunction
    46: Receive a TP.CM_EOM packet
    47: Module Call EcuC_GetMetaDataCanId
    48: Module Call PduR_J1939TpTxConfirmation
    49: Call stack empty?
    50: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00217.NextDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00217.FirstDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1573</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_RETRY_TRSMT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>374</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of transmission scenario, when J1939TpTxRetrySupport is disabled
    and the J1939Tp receives a TP.CM_CTS frame requesting already sent data.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS receiption,
    TP.DT transmission,
    TP.CM_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_SetMetaDataCanId
    08: VP: The module calls CanIf_Transmit
    09: The Pdu Id, TP.CM Tx Id (J1939TP0067)
    10: VP: Check the format of the TP.CM_RTS packet
    11: confirm the TP.CM_RTS packet
    12 : Frame And Trigger CTS frame
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
    20: Receive a retry TP.CM_CTS packet
    21: VP: The module calls EcuC_SetMetaDataCanId
    22: Call J1939Tp_MainFunction
    24: VP: The module calls EcuC_SetMetaDataCanId
    25: VP: Module sends abort frame as retry is disabled and requested already read frame
    26: confirm the TP.Conn_Abort packet
    27: Call J1939Tp_MainFunction two times
    28: Call PduR_J1939TpTxConfirmation
    29: Call stack empty?
    30: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.MaxRetransmitLimitReached</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1574</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_RETRY_TRSMT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>604</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of TP.CM_CTS frame when data is requested beyond
    the current position of last TP.CM_CTS.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS receiption,
    TP.DT transmission,
    TP.CM_EOM receiption

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 26 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
    20: Call J1939Tp_MainFunction
    21: VP: the module calls PduR_J1939TpCopyTxData to get new data
    22: VP: The module calls EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: confirm the TP.DT packet
    25: Set CTS with invalid request range
    26: Receive a retry TP.CM_CTS packet
    27: VP: The module calls EcuC_SetMetaDataCanId
    28: The module calls Det_ReportError due to J1939TP_E_INVALID_NPN
    28: Call J1939Tp_MainFunction
    29: VP: The module calls EcuC_SetMetaDataCanId
    30: VP: The module calls CanIf_Transmit
    31: VP: Module sends abort frame CTS is send with invalid NPN
    32: confirm the TP.Conn_Abort packet
    33: Module Call PduR_J1939TpTxConfirmation
    34: Call stack empty?
    35: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1575</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_FD_RETRY_TRSMT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_FD_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>863</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of TP.CM_CTS frame when data is requested preceding
    the current position of last TP.CM_CTS.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS receiption,
    TP.DT transmission,
    TP.CM_EOM receiption

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
    20: Call J1939Tp_MainFunction
    21: VP: the module calls PduR_J1939TpCopyTxData to get new data
    22: VP: The module calls EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: confirm the TP.DT packet
    25: Receive a TP.CM_CTS packet
    26: VP: The module calls EcuC_SetMetaDataCanId
    27: Call J1939Tp_MainFunction
    27: VP: the module calls PduR_J1939TpCopyTxData to get new data
    29: VP: The module calls EcuC_SetMetaDataCanId
    30: VP: The module calls CanIf_Transmit
    31: confirm the TP.DT packet
    32: Call J1939Tp_MainFunction
    33: VP: the module calls PduR_J1939TpCopyTxData to get new data
    34: VP: The module calls EcuC_SetMetaDataCanId
    35: VP: The module calls CanIf_Transmit
    36: confirm the TP.DT packet
    37: Set CTS with invalid request range
    38: Receive a retry TP.CM_CTS packet
    39: VP: The module calls EcuC_SetMetaDataCanId
    40: The module calls Det_ReportError due to J1939TP_E_INVALID_NPN
    41: Call J1939Tp_MainFunction
    42: VP: The module calls EcuC_SetMetaDataCanId
    43: VP: The module calls CanIf_Transmit
    44: VP: Module sends abort frame CTS is send with invalid NPN
    45: confirm the TP.Conn_Abort packet
    46: Module Call PduR_J1939TpTxConfirmation
    47: Call stack empty?
    48: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1576</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_RETRY_TRSMT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full transmission scenario,when J1939TpTxRetrySupport is enabled

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS receiption,
    TP.DT transmission,
    TP.CM_EOM receiption

Test Precondition: 
    - 

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      03: set MetaData source ,destination and priority values
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaDataSourceAddr
      07: VP: The module calls EcuC_GetMetaDataTargetAddr
      08: VP: The module calls EcuC_GetMetaDataPriority
      09: Call J1939Tp_MainFunction
      10: VP: The module calls EcuC_SetMetaDataCanId
      11: VP: The module calls CanIf_Transmit
      12: confirm the TP.CM_RTS packet
      13: Receive a TP.CM_CTS packet
      14: VP: The module calls EcuC_SetMetaDataCanId
      15: Call J1939Tp_MainFunction
      16: VP: the module calls PduR_J1939TpCopyTxData to get new data
      17: VP: The module calls EcuC_SetMetaDataCanId
      18: VP: The module calls CanIf_Transmit
      19: confirm the TP.DT packet
      20: Receive a retry TP.CM_CTS packet
      21: VP: The module calls EcuC_SetMetaDataCanId
      22: Call J1939Tp_MainFunction
      23: VP: the module calls PduR_J1939TpCopyTxData to get new data
      24: VP: The module calls EcuC_SetMetaDataCanId
      25: VP: The module calls CanIf_Transmit
      26: confirm the TP.DT packet
      27: Call J1939Tp_Transmit with same TxNSDU and SA/DA...
      28: VP: J1939Tp_Transmit return E_NOT_OK
      29: Receive a second TP.CM_CTS packet
      30: VP: The module calls EcuC_SetMetaDataCanId
      31: Call J1939Tp_MainFunction
      32: VP: the module calls PduR_J1939TpCopyTxData to get new data
      33: VP: The module calls EcuC_SetMetaDataCanId
      34: VP: The module calls CanIf_Transmit
      35: confirm the TP.DT packet
      36: Call J1939Tp_MainFunction
      37: VP: the module calls PduR_J1939TpCopyTxData to get new data
      38: VP: The module calls EcuC_SetMetaDataCanId
      39: VP: The module calls CanIf_Transmit
      40: confirm the TP.DT packet
      41: Call J1939Tp_MainFunction
      42: Receive a TP.CM_EOM packet
      43: Module Call EcuC_GetMetaDataCanId
      44: Module Call PduR_J1939TpTxConfirmation
      45: Call stack empty?
      46: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00217.NextDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00217.FirstDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00046.CMDT.Retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1577</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_RETRY_TRSMT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>345</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of transmission scenario, when J1939TpTxRetrySupport is disabled
    and the J1939Tp receives a TP.CM_CTS frame requesting already sent data.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS receiption,
    TP.DT transmission,
    TP.CM_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_SetMetaDataCanId
    08: VP: The module calls CanIf_Transmit
    09: The Pdu Id, TP.CM Tx Id (J1939TP0067)
    10: VP: Check the format of the TP.CM_RTS packet
    11: confirm the TP.CM_RTS packet
    12 : Frame And Trigger CTS frame
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
    20: Receive a retry TP.CM_CTS packet
    21: VP: The module calls EcuC_SetMetaDataCanId
    22: Call J1939Tp_MainFunction
    24: VP: The module calls EcuC_SetMetaDataCanId
    25: VP: Module sends abort frame as retry is disabled and requested already read frame
    26: confirm the TP.Conn_Abort packet
    27: Call J1939Tp_MainFunction two times
    28: Call PduR_J1939TpTxConfirmation
    29: Call stack empty?
    30: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.MaxRetransmitLimitReached</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1578</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_RETRY_TRSMT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>561</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of TP.CM_CTS frame when data is requested beyond
    the current position of last TP.CM_CTS.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS receiption,
    TP.DT transmission,
    TP.CM_EOM receiption

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 26 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
    20: Call J1939Tp_MainFunction
    21: VP: the module calls PduR_J1939TpCopyTxData to get new data
    22: VP: The module calls EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: confirm the TP.DT packet
    25: Set CTS with invalid request range
    26: Receive a retry TP.CM_CTS packet
    27: VP: The module calls EcuC_SetMetaDataCanId
    28: The module calls Det_ReportError due to J1939TP_E_INVALID_NPN
    28: Call J1939Tp_MainFunction
    29: VP: The module calls EcuC_SetMetaDataCanId
    30: VP: The module calls CanIf_Transmit
    31: VP: Module sends abort frame CTS is send with invalid NPN
    32: confirm the TP.Conn_Abort packet
    33: Module Call PduR_J1939TpTxConfirmation
    34: Call stack empty?
    35: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1579</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_RETRY_TRSMT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmission_Retry_Test/source/application/Tests.c</sourcefile>
      <sourceline>808</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of TP.CM_CTS frame when data is requested preceding
    the current position of last TP.CM_CTS.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS receiption,
    TP.DT transmission,
    TP.CM_EOM receiption

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
    20: Call J1939Tp_MainFunction
    21: VP: the module calls PduR_J1939TpCopyTxData to get new data
    22: VP: The module calls EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: confirm the TP.DT packet
    25: Receive a TP.CM_CTS packet
    26: VP: The module calls EcuC_SetMetaDataCanId
    27: Call J1939Tp_MainFunction
    27: VP: the module calls PduR_J1939TpCopyTxData to get new data
    29: VP: The module calls EcuC_SetMetaDataCanId
    30: VP: The module calls CanIf_Transmit
    31: confirm the TP.DT packet
    32: Call J1939Tp_MainFunction
    33: VP: the module calls PduR_J1939TpCopyTxData to get new data
    34: VP: The module calls EcuC_SetMetaDataCanId
    35: VP: The module calls CanIf_Transmit
    36: confirm the TP.DT packet
    37: Set CTS with invalid request range
    38: Receive a retry TP.CM_CTS packet
    39: VP: The module calls EcuC_SetMetaDataCanId
    40: The module calls Det_ReportError due to J1939TP_E_INVALID_NPN
    41: Call J1939Tp_MainFunction
    42: VP: The module calls EcuC_SetMetaDataCanId
    43: VP: The module calls CanIf_Transmit
    44: VP: Module sends abort frame CTS is send with invalid NPN
    45: confirm the TP.Conn_Abort packet
    46: Module Call PduR_J1939TpTxConfirmation
    47: Call stack empty?
    48: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1580</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_TRANSMIT_TEST_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks calling J1939Tp_Transmit API twice for the same Nsdu.

Test Object: 
    TP.CM_RTS transmission

Test Precondition: 
    - J1939Tp module is initialized

Test Execution: 
    01: Initialize J1939Tp
    02: Call J1939Tp_Transmit
    03: VP: J1939Tp_Transmit return E_OK
    04: Check that module didn't report any DET 
    05: VP: The module calls EcuC_GetMetaDataSourceAddr 
    06: VP: The module calls EcuC_GetMetaDataTargetAddr
    07: VP: The module calls EcuC_GetMetaDataPriority
    08: Call J1939Tp_Transmit
    09: VP: J1939Tp_Transmit return E_NOT_OK
    10: Call the J1939Tp_Shutdown()

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1581</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TRANSMIT_TEST_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks J1939Tp_Transmit API with valid parameters and uninitialized module

Test Object: 
    TP.CM_RTS transmission

Test Precondition: 
    - J1939Tp module is initialized

Test Execution: 
    01: Call J1939Tp_Transmit
    02: VP: J1939Tp_Transmit return E_NOT_OK
    03: Check that module call Det_ReportError

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00115.E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>J1939Tp.EB.DET.TRANSMIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1582</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TRANSMIT_TEST_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>153</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks J1939Tp_Transmit API with invalid parameters and initialized module

Test Object: 
    TP.CM_RTS transmission

Test Precondition: 
    - J1939Tp module is initialized

Test Execution: 
    01: Initialize J1939Tp
    02: Call J1939Tp_Transmit
    03: VP: J1939Tp_Transmit return E_NOT_OK
    04: Check that module call Det_ReportError 
    05: Call the J1939Tp_Shutdown()

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00115.E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1583</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TRANSMIT_TEST_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>207</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks J1939Tp_Transmit when EcuC_GetMetaData return value E_NOT_OK 

Test Object: 
    TP.CM_RTS transmission

Test Precondition: 
    - J1939Tp module is initialized

Test Execution: 
01: Initialize J1939Tp
02: EcuC_GetMetaData return value E_NOT_OK 
03: Call J1939Tp_Transmit
04: VP: J1939Tp_Transmit return E_NOT_OK
05: VP: The module calls EcuC_GetMetaDataSourceAddr 
06: VP: The module calls EcuC_GetMetaDataTargetAddr
07: VP: The module calls EcuC_GetMetaDataPriority
08: VP: The module calls Det_ReportError two times 
09: Call the J1939Tp_Shutdown()

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1584</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TRANSMIT_TEST_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>282</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks J1939Tp_Transmit API with invalid NSDU and initialized module

Test Object: 
    TP.CM_RTS transmission

Test Precondition: 

Test Execution: 
    01: Initialize J1939Tp
    02: Call J1939Tp_Transmit
    03: VP: J1939Tp_Transmit return E_NOT_OK
    04: Check that module call Det_ReportError 
    05: Call the J1939Tp_Shutdown()

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00188.Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1585</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TRANSMIT_TEST_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Transmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>339</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the transfer that exceeds 1785 bytes should be rejected by returning E_NOT_OK.

Test Object: 
    TP.CM_RTS transmission

Test Precondition: 
    - J1939Tp module is initialized

Test Execution: 
    01: Initialize J1939Tp
    02: Call J1939Tp_Transmit
    03: VP: J1939Tp_Transmit return E_NOT_OK
    04: VP: The module calls EcuC_GetMetaDataSourceAddr
    05: VP: The module calls EcuC_GetMetaDataTargetAddr
    06: VP: The module calls EcuC_GetMetaDataPriority
    07: Check that module call Det_ReportError
    08: Call the J1939Tp_Shutdown()

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SAE.MaxPDUSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1586</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_TX_CONFIRMATION_TEST_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_TxConfirmation(), with invalid values  for initialized module .
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Call the J1939Tp_Init() with valid value to initialize the module
    02: Call the J1939Tp_TxConfirmation() with valid value.
    03: Check that module didn't report any DET .
    04: Call the J1939Tp_Shutdown().

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00115.E_INVALID_PDU_SDU_ID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00188.TxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1587</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TX_CONFIRMATION_TEST_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Tp_TxConfirmation(), with valid values  for uninitialized module .
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Tp is initialized.

Test Execution: 
    01: Call the J1939Tp_TxConfirmation() with valid value.
    02: Check that module call Det_ReportError.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.EB.DET.TXCONFIRMATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1588</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TX_CONFIRMATION_TEST_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of J1939Tp_TxConfirmation with E_NOT_OK after TP.CM_RTS during CMDT transmission .

Test Object: 
    TP.CM_RTS transmission

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: Call J1939Tp_TxConfirmation with result E_NOT_OK
    13: Module Call PduR_J1939TpTxConfirmation
    14: Trigger J1939Tp_TxConfirmation() after J1939Tp_TxConfirmation received with E_OK
    15: Call J1939Tp_MainFunction and verify that the J1939Tp_TxConfirmation is ignored
    16: Check for Trace Empty
    17: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00032.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1589</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TX_CONFIRMATION_TEST_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>262</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of J1939Tp_TxConfirmation with E_NOT_OK during BAM transmission .

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_BAM ,
    TP.DT transmission,

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: Call J1939Tp_TxConfirmation with result E_NOT_OK
    13: Module Call PduR_J1939TpTxConfirmation
    14: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1590</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TX_CONFIRMATION_TEST_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>396</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of J1939Tp_TxConfirmation with E_NOT_OK during Direct CMDT transmission.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls EcuC_SetMetaDataCanId
    12: VP: The module calls CanIf_Transmit
    13: Call J1939Tp_TxConfirmation with result E_NOT_OK
    14: Module Call PduR_J1939TpTxConfirmation
    15: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1591</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TX_CONFIRMATION_TEST_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>524</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of 1939Tp_TxConfirmation with result E_NOT_OK for
    TP.DT during CMDT transmission.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: the module calls PduR_J1939TpCopyTxData to get new data
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.DT packet
    : repeat step from 15 to 19 two times to send all DT
    20: Call J1939Tp_TxConfirmation with result E_NOT_OK
    21: Module Call PduR_J1939TpTxConfirmation
    22: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1592</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TX_CONFIRMATION_TEST_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>718</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of J1939Tp_TxConfirmation returning E_NOT_OK after
    abort transmission when receiving wrong sequence number in CM_CTS

Test Object: 
    TP.CM_RTS transmission,
TP.CM_CTS reception,
TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: The module calls EcuC_SetMetaDataCanId
    11: VP: The module calls CanIf_Transmit
    12: confirm the TP.CM_RTS packet
    13: Receive a TP.CM_CTS packet
    14: VP: The module calls EcuC_SetMetaDataCanId
    15: Call J1939Tp_MainFunction
    16: VP: The module calls EcuC_SetMetaDataCanId
    17: VP: The module calls CanIf_Transmit
    18: Call J1939Tp_TxConfirmation with result E_NOT_OK
    19: Call PduR_J1939TpTxConfirmation
    20: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.MaxRetransmitLimitReached</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1593</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TX_CONFIRMATION_TEST_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>899</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of full reception scenario , with two wait CTS during reception

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId cand id
      04: Receive a TP.CM_RTS packet
      05: VP: Check call of EcuC_GetMetaDataCanId
      06: Call J1939Tp_MainFunction
      07: VP: The module calls EcuC_GetMetaDataCanId
      08: VP: The module calls EcuC_GetMetaDataSourceAddr
      09: VP: The module calls EcuC_GetMetaDataTargetAddr
      10: VP: The module calls EcuC_GetMetaDataPriority
      11: VP: Check call of PduR_J1939TpStartOfReception
      12: VP: The module calls EcuC_SetMetaDataCanId
      13: VP: The module calls CanIf_Transmit
      14: confirm the TP.CM_CTS packet
      15: Call J1939Tp_MainFunction till Th elapse
      16: The module calls Det_ReportError due to Th timeout
      17: VP: The module calls EcuC_SetMetaDataCanId
      18: VP: The module calls CanIf_Transmit
      19: Call J1939Tp_TxConfirmation with result E_NOT_OK
      20: Call PduR_J1939TpRxIndication
      21: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00226.BuffSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00226.NewCTS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00234.E_TIMEOUT_TH</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00123.Th</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1594</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TX_CONFIRMATION_TEST_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>1085</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of J1939Tp_TxConfirmation with result E_NOT_OK
    during full reception scenario , with two wait cts during reception

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: Call J1939Tp_TxConfirmation with result E_NOT_OK
    15: Call PduR_J1939TpRxIndication
    16: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00031.CMDT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1595</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TX_CONFIRMATION_TEST_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>1226</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of J1939Tp_TxConfirmation with result E_NOT_OK
    during full reception scenario , with two wait cts during reception

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_MainFunction till Th elapse
    16: The module calls Det_ReportError due to Th timeout
    17: VP: The module calls EcuC_SetMetaDataCanId
    18: VP: The module calls CanIf_Transmit
    19: confirm the TP.CM_CTS packet
    20: Call J1939Tp_MainFunction
    21: VP: The module calls PduR_J1939TpCopyRxData
    22: VP: The module calls EcuC_SetMetaDataCanId
    23: VP: The module calls CanIf_Transmit
    24: confirm the TP.CM_CTS packet
    25: Call J1939Tp_RxIndication to receive a TP.DT packet
    26: VP: The module calls EcuC_GetMetaDataCanId
    27: Call J1939Tp_MainFunction
    28: VP: Check call to EcuC_GetMetaDataCanId
    29: VP: Check call to PduR_J1939TpCopyRxData
    : repeat steps from 25 to 29 two more times
    30: Call J1939Tp_MainFunction
    31: VP: Check call to EcuC_SetMetaDataCanId
    32: VP: The module calls CanIf_Transmit
    33: Call J1939Tp_TxConfirmation with result E_NOT_OK
    34: Call PduR_J1939TpRxIndication
    35: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1596</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_TX_CONFIRMATION_TEST_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>1536</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of J1939Tp_TxConfirmation with result E_NOT_OK
    during reception with invalid sequence number, with cause connection to be aborted.

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT
    TP.Conn_Abort

Test Precondition: 
    -

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: Check call of EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction two times
    07: VP: The module calls EcuC_GetMetaDataCanId
    08: VP: The module calls EcuC_GetMetaDataSourceAddr
    09: VP: The module calls EcuC_GetMetaDataTargetAddr
    10: VP: The module calls EcuC_GetMetaDataPriority
    11: VP: Check call of PduR_J1939TpStartOfReception
    12: VP: The module calls EcuC_SetMetaDataCanId
    13: VP: The module calls CanIf_Transmit
    14: confirm the TP.CM_CTS packet
    15: Call J1939Tp_RxIndication to receive a TP.DT packet
    16: VP: The module calls EcuC_GetMetaDataCanId
    17: Call J1939Tp_MainFunction two times
    18: The module calls Det_ReportError due to invalid sequence number
    19: VP: Check call to EcuC_SetMetaDataCanId
    20: VP: The module calls CanIf_Transmit
    21: Call J1939Tp_TxConfirmation with result E_NOT_OK
    22: Call PduR_J1939TpRxIndication
    23: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SAE.FD.ConnectionAbortReasons.WrongSequenceNumberReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1597</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_SEGM_DIRECT_ABORT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Tx_Rx_CMDT_Direct_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of Direct pg transmission abort when PduR_J1939TpCopyTxData returns BUFREQ_E_NOT_OK

Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: Call J1939Tp_MainFunction
    12: Module Call PduR_J1939TpTxConfirmation
    13: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CopyTxData.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1598</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_DIRECT_ABORT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Tx_Rx_CMDT_Direct_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>138</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks the handling of receiving direct pg abort when PduR_J1939TpStartOfReception returns BUFREQ_E_BUSY.

Test Object: 

Test Precondition: 
    - 

Test Execution: 
01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
02: Initialize J1939Tp
03: Initialize EcuC_GetMetaDataCanId cand id
4: Call J1939Tp_RxIndication to receive a direct pg 
5: VP: The module calls EcuC_GetMetaDataCanId
6: Call J1939Tp_MainFunction
07: VP: The module calls EcuC_GetMetaDataSourceAddr
08: VP: The module calls EcuC_GetMetaDataTargetAddr
09: VP: The module calls EcuC_GetMetaDataPriority
10: VP: Check call of PduR_J1939TpStartOfReception
11: Call J1939Tp_MainFunction
12: Call J1939Tp_Shutdown
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1599</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_DIRECT_ABORT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Tx_Rx_CMDT_Direct_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>226</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: None.
Test Object: 
    TP.CM_RTS transmission,
    TP.CM_CTS reception,
    TP.DT transmission,
    TP.CM_EOM reception

Test Precondition: 
    - 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls EcuC_SetMetaDataCanId
    12: VP: The module calls CanIf_Transmit
    13: Call J1939Tp_Transmit for second NSDU
    14: VP: J1939Tp_Transmit return E_OK
    15: VP: The module calls EcuC_GetMetaDataSourceAddr
    16: VP: The module calls EcuC_GetMetaDataTargetAddr
    17: VP: The module calls EcuC_GetMetaDataPriority
    18: Call J1939Tp_MainFunction till Tr timeout
    19: The module calls Det_ReportError due to Timeout
    20: confirm the TP.DT packet
    21: Call J1939Tp_MainFunction
    22: Module Call PduR_J1939TpTxConfirmation two times
    23: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CopyTxData.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1600</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_SEGM_DIRECT_ABORT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Conformance/IN/J1939Tp_Tx_Rx_CMDT_Direct_Abort_Test/source/application/Tests.c</sourcefile>
      <sourceline>397</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: None.
Test Object: 
    Direct Transmission

Test Precondition: 
    -

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs
      03: set MetaData source ,destination and priority values
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaDataSourceAddr
      07: VP: The module calls EcuC_GetMetaDataTargetAddr
      08: VP: The module calls EcuC_GetMetaDataPriority
      09: Call J1939Tp_MainFunction
      10: VP: the module calls PduR_J1939TpCopyTxData to get new data
      11: VP: The module calls EcuC_SetMetaDataCanId
      12: VP: The module calls CanIf_Transmit
      13: Call J1939Tp_Transmit for second NSDU
      14: VP: J1939Tp_Transmit return E_OK
      15: VP: The module calls EcuC_GetMetaDataSourceAddr
      16: VP: The module calls EcuC_GetMetaDataTargetAddr
      17: VP: The module calls EcuC_GetMetaDataPriority
      18: Call J1939Tp_MainFunction
      19: confirm the TP.DT packet
      20: Call J1939Tp_MainFunction
      21: VP: Check PduR_J1939TpTxConfirmation with E_OK for first Direct Frame
      22: Call J1939Tp_MainFunction
      23: VP: the module calls PduR_J1939TpCopyTxData to get new data
      24: VP: The module calls EcuC_SetMetaDataCanId
      25: Call J1939Tp_Transmit again with first NSduId by blocking the Tx_Confirmation for other transmission
      26: VP: J1939Tp_Transmit return E_OK
      27: Call J1939Tp_MainFunction
      28: confirm the TP.DT packet
      29: Call J1939Tp_MainFunction
      30: VP: The module calls EcuC_GetMetaDataSourceAddr
      31: VP: The module calls EcuC_GetMetaDataTargetAddr
      32: VP: The module calls EcuC_GetMetaDataPriority
      33: Call J1939Tp_MainFunction
      34: VP: the module calls PduR_J1939TpCopyTxData to get new data
      35: VP: The module calls EcuC_SetMetaDataCanId
      36: VP: The module calls CanIf_Transmit
      37: Call J1939Tp_MainFunction
      38: VP: Check PduR_J1939TpTxConfirmation with E_OK
      39: confirm the TP.DT packet
      40: Call J1939Tp_MainFunction
      41: VP: Check PduR_J1939TpTxConfirmation with E_OK
      42: Call stack empty?
      43: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00048.CopyTxData.Direct</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1601</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_GenTest_01001_Err_J1939Tp_Invalid_TxNSduRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if J1939TpTxNSduRef is not configured for J1939TpTxPg
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1602</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01002_Err_J1939Tp_Invalid_Metadata_TxCMNPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata is configured for Tx CMNPdus.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1603</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01003_Err_J1939Tp_Invalid_Metadata_TxFcNPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata is configured for Tx FcNPdus.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1604</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01004_Err_J1939Tp_Invalid_Metadata_TxDtNPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata is configured for Tx DtNPdus.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1605</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01005_Err_J1939Tp_Invalid_Metadata_TxDirectNPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>115</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata is configured for Tx Direct NPdu.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1606</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01006_Err_J1939Tp_Invalid_Metadata_RxFcNPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>137</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata is configured for Rx FcNPdus.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1607</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01007_Err_J1939Tp_Invalid_Metadata_RxCmNPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>159</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata is configured for Rx CMNPdus.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1608</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01008_Err_J1939Tp_Invalid_Metadata_RxDtNPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>181</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata is configured for Rx DtNPdus.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1609</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01009_Err_J1939Tp_Invalid_Src_Addr_Metadata_4_TxSdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>203</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata type is configured for TxSdu.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1610</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01010_Err_J1939Tp_Invalid_Src_Addr_Metadata_2_TxSdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>225</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata type is configured for TxSdu.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1611</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01011_Err_J1939Tp_Invalid_Src_Addr_Metadata_1_TxSdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>247</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata type is configured for TxSdu.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1612</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01012_Err_J1939Tp_Invalid_Src_Addr_Metadata_4_RxSdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>269</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata type is configured for RxSdu.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1613</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01013_Err_J1939Tp_Invalid_Src_Addr_Metadata_2_RxSdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>291</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata type is configured for RxSdu.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1614</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01014_Err_J1939Tp_Invalid_Dst_Addr_Metadata_4_TxSdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>313</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata type is configured for TxSdu.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1615</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01015_Err_J1939Tp_Invalid_Dst_Addr_Metadata_4_RxSdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>335</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata type is configured for TxSdu.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1616</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01016_Err_J1939Tp_Invalid_MetadataRef_TxSdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>357</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata reference is configured for TxSdu.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1617</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01017_Err_J1939Tp_Invalid_MetadataRef_RxSdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>379</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata reference is configured for RxSdu.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1618</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01018_Err_J1939Tp_Invalid_MetadataRef_TxCMPdus</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>401</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata reference is configured for Tx CMPdus.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1619</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01019_Err_J1939Tp_Invalid_MetadataRef_RxCMPdus</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>423</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata reference is configured for Rx CM Npdu.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1620</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01020_Err_J1939Tp_Invalid_MetadataRef_RxDTPdus</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>445</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata reference is configured for Rx DT NPus.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1621</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01021_Err_J1939Tp_Invalid_MetadataRef_TxFCPdus</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>466</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata reference is configured for Tx-FC NPdus.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1622</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01022_Err_J1939Tp_Invalid_MetadataRef_TxDirectPdus</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>487</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata reference is configured for Tx Direct.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1623</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01023_Err_J1939Tp_Invalid_MetadataRef_RxFCPdus</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>510</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata reference is configured for RxFCNPdu.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1624</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01024_Err_J1939Tp_Invalid_NPduId_RxDTPdus</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>531</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
 This test checks that the generator issues an error if NpduId is not configured for Rx DT.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1625</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01025_Err_J1939Tp_Invalid_NPduId_RxCMPdus</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>552</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
This test checks that the generator issues an error if NpduId is not configured for Rx CM.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1626</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01026_Err_J1939Tp_Invalid_NPduId_TxFcPdus</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>573</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if NpduId is not configured for Tx FC Pdus
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1627</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01027_Err_J1939Tp_Invalid_Metadata_RxDirectNPdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata is configured for Rx Direct NPdus.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1628</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01028_Err_J1939Tp_Invalid_MetadataRef_RxDirectPdus</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>615</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Metadata reference is configured for Rx Direct NPdus
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1629</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01029_Err_J1939Tp_Invalid_PdurRef_RxSdus</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Generic/IN/J1939Tp_GenTest_01_InvalidConfiguration/source/application/J1939Tp_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>636</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if invalid Pdur Reference is configured for Rx Sdus.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1630</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_BAM_TX_STATE_VALIDATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Implementation/IN/J1939Tp_BAM_CMDT_Tx_Rx_State_Validation_Test/source/application/Tests.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that in J1939Tp_BAM_Transmit() api, state of the active channel is forcibly changed to
    invalid state to adhere the C1-Code Coverage.

Test Object: 
    TP.CM_BAM
    DBG_J1939TP_BAM_TRANSMIT_ENTRY macro is enabled.

Test Precondition: 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_MainFunction
    08: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1631</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CMDT_TX_STATE_VALIDATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Implementation/IN/J1939Tp_BAM_CMDT_Tx_Rx_State_Validation_Test/source/application/Tests.c</sourcefile>
      <sourceline>131</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that in J1939Tp_CMDT_Transmit() api, state of the active channel is forcibly changed to
    invalid state to adhere the C1-Code Coverage.

Test Object: 
    TP.CM_CMDT,
    DBG_J1939TP_CMDT_TRANSMIT_ENTRY macro is enabled

Test Precondition: 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    03: set MetaData source ,destination and priority values according to metadata configuration
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    07: Call J1939Tp_MainFunction
    08: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1632</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_BAM_RX_STATE_VALIDATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Implementation/IN/J1939Tp_BAM_CMDT_Tx_Rx_State_Validation_Test/source/application/Tests.c</sourcefile>
      <sourceline>230</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that in J1939Tp_BAM_Reception() api, state of the active channel is forcibly changed to
    invalid state to adhere the C1-Code Coverage.

Test Object: 
    TP.CM_BAM ,
    DBG_J1939TP_BAM_RECEPTION_ENTRY is enabled.

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_BAM packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: Check for trace empty
    08: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.BAMTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1633</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_CMDT_RX_STATE_VALIDATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Implementation/IN/J1939Tp_BAM_CMDT_Tx_Rx_State_Validation_Test/source/application/Tests.c</sourcefile>
      <sourceline>303</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that in J1939Tp_CMDT_Reception() api, state of the active channel is forcibly changed to
    invalid state to adhere the C1-Code Coverage.

Test Object: 
    TP.CM_CTS reception,
    DBG_J1939TP_CMDT_RECEPTION_ENTRY is enabled.

Test Precondition: 

Test Execution: 
    01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Receive a TP.CM_RTS packet
    05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
    06: Call J1939Tp_MainFunction
    07: VP: Check for trace empty
    08: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00155.CMDTTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1634</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_DIRECT_TX_STATE_VALIDATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Implementation/IN/J1939Tp_BAM_CMDT_Tx_Rx_State_Validation_Test/source/application/Tests.c</sourcefile>
      <sourceline>380</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that in J1939Tp_DirectPg_Transmit() api, state of the active channel is forcibly changed to
    invalid state to adhere the C1-Code Coverage.

Test Object: 
    Direct Transmission,
    DBG_J1939TP_DIRECTPG_TRANSMIT_ENTRY is enabled.

Test Precondition: 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs - Prepare the PduR stub to send 4 bytes of data
    03: Set MetaData source ,destination and priority values
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: Call stack empty
    11: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1635</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_DIRECT_RX_STATE_VALIDATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Implementation/IN/J1939Tp_Rx_Direct_State_Validation_Test/source/application/Tests.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test forcibly changes the module state to invalid value in RxIndication_DirectPg api
    during Direct Reception to adhere the C1-Code Coverage.

Test Object: 
    Direct Reception,
    DBG_J1939TP_RX_DIRECT_STATE_VALIDATION_ENTRY

Test Precondition: 

Test Execution: 
    01: Initialize Stubs
    02: Initialize J1939Tp
    03: Initialize EcuC_GetMetaDataCanId cand id
    04: Call J1939Tp_RxIndication to receive a direct pg
    05: VP: The module calls EcuC_GetMetaDataCanId
    06: Call J1939Tp_MainFunction
    07: VP: Call Trace Empty to check if the frame is dropped
    08: shutdown module
    
Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1636</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_DIRECT_TX_NPDU_UNLOCK_VALIDATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Implementation/IN/J1939Tp_Tx_NPdu_Unlock_Validation_Test/source/application/Tests.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test forcibly changes the state of TxNPDU to Idle in J1939Tp_UnlockTxPdu api
    during Direct Transmission to adhere the C1-Code Coverage.

Test Object: 
    Direct Transmission,
    DBG_J1939TP_DIRECT_TX_NPDU_UNLOCK_VALIDATION_ENTRY is enabled.

Test Precondition: 

Test Execution: 
    01: Initialize J1939Tp
    02: Initialize stubs
    03: set MetaData source ,destination and priority values.
    04: Call J1939Tp_Transmit
    05: VP: J1939Tp_Transmit return E_OK
    06: VP: The module calls EcuC_GetMetaDataSourceAddr
    07: VP: The module calls EcuC_GetMetaDataTargetAddr
    08: VP: The module calls EcuC_GetMetaDataPriority
    09: Call J1939Tp_MainFunction
    10: VP: the module calls PduR_J1939TpCopyTxData to get new data
    11: VP: The module calls EcuC_SetMetaDataCanId
    12: VP: The module calls CanIf_Transmit
    13: Call J1939Tp_MainFunction
    14: Verify the CanIf_Transmit and PduR_J1939TpCopyTxData Api calls
    15: Call J1939Tp_MainFunction
    16: Call stack empty
    17: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.ECUC_J1939Tp_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1637</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_TX_TIMERS_VALIDATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Implementation/IN/J1939Tp_Tx_Rx_Timer_Validation_Test/source/application/Tests.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test forcibly changes the TBAM, T3, T4 and TxConf Timer parameters in J1939Tp_TxTimerJob api
    to adhere the C1-Code Coverage.

Test Object: 
    TP.CM_RTS,
    DBG_J1939TP_TX_TIMER_VALIDATION_ENTRY is enabled.

Test Precondition: 

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs
      03: set MetaData source ,destination and priority values
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaDataSourceAddr
      07: VP: The module calls EcuC_GetMetaDataTargetAddr
      08: VP: The module calls EcuC_GetMetaDataPriority
      09: Call J1939Tp_MainFunction
      10: VP: The module calls EcuC_SetMetaDataCanId
      11: VP: The module calls CanIf_Transmit
      12: Call PduR_J1939TpTxConfirmation
      13: Call stack empty?
      14: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Tx.Timer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1638</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_RX_TIMERS_VALIDATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Implementation/IN/J1939Tp_Tx_Rx_Timer_Validation_Test/source/application/Tests.c</sourcefile>
      <sourceline>166</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test forcibly changes the Th, T1, T2 and TxConf Timer parameters in J1939Tp_RxTimerJob api
    to adhere the C1-Code Coverage.

Test Object: 
    TP.CM_BAM,
    DBG_J1939TP_RX_TIMER_VALIDATION_ENTRY module enabled

Test Precondition: 

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId cand id
      04: Call J1939Tp_RxIndication to trigger RTS frame
      05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
      06: Call J1939Tp_MainFunction
      07: VP: Check call of PduR_J1939TpStartOfReception
      08: module Call Det_ReportError
      09: Call PduR_J1939TpRxIndication
      10: Check for Trace Empty
      11: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Rx.Timer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1639</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_TX_TIMERS_VALIDATION_TimeOut</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Implementation/IN/J1939Tp_Tx_Rx_Timer_Validation_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test forcibly changes the TBAM, T3, T4 and TxConf Timer parameters in J1939Tp_TxTimerJob api
    to adhere the C1-Code Coverage.

Test Object: 
    TP.CM_RTS,
    DBG_J1939TP_TXTIMERJOB_ENTRY  is enabled.

Test Precondition: 

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs
      03: set MetaData source ,destination and priority values
      04: Call J1939Tp_Transmit
      05: VP: J1939Tp_Transmit return E_OK
      06: VP: The module calls EcuC_GetMetaDataSourceAddr
      07: VP: The module calls EcuC_GetMetaDataTargetAddr
      08: VP: The module calls EcuC_GetMetaDataPriority
      09: Call J1939Tp_MainFunction
      10: VP: The module calls EcuC_SetMetaDataCanId
      11: VP: The module calls CanIf_Transmit
      12: Call PduR_J1939TpTxConfirmation
      13: Call stack empty?
      14: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Tx.Timer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1640</internalId></specobject>
    <specobject>
      <id>TS_J1939TP_RX_TIMERS_VALIDATION_TimeOut</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Implementation/IN/J1939Tp_Tx_Rx_Timer_Validation_Test_Timeout/source/application/Tests.c</sourcefile>
      <sourceline>166</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test forcibly changes the Th, T1, T2 and TxConf Timer parameters in J1939Tp_RxTimerJob api
    to adhere the C1-Code Coverage.

Test Object: 
    TP.CM_BAM,
    DBG_J1939TP_RXTIMERJOB_ENTRY module enabled

Test Precondition: 

Test Execution: 
      01: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      02: Initialize J1939Tp
      03: Initialize EcuC_GetMetaDataCanId cand id
      04: Call J1939Tp_RxIndication to trigger RTS frame
      05: VP: The module calls EcuC_GetMetaData API's according to metadata configuration
      06: Call J1939Tp_MainFunction
      07: VP: Check call of PduR_J1939TpStartOfReception
      08: module Call Det_ReportError
      09: Call PduR_J1939TpRxIndication
      10: Check for Trace Empty
      11: Call J1939Tp_Shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Tp_00062.Rx.Timer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1641</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939TP_TX_SEQUENCE_NUMBER_VALIDATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Tp)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Tp/test/ts5/Implementation/IN/J1939Tp_Tx_Sequence_Number_Validation_Test/source/application/Tests.c</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test forcibly changes the sequence number &gt; J1939TP_SN_MAX in J1939Tp_CMDT_Transmit_Data api
    during CMDT transmission to adhere the C1-Code Coverage.

Test Object: 
    TP_CM_RTS,
    TP_CM_CTS,
    TP_DT Frames
    DBG_J1939TP_TX_SEQUENCE_NUMBER_VALIDATION_ENTRY is enabled.

Test Precondition: 

Test Execution: 
      01: Initialize J1939Tp
      02: Initialize stubs - Prepare the PduR stub to send 20 bytes of data
      03: Call J1939Tp_Transmit with SA = 20, DA = 70 and Length = 20
      04: VP: J1939Tp_Transmit return E_NOT_OK
      05: Call J1939Tp_MainFunction
      06: VP: The module calls CanIf_Transmit
      07: confirm the TP.CM_RTS packet
      08: Call J1939Tp_MainFunction
      09: Receive a TP.CM_CTS packet for SA = 20
      10: Call J1939Tp_MainFunction
      11: VP: the module calls PduR_J1939TpCopyTxData to get new data
      12: VP: The module calls CanIf_Transmit for SA = 20
      13: VP: Check if the Sequence Number is always 0, as the tests modifies the sequence numbers
      14: confirm the TP.DT packet
      14: Call J1939Tp_MainFunction
      15: VP: the module calls PduR_J1939TpCopyTxData to get new data
      16: VP: The module calls CanIf_Transmit
      17: VP: Check if the Sequence Number is always 0, as the tests modifies the sequence numbers
      18: confirm the TP.DT packet
      19: Call J1939Tp_MainFunction
      20: Call stack empty?
      21: shutdown module

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Tp.SWS_J1939Tp_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1642</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
