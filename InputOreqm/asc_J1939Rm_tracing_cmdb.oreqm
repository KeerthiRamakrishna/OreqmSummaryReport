<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_J1939Rm_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_Native/asc_J1939Rm_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_Native/asc_J1939Rm_requirements_AUTOSAR_SWS_J1939Rm_4_1_3.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_Native/asc_J1939Rm_requirements_AUTOSAR_SWS_J1939Rm_R20-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_Native/asc_J1939Rm_requirements_EB_Refinements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_Native/asc_J1939Rm_requirements_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/common_req/J1939Rm_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 20:02:31 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_J1939Rm_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_Native/asc_J1939Rm_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_Native/asc_J1939Rm_requirements_AUTOSAR_SWS_J1939Rm_4_1_3.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_Native/asc_J1939Rm_requirements_AUTOSAR_SWS_J1939Rm_R20-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_Native/asc_J1939Rm_requirements_EB_Refinements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_Native/asc_J1939Rm_requirements_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/common_req/J1939Rm_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">

    <specobject>
      <id>J1939Rm.EB.IntReq.DynamicAddressClaiming.SetNodeChannelOffline</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
      <!-- class: minor -->
      <!-- class-reason:
             * range is still sufficient for known use-cases
             * will NOT be updated in future releases -->
      
      Setting a new address for specific node by calling <code>J1939Rm_SetNodeAddress</code> should be done after setting the mentioned node in all referenced channel to Offline State by call <code>J1939Rm_SetState</code> where the parameter <parameter>&lt;node&gt;</parameter> is fixed and parameter <parameter>&lt;channel&gt;</parameter> is changable in each call.
      </description>
      <rationale>
      According to J1939Nm state machine and current implementation of Dynamic Address Claim Feature,
      If node channel disconnected (i.e goes to offline state) this means that this node can not communicate on this channel or any other channel with this address any more, and hence any requests
      for this node in J1939Rm Request or Ack Queue shall not send and cosidered as Invalid Requests.
      </rationale>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SetNodeAddress_State_Validation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.EB.QueueHandling_NodeOfflineState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.EB.TransmissionInvalidRequests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>
    <specobject>
      <id>J1939Rm.EB.IntReq.DynamicAddressClaiming.SetNodeChannelOnline</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
      <!-- class: minor -->
      <!-- class-reason:
             * range is still sufficient for known use-cases
             * will NOT be updated in future releases -->
      
      After Node claimed a new address on specific channel and <code>J1939Rm_SetNodeAddress</code> is called with new address was claimed, Setting all Node channel assoiciated to this node in OnLine State is required.
      </description>
      <rationale>
      Integerator should set all Node channel assoiciated to this node in OnLine State to allow J1939Rm to send and forward Requests and Ack for this node again.
      </rationale>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SetNodeAddress_State_Validation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.EB.QueueHandling_NodeOfflineState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.EB.TransmissionInvalidRequests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>J1939Rm.ASR41.ECUC_J1939Rm_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name: J1939RmUser
        Container Type: Sub-Container
        Parent Containers: J1939RmNode,
        Sub-Containers: J1939RmComIPdu 
        Description: Contains the configuration of a module that uses the request and acknowledgement 
        interfaces of J1939Rm.
        Lower Multiplicity: 1
        infinite
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_485</srcid><srcstatus/><internalId>623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.ECUC_J1939Rm_00025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name: J1939RmUserId
        Parameter Type: Integer
        Parent Containers: J1939RmUser,
        Description: Identifier used by a module using J1939Rm. This parameter is only required when 
        the module uses transmission of requests.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_792</srcid><srcstatus/><internalId>634</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.ECUC_J1939Rm_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name: J1939RmComIPdu
        Container Type: Sub-Container
        Parent Containers: J1939RmUser,
        Sub-Containers: J1939RmLowerComIPdu J1939RmUpperComIPdu 
        Description: Contains the configuration of an I-PDU that is to be transmitted on request by COM.
        This configuration container is only relevant for J1939RmUserType J1939RM_USER_COM.
        Lower Multiplicity: 0
        infinite
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_813</srcid><srcstatus/><internalId>635</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.ECUC_J1939Rm_00034</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name: J1939RmComIPduSA
        Parameter Type: Integer
        Parent Containers: J1939RmComIPdu,
        Description: Source address of the COM I-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Symbolic-Name-Value: false
        Max-Value: 253 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_867</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.RequestHandllingCOM</srcid><srcstatus/><internalId>358</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.ECUC_J1939Rm_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name: J1939RmComIPduDA
        Parameter Type: Integer
        Parent Containers: J1939RmComIPdu,
        Description: Destination address of the COM I-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Symbolic-Name-Value: false
        Max-Value: 253 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_822</srcid><srcstatus/><internalId>636</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.ECUC_J1939Rm_00036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name: J1939RmUpperComIPdu
        Container Type: Sub-Container
        Parent Containers: J1939RmComIPdu,
        Description: Contains the configuration of the I-PDU that is sent from COM to J1939Rm.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_916</srcid><srcstatus/><internalId>642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.ECUC_J1939Rm_00037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name: J1939RmLowerComIPdu
        Container Type: Sub-Container
        Parent Containers: J1939RmComIPdu,
        Description: Contains the configuration of the I-PDU that is sent from J1939Rm to CanIf or 
        J1939Tp.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_883</srcid><srcstatus/><internalId>639</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01014_Err_PduR_Invalid_ComIpduTypeComIPdu_IF</srcid><srcstatus/><internalId>871</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.ECUC_J1939Rm_00038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name: J1939RmUpperComIPduId
        Parameter Type: Integer
        Parent Containers: J1939RmUpperComIPdu,
        Description: The I-PDU identifier used for communication with PduR.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_920</srcid><srcstatus/><internalId>643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.ECUC_J1939Rm_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name: J1939RmUpperComIPduRef
        Parameter Type: Reference
        Parent Containers: J1939RmUpperComIPdu,
        Description: Reference to the Pdu object representing the I-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_936</srcid><srcstatus/><internalId>644</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01008_Err_Com_Invalid_UpperComIPduRef</srcid><srcstatus/><internalId>865</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01009_Err_PduR_Invalid_PduRDestPduHandleId</srcid><srcstatus/><internalId>866</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.ECUC_J1939Rm_00040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name: J1939RmLowerComIPduRef
        Parameter Type: Reference
        Parent Containers: J1939RmLowerComIPdu,
        Description: Reference to the Pdu object representing the I-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_903</srcid><srcstatus/><internalId>641</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.ECUC_J1939Rm_00041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name: J1939RmLowerComIPduId
        Parameter Type: Integer
        Parent Containers: J1939RmLowerComIPdu,
        Description: The I-PDU identifier used for communication with PduR.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_887</srcid><srcstatus/><internalId>640</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.ECUC_J1939Rm_00053</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name: J1939RmUserComIPduRequestQueueSize
        Parameter Type: Integer
        Parent Containers: J1939RmUser,
        Description: Number of received requests that can be stored for COM I-PDUs of this user.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Symbolic-Name-Value: false
        Max-Value: 255 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_771</srcid><srcstatus/><internalId>633</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The implementation and callback header files (J1939Rm.h and J1939Rm_Cbk.h) shall include the 
        file J1939Rm_Types.h.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/J1939Rm.h_6</srcid><srcstatus/><internalId>401</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/J1939Rm_Cbk.h_6</srcid><srcstatus/><internalId>402</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request, and 
        the requested PGN is configured via J1939RmUserPGN to trigger either the J1939 
        Diagnostic Communication Manager or a CDD, the J1939 Request Manager shall call the 
        corresponding &lt;User&gt;_RequestIndication.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00002.J1939Nm</srcid><srcstatus/><internalId>242</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00002.J1939Dcm</srcid><srcstatus/><internalId>243</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00002.CDD</srcid><srcstatus/><internalId>244</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request, and 
        the requested PGN is configured via J1939RmUserPGN to be handled via COM, the J1939 Request 
        Manager shall call Com_TriggerIPDUSend with the PduId of the transmitted COM I-PDU referenced 
        by J1939RmUpperComIPdu.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_938</srcid><srcstatus/><internalId>427</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3373</srcid><srcstatus/><internalId>569</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_Different_UpperComIPduId</srcid><srcstatus/><internalId>756</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Request_Reception_ComUser_Normal_Pdu</srcid><srcstatus/><internalId>757</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Request_Reception_For_Two_ComUser_Normal_Pdu</srcid><srcstatus/><internalId>769</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        If the requested PGN is configured for handling via COM for a node, the J1939 Request Manager 
        shall store the source address and request type (specific/global) received via the MetaData of 
        received requests in the queue configured via J1939RmUserComIPduRequestQueueSize.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_931</srcid><srcstatus/><internalId>425</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_COM_RQST_QUEUE_FULL</srcid><srcstatus/><internalId>764</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Request_Reception_ComUser_Three_Requests</srcid><srcstatus/><internalId>765</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Request_Reception_ComUser_Two_Requests</srcid><srcstatus/><internalId>766</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Request_Reception_COM_RQST_Wrong_Order</srcid><srcstatus/><internalId>770</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        When J1939Rm_Transmit is called by the PDU Router, the J1939 Request Manager shall set the 
        destination address according to the saved source address and request type, the source address 
        according to the node, and forward the PG to PduR_J1939RmTransmit, using the PduId of the PduR 
        source I-PDU referenced by J1939RmLowerComIPdu.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>partially</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00006.Set_DA</srcid><srcstatus/><internalId>245</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00006.Set_SA</srcid><srcstatus/><internalId>246</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00006.PduR_J1939RmTransmit.Interface_Path</srcid><srcstatus/><internalId>247</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00006.PduR_J1939RmTransmit.Tp_Path</srcid><srcstatus>source not covered.</srcstatus><internalId>248</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00006.PduR_J1939RmTransmit.PduId</srcid><srcstatus/><internalId>249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>partially</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>partially</covstatus><internalId>18</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request, and 
        the requested PGN is not configured, and the destination address is not the broadcast address, 
        the J1939 Request Manager shall call PduR_J1939RmTransmit to send a negative acknowledgement (
        NACK)
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_976</srcid><srcstatus/><internalId>434</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Request_for_Unknown_PGN_With_Specific_DA</srcid><srcstatus/><internalId>782</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Request_for_Unknown_PGN_With_Global_DA</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager shall call 
        Det_ReportError with the error code J1939RM_E_UNINIT when any API other than J1939Rm_Init or 
        J1939Rm_GetVersionInfo is called in uninitialized state.
      </description>
	    <furtherinfo>WRN.swurs.needscoverage.count: Requirement use case is refined in more than 10 refined 
	          requirements due to use case consistency and multitude of possible factors that an occur
            before the module is initialized.
      </furtherinfo>	
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00010.J1939Rm_DeInit</srcid><srcstatus/><internalId>228</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00010.J1939Rm_SetState</srcid><srcstatus/><internalId>229</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00010.J1939Rm_Transmit</srcid><srcstatus/><internalId>230</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00010.J1939Rm_SendRequest</srcid><srcstatus/><internalId>231</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00010.J1939Rm_CancelRequestTimeout</srcid><srcstatus/><internalId>232</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00010.J1939Rm_SendAck</srcid><srcstatus/><internalId>233</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00010.J1939Rm_RxIndication</srcid><srcstatus/><internalId>234</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00010.J1939Rm_TxConfirmation</srcid><srcstatus/><internalId>235</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00010.J1939Rm_CopyTxData</srcid><srcstatus/><internalId>236</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00010.J1939Rm_TpTxConfirmation</srcid><srcstatus/><internalId>237</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00010.J1939Rm_ComRxIpduCallout</srcid><srcstatus/><internalId>238</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00010.J1939Rm_MainFunction</srcid><srcstatus/><internalId>239</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The J1939 Request Manager shall use the J1939Rm_TxConfirmation of the associated I-PDU to 
        trigger transmission of pending Request PGs.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2170</srcid><srcstatus/><internalId>465</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3321</srcid><srcstatus/><internalId>562</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3635</srcid><srcstatus/><internalId>588</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_twoChannels</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        When J1939Rm_SendRequest is called with the parameter checkTimeout set to TRUE and a 
        destination address that is not the broadcast address (0xff), and timeout handling is enabled 
        for the caller via J1939RmUserTimeoutSupervision: The J1939 Request Manager shall store (
        separately for each node) the calling module's user ID, the PGN, the source address, and the 
        destination address of the request.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1158</srcid><srcstatus/><internalId>436</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2945</srcid><srcstatus/><internalId>528</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3334</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RTE_TimeoutSupervision_2</srcid><srcstatus/><internalId>752</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The header file J1939Rm_Types.h shall include the file ComStack_Types.h.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_12</srcid><srcstatus/><internalId>366</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00034</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager shall check 
        pointer parameters of its API functions, and shall report the DET error J1939RM_E_PARAM_POINTER 
        when a NULL pointer is provided by the call.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00034.J1939Rm_GetVersionInfo</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00034.J1939Rm_Transmit</srcid><srcstatus/><internalId>286</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00034.J1939Rm_RxIndication</srcid><srcstatus/><internalId>287</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00034.J1939Rm_CopyTxData</srcid><srcstatus/><internalId>288</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00034.J1939Rm_ComRxIpduCallout</srcid><srcstatus/><internalId>289</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Module          Imported Type
        ComStack_Types  BufReq_ReturnType
        NetworkHandleType
        PduIdType
        PduLengthType
        RetryInfoType
        PduInfoType
        Std_Types       Std_ReturnType
        Std_VersionInfoType
      </description>
      <comment>
        ComStack_Types already includes Std_Types.
      </comment>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2289</srcid><srcstatus/><internalId>480</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        PI function | Description 
        Com_TriggerIPDUSend | By a call to Com_TriggerIPDUSend the I-PDU with the given ID is triggered 
        for transmission.
        Det_ReportError | Service to report development errors.
        J1939Dcm_RequestIndication | Indicates reception of a Request PG.
        J1939Nm_RequestIndication | Indicates reception of a Request PG.
        PduR_J1939RmCopyTxData | This function is called to acquire the transmit data of an I-PDU 
        segment (N-PDU).Each call to this function provides the next part of the I-PDU data unless 
        retry-&gt;TpDataState is TP_DATARETRY. In this case the function restarts to copy the data 
        beginning at the offset from the current position indicated by retry-&gt;TxTpDataCnt. The size of 
        the remaining data is written to the position indicated by availableDataPtr.
        PduR_J1939RmTpTxConfirmation | This function is called after the I-PDU has been transmitted on 
        its network, the result indicates whether the transmission was successful or not.
        PduR_J1939RmTxConfirmation | The lower layer communication interface module confirms the 
        transmission of an I-PDU.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00045.Com_TriggerIPDUSend</srcid><srcstatus/><internalId>327</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00045.PduR_J1939RmCopyTxData</srcid><srcstatus/><internalId>328</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00045.PduR_J1939RmTpTxConfirmation</srcid><srcstatus/><internalId>329</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00045.PduR_J1939RmTxConfirmation</srcid><srcstatus/><internalId>330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The J1939Rm_Transmit API function shall only be available if a user with J1939RmUserType 
        J1939RM_USER_COM is configured.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2596</srcid><srcstatus/><internalId>499</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_For_ComUser_Tp_Pdu</srcid><srcstatus/><internalId>717</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00050</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        When J1939Rm_TxConfirmation is called by the PDU Router for a PDU that is triggered via 
        J1939Rm_Transmit, the J1939 Request Manager shall forward the call to 
        PduR_J1939RmTxConfirmation.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2231</srcid><srcstatus/><internalId>473</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_ComUser_Normal_Pdu</srcid><srcstatus/><internalId>757</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Request_Reception_For_Two_ComUser_Normal_Pdu</srcid><srcstatus/><internalId>769</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00051</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        When J1939Rm_CopyTxData is called by the PDU Router, the J1939 Request Manager shall forward 
        the call to PduR_J1939RmCopyTxData.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2334</srcid><srcstatus/><internalId>484</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_For_ComUser_Tp_Pdu</srcid><srcstatus/><internalId>717</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Request_Reception_ComUser_Tp_Pdu</srcid><srcstatus/><internalId>761</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00052</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        When J1939Rm_TpTxConfirmation is called by the PDU Router, the J1939 Request Manager shall 
        forward the call to PduR_J1939RmTpTxConfirmation.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2416</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_ComUser_Tp_Pdu</srcid><srcstatus/><internalId>761</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00053</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Service name:      J1939Rm_Transmit
        Syntax:            Std_ReturnType         J1939Rm_Transmit(
        PduIdType   id,
        const  PduInfoType*  info
        Service ID[hex]:   0x06
        Sync/Async:        Synchronous
        Reentrancy:        Reentrant
        Parameters (in):   id                     Identification of the I-PDU.
        info                   Length and pointer to the buffer  of  the  I-PDU.
        Parameters         None
        inout)
        Parameters (out):  None
        Return value:      Std_ReturnType         E_OK: Transmission request is accepted
        E_NOT_OK: Transmission request is not accepted
        Description:       Requests transmission of an I-PDU.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2606</srcid><srcstatus/><internalId>500</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_TRANSMIT_EMPTY_QUEUE</srcid><srcstatus/><internalId>755</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Request_Reception_ComUser_Normal_Pdu</srcid><srcstatus/><internalId>757</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Request_Reception_PduR_Return_E_NOT_OK</srcid><srcstatus/><internalId>758</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Request_Reception_For_Two_ComUser_Normal_Pdu</srcid><srcstatus/><internalId>769</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00054</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Service name:      J1939Rm_SendRequest
        Syntax:            Std_ReturnType      J1939Rm_SendRequest(
        uint8   userId,
        NetworkHandleType     channel,
        uint32   requestedPgn,
        uint8   destAddress,
        uint8   priority,
        boolean   checkTimeout
        Service ID[hex]:   0x07
        Sync/Async:        Synchronous
        Reentrancy:        Reentrant
        userId              Identification of the calling module.
        channel             Channel on which the request shall be sent.
        requestedPgn        PGN of the requested PG.
        Parameters (in):   destAddress         Address of the destination node or 0xFF for broadcast.
        priority            Priority of the Request PG.
        checkTimeout        TRUE: Timeout supervision will be performed
        FALSE: No timeout supervision will be started
        Parameters         None
        inout)
        Parameters (out):  None
        Return value:      Std_ReturnType      E_OK: Transmission request is accepted
        E_NOT_OK: Transmission request is not accepted
        Description:       Requests transmission of a Request PG.
        SRS_J1939_00016)
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2793</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_twoChannels</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Service name:         J1939Rm_CancelRequestTimeout
        Syntax:               void    J1939Rm_CancelRequestTimeout(
        uint8   userId,
        NetworkHandleType          channel,
        uint32  requestedPgn,
        uint8   destAddress
        Service ID[hex]:      0x08
        Sync/Async:           Synchronous
        Reentrancy:           Reentrant
        userId           Identification of the calling module.
        Parameters (in):      channel          Channel on which the request was sent.
        requestedPgn     PGN of the requested PG.
        destAddress      Address of the destination node or 0xFF for broadcast.
        Parameters            None
        inout)
        Parameters (out):     None
        Return value:         None
        Description:          Cancels timeout monitoring of a Request. If the request is not active, or 
        timeout
        monitoring was not requested, this call has no effect.
        SRS_J1939_00026)
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3000</srcid><srcstatus/><internalId>534</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_CancelRequestTimeOut_DA</srcid><srcstatus/><internalId>824</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Service name:         J1939Rm_SendAck
        Syntax:               Std_ReturnType   J1939Rm_SendAck(
        uint8   userId,
        NetworkHandleType          channel,
        uint32  ackPgn,
        J1939Rm_AckCode       ackCode,
        uint8   ackAddress,
        uint8   priority
        Service ID[hex]:      0x09
        Sync/Async:           Synchronous
        Reentrancy:           Reentrant
        userId              Identification of the calling module.
        channel             Channel on which the acknowledgement shall be sent.
        ackPgn              Acknowledged PGN.
        Parameters (in):      ackCode             Type of acknowledgement, see definition of 
        J1939Rm_AckCode
        for available codes.
        ackAddress          Address of the node that sent the request.
        priority            Priority of the Acknowledgement PG.
        Parameters            None
        inout)
        Parameters (out):     None
        Return value:         Std_ReturnType E_OK: Transmission request is accepted
        E_NOT_OK: Transmission request is not accepted
        Description:          Requests transmission of an Acknowledgement PG.
        SRS_J1939_00017)
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3084</srcid><srcstatus/><internalId>545</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT</srcid><srcstatus/><internalId>803</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00060</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Service name:      J1939Rm_CopyTxData
        Syntax:            BufReq_ReturnType      J1939Rm_CopyTxData(
        PduIdType  id,
        const  PduInfoType*  info,
        RetryInfoType*  retry,
        PduLengthType*  availableDataPtr
        Service ID[hex]:   0x43
        Sync/Async:        Synchronous
        Reentrancy:        Reentrant
        id                 Identification of the transmitted I-PDU.
        info               Provides the destination buffer and the number of bytes to
        be copied.
        If not enough transmit data is available, no data is copied.
        The transport protocol module may retry.
        A copy size of 0 can be used to indicate state changes in the
        retry parameter or to query currently available data.
        retry              This parameter is used to acknowledge transmitted data or
        to retransmit data after transmission problems.
        If the retry parameter is a NULL_PTR, it indicates that the
        transmit data can be removed from the buffer immediately
        Parameters (in):                      after it has been copied. Otherwise, the retry parameter
        must point to a valid RetryInfoType element.
        If TpDataState indicates TP_CONFPENDING, the previously
        copied data must remain in the TP buffer to be available for
        error recovery.
        TP_DATACONF indicates that all data that has been copied
        before this call is confirmed and can be removed from the
        TP buffer. Data copied by this API call is excluded and will
        be confirmed later.
        TP_DATARETRY indicates that this API call shall copy
        previously copied data in order to recover from an error. In
        this case TxTpDataCnt specifies the offset in bytes from the
        current data copy position.
        Parameters         None
        inout)
        availableDataPtr   Indicates the remaining number of bytes that are available in
        Parameters (out):                     the upper layer module's Tx buffer. availableDataPtr can 
        be
        used by TP modules that support dynamic payload lengths
        e.g. FrIsoTp) to determine the size of the following CFs.
        BufReq_ReturnType  BUFREQ_OK: Data has been copied to the transmit buffer
        completely as requested.
        BUFREQ_E_BUSY: Request could not be fulfilled, because
        Return value:                         the required amount of Tx data is not available. The 
        lower
        layer module may retry this call later on. No data has been
        copied.
        BUFREQ_E_NOT_OK: Data has not been copied. Request
        failed.
        Description:       This function is called to acquire the transmit data of an I-PDU segment (N-
        PDU)
        Each call to this function provides the next part of the I-PDU data unless retry-
        TpDataState is TP_DATARETRY. In this case the function restarts to copy the
        data beginning at the offset from the current position indicated by retry-
        TxTpDataCnt. The size of the remaining data is written to the position indicated
        by availableDataPtr.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2288</srcid><srcstatus/><internalId>479</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_ComUser_Tp_Pdu</srcid><srcstatus/><internalId>761</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00061</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Service name:      J1939Rm_TpTxConfirmation
        Syntax:            void      J1939Rm_TpTxConfirmation(
        PduIdType  id,
        Std_ReturnType  result
        Service ID[hex]:   0x37
        Sync/Async:        Synchronous
        Reentrancy:        Reentrant
        Parameters (in):   id           Identification of the transmitted I-PDU.
        result       Result of the transmission of the I-PDU.
        Parameters         None
        inout)
        Parameters (out):  None
        Return value:      None
        Description:       This function is called after the I-PDU has been transmitted  on its  
        network,  the
        result indicates whether the transmission was successful or   not.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2370</srcid><srcstatus/><internalId>488</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_ComUser_Tp_Pdu</srcid><srcstatus/><internalId>761</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00062</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Service name:      J1939Rm_ComRxIpduCallout
        Syntax:            boolean      J1939Rm_ComRxIpduCallout(
        PduIdType  PduId,
        const  PduInfoType*  PduInfoPtr
        Service ID[hex]:   0x28
        Sync/Async:        Synchronous
        Reentrancy:        don't care
        PduId           ID of the received I-PDU.
        Parameters (in):   PduInfoPtr Contains the length (SduLength) of the received I-PDU and a 
        pointer to
        the data of the I-PDU (SduDataPtr)
        Parameters         None
        inout)
        Parameters (out):  None
        Return value:      boolean         true: I-PDU will be processed normal
        false: I-PDU will not be processed any further
        Description:       The I-PDU callout on receiver side can be configured to implement user-
        defined
        receive filtering mechanisms.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2463</srcid><srcstatus/><internalId>495</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_ComIpduCallout</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_TimeoutSupervision</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_TimeoutSupervision2</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_TimeoutSupervision3</srcid><srcstatus/><internalId>829</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Service name:      &lt; User &gt;_RequestIndication
        Syntax:            void      &lt;  User  &gt;_RequestIndication(
        uint8   node,
        NetworkHandleType        channel,
        uint32       requestedPgn,
        uint8   sourceAddress,
        uint8   destAddress,
        uint8   priority
        Sync/Async:        Synchronous
        Reentrancy:        Reentrant
        node                 Node by which the request was received.
        channel              Channel on which the request was received.
        Parameters (in):   requestedPgn         PGN of the requested PG.
        sourceAddress        Address of the node that sent the Request PG.
        destAddress          Address of this node or 0xFF for broadcast.
        priority             Priority of the Request PG.
        Parameters         None
        inout)
        Parameters (out):  None
        Return value:      None
        Description:       Indicates reception of a Request PG.
        SRS_J1939_00014)
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_239</srcid><srcstatus/><internalId>384</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00064</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Service name:      &lt; User &gt;_AckIndication
        Syntax:            void      &lt;  User  &gt;_AckIndication(
        uint8   node,
        NetworkHandleType        channel,
        uint32       ackPgn,
        J1939Rm_AckCode       ackCode,
        uint8   ackAddress,
        uint8   sourceAddress,
        uint8   priority
        Sync/Async:        Synchronous
        Reentrancy:        Reentrant
        node               Node by which the acknowledgement was received.
        channel            Channel on which the acknowledgement was received.
        ackPgn             Acknowledged PGN.
        Parameters (in):   ackCode            Type of acknowledgement, see definition of 
        J1939Rm_AckCode
        for available codes.
        ackAddress         Address of this node.
        sourceAddress Address of the node that sent the Acknowledgement PG.
        priority           Priority of the Acknowledgement PG.
        Parameters         None
        inout)
        Parameters (out):  None
        Return value:      None
        Description:       Indicates reception of an Acknowledgement PG.
        SRS_J1939_00015)
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_234</srcid><srcstatus/><internalId>382</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_for_Request_stored_in_TSVQueue</srcid><srcstatus/><internalId>793</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_TSV_different_order</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_TSV_same_order</srcid><srcstatus/><internalId>799</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Service name:      &lt; User &gt;_RequestTimeoutIndication
        Syntax:            void      &lt;  User  &gt;_RequestTimeoutIndication(
        uint8   node,
        NetworkHandleType        channel,
        uint32       requestedPgn,
        uint8   destAddress
        Sync/Async:        Synchronous
        Reentrancy:        Reentrant
        node               Node by which the request was sent.
        Parameters (in):   channel            Channel on which the request was sent.
        requestedPgn       PGN of the requested PG.
        destAddress        Address of the destination node or 0xFF for broadcast.
        Parameters         None
        inout)
        Parameters (out):  None
        Return value:      None
        Description:       Indicates timeout of a request triggered with the same parameters.
        SRS_J1939_00026)
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_244</srcid><srcstatus/><internalId>386</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_125ms_without_Response</srcid><srcstatus/><internalId>822</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_125ms_without_Response_TSV_Queue_Full</srcid><srcstatus/><internalId>823</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00077</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The J1939Rm_CopyTxData call back function shall only be available if a user with 
        J1939RmUserType J1939RM_USER_COM is configured.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2270</srcid><srcstatus/><internalId>478</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_ComUser_Tp_Pdu</srcid><srcstatus/><internalId>761</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00078</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The J1939Rm_TpTxConfirmation call back function shall only be available if a user with 
        J1939RmUserType J1939RM_USER_COM is configured.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2358</srcid><srcstatus/><internalId>487</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_ComUser_Tp_Pdu</srcid><srcstatus/><internalId>761</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00082</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The Com_TriggerIPDUSend, PduR_J1939RmCopyTxData, PduR_J1939RmTpTxConfirmation, and 
        PduR_J1939RmTxConfirmation functions are only required if a user with J1939RmUserType 
        J1939RM_USER_COM is configured.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00083</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The J1939Dcm_RequestIndication function is only required if a user with J1939RmUserType J1939RM_USER_J1939DCM is configured.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00084</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The J1939Nm_RequestIndication function is only required if a user with J1939RmUserType 
        J1939RM_USER_J1939NM is configured.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>
    <specobject>
        <id>J1939Rm.ASR413.SWS_J1939Rm_00097</id>
        <status>approved</status>
        <source>AUTOSAR_SWS_SAEJ1939RequestManager.pdf, V4.1.3</source>
        <version>1</version>
        <description>
            Name            J1939Rm_SendRequest_{user}
            Kind            ProvidedPort          Interface     AppSendRequest
            Description     --
            Variation       user = {ecuc(J1939Rm/J1939RmConfigSet/J1939RmNode/J1939RmUser.SHORTNAME)}
            {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportRequestTransmission)} == true
        </description>
        <releases>
            <release>AUTOSAR 4.1.3</release>
        </releases>
        <needscoverage>
            <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4_44</srcid><srcstatus/><internalId>677</internalId></linkedfrom></coveredby></needscov>
        <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>
    <specobject>
        <id>J1939Rm.ASR413.SWS_J1939Rm_00098</id>
        <status>approved</status>
        <source>AUTOSAR_SWS_SAEJ1939RequestManager.pdf, V4.1.3</source>
        <version>1</version>
        <description>
            Name            J1939Rm_SendAck_{user}
            Kind            ProvidedPort          Interface     AppSendAck
            Description     --
            Variation       user = {ecuc(J1939Rm/J1939RmConfigSet/J1939RmNode/J1939RmUser.SHORTNAME)}
            {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportAckTransmission)} == true
        </description>
        <releases>
            <release>AUTOSAR 4.1.3</release>
        </releases>
        <needscoverage>
            <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4_29</srcid><srcstatus/><internalId>676</internalId></linkedfrom></coveredby></needscov>
        <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00104</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name             AppSendRequest
        Comment 
        IsService        true
        Variation        {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportRequestTransmission)}    ==  true
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4_166</srcid><srcstatus/><internalId>671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00105</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name                 AppCancelRequestTimeout
        Comment 
        IsService            true
        Variation            {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportTimeoutSupervision)} == true
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4_222</srcid><srcstatus/><internalId>672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00106</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name                 AppAckIndication
        Comment 
        IsService            true
        Variation            {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportAckIndication)} == true
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4_268</srcid><srcstatus/><internalId>673</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00107</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name               AppRequestIndication
        Comment 
        IsService          true
        Variation          {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportRequestIndication)}      ==  true
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4_333</srcid><srcstatus/><internalId>674</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00108</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name             AppRequestTimeoutIndication
        Comment 
        IsService        true
        Variation        {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportTimeoutSupervision)} == true
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4_394</srcid><srcstatus/><internalId>675</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00109</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name           J1939Rm_AckCode
        Kind           Enumeration
        J1939RM_ACK_POSITIVE                           0   Positive Acknowledgement (0)
        J1939RM_ACK_NEGATIVE                           1   Negative Acknowledgement (1)
        Range
        J1939RM_ACK_ACCESS_DENIED                      2   Access Denied (2)
        J1939RM_ACK_CANNOT_RESPOND                     3   Cannot Respond (3)
        Description    This type represents the available kinds of acknowledgements.
        Variation 
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4_48</srcid><srcstatus/><internalId>669</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>
    <specobject>
      <id>J1939Rm.ASR41.SWS_J1939Rm_00110</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_4_1_3.xml</source>
      <version>1</version>
      <description>
        J1939Rm shall include the header file Rte_J1939Rm.h if J1939RmUserType is J1939RM_USER_RTE for 
        any configured user.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_43</srcid><srcstatus/><internalId>403</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmGeneral
        Container Type: Container
        Description: Contains the general configuration parameters of the module.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1181</srcid><srcstatus/><internalId>657</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmVersionInfoApi
        Parameter Type: Boolean
        Parent Containers: J1939RmGeneral,
        Description: Pre-processor switch for enabling version info API support.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1333</srcid><srcstatus/><internalId>665</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmDevErrorDetect
        Parameter Type: Boolean
        Parent Containers: J1939RmGeneral,
        Description: Switches the development error detection and notification on or off.
        Introduction: * true: detection and notification is enabled. * false: detection and 
        notification is disabled.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1225</srcid><srcstatus/><internalId>658</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmMainFunctionPeriod
        Parameter Type: FloatValue
        Parent Containers: J1939RmGeneral,
        Description: Execution cycle of J1939Rm_MainFunction in seconds.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: INF (Type: OPEN)
        Min-Value: 0 (Type: OPEN)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1238</srcid><srcstatus/><internalId>659</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmNmNodeRef
        Parameter Type: Reference
        Parent Containers: J1939RmNode,
        Description: Reference to the corresponding J1939Nm node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/J1939Nm/J1939NmConfigSet/J1939NmNode
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_471</srcid><srcstatus/><internalId>621</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRequestQueueSize
        Parameter Type: Integer
        Parent Containers: J1939RmChannel,
        Description: Number of transmitted Request messages that can be stored.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 255 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_100</srcid><srcstatus/><internalId>600</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmAckQueueSize
        Parameter Type: Integer
        Parent Containers: J1939RmChannel,
        Description: Number of transmitted Acknowledgement messages that can be stored.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 255 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_82</srcid><srcstatus/><internalId>599</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRequestTimeoutMonitors
        Parameter Type: Integer
        Parent Containers: J1939RmChannel,
        Description: Number of transmitted requests that can be monitored for timeout.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 255 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_143</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmChannel
        Container Type: Sub-Container
        Parent Containers: J1939RmConfigSet,
        Sub-Containers: J1939RmAckmRxPdu J1939RmAckmTxPdu J1939RmRqst2RxPdu J1939RmRqst2TxPdu 
        J1939RmRqstRxPdu J1939RmRqstTxPdu 
        Description: Contains the parameters for a CAN channel supported by the J1939 Request Manager.
        Lower Multiplicity: 1
        infinite
        Post-Build-Variant-Multiplicity: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.ECUC_J1939Rm_00009.TxRxRequest</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.ECUC_J1939Rm_00009.TxRxRequest2</srcid><srcstatus/><internalId>225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name: J1939RmUser
        Container Type: Choice-Container
        Parent Containers: J1939RmNode,
        Choices: J1939RmCddUser J1939RmComUser J1939RmDcmUser J1939RmNmUser J1939RmRteUser 
        Description: Contains the configuration of a module that uses the request and acknowledgement 
        interfaces of J1939Rm.
        Lower Multiplicity: 1
        infinite
        Post-Build-Variant-Multiplicity: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_484</srcid><srcstatus/><internalId>622</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmAckmRxPdu
        Container Type: Sub-Container
        Parent Containers: J1939RmChannel,
        Description: Contains the configuration of the I-PDU used to receive the Acknowledgement PG. 
        This PDU consumes a meta data item of type CAN_ID_32.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_173</srcid><srcstatus/><internalId>603</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmAckmTxPdu
        Container Type: Sub-Container
        Parent Containers: J1939RmChannel,
        Description: Contains the configuration of the I-PDU used to transmit the Acknowledgement PG. 
        This PDU produces a meta data item of type CAN_ID_32.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_215</srcid><srcstatus/><internalId>606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRqstRxPdu
        Container Type: Sub-Container
        Parent Containers: J1939RmChannel,
        Description: Contains the configuration of the I-PDU used to receive the Request PG. This PDU 
        consumes a meta data item of type CAN_ID_32.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_257</srcid><srcstatus/><internalId>609</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRqstTxPdu
        Container Type: Sub-Container
        Parent Containers: J1939RmChannel,
        Description: Contains the configuration of the I-PDU used to transmit the Request PG. This PDU 
        produces a meta data item of type CAN_ID_32.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_299</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmAckmRxPduId
        Parameter Type: Integer
        Parent Containers: J1939RmAckmRxPdu,
        Description: The I-PDU identifier used for RxIndication from PduR.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_184</srcid><srcstatus/><internalId>604</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00016</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmAckmRxPduRef
        Parameter Type: Reference
        Parent Containers: J1939RmAckmRxPdu,
        Description: Reference to the Pdu object representing the I-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_201</srcid><srcstatus/><internalId>605</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01001_Err_PduR_Invalid_AckmRxPduRef</srcid><srcstatus/><internalId>858</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmConfigSet
        Container Type: Container
        Sub-Containers: J1939RmChannel J1939RmNode 
        Description: This container contains the configuration parameters and sub containers of the 
        AUTOSAR J1939Rm module.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_65</srcid><srcstatus/><internalId>597</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmAckmTxPduId
        Parameter Type: Integer
        Parent Containers: J1939RmAckmTxPdu,
        Description: The I-PDU identifier used for TxConfirmation from PduR.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_226</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmAckmTxPduRef
        Parameter Type: Reference
        Parent Containers: J1939RmAckmTxPdu,
        Description: Reference to the Pdu object representing the I-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_243</srcid><srcstatus/><internalId>608</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01002_Err_PduR_Invalid_AckmPduRSrcPduRef</srcid><srcstatus/><internalId>859</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRqstRxPduId
        Parameter Type: Integer
        Parent Containers: J1939RmRqstRxPdu,
        Description: The I-PDU identifier used for RxIndication from PduR.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_268</srcid><srcstatus/><internalId>610</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRqstRxPduRef
        Parameter Type: Reference
        Parent Containers: J1939RmRqstRxPdu,
        Description: Reference to the Pdu object representing the I-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_285</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01003_Err_PduR_Invalid_RqstRxPduRef</srcid><srcstatus/><internalId>860</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRqstTxPduId
        Parameter Type: Integer
        Parent Containers: J1939RmRqstTxPdu,
        Description: The I-PDU identifier used for TxConfirmation from PduR.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_310</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_360</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_410</srcid><srcstatus/><internalId>617</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRqstTxPduRef
        Parameter Type: Reference
        Parent Containers: J1939RmRqstTxPdu,
        Description: Reference to the Pdu object representing the I-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_327</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_377</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_426</srcid><srcstatus/><internalId>618</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01004_Err_PduR_Invalid_RqstTxPduRef</srcid><srcstatus/><internalId>861</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01005_Err_EcuC_Invalid_MetaDataItemType</srcid><srcstatus/><internalId>862</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01006_Err_EcuC_Invalid_MetaDataTypeRef</srcid><srcstatus/><internalId>863</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01007_Err_EcuC_Invalid_RqstTxPduRefMetaDataItemType</srcid><srcstatus/><internalId>864</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name: J1939RmUserId
        Parameter Type: Integer
        Parent Containers: J1939RmCddUser, J1939RmRteUser,
        Description: Identifier used by a module using J1939Rm. This parameter is only required when 
        the module uses transmission of requests or acknowledgements.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.RmUserConfigurations</srcid><srcstatus/><internalId>357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name: J1939RmUserRequestPGN
        Parameter Type: Integer
        Parent Containers: J1939RmCddUser, J1939RmRteUser,
        Description: PGN supported to be requested from this module. The PGNs supported by different 
        modules should usually be disjunctive.
        Lower Multiplicity: 0
        infinite
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 262143 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_578</srcid><srcstatus/><internalId>628</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1113</srcid><srcstatus/><internalId>653</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name: J1939RmUserRequestIndication
        Parameter Type: Boolean
        Parent Containers: J1939RmCddUser, J1939RmRteUser,
        Description: Enable RequestIndication for this module. In case of J1939Nm or J1939Dcm, the name 
        is fixed. In case of CDD, the name is &lt;apiServicePrefix&gt;_RequestIndication. In case of RTE, 
        J1939Rm will call the operation RequestIndication of the required port 
        J1939Rm_RequestIndication_{user}
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_564</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1100</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name: J1939RmUserAckIndication
        Parameter Type: Boolean
        Parent Containers: J1939RmCddUser, J1939RmRteUser,
        Description: Enable AckIndication for this module. In case of CDD, the name is &lt;
        apiServicePrefix&gt;_AckIndication. In case of RTE, the operation AckIndication of the required 
        port J1939Rm_AckIndication_{user} is called.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_506</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1040</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name: J1939RmUserSendRequest
        Parameter Type: Boolean
        Parent Containers: J1939RmCddUser, J1939RmRteUser,
        Description: Enable the SendRequest API for this module. In case of RTE, the operation 
        SendRequest of the provided port J1939Rm_SendRequest_{user} is called.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_612</srcid><srcstatus/><internalId>630</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1149</srcid><srcstatus/><internalId>655</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name: J1939RmUserSendAck
        Parameter Type: Boolean
        Parent Containers: J1939RmCddUser, J1939RmRteUser,
        Description: Enable the SendAck API for this module. In case of RTE, the operation SendAck of 
        the provided port J1939Rm_SendAck_{user} is called.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_599</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1136</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name: J1939RmUserTimeoutSupervision
        Parameter Type: Boolean
        Parent Containers: J1939RmCddUser, J1939RmRteUser,
        Description: Enable RequestTimeoutIndication and CancelRequestTimeout for this module.
        Introduction: RequestTimeoutIndication: In case of CDD, the name is &lt;apiServicePrefix&gt;
        _RequestTimeoutIndication. In case of RTE, the operation RequestTimeoutIndication of the 
        required port J1939Rm_RequestTimeoutIndication_{user} is called. CancelRequestTimeout: In case 
        of RTE, the operation CancelRequestTimeout of the provided port J1939Rm_CancelRequestTimeout_{
        user} is called.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_625</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1162</srcid><srcstatus/><internalId>656</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name: J1939RmComIPdu
        Container Type: Sub-Container
        Parent Containers: J1939RmComUser, J1939RmComUser,
        Description: Contains the configuration of an I-PDU that is to be transmitted on request by COM.
        Lower Multiplicity: 0
        infinite
        Post-Build-Variant-Multiplicity: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.RmUserConfigurations</srcid><srcstatus/><internalId>357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmComIPduPGN
        Parameter Type: Integer
        Parent Containers: J1939RmComIPdu,
        Description: PGN of the COM I-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 262143 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_851</srcid><srcstatus/><internalId>637</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00049</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmNode
        Container Type: Sub-Container
        Parent Containers: J1939RmConfigSet,
        Sub-Containers: J1939RmUser 
        Description: Contains the parameters for the support of a logical J1939 node (identified by an 
        ECU address)
        Lower Multiplicity: 1
        infinite
        Post-Build-Variant-Multiplicity: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_441</srcid><srcstatus/><internalId>619</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00051</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmComMNetworkHandleRef
        Parameter Type: Reference
        Parent Containers: J1939RmChannel,
        Description: Reference to the channel defined by the ComMChannel providing access to the unique 
        channel index ComMChannelId.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_160</srcid><srcstatus/><internalId>602</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00052</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmNodeChannelRef
        Parameter Type: Reference
        Parent Containers: J1939RmNode,
        Description: Reference to the channels this node has access to.
        Lower Multiplicity: 1
        infinite
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: LINK, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/J1939Rm/J1939RmConfigSet/J1939RmChannel
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_452</srcid><srcstatus/><internalId>620</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00054</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmSupportAckIndication
        Parameter Type: Boolean
        Parent Containers: J1939RmGeneral,
        Description: Pre-processor switch for enabling support of acknowledgement indications.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1255</srcid><srcstatus/><internalId>660</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmSupportAckTransmission
        Parameter Type: Boolean
        Parent Containers: J1939RmGeneral,
        Description: Pre-processor switch for enabling support of acknowledgement transmission.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1268</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmSupportRequestIndication
        Parameter Type: Boolean
        Parent Containers: J1939RmGeneral,
        Description: Pre-processor switch for enabling support of request indications.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1280</srcid><srcstatus/><internalId>662</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmSupportRequestTransmission
        Parameter Type: Boolean
        Parent Containers: J1939RmGeneral,
        Description: Pre-processor switch for enabling support of request transmission.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1307</srcid><srcstatus/><internalId>663</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00058</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmSupportTimeoutSupervision
        Parameter Type: Boolean
        Parent Containers: J1939RmGeneral,
        Description: Pre-processor switch for enabling support of request timeout supervision.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1320</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00061</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name: J1939RmUserAckPGN
        Parameter Type: Integer
        Parent Containers: J1939RmCddUser, J1939RmRteUser,
        Description: PGN supported to be acknowledged to this module. The PGNs supported by different 
        modules should usually be disjunctive.
        Lower Multiplicity: 0
        infinite
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 262143 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_518</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1054</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request, and 
        the requested PGN is configured via J1939RmUserRequestPGN to trigger either the J1939 
        Diagnostic Communication Manager or a CDD, the J1939 Request Manager shall call the 
        corresponding &lt;User&gt;_RequestIndication.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.RmUserConfigurations</srcid><srcstatus/><internalId>357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request, and 
        the requested PGN is configured via J1939RmUserRequestPGN to be forwarded to the RTE, the J1939 
        Request Manager shall call the corresponding service port function.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/J1939Rm_Cfg.c_122</srcid><srcstatus/><internalId>398</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_957</srcid><srcstatus/><internalId>432</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_REQUEST_INDICATION_RTE_1</srcid><srcstatus/><internalId>747</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The J1939 Request Manager shall only accept requests addressed to the whole network (global DA)
        or to one of the configured addresses of the ECU (see J1939RmNmNodeRef)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00007.global_DA</srcid><srcstatus/><internalId>240</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00007.configured_addresses</srcid><srcstatus/><internalId>241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request, and 
        the requested PGN or the requested extended identifier bytes are not configured, and the 
        destination address is not the broadcast address, the J1939 Request Manager shall call 
        PduR_J1939RmTransmit to send a negative acknowledgement (NACK)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00008.RequestedPGN_NotConfigured</srcid><srcstatus/><internalId>226</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00008.ExtendedIdentiferBytes</srcid><srcstatus/><internalId>227</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When a BSW module, a CDD, or an SW-C (via service port and RTE) calls J1939Rm_SendAck, the 
        J1939 Request Manager shall call PduR_J1939RmTransmit to send the required acknowledgement.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00009.BSW_CDD</srcid><srcstatus/><internalId>250</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00009.RTE</srcid><srcstatus/><internalId>251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When J1939Rm_Init is called in initialized state, the J1939 Request Manager shall not re-
        initialize its internal variables. It shall instead call Det_ReportError with the error code 
        J1939RM_E_REINIT if DET reporting is enabled (see J1939RmDevErrorDetect)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1911</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_CHECK_INIT_multiple_Initialization</srcid><srcstatus/><internalId>729</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        A call to J1939Rm_Init initializes all internal variables and sets the J1939 Request Manager to 
        the initialized state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00012.InternalVariables</srcid><srcstatus/><internalId>222</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00012.InitializedState</srcid><srcstatus/><internalId>223</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        A call to J1939Rm_DeInit sets the J1939 Request Manager back to the uninitialized state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1938</srcid><srcstatus/><internalId>448</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_CHECK_DEINIT_uninitialized</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        A call to J1939Rm_SetState sets the state of a node's channel to online or offline.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2026</srcid><srcstatus/><internalId>452</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_While_OFFLINE</srcid><srcstatus/><internalId>815</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        In the offline state, the J1939 Request Manager only processes requests for the AddressClaimed 
        PG, while timeout supervision and acknowledgement handling are completely disabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_948</srcid><srcstatus/><internalId>428</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_CancelRequestTimeout_STATE_OFFLINE</srcid><srcstatus/><internalId>714</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RTE_TimeoutSupervision_OfflineState</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RTE_TimeoutSupervision_NotQueued</srcid><srcstatus/><internalId>754</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_AC_OFFLINE</srcid><srcstatus/><internalId>775</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_specific_destination_address_UserJ1939Dcm_OFFLINE</srcid><srcstatus/><internalId>785</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_for_configured_UserAckPGN_OFFLINE</srcid><srcstatus/><internalId>792</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_While_OFFLINE</srcid><srcstatus/><internalId>820</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_with_Wrong_Channel</srcid><srcstatus/><internalId>821</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00016</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When a BSW module, a CDD, or an SW-C (via service port and RTE) calls J1939Rm_SendRequest, the 
        J1939 Request Manager shall call PduR_J1939RmTransmit to send the request.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00016.BSW_CDD</srcid><srcstatus/><internalId>254</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00016.RTE</srcid><srcstatus/><internalId>255</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If timeout supervision is enabled for the caller of J1939Rm_SendRequest via 
        J1939RmUserTimeoutSupervision, and the parameter checkTimeout is TRUE, and the destination 
        address is not the broadcast address (0xff): The J1939 Request Manager shall start timeout 
        supervision.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2922</srcid><srcstatus/><internalId>526</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3330</srcid><srcstatus/><internalId>564</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_125ms_without_Response</srcid><srcstatus/><internalId>822</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_125ms_without_Response_TSV_Queue_Full</srcid><srcstatus/><internalId>823</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Transmission requests for the Acknowledgement PG shall be queued when a previous transmission 
        of this PG is still pending. The size of this queue is determined by J1939RmAckQueueSize.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00018.queueing_Ack_PG</srcid><srcstatus/><internalId>252</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00018.J1939RmAckQueueSize</srcid><srcstatus/><internalId>253</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        The J1939 Request Manager shall use the J1939Rm_TxConfirmation with result E_OK of the
        associated I-PDU to trigger transmission of pending Acknowledgement PGs.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2193</srcid><srcstatus/><internalId>469</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3314</srcid><srcstatus/><internalId>561</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3678</srcid><srcstatus/><internalId>590</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT</srcid><srcstatus/><internalId>803</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        If the J1939Rm_TxConfirmation is called with result E_NOT_OK, the J1939 Request Manager shall 
        flush the Acknowledgement PG queue.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2200</srcid><srcstatus/><internalId>470</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_E_NOT_OK</srcid><srcstatus/><internalId>813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Transmission requests for the Request PG shall be queued when a previous transmission of this 
        PG is still pending. The size of this queue is determined by J1939RmRequestQueueSize.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00021.queueing_Rqst_PG</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00021.J1939RmRequestQueueSize</srcid><srcstatus/><internalId>257</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        The J1939 Request Manager shall use the J1939Rm_TxConfirmation with result E_OK of the 
        associated I-PDU to trigger transmission of pending Request and Request2 PGs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        If the J1939Rm_TxConfirmation is called with result E_NOT_OK, the J1939 Request Manager shall 
        flush the corresponding request PG queue.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2177</srcid><srcstatus/><internalId>466</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_Request_E_NOT_OK</srcid><srcstatus/><internalId>833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        When J1939Rm_SendRequest is called with the parameter checkTimeout set to TRUE and a 
        destination address that is not the broadcast address (0xff), and timeout handling is enabled 
        for the caller via J1939RmUserTimeoutSupervision: The J1939 Request Manager shall store (
        separately for each node) the calling module's user ID, the PGN, extended identifier bytes, the 
        source address, and the destination address of the request.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00024.SendRequest</srcid><srcstatus/><internalId>258</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00024.ExtendedIdentiferBytes</srcid><srcstatus/><internalId>259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00025</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When a request is sent with the global destination address, it shall also be handled internally 
        as if it was received via J1939Rm_RxIndication.
      </description>
      <comment>
        This requirement is not applicable.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The J1939 Request Manager shall only accept acknowledgements where the AddressAcknowledged is 
        set to one of the configured addresses of the ECU (see J1939RmNmNodeRef)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_393</srcid><srcstatus/><internalId>409</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        When J1939Rm_RxIndication is called by the PDU Router to indicate reception of an 
        acknowledgement which does not match a pending request, and the acknowledged PGN is configured 
        via J1939RmUserAckPGN to trigger a CDD, the J1939 Request Manager shall call the corresponding 
        User&gt;_AckIndication.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/J1939Rm_Cfg.c_94</srcid><srcstatus/><internalId>388</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_782</srcid><srcstatus/><internalId>419</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_for_configured_UserAckPGN</srcid><srcstatus/><internalId>788</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_for_Not_configured_UserAckPGN</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_with_Invalid_acknowledged_address</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_with_Invalid_Channel</srcid><srcstatus/><internalId>796</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_with_NoAckIndicationFncConfigured</srcid><srcstatus/><internalId>797</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_TSV_different_order</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_TSV_same_order</srcid><srcstatus/><internalId>799</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        When J1939Rm_RxIndication is called by the PDU Router to indicate reception of an 
        acknowledgement which does not match a pending request, and the acknowledged PGN is configured 
        via J1939RmUserAckPGN to be forwarded to the RTE, the J1939 Request Manager shall call the 
        corresponding service port function.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/J1939Rm_Cfg.c_97</srcid><srcstatus/><internalId>389</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_783</srcid><srcstatus/><internalId>420</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_ACKINDICATION_RTE_1</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When an acknowledgement matching the request is received, when a configured COM RxIPduCallout 
        is triggered which matches the request, or when a CDD or an application SW-C calls 
        J1939Rm_CancelRequestTimeout, the timeout supervision of the request is stopped.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00029.Acknowledgement_Received</srcid><srcstatus/><internalId>262</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00029.COM_RxIPduCallout</srcid><srcstatus/><internalId>263</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00029.J1939Rm_CancelRequestTimeout</srcid><srcstatus/><internalId>264</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the timeout supervision for a request reaches 1.25s, the J1939 Request Manager shall call 
        the &lt;User&gt;_RequestTimeoutIndication corresponding to the userId parameter of the initial 
        J1939Rm_SendRequest.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_320</srcid><srcstatus/><internalId>407</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RTE_TimeoutSupervision</srcid><srcstatus/><internalId>751</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_125ms_without_Response</srcid><srcstatus/><internalId>822</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_125ms_without_Response_TSV_Queue_Full</srcid><srcstatus/><internalId>823</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Type of error | Related error code | Error value 
        An API was called while the module was uninitialized | J1939RM_E_UNINITJ1939Rm.J1939RM_E_UNINIT 
        0x01 
        The Init API was called twice | J1939RM_E_REINITJ1939Rm.J1939RM_E_REINIT | 0x02 
        J1939Rm_Init was called with an invalid configuration pointer | J1939RM_E_INIT_FAILEDJ1939Rm.
        J1939RM_E_INIT_FAILED | 0x03 
        An API service was called with a NULL pointer | J1939RM_E_PARAM_POINTERJ1939Rm.
        J1939RM_E_PARAM_POINTER | 0x10 
        An API service was called with a wrong ID | J1939RM_E_INVALID_PDU_SDU_IDJ1939Rm.
        J1939RM_E_INVALID_PDU_SDU_ID | 0x11 
        An API service was called with wrong network handle | J1939RM_E_INVALID_NETWORK_IDJ1939Rm.
        J1939RM_E_INVALID_NETWORK_ID | 0x12 
        The API J1939Rm_SetState was called with a wrong state | J1939RM_E_INVALID_STATEJ1939Rm.
        J1939RM_E_INVALID_STATE | 0x13 
        An API was called with an illegal user ID | J1939RM_E_INVALID_USERJ1939Rm.
        J1939RM_E_INVALID_USER | 0x14 
        An API was called with an unknown or illegal PGN | J1939RM_E_INVALID_PGNJ1939Rm.
        J1939RM_E_INVALID_PGN | 0x15 
        An API was called with an illegal priority | J1939RM_E_INVALID_PRIOJ1939Rm.
        J1939RM_E_INVALID_PRIO | 0x16 
        An API was called with an illegal node address | J1939RM_E_INVALID_ADDRESSJ1939Rm.
        J1939RM_E_INVALID_ADDRESS | 0x17 
        An API was called with an illegal Boolean option | J1939RM_E_INVALID_OPTIONJ1939Rm.
        J1939RM_E_INVALID_OPTION | 0x18 
        An API was called with an illegal AckCode | J1939RM_E_INVALID_ACK_CODEJ1939Rm.
        J1939RM_E_INVALID_ACK_CODE | 0x19 
        An API was called with an illegal node ID | J1939RM_E_INVALID_NODE_IDJ1939Rm.
        J1939RM_E_INVALID_NODE_ID | 0x1a 
        An API was called with invalid extended identifier bytes | J1939RM_E_INVALID_EXTID_INFOJ1939Rm.
        J1939RM_E_INVALID_EXTID_INFO | 0x1b 
      </description>
     <furtherinfo>WRN.swurs.needscoverage.count: Requirement use case is refined in more than 10 refined 
	          requirements due to use case consistency and multitude of possible errors that can occur.
      </furtherinfo>	
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00031.INVALID_EXTID</srcid><srcstatus/><internalId>265</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_UNINIT</srcid><srcstatus/><internalId>266</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_REINIT</srcid><srcstatus/><internalId>267</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_PARAM_POINTER</srcid><srcstatus/><internalId>268</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_PDU_SDU_ID</srcid><srcstatus/><internalId>269</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_NETWORK_ID</srcid><srcstatus/><internalId>270</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_STATE</srcid><srcstatus/><internalId>271</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_USER</srcid><srcstatus/><internalId>272</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_PGN</srcid><srcstatus/><internalId>273</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_PRIO</srcid><srcstatus/><internalId>274</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_ADDRESS</srcid><srcstatus/><internalId>275</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_OPTION</srcid><srcstatus/><internalId>276</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_ACK_CODE</srcid><srcstatus/><internalId>277</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_NODE</srcid><srcstatus/><internalId>278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager shall check 
        PduIdType parameters (SDU/PDU IDs) of its API functions against the configured IDs, and shall 
        report the development error J1939RM_E_INVALID_PDU_SDU_ID when an unknown ID is provided by the 
        call.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00033.J1939Rm_Transmit</srcid><srcstatus/><internalId>279</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00033.J1939Rm_RxIndication</srcid><srcstatus/><internalId>280</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00033.J1939Rm_TxConfirmation</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00033.J1939Rm_CopyTxData</srcid><srcstatus/><internalId>282</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00033.J1939Rm_TpTxConfirmation</srcid><srcstatus/><internalId>283</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00033.J1939Rm_ComRxIpduCallout</srcid><srcstatus/><internalId>284</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Module | Header File | Imported Type 
        ComStack_Types | ComStack_Types.h | NetworkHandleType 
        ComStack_Types.h | PduIdType 
        ComStack_Types.h | PduInfoType 
        ComStack_Types.h | PduLengthType 
        Std | Std_Types.h | Std_ReturnType 
        Std_Types.h | Std_VersionInfoType 
      </description>
      <comment>
        ComStack_Types already includes Std_Types.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_11</srcid><srcstatus/><internalId>365</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | J1939Rm_ConfigType 
        Kind | Structure 
        Elements | implementation specific 
        Type 
        Comment 
        Description | This is the base type for the configuration of the J1939 Request Manager. A 
        pointer to an instance of this structure will be used in the initialization of the J1939 
        Request Manager. The content of this structure is defined in chapter 10 Configuration 
        specification.
        Available via | J1939Rm.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_235</srcid><srcstatus/><internalId>404</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | J1939Rm_Init 
        Syntax 
        void J1939Rm_Init (const J1939Rm_ConfigType* configPtr)
        Service ID [hex] | 0x01 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | configPtr | Pointer to selected configuration structure 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | This function initializes the J1939 Request Manager.
        Available via | J1939Rm.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1737</srcid><srcstatus/><internalId>440</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>J1939Rm_ComTest_Multi_Test</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Compile_Test</srcid><srcstatus/><internalId>705</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Compile_Test_RmRxIndication</srcid><srcstatus/><internalId>706</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Compile_RTE_No_Ack_Test</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Compile_RTE_Test</srcid><srcstatus/><internalId>708</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_CHECK_INIT_multiple_Initialization</srcid><srcstatus/><internalId>729</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | J1939Rm_DeInit 
        Syntax 
        void J1939Rm_DeInit (void)
        Service ID [hex] | 0x02 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | This function resets the J1939 Request Manager to the uninitialized state.
        Available via | J1939Rm.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1918</srcid><srcstatus/><internalId>446</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_CHECK_DEINIT_before_Initialization</srcid><srcstatus/><internalId>722</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | J1939Rm_GetVersionInfo 
        Syntax 
        void J1939Rm_GetVersionInfo (Std_VersionInfoType* versionInfo)
        Service ID [hex] | 0x03 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | versionInfo | Pointer to where to store the version information of this 
        module.
        Return value | None 
        Description | Returns the version information of this module.
        Available via | J1939Rm.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1943</srcid><srcstatus/><internalId>449</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_GET_VERSION_INFO</srcid><srcstatus/><internalId>727</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The J1939 Request Manager shall reject the state change by returning E_NOT_OK when the '
        newState' is not in the valid range. If DET is enabled via J1939RmDevErrorDetect, the 
        development error J1939RM_E_INVALID_STATE (see section [REF]) shall be reported.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00040.rejection</srcid><srcstatus/><internalId>294</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00040.DET</srcid><srcstatus/><internalId>295</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager shall check 
        NetworkHandleType parameters (network handles) of its API functions against the referenced 
        network handles of ComM, and shall report the development error J1939RM_E_INVALID_NETWORK_ID 
        when an unknown handle is provided by the call.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00041.J1939Rm_SetState</srcid><srcstatus/><internalId>290</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00041.J1939Rm_SendRequest</srcid><srcstatus/><internalId>291</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00041.J1939Rm_CancelRequestTimeout</srcid><srcstatus/><internalId>292</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00041.J1939Rm_SendAck</srcid><srcstatus/><internalId>293</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | J1939Rm_MainFunction 
        Syntax 
        void J1939Rm_MainFunction (void)
        Service ID [hex] | 0x04 
        Description | Main function of the J1939 Request Manager. Used for scheduling purposes and 
        timeout supervision.
        Available via | SchM_J1939Rm.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3250</srcid><srcstatus/><internalId>557</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_MAINFUNCTION</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The frequency of invocations of J1939Rm_MainFunction is determined by the configuration 
        parameter J1939RmMainFunctionPeriod.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Rm_Bswmd.arxml.m4_47</srcid><srcstatus/><internalId>668</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        API Function | Header File | Description 
        PduR_J1939RmTransmit | PduR_J1939Rm.h | Requests transmission of a PDU.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_270</srcid><srcstatus/><internalId>406</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3705</srcid><srcstatus/><internalId>594</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        API Function | Header File | Description 
        Com_TriggerIPDUSendWithMetaData | Com.h | By a call to Com_TriggerIPDUSendWithMetaData the 
        AUTOSAR COM module updates its internal metadata for the I-PDU with the given ID by copying the 
        metadata from the given position and with respect to length of the globally configured 
        MetaDataType of this I-PDU. Then the I-PDU is triggered for transmission.
        Det_ReportError | Det.h | Service to report development errors.
        J1939Dcm_RequestIndication | J1939Dcm.h | Indicates reception of a Request or Request2 PG.
        J1939Nm_RequestIndication | J1939Nm.h | Indicates reception of a Request or Request2 PG.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00045.Com_TriggerIPDUSendWithMetaData</srcid><srcstatus/><internalId>323</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00045.Det_ReportError</srcid><srcstatus/><internalId>324</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00045.J1939Dcm_RequestIndication</srcid><srcstatus/><internalId>325</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00045.J1939Nm_RequestIndication</srcid><srcstatus/><internalId>326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | J1939Rm_SetState 
        Syntax 
        Std_ReturnType J1939Rm_SetState (NetworkHandleType channel, uint8 node, J1939Rm_StateType 
        newState)
        Service ID [hex] | 0x05 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | channel | Channel for which the state shall be changed.
        node | Node for which the state shall be changed.
        newState | New state the J1939Rm shall enter, see definition of J1939Rm_StateType for available 
        states.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: New communication state was setE_NOT_OK: Communication 
        state was not changed due to wrong value in NewState or wrong initialization state of the 
        module.
        Description | Changes the communication state of J1939Rm to offline (only Request for AC 
        supported) or online.
        Available via | J1939Rm.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1970</srcid><srcstatus/><internalId>451</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_While_OFFLINE</srcid><srcstatus/><internalId>815</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SET_STATE_With_NodeId_for_wrong_channel</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SET_STATE_With_ValidID</srcid><srcstatus/><internalId>848</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00049</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | J1939Rm_StateType 
        Kind | Enumeration 
        Range | J1939RM_STATE_OFFLINE | 0x00 | Only Request for AC 
        J1939RM_STATE_ONLINE | 0x01 | Normal communication 
        Description | This type represents the communication state of the J1939 Request Manager.
        Available via | J1939Rm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_228</srcid><srcstatus/><internalId>381</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00054</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Service Name | J1939Rm_SendRequest 
        Syntax 
        Std_ReturnType J1939Rm_SendRequest (uint8 userId, NetworkHandleType channel, uint32 
        requestedPgn, const J1939Rm_ExtIdInfoType* extIdInfo, uint8 destAddress, uint8 priority, 
        boolean checkTimeout)
        Service ID [hex] | 0x07 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | userId | Identification of the calling module.
        channel | Channel on which the request shall be sent.
        requestedPgn | PGN of the requested PG.
        extIdInfo | Extended identifier bytes. J1939RM_EXTID_NONE is assumed if a NULL pointer is 
        provided.
        destAddress | Address of the destination node or 0xFF for broadcast.
        priority | Priority of the Request PG.
        checkTimeout | TRUE: Timeout supervision will be performed FALSE: No timeout supervision will 
        be started 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: Transmission request is acceptedE_NOT_OK: Transmission 
        request is not accepted 
        Description | Requests transmission of a Request or Request2 PG.
        Available via | J1939Rm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00054.ExtendedIdentifiers</srcid><srcstatus/><internalId>296</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00054.SendRequestAPI</srcid><srcstatus/><internalId>297</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Service Name | J1939Rm_CancelRequestTimeout 
        Syntax 
        Std_ReturnType J1939Rm_CancelRequestTimeout (uint8 userId, NetworkHandleType channel, uint32 
        requestedPgn, const J1939Rm_ExtIdInfoType* extIdInfo, uint8 destAddress)
        Service ID [hex] | 0x08 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | userId | Identification of the calling module.
        channel | Channel on which the request was sent.
        requestedPgn | PGN of the requested PG.
        extIdInfo | Extended identifier bytes. J1939RM_EXTID_NONE is assumed if a NULL pointer is 
        provided.
        destAddress | Address of the destination node or 0xFF for broadcast.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: Cancellation of request timeout was successfulE_NOT_OK: 
        Cancellation of request timeout was not successful 
        Description | Cancels timeout monitoring of a request. If the request is not active, or timeout 
        monitoring was not requested, this call has no effect.
        Available via | J1939Rm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00055.CancelRequestTimeoutAPI</srcid><srcstatus/><internalId>298</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00055.ExtendedIdentifiers</srcid><srcstatus/><internalId>299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Service Name | J1939Rm_SendAck 
        Syntax 
        Std_ReturnType J1939Rm_SendAck (uint8 userId, NetworkHandleType channel, uint32 ackPgn, const 
        J1939Rm_ExtIdInfoType* extIdInfo, J1939Rm_AckCode ackCode, uint8 ackAddress, uint8 priority, 
        boolean broadcast)
        Service ID [hex] | 0x09 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | userId | Identification of the calling module.
        channel | Channel on which the acknowledgement shall be sent.
        ackPgn | Acknowledged PGN.
        extIdInfo | Extended identifier bytes. J1939RM_EXTID_NONE is assumed if a NULL pointer is 
        provided.
        ackCode | Type of acknowledgement, see definition of J1939Rm_AckCode for available codes.
        ackAddress | Address of the node that sent the request.
        priority | Priority of the Acknowledgement PG.
        broadcast | Indicates whether the ACKM is a response to a broadcast request.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: Transmission request is acceptedE_NOT_OK: Transmission 
        request is not accepted 
        Description | Requests transmission of an Acknowledgement PG.
        Available via | J1939Rm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00056.SendAckAPI</srcid><srcstatus/><internalId>300</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00056.ExtendedIdentifiers</srcid><srcstatus/><internalId>301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | J1939Rm_AckCode 
        Kind | Enumeration 
        Range | J1939RM_ACK_POSITIVE | 0x00 | Positive Acknowledgement 
        J1939RM_ACK_NEGATIVE | 0x01 | Negative Acknowledgement 
        J1939RM_ACK_ACCESS_DENIED | 0x02 | Access Denied 
        J1939RM_ACK_CANNOT_RESPOND | 0x03 | Cannot Respond 
        Description | This type represents the available kinds of acknowledgements.
        Variation 
        Available via | Rte_J1939Rm_Type.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_25</srcid><srcstatus/><internalId>367</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00058</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | J1939Rm_RxIndication 
        Syntax 
        void J1939Rm_RxIndication (PduIdType RxPduId, const PduInfoType* PduInfoPtr)
        Service ID [hex] | 0x42 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in) | RxPduId | ID of the received PDU.
        PduInfoPtr | Contains the length (SduLength) of the received PDU, a pointer to a buffer (
        SduDataPtr) containing the PDU, and the MetaData related to this PDU.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | Indication of a received PDU from a lower layer communication interface module.
        Available via | J1939Rm.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2079</srcid><srcstatus/><internalId>458</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_AC</srcid><srcstatus/><internalId>772</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Channel_Not_Configured_For_Node</srcid><srcstatus/><internalId>773</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_NOT_RQST_NOR_ACKM</srcid><srcstatus/><internalId>800</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_INVALID_ID</srcid><srcstatus/><internalId>802</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00059</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Service Name | J1939Rm_TxConfirmation 
        Syntax 
        void J1939Rm_TxConfirmation (PduIdType TxPduId, Std_ReturnType result)
        Service ID [hex] | 0x40 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in) | TxPduId | ID of the PDU that has been transmitted.
        result | E_OK: The PDU was transmitted. E_NOT_OK: Transmission of the PDU failed.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | The lower layer communication interface module confirms the transmission of a PDU,
        or the failure to transmit a PDU.
        Available via | J1939Rm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2123</srcid><srcstatus/><internalId>463</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT</srcid><srcstatus/><internalId>803</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00062</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Service Name | J1939Rm_CheckReceivedComIPdu 
        Syntax 
        boolean J1939Rm_CheckReceivedComIPdu (PduIdType PduId, const PduInfoType* PduInfoPtr)
        Service ID [hex] | 0x28 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in) | PduId | ID of the received ComIPdu.
        PduInfoPtr | Length (SduLength) of the received ComIPdu and a pointer to the data of the 
        ComIPdu (SduDataPtr)
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | boolean | Shall be always true to ensure the ComIPdu is received.
        Description | Reports a received ComIPdu. If this ComIPdu was requested via J1939Rm_SendRequest 
        or the SendRequest service operation, a request timeout for this request is stopped.
        Available via | J1939Rm_Com.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939Rm_ComRxIpduCallout</srcid><srcstatus/><internalId>359</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Service Name | &lt; User &gt;_RequestIndication 
        Syntax 
        void &lt; User &gt;_RequestIndication (uint8 node, NetworkHandleType channel, uint32 requestedPgn, 
        const J1939Rm_ExtIdInfoType* extIdInfo, uint8 sourceAddress, uint8 destAddress, uint8 priority)
        Service ID [hex] | 0x47 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | node | Node by which the request was received.
        channel | Channel on which the request was received.
        requestedPgn | PGN of the requested PG.
        extIdInfo | Extended identifier bytes.
        sourceAddress | Address of the node that sent the Request PG.
        destAddress | Address of this node or 0xFF for broadcast.
        priority | Priority of the Request PG.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | Indicates reception of a Request or Request2 PG.
        Available via | configurable 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00063.UserRequestIndicationAPI</srcid><srcstatus/><internalId>302</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00063.ExtendedIdentifiers</srcid><srcstatus/><internalId>303</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00064</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Service Name | &lt; User &gt;_AckIndication 
        Syntax 
        void &lt; User &gt;_AckIndication (uint8 node, NetworkHandleType channel, uint32 ackPgn, const 
        J1939Rm_ExtIdInfoType* extIdInfo, J1939Rm_AckCode ackCode, uint8 ackAddress, uint8 
        sourceAddress, uint8 priority)
        Service ID [hex] | 0x4d 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | node | Node by which the acknowledgement was received.
        channel | Channel on which the acknowledgement was received.
        ackPgn | Acknowledged PGN.
        extIdInfo | Extended identifier bytes.
        ackCode | Type of acknowledgement, see definition of J1939Rm_AckCode for available codes.
        ackAddress | Address of this node.
        sourceAddress | Address of the node that sent the Acknowledgement PG.
        priority | Priority of the Acknowledgement PG.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | Indicates reception of an Acknowledgement PG.
        Available via | configurable 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00064.UserAckIndication</srcid><srcstatus/><internalId>304</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00064.ExtendedIdentifiers</srcid><srcstatus/><internalId>305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Service Name | &lt; User &gt;_RequestTimeoutIndication 
        Syntax 
        void &lt; User &gt;_RequestTimeoutIndication (uint8 node, NetworkHandleType channel, uint32 
        requestedPgn, const J1939Rm_ExtIdInfoType* extIdInfo, uint8 destAddress)
        Service ID [hex] | 0x4e 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | node | Node by which the request was sent.
        channel | Channel on which the request was sent.
        requestedPgn | PGN of the requested PG.
        extIdInfo | Extended identifier bytes.
        destAddress | Address of the destination node or 0xFF for broadcast.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | Indicates timeout of a request triggered with the same parameters.
        Available via | configurable 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00066</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When J1939Rm_RxIndication is called by the PDU Router to indicate reception of an 
        acknowledgement which matches a pending request (acknowledged PGN, source address, acknowledged 
        address), the J1939 Request Manager shall call the &lt;User&gt;_AckIndication or the service port 
        function corresponding to the stored user ID.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00066.CDD</srcid><srcstatus/><internalId>260</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00066.RTE</srcid><srcstatus/><internalId>261</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00067</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        The J1939 Request Manager shall reject transmission of a request by returning E_NOT_OK when the 
        requestedPGN', the 'extIdType' element within the 'extIdInfo', the 'destAddress', or the '
        priority' are not in the valid range, or when the 'userId' is not one of the configured user 
        IDs (see J1939RmUserId), or when 'checkTimeout' is true but timeout handling is disabled for 
        the calling module (see J1939RmUserTimeoutSupervision). If DET is enabled via 
        J1939RmDevErrorDetect, the corresponding development error (see section [REF]) shall be 
        reported: J1939RM_E_INVALID_USER for 'userId', J1939RM_E_INVALID_EXTID_INFO for 'extIdInfo', 
        J1939RM_E_INVALID_PGN for 'requestedPGN', J1939RM_E_INVALID_PRIO for 'priority', 
        J1939RM_E_INVALID_ADDRESS for 'destAddress', and J1939RM_E_INVALID_OPTION for 'checkTimeout'
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00067.INVALID_EXTID</srcid><srcstatus/><internalId>306</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00067.Invalid_requestedPGN</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00067.Invalid_destAddress</srcid><srcstatus/><internalId>308</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00067.Invalid_priority</srcid><srcstatus/><internalId>309</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00067.Invalid_userId</srcid><srcstatus/><internalId>310</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00067.Invalid_checkTimeout</srcid><srcstatus/><internalId>311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00068</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The J1939 Request Manager shall reject transmission of a request by returning E_NOT_OK when 
        another request is pending and the request queue is full.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1174</srcid><srcstatus/><internalId>438</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_Full_Queue</srcid><srcstatus/><internalId>834</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        The J1939 Request Manager shall ignore the timeout cancellation request when the 'requestedPGN'
        the 'extIdType' element within the 'extIdInfo', or the 'destAddress' are not in the valid range,
        or when the 'userId' is not one of the configured user IDs (see J1939RmUserId), or if no 
        suitable entry can be found in the list of pending requests. If DET is enabled via 
        J1939RmDevErrorDetect, the corresponding development error (see section [REF]) shall be 
        reported: J1939RM_E_INVALID_USER for 'userId', J1939RM_E_INVALID_PGN for 'requestedPGN', 
        J1939RM_E_INVALID_EXTID_INFO for 'extIdInfo', and J1939RM_E_INVALID_ADDRESS for 'destAddress'
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00069.INVALID_EXTID</srcid><srcstatus/><internalId>312</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00069.invalid_requestedPGN</srcid><srcstatus/><internalId>313</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00069.invalid_destAddress</srcid><srcstatus/><internalId>314</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00069.invalid_userId</srcid><srcstatus/><internalId>315</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00069.NoSuitableEntry</srcid><srcstatus/><internalId>316</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00070</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        The J1939 Request Manager shall reject transmission of an acknowledgement by returning E_NOT_OK 
        when the 'ackPgn', the 'extIdType' element within the 'extIdInfo', the 'ackAddress', or the '
        priority' are not in the valid range, or when the 'userId' is not one of the configured user 
        IDs (see J1939RmUserId). If DET is enabled via J1939RmDevErrorDetect, the corresponding 
        development error (see section [REF]) shall be reported: J1939RM_E_INVALID_USER for 'userId', 
        J1939RM_E_INVALID_EXTID_INFO for 'extIdInfo', J1939RM_E_INVALID_PGN for 'ackPgn', 
        J1939RM_E_INVALID_ACK_CODE for 'ackCode', J1939RM_E_INVALID_ADDRESS for 'ackAddress', and 
        J1939RM_E_INVALID_PRIO for 'priority'
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00070.INVALID_EXTID</srcid><srcstatus/><internalId>317</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00070.invalid_ackPgn</srcid><srcstatus/><internalId>318</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00070.invalid_ackAddress</srcid><srcstatus/><internalId>319</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00070.invalid_priority</srcid><srcstatus/><internalId>320</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00070.invalid_ackCode</srcid><srcstatus/><internalId>321</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00070.invalid_userId</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The J1939 Request Manager shall reject transmission of an acknowledgement by returning E_NOT_OK 
        when another acknowledgement is pending and the acknowledgement queue is full.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1274</srcid><srcstatus/><internalId>439</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_Full_Queue</srcid><srcstatus/><internalId>812</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00072</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The J1939 Request Manager shall use the J1939Rm_MainFunction for timing related purposes.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3249</srcid><srcstatus/><internalId>556</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_DET_ON_TimeoutSupervision_1250MS</srcid><srcstatus/><internalId>819</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00073</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        During initialization via J1939Rm_Init, the J1939 Request Manager assumes the offline state for 
        all nodes on all channels.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1869</srcid><srcstatus/><internalId>442</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_While_OFFLINE</srcid><srcstatus/><internalId>815</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00074</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The J1939Rm_SendRequest API function shall only be available if J1939RmUserSendRequest is set 
        for at least one user.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2779</srcid><srcstatus/><internalId>515</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_Request_E_NOT_OK</srcid><srcstatus/><internalId>833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00075</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The J1939Rm_CancelRequestTimeout API function shall only be available if 
        J1939RmUserTimeoutSupervision is set for at least one user.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2986</srcid><srcstatus/><internalId>533</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00076</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The J1939Rm_SendAck API function shall only be available if J1939RmUserSendAck is set for at 
        least one user.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3082</srcid><srcstatus/><internalId>544</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00079</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        The J1939Rm_CheckReceivedComIPdu call back function shall only be available if 
        J1939RmUserTimeoutSupervision is set for at least one user.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2452</srcid><srcstatus/><internalId>494</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_ComIpduCallout</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_TimeoutSupervision</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_TimeoutSupervision2</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_TimeoutSupervision3</srcid><srcstatus/><internalId>829</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00080</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The J1939Rm_RxIndication call back function shall only be available if J1939RmUserAckIndication 
        or J1939RmUserRequestIndication is set for at least one user.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2080</srcid><srcstatus/><internalId>459</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00081</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The J1939Rm_TxConfirmation call back function shall only be available if J1939RmUserSendAck or 
        J1939RmUserSendRequest is set for at least one user.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2121</srcid><srcstatus/><internalId>462</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00082</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        The Com_TriggerIPDUSendWithMetaData function is only required if at least one J1939RmComUser is 
        configured.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.RmUserConfigurations</srcid><srcstatus/><internalId>357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00083</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        The J1939Dcm_RequestIndication function is only required if at least one J1939RmDcmUser is configured.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/J1939Rm_Cfg.c_106</srcid><srcstatus/><internalId>391</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00084</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        The J1939Nm_RequestIndication function is only required if at least one J1939RmNmUser is 
        configured.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/J1939Rm_Cfg.c_114</srcid><srcstatus/><internalId>396</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00085</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The configured &lt;User&gt;_RequestIndication function shall be available for each user that has 
        J1939RmUserRequestIndication enabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/J1939Rm_Cfg.c_103</srcid><srcstatus/><internalId>390</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00086</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The configured &lt;User&gt;_AckIndication function shall be available for each user that has 
        J1939RmUserAckIndication enabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/J1939Rm_Cfg.c_92</srcid><srcstatus/><internalId>387</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00087</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The configured &lt;User&gt;_RequestTimeoutIndication function shall be available for each user that 
        has J1939RmUserTimeoutSupervision enabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/J1939Rm_Cfg.c_130</srcid><srcstatus/><internalId>399</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00096</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager shall check 
        node handle parameters of its API functions against the node handles of J1939Nm referenced via 
        J1939RmNmNodeRef, and shall report the development error J1939RM_E_INVALID_NODE_ID when an 
        unknown handle is provided by the call.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2061</srcid><srcstatus/><internalId>456</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3522</srcid><srcstatus/><internalId>578</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SET_STATE_With_Wrong_NodeId</srcid><srcstatus/><internalId>846</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00097</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name | J1939Rm_SendRequest_{user}J1939Rm.J1939Rm_SendRequest 
        Kind | ProvidedPort | Interface | AppSendRequest 
        Description 
        Port Defined Argument Value(s) | Type | uint8 
        Value | {ecuc(J1939Rm/J1939RmConfigSet/J1939RmNode/J1939RmUser/J1939RmRteUser/J1939RmUserId.
        value)
        Variation | {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportRequestTransmission)} == trueuser = {
        ecuc(J1939Rm/J1939RmConfigSet/J1939RmNode/J1939RmUser.SHORT-NAME)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.RmUserConfigurations</srcid><srcstatus/><internalId>357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00098</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name | J1939Rm_SendAck_{user}J1939Rm.J1939Rm_SendAck 
        Kind | ProvidedPort | Interface | AppSendAck 
        Description 
        Port Defined Argument Value(s) | Type | uint8 
        Value | {ecuc(J1939Rm/J1939RmConfigSet/J1939RmNode/J1939RmUser/J1939RmRteUser/J1939RmUserId.
        value)
        Variation | {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportAckTransmission)} == trueuser = {ecuc(
        J1939Rm/J1939RmConfigSet/J1939RmNode/J1939RmUser.SHORT-NAME)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.RmUserConfigurations</srcid><srcstatus/><internalId>357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00099</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | J1939Rm_CancelRequestTimeout_{user}J1939Rm.J1939Rm_CancelRequestTimeout 
        Kind | ProvidedPort | Interface | AppCancelRequestTimeout 
        Description 
        Port Defined Argument Value(s) | Type | uint8 
        Value | {ecuc(J1939Rm/J1939RmConfigSet/J1939RmNode/J1939RmUser/J1939RmRteUser/J1939RmUserId.
        value)
        Variation | {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportTimeoutSupervision)} == true user = {
        ecuc(J1939Rm/J1939RmConfigSet/J1939RmNode/J1939RmUser.SHORT-NAME)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4_59</srcid><srcstatus/><internalId>678</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00100</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | J1939Rm_RequestIndication_{user}J1939Rm.J1939Rm_RequestIndication 
        Kind | RequiredPort | Interface | AppRequestIndication 
        Description 
        Variation | {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportRequestIndication)} == trueuser = {ecuc(
        J1939Rm/J1939RmConfigSet/J1939RmNode/J1939RmUser.SHORT-NAME)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4_83</srcid><srcstatus/><internalId>680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00101</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | J1939Rm_AckIndication_{user}J1939Rm.J1939Rm_AckIndication 
        Kind | RequiredPort | Interface | AppAckIndication 
        Description 
        Variation | {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportAckIndication)} == trueuser = {ecuc(
        J1939Rm/J1939RmConfigSet/J1939RmNode/J1939RmUser.SHORT-NAME)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4_74</srcid><srcstatus/><internalId>679</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00102</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | J1939Rm_RequestTimeoutIndication_{user}J1939Rm.J1939Rm_RequestTimeoutIndication 
        Kind | RequiredPort | Interface | AppRequestTimeoutIndication 
        Description 
        Variation | {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportTimeoutSupervision)} == trueuser = {ecuc(
        J1939Rm/J1939RmConfigSet/J1939RmNode/J1939RmUser.SHORT-NAME)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4_92</srcid><srcstatus/><internalId>681</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00103</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name | AppSendAckAppSendAck 
        Comment 
        IsService | true 
        Variation | {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportAckTransmission)} == true 
        Possible Errors | 0 | E_OKAppSendAck.E_OK | Operation successful 
        1 | E_NOT_OKAppSendAck.E_NOT_OK | Operation failed 
        Operation | SendAckAppSendAck.SendAck 
        Comment | Requests transmission of an Acknowledgement PG.
        Variation 
        Parameters | channelAppSendAck.SendAck.channel 
        Type | NetworkHandleType 
        Direction | IN 
        Comment | Channel on which the acknowledgement shall be sent.
        Variation 
        ackPgnAppSendAck.SendAck.ackPgn 
        Type | uint32 
        Direction | IN 
        Comment | Acknowledged PGN.
        Variation 
        extIdInfoAppSendAck.SendAck.extIdInfo 
        Type | J1939Rm_ExtIdInfoType 
        Direction | IN 
        Comment 
        Variation 
        ackCodeAppSendAck.SendAck.ackCode 
        Type | J1939Rm_AckCode 
        Direction | IN 
        Comment | Type of acknowledgement, see definition of J1939Rm_AckCode for available codes.
        Variation 
        ackAddressAppSendAck.SendAck.ackAddress 
        Type | uint8 
        Direction | IN 
        Comment | Address of the node that sent the request.
        Variation 
        priorityAppSendAck.SendAck.priority 
        Type | uint8 
        Direction | IN 
        Comment | Priority of the Acknowledgement PG.
        Variation 
        broadcastAppSendAck.SendAck.broadcast 
        Type | boolean 
        Direction | IN 
        Comment | Indicates whether the ACKM is a response to a broadcast request.
        Variation 
        Possible Errors | AppSendAck.E_OKAppSendAck.E_NOT_OK 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00103.AppSendAckAppSendAckAPI</srcid><srcstatus/><internalId>331</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Rm_00103.ExtendedIdentifiers</srcid><srcstatus/><internalId>332</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00104</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name | AppSendRequestAppSendRequest 
        Comment 
        IsService | true 
        Variation | {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportRequestTransmission)} == true 
        Possible Errors | 0 | E_OKAppSendRequest.E_OK | Operation successful 
        1 | E_NOT_OKAppSendRequest.E_NOT_OK | Operation failed 
        Operation | SendRequestAppSendRequest.SendRequest 
        Comment | Requests transmission of a Request or Request2 PG.
        Variation 
        Parameters | channelAppSendRequest.SendRequest.channel 
        Type | NetworkHandleType 
        Direction | IN 
        Comment | Channel on which the request shall be sent.
        Variation 
        requestedPgnAppSendRequest.SendRequest.requestedPgn 
        Type | uint32 
        Direction | IN 
        Comment | PGN of the requested PG.
        Variation 
        extIdInfoAppSendRequest.SendRequest.extIdInfo 
        Type | J1939Rm_ExtIdInfoType 
        Direction | IN 
        Comment 
        Variation 
        destAddressAppSendRequest.SendRequest.destAddress 
        Type | uint8 
        Direction | IN 
        Comment | Address of the destination node or 0xFF for broadcast.
        Variation 
        priorityAppSendRequest.SendRequest.priority 
        Type | uint8 
        Direction | IN 
        Comment | Priority of the Request PG.
        Variation 
        checkTimeoutAppSendRequest.SendRequest.checkTimeout 
        Type | boolean 
        Direction | IN 
        Comment | TRUE: Timeout supervision will be performed FALSE: No timeout supervision will be 
        started 
        Variation 
        Possible Errors | AppSendRequest.E_OKAppSendRequest.E_NOT_OK 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00105</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name | AppCancelRequestTimeoutAppCancelRequestTimeout 
        Comment 
        IsService | true 
        Variation | {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportTimeoutSupervision)} == true 
        Possible Errors | 0 | E_OKAppCancelRequestTimeout.E_OK | Operation successful 
        1 | E_NOT_OKAppCancelRequestTimeout.E_NOT_OK | Operation failed 
        Operation | CancelRequestTimeoutAppCancelRequestTimeout.CancelRequestTimeout 
        Comment | Cancels timeout monitoring of a request. If the request is not active, or timeout 
        monitoring was not requested, this call has no effect.
        Variation 
        Parameters | channelAppCancelRequestTimeout.CancelRequestTimeout.channel 
        Type | NetworkHandleType 
        Direction | IN 
        Comment | Channel on which the request was sent.
        Variation 
        requestedPgnAppCancelRequestTimeout.CancelRequestTimeout.requestedPgn 
        Type | uint32 
        Direction | IN 
        Comment | PGN of the requested PG.
        Variation 
        extIdInfoAppCancelRequestTimeout.CancelRequestTimeout.extIdInfo 
        Type | J1939Rm_ExtIdInfoType 
        Direction | IN 
        Comment 
        Variation 
        destAddressAppCancelRequestTimeout.CancelRequestTimeout.destAddress 
        Type | uint8 
        Direction | IN 
        Comment | Address of the destination node or 0xFF for broadcast.
        Variation 
        Possible Errors | AppCancelRequestTimeout.E_OKAppCancelRequestTimeout.E_NOT_OK 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00106</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name | AppAckIndicationAppAckIndication 
        Comment 
        IsService | true 
        Variation | {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportAckIndication)} == true 
        Possible Errors | 0 | E_OKAppAckIndication.E_OK | Operation successful 
        1 | E_NOT_OKAppAckIndication.E_NOT_OK | Operation failed 
        Operation | AckIndicationAppAckIndication.AckIndication 
        Comment | Indicates reception of an Acknowledgement PG.
        Variation 
        Parameters | nodeAppAckIndication.AckIndication.node 
        Type | uint8 
        Direction | IN 
        Comment | Node by which the acknowledgement was received.
        Variation 
        channelAppAckIndication.AckIndication.channel 
        Type | NetworkHandleType 
        Direction | IN 
        Comment | Channel on which the acknowledgement was received.
        Variation 
        ackPgnAppAckIndication.AckIndication.ackPgn 
        Type | uint32 
        Direction | IN 
        Comment | Acknowledged PGN.
        Variation 
        extIdInfoAppAckIndication.AckIndication.extIdInfo 
        Type | J1939Rm_ExtIdInfoType 
        Direction | IN 
        Comment | Extended identifier bytes.
        Variation 
        ackCodeAppAckIndication.AckIndication.ackCode 
        Type | J1939Rm_AckCode 
        Direction | IN 
        Comment | Type of acknowledgement, see definition of J1939Rm_AckCode for available codes.
        Variation 
        ackAddressAppAckIndication.AckIndication.ackAddress 
        Type | uint8 
        Direction | IN 
        Comment | Address of this node.
        Variation 
        sourceAddressAppAckIndication.AckIndication.sourceAddress 
        Type | uint8 
        Direction | IN 
        Comment | Address of the node that sent the Acknowledgement PG.
        Variation 
        priorityAppAckIndication.AckIndication.priority 
        Type | uint8 
        Direction | IN 
        Comment | Priority of the Acknowledgement PG.
        Variation 
        Possible Errors | AppAckIndication.E_OKAppAckIndication.E_NOT_OK 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00107</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name | AppRequestIndicationAppRequestIndication 
        Comment 
        IsService | true 
        Variation | {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportRequestIndication)} == true 
        Possible Errors | 0 | E_OKAppRequestIndication.E_OK | Operation successful 
        1 | E_NOT_OKAppRequestIndication.E_NOT_OK | Operation failed 
        Operation | RequestIndicationAppRequestIndication.RequestIndication 
        Comment | Indicates reception of a Request or Request2 PG.
        Variation 
        Parameters | nodeAppRequestIndication.RequestIndication.node 
        Type | uint8 
        Direction | IN 
        Comment | Node by which the request was received.
        Variation 
        channelAppRequestIndication.RequestIndication.channel 
        Type | NetworkHandleType 
        Direction | IN 
        Comment | Channel on which the request was received.
        Variation 
        requestedPgnAppRequestIndication.RequestIndication.requestedPgn 
        Type | uint32 
        Direction | IN 
        Comment | PGN of the requested PG.
        Variation 
        extIdInfoAppRequestIndication.RequestIndication.extIdInfo 
        Type | J1939Rm_ExtIdInfoType 
        Direction | IN 
        Comment | Extended identifier bytes.
        Variation 
        sourceAddressAppRequestIndication.RequestIndication.sourceAddress 
        Type | uint8 
        Direction | IN 
        Comment | Address of the node that sent the Request PG.
        Variation 
        destAddressAppRequestIndication.RequestIndication.destAddress 
        Type | uint8 
        Direction | IN 
        Comment | Address of this node or 0xFF for broadcast.
        Variation 
        priorityAppRequestIndication.RequestIndication.priority 
        Type | uint8 
        Direction | IN 
        Comment | Priority of the Request PG.
        Variation 
        Possible Errors | AppRequestIndication.E_OKAppRequestIndication.E_NOT_OK 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00108</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        Name | AppRequestTimeoutIndicationAppRequestTimeoutIndication 
        Comment 
        IsService | true 
        Variation | {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportTimeoutSupervision)} == true 
        Possible Errors | 0 | E_OKAppRequestTimeoutIndication.E_OK | Operation successful 
        1 | E_NOT_OKAppRequestTimeoutIndication.E_NOT_OK | Operation failed 
        Operation | RequestTimeoutIndicationAppRequestTimeoutIndication.RequestTimeoutIndication 
        Comment | Indicates timeout of a request triggered with the same parameters.
        Variation 
        Parameters | nodeAppRequestTimeoutIndication.RequestTimeoutIndication.node 
        Type | uint8 
        Direction | IN 
        Comment | Node by which the request was sent.
        Variation 
        channelAppRequestTimeoutIndication.RequestTimeoutIndication.channel 
        Type | NetworkHandleType 
        Direction | IN 
        Comment | Channel on which the request was sent.
        Variation 
        requestedPgnAppRequestTimeoutIndication.RequestTimeoutIndication.requestedPgn 
        Type | uint32 
        Direction | IN 
        Comment | PGN of the requested PG.
        Variation 
        extIdInfoAppRequestTimeoutIndication.RequestTimeoutIndication.extIdInfo 
        Type | J1939Rm_ExtIdInfoType 
        Direction | IN 
        Comment | Extended identifier bytes.
        Variation 
        destAddressAppRequestTimeoutIndication.RequestTimeoutIndication.destAddress 
        Type | uint8 
        Direction | IN 
        Comment | Address of the destination node or 0xFF for broadcast.
        Variation 
        Possible Errors | AppRequestTimeoutIndication.E_OKAppRequestTimeoutIndication.E_NOT_OK 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00111</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        J1939Rm shall include the header file J1939Nm.h if at least one J1939RmNmUser is configured.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Cfg.h_16</srcid><srcstatus/><internalId>363</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00112</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        J1939Rm shall include the header file J1939Dcm.h if at least one J1939RmDcmUser is configured.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Cfg.h_22</srcid><srcstatus/><internalId>364</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00113</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        J1939Rm shall include a header file named &lt;apiServicePrefix&gt;_Cbk.h for every configured 
        J1939RmCddUser.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.RmUserConfigurations</srcid><srcstatus/><internalId>357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmComIPduRef
        Parameter Type: Reference
        Parent Containers: J1939RmComIPdu,
        Description: Reference to the Pdu object representing the I-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.RmUserConfigurations</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>dev.RequestHandllingCOM</srcid><srcstatus/><internalId>358</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00114</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        J1939Rm shall include the header file Com.h if at least one J1939RmComUser is configured.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.RmUserConfigurations</srcid><srcstatus/><internalId>357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00115</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request, and 
        the requested PGN is configured via J1939RmComIPduPGN to be handled via COM, and when the 
        extended identifier bytes of an RQST2 match the multiplexor values of a multiplexed message, 
        the J1939 Request Manager shall prepare the MetaData from the given information and provide it 
        to COM via Com_TriggerIPDUSendWithMetaData together with the PduId of the transmitted COM I-PDU 
        referenced by J1939RmComIPduRef.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.RmUserConfigurations</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>dev.RequestHandllingCOM</srcid><srcstatus/><internalId>358</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00066</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmCddUser
        Container Type: Choice-Container
        Parent Containers: J1939RmUser,
        Description: J1939Rm User representing a complex driver (CDD). CDDs may use all services 
        provided by J1939Rm.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Post-Build-Variant-Multiplicity: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_497</srcid><srcstatus/><internalId>624</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00067</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmComUser
        Container Type: Choice-Container
        Parent Containers: J1939RmUser,
        Sub-Containers: J1939RmComIPdu 
        Description: J1939Rm User representing AUTOSAR COM. Supports requests for COM I-PDUs.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Post-Build-Variant-Multiplicity: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.RmUserConfigurations</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>dev.RequestHandllingCOM</srcid><srcstatus/><internalId>358</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00068</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmDcmUser
        Container Type: Choice-Container
        Parent Containers: J1939RmUser,
        Description: J1939Rm User representing the J1939Dcm. Requires request indication and 
        transmission of acknowledgement.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Post-Build-Variant-Multiplicity: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_953</srcid><srcstatus/><internalId>645</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRteUser
        Container Type: Choice-Container
        Parent Containers: J1939RmUser,
        Description: J1939Rm User representing an application software component (SW-C). SW-Cs may use 
        all services provided by the J1939Rm via service ports.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Post-Build-Variant-Multiplicity: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1032</srcid><srcstatus/><internalId>649</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00070</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmUserRequestPGN
        Parameter Type: Integer
        Parent Containers: J1939RmDcmUser,
        Description: PGN of DMx PG supported by J1939Dcm.
        Lower Multiplicity: 0
        infinite
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: true
        Post-Build-Variant-Value: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 262143 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_978</srcid><srcstatus/><internalId>647</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmNmUser
        Container Type: Choice-Container
        Parent Containers: J1939RmUser,
        Description: J1939Rm User representing the J1939Nm. Requires request indication.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Post-Build-Variant-Multiplicity: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_1002</srcid><srcstatus/><internalId>648</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00072</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmUserId
        Parameter Type: Integer
        Parent Containers: J1939RmDcmUser,
        Description: Identifier used by J1939Dcm when calling J1939Rm_SendAck.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_962</srcid><srcstatus/><internalId>646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00073</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmSupportRequest2
        Parameter Type: Boolean
        Parent Containers: J1939RmGeneral,
        Description: Pre-processor switch for enabling support of the Request2 PG.
        Introduction: Please note: Transfer is not supported.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00074</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRequestQueue2Size
        Parameter Type: Integer
        Parent Containers: J1939RmChannel,
        Description: Number of transmitted Request2 messages that can be stored.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 255 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00075</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRqst2RxPdu
        Container Type: Sub-Container
        Parent Containers: J1939RmChannel,
        Description: Contains the configuration of the I-PDU used to receive the Request2 PG. This PDU 
        consumes a meta data item of type CAN_ID_32.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00076</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRqst2TxPdu
        Container Type: Sub-Container
        Parent Containers: J1939RmChannel,
        Description: Contains the configuration of the I-PDU used to transmit the Request2 PG. This PDU 
        produces a meta data item of type CAN_ID_32.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00077</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRqst2RxPduRef
        Parameter Type: Reference
        Parent Containers: J1939RmRqst2RxPdu,
        Description: Reference to the Pdu object representing the I-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00078</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRqst2RxPduId
        Parameter Type: Integer
        Parent Containers: J1939RmRqst2RxPdu,
        Description: The I-PDU identifier used for RxIndication from PduR.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00079</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRqst2TxPduRef
        Parameter Type: Reference
        Parent Containers: J1939RmRqst2TxPdu,
        Description: Reference to the Pdu object representing the I-PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00080</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmRqst2TxPduId
        Parameter Type: Integer
        Parent Containers: J1939RmRqst2TxPdu,
        Description: The I-PDU identifier used for TxConfirmation from PduR.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00081</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmComIPduExtId1
        Parameter Type: Integer
        Parent Containers: J1939RmComIPdu,
        Description: First extended identifier byte of the COM I-PDU.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: true
        Post-Build-Variant-Value: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 255 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00082</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmComIPduExtId2
        Parameter Type: Integer
        Parent Containers: J1939RmComIPdu,
        Description: Second extended identifier byte of the COM I-PDU.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: true
        Post-Build-Variant-Value: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 255 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00083</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmComIPduExtId3
        Parameter Type: Integer
        Parent Containers: J1939RmComIPdu,
        Description: Third extended identifier byte of the COM I-PDU.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: true
        Post-Build-Variant-Value: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 255 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00116</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request, and 
        the requested PGN is AddressClaimed (AC, 0xEE00), the J1939 Request Manager shall call 
        J1939Nm_RequestIndication.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_958</srcid><srcstatus/><internalId>433</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_AC</srcid><srcstatus/><internalId>772</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00117</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When no extended identifier bytes are provided with J1939Rm_SendRequest, J1939Rm shall send an 
        RQST PG. When one or more extended identifier bytes are provided, an RQST2 PG shall be sent.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00118</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Transmission requests for the Request2 PG shall be queued when a previous transmission of this 
        PG is still pending. The size of this queue is determined by J1939RmRequest2QueueSize.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00119</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Meta data items of type CAN_ID_32 contain the source address in the fourth (least significant) 
        byte.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_552</srcid><srcstatus/><internalId>411</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00120</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Meta data items of type CAN_ID_32 contain the destination address in the third byte.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_552</srcid><srcstatus/><internalId>411</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00121</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Meta data items of type CAN_ID_32 contain the priority in the bits 2-4 of the first (most 
        significant) byte, where bit 0 is the least significant bit of a byte.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_552</srcid><srcstatus/><internalId>411</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00122</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The J1939 Request Manager shall use a meta data item of type CAN_ID_32 to determine the source 
        address, destination address, and priority of received Request PGs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_874</srcid><srcstatus/><internalId>423</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_AC</srcid><srcstatus/><internalId>772</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00123</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The J1939 Request Manager shall use a meta data item of type CAN_ID_32 to provide the source 
        address and priority of transmitted Acknowledgement PGs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3702</srcid><srcstatus/><internalId>593</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RTE_SendAck_1</srcid><srcstatus/><internalId>748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The J1939 Request Manager shall use a meta data item of type CAN_ID_32 to provide the source 
        address, destination address, and priority of transmitted Request PGs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2702</srcid><srcstatus/><internalId>504</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST</srcid><srcstatus/><internalId>831</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00125</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The J1939 Request Manager shall use a meta data item of type CAN_ID_32 to determine the source 
        address and priority of received Acknowledgement PGs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_682</srcid><srcstatus/><internalId>414</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_AC</srcid><srcstatus/><internalId>772</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_91000</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | J1939Rm_ExtIdType 
        Kind | Enumeration 
        Range | J1939RM_EXTID_NONE | 0x00 | No extended identifier bytes (0)
        J1939RM_EXTID_ONE | 0x01 | One extended identifier byte (1)
        J1939RM_EXTID_TWO | 0x02 | Two extended identifier bytes (2)
        J1939RM_EXTID_THREE | 0x03 | Three extended identifier bytes (3)
        J1939RM_EXTID_GF | 0x04 | Group function value, only for ACKM (4)
        Description | This type represents the available kinds of extended identifier usage.
        Variation 
        Available via | Rte_J1939Rm_Type.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_91001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | J1939Rm_ExtIdInfoType 
        Kind | Structure 
        Elements | extIdType 
        Type | J1939Rm_ExtIdType 
        Comment | Denotes the number of extended identifier bytes.
        extId1 
        Type | uint8 
        Comment | First extended identifier byte or group function for ACKM.
        extId2 
        Type | uint8 
        Comment | Second extended identifier byte.
        extId3 
        Type | uint8 
        Comment | Third extended identifier byte.
        Description | This type represents a set of extended identifiers.
        Variation 
        Available via | Rte_J1939Rm_Type.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00126</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When an acknowledgement is sent, it shall also be handled internally as if it was received via 
        J1939Rm_RxIndication.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.SWS_J1939Rm_00126</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00084</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: J1939RmGatewaySupport
        Parameter Type: Boolean
        Parent Containers: J1939RmGeneral,
        Description: Enables/disables support for routing Request and Acknowledgement messages.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.ECUC_J1939Rm_00084</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00127</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If J1939RmGatewaySupport is enabled, and a J1939RmChannel is linked to another J1939RmChannel 
        via a J1939NmSharedAddressSpace: All Request, Request2, and Acknowledgement messages that are 
        received on the first J1939RmChannel shall be forwarded to the second J1939RmChannel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00128</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If J1939RmGatewaySupport is enabled, and a J1939RmChannel is referenced by another 
        J1939RmChannel via a J1939NmExternalNodeGatewayedChannelRef: All Request, Request2, and 
        Acknowledgement messages that are received on the first J1939Rm shall be forwarded to the 
        second J1939RmChannel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>
    <specobject>
      <id>J1939Rm.SWS_J1939Rm_00129</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Request and Request2 messages shall only be forwarded if the destination address of the message 
        is the global address (0xFF) or a destination address that does not correspond to any 
        J1939NmNodePreferredAddress referenced by a J1939RmNode that references the J1939RmChannel on 
        which the message was received.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>2</version>
      <description>
        See"J1939Rm_x_Container_x_J1939RmCddUser_x_Parameter_x_J1939RmUserCddRef"
        Name | J1939RmUserCddRefJ1939RmCddUser.J1939RmUserCddRef 
        Parent Container | J1939RmCddUser 
        Description | Reference to the CDD module description.
        Multiplicity | 1 
        Type | Foreign reference to [ ECUC-MODULE-CONFIGURATION-VALUES 
        Post-Build Variant Value | false 
        Value Configuration Class | Pre-compile time | X | All Variants 
        Link time 
        Post-build time 
        Scope / Dependency | scope: local 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_638</srcid><srcstatus/><internalId>632</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>
    <specobject>
      <id>J1939Rm.ECUC_J1939Rm_00043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_J1939Rm_R20-11.arxml</source>
      <version>1</version>
      <description>
        See"J1939Rm_x_Module"
        Module Name | J1939RmJ1939Rm 
        Module Description | Configuration of the J1939 Request Manager.
        Post-Build Variant Support | true 
        Supported Config Variants | VARIANT-LINK-TIME, VARIANT-POST-BUILD, VARIANT-PRE-COMPILE 
        Included containers: "J1939Rm_x_Included_Containers"
        Included Containers 
        Container Name | Multiplicity | Scope / Dependency 
        J1939RmConfigSet | 1 | This container contains the configuration parameters and sub containers 
        of the AUTOSAR J1939Rm module.
        J1939RmGeneral | 1 | Contains the general configuration parameters of the module.
      </description>
	  <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
        aspect is checked in many places in the sources and also in some test configurations,
        due to the highly important nature of this topic resulting in surpassing the count limit.
	  </furtherinfo>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_236</srcid><srcstatus/><internalId>405</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_50</srcid><srcstatus/><internalId>596</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_PBSELECTABLE</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_CHECK_INIT_WRONG_PLATFORM_SIG</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_CHECK_INIT_WRONG_LCFG_SIG</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_CHECK_INIT_WRONG_CFG_SIG</srcid><srcstatus/><internalId>732</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_CHECK_INIT_WRONG_PUBLIC_SIG</srcid><srcstatus/><internalId>733</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_CHECK_INIT_INIT_NULL_PTR</srcid><srcstatus/><internalId>734</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_CHECK_PBCFG_INIT_1</srcid><srcstatus/><internalId>735</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_CHECK_PBCFG_INIT_2</srcid><srcstatus/><internalId>736</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_CHECK_PBCFG_INIT_3</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_CHECK_PBCFG_INIT_4</srcid><srcstatus/><internalId>738</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_NO_DEV_NULL_PTR</srcid><srcstatus/><internalId>739</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00012.InternalVariables</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				A call to J1939Rm_Init initializes all internal variables.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1822</srcid><srcstatus/><internalId>441</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00012</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00012.InitializedState</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				A call to J1939Rm_Init sets the J1939 Request Manager to the initialized state.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1897</srcid><srcstatus/><internalId>444</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_CHECK_INIT_multiple_Initialization</srcid><srcstatus/><internalId>729</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00012</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>
		<specobject>
			<id>EB_Ref.ECUC_J1939Rm_00009.TxRxRequest</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
		        Name: J1939RmChannel
		        Container Type: Sub-Container
		        Parent Containers: J1939RmConfigSet,
		        Sub-Containers: J1939RmAckmRxPdu J1939RmAckmTxPdu J1939RmRqstRxPdu J1939RmRqstTxPdu 
		        Description: Contains the parameters for a CAN channel supported by the J1939 Request Manager.
		        Lower Multiplicity: 1
		        infinite
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm.xdm.m4_71</srcid><srcstatus/><internalId>598</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ECUC_J1939Rm_00009</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>
		<specobject>
			<id>EB_Ref.ECUC_J1939Rm_00009.TxRxRequest2</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
		        Name: J1939RmUser
		        Container Type: Choice-Container
		        Parent Containers: J1939RmNode,
		        Choices: J1939RmCddUser J1939RmComUser J1939RmDcmUser J1939RmNmUser J1939RmRteUser 
		        Description: Contains the configuration of a module that uses the request and acknowledgement 
		        interfaces of J1939Rm.
		        Lower Multiplicity: 1
		        infinite
		        Post-Build-Variant-Multiplicity: true
		        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
		        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
		        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ECUC_J1939Rm_00009</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00008.RequestedPGN_NotConfigured</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
		        When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request, and 
		        the requested PGN or the requested extended identifier bytes are not configured, and the 
		        destination address is not the broadcast address, the J1939 Request Manager shall call 
		        PduR_J1939RmTransmit to send a negative acknowledgement (NACK)
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_977</srcid><srcstatus/><internalId>435</internalId></linkedfrom></coveredby></needscov>
        		<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Request_for_Unknown_PGN_With_Specific_DA</srcid><srcstatus/><internalId>782</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Request_for_Unknown_PGN_With_Global_DA</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00008</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00008.ExtendedIdentiferBytes</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
		        When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request, and 
		        the requested PGN or the requested extended identifier bytes are not configured, and the 
		        destination address is not the broadcast address, the J1939 Request Manager shall call 
		        PduR_J1939RmTransmit to send a negative acknowledgement (NACK)
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00008</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00010.J1939Rm_DeInit</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect,
				the J1939 Request Manager shall call Det_ReportError with the error code J1939RM_E_UNINIT when 
				J1939Rm_DeInit is called in uninitialized state.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_CHECK_DEINIT_before_Initialization</srcid><srcstatus/><internalId>722</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1932</srcid><srcstatus/><internalId>447</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00010</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00010.J1939Rm_SetState</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect,
				the J1939 Request Manager shall call Det_ReportError with the error code J1939RM_E_UNINIT when 
				J1939Rm_SetState is called in uninitialized state.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SET_STATE_before_Initialization</srcid><srcstatus/><internalId>843</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2069</srcid><srcstatus/><internalId>457</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00010</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00010.J1939Rm_Transmit</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect,
				the J1939 Request Manager shall call Det_ReportError with the error code J1939RM_E_UNINIT when 
				J1939Rm_Transmit is called in uninitialized state.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_TRANSMIT_before_Initialization</srcid><srcstatus/><internalId>851</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2613</srcid><srcstatus/><internalId>501</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00010</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00010.J1939Rm_SendRequest</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect,
				the J1939 Request Manager shall call Det_ReportError with the error code J1939RM_E_UNINIT when 
				J1939Rm_SendRequest is called in uninitialized state.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_DET_ON_Module_Uninit</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2977</srcid><srcstatus/><internalId>532</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00010</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00010.J1939Rm_CancelRequestTimeout</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect,
				the J1939 Request Manager shall call Det_ReportError with the error code J1939RM_E_UNINIT when 
				J1939Rm_CancelRequestTimeout is called in uninitialized state.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_CancelRequestTimeout_before_Initialization</srcid><srcstatus/><internalId>709</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3016</srcid><srcstatus/><internalId>536</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00010</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00010.J1939Rm_SendAck</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect,
				the J1939 Request Manager shall call Det_ReportError with the error code J1939RM_E_UNINIT when 
				J1939Rm_SendAck is called in uninitialized state.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_before_Initialization</srcid><srcstatus/><internalId>811</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3240</srcid><srcstatus/><internalId>555</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00010</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00010.J1939Rm_RxIndication</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect,
				the J1939 Request Manager shall call Det_ReportError with the error code J1939RM_E_UNINIT when 
				J1939Rm_RxIndication is called in uninitialized state.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_before_Initialization</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2095</srcid><srcstatus/><internalId>460</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00010</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00010.J1939Rm_TxConfirmation</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect,
				the J1939 Request Manager shall call Det_ReportError with the error code J1939RM_E_UNINIT when 
				J1939Rm_TxConfirmation is called in uninitialized state.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Rm_TxConfirmation_before_Initialization</srcid><srcstatus/><internalId>854</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2261</srcid><srcstatus/><internalId>477</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00010</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00010.J1939Rm_CopyTxData</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect,
				the J1939 Request Manager shall call Det_ReportError with the error code J1939RM_E_UNINIT when 
				J1939Rm_CopyTxData is called in uninitialized state.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_COPY_TX_DATA_before_Inialization</srcid><srcstatus/><internalId>718</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2297</srcid><srcstatus/><internalId>481</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00010</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00010.J1939Rm_TpTxConfirmation</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect,
				the J1939 Request Manager shall call Det_ReportError with the error code J1939RM_E_UNINIT when 
				J1939Rm_TpTxConfirmation is called in uninitialized state.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Rm_TpTxConfirmation_before_Initialization</srcid><srcstatus/><internalId>849</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2443</srcid><srcstatus/><internalId>493</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00010</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00010.J1939Rm_ComRxIpduCallout</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect,
				the J1939 Request Manager shall call Det_ReportError with the error code J1939RM_E_UNINIT when 
				J1939Rm_ComRxIpduCallout is called in uninitialized state.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Rm_ComRxIpduCallout_before_Initialization</srcid><srcstatus/><internalId>715</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2587</srcid><srcstatus/><internalId>498</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00010</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00010.J1939Rm_MainFunction</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect,
				the J1939 Request Manager shall call Det_ReportError with the error code J1939RM_E_UNINIT when 
				J1939Rm_MainFunction is called in uninitialized state.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_MAINFUNCTION</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3264</srcid><srcstatus/><internalId>558</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00010</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00007.global_DA</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall accept requests addressed to the whole network (global DA).
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_ComUser_Normal_Pdu_Global_DA</srcid><srcstatus/><internalId>762</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Request_Reception_ComUser_Tp_Pdu_Global_DA</srcid><srcstatus/><internalId>763</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_TpTxConfirmation_Called_twice</srcid><srcstatus/><internalId>767</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_AC_Global_DA</srcid><srcstatus/><internalId>777</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_AC_OFFLINE_Global_DA</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Global_address_UserJ1939Dcm</srcid><srcstatus/><internalId>787</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_446</srcid><srcstatus/><internalId>410</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00007</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00007.configured_addresses</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall accept requests addressed to one of the configured addresses of the ECU.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_AC_Not_configured_Node</srcid><srcstatus/><internalId>776</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Not_configured_Node_UserJ1939Dcm</srcid><srcstatus/><internalId>786</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_389</srcid><srcstatus/><internalId>408</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00007</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00002.J1939Nm</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request,
				and the requested PGN is configured via J1939RmUserPGN to trigger either J1939 Network Management module,
				the J1939 Request Manager shall call the J1939Nm_RequestIndication.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_AC</srcid><srcstatus/><internalId>772</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Channel_Not_Configured_For_Node</srcid><srcstatus/><internalId>773</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_AC_CH2</srcid><srcstatus/><internalId>774</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_INVALID_ID</srcid><srcstatus/><internalId>802</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/J1939Rm_Cfg.c_113</srcid><srcstatus/><internalId>395</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_954</srcid><srcstatus/><internalId>429</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00002</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00002.J1939Dcm</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request,
				and the requested PGN is configured via J1939RmUserPGN to trigger the J1939 Diagnostic Communication Manager,
				the J1939 Request Manager shall call the J1939Dcm_RequestIndication.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_specific_destination_address_UserJ1939Dcm</srcid><srcstatus/><internalId>784</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Global_address_UserJ1939Dcm</srcid><srcstatus/><internalId>787</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/J1939Rm_Cfg.c_108</srcid><srcstatus/><internalId>393</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_955</srcid><srcstatus/><internalId>430</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00002</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00002.CDD</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request,
				and the requested PGN is configured via J1939RmUserPGN to trigger a CDD,
				the J1939 Request Manager shall call the J1939RmUserCddName_RequestIndication.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_CDD_User</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/J1939Rm_Cfg.c_118</srcid><srcstatus/><internalId>397</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_956</srcid><srcstatus/><internalId>431</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00002</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00006.Set_DA</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When J1939Rm_Transmit is called by the PDU Router,
				the J1939 Request Manager shall set the destination address according to the saved source address and request type.
				the source address according to the node.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_For_ComUser_Tp_Pdu</srcid><srcstatus/><internalId>717</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2705</srcid><srcstatus/><internalId>505</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2724</srcid><srcstatus/><internalId>510</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00006</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00006.Set_SA</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When J1939Rm_Transmit is called by the PDU Router,
				the J1939 Request Manager shall set the source address according to the node.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_For_ComUser_Tp_Pdu</srcid><srcstatus/><internalId>717</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2706</srcid><srcstatus/><internalId>506</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2722</srcid><srcstatus/><internalId>509</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00006</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00006.PduR_J1939RmTransmit.Interface_Path</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When J1939Rm_Transmit is called by the PDU Router,
				the J1939 Request Manager shall  forward the PG to PduR_J1939RmTransmit.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2710</srcid><srcstatus/><internalId>508</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_ComUser_Normal_Pdu</srcid><srcstatus/><internalId>757</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_Request_Reception_For_Two_ComUser_Normal_Pdu</srcid><srcstatus/><internalId>769</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00006</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00006.PduR_J1939RmTransmit.Tp_Path</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When J1939Rm_Transmit is called by the PDU Router,
				the J1939 Request Manager shall  forward the PG to PduR_J1939RmTransmit.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>uncovered</objcovstatus><coveredby/></needscov>
			<containerCovstatus>uncovered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00006</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linkerror</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror>source not covered.</linkerror><internalId>18</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>uncovered</covstatus><internalId>248</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00006.PduR_J1939RmTransmit.PduId</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When J1939Rm_Transmit is called by the PDU Router,
				the J1939 Request Manager shall  forward the PG to PduR_J1939RmTransmit,
				using the PduId of the PduR source I-PDU referenced by J1939RmLowerComIPdu.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2709</srcid><srcstatus/><internalId>507</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2738</srcid><srcstatus/><internalId>512</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_For_ComUser_Tp_Pdu</srcid><srcstatus/><internalId>717</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00006</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>	
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00009.BSW_CDD</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When a BSW module, or a CDD calls J1939Rm_SendAck,
				the J1939 Request Manager shall call PduR_J1939RmTransmit to send the required acknowledgement.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3630</srcid><srcstatus/><internalId>584</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT</srcid><srcstatus/><internalId>803</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_E_NOT_OK_TxReturn</srcid><srcstatus/><internalId>814</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00009</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00009.RTE</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When an SW-C (via service port and RTE) calls J1939Rm_SendAck,
				the J1939 Request Manager shall call PduR_J1939RmTransmit to send the required acknowledgement.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3631</srcid><srcstatus/><internalId>585</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RTE_SendAck_1</srcid><srcstatus/><internalId>748</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00009</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00018.queueing_Ack_PG</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Transmission requests for the Acknowledgement PG shall be queued when a previous transmission of this PG is still pending.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3162</srcid><srcstatus/><internalId>547</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_ACKM_Queue_Overflow</srcid><srcstatus/><internalId>741</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT</srcid><srcstatus/><internalId>803</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00018</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00018.J1939RmAckQueueSize</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The size of Acknowledgement PG queue is determined by J1939RmAckQueueSize.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/J1939Rm.xgen_422</srcid><srcstatus/><internalId>682</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_Full_Queue</srcid><srcstatus/><internalId>812</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00018</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00016.BSW_CDD</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When a BSW module, or a CDD calls J1939Rm_SendRequest,
				the J1939 Request Manager shall call PduR_J1939RmTransmit to send the request.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3633</srcid><srcstatus/><internalId>586</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_twoChannels</srcid><srcstatus/><internalId>832</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_E_NOT_OK_TxReturn</srcid><srcstatus/><internalId>835</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00016</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00016.RTE</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When an SW-C (via service port and RTE) calls J1939Rm_SendRequest,
				the J1939 Request Manager shall call PduR_J1939RmTransmit to send the request.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3634</srcid><srcstatus/><internalId>587</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RTE_SendRequest_1</srcid><srcstatus/><internalId>749</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RTE_SendRequest_Compile</srcid><srcstatus/><internalId>750</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00016</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00021.queueing_Rqst_PG</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Transmission requests for the Request PG shall be queued when a previous transmission of this PG is still pending.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2947</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_twoChannels</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00021</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00021.J1939RmRequestQueueSize</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The size of this queue is determined by J1939RmRequestQueueSize.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/J1939Rm.xgen_424</srcid><srcstatus/><internalId>683</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_Full_Queue</srcid><srcstatus/><internalId>834</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_Queue_Overflow</srcid><srcstatus/><internalId>836</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00021</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00024.SendRequest</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When J1939Rm_SendRequest is called with the parameter checkTimeout set to TRUE and a 
		        destination address that is not the broadcast address (0xff), and timeout handling is enabled 
		        for the caller via J1939RmUserTimeoutSupervision: The J1939 Request Manager shall store (
		        separately for each node) the calling module's user ID, the PGN, the source address, and the 
		        destination address of the request.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1159</srcid><srcstatus/><internalId>437</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2946</srcid><srcstatus/><internalId>529</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3331</srcid><srcstatus/><internalId>565</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RTE_TimeoutSupervision_2</srcid><srcstatus/><internalId>752</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00024</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00024.ExtendedIdentiferBytes</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
		        When J1939Rm_SendRequest is called with the parameter checkTimeout set to TRUE and a 
		        destination address that is not the broadcast address (0xff), and timeout handling is enabled 
		        for the caller via J1939RmUserTimeoutSupervision: The J1939 Request Manager shall store (
		        separately for each node) the calling module's user ID, the PGN, extended identifier bytes, the 
		        source address, and the destination address of the request.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00024</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00066.CDD</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When J1939Rm_RxIndication is called by the PDU Router to indicate reception of an acknowledgement
				which matches a pending request (acknowledged PGN, source address, acknowledged address),
				the J1939 Request Manager shall call the User_AckIndication.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_759</srcid><srcstatus/><internalId>417</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_for_configured_UserAckPGN</srcid><srcstatus/><internalId>788</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_for_Request_stored_in_TSVQueue</srcid><srcstatus/><internalId>793</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_TSV_different_order</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_TSV_same_order</srcid><srcstatus/><internalId>799</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00066</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00066.RTE</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When J1939Rm_RxIndication is called by the PDU Router to indicate reception of an acknowledgement
				which matches a pending request (acknowledged PGN, source address, acknowledged address),
				the J1939 Request Manager shall call the service port function corresponding to the stored user ID.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_760</srcid><srcstatus/><internalId>418</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_ACKINDICATION_RTE_1</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00066</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00029.Acknowledgement_Received</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				When an acknowledgement matching the request is received,
				the timeout supervision of the request is stopped.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_751</srcid><srcstatus/><internalId>416</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_for_Request_stored_in_TSVQueue</srcid><srcstatus/><internalId>793</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_TSV_different_order</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_TSV_same_order</srcid><srcstatus/><internalId>799</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00029</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00029.COM_RxIPduCallout</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				when a configured COM RxIPduCallout is triggered which matches the request,
				the timeout supervision of the request is stopped.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2563</srcid><srcstatus/><internalId>496</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_ComIpduCallout</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_TimeoutSupervision</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_TimeoutSupervision2</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_TimeoutSupervision3</srcid><srcstatus/><internalId>829</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00029</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00029.J1939Rm_CancelRequestTimeout</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				when a CDD or an application SW-C calls J1939Rm_CancelRequestTimeout,
				the timeout supervision of the request is stopped.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3051</srcid><srcstatus/><internalId>539</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RTE_TimeoutSupervision_2</srcid><srcstatus/><internalId>752</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_CancelRequestTimeOut_DA</srcid><srcstatus/><internalId>824</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_CancelRequestTimeOut_global_DA</srcid><srcstatus/><internalId>825</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00029</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00031.INVALID_EXTID</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				An API was called with invalid extended identifier bytes | J1939RM_E_INVALID_EXTID_INFOJ1939Rm.
        		J1939RM_E_INVALID_EXTID_INFO | 0x1b
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00031</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_UNINIT</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Type or error        Related error code               Value[hex]
				An API was called    J1939RM_E_UNINIT                 0x01
				while the module
				was uninitialized
			</description>
	    <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
          aspect is checked in many places in the sources and also in some test configurations,
          as many things have the posibility of happening before the module is initialized.
	    </furtherinfo>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_128</srcid><srcstatus/><internalId>368</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_CancelRequestTimeout_before_Initialization</srcid><srcstatus/><internalId>709</internalId></linkedfrom><linkedfrom><srcid>TS_J1939Rm_ComRxIpduCallout_before_Initialization</srcid><srcstatus/><internalId>715</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_COPY_TX_DATA_before_Inialization</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_CHECK_DEINIT_before_Initialization</srcid><srcstatus/><internalId>722</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_MAINFUNCTION</srcid><srcstatus/><internalId>740</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_before_Initialization</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_before_Initialization</srcid><srcstatus/><internalId>811</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_DET_ON_Module_Uninit</srcid><srcstatus/><internalId>818</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SET_STATE_before_Initialization</srcid><srcstatus/><internalId>843</internalId></linkedfrom><linkedfrom><srcid>TS_J1939Rm_TpTxConfirmation_before_Initialization</srcid><srcstatus/><internalId>849</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_TRANSMIT_before_Initialization</srcid><srcstatus/><internalId>851</internalId></linkedfrom><linkedfrom><srcid>TS_J1939Rm_TxConfirmation_before_Initialization</srcid><srcstatus/><internalId>854</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00031</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_REINIT</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Type or error        Related error code               Value[hex]
				The Init API was      J1939RM_E_REINIT                 0x02
				called twice
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_130</srcid><srcstatus/><internalId>369</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_CHECK_INIT_multiple_Initialization</srcid><srcstatus/><internalId>729</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00031</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_PARAM_POINTER</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Type or error         Related error code               Value[hex]
				An API service        J1939RM_E_PARAM_POINTER          0x03
				was called with
				a NULL pointer
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_132</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_COPY_TX_DATA_info_NULL_PTR</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_COPY_TX_DATA_availableDataPtr_NULL_PTR</srcid><srcstatus/><internalId>720</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_TRANSMIT_with_Null_Pointer</srcid><srcstatus/><internalId>852</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00031</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_PDU_SDU_ID</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Type or error         Related error code                Value[hex]
				An API service       J1939RM_E_INVALID_PDU_SDU_ID      0x04
				was called with
				a wrong ID
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_134</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Wrong_PduId</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00031</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_NETWORK_ID</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Type or error         Related error code                Value[hex]
				An API service       J1939RM_E_INVALID_NETWORK_ID      0x05
				was called with
				wrong network
				handle
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_136</srcid><srcstatus/><internalId>372</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_Channel</srcid><srcstatus/><internalId>808</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_TRANSMIT_with_Wrong_ID</srcid><srcstatus/><internalId>853</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00031</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_STATE</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Type or error         Related error code               Value[hex]
				The API              J1939RM_E_INVALID_STATE          0x06
				J1939Rm_SetState
				was called with
				a wrong state
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_138</srcid><srcstatus/><internalId>373</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SET_STATE_With_Wrong_state</srcid><srcstatus/><internalId>844</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00031</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_USER</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Type or error         Related error code               Value[hex]
				An API was            J1939RM_E_INVALID_USER           0x07
				called with an
				illegal user ID
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_140</srcid><srcstatus/><internalId>374</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_UserId</srcid><srcstatus/><internalId>805</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_with_Wrong_Parameter</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00031</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_PGN</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Type or error         Related error code              Value[hex]
				An API was called     J1939RM_E_INVALID_PGN           0x08
				with an unknown
				or illegal PGN
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_142</srcid><srcstatus/><internalId>375</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_AckPGN</srcid><srcstatus/><internalId>810</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_with_Wrong_Parameter</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00031</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_PRIO</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Type or error         Related error code              Value[hex]
				An API was called     J1939RM_E_INVALID_PRIO           0x09
				with an illegal
				priority
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_144</srcid><srcstatus/><internalId>376</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_Priority</srcid><srcstatus/><internalId>807</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_with_Wrong_Parameter</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00031</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_ADDRESS</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Type or error         Related error code              Value[hex]
				An API was called    J1939RM_E_INVALID_ADDRESS        0x0a
				with an illegal
				node address
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2870</srcid><srcstatus/><internalId>522</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3073</srcid><srcstatus/><internalId>543</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3229</srcid><srcstatus/><internalId>554</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_INVALID_ADDRESS</srcid><srcstatus/><internalId>804</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00031</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_OPTION</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Type or error         Related error code              Value[hex]
				An API was called     J1939RM_E_INVALID_OPTION        0x0b
				with an illegal
				Boolean option
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_148</srcid><srcstatus/><internalId>377</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_with_Wrong_Parameter</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00031</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_ACK_CODE</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Type or error         Related error code              Value[hex]
				An API was called     J1939RM_E_INVALID_ACK_CODE      0x0c
				with an illegal
				AckCode
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_150</srcid><srcstatus/><internalId>378</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_AckCode</srcid><srcstatus/><internalId>809</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00031</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_NODE</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Type or error         Related error code              Value[hex]
				An API was called     J1939RM_E_INVALID_NODE           0x0d
				with an illegal
				node ID
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_152</srcid><srcstatus/><internalId>379</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SET_STATE_With_Wrong_NodeId</srcid><srcstatus/><internalId>846</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00031</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00033.J1939Rm_Transmit</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
				shall check PduIdType parameters (SDU/PDU IDs) of J1939Rm_Transmit function against the configured IDs,
				and shall report the DET error J1939RM_E_INVALID_PDU_SDU_ID when an unknown ID is provided by the call.
			</description>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2769</srcid><srcstatus/><internalId>514</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_TRANSMIT_with_Wrong_ID</srcid><srcstatus/><internalId>853</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00033</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00033.J1939Rm_RxIndication</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
				shall check PduIdType parameters (SDU/PDU IDs) of J1939Rm_RxIndication function against the configured IDs,
				and shall report the DET error J1939RM_E_INVALID_PDU_SDU_ID when an unknown ID is provided by the call.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_676</srcid><srcstatus/><internalId>413</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_861</srcid><srcstatus/><internalId>421</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_With_Wrong_PduId</srcid><srcstatus/><internalId>791</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00033</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00033.J1939Rm_TxConfirmation</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
				shall check PduIdType parameters (SDU/PDU IDs) of J1939Rm_TxConfirmation function against the configured IDs,
				and shall report the DET error J1939RM_E_INVALID_PDU_SDU_ID when an unknown ID is provided by the call.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2249</srcid><srcstatus/><internalId>475</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2255</srcid><srcstatus/><internalId>476</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_TXCONFIRMATION_BEFORE_J1939RM_TRANSMIT</srcid><srcstatus/><internalId>768</internalId></linkedfrom><linkedfrom><srcid>TS_J1939Rm_TxConfirmation_Wrong_ID</srcid><srcstatus/><internalId>855</internalId></linkedfrom><linkedfrom><srcid>TS_J1939Rm_TxConfirmation_Wrong_Confirmation</srcid><srcstatus/><internalId>856</internalId></linkedfrom><linkedfrom><srcid>TS_J1939Rm_TxConfirmation_Invalid_Pdu_ID</srcid><srcstatus/><internalId>857</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00033</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00033.J1939Rm_CopyTxData</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
				shall check PduIdType parameters (SDU/PDU IDs) of J1939Rm_CopyTxData function against the configured IDs,
				and shall report the DET error J1939RM_E_INVALID_PDU_SDU_ID when an unknown ID is provided by the call.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2348</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_COPY_TX_DATA_Wrong_ID</srcid><srcstatus/><internalId>721</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00033</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00033.J1939Rm_TpTxConfirmation</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
				shall check PduIdType parameters (SDU/PDU IDs) of J1939Rm_TpTxConfirmation function against the configured IDs,
				and shall report the DET error J1939RM_E_INVALID_PDU_SDU_ID when an unknown ID is provided by the call.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2434</srcid><srcstatus/><internalId>492</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Rm_TpTxConfirmation_Wrong_ID</srcid><srcstatus/><internalId>850</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00033</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00033.J1939Rm_ComRxIpduCallout</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
				shall check PduIdType parameters (SDU/PDU IDs) of J1939Rm_ComRxIpduCallout function against the configured IDs,
				and shall report the DET error J1939RM_E_INVALID_PDU_SDU_ID when an unknown ID is provided by the call.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2578</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Rm_ComRxIpduCallout_Unknown_ID</srcid><srcstatus/><internalId>716</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00033</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00034.J1939Rm_GetVersionInfo</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
				shall check pointer parameters of J1939Rm_GetVersionInfo, and shall report the DET error
				J1939RM_E_PARAM_POINTER when a NULL pointer is provided by the call.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1956</srcid><srcstatus/><internalId>450</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_GET_VERSION_INFO_Null_Pointer</srcid><srcstatus/><internalId>728</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00034</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00034.J1939Rm_Transmit</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
				shall check pointer parameters of J1939Rm_Transmit, and shall report the DET error
				J1939RM_E_PARAM_POINTER when a NULL pointer is provided by the call.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2620</srcid><srcstatus/><internalId>502</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_TRANSMIT_with_Null_Pointer</srcid><srcstatus/><internalId>852</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00034</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00034.J1939Rm_RxIndication</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
				shall check pointer parameter of J1939Rm_RxIndication, and shall report the DET error
				J1939RM_E_PARAM_POINTER when a NULL pointer is provided by the call.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2101</srcid><srcstatus/><internalId>461</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Null_Pointer</srcid><srcstatus/><internalId>801</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00034</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00034.J1939Rm_CopyTxData</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
				shall check pointer parameters of J1939Rm_CopyTxData, and shall report the DET error
				J1939RM_E_PARAM_POINTER when a NULL pointer is provided by the call.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2303</srcid><srcstatus/><internalId>482</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2308</srcid><srcstatus/><internalId>483</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_COPY_TX_DATA_info_NULL_PTR</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_COPY_TX_DATA_availableDataPtr_NULL_PTR</srcid><srcstatus/><internalId>720</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00034</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00034.J1939Rm_ComRxIpduCallout</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
				shall check pointer parameter of J1939Rm_ComRxIpduCallout, and shall report the DET error
				J1939RM_E_PARAM_POINTER when a NULL pointer is provided by the call.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.pointerCheck</srcid><srcstatus/><internalId>362</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00034</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00041.J1939Rm_SetState</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
				shall check NetworkHandleType parameters (network handles) of J1939Rm_SetState against the referenced network handles of ComM,
				and shall report the DET error J1939RM_E_INVALID_NETWORK_ID when an unknown handle is provided by the call.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2049</srcid><srcstatus/><internalId>455</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SET_STATE_With_Wrong_ChannelId</srcid><srcstatus/><internalId>845</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00041</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00041.J1939Rm_SendRequest</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
				shall check NetworkHandleType parameters (network handles) of J1939Rm_SendRequest against the referenced network handles of ComM,
				and shall report the DET error J1939RM_E_INVALID_NETWORK_ID when an unknown handle is provided by the call.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2828</srcid><srcstatus/><internalId>518</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_with_Wrong_Parameter</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00041</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00041.J1939Rm_CancelRequestTimeout</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
				shall check NetworkHandleType parameter (network handles) of J1939Rm_CancelRequestTimeout against the referenced network handles of ComM,
				and shall report the DET error J1939RM_E_INVALID_NETWORK_ID when an unknown handle is provided by the call.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3063</srcid><srcstatus/><internalId>541</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_CancelRequestTimeout_unknown_handle</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00041</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00041.J1939Rm_SendAck</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				If DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
				shall check NetworkHandleType parameters (network handles) of J1939Rm_SendAck against the referenced network handles of ComM,
				and shall report the DET error J1939RM_E_INVALID_NETWORK_ID when an unknown handle is provided by the call.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3218</srcid><srcstatus/><internalId>552</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_Channel</srcid><srcstatus/><internalId>808</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00041</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00040.rejection</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall reject the state change by returning E_NOT_OK when the
				'newState' is not in the valid range.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2037</srcid><srcstatus/><internalId>454</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SET_STATE_With_Wrong_state</srcid><srcstatus/><internalId>844</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00040</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00040.DET</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				when the 'newState' is not in the valid range,If DET is enabled via J1939RmDevErrorDetect,
				the DET error J1939RM_E_INVALID_STATE (see section 7.9) shall be reported.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2032</srcid><srcstatus/><internalId>453</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SET_STATE_With_Wrong_state</srcid><srcstatus/><internalId>844</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00040</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00054.ExtendedIdentifiers</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				extIdInfo | Extended identifier bytes. J1939RM_EXTID_NONE is assumed if a NULL pointer is provided
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00054</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00054.SendRequestAPI</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
		        Service name:      J1939Rm_SendRequest
		        Syntax:            Std_ReturnType      J1939Rm_SendRequest(
		        uint8   userId,
		        NetworkHandleType     channel,
		        uint32   requestedPgn,
		        uint8   destAddress,
		        uint8   priority,
		        boolean   checkTimeout
		        Service ID[hex]:   0x07
		        Sync/Async:        Synchronous
		        Reentrancy:        Reentrant
		        userId              Identification of the calling module.
		        channel             Channel on which the request shall be sent.
		        requestedPgn        PGN of the requested PG.
		        Parameters (in):   destAddress         Address of the destination node or 0xFF for broadcast.
		        priority            Priority of the Request PG.
		        checkTimeout        TRUE: Timeout supervision will be performed
		        FALSE: No timeout supervision will be started
		        Parameters         None
		        inout)
		        Parameters (out):  None
		        Return value:      Std_ReturnType      E_OK: Transmission request is accepted
		        E_NOT_OK: Transmission request is not accepted
		        Description:       Requests transmission of a Request PG.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2794</srcid><srcstatus/><internalId>517</internalId></linkedfrom></coveredby></needscov>
        		<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_twoChannels</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00054</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00055.CancelRequestTimeoutAPI</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
		        Service name:         J1939Rm_CancelRequestTimeout
		        Syntax:               void    J1939Rm_CancelRequestTimeout(
		        uint8   userId,
		        NetworkHandleType          channel,
		        uint32  requestedPgn,
		        uint8   destAddress
		        Service ID[hex]:      0x08
		        Sync/Async:           Synchronous
		        Reentrancy:           Reentrant
		        userId           Identification of the calling module.
		        Parameters (in):      channel          Channel on which the request was sent.
		        requestedPgn     PGN of the requested PG.
		        destAddress      Address of the destination node or 0xFF for broadcast.
		        Parameters            None
		        inout)
		        Parameters (out):     None
		        Return value:         None
		        Description:          Cancels timeout monitoring of a Request. If the request is not active, or 
		        timeout
		        monitoring was not requested, this call has no effect.
		        SRS_J1939_00026)
		    </description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3001</srcid><srcstatus/><internalId>535</internalId></linkedfrom></coveredby></needscov>
        		<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_CancelRequestTimeOut_DA</srcid><srcstatus/><internalId>824</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00055</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00055.ExtendedIdentifiers</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				extIdInfo | Extended identifier bytes. J1939RM_EXTID_NONE is assumed if a NULL pointer is provided
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00055</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00056.SendAckAPI</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
		        Service name:         J1939Rm_SendAck
		        Syntax:               Std_ReturnType   J1939Rm_SendAck(
		        uint8   userId,
		        NetworkHandleType          channel,
		        uint32  ackPgn,
		        J1939Rm_AckCode       ackCode,
		        uint8   ackAddress,
		        uint8   priority
		        Service ID[hex]:      0x09
		        Sync/Async:           Synchronous
		        Reentrancy:           Reentrant
		        userId              Identification of the calling module.
		        channel             Channel on which the acknowledgement shall be sent.
		        ackPgn              Acknowledged PGN.
		        Parameters (in):      ackCode             Type of acknowledgement, see definition of 
		        J1939Rm_AckCode
		        for available codes.
		        ackAddress          Address of the node that sent the request.
		        priority            Priority of the Acknowledgement PG.
		        Parameters            None
		        inout)
		        Parameters (out):     None
		        Return value:         Std_ReturnType E_OK: Transmission request is accepted
		        E_NOT_OK: Transmission request is not accepted
		        Description:          Requests transmission of an Acknowledgement PG.
		        SRS_J1939_00017)
		    </description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3085</srcid><srcstatus/><internalId>546</internalId></linkedfrom></coveredby></needscov>
        		<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT</srcid><srcstatus/><internalId>803</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00056</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00056.ExtendedIdentifiers</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				extIdInfo | Extended identifier bytes. J1939RM_EXTID_NONE is assumed if a NULL pointer is provided
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00056</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00063.UserRequestIndicationAPI</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
		        Service name:      &lt; User &gt;_RequestIndication
		        Syntax:            void      &lt;  User  &gt;_RequestIndication(
		        uint8   node,
		        NetworkHandleType        channel,
		        uint32       requestedPgn,
		        uint8   sourceAddress,
		        uint8   destAddress,
		        uint8   priority
		        Sync/Async:        Synchronous
		        Reentrancy:        Reentrant
		        node                 Node by which the request was received.
		        channel              Channel on which the request was received.
		        Parameters (in):   requestedPgn         PGN of the requested PG.
		        sourceAddress        Address of the node that sent the Request PG.
		        destAddress          Address of this node or 0xFF for broadcast.
		        priority             Priority of the Request PG.
		        Parameters         None
		        inout)
		        Parameters (out):  None
		        Return value:      None
		        Description:       Indicates reception of a Request PG.
		        SRS_J1939_00014)
		    </description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_240</srcid><srcstatus/><internalId>385</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00063</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00063.ExtendedIdentifiers</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				extIdInfo | Extended identifier bytes. J1939RM_EXTID_NONE is assumed if a NULL pointer is provided
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00063</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00064.UserAckIndication</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
		        Service name:      &lt; User &gt;_AckIndication
		        Syntax:            void      &lt;  User  &gt;_AckIndication(
		        uint8   node,
		        NetworkHandleType        channel,
		        uint32       ackPgn,
		        J1939Rm_AckCode       ackCode,
		        uint8   ackAddress,
		        uint8   sourceAddress,
		        uint8   priority
		        Sync/Async:        Synchronous
		        Reentrancy:        Reentrant
		        node               Node by which the acknowledgement was received.
		        channel            Channel on which the acknowledgement was received.
		        ackPgn             Acknowledged PGN.
		        Parameters (in):   ackCode            Type of acknowledgement, see definition of 
		        J1939Rm_AckCode
		        for available codes.
		        ackAddress         Address of this node.
		        sourceAddress Address of the node that sent the Acknowledgement PG.
		        priority           Priority of the Acknowledgement PG.
		        Parameters         None
		        inout)
		        Parameters (out):  None
		        Return value:      None
		        Description:       Indicates reception of an Acknowledgement PG.
		        SRS_J1939_00015)
		    </description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_235</srcid><srcstatus/><internalId>383</internalId></linkedfrom></coveredby></needscov>
        		<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_for_Request_stored_in_TSVQueue</srcid><srcstatus/><internalId>793</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_TSV_different_order</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_TSV_same_order</srcid><srcstatus/><internalId>799</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00064</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00064.ExtendedIdentifiers</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				extIdInfo | Extended identifier bytes. J1939RM_EXTID_NONE is assumed if a NULL pointer is provided
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00064</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00067.INVALID_EXTID</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				An API was called with invalid extended identifier bytes | J1939RM_E_INVALID_EXTID_INFOJ1939Rm.
        		J1939RM_E_INVALID_EXTID_INFO | 0x1b
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00067</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00067.Invalid_requestedPGN</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall reject transmission of a
				request by returning E_NOT_OK when the 'requestedPGN' is  not in the valid range,
				If DET is enabled via J1939RmDevErrorDetect, the DET error J1939RM_E_INVALID_PGN
				shall be reported.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2954</srcid><srcstatus/><internalId>531</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_with_Wrong_Parameter</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00067</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00067.Invalid_destAddress</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall reject transmission of a
				request by returning E_NOT_OK when the 'destAddress' is  not in the valid range,
				If DET is enabled via J1939RmDevErrorDetect, the DET error J1939RM_E_INVALID_ADDRESS
				shall be reported.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2869</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_INVALID_ADDRESS</srcid><srcstatus/><internalId>817</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00067</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00067.Invalid_priority</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall reject transmission of a
				request by returning E_NOT_OK when the 'priority' is  not in the valid range,
				If DET is enabled via J1939RmDevErrorDetect, the DET error J1939RM_E_INVALID_PRIO
				shall be reported.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2841</srcid><srcstatus/><internalId>519</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_with_Wrong_Parameter</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00067</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00067.Invalid_userId</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall reject transmission of a
				request by returning E_NOT_OK when the 'userId' is not one of the configured user IDs,
				If DET is enabled via J1939RmDevErrorDetect, the DET error J1939RM_E_INVALID_USER
				shall be reported.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2856</srcid><srcstatus/><internalId>520</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_with_Wrong_Parameter</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00067</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00067.Invalid_checkTimeout</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall reject transmission of a
				request by returning E_NOT_OK when 'checkTimeout' is true but timeout handling
				is disabled for the calling module, If DET is enabled via J1939RmDevErrorDetect,
				the DET error J1939RM_E_INVALID_OPTION shall be reported.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2921</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_with_Wrong_Parameter</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00067</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00069.INVALID_EXTID</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				An API was called with invalid extended identifier bytes | J1939RM_E_INVALID_EXTID_INFOJ1939Rm.
        		J1939RM_E_INVALID_EXTID_INFO | 0x1b
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00069</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00069.invalid_requestedPGN</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall ignore the timeout cancellation request
				when the 'requestedPGN' is not in the valid range,
				If DET is enabled via J1939RmDevErrorDetect,
				the corresponding DET error J1939RM_E_INVALID_PGN shall be reported.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3026</srcid><srcstatus/><internalId>538</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_CancelRequestTimeout_invalid_requestedPGN</srcid><srcstatus/><internalId>711</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00069</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00069.invalid_destAddress</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall ignore the timeout cancellation request
				when the 'destAddress' is not in the valid range,
				If DET is enabled via J1939RmDevErrorDetect,
				the corresponding DET error J1939RM_E_INVALID_ADDRESS shall be reported.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3072</srcid><srcstatus/><internalId>542</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_CancelRequestTimeout_INVALID_ADDRESS</srcid><srcstatus/><internalId>713</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00069</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00069.invalid_userId</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall ignore the timeout cancellation request
				when the 'userId' is not one of the configured user IDs,
				If DET is enabled via J1939RmDevErrorDetect,
				the corresponding DET error J1939RM_E_INVALID_USER shall be reported.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3021</srcid><srcstatus/><internalId>537</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_CancelRequestTimeout_invalid_userId</srcid><srcstatus/><internalId>712</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00069</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00069.NoSuitableEntry</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall ignore the timeout cancellation request
				if no suitable entry can be found in the list of pending requests.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3054</srcid><srcstatus/><internalId>540</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00069</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00070.INVALID_EXTID</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				An API was called with invalid extended identifier bytes | J1939RM_E_INVALID_EXTID_INFOJ1939Rm.
        		J1939RM_E_INVALID_EXTID_INFO | 0x1b
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00070</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00070.invalid_ackPgn</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall reject transmission of an acknowledgement
				by returning E_NOT_OK when the 'ackPgn' is  not in the valid range,
				If DET is enabled via J1939RmDevErrorDetect, the DET error J1939RM_E_INVALID_PGN
				shall be reported.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3168</srcid><srcstatus/><internalId>548</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_AckPGN</srcid><srcstatus/><internalId>810</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00070</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00070.invalid_ackAddress</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall reject transmission of an acknowledgement
				by returning E_NOT_OK when the 'ackAddress' is  not in the valid range,
				If DET is enabled via J1939RmDevErrorDetect, the DET error J1939RM_E_INVALID_ADDRESS
				shall be reported.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3228</srcid><srcstatus/><internalId>553</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_INVALID_ADDRESS</srcid><srcstatus/><internalId>804</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00070</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00070.invalid_priority</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall reject transmission of an acknowledgement
				by returning E_NOT_OK when the 'priority' is  not in the valid range,
				If DET is enabled via J1939RmDevErrorDetect, the DET error J1939RM_E_INVALID_PRIO
				shall be reported.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3208</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_Priority</srcid><srcstatus/><internalId>807</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00070</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00070.invalid_ackCode</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall reject transmission of an acknowledgement
				by returning E_NOT_OK when the 'ackCode' is  not in the valid range,
				If DET is enabled via J1939RmDevErrorDetect, the DET error J1939RM_E_INVALID_ACK_CODE
				shall be reported.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3198</srcid><srcstatus/><internalId>550</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_AckCode</srcid><srcstatus/><internalId>809</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00070</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00070.invalid_userId</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				The J1939 Request Manager shall reject transmission of an acknowledgement
				by returning E_NOT_OK when the 'userId' is not one of the configured user IDs,
				If DET is enabled via J1939RmDevErrorDetect, the DET error J1939RM_E_INVALID_USER
				shall be reported.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3188</srcid><srcstatus/><internalId>549</internalId></linkedfrom></coveredby></needscov>
				<needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_UserId</srcid><srcstatus/><internalId>805</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_UserId_Channel</srcid><srcstatus/><internalId>806</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00070</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00045.Com_TriggerIPDUSendWithMetaData</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				Com_TriggerIPDUSendWithMetaData | Com.h | By a call to Com_TriggerIPDUSendWithMetaData the 
		        AUTOSAR COM module updates its internal metadata for the I-PDU with the given ID by copying the 
		        metadata from the given position and with respect to length of the globally configured 
		        MetaDataType of this I-PDU. Then the I-PDU is triggered for transmission.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.RequestHandllingCOM</srcid><srcstatus/><internalId>358</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00045</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00045.Det_ReportError</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				API function                Description
				Det_ReportError             Service to report development errors.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_862</srcid><srcstatus/><internalId>422</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00045</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00045.J1939Dcm_RequestIndication</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				API function                      Description
				J1939Dcm_RequestIndication        Indicates reception of a Request PG.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/J1939Rm_Cfg.c_107</srcid><srcstatus/><internalId>392</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00045</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00045.J1939Nm_RequestIndication</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				API function                     Description
				J1939Nm_RequestIndication        Indicates reception of a Request PG.
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/J1939Rm_Cfg.c_112</srcid><srcstatus/><internalId>394</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00045</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00045.Com_TriggerIPDUSend</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				API function                    Description
				Com_TriggerIPDUSend             By a call to Com_TriggerIPDUSend the I-PDU with the given ID
				is triggered for transmission.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3372</srcid><srcstatus/><internalId>568</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00045</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00045.PduR_J1939RmCopyTxData</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				API function                      Description
				PduR_J1939RmCopyTxData            This function is called to acquire the transmit data
				of an I-PDU segment (N-PDU).
				Each call to this function provides the next part of the I-PDU data
				unless retry-&gt;TpDataState is TP_DATARETRY. In this case the
				function restarts to copy the data beginning at the offset from the
				current position indicated by retry-&gt;TxTpDataCnt. The size of the
				remaining data is written to the position indicated by availableDataPtr.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2335</srcid><srcstatus/><internalId>485</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00045</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00045.PduR_J1939RmTpTxConfirmation</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				API function                      Description
				PduR_J1939RmTpTxConfirmation      This function is called after the I-PDU has been transmitted on its
				network, the result indicates whether the transmission was
				successful or not.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2417</srcid><srcstatus/><internalId>491</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00045</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00045.PduR_J1939RmTxConfirmation</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				API function                      Description
				PduR_J1939RmTxConfirmation        The lower layer communication interface module confirms the
				transmission of an I-PDU.
			</description>
			<releases>
				<release>AUTOSAR 4.1.3</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2232</srcid><srcstatus/><internalId>474</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.ASR41.SWS_J1939Rm_00045</linksto>
					<dstversion>1</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00103.AppSendAckAppSendAckAPI</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
		        Name | AppSendAckAppSendAck 
		        Comment 
		        IsService | true 
		        Variation | {ecuc(J1939Rm/J1939RmGeneral.J1939RmSupportAckTransmission)} == true 
		        Possible Errors | 0 | E_OKAppSendAck.E_OK | Operation successful 
		        1 | E_NOT_OKAppSendAck.E_NOT_OK | Operation failed 
		        Operation | SendAckAppSendAck.SendAck 
		        Comment | Requests transmission of an Acknowledgement PG.
		        Variation 
		        Parameters | channelAppSendAck.SendAck.channel 
		        Type | NetworkHandleType 
		        Direction | IN 
		        Comment | Channel on which the acknowledgement shall be sent.
		        Variation 
		        ackPgnAppSendAck.SendAck.ackPgn 
		        Type | uint32 
		        Direction | IN 
		        Comment | Acknowledged PGN.
		        Variation 
		        extIdInfoAppSendAck.SendAck.extIdInfo 
		        Type | J1939Rm_ExtIdInfoType 
		        Direction | IN 
		        Comment 
		        Variation 
		        ackCodeAppSendAck.SendAck.ackCode 
		        Type | J1939Rm_AckCode 
		        Direction | IN 
		        Comment | Type of acknowledgement, see definition of J1939Rm_AckCode for available codes.
		        Variation 
		        ackAddressAppSendAck.SendAck.ackAddress 
		        Type | uint8 
		        Direction | IN 
		        Comment | Address of the node that sent the request.
		        Variation 
		        priorityAppSendAck.SendAck.priority 
		        Type | uint8 
		        Direction | IN 
		        Comment | Priority of the Acknowledgement PG.
		        Variation 
		        broadcastAppSendAck.SendAck.broadcast 
		        Type | boolean 
		        Direction | IN 
		        Comment | Indicates whether the ACKM is a response to a broadcast request.
		        Variation 
		        Possible Errors | AppSendAck.E_OKAppSendAck.E_NOT_OK 
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4_110</srcid><srcstatus/><internalId>670</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00103</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>
		<specobject>
			<id>EB_Ref.SWS_J1939Rm_00103.ExtendedIdentifiers</id>
			<status>approved</status>
			<source>EB Refinement</source>
			<version>1</version>
			<description>
				extIdInfo | Extended identifier bytes. J1939RM_EXTID_NONE is assumed if a NULL pointer is provided
			</description>
			<releases>
				<release>AUTOSAR R20-11</release>
			</releases>
			<needscoverage>
				<needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Rm.J1939RmRequest2</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
			<containerCovstatus>covered</containerCovstatus></needscoverage>
			<providescoverage>
				<provcov>
					<linksto>J1939Rm.SWS_J1939Rm_00103</linksto>
					<dstversion>2</dstversion>
				<linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
			</providescoverage>
		<violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>
	</specobjects>
    <specobjects doctype="swurs">
        <!-- EB specific features ====================================================================== -->
        <specobject>
            <id>J1939Rm.EB.Fifty_ms_TimeSupervision</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                If DET reporting is enabled via J1939RmDevErrorDetect,
                The J1939RM shall reject any request of the same PGN and channel if the 50 ms timeout supervision still not passed,
                and report the DET error J1939RM_E_TimeoutSupervision_50MS.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2903</srcid><srcstatus/><internalId>524</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_DET_ON_Fifty_ms_TimeSupervision</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.1250MS_TimeoutSupervision</id>   
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                If DET reporting is enabled via J1939RmDevErrorDetect,
                The J1939RM shall reject any request if the 1.25 s timeout supervision have not passed between the request sent and another request is sent,
                and report the DET error J1939RM_E_TimeoutSupervision_1250MS.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2933</srcid><srcstatus/><internalId>527</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_DET_ON_TimeoutSupervision_1250MS</srcid><srcstatus/><internalId>819</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.Invalid_SendRequest</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                If DET reporting is enabled via J1939RmDevErrorDetect,
                The J1939RM shall reject the transmission of request if 
                J1939RmUserSendRequest is not enabled for the userId of J1939Rm_SendRequest API,
                and report the DET error J1939RM_E_INVALID_SEND_REQUEST.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2883</srcid><srcstatus/><internalId>523</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_with_Wrong_Parameter</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB._Invalid_Call</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                If DET reporting is enabled via J1939RmDevErrorDetect,
                The J1939RM report the DET error J1939RM_E_INVALID_CALL if one of the dummy functions added for compilation only was called.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3408</srcid><srcstatus/><internalId>570</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3422</srcid><srcstatus/><internalId>571</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3433</srcid><srcstatus/><internalId>572</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Rm_PduRTpCopyRxData</srcid><srcstatus/><internalId>724</internalId></linkedfrom><linkedfrom><srcid>TS_J1939Rm_PduRTpStartOfReception</srcid><srcstatus/><internalId>725</internalId></linkedfrom><linkedfrom><srcid>TS_J1939Rm_PduRTpRxIndication</srcid><srcstatus/><internalId>726</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.Invalid_MetaData</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                If DET reporting is enabled via J1939RmDevErrorDetect,
                The J1939RM report the DET error J1939RM_E_INVALID_METADATA_HANDLE if one of the EcuC APIs used for setting MetaData returned E_NOT_OK.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_560</srcid><srcstatus/><internalId>412</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_688</srcid><srcstatus/><internalId>415</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_879</srcid><srcstatus/><internalId>424</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2733</srcid><srcstatus/><internalId>511</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Rm_Transmit_INVALID_METADATA</srcid><srcstatus/><internalId>759</internalId></linkedfrom><linkedfrom><srcid>TS_J1939Rm_Transmit_INVALID_METADATA_Tp_Path</srcid><srcstatus/><internalId>760</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_Ack_INVALID_METADATA</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RX_INDICATION_RQST_INVALID_METADATA</srcid><srcstatus/><internalId>790</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>
        <specobject>
            <id>ECUC_J1939Rm.EB.ComIPduType</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                ComIPduType configuration parameter of type EcucEnumerationParamDef was added inside J1939RmComIPdu container,
                its value is equal to ComIPdu_TP or ComIPdu_IF.
                this parameter is used to define if the J1939RmComIPdu will be sent through CanIf or J1939Tp.
            </description>
            <comment>
                This is a configuration parameter requirement without functional specification.
            </comment>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>
        <specobject>
            <id>ECUC_J1939Rm.EB.J1939RmUserCddName</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                J1939RmUserCddName configuration parameter of type STRING was added inside J1939RmUser container,
                it contains the name of the cdd.
                this parameter is used to include J1939RmUserCddName.h.
            </description>
            <comment>
                This is a configuration parameter requirement without functional specification.
            </comment>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.MetaData_J1939RmAckmTxPdu</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                MetaData should be configured as CAN_ID_32 for Pdu referenced in J1939RmAckmTxPduRef.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/J1939Rm.xgen_438</srcid><srcstatus/><internalId>684</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01012_Err_EcuC_Invalid_AckmTxPduRefMetaDataTypeRef</srcid><srcstatus/><internalId>869</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.MetaData_J1939RmRqstTxPdu</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                MetaData should be configured as CAN_ID_32 for Pdu referenced in J1939RmRqstTxPduRef.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/J1939Rm.xgen_456</srcid><srcstatus/><internalId>685</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01013_Err_EcuC_Invalid_RqstTxPduRefMetaDataTypeRef</srcid><srcstatus/><internalId>870</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.MetaData_J1939RmLowerComIPdu</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                MetaData should be configured for Pdu referenced in J1939RmLowerComIPduRef as one of the following:
                - CAN_ID_32
                - SOURCE_ADDRESS_16
                - SOURCE_ADDRESS_16, and TARGET_ADDRESS_16
                - SOURCE_ADDRESS_16, TARGET_ADDRESS_16, and PRIORITY_8
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/J1939Rm.xgen_715</srcid><srcstatus/><internalId>687</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01010_Err_EcuC_Invalid_MetaDataItemTypeSOURCE_ADDRESS_16</srcid><srcstatus/><internalId>867</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01011_Err_EcuC_Invalid_MetaDataItemTypeTARGET_ADDRESS_16</srcid><srcstatus/><internalId>868</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_02001_Err_EcuC_Invalid_MetaDataItemTypeSOURCE_ADDRESS_16_2</srcid><srcstatus/><internalId>873</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_02002_Err_EcuC_Invalid_LowerComIPduRefMetaDataTypeRef</srcid><srcstatus/><internalId>874</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_02003_Err_EcuC_Invalid_MetaDataItemTypeTARGET_ADDRESS_16_2</srcid><srcstatus/><internalId>875</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_02004_Err_EcuC_Invalid_LowerComIPduRefMetaDataTypeRef_2</srcid><srcstatus/><internalId>876</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.J1939RmLowerComIPduRefPduId</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                PduId should be configured for EcuC Pdu referenced in J1939RmLowerComIPduRef.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/J1939Rm.xgen_676</srcid><srcstatus/><internalId>686</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01015_Err_EcuC_Invalid_J1939RmLowerComIPduRefPduId</srcid><srcstatus/><internalId>872</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.J1939RmSetNodeAddress</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                J1939Rm should provide the J1939Rm_SetNodeAddress public interface to support dynamic address claiming feature in J1939Rm Module.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3439</srcid><srcstatus/><internalId>573</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SetNodeAddress_With_Valid_Parameters</srcid><srcstatus/><internalId>839</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.SetNodeAddress_State_Validation</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                If DET reporting is enabled via J1939RmDevErrorDetect,J1939Rm_SetNodeAddress interface should reject node address changing in case one or more node channel state is online and shall report the DET error J1939RM_E_INVALID_ONLINE_NODE_CHANNEL ,and return E_NOT_OK.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Rm_Types.h_154</srcid><srcstatus/><internalId>380</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3489</srcid><srcstatus/><internalId>576</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SetNodeAddress_For_OnlineNodeChannel</srcid><srcstatus/><internalId>842</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>J1939Rm.EB.IntReq.DynamicAddressClaiming.SetNodeChannelOffline</srcid><srcstatus/><internalId>0</internalId></linkedfrom><linkedfrom><srcid>J1939Rm.EB.IntReq.DynamicAddressClaiming.SetNodeChannelOnline</srcid><srcstatus/><internalId>1</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.SetNodeAddress_NodeId_Validation</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                If DET reporting is enabled via J1939RmDevErrorDetect, 
                the J1939Rm_SetNodeAddress interface should reject node address changing in case the node id is not valid and shall report the DET error, J1939RM_E_INVALID_NODE and return E_NOT_OK.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3463</srcid><srcstatus/><internalId>575</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3523</srcid><srcstatus/><internalId>579</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SetNodeAddress_With_Wrong_NodeId</srcid><srcstatus/><internalId>840</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.SetNodeAddress_NewAddress_Validation</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                J1939Rm_SetNodeAddress interface should reject node address changing in case the new address is greater than 253 and return E_NOT_OK.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3499</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SetNodeAddress_With_WrongAddress</srcid><srcstatus/><internalId>841</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.SetNodeAddress_ModuleStatus_Validation</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                If DET reporting is enabled via J1939RmDevErrorDetect,J1939Rm_SetNodeAddress interface should reject node address changing in case the module not intialized, and shall report the DET error, J1939RM_E_UNINIT.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3455</srcid><srcstatus/><internalId>574</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SetNodeAddress_before_Initialization</srcid><srcstatus/><internalId>838</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.SetNodeAddress_ComRequestsHandling</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
               J1939Rm should not call PduR_J1939RmTransmit when the J1939Rm_Transmit called by PduR to transmit Com Pdu in case e destination address of request that queued in Com Queue not match the current address of node.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2681</srcid><srcstatus/><internalId>503</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_Request_Reception_For_SwitchMode</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.QueueHandling_NodeOfflineState</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
               All user's requests for the offline node in the assoicaited RQST or ACK queue channel
               will be invalid and must not be transmitted.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3616</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3687</srcid><srcstatus/><internalId>591</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RQSTQueue_InValidElements_NotSending</srcid><srcstatus/><internalId>742</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RQSTQueue_InValidElements_SwitchOfflineNodes</srcid><srcstatus/><internalId>743</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_ACKQueue_InValidElements_NotSending</srcid><srcstatus/><internalId>744</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_ACKQueue_InValidElements_SwitchOfflineNodes</srcid><srcstatus/><internalId>745</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>J1939Rm.EB.IntReq.DynamicAddressClaiming.SetNodeChannelOffline</srcid><srcstatus/><internalId>0</internalId></linkedfrom><linkedfrom><srcid>J1939Rm.EB.IntReq.DynamicAddressClaiming.SetNodeChannelOnline</srcid><srcstatus/><internalId>1</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.TransmissionInvalidRequests</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
               J1939Rm should not transmitt the request if it marked as invalid requests in RQST and ACK Queue.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3607</srcid><srcstatus/><internalId>580</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3688</srcid><srcstatus/><internalId>592</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_RQSTQueue_InValidElements_NotSending</srcid><srcstatus/><internalId>742</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_RQSTQueue_InValidElements_SwitchOfflineNodes</srcid><srcstatus/><internalId>743</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_ACKQueue_InValidElements_NotSending</srcid><srcstatus/><internalId>744</internalId></linkedfrom><linkedfrom><srcid>TS_J1939RM_ACKQueue_InValidElements_SwitchOfflineNodes</srcid><srcstatus/><internalId>745</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>J1939Rm.EB.IntReq.DynamicAddressClaiming.SetNodeChannelOffline</srcid><srcstatus/><internalId>0</internalId></linkedfrom><linkedfrom><srcid>J1939Rm.EB.IntReq.DynamicAddressClaiming.SetNodeChannelOnline</srcid><srcstatus/><internalId>1</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.SendRequestForAbsoluteNodeAddress</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
               J1939Rm should not transmitt the request if it source address of the request in RQST queue not match the current source address.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3608</srcid><srcstatus/><internalId>581</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3609</srcid><srcstatus/><internalId>582</internalId></linkedfrom></coveredby></needscov>
                <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939RM_SEND_REQUEST_WithSetNewAddress</srcid><srcstatus/><internalId>837</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.J1939RmMaxNodes</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                J1939Rm provide J1939RmMaxNodes to reserve the possible space may used at runtime for multi variant support.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm_Extension.xdm.m4_1485</srcid><srcstatus/><internalId>666</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>
        <specobject>
            <id>J1939Rm.EB.J1939RmMaxChannels</id>
            <status>approved</status>
            <source>EB</source>
            <version>1</version>
            <description>
                J1939Rm provide J1939RmMaxChannels to reserve the possible space may used at runtime for multi variant support.
            </description>
            <needscoverage>
                <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Rm_Extension.xdm.m4_1502</srcid><srcstatus/><internalId>667</internalId></linkedfrom></coveredby></needscov>
            <containerCovstatus>covered</containerCovstatus></needscoverage>
        <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>
    </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>J1939Rm.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Rm_VerifyCodeStub</srcid><srcstatus/><internalId>702</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.J1939Rm.J1939RmRequest2</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.ECUC_J1939Rm_00009.TxRxRequest2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00022</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00080</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00008.ExtendedIdentiferBytes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00024.ExtendedIdentiferBytes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.INVALID_EXTID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00054.ExtendedIdentifiers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00055.ExtendedIdentifiers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00056.ExtendedIdentifiers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00063.ExtendedIdentifiers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00064.ExtendedIdentifiers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00103.ExtendedIdentifiers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00104</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00105</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00065</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00106</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00107</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00108</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00067.INVALID_EXTID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00069.INVALID_EXTID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00070.INVALID_EXTID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>
    <specobject>
      <id>dev.J1939Rm.RmUserConfigurations</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>72</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00002</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00032</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00082</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00097</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00098</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00113</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>
    <specobject>
      <id>dev.RequestHandllingCOM</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00045.Com_TriggerIPDUSendWithMetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>
    <specobject>
      <id>dev.J1939Rm.J1939Rm_ComRxIpduCallout</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>107</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00062</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>
    <specobject>
      <id>dev.J1939Rm.SWS_J1939Rm_00126</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>121</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>
    <specobject>
      <id>dev.J1939Rm.ECUC_J1939Rm_00084</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>
    <specobject>
      <id>dev.J1939Rm.pointerCheck</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00034.J1939Rm_ComRxIpduCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Cfg.h_16</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Cfg.h</sourcefile>
      <sourceline>16</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00111</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Cfg.h_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Cfg.h</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00112</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_11</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>11</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00035</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_12</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>12</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_128</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>128</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_130</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>130</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_REINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_134</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>134</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_PDU_SDU_ID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_136</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_NETWORK_ID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_138</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>138</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_STATE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_140</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>140</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_USER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_142</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>142</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_144</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>144</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_PRIO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_148</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>148</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_OPTION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_150</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>150</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_ACK_CODE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_152</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>152</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_NODE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_154</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SetNodeAddress_State_Validation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_228</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>228</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_234</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_235</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>235</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00064.UserAckIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_239</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>239</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_240</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>240</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00063.UserRequestIndicationAPI</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/J1939Rm_Types.h_244</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/include/J1939Rm_Types.h</sourcefile>
      <sourceline>244</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/J1939Rm_Cfg.c_92</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/src/J1939Rm_Cfg.c</sourcefile>
      <sourceline>92</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/J1939Rm_Cfg.c_94</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/src/J1939Rm_Cfg.c</sourcefile>
      <sourceline>94</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00027</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/J1939Rm_Cfg.c_97</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/src/J1939Rm_Cfg.c</sourcefile>
      <sourceline>97</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00028</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/J1939Rm_Cfg.c_103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/src/J1939Rm_Cfg.c</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/J1939Rm_Cfg.c_106</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/src/J1939Rm_Cfg.c</sourcefile>
      <sourceline>106</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00083</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/J1939Rm_Cfg.c_107</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/src/J1939Rm_Cfg.c</sourcefile>
      <sourceline>107</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00045.J1939Dcm_RequestIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/J1939Rm_Cfg.c_108</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/src/J1939Rm_Cfg.c</sourcefile>
      <sourceline>108</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00002.J1939Dcm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/J1939Rm_Cfg.c_112</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/src/J1939Rm_Cfg.c</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00045.J1939Nm_RequestIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/J1939Rm_Cfg.c_113</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/src/J1939Rm_Cfg.c</sourcefile>
      <sourceline>113</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00002.J1939Nm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/J1939Rm_Cfg.c_114</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/src/J1939Rm_Cfg.c</sourcefile>
      <sourceline>114</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00084</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/J1939Rm_Cfg.c_118</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/src/J1939Rm_Cfg.c</sourcefile>
      <sourceline>118</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00002.CDD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/J1939Rm_Cfg.c_122</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/src/J1939Rm_Cfg.c</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/J1939Rm_Cfg.c_130</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/src/J1939Rm_Cfg.c</sourcefile>
      <sourceline>130</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/J1939Rm_Cfg.c_164</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate/src/J1939Rm_Cfg.c</sourcefile>
      <sourceline>164</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.dsn.PrecompileTimeConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/J1939Rm.h_6</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/include/J1939Rm.h</sourcefile>
      <sourceline>6</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/J1939Rm_Cbk.h_6</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/include/J1939Rm_Cbk.h</sourcefile>
      <sourceline>6</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_43</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_235</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>235</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_236</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>236</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_270</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>270</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_320</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>320</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_389</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>389</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00007.configured_addresses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_393</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>393</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_446</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>446</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00007.global_DA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_552</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>552</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_560</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>560</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Invalid_MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_676</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>676</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_682</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>682</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_688</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>688</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Invalid_MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_751</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>751</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00029.Acknowledgement_Received</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_759</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>759</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00066.CDD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_760</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>760</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00066.RTE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_782</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>782</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00027</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_783</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>783</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00028</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_861</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>861</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_862</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>862</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00045.Det_ReportError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_874</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>874</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_879</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>879</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Invalid_MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_931</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>931</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_936</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>936</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_COM_RX</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_938</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>938</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_948</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>948</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_954</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>954</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00002.J1939Nm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_955</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>955</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00002.J1939Dcm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_956</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>956</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00002.CDD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_957</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>957</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_958</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>958</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_976</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>976</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_977</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>977</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00008.RequestedPGN_NotConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1158</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1158</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1159</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1159</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00024.SendRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1174</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1174</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1274</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1274</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1737</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1737</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1822</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1822</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00012.InternalVariables</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1869</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1869</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1870</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1870</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Dsn.J1939RmTxConfirmation.Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1897</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1897</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00012.InitializedState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1911</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1911</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1918</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1918</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1932</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1932</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_DeInit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1938</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1938</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1943</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1943</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1956</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1956</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00034.J1939Rm_GetVersionInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_1970</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>1970</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2026</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2026</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2032</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2032</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00040.DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2037</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2037</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00040.rejection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2049</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2049</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00041.J1939Rm_SetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2061</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2061</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2069</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2069</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_SetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2079</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2079</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2080</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2080</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00080</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2095</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2095</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2101</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2101</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00034.J1939Rm_RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2121</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2121</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2123</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2123</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00059</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2169</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2169</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Dsn.J1939RmTxConfirmation.RQST_TX_CONFIRMED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>701</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2170</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2170</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2177</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2177</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00023</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2179</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2179</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_RQST_TX_E_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2192</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2192</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Dsn.J1939RmTxConfirmation.ACKM_TX_CONFIRMED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2193</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2193</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00019</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2200</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2200</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2202</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2202</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_ACKM_TX_E_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>689</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2229</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2229</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_COM_TX_CONFIRMED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2231</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2231</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2232</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2232</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00045.PduR_J1939RmTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2249</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2249</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_TxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2255</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2255</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_TxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2261</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2261</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_TxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2270</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2270</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2288</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2288</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2289</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2289</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2297</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2297</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2303</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2303</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00034.J1939Rm_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2308</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2308</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00034.J1939Rm_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2334</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2334</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2335</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2335</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00045.PduR_J1939RmCopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2348</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2358</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2358</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2370</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2370</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2413</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2413</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_COM_TX_CONFIRMED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2416</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2416</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2417</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2417</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00045.PduR_J1939RmTpTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2434</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2434</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_TpTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2443</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2443</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_TpTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2452</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2452</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00079</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2463</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2463</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2563</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2563</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00029.COM_RxIPduCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2578</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2578</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_ComRxIpduCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2587</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2587</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_ComRxIpduCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2596</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2596</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2606</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2606</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2613</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2613</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2620</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2620</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00034.J1939Rm_Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2681</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2681</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SetNodeAddress_ComRequestsHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2702</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2702</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2705</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2705</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00006.Set_DA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2706</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2706</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00006.Set_SA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2709</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2709</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00006.PduR_J1939RmTransmit.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2710</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2710</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00006.PduR_J1939RmTransmit.Interface_Path</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2722</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2722</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00006.Set_SA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2724</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2724</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00006.Set_DA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2733</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2733</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Invalid_MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2738</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2738</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00006.PduR_J1939RmTransmit.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2744</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2744</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_COM_TX</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2769</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2769</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2779</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2779</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2793</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2793</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2794</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2794</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00054.SendRequestAPI</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2828</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2828</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00041.J1939Rm_SendRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2841</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2841</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00067.Invalid_priority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2856</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2856</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00067.Invalid_userId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2869</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2869</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00067.Invalid_destAddress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2870</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2870</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_ADDRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2883</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2883</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Invalid_SendRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2903</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2903</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Fifty_ms_TimeSupervision</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2921</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2921</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00067.Invalid_checkTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2922</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2922</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2933</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2933</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.1250MS_TimeoutSupervision</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2945</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2945</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2946</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2946</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00024.SendRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2947</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2947</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00021.queueing_Rqst_PG</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2954</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2954</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00067.Invalid_requestedPGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2977</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2977</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_SendRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_2986</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>2986</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3000</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3000</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3001</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3001</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00055.CancelRequestTimeoutAPI</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3016</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3016</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_CancelRequestTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3021</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3021</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00069.invalid_userId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3026</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3026</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00069.invalid_requestedPGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3051</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3051</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00029.J1939Rm_CancelRequestTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3054</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3054</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00069.NoSuitableEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3063</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3063</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00041.J1939Rm_CancelRequestTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3072</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3072</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00069.invalid_destAddress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3073</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3073</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_ADDRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3082</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3082</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3084</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3084</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3085</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3085</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00056.SendAckAPI</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3162</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3162</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00018.queueing_Ack_PG</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3168</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3168</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00070.invalid_ackPgn</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3188</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3188</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00070.invalid_userId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3198</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3198</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00070.invalid_ackCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3208</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3208</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00070.invalid_priority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3218</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3218</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00041.J1939Rm_SendAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3228</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3228</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00070.invalid_ackAddress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3229</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3229</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_ADDRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3240</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3240</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_SendAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3249</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3249</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3250</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3250</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3264</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3264</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_MainFunction</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3312</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3312</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Dsn.J1939RmTxConfirmation.COM_CONFIRMED_TO_NO_TX</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3313</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3313</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Dsn.J1939RmTxConfirmation.ACKM_CONFIRMED_TO_NO_TX</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3314</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3314</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00019</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3321</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3321</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3322</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3322</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Dsn.J1939RmTxConfirmation.RQST_CONFIRMED_TO_NO_TX</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3330</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3330</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3331</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3331</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00024.SendRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3334</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3334</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3370</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3370</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_COM_RX</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3372</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3372</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00045.Com_TriggerIPDUSend</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3373</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3373</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3408</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3408</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB._Invalid_Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3422</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3422</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB._Invalid_Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3433</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3433</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB._Invalid_Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3439</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3439</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.J1939RmSetNodeAddress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3455</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3455</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SetNodeAddress_ModuleStatus_Validation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3463</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3463</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SetNodeAddress_NodeId_Validation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3489</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3489</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SetNodeAddress_State_Validation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3499</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3499</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SetNodeAddress_NewAddress_Validation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3522</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3522</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3523</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3523</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SetNodeAddress_NodeId_Validation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3607</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3607</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.TransmissionInvalidRequests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3608</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3608</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SendRequestForAbsoluteNodeAddress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3609</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3609</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SendRequestForAbsoluteNodeAddress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3616</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3616</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.QueueHandling_NodeOfflineState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3630</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3630</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00009.BSW_CDD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3631</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3631</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00009.RTE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3633</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3633</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00016.BSW_CDD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3634</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3634</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00016.RTE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3635</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3635</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3639</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3639</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_RQST_TX</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>697</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3678</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3678</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00019</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3687</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3687</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.QueueHandling_NodeOfflineState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3688</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3688</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.TransmissionInvalidRequests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3702</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3702</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3705</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3705</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Rm.c.m4_3709</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/src/J1939Rm.c.m4</sourcefile>
      <sourceline>3709</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_ACKM_TX</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>691</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_50</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_65</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_71</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.ECUC_J1939Rm_00009.TxRxRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_82</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>82</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_143</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>143</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_160</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>160</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_173</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>173</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_184</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>184</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_201</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>201</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_215</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>215</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_226</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>226</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_243</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>243</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_257</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>257</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_268</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>268</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_285</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>285</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_299</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>299</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_310</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>310</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_327</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>327</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_360</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>360</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_377</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>377</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_410</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>410</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_426</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>426</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_441</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>441</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_452</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>452</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_471</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>471</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_484</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>484</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00010</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_485</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>485</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_497</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>497</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_506</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>506</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00028</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_518</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>518</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00061</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_564</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>564</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00027</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_578</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>578</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00026</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_599</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>599</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00030</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_612</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>612</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00029</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_625</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>625</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00031</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_638</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>638</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00042</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_771</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>771</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_792</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>792</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_813</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>813</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_822</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>822</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_851</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>851</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_867</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>867</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_883</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>883</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_887</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>887</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_903</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>903</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_916</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>916</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_920</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>920</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_936</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>936</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_953</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>953</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_962</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>962</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_978</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>978</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1002</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1002</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1032</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1032</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1040</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1040</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00028</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1054</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1054</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00061</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00027</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1113</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1113</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00026</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1136</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00030</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1149</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00029</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1162</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1162</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00031</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1181</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1181</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1225</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1225</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1238</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1238</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1255</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1255</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1268</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1268</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1280</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1280</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1307</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1307</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1320</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1320</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm.xdm.m4_1333</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm.xdm.m4</sourcefile>
      <sourceline>1333</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/J1939Rm_Extension.xdm.m4_1485</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm_Extension.xdm.m4</sourcefile>
      <sourceline>1485</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.J1939RmMaxNodes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Rm_Extension.xdm.m4_1502</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/config/J1939Rm_Extension.xdm.m4</sourcefile>
      <sourceline>1502</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.J1939RmMaxChannels</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Rm_Bswmd.arxml.m4_47</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_swcd/swcd/J1939Rm_Bswmd.arxml.m4</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4_48</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4_110</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4</sourcefile>
      <sourceline>110</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00103.AppSendAckAppSendAckAPI</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4_166</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4</sourcefile>
      <sourceline>166</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4_222</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4_268</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4</sourcefile>
      <sourceline>268</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4_333</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4</sourcefile>
      <sourceline>333</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4_394</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_swcd/swcd/J1939Rm_swc_interface.arxml.m4</sourcefile>
      <sourceline>394</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4_29</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR413.SWS_J1939Rm_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4_44</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR413.SWS_J1939Rm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4_59</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4_74</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4</sourcefile>
      <sourceline>74</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4_83</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4</sourcefile>
      <sourceline>83</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4_92</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_swcd/swcd/J1939Rm_swc_internal.arxml.m4</sourcefile>
      <sourceline>92</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_var/xgen/J1939Rm.xgen_422</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_var/xgen/J1939Rm.xgen</sourcefile>
      <sourceline>422</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00018.J1939RmAckQueueSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/J1939Rm.xgen_424</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_var/xgen/J1939Rm.xgen</sourcefile>
      <sourceline>424</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00021.J1939RmRequestQueueSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/J1939Rm.xgen_438</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_var/xgen/J1939Rm.xgen</sourcefile>
      <sourceline>438</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.MetaData_J1939RmAckmTxPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/J1939Rm.xgen_456</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_var/xgen/J1939Rm.xgen</sourcefile>
      <sourceline>456</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.MetaData_J1939RmRqstTxPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/J1939Rm.xgen_676</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_var/xgen/J1939Rm.xgen</sourcefile>
      <sourceline>676</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.J1939RmLowerComIPduRefPduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/J1939Rm.xgen_715</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/src/Autosar/generate_var/xgen/J1939Rm.xgen</sourcefile>
      <sourceline>715</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.MetaData_J1939RmLowerComIPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>J1939Rm.dsn.PrecompileTimeConfig</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/project/design/pdf/J1939Rm_Design-profiled.xml</sourcefile>
      <sourceline>10297</sourceline>
      <version>1</version>
      <description>The J1939Rm shall provide a precompile-time configuration as defined in the Data Structure View.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/J1939Rm_Cfg.c_164</srcid><srcstatus/><internalId>400</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>
    <specobject>
      <id>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_ACKM_TX_E_NOT_OK</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/project/design/pdf/J1939Rm_Design-profiled.xml</sourcefile>
      <sourceline>10307</sourceline>
      <version>1</version>
      <description>If J1939Rm_TxConfirmation is called with E_NOT_OK,  the J1939RmTxConfirmation for this channel shall return back to J1939RM_NO_TX.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2202</srcid><srcstatus/><internalId>471</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>
    <specobject>
      <id>J1939Rm.EB.Dsn.J1939RmTxConfirmation.ACKM_TX_CONFIRMED</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/project/design/pdf/J1939Rm_Design-profiled.xml</sourcefile>
      <sourceline>10317</sourceline>
      <version>1</version>
      <description>If TxConfirmation was received for Ackm transmitted through a specific channel,  the J1939RmTxConfirmation for this channel shall enter J1939RM_ACKM_TX_CONFIRMED state.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2192</srcid><srcstatus/><internalId>468</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>
    <specobject>
      <id>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_ACKM_TX</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/project/design/pdf/J1939Rm_Design-profiled.xml</sourcefile>
      <sourceline>10327</sourceline>
      <version>1</version>
      <description>When PduR_J1939RmTransmit is called to transmit Acknowledgement PG through a specific channel, the J1939RmTxConfirmation for this channel shall enter the J1939RM_ACKM_TX state till the J1939Rm_TxConfirmation  is called for this for this Ack.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3709</srcid><srcstatus/><internalId>595</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>
    <specobject>
      <id>J1939Rm.EB.Dsn.J1939RmTxConfirmation.ACKM_CONFIRMED_TO_NO_TX</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/project/design/pdf/J1939Rm_Design-profiled.xml</sourcefile>
      <sourceline>10337</sourceline>
      <version>1</version>
      <description>The J1939RmTxConfirmation shall return to J1939RM_NO_TX state  from J1939RM_ACKM_CONFIRMED state in the first call to J1939Rm_MainFunction.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3313</srcid><srcstatus/><internalId>560</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>
    <specobject>
      <id>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_COM_TX</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/project/design/pdf/J1939Rm_Design-profiled.xml</sourcefile>
      <sourceline>10347</sourceline>
      <version>1</version>
      <description>When the J1939Rm_Transmit is called, the J1939Rm module shall add meta-data, forward the PG to PduR_J1939RmTransmit and set J1939RmTxConfirmation to J1939RM_COM_TX.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2744</srcid><srcstatus/><internalId>513</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>
    <specobject>
      <id>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_COM_RX</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/project/design/pdf/J1939Rm_Design-profiled.xml</sourcefile>
      <sourceline>10357</sourceline>
      <version>1</version>
      <description>When J1939Rm_RxIndication is called to request PGN through a specific channel, and the requested PGN is configured via to be handled via COM, the J1939Rm module shall call Com_TriggerIPDUSend and J1939RmTxConfirmation for this channel shall enter J1939RM_COM_RX state.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_936</srcid><srcstatus/><internalId>426</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3370</srcid><srcstatus/><internalId>567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>
    <specobject>
      <id>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_COM_TX_CONFIRMED</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/project/design/pdf/J1939Rm_Design-profiled.xml</sourcefile>
      <sourceline>10367</sourceline>
      <version>1</version>
      <description>If TxConfirmation was received for com Pdu transmitted through a specific channel,  the J1939RmTxConfirmation for this channel shall enter J1939RM_COM_TX_CONFIRMED state.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2229</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2413</srcid><srcstatus/><internalId>489</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
    <specobject>
      <id>J1939Rm.EB.Dsn.J1939RmTxConfirmation.COM_CONFIRMED_TO_NO_TX</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/project/design/pdf/J1939Rm_Design-profiled.xml</sourcefile>
      <sourceline>10377</sourceline>
      <version>1</version>
      <description>The J1939RmTxConfirmation shall return to J1939RM_NO_TX state  from J1939RM_COM_TX_CONFIRMED state in the first call to J1939Rm_MainFunction.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3312</srcid><srcstatus/><internalId>559</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>
    <specobject>
      <id>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_RQST_TX</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/project/design/pdf/J1939Rm_Design-profiled.xml</sourcefile>
      <sourceline>10388</sourceline>
      <version>1</version>
      <description>When PduR_J1939RmTransmit is called to transmit Request PG through a specific channel, the J1939RmTxConfirmation for this channel shall enter the J1939RM_RQST_TX state till the J1939Rm_TxConfirmation is called for this Rqst.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3639</srcid><srcstatus/><internalId>589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>
    <specobject>
      <id>J1939Rm.EB.Dsn.J1939RmTxConfirmation.Init</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/project/design/pdf/J1939Rm_Design-profiled.xml</sourcefile>
      <sourceline>10398</sourceline>
      <version>1</version>
      <description>the J1939RmTxConfirmation shall be initially set to J1939RM_NO_TX.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_1870</srcid><srcstatus/><internalId>443</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>
    <specobject>
      <id>J1939Rm.EB.Dsn.J1939RmTxConfirmation.J1939RM_RQST_TX_E_NOT_OK</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/project/design/pdf/J1939Rm_Design-profiled.xml</sourcefile>
      <sourceline>10408</sourceline>
      <version>1</version>
      <description>If J1939Rm_TxConfirmation is called with E_NOT_OK,  the J1939RmTxConfirmation for this channel shall return back to J1939RM_NO_TX.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2179</srcid><srcstatus/><internalId>467</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>
    <specobject>
      <id>J1939Rm.EB.Dsn.J1939RmTxConfirmation.RQST_CONFIRMED_TO_NO_TX</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/project/design/pdf/J1939Rm_Design-profiled.xml</sourcefile>
      <sourceline>10418</sourceline>
      <version>1</version>
      <description>The J1939RmTxConfirmation shall return to J1939RM_NO_TX state  from J1939RM_RQST_CONFIRMED state in the first call to J1939Rm_MainFunction.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_3322</srcid><srcstatus/><internalId>563</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>
    <specobject>
      <id>J1939Rm.EB.Dsn.J1939RmTxConfirmation.RQST_TX_CONFIRMED</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/doc/project/design/pdf/J1939Rm_Design-profiled.xml</sourcefile>
      <sourceline>10429</sourceline>
      <version>1</version>
      <description>If TxConfirmation was received for Rqst transmitted through a specific channel,  the J1939RmTxConfirmation for this channel shall enter J1939RM_RQST_TX_CONFIRMED state.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Rm.c.m4_2169</srcid><srcstatus/><internalId>464</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939Rm_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/build/reqm/common_req/J1939Rm_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(J1939Rm.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>J1939Rm_ComTest_Multi_Test</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Compile/IN/J1939Rm_ComTest_Multi_Test/source/application/Tests.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Checking that the module is compiling successfully.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_PBSELECTABLE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Compile/IN/J1939Rm_Variant_Generation_Test/source/application/Tests.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in off-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with value zero to initialize the module.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_Compile_Test</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Compile/IN/J1939Rm__ComTest_01_No_RxAck_RXReqst/source/application/Tests.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Checking that the module is compiling successfully.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_Compile_Test_RmRxIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Compile/IN/J1939Rm__ComTest_01_No_RxAck_RXReqst_RqIndication_RqAck/source/application/Tests.c.m4</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Checking that the module is compiling successfully.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_Compile_RTE_No_Ack_Test</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Compile/IN/RTE_test_4_PORTS_No_Ack/source/application/Tests.c</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Checking that the module is compiling successfully.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_Compile_RTE_Test</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Compile/IN/RTE_test_6_PORTS/source/application/Tests.c</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Checking that the module is compiling successfully.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_CancelRequestTimeout_before_Initialization</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_CancelRequestTimeout_Test/source/application/Tests.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that calling J1939Rm_CancelRequestTimeout() before initialization shall shall raise DET.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    no initialization
  
Test Execution: 
    1- Initialize J1939Rm Module
    2- Deinit Module for simulate the test case
    3: Call the J1939Rm_CancelRequestTimeout().
    4: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_UNINIT.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_CancelRequestTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_CancelRequestTimeout_unknown_handle</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_CancelRequestTimeout_Test/source/application/Tests.c</sourcefile>
      <sourceline>102</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that If DET reporting is enabled via J1939RmDevErrorDetect,
       the J1939Rm shall check NetworkHandleType parameter (network handles) of J1939Rm_CancelRequestTimeout
       against the referenced network handles of ComM, 
       and shall report the DET error J1939RM_E_INVALID_NETWORK_ID when an unknown handle is provided by the call.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and on-line state, and check it returns E_OK.
    3: Call the J1939Rm_CancelRequestTimeout().
    4: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_NETWORK_ID.
    5: Call the J1939Rm_DeInit().
    6: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.    
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00041.J1939Rm_CancelRequestTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_CancelRequestTimeout_invalid_requestedPGN</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_CancelRequestTimeout_Test/source/application/Tests.c</sourcefile>
      <sourceline>168</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that J1939 Request Manager shall ignore the timeout cancellation request
       when the 'requestedPGN' is not in the valid range,
       If DET is enabled via J1939RmDevErrorDetect,
       the corresponding DET error J1939RM_E_INVALID_PGN shall be reported.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and on-line state, and check it returns E_OK.
    3: Call the J1939Rm_CancelRequestTimeout().
    4: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_PGN.
    5: Call the J1939Rm_DeInit().
    6: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.    
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00069.invalid_requestedPGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_CancelRequestTimeout_invalid_userId</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_CancelRequestTimeout_Test/source/application/Tests.c</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that the J1939Rm shall ignore the timeout cancellation request
       when the 'userId' is not one of the configured user IDs,
       If DET is enabled via J1939RmDevErrorDetect,
       the corresponding DET error J1939RM_E_INVALID_USER shall be reported.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and on-line state, and check it returns E_OK.
    3: Call the J1939Rm_CancelRequestTimeout().
    4: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_USER.
    5: Call the J1939Rm_DeInit().
    6: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.    
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00069.invalid_userId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_CancelRequestTimeout_INVALID_ADDRESS</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_CancelRequestTimeout_Test/source/application/Tests.c</sourcefile>
      <sourceline>300</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that the J1939 Request Manager shall ignore the timeout cancellation request
       when the 'destAddress' is not in the valid range,
       If DET is enabled via J1939RmDevErrorDetect,
       the corresponding DET error J1939RM_E_INVALID_ADDRESS shall be reported.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and on-line state, and check it returns E_OK.
    3: Call the J1939Rm_CancelRequestTimeout().
    4: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_ADDRESS.
    5: Call the J1939Rm_DeInit().
    6: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.    
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00069.invalid_destAddress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_CancelRequestTimeout_STATE_OFFLINE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_CancelRequestTimeout_Test/source/application/Tests.c</sourcefile>
      <sourceline>366</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that the J1939Rm shall ignore the timeout cancellation request
       when the module is in J1939RM_STATE_OFFLINE.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and OFFLINE state, and check it returns E_OK.
    3: Call the J1939Rm_CancelRequestTimeout().
    4: Call the J1939Rm_DeInit().
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.    
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939Rm_ComRxIpduCallout_before_Initialization</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_ComRxIpduCallout_Test/source/application/Tests.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that calling J1939Rm_ComRxIpduCallout() before initialization shall shall raise DET.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    no initialization
  
Test Execution: 
    1: Call the J1939Rm_ComRxIpduCallout().
    2: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_UNINIT.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_ComRxIpduCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>
    <specobject>
      <id>TS_J1939Rm_ComRxIpduCallout_Unknown_ID</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_ComRxIpduCallout_Test/source/application/Tests.c</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that if DET reporting is enabled via J1939RmDevErrorDetect,
       the J1939Rm shall check PduId of J1939Rm_ComRxIpduCallout function against the configured IDs,
       and shall report the DET error J1939RM_E_INVALID_PDU_SDU_ID when an unknown ID is provided by the call.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    no initialization
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state.
    3: Call the J1939Rm_ComRxIpduCallout() wit unknown ID.
    4: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
    5: Call J1939Rm_DeInit().
    6: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_ComRxIpduCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_Request_Reception_For_ComUser_Tp_Pdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_CopyTxData_Test/source/application/Tests.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test handling of request for a com pdu configured to be transmitted via J1939Tp.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: Call the J1939Rm_RxIndication() after initialization of J1939RM for RQSTRXPDU.
  4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
  6: Call J1939Rm_Transmit()
  7: VP:
     Check that J1939Rm shall set SA, DA.
  8: VP:
     Check that J1939Rm shall forward the PG to PduR_J1939RmTransmit.
  9: Call J1939Rm_CopyTxData() to acquire the transmit data.
  10: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmCopyTxData.
  11: Call J1939Rm_TpTxConfirmation().
  12: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTpTxConfirmation.
  13: Call J1939Rm_DeInit().
  14: VP:
      Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00006.Set_SA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00006.Set_DA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00006.PduR_J1939RmTransmit.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_COPY_TX_DATA_before_Inialization</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_CopyTxData_Test/source/application/Tests.c</sourcefile>
      <sourceline>166</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_CopyTxData() before initialization,
      leads to calling Det_ReportError with ErrorId corresponding to J1939RM_E_UNINIT.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call J1939Rm_CopyTxData() before initialization.
    2: VP:
       Check that Det_ReportError was called with ErrorId J1939RM_E_UNINIT.
    3: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>718</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_COPY_TX_DATA_info_NULL_PTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_CopyTxData_Test/source/application/Tests.c</sourcefile>
      <sourceline>228</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_CopyTxData() with info equal to NULL_PTR,
      leads to calling Det_ReportError with ErrorId corresponding to J1939RM_E_PARAM_POINTER.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call J1939Rm_CopyTxData() with info equal to NULL_PTR.
    3: VP:
       Check that Det_ReportError was called with ErrorId J1939RM_E_PARAM_POINTER.
  4: Call J1939Rm_DeInit().
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00034.J1939Rm_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_COPY_TX_DATA_availableDataPtr_NULL_PTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_CopyTxData_Test/source/application/Tests.c</sourcefile>
      <sourceline>293</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_CopyTxData() with availableDataPtr equal to NULL_PTR,
      leads to calling Det_ReportError with ErrorId corresponding to J1939RM_E_PARAM_POINTER.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call J1939Rm_CopyTxData() with availableDataPtr equal to NULL_PTR.
    3: VP:
       Check that Det_ReportError was called with ErrorId J1939RM_E_PARAM_POINTER.
  4: Call J1939Rm_DeInit().
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00034.J1939Rm_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_COPY_TX_DATA_Wrong_ID</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_CopyTxData_Test/source/application/Tests.c</sourcefile>
      <sourceline>360</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that calling J1939Rm_CopyTxData() with a wrong ID,
       J1939Rm shall raise Det_ReportError with ErrorId corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_CopyTxData() with a wrong ID.
    3: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
    4: Call the J1939Rm_DeInit.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.    
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_CHECK_DEINIT_before_Initialization</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_DeInit_Test/source/application/Tests.c</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that when J1939Rm_DeInit() is called before initialization,
      J1939Rm shall call Det_ReportError with ErrorId corresponding to J1939RM_E_UNINIT.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm is not initialized.
  
Test Execution: 
  1: Call the J1939Rm_DeInit() before initialization to the module.
  2: VP:
     Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_UNINIT.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_DeInit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_CHECK_DEINIT_uninitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_DeInit_Test/source/application/Tests.c</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that A call to J1939Rm_DeInit sets the J1939 Request Manager back to the uninitialized state.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
	2: Call the J1939Rm_DeInit().
    3: Call the J1939Rm_SetState with channel 0 and ONLINE state.
    4: VP:
       Check that Det_ReportError called with ErrorId corresponding to J1939RM_E_UNINIT.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939Rm_PduRTpCopyRxData</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Dummy_API_Test/source/application/Tests.c</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_PduRTpCopyRxData()
	    leads to calling Det_ReportError with ErrorId corresponding to J1939RM_E_INVALID_CALL.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
  1: Call J1939Rm_PduRTpCopyRxData() .
  2: VP:
	   Check that Det_ReportError was called with ErrorId J1939RM_E_INVALID_CALL.
	3: VP:
     Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB._Invalid_Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>
    <specobject>
      <id>TS_J1939Rm_PduRTpStartOfReception</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Dummy_API_Test/source/application/Tests.c</sourcefile>
      <sourceline>88</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_PduRTpStartOfReception()
      leads to calling Det_ReportError with ErrorId corresponding to J1939RM_E_INVALID_CALL.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
  1: Call J1939Rm_PduRTpStartOfReception() .
  2: VP:
     Check that Det_ReportError was called with ErrorId J1939RM_E_INVALID_CALL.
  3: VP:
     Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB._Invalid_Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>
    <specobject>
      <id>TS_J1939Rm_PduRTpRxIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Dummy_API_Test/source/application/Tests.c</sourcefile>
      <sourceline>138</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_PduRTpRxIndication()
      leads to calling Det_ReportError with ErrorId corresponding to J1939RM_E_INVALID_CALL.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
  1: Call J1939Rm_PduRTpRxIndication() .
  2: VP:
     Check that Det_ReportError was called with ErrorId J1939RM_E_INVALID_CALL.
  3: VP:
     Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB._Invalid_Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_GET_VERSION_INFO</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_GetVersionInfo_Test/source/application/Tests.c</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Rm_GetVersionInfo() shall read out version information of the module.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Nm_GetVersionInfo().
    3: VP:
       Check the vendorID shall be set to J1939RM_VENDOR_ID.
    4: VP:
       Check the moduleID shall be set to J1939RM_MODULE_ID.
    5: VP:
       Check the sw_major_version shall be set to J1939RM_SW_MAJOR_VERSION.
    6: VP:
       Check the sw_minor_version shall be set to J1939RM_SW_MINOR_VERSION.
    7: VP:
       Check the sw_patch_version shall be set to J1939RM_SW_PATCH_VERSION.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_GET_VERSION_INFO_Null_Pointer</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_GetVersionInfo_Test/source/application/Tests.c</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that if DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
	  shall check pointer parameters of J1939Rm_GetVersionInfo, and shall report the DET error
	  J1939RM_E_PARAM_POINTER when a NULL pointer is provided by the call.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Nm_GetVersionInfo() with Null_Pointer.
	3: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_PARAM_POINTER.
    4: Call the J1939Rm_DeInit().
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.    
	
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00034.J1939Rm_GetVersionInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_CHECK_INIT_multiple_Initialization</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that calling J1939Rm_Init() sets the J1939 Request Manager to the initialized state.
      -Test that When J1939Rm_Init is called in initialized state,
       the J1939 Request Manager shall not re-initialize its internal variables,
       It shall instead call Det_ReportError with the error code J1939RM_E_REINIT if DET reporting is enabled.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    multiple initialization
  
Test Execution: 
    1: Call the J1939Rm_Init() with value zero twice.
    2: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_REINIT.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_REINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00012.InitializedState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_CHECK_INIT_WRONG_PLATFORM_SIG</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
        This tests that J1939Rm reacts correctly to an attempt to initialize it with a structure that has wrong platform signature
    &lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
         01: Call J1939Rm_Init() with an invalid initialization structure
         02: Check to see that det error has been reported
         03: Call Deinit

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_CHECK_INIT_WRONG_LCFG_SIG</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>143</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
     &lt;para&gt;
         This tests that J1939Rm reacts correctly to an attempt to initialize it with a structure that has wrong signatures
     &lt;/para&gt;
 
Test Object: None.
Test Precondition: 
 
Test Execution: 
          01: Call J1939Rm_Init() with an invalid initialization structure
          02: Check to see that det error has been reported
          03: Call Deinit
 
Test Input: 
 
Test Output: 
 </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_CHECK_INIT_WRONG_CFG_SIG</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>188</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
        This tests that J1939Rm reacts correctly to an attempt to initialize it with a structure that has wrong signatures
    &lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
         01: Call J1939Rm_Init() with an invalid initialization structure
         02: Check to see that det error has been reported
         03: Call Deinit

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_CHECK_INIT_WRONG_PUBLIC_SIG</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>235</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
         This tests that j1939RM reacts correctly to an attempt to initialize it with a structure that has wrong signatures
    &lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
         01: Call J1939Rm_Init() with an invalid initialization structure
         02: Check to see that det error has been reported
         03: Call Deinit

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_CHECK_INIT_INIT_NULL_PTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>280</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
         This tests that j1939RM reacts correctly to an attempt to initialize it with a structure that has wrong signatures
    &lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
         01: Call J1939Rm_Init() NULL PTR
         02: Check to see that det error has been reported
         03: Call Deinit

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_CHECK_PBCFG_INIT_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Init_Test_Pbcfg/source/application/Tests.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test the call of J1939Rm_Init() with a valid value, shall initialize the module successfully
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Rm is not initialized using pbcfgm

Test Execution: 
    1: Call the J1939Rm_Init() with valid value to initialize the module.
    2: Check that module didn't report any DET .
    3: Call the J1939Rm_Shutdown() .

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_CHECK_PBCFG_INIT_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Init_Test_Pbcfg/source/application/Tests.c</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
       check det error after faulty initialization
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939RM is initialized with configuration that has faulty signatures

Test Execution: 
    1: Call the J1939Rm_Init() with valid value to initialize the module.
    2: Check that module call Det_ReportError ..

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_CHECK_PBCFG_INIT_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Init_Test_Pbcfg/source/application/Tests.c</sourcefile>
      <sourceline>108</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Rm_Init() called with NULL pointer gets config from PBCFGM
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Rm is not initialized.

Test Execution: 
    1: Call the J1939Rm_Init() with NULL pointer
    2: Check that det errors have been signaled due to no initialization of pbcfgM.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_CHECK_PBCFG_INIT_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Init_Test_Pbcfg/source/application/Tests.c</sourcefile>
      <sourceline>148</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test that J1939Rm_Init() called with null pointer and it still received a valid configuration from pbcfgmanager
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Rm is not initialized.

Test Execution: 
    1: Call the J1939Rm_Init() with good config
    2: Check that det errors have not been signaled 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_NO_DEV_NULL_PTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Init_Test_no_dev/source/application/Tests.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Test the call of J1939Rm_Init() with a valid value, shall initialize the module successfully
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
    J1939Rm is not initialized using pbcfgm

Test Execution: 
    1: Call the J1939Rm_Init() with valid value to initialize the module.
    2: Check that module didn't report any DET .
    3: Call the J1939Rm_Shutdown() .

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_MAINFUNCTION</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_MainFunction_Test/source/application/Tests.c</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that when J1939Rm_MainFunction() is called before initialization,
      J1939Rm shall call Det_ReportError with ErrorId corresponding to J1939RM_E_UNINIT.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_MainFunction() before initialization to the module.
    2: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_UNINIT.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_MainFunction</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_ACKM_Queue_Overflow</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Queue_Test/source/application/Tests.c</sourcefile>
      <sourceline>69</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test the overflow scenario for TXPG_ACKM queue by verifying that the queue will
      store at index zero after reaching last element in the queue, when the queue is not full.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    -J1939Rm should be in ONLINE state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 and on-line state, and check it returns E_OK.
    3: Initialize the PduInfo and CanId
    4: Call J1939Rm_RxIndication() requesting for a non-configured PGN, which will enqueue ACK_NEGATIVE
       in J1939Rm_Enqueue_TXPG_ACKM queue and also verify that EcuC_GetMetaDataCanId is called.
    5: Repeat steps 3-4 until maximum queue size is reached
    6: Call J1939Rm_MainFunction to Dequeue the ACKQueue from Queue front
    7: VP: Check that EcuC_SetMetaDataCanId is called
    8: VP: Check that PduR_J1939RmTransmit is called with the Dequeued Element
    9: J1939Rm_TxConfirmation is provided
    10: Repeat steps 6 to 9 until 7 elements are read from the queue
    11: Add 2 more elements to the Queue to verify the overflow
    12: VP: Check that the Queues are rearranged based on priority and remaining
        queue elements are dequeued
    13: Call the J1939Rm_DeInit().
    14:VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00018.queueing_Ack_PG</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RQSTQueue_InValidElements_NotSending</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Queue_Test/source/application/Tests.c</sourcefile>
      <sourceline>346</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test if the node goes to offline state, all user's requests for this node in the assoicaited RQST queue channel
      will be invalid and must not be transmitted.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with node 0 and on-line state, and check it returns E_OK.
    3: Call J1939Rm_SendRequest to put one more request in the RQST Queue for same node and for different users
    4: Call main function for process requests
    5: Check that PduR_J1939RmTransmit was called to send the firstrequest.
    6: Call TxConfirmation for the first transmitted request.
    7: Set Node 0 in OffLine state
    8: Call main function three times to dequeue the transmitted request and dequeue the rest requests for user id 3.
    9: Set back the node 0 to online state
    10: call main two time to dequeue the requests for user id 1 beacuse it's an old requests for node 0.
    11: check there is no tranmsition activities in progress.
    12: Call J1939Rm_SendRequest to enqueue new request after node went to online state.
    13: Call main function to procced the new request.
    14: Check that PduR_J1939RmTransmit was called to send the request.
    15: Call TxConfirmation for the transmitted request.
    16: Check there is no activites called accidentally.
    17: Call J1939Rm_DeInit to deinit the module.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.QueueHandling_NodeOfflineState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.EB.TransmissionInvalidRequests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RQSTQueue_InValidElements_SwitchOfflineNodes</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Queue_Test/source/application/Tests.c</sourcefile>
      <sourceline>498</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test if we have more than one node and one of thim goes to offline,
      however the other one it's an online,
      in addition check that Normal requests of node 0 not effect the transmition of Normal requests of node 1.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with node 0 and node 1 with on-line state, and check it returns E_OK.
    3: Call J1939Rm_SendRequest() many time for enqueue more one request for two node.
    4: Call J1939Rm_MainFunction to process the transmition.
    5: VP: Check that PduR_J1939RmTransmit to transmit the first request.
    6: J1939Rm_TxConfirmation is provided
    7: Call main function to dequeue the first one and process the next for node 1.
    8: VP: Check that PduR_J1939RmTransmit to transmit the first request.
    9: J1939Rm_TxConfirmation is provided
    10: Set node 1 to offline and keep node 0 as online.
    11: Call main function to deque element 2 and trying to send element 3 of node 1
    but it Failed to send element 3 beacuse it's node is offline and this elment will be dequed.
    12: Call main function to send element 4
    13: Check that PduR_J1939RmTransmit to transmit the request.
    14: Set node 0 to offline and set back the node 1 to online state.
    15: Get confirmation of element 4 after calling main function.
    16: Call main function to process request element 5 and 6 of node 0, but it failed to sed them
    17: check there is no transmition activites has been in progress 
    18: Call the J1939Rm_DeInit().
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.QueueHandling_NodeOfflineState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.EB.TransmissionInvalidRequests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_ACKQueue_InValidElements_NotSending</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Queue_Test/source/application/Tests.c</sourcefile>
      <sourceline>648</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
       Test if the node goes to offline state, all user's ACK requests for this node in the assoicaited ACK queue channel
       will be invalid and must not be transmitted.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    -J1939Rm should be in ONLINE state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with node 0 and on-line state, and check it returns E_OK.
    3: Call J1939Rm_SendAck to put one more request in the ACK Queue for same node and for different users
    4: Call main function for process requests
    5: Check that PduR_J1939RmTransmit was called to send the firstrequest.
    6: Call TxConfirmation for the first transmitted request.
    7: Set Node 0 in OffLine state
    8: Call main function three many to dequeue the transmitted request and dequeue the rest requests for user id 3.
    9: Set back the node 0 to online state
    10: check there is no tranmsition activities in progress.
    11: Call J1939Rm_SendAck to enqueue new request after node went to online state.
    12: Call main function to procced the new request.
    13: Check that PduR_J1939RmTransmit was called to send the request.
    14: Call TxConfirmation for the transmitted request.
    15: Check there is no activites called accidentally.
    16: Call J1939Rm_DeInit to deinit the module.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.QueueHandling_NodeOfflineState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.EB.TransmissionInvalidRequests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_ACKQueue_InValidElements_SwitchOfflineNodes</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Queue_Test/source/application/Tests.c</sourcefile>
      <sourceline>785</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test if we have more than one node and one of thim goes to offline,
      however the other one it's an online,
      in addition check that ACK requests of node 0 not effect the transmition of ACK requests of node 1.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: None.
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.QueueHandling_NodeOfflineState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.EB.TransmissionInvalidRequests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>745</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_ACKINDICATION_RTE_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RTE_AckIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Rm_RxIndication(), shall Indication of RTE user 
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in ONLINE state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
	2: Call the Rte_Start()
  3: Call the J1939Rm_SetState with channel 0 and on-line state.
	4: Call the J1939Rm_SendRequest().
	5: Call the J1939Rm_MainFunction()
	6: Module Call EcuC_SetMetaDataCanId
	7: Module Call PduR_J1939RmTransmit
	8: Call the J1939Rm_TxConfirmation()
	9: Call the J1939Rm_MainFunction()
  10: Call the J1939Rm_RxIndication() after initialization of J1939RM for RQSTRXPDU.
	11: Call the J1939Rm_MainFunction
	12: Module Call EcuC_GetMetaDataCanId
	13: VP:
      Check that J1939Rm_AckIndication__RTE0 called with right arguments
	14: Call the J1939Rm_DeInit    
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00028</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00066.RTE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>746</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_REQUEST_INDICATION_RTE_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RTE_RequestIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that when J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request,
      and the requested PGN is configured via J1939RmUserPGN to be forwarded to the RTE,
      the J1939 Request Manager shall call the corresponding service port function.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state.
    3: Call the J1939Rm_RxIndication() after initialization of J1939RM for RQSTRXPDU.
    4: Call the J1939Rm_MainFunction
    5: Module Call EcuC_GetMetaDataCanId
    6: VP:
       Check that J1939Rm_App_RequestIndication__RTE0 called with right arguments
    7: Call the J1939Rm_DeInit   
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>747</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_RTE_SendAck_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RTE_SendAck_Test/source/application/Tests.c</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test J1939Rm_SendAck() through configured RTE user 
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in off-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
	2: Call the Rte_Start()
    3: Call the J1939Rm_SetState with channel 0 and on-line state.
	4: 4: Call the J1939Rm_SendAck() through configured RTE user..
	5: Call the J1939Rm_MainFunction()
	6: Module Call EcuC_SetMetaDataCanId
	7: Module Call PduR_J1939RmTransmit
	8: Call the J1939Rm_TxConfirmation()
  9: Call the J1939Rm_MainFunction() to make sure nothing pending.
	10: Call the J1939Rm_DeInit    
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00009.RTE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>748</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_RTE_SendRequest_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RTE_SendRequest_Test/source/application/Tests.c</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test J1939Rm_SendRequest() through configured RTE user 
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    -J1939Rm should be in ONLINE state.
	-RTE user is configured.
  
Test Execution: 
	1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
	2: Call the Rte_Start()
	3: Call the J1939Rm_SetState with channel 0 and on-line state.
	4: Call the J1939Rm_SendRequest() through configured RTE user.
	5: Call the J1939Rm_MainFunction()
	6: Module Call EcuC_SetMetaDataCanId
	7: Module Call PduR_J1939RmTransmit
	8: Call the J1939Rm_TxConfirmation()
	9: Call the J1939Rm_DeInit    
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00016.RTE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>749</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_RTE_SendRequest_Compile</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RTE_SendRequest_Test_compile/source/application/Tests.c</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test J1939Rm_SendRequest() through configured RTE user 
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    -J1939Rm should be in ONLINE state.
	-RTE user is configured.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
	2: Call the Rte_Start()
    3: Call the J1939Rm_SetState with channel 0 and on-line state.
	4: 4: Call the J1939Rm_SendRequest() through configured RTE user..
	5: Call the J1939Rm_MainFunction()
	6: Module Call EcuC_SetMetaDataCanId
	7: Module Call PduR_J1939RmTransmit
	8: Call the J1939Rm_TxConfirmation()
	9: Call the J1939Rm_DeInit    
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00016.RTE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>750</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_RTE_TimeoutSupervision</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RTE_TimeoutSupervision_Test/source/application/Tests.c</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that if the timeout supervision for a request reaches 1.25s,
       the J1939Rm shall call the &lt;User&gt;_RequestTimeoutIndication corresponding to the userId parameter of the initial J1939Rm_SendRequest.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    -J1939Rm should be in ONLINE state.
	-RTE user is configured.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the Rte_Start().
	3: VP:
       Call the J1939Rm_SetState with channel 0 and on-line state, and check it returns E_OK.
	4: VP:
       Call the J1939Rm_SendRequest() through configured RTE user, and check it returns E_OK.
	5: Call the J1939Rm_MainFunction() to handle the transmission of the request.
	6: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
	7: VP:
       Check that PduR_J1939RmTransmit was called to send the request.
	8: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    9: Call the J1939Rm_MainFunction() to start handling Timeout Supervision.
   10: Call the J1939Rm_MainFunction() for more than 12 times to guarantee that 1.25 s has exceeded.
   11: VP:
       Check thatJ1939Rm_App_RequestIndication__RTE0 was called  after 1.25s, with correct parameters.
   12: Call the J1939Rm_DeInit().
   13:VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>751</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RTE_TimeoutSupervision_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RTE_TimeoutSupervision_Test/source/application/Tests.c</sourcefile>
      <sourceline>165</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that when a CDD or an application SW-C calls J1939Rm_CancelRequestTimeout,
       the timeout supervision of the request is stopped.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    -J1939Rm should be in ONLINE state.
	-RTE user is configured.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
	2: VP:
       Call the J1939Rm_SetState with channel 0 and on-line state, and check it returns E_OK.
	3: VP:
       Call the J1939Rm_SendRequest() through configured RTE user, and check it returns E_OK.
	4: Call the J1939Rm_MainFunction() to handle the transmission of the request.
	5: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
	6: VP:
       Check that PduR_J1939RmTransmit was called to send the request.
	7: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    8: Call the J1939Rm_MainFunction() to start handling Timeout Supervision.
	9: VP:
       Call the J1939Rm_CancelRequestTimeout() through RTE user, and check it returns E_OK.
   10: Call the J1939Rm_MainFunction() for more than 12 times to guarantee that 1.25 s has exceeded.
   11: VP:
       Check thatJ1939Rm_App_RequestIndication__RTE0 was not called  after 1.25s.
   12: Call the J1939Rm_DeInit().
   13:VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00029.J1939Rm_CancelRequestTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00024.SendRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>752</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RTE_TimeoutSupervision_OfflineState</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RTE_TimeoutSupervision_Test/source/application/Tests.c</sourcefile>
      <sourceline>276</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that if the timeout supervision for a request reaches 1.25s,
      and node went to offline before that,
      so the J1939Rm shall not perform callout of the user in this case.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    -J1939Rm should be in ONLINE state.
  -RTE user is configured.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: VP:
       Call the J1939Rm_SetState with channel 0 and on-line state, and check it returns E_OK.
  3: VP:
       Call the J1939Rm_SendRequest() through configured RTE user and set checkTimeout to true,
       and check it returns E_OK.
  4: Call the J1939Rm_MainFunction() to handle the transmission of the request.
  5: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
  6: VP:
       Check that PduR_J1939RmTransmit was called to send the request.
  7: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
  8:Call the J1939Rm_MainFunction() to start handling Timeout Supervision.
  9: set node to offline state .
  10: Call the J1939Rm_MainFunction() for more than 12 times to guarantee that 1.25 s has exceeded.
  11: Call the J1939Rm_DeInit().
  12:VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>753</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RTE_TimeoutSupervision_NotQueued</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RTE_TimeoutSupervision_Test/source/application/Tests.c</sourcefile>
      <sourceline>377</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test if the Node channel goes to offline after sending the request and before calling main function,
       the J1939Rm shall not enqueue the request in TSV Queue.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    -J1939Rm should be in ONLINE state.
  -RTE user is configured.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: VP:
       Call the J1939Rm_SetState with channel 0 and on-line state, and check it returns E_OK.
  3: VP:
       Call the J1939Rm_SendRequest() through configured RTE user, and check it returns E_OK.
  4: Call the J1939Rm_MainFunction() to handle the transmission of the request.
  5: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
  6: VP:
       Check that PduR_J1939RmTransmit was called to send the request.
  7: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
  8: Set node to offline state.
  9: Call the J1939Rm_MainFunction() to start handling Timeout Supervision.
  10: Call the J1939Rm_MainFunction() for more than 12 times to guarantee that 1.25 s has exceeded.
  11: Call the J1939Rm_DeInit().
  12:VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>754</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_TRANSMIT_EMPTY_QUEUE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
     -Test that when calling J1939Rm_Transmit API before any request is forwarded to Com,
      it should return E_NOT_OK.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: VP:
     Call J1939Rm_Transmit() before any Request is forwarded to Com module,
     and check it return E_NOT_OK.
  4: Call J1939Rm_DeInit().
  5: VP:
      Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>755</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_Request_Reception_Different_UpperComIPduId</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>138</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
     -Test that when J1939Rm_Transmit is called with Id different
      than the Id configured for UpperComIPduId of the requested PGN,
      PduR_J1939RmTransmit should not be called
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: Call the J1939Rm_RxIndication() after initialization of J1939RM for RQSTRXPDU.
  4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
  6: Call J1939Rm_Transmit().
  7: Call J1939Rm_DeInit().
  8: VP:
      Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>756</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_Request_Reception_ComUser_Normal_Pdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>235</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
     -Test handling of request for a com pdu configured to be transmitted via CanIf (Normal Pdu).
	 -Test that when J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request,
      and the requested PGN is configured via J1939RmUserPGN to be handled via COM,
      the J1939 Request Manager shall call Com_TriggerIPDUSend with the PduId of the transmitted COM I-PDU referenced by J1939RmUpperComIPdu.
	 -Test that when J1939Rm_TxConfirmation is called by the PDU Router for a PDU that is triggered via J1939Rm_Transmit,
      the J1939 Request Manager shall forward the call to PduR_J1939RmTxConfirmation.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: Call the J1939Rm_RxIndication() after initialization of J1939RM for RQSTRXPDU.
  4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
  6: Call J1939Rm_Transmit()
  7: VP:
     Check that J1939Rm shall call EcuC_SetMetaDataCanId to set the MetaData
  8: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTransmit.
  9: Call J1939Rm_TxConfirmation().
  10: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTxConfirmation.
  11: Call J1939Rm_DeInit().
  12: VP:
      Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00006.PduR_J1939RmTransmit.Interface_Path</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>757</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_Request_Reception_PduR_Return_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>365</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
     -Test that J1939Rm_Transmit API should return E_NOT_OK when PduR_J1939RmTransmit return E_NOT_OK.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: Call the J1939Rm_RxIndication() after initialization of J1939RM for RQSTRXPDU.
  4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
  6: Call J1939Rm_Transmit() and check it returned E_NOT_OK as the PduR_J1939RmTransmit returned E_NOT_OK.
  7: VP:
     Check that J1939Rm shall call EcuC_SetMetaDataCanId to set the MetaData
  8: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTransmit.
  9: Call J1939Rm_DeInit().
  10: set RetVal of PduR_J1939RmTransmit to E_OK again.
  10: VP:
      Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>758</internalId></specobject>
    <specobject>
      <id>TS_J1939Rm_Transmit_INVALID_METADATA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>482</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test the reporting of the DET error J1939RM_E_INVALID_METADATA_HANDLE
      if EcuC_SetMetaDataCanId returned E_NOT_OK if case of ACK receiption.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: Call the J1939Rm_RxIndication() after initialization of J1939RM for RQSTRXPDU.
  4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
  6: Call J1939Rm_Transmit()
  7: VP:
     Check that J1939Rm shall call EcuC_SetMetaDataCanId to set the MetaData
  8: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_METADATA_HANDLE.
  09: Call J1939Rm_DeInit().
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Invalid_MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>759</internalId></specobject>
    <specobject>
      <id>TS_J1939Rm_Transmit_INVALID_METADATA_Tp_Path</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>592</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test the reporting of the DET error J1939RM_E_INVALID_METADATA_HANDLE
      if EcuC_SetMetaDataCanId returned E_NOT_OK if case of ACK receiption.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: Call the J1939Rm_RxIndication() after initialization of J1939RM for RQSTRXPDU.
  4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
  6: Call J1939Rm_Transmit()
  7: VP:
     Check that J1939Rm shall call EcuC_SetMetaDataCanId to set the MetaData
  8: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_METADATA_HANDLE.
  09: Call J1939Rm_DeInit().
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Invalid_MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>760</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_Request_Reception_ComUser_Tp_Pdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>712</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
     -Test handling of request for a com pdu configured to be transmitted via J1939Tp (Tp Pdu).
	 -Test that when J1939Rm_CopyTxData is called by the PDU Router,
      the J1939 Request Manager shall forward the call to PduR_J1939RmCopyTxData.
	 -Test that when J1939Rm_TpTxConfirmation is called by the PDU Router,
      the J1939 Request Manager shall forward the call to PduR_J1939RmTpTxConfirmation.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: Call the J1939Rm_RxIndication() after initialization of J1939RM for RQSTRXPDU.
  4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
  6: Call J1939Rm_Transmit()
  7: VP:
     Check that J1939Rm shall set MetaData for SA, DA , and priority.
  8: VP:
     Check that J1939Rm shall forward the PG to PduR_J1939RmTransmit.
  9: Call J1939Rm_CopyTxData() to acquire the transmit data and check that it returns BUFREQ_OK.
  10: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmCopyTxData.
  11: Call J1939Rm_TpTxConfirmation().
  12: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTpTxConfirmation.
  13: Call J1939Rm_DeInit().
  14: VP:
      Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>761</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_Request_Reception_ComUser_Normal_Pdu_Global_DA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>881</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
     Test accepting of requests addressed to the whole network (global DA) for a com pdu configured to be transmitted via CanIf (Normal Pdu).
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: Call the J1939Rm_RxIndication() after initialization of J1939RM for RQSTRXPDU.
  4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
  6: Call J1939Rm_Transmit()
  7: VP:
     Check that J1939Rm shall call EcuC_SetMetaDataCanId to set the MetaData
  8: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTransmit.
  9: Call J1939Rm_TxConfirmation().
  10: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTxConfirmation.
  11: Call J1939Rm_DeInit().
  12: VP:
      Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00007.global_DA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>762</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_Request_Reception_ComUser_Tp_Pdu_Global_DA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>1007</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
     Test accepting of requests addressed to the whole network (global DA) for a com pdu configured to be transmitted via J1939Tp (Tp Pdu).
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: Call the J1939Rm_RxIndication() after initialization of J1939RM for RQSTRXPDU.
  4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
  6: Call J1939Rm_Transmit()
  7: VP:
     Check that J1939Rm shall set MetaData for SA, DA , and priority.
  8: VP:
     Check that J1939Rm shall forward the PG to PduR_J1939RmTransmit.
  9: Call J1939Rm_CopyTxData() to acquire the transmit data and check that it returns BUFREQ_OK.
  10: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmCopyTxData.
  11: Call J1939Rm_TpTxConfirmation().
  12: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTpTxConfirmation.
  13: Call J1939Rm_DeInit().
  14: VP:
      Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00007.global_DA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>763</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_Request_Reception_COM_RQST_QUEUE_FULL</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>1163</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
	 Test that if the requested PGN is configured for handling via COM,
	 J1939Rm shall store the received requests in a queue,
	 and the request will not be stored if the queue is full.
	&lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: Call the J1939Rm_RxIndication() for request of a com pdu configured to be transmitted via CanIf (Normal Pdu).
  4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
  6: Call the J1939Rm_RxIndication() for request of a com pdu configured to be transmitted via CanIf (Normal Pdu) to be stored in the queue.
  7: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  8: Call the J1939Rm_RxIndication() for request of a com pdu configured to be transmitted via CanIf (Normal Pdu).
  9: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  10: Call J1939Rm_Transmit() for the first request.
  11: VP:
      Check that J1939Rm shall call EcuC_SetMetaDataCanId to set the MetaData.
  12: VP:
      Check that J1939Rm shall forward the PG to PduR_J1939RmTransmit.
  13: Call J1939Rm_TxConfirmation().
  14: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTxConfirmation.
  15: Call J1939Rm_MainFunction() to handle the second request.
  16: VP:
      Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend for the second request.
  17: Call J1939Rm_Transmit() for the second request.
  18: VP:
      Check that J1939Rm shall call EcuC_SetMetaDataCanId to set the MetaData.
  19: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTransmit.
  20: Call J1939Rm_TxConfirmation().
  21: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTxConfirmation.
  22: Call J1939Rm_MainFunction() to handle the third request.
  23: Call J1939Rm_DeInit().
  24: VP:
      Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>764</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_Request_Reception_ComUser_Three_Requests</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>1384</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
	 Test that if the requested PGN is configured for handling via COM,
	 J1939Rm shall store the received requests in a queue.
	&lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: Call the J1939Rm_RxIndication() for request of a com pdu configured to be transmitted via J1939Tp (Tp Pdu).
  4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
  6: Call the J1939Rm_RxIndication() for request of a com pdu configured to be transmitted via J1939Tp (Tp Pdu) to be stored in the queue.
  7: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  8: Call the J1939Rm_RxIndication() for request of a com pdu configured to be transmitted via CanIf (Normal Pdu).
  9: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  10: Call J1939Rm_Transmit() for the first request.
  11: VP:
     Check that J1939Rm shall set MetaData for SA, DA , and priority.
  12: VP:
     Check that J1939Rm shall forward the PG to PduR_J1939RmTransmit.
  13: Call J1939Rm_CopyTxData() to acquire the transmit data.
  14:  VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmCopyTxData and check that it returns BUFREQ_OK.
  15: Call J1939Rm_TpTxConfirmation().
  16: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTpTxConfirmation.
  17: Call J1939Rm_MainFunction() to handle the first request.
  18: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend for the first request.
  19: Call J1939Rm_Transmit() for the third request.
  20: VP:
     Check that J1939Rm shall call EcuC_SetMetaDataCanId to set the MetaData
  21: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTransmit.
  22: Call J1939Rm_TxConfirmation().
  23: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTxConfirmation.
  24: Call J1939Rm_MainFunction() to handle the second request.
  25: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend for the third request.
  26: Call J1939Rm_Transmit() for the second request.
  27: VP:
     Check that J1939Rm shall set MetaData for SA, DA , and priority.
  28: VP:
     Check that J1939Rm shall forward the PG to PduR_J1939RmTransmit.
  29: Call J1939Rm_CopyTxData() to acquire the transmit data and check that it returns BUFREQ_OK.
  30:  VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmCopyTxData.
  31: Call J1939Rm_TpTxConfirmation().
  32: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTpTxConfirmation.
  33: Call J1939Rm_DeInit().
  34: VP:
      Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>765</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_Request_Reception_ComUser_Two_Requests</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>1685</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
	 Test that if the requested PGN is configured for handling via COM,
	 J1939Rm shall store the received requests in a queue.
	&lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: Call the J1939Rm_RxIndication() for request of a com pdu configured to be transmitted via J1939Tp (Tp Pdu).
  4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
  6: Call the J1939Rm_RxIndication() for request of a com pdu configured to be transmitted via CanIf (Normal Pdu).
  7: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  8: Call J1939Rm_Transmit() for the first request.
  9: VP:
     Check that J1939Rm shall set MetaData for SA, DA , and priority.
  10: VP:
     Check that J1939Rm shall forward the PG to PduR_J1939RmTransmit.
  11: Call J1939Rm_CopyTxData() to acquire the transmit data and check that it returns BUFREQ_OK.
  12: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmCopyTxData.
  13: Call J1939Rm_TpTxConfirmation().
  14: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTpTxConfirmation.
  15: Call J1939Rm_MainFunction() to handle the second request.
  16: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend for the first request.
  17: Call J1939Rm_Transmit() for the second request.
  18: VP:
     Check that J1939Rm shall call EcuC_SetMetaDataCanId to set the MetaData
  19: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTransmit.
  20: Call J1939Rm_TxConfirmation().
  21: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTxConfirmation.
  22: Call J1939Rm_DeInit().
  23: VP:
      Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>766</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_TpTxConfirmation_Called_twice</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>1908</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
     Test accepting of requests addressed to the whole network (global DA) for a com pdu configured to be transmitted via J1939Tp (Tp Pdu).
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: Call the J1939Rm_RxIndication() after initialization of J1939RM for RQSTRXPDU.
  4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
  6: Call J1939Rm_Transmit()
  7: VP:
     Check that J1939Rm shall set MetaData for SA, DA , and priority.
  8: VP:
     Check that J1939Rm shall forward the PG to PduR_J1939RmTransmit.
  9: Call J1939Rm_CopyTxData() to acquire the transmit data and check that it returns BUFREQ_OK.
  10: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmCopyTxData.
  11: Call J1939Rm_TpTxConfirmation().
  12: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTpTxConfirmation.
  13: VP:
      Check that J1939Rm shall report Det when J1939Rm_TpTxConfirmation() is called with wrong Id.  
  14: Call J1939Rm_DeInit().
  15: VP:
      Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00007.global_DA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>767</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_TXCONFIRMATION_BEFORE_J1939RM_TRANSMIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>2074</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
     -Test that when calling J1939Rm_TxConfirmation() before J1939Rm_Transmit() is called,
      Det_ReportError should be called with ErrorId corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: Call the J1939Rm_RxIndication() after initialization of J1939RM for RQSTRXPDU.
  4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
  6: Call J1939Rm_TxConfirmation() before J1939Rm_Transmit() was called.
  7: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
  8: Call J1939Rm_DeInit().
  9: VP:
      Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_TxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>768</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_Request_Reception_For_Two_ComUser_Normal_Pdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>2175</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
     -Test that when receiving two requests to be handled via com,
	 the second is handled in the first main function after the first one is done.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
  1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
  2: Call the J1939Rm_SetState with channel 0 and on-line state.
  3: Call the J1939Rm_RxIndication() after initialization of J1939RM for RQSTRXPDU.
  4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
  5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
  6: Call J1939Rm_Transmit()
  7: VP:
     Check that J1939Rm shall call EcuC_SetMetaDataCanId to set the MetaData
  8: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTransmit.
  9: Call J1939Rm_TxConfirmation().
  10: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTxConfirmation.
  11: Call J1939Rm_DeInit().
  12: VP:
      Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00006.PduR_J1939RmTransmit.Interface_Path</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>769</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_Request_Reception_COM_RQST_Wrong_Order</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>2324</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
     -Test that when receiving two requests to be handled via com,
	  and these two requests are stored in the Com_Rqst_queue,
	  Com_TriggerIPDUSend should have been triggered for the first one only,
	  and if J1939Rm_Transmit was called for the second request that Com_TriggerIPDUSend was not called for it,
	  PduR_J1939RmTransmit will be calle for the second request.
	  and when J1939Rm_Transmit is called for the first request,
	  PduR_J1939RmTransmit will not be called as the J1939RmTxConfirmation is equal to J1939RM_NO_TX.
	  Issue ASCJ1939RM-123
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
   1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
   2: Call the J1939Rm_SetState with channel 0 and on-line state.
   3: Call the J1939Rm_RxIndication() for request of a com pdu configured to be transmitted via CanIf (Normal Pdu).
   4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
   5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
   6: Call the J1939Rm_RxIndication() for request of a com pdu configured to be transmitted via CanIf (Normal Pdu) to be stored in the queue.
   7: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
   8: Call J1939Rm_Transmit() for the second request, stored in the Com_RQST_Queue.
   9: VP:
      Check that J1939Rm shall call EcuC_SetMetaDataCanId to set the MetaData.
  10: VP:
      Check that J1939Rm shall forward the PG to PduR_J1939RmTransmit.
  11: Call J1939Rm_TxConfirmation().
  12: VP:
      Check that J1939Rm shall forward the call to PduR_J1939RmTxConfirmation.
  13: Call J1939Rm_MainFunction() to handle the second request.
  14: VP:
      Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend for the firsr request again.
  15: Call J1939Rm_Transmit() for the second request.
  16: Call J1939Rm_DeInit().
  17: VP:
      Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>770</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_Request_Reception_For_SwitchMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Request_Reception_ComUser_Test/source/application/Tests.c</sourcefile>
      <sourceline>2485</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
     -Test if the node goes to offline state or the destination address of request that queued in Com Queue
      not match the current address of node and there was a Com Trigger request has been raised,
     J1939Rm should not call PduR_J1939RmTransmit when the J1939Rm_Transmit called by PduR
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
   1: Call the J1939Rm_Init() with to initialize the module.
   2: Call the J1939Rm_SetState with channel 0 and on-line state.
   3: Call the J1939Rm_RxIndication() for request of a com pdu configured to be transmitted via CanIf (Normal Pdu).
   4: VP:
     Check that EcuC_GetMetaDataCanId was called to get the MetaData value.
   5: VP:
     Check that the J1939Rm will trigger the transmission via Com_TriggerIPDUSend.
   6: Call the J1939Rm_SetState with channel 0 and off-line state.
   7: Call J1939Rm_SetNodeAddress to change the address of node 0.
   8: Call the J1939Rm_SetState with channel 0 and On-line state.
   9: Call J1939RmTransmit to transmitt ComPdu through the J1939Rm and returns E_NOT_OK.
   10: Call J1939Rm_MainFunction() to handle the request.
   11: Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
   12: Call J1939Rm_DeInit().
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SetNodeAddress_ComRequestsHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>771</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_AC</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>76</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that Requests for the AddressClaimed PG (AC, PGN = 0x0EE00) always go to the J1939 Network Management module.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK
    3: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4: VP:
       Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:
       Check that J1939Nm_RequestIndication is called.
    6: Call J1939Rm_MainFunction() to make sure nothing is pending.
    7: Call the J1939Rm_DeInit.
    8: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00002.J1939Nm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>772</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Channel_Not_Configured_For_Node</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>177</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that Request is received when Node is not configured to channel on which RxPduId is configured,
      RequestIndication will not be called.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 2, NodeId 13 ,and ONLINE state, and check that it returns E_OK,to enable channel 2.
    3: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: Call the J1939Rm_DeInit.
    6: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00002.J1939Nm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>773</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_AC_CH2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>263</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that Requests for the AddressClaimed PG (AC, PGN = 0x0EE00) always go to the J1939 Network Management module.
       "testing that on the second channel".
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in ONLINE state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 1, NodeId 7 ,and ONLINE state, and check that it returns E_OK.
    3: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:Check that J1939Nm_RequestIndication is called.
    6: Call the J1939Rm_DeInit.
    7: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00002.J1939Nm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>774</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_AC_OFFLINE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>343</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that Requests for the AddressClaimed PG (AC, PGN = 0x0EE00) always go to
      the J1939 Network Management module even if in OffLine state.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in off-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 1, NodeId 7 ,and OFFLINE state, and check that it returns E_OK.
    3: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:Check that J1939Nm_RequestIndication is called.
    6: Call the J1939Rm_DeInit.
    7: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>775</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_AC_Not_configured_Node</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>428</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that Requests for the AddressClaimed PG (AC, PGN = 0x0EE00) for not configured node,
      doesn't go to the J1939 Network Management module.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP: Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK
    3: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP: Check that J1939Nm_RequestIndication is called.
    6: Call the J1939Rm_DeInit.
    7: VP: Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00007.configured_addresses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>776</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_AC_Global_DA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>511</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that Requests for the AddressClaimed PG (AC, PGN = 0x0EE00) always go to the J1939 Network Management module
      even when DA equals to 0xFF.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK
    3: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:Check that J1939Nm_RequestIndication is called.
    6: Call the J1939Rm_DeInit.
    7: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00007.global_DA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>777</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_AC_OFFLINE_Global_DA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>593</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that Requests for the AddressClaimed PG (AC, PGN = 0x0EE00) always go to the J1939 Network Management module
      even in the OFFLINE when DA equals to 0xFF.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and OFFLINE state, and check that it returns E_OK
    3: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:Check that J1939Nm_RequestIndication is called.
    6: Call the J1939Rm_DeInit.
    7: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00007.global_DA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>778</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Wrong_PduId</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>674</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_RxIndication with not configured PduId,
      will cause Det_ReportError calling.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK.
    3: Call the J1939Rm_RxIndication() with not configured PduId.
    4: VP:Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
    5: Call the J1939Rm_RxIndication() with INVALID_PDU_ID.
    6: VP:Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
    7: Call the J1939Rm_DeInit.
    8: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_PDU_SDU_ID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>779</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_before_Initialization</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>750</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_RxIndication befoe, will cause Det_ReportError calling.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_RxIndication() without initialization.
    2: VP:Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_UNINIT.
    3: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>780</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_CDD_User</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>807</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939 Request Manager shall call the corresponding &lt;User&gt;_RequestIndication,
      When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request,
      and the requested PGN is configured via J1939RmUserPGN to trigger a CDD.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK.
    3: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:Check that &lt;User&gt;_RequestIndication is called  with correct parameters.
    6: Call the J1939Rm_DeInit.
    7: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00002.CDD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>781</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Request_for_Unknown_PGN_With_Specific_DA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>900</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request,
      and the requested PGN is not configured, and the destination address is not the broadcast address,
      the J1939 Request Manager shall call PduR_J1939RmTransmit to send a negative acknowledgement (NACK).
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK.
    3: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: Call J1939Rm_MainFunction to handle the transmission of negative acknowledgement (NACK).
    6: VP:Check that EcuC_SetMetaDataCanId was called to set the value of MetaData.
    7: VP:Check that PduR_J1939RmTransmit was called to send negative acknowledgement (NACK).
    8: Call the J1939Rm_DeInit.
    9: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00008.RequestedPGN_NotConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>782</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Request_for_Unknown_PGN_With_Global_DA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>992</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request,
      and the requested PGN is not configured, and the destination address is the broadcast address,
      the J1939 Request Manager shall not send NACK.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK.
    3: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: Call J1939Rm_MainFunction to handle the transmission of negative acknowledgement (NACK).
    6: VP:Check that J1939Rm will not send NACK.
    7: Call the J1939Rm_DeInit.
    8: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00008.RequestedPGN_NotConfigured</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>783</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_specific_destination_address_UserJ1939Dcm</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1080</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939 Request Manager shall call  J1939Dcm_RequestIndication,
      When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request and the DA is of specific node,
      and the requested PGN is configured via J1939RmUserPGN to trigger the J1939 Diagnostic Communication Manager.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK.
    3: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4: VP: Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:Check that J1939Dcm_RequestIndication is called  with correct parameters.
    6: Call the J1939Rm_DeInit.
    7: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00002.J1939Dcm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>784</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_specific_destination_address_UserJ1939Dcm_OFFLINE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1163</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939 Request Manager shall not call J1939Dcm_RequestIndication,
      When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request  configured for J1939Dcm while the state of the node is OFFLINE.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and OFFLINE state, and check that it returns E_OK.
    3: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:Check that J1939Dcm_RequestIndication was not called.
    6: Call the J1939Rm_DeInit.
    7: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>785</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Not_configured_Node_UserJ1939Dcm</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1244</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939 Request Manager shall not call J1939Dcm_RequestIndication,
      When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request configured for J1939Dcm while DA is not configured one.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK.
    3: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:Check that J1939Dcm_RequestIndication was not called.
    6: Call the J1939Rm_DeInit.
    7: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00007.configured_addresses</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>786</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Global_address_UserJ1939Dcm</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1325</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939 Request Manager shall call  J1939Dcm_RequestIndication (if enabled),
      When J1939Rm_RxIndication is called by the PDU Router to indicate reception of a request and the DA is global address (0xFF),
      and the requested PGN is configured via J1939RmUserPGN to trigger the J1939 Diagnostic Communication Manager.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK.
    3: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:Check that J1939Dcm_RequestIndication is called  with correct parameters.
    6: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    7: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    8: Call the J1939Rm_DeInit.
    9: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00007.global_DA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00002.J1939Dcm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>787</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Ack_for_configured_UserAckPGN</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1425</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When J1939Rm_RxIndication is called by the PduR to indicate reception of an acknowledgement,
      and the acknowledged PGN is configured via J1939RmUserPGN to trigger a CDD,
      the J1939 Request Manager shall call the corresponding &lt;User&gt;_AckIndication.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK.
    3: Call the J1939Rm_RxIndication() for ACK_RXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:Check that &lt;User&gt;_AckIndication is called.
    6: Call the J1939Rm_DeInit.
    7: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00066.CDD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00027</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>788</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Ack_INVALID_METADATA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1504</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test the reporting of the DET error J1939RM_E_INVALID_METADATA_HANDLE
      if EcuC_GetMetaDataCanId returned E_NOT_OK if case of ACK receiption.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    EcuC_GetMetaDataCanId_Stub.RetVal is set E_NOT_OK.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK.
    3: Call the J1939Rm_RxIndication() for ACK_RXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:Check that Det_ReportError was called  with ErrorId corresponding to J1939RM_E_INVALID_METADATA_HANDLE.
    6: Call the J1939Rm_DeInit.
    7: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Invalid_MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>789</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_RQST_INVALID_METADATA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1583</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test the reporting of the DET error J1939RM_E_INVALID_METADATA_HANDLE
      if EcuC_GetMetaDataCanId returned E_NOT_OK if case of RQST receiption.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    EcuC_GetMetaDataCanId_Stub.RetVal is set E_NOT_OK.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK
    3: Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:Check that Det_ReportError was called  with ErrorId corresponding to J1939RM_E_INVALID_METADATA_HANDLE.
    6: Call the J1939Rm_DeInit.
    7: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Invalid_MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>790</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Ack_With_Wrong_PduId</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1666</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When J1939Rm_RxIndication is called by the PduR to indicate reception of an acknowledgement,
      and the acknowledged PGN is configured via J1939RmUserPGN to trigger a CDD, but the PduId is not configured
      the J1939 Request Manager shall not call &lt;User&gt;_AckIndication, and shall call Det_ReportError with ErrorId 
      corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP: Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK.
    3: Call the J1939Rm_RxIndication() for ACK_RXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:Check that &lt;User&gt;_RequestIndication is not called.
    6: VP:Check that Det_ReportError was called.
    7: Call the J1939Rm_DeInit.
    8: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>791</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Ack_for_configured_UserAckPGN_OFFLINE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1743</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When J1939Rm_RxIndication is called by the PduR to indicate reception of an acknowledgement,
      and the acknowledged PGN is configured via J1939RmUserPGN to trigger a CDD, but in the OFFLINE state.
      the J1939 Request Manager shall not call &lt;User&gt;_AckIndication.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and OFFLINE state.
    3: Call the J1939Rm_RxIndication() for ACK_RXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:Check that &lt;User&gt;_RequestIndication is not called.
    6: Call the J1939Rm_DeInit.
    7: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>792</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Ack_for_Request_stored_in_TSVQueue</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1822</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      - Test that when J1939Rm_RxIndication is called by the PduR to indicate reception of an acknowledgement,
        and the acknowledged PGN matches a pending request (acknowledged PGN, source address, acknowledged address),
        the J1939 Request Manager shall call the &lt;User&gt;_AckIndication
      - Test that when an acknowledgement matching the request is received,
        the timeout supervision of the request is stopped.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
     1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
     2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and OFFLINE state, and check that it returns E_OK.
     3: Call J1939Rm_SendRequest with checkTimeout is TRUE, and check that it returns E_OK.
     4: Call the J1939Rm_MainFunction to handle the transmission of the request.
     5: VP:Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
     6: VP:Check that PduR_J1939RmTransmit was called to send the request.
     7: Call J1939Rm_TxConfirmation to start timeout handling.
     8: Call J1939Rm_MainFunction to start timeout handling.
     9: Call the J1939Rm_RxIndication() for ACK_RXPDU.
    10: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    11: VP:Check that &lt;User&gt;_RequestIndication was called.
    12: Call the J1939Rm_MainFunction() 13 times to grant that 1.3s has passed.
    13: VP: Check that &lt;User&gt;_RequestTimeoutIndication was not called(to make sure that timeout supervision of the request is stopped).
    14: Call the J1939Rm_DeInit.
    15: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00066.CDD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00064.UserAckIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00029.Acknowledgement_Received</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>793</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Ack_for_Not_configured_UserAckPGN</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1951</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When J1939Rm_RxIndication is called by the PduR to indicate reception of an acknowledgement,
      and the acknowledged PGN is not configured via J1939RmUserPGN, and also does not match a pending request.
      the J1939 Request Manager shall not call &lt;User&gt;_AckIndication.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and OFFLINE state.
    3: Call the J1939Rm_RxIndication() for ACK_RXPDU.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: Call the J1939Rm_DeInit.
    6: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00027</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>794</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Ack_with_Invalid_acknowledged_address</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>2018</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When J1939Rm_RxIndication is called by the PduR to indicate reception of an acknowledgement,
      and the acknowledged PGN is configured via J1939RmUserAckPGN, with invalid acknowledged address.
      the J1939 Request Manager shall not call &lt;User&gt;_AckIndication.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and OFFLINE state.
    3: Call the J1939Rm_RxIndication() for ACK_RXPDU with wrong acknowledged address.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: VP:Check that &lt;User&gt;_AckIndication was not called.
    6: Call the J1939Rm_DeInit.
    7: VP: Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00027</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>795</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Ack_with_Invalid_Channel</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>2093</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When J1939Rm_RxIndication is called by the PduR to indicate reception of an acknowledgement,
      and the acknowledged PGN is configured via J1939RmUserPGN, with invalid channel that not include that node.
      the J1939 Request Manager shall not call &lt;User&gt;_AckIndication.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and OFFLINE state.
    3: VP:Call the J1939Rm_SetState with channel 2, NodeId 13 ,and ONLINE state.
    4: Call the J1939Rm_RxIndication() with wrong PduID as invalid channel that not include that node.
    5: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    6: VP:Check that &lt;User&gt;_AckIndication was not called.
    7: Call the J1939Rm_DeInit.
    8: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00027</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>796</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Ack_with_NoAckIndicationFncConfigured</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>2170</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When J1939Rm_RxIndication is called by the PduR to indicate reception of an acknowledgement,
      and the acknowledged PGN is configured via J1939RmUserPGN, with invalid acknowledged address.
      the J1939 Request Manager shall not call &lt;User&gt;_AckIndication.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 2, NodeId 13 ,and ONLINE state.
    3: Call the J1939Rm_RxIndication() with Rx Ack PduID for channel 2.
    4: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    5: Call the J1939Rm_DeInit.
    6: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00027</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>797</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Ack_TSV_different_order</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>2240</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that when J1939Rm_RxIndication is called twice by the PduR to indicate reception of an acknowledgement,
       and the acknowledged PGN matches a pending requests (acknowledged PGN, source address, acknowledged address),
       the J1939 Request Manager shall not call the &lt;User&gt;_AckIndication as it's not configured
      -The order or received Ack is different than the order of the queued requests in TSV queue
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 2, NodeId 13 ,and ONLINE state.
    3: Call the J1939Rm_SendRequest for first PGN 0x003300, and Check that it returns E_OK.
    4: Call the J1939Rm_SendRequest for second PGN 0x004400 , and Check that it returns E_OK.
    5: Call the J1939Rm_MainFunction to handle the transmission of the first request.
    6: VP:Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    7: VP:Check that PduR_J1939RmTransmit was called to send the first request with PGN=0x003300.
    8: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    9: Call the J1939Rm_MainFunction() to start handling Timeout Supervision for the first request,
       and handle the transmission of the second request.
    10: VP:Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    11: VP:Check that PduR_J1939RmTransmit was called to send the second request with PGN=0x004400..
    12: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    13: Call the J1939Rm_MainFunction() to start handling Timeout Supervision for the second request,
      and handle the transmission of the second request.
    14: VP:Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    15: VP: Check that PduR_J1939RmTransmit was called to send the second request.
    16: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    17: Call the J1939Rm_RxIndication() of Ack reception of  PGN=0x004400.
    18: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    19: Call the J1939Rm_RxIndication() of Ack reception of  PGN=0x003300.
    20: VP: Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    21: Call the J1939Rm_MainFunction() for more than 125 times to guarantee that 1.25 s has exceeded.
    22: VP:Check that &lt;User&gt;_RequestTimeoutIndication was  called twice after 1.25 s; 
        As No Acknowledgement function configured for that user.
    23 : Call the J1939Rm_DeInit.
    24: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00027</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00066.CDD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00064.UserAckIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00029.Acknowledgement_Received</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>798</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Ack_TSV_same_order</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>2388</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that when J1939Rm_RxIndication is called twice by the PduR to indicate reception of an acknowledgement,
       and the acknowledged PGN matches a pending requests (acknowledged PGN, source address, acknowledged address),
       the J1939 Request Manager shall not call the &lt;User&gt;_AckIndication as it's not configured
      -The order of received Ack is the same as the order of the queued requests in TSV queue.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 2, NodeId 13 ,and ONLINE state.
    3: Call the J1939Rm_SendRequest for first PGN 0x003300, and Check that it returns E_OK.
    4: Call the J1939Rm_SendRequest for second PGN 0x004400 , and Check that it returns E_OK.
    5: Call the J1939Rm_MainFunction to handle the transmission of the first request.
    6: VP:Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    7: VP:Check that PduR_J1939RmTransmit was called to send the first request with PGN=0x003300.
    8: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    9: Call the J1939Rm_MainFunction() to start handling Timeout Supervision for the first request,and handle the transmission of the second request.
    10: VP: Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    11: VP:Check that PduR_J1939RmTransmit was called to send the second request with PGN=0x004400..
    12: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    13: Call the J1939Rm_MainFunction() to start handling Timeout Supervision for the second request,
      and handle the transmission of the second request.
    14: VP:Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    15: VP:Check that PduR_J1939RmTransmit was called to send the second request.
    16: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    17: Call the J1939Rm_RxIndication() of Ack reception of  PGN=0x003300.
    18: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    19: Call the J1939Rm_RxIndication() of Ack reception of  PGN=0x004400.
    20: VP:Check that EcuC_GetMetaDataCanId was called to get the value of MetaData.
    21: Call the J1939Rm_MainFunction() for more than 125 times to guarantee that 1.25 s has exceeded.
    22: VP:Check that &lt;User&gt;_RequestTimeoutIndication was  called twice after 1.25 s; As No Acknowledgement function configured for that user.
    23: Call the J1939Rm_DeInit.
    24: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00027</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00066.CDD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00064.UserAckIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00029.Acknowledgement_Received</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>799</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_NOT_RQST_NOR_ACKM</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>2527</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that nothing should happen when J1939Rm_RxIndication() is called with Data Length doesn't equal 3 bytes -  RQST PG,
      nor 8 bytes - ACKM PG.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK
    3: Call the J1939Rm_RxIndication().
    4: Call the J1939Rm_DeInit.
    5: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>800</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_Null_Pointer</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>2594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that if DET reporting is enabled via J1939RmDevErrorDetect, the J1939 Request Manager
      shall check pointer parameter of J1939Rm_RxIndication, and shall report the DET error
      J1939RM_E_PARAM_POINTER when a NULL pointer is provided by the call.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK
    3: Call the J1939Rm_RxIndication().
    4: VP:Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_PARAM_POINTER.
    5: Call the J1939Rm_DeInit.
    6: VP:Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00034.J1939Rm_RxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>801</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_RX_INDICATION_INVALID_ID</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>2659</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that requests are ignored if EcuGetMetatada returns an invalid Source address value (0xFF or 0xFE are invalid values for SA)
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    module is initialized.
  
Test Execution: 
    1 : Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2 : VP:Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK
    3 : Call the J1939Rm_RxIndication() for RQSTRXPDU.
    4 : VP: Verify RxIndication is called for the NM message
    5 : Call J1939Rm_MainFunction to handle the transmission of negative acknowledgement (NACK).
    6 : Call the J1939Rm_RxIndication() again with wrong Source address : 0xFF.
    7 : Verify RxIndication is NOT called for the NM message
    8 : Call J1939Rm_MainFunction to handle the transmission of negative acknowledgement (NACK).
    9 : Call the J1939Rm_RxIndication() again with wrong Source address : 0xFE
    10: Verify RxIndication is NOT called for the NM message
    11: Call the J1939Rm_DeInit.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00002.J1939Nm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>802</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_SEND_ACKNOWLEDGMENT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendAck_Test/source/application/Tests.c</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that Transmission requests for the Acknowledgement PG shall be queued when
       a previous transmission of this PG is still pending, and that J1939 Request Manager shall use
       the J1939Rm_TxConfirmation of the associated I-PDU to trigger transmission of pending Acknowledgement PGs.
      -Test that when calling J1939Rm_SendAck,
       the J1939Rm shall call PduR_J1939RmTransmit to send the required acknowledgement.
      -Test that transmission requests for the Acknowledgement PG shall be queued when
       a previous transmission of this PG is still pending.
      -Test that the J1939Rm shall use the J1939Rm_TxConfirmation of the associated I-PDU
       to trigger transmission of pending Acknowledgement PGs.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and on-line state, and check it returns E_OK.
    3: Call the J1939Rm_SendAck() twice to be buffered in queue.
    4: Call the J1939Rm_MainFunction() to handle the transmission of the first ack.
    5: VP:
       Check that EcuC_SetMetaDataCanId and PduR_J1939RmTransmit were called to send the first ack.
    6: Call the J1939Rm_TxConfirmation to trigger transmission of pending Acknowledgement PGs.
    7: Call the J1939Rm_MainFunction() to handle the transmission of the second ack.
    8: VP:
       Check that EcuC_SetMetaDataCanId and PduR_J1939RmTransmit were called to send the second ack.
    9: Call the J1939Rm_DeInit().
    10:VP:
         Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00009.BSW_CDD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00019</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00018.queueing_Ack_PG</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00056.SendAckAPI</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00059</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>803</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_ACKNOWLEDGMENT_INVALID_ADDRESS</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendAck_Test/source/application/Tests.c</sourcefile>
      <sourceline>163</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that J1939 Request Manager shall reject transmission of an acknowledgement
       by returning E_NOT_OK when the 'ackAddress' is  not in the valid range,
       If DET is enabled via J1939RmDevErrorDetect, the DET error J1939RM_E_INVALID_ADDRESS
       shall be reported.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and on-line state, and check it returns E_OK.
    3: Call the J1939Rm_SendAck() with Invalid ackAddress, and check it returned E_NOT_OK.
    4: Check that the corresponding DET is reported.
    5: Call the J1939Rm_DeInit().
    6:VP:
         Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_ADDRESS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00070.invalid_ackAddress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>804</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_UserId</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendAck_Test/source/application/Tests.c</sourcefile>
      <sourceline>231</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that when J1939Rm_SendAck() is called with wrong userId,
      J1939Rm shall reject transmission of an acknowledgement by returning E_NOT_OK shall,
       and call Det_ReportError with ErrorId corresponding to J1939RM_E_INVALID_USER if DET is enabled.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and on-line state, and check it returns E_OK.
    3: VP:
       Call the J1939Rm_SendAck() with wrong userId, and check that it returns E_NOT_OK.
    4: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_USER.
    5: Call the J1939Rm_DeInit().
    6: VP:
         Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_USER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00070.invalid_userId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>805</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_UserId_Channel</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendAck_Test/source/application/Tests.c</sourcefile>
      <sourceline>300</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that when J1939Rm_SendAck() is called with userId not configured for the passed channel,
      J1939Rm shall reject transmission of an acknowledgement by returning E_NOT_OK.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 1 node 2 and on-line state, and check it returns E_OK.
    3: VP:
       Call the J1939Rm_SendAck() with userId not configured for the passed channel, and check that it returns E_NOT_OK.
    4: Call the J1939Rm_MainFunction() to check nothing is pending.
    5: Call the J1939Rm_DeInit().
    6: VP:
         Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00070.invalid_userId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>806</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_Priority</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendAck_Test/source/application/Tests.c</sourcefile>
      <sourceline>367</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that The J1939Rm shall reject transmission of an acknowledgement
      by returning E_NOT_OK when the 'priority' is not in the valid range,
      If DET is enabled via J1939RmDevErrorDetect,
      the DET error J1939RM_E_INVALID_PRIO shall be reported.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and on-line state, and check it returns E_OK.
    3: VP:
       Call the J1939Rm_SendAck() with wrong Priority, and check it returns E_NOT_OK.
    4: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_PRIO.
    5: Call the J1939Rm_DeInit().
    6: VP:
         Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_PRIO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00070.invalid_priority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>807</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_Channel</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendAck_Test/source/application/Tests.c</sourcefile>
      <sourceline>436</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that when J1939Rm_SendAck() is called with wrong Channel,
      J1939Rm shall call Det_ReportError with ErrorId corresponding to J1939RM_E_INVALID_NETWORK_ID.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and on-line state, and check it returns E_OK.
    3: Call the J1939Rm_SendAck() with wrong Channel.
    4: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_NETWORK_ID.
    5: Call the J1939Rm_DeInit().
    6: VP:
         Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_NETWORK_ID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00041.J1939Rm_SendAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>808</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_AckCode</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendAck_Test/source/application/Tests.c</sourcefile>
      <sourceline>503</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Rm shall reject transmission of an acknowledgement by returning E_NOT_OK when the 'ackCode' is not in the valid range,
      If DET is enabled, the DET error J1939RM_E_INVALID_ACK_CODE shall be reported.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and on-line state, and check it returns E_OK.
    3: Call the J1939Rm_SendAck() with wrong AckCode equal to 0x04, and check it returns E_NOT_OK.
    4: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_ACK_CODE.
    5: Call the J1939Rm_DeInit().
    6: VP:
         Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_ACK_CODE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00070.invalid_ackCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>809</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_ACKNOWLEDGMENT_Wrong_AckPGN</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendAck_Test/source/application/Tests.c</sourcefile>
      <sourceline>568</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that the J1939Rm shall reject transmission of an acknowledgement
      by returning E_NOT_OK when the 'ackPgn' is not in the valid range,
      if DET is enabled via J1939RmDevErrorDetect,
      the DET error J1939RM_E_INVALID_PGN shall be reported.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and on-line state, and check it returns E_OK.
    3: VP:
       Call the J1939Rm_SendAck() with wrong AckPGN, and check it returns E_NOT_OK.
    4: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_PGN.
    5: Call the J1939Rm_DeInit().
    6: VP:
         Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00070.invalid_ackPgn</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>810</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_ACKNOWLEDGMENT_before_Initialization</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendAck_Test/source/application/Tests.c</sourcefile>
      <sourceline>637</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that when J1939Rm_SendAck() is called before initialization,
      J1939Rm shall call Det_ReportError with ErrorId corresponding to J1939RM_E_UNINIT.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_SendAck() without calling J1939Rm_Init.
    2: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_UNINIT.
    3: VP:
         Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_SendAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>811</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_ACKNOWLEDGMENT_Full_Queue</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendAck_Test/source/application/Tests.c</sourcefile>
      <sourceline>689</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
       -Test that J1939Rm shall reject transmission of an acknowledgement by returning E_NOT_OK
        when another acknowledgement is pending and the acknowledgement queue is full.
       -Test that the size of Acknowledgement PG queue is determined by J1939RmAckQueueSize.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and on-line state, and check it returns E_OK.
    3: VP:
       Call the J1939Rm_SendAck() 5 times to get the queue full, and check it returns E_OK each time.
    4: VP:
       Call the J1939Rm_SendAck() while the queue is full, and check it returns E_NOT_OK.
    5: Call the J1939Rm_DeInit().
    6: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00018.J1939RmAckQueueSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>812</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_ACKNOWLEDGMENT_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendAck_Test/source/application/Tests.c</sourcefile>
      <sourceline>757</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that if the J1939Rm_TxConfirmation is called with E_NOT_OK,
      the J1939 Request Manager shall flush the Acknowledgement PG queue.
      So if J1939Rm_TxConfirmation() is called, Det_ReportError is called with ErrorId J1939RM_E_INVALID_NETWORK_ID.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and on-line state, and check it returns E_OK.
    3: VP:
       Call the J1939Rm_SendAck() and check it returns E_OK.
    4: Call the J1939Rm_MainFunction() to handle the transmission of the ack.
    5: VP:
       Check that EcuC_SetMetaDataCanId and PduR_J1939RmTransmit were called to send the ack.
    6: Call J1939Rm_TxConfirmation with E_NOT_OK.
    7: Call the J1939Rm_MainFunction() to flush the Acknowledgement PG queue.
    8: Call J1939Rm_TxConfirmation().
    9: VP:
       Check that Det_ReportError was called and PduR_J1939RmTransmit was not called as the Acknowledgement PG queue was flushed.
    10:Call the J1939Rm_DeInit().
    11: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>813</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_ACKNOWLEDGMENT_E_NOT_OK_TxReturn</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendAck_Test/source/application/Tests.c</sourcefile>
      <sourceline>851</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that PduR_J1939RmTransmit should be called again if the first transmission failed.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
    3: Call the J1939Rm_SendAck and Check that it returns E_OK.
    4: Call the J1939Rm_MainFunction to handle the transmission of the request.
    5: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    6: VP:
       Check that PduR_J1939RmTransmit was called to send the request.
    7: Call the J1939Rm_MainFunction() to trigger the transmission again.
    8: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission again.
    9: VP:
       Check that PduR_J1939RmTransmit was called to send the request again.
    10: Call the J1939Rm_DeInit.
    11: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00009.BSW_CDD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>814</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_ACKNOWLEDGMENT_While_OFFLINE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendAck_Test/source/application/Tests.c</sourcefile>
      <sourceline>940</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that during initialization via J1939Rm_Init, the J1939 Request Manager
       assumes the offline state for all nodes on all channels.
      -Test that a call to J1939Rm_SetState sets the state of a node's channel to online or offline.
      -Test that when J1939Rm_SendAck() is called while offline,
      it shall return E_NOT_OK.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SendAck() while offline state and check it returns E_NOT_OK.
    3: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and on-line state, and check it returns E_OK.
    4: VP:
       Call the J1939Rm_SendAck() after changing state to online and check it reutuns E_OK .
    5: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and off-line state, and check it returns E_OK.
    6: VP:
       Call the J1939Rm_SendAck() while offline state and check it returns E_NOT_OK.
    7: Call the J1939Rm_DeInit().
    8: VP:
         Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>815</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_DET_ON_Fifty_ms_TimeSupervision</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_DET_ON/source/application/Tests.c</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_SendRequest() twice within 50ms, shall shall raise DET .
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
    3: Call the J1939Rm_SendRequest ,and Check that it returns E_OK.
    4: Call the J1939Rm_MainFunction to handle the transmission of the request.
    5: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    6: VP:
       Check that PduR_J1939RmTransmit was called to send the request.
    7: Call the J1939Rm_SendRequest again within lesss than 50ms.
    8: VP:
       Check that Det_ReportError was called with ErrorId J1939RM_E_TimeoutSupervision_50MS.
    9: Call the J1939Rm_DeInit.
    10: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.Fifty_ms_TimeSupervision</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>816</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_INVALID_ADDRESS</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_DET_ON/source/application/Tests.c</sourcefile>
      <sourceline>168</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that  J1939 Request Manager shall reject transmission of a
      request by returning E_NOT_OK when the 'destAddress' is  not in the valid range,
      If DET is enabled via J1939RmDevErrorDetect, the DET error J1939RM_E_INVALID_ADDRESS
      shall be reported.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    Nothing.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.T.
    3: Call the J1939Rm_SendRequest ,and Check that it returns E_NOT_OK.
    4: VP:
       Check that Det_ReportError was called with ErrorId J1939RM_E_INVALID_ADDRESS.
    5: Call the J1939Rm_DeInit.
    6: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.

  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00067.Invalid_destAddress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>817</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_DET_ON_Module_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_DET_ON/source/application/Tests.c</sourcefile>
      <sourceline>245</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_SendRequest() before initialization shall shall raise DET .
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    Nothing.
  
Test Execution: 
    1: Call the J1939Rm_SendRequest while the the module is uninitialized.
    2: VP:
       Check that Det_ReportError was called with ErrorId J1939RM_E_UNINIT.
    3: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_SendRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>818</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_DET_ON_TimeoutSupervision_1250MS</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_DET_ON/source/application/Tests.c</sourcefile>
      <sourceline>306</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_SendRequest() twice within 1250ms while TimeoutSupervision is enabled,
      shall raise DET with ErrorId J1939RM_E_TimeoutSupervision_1250MS.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
     1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
     2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
     3: Call the J1939Rm_SendRequest ,and Check that it returns E_OK.
     4: Call the J1939Rm_MainFunction to handle the transmission of the request.
     5: VP:
        Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
     6: VP:
        Check that PduR_J1939RmTransmit was called to send the request.
     7: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.   
     8: Call the J1939Rm_MainFunction() for 5 times to guarantee that 50ms has exceeded.
     9: Call the J1939Rm_SendRequest to send the same request again within lesss than 1250ms.
    10: VP:
        Check that Det_ReportError was called with ErrorId J1939RM_E_TimeoutSupervision_1250MS.
    11: Call the J1939Rm_SendRequest to send another request ,and Check that it returns E_OK.
    12: Call the J1939Rm_MainFunction to handle the transmission of the request.
    13: VP:
        Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    14: VP:
        Check that PduR_J1939RmTransmit was called to send the request.
    15: Call the J1939Rm_DeInit.
    16: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.1250MS_TimeoutSupervision</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>819</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_While_OFFLINE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_DET_ON/source/application/Tests.c</sourcefile>
      <sourceline>449</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_SendRequest() while offline state will return E_NOT_OK.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and offline state ,and Check that it returns E_OK.
    3: Call the J1939Rm_SendRequest while the offline state,and Check that it returns E_NOT_OK.
    4: Call the J1939Rm_DeInit.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>820</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_with_Wrong_Channel</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_DET_ON/source/application/Tests.c</sourcefile>
      <sourceline>513</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_SendRequest() with channel not configured for the node of this user, will return E_NOT_OK.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 1 and online state ,and Check that it returns E_OK.
    3: Call the J1939Rm_SendRequest ,and Check that it returns E_NOT_OK
    4: Call the J1939Rm_DeInit.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>821</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_125ms_without_Response</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_DET_ON/source/application/Tests.c</sourcefile>
      <sourceline>575</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that If the timeout supervision for a request reaches 1.25s,
       the J1939 Request Manager shall call the &lt;User&gt;_RequestTimeoutIndication.
      -Test that if timeout supervision is enabled for the caller of J1939Rm_SendRequest via J1939RmUserTimeoutSupervision,
       and the parameter checkTimeout is TRUE, and the destination address is not the broadcast address (0xff):
       The J1939 Request Manager shall start timeout supervision.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
    3: Call the J1939Rm_SendRequest ,and Check that it returns E_OK.
    4: Call the J1939Rm_MainFunction to handle the transmission of the request.
    5: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    6: VP:
       Check that PduR_J1939RmTransmit was called to send the request.
    7: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    8: Call the J1939Rm_MainFunction() for more than 125 times to guarantee that 1.25 s has exceeded.
    9: VP:
       Check that &lt;User&gt;_RequestTimeoutIndication was called to indicate timeout for the request.
    10: Call the J1939Rm_DeInit.
    11: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>822</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_125ms_without_Response_TSV_Queue_Full</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_DET_ON/source/application/Tests.c</sourcefile>
      <sourceline>687</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that If the timeout supervision for a request reaches 1.25s,
       the J1939 Request Manager shall call the &lt;User&gt;_RequestTimeoutIndication.
      -Test that if timeout supervision is enabled for the caller of J1939Rm_SendRequest via J1939RmUserTimeoutSupervision,
       and the parameter checkTimeout is TRUE, and the destination address is not the broadcast address (0xff):
       the J1939 Request Manager shall call the &lt;User&gt;_RequestTimeoutIndication.
       The J1939 Request Manager shall start timeout supervision.
      -Test that when TSV_RQST_QUEUE is full,
       timeout supervision will not be monitored 
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
    3: Call the J1939Rm_SendRequest ,and Check that it returns E_OK.
    4: Call the J1939Rm_MainFunction to handle the transmission of the request.
    5: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    6: VP:
       Check that PduR_J1939RmTransmit was called to send the request.
    7: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    8: Call the J1939Rm_MainFunction to handle the transmission of the second request.
    9: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
   10: VP:
       Check that PduR_J1939RmTransmit was called to send the request .
   11: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
   12: Call the J1939Rm_MainFunction to handle the transmission of the third request.
   13: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
   14: VP:
       Check that PduR_J1939RmTransmit was called to send the request.
   15: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
   16: Call the J1939Rm_MainFunction() for more than 125 times to guarantee that 1.25 s has exceeded.
   17: VP:
       Check that &lt;User&gt;_RequestTimeoutIndication was called to indicate timeout for the request.
   18: Call the J1939Rm_MainFunction() for moremany times.
   19: VP:
       Check that &lt;User&gt;_RequestTimeoutIndication was not called.
   20: Call the J1939Rm_DeInit.
   21: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>823</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_CancelRequestTimeOut_DA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_DET_ON/source/application/Tests.c</sourcefile>
      <sourceline>874</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When a CDD or an application SW-C calls J1939Rm_CancelRequestTimeout,
      the timeout supervision of the request is stopped.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
    3: Call the J1939Rm_SendRequest ,and Check that it returns E_OK.
    4: Call the J1939Rm_MainFunction to handle the transmission of the request.
    5: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    6: VP:
       Check that PduR_J1939RmTransmit was called to send the request .
    7: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    8: Call the J1939Rm_MainFunction() to start handling Timeout Supervision.
    9: Call the J1939Rm_CancelRequestTimeout with a specific DA to stop timeout supervision for the request.
    10: Call the J1939Rm_MainFunction() for more than 125 times to guarantee that 1.25 s has exceeded.
    11: VP:
       Check that &lt;User&gt;_RequestTimeoutIndication was not called  after 1.25 s.
    12: Call the J1939Rm_DeInit.
    13: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00029.J1939Rm_CancelRequestTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00055.CancelRequestTimeoutAPI</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>824</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_CancelRequestTimeOut_global_DA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_DET_ON/source/application/Tests.c</sourcefile>
      <sourceline>1000</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When a CDD or an application SW-C calls J1939Rm_CancelRequestTimeout,
      the timeout supervision of the request is stopped for a request sent to global DA.
      
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
    3: Call the J1939Rm_SendRequest to global address ,and Check that it returns E_OK.
    4: Call the J1939Rm_MainFunction to handle the transmission of the request.
    5: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    6: VP:
       Check that PduR_J1939RmTransmit was called to send the request.
    7: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    8: Call the J1939Rm_MainFunction() to start handling Timeout Supervision.
    9: Call the J1939Rm_CancelRequestTimeout with a global DA to stop timeout supervision for the request.
    10: Call the J1939Rm_MainFunction() for more than 125 times to guarantee that 1.25 s has exceeded.
    11: VP:
       Check that &lt;User&gt;_RequestTimeoutIndication was not called  after 1.25 s.
    12: Call the J1939Rm_DeInit.
    13: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00029.J1939Rm_CancelRequestTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>825</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_ComIpduCallout</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_DET_ON/source/application/Tests.c</sourcefile>
      <sourceline>1123</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When a configured COM RxIPduCallout is triggered which matches the request,
      the timeout supervision of the request is stopped.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
     1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
     2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
     3: Call the J1939Rm_ComRxIpduCallout before any request, and check that it will have no effect.
     4: Call the J1939Rm_SendRequest ,and Check that it returns E_OK.
     5: Call the J1939Rm_MainFunction to handle the transmission of the request.
     6: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
     7: VP:
       Check that PduR_J1939RmTransmit was called to send the request.
     8: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
     9: Call the J1939Rm_MainFunction() to start handling Timeout Supervision.
    10: VP:
        Check that PduR_J1939RmTransmit was called to send the request.
    11: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    12: Call the J1939Rm_ComRxIpduCallout to stop timeout supervision for the request.
    13: Call the J1939Rm_MainFunction() for more than 125 times to guarantee that 1.25 s has exceeded.
    14: VP:
        Check that &lt;User&gt;_RequestTimeoutIndication was not called  after 1.25s.
    15: Call the J1939Rm_DeInit.
    16: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00029.COM_RxIPduCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00079</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>826</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_TimeoutSupervision</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_DET_ON/source/application/Tests.c</sourcefile>
      <sourceline>1272</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When a configured COM RxIPduCallout is triggered which matches the request,
      the timeout supervision of the request is stopped.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
    3: Call the J1939Rm_SendRequest twice, and Check that it returns E_OK each time.
    4: Call the J1939Rm_MainFunction to handle the transmission of the first request.
    5: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    6: VP:
       Check that PduR_J1939RmTransmit was called to send the request .
    7: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    8: Call the J1939Rm_MainFunction() to start handling Timeout Supervision for the first request,
       and handle the transmission of the second request.
    9: Call the J1939Rm_ComRxIpduCallout to stop timeout supervision for the request.
    10: Call the J1939Rm_MainFunction() for more than 125 times to guarantee that 1.25 s has exceeded.
    11: VP:
       Check that &lt;User&gt;_RequestTimeoutIndication was not called  after 1.25 s.
    12: Call the J1939Rm_DeInit.
    13: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00029.COM_RxIPduCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00079</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>827</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_TimeoutSupervision2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_DET_ON/source/application/Tests.c</sourcefile>
      <sourceline>1420</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When a configured COM RxIPduCallout is triggered which matches the request,
      the timeout supervision of the request is stopped.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
    3: Call the J1939Rm_SendRequest twice, and Check that it returns E_OK each time.
    4: Call the J1939Rm_MainFunction to handle the transmission of the first request.
    5: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    6: VP:
       Check that PduR_J1939RmTransmit was called to send the request .
    7: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    8: Call the J1939Rm_MainFunction() to start handling Timeout Supervision for the first request,
       and handle the transmission of the second request.
    9: Call the J1939Rm_ComRxIpduCallout to stop timeout supervision for the request.
    10: Call the J1939Rm_MainFunction() for more than 125 times to guarantee that 1.25 s has exceeded.
    11: VP:
       Check that &lt;User&gt;_RequestTimeoutIndication was not called  after 1.25 s.
    12: Call the J1939Rm_DeInit.
    13: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00029.COM_RxIPduCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00079</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>828</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_TimeoutSupervision3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_DET_ON/source/application/Tests.c</sourcefile>
      <sourceline>1567</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When a configured COM RxIPduCallout is triggered which doesn't match the request,
      the timeout supervision of the request is not stopped.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
    3: Call the J1939Rm_SendRequest twice, and Check that it returns E_OK each time.
    4: Call the J1939Rm_MainFunction to handle the transmission of the first request.
    5: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    6: VP:
       Check that PduR_J1939RmTransmit was called to send the request .
    7: Call the J1939Rm_TxConfirmation to start TimeoutSupervision.
    8: Call the J1939Rm_MainFunction() to start handling Timeout Supervision for the first request,
       and handle the transmission of the second request.
    9: Call the J1939Rm_ComRxIpduCallout to stop timeout supervision for the request.
    10: Call the J1939Rm_MainFunction() for more than 125 times to guarantee that 1.25 s has exceeded.
    11: VP:
       Check that &lt;User&gt;_RequestTimeoutIndication was not called  after 1.25 s.
    12: Call the J1939Rm_DeInit.
    13: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00029.COM_RxIPduCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00079</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>829</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_with_Wrong_Parameter</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_DET_ON/source/application/Tests.c</sourcefile>
      <sourceline>1714</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that When calling J1939Rm_SendRequest with wrong Parameters,
      will return E_NOT_OK and report the correct corresponding DET error.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
    3: Call the J1939Rm_SendRequest with Wrong PGN,and Check that it returns E_NOT_OK.
    4: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_PGN.
    5: Call the J1939Rm_SendRequest with Wrong Priority,and Check that it returns E_NOT_OK.
    6: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_PRIO.
    7: Call the J1939Rm_SendRequest with Wrong UserId,and Check that it returns E_NOT_OK.
    8: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_USER.
    9: Call the J1939Rm_SendRequest with Wrong channel,and Check that it returns E_NOT_OK.
    10: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_NETWORK_ID.
    11: Call the J1939Rm_SendRequest with userId for a user that J1939RmUserSendRequest is not configured,and Check that it returns E_NOT_OK.
    12: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_SEND_REQUEST.
    13: Call the J1939Rm_SendRequest with config for checkTimeout,and Check that it returns E_NOT_OK.
    14: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_OPTION.
    15: Call the J1939Rm_DeInit.
    16: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_OPTION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_PRIO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_PGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_USER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00041.J1939Rm_SendRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00067.Invalid_checkTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00067.Invalid_requestedPGN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00067.Invalid_userId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00067.Invalid_priority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.EB.Invalid_SendRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>830</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_Test/source/application/Tests.c</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that Transmission requests for the Request PG shall be queued when a previous transmission of this PG is still pending.
      -Test that when a BSW module, a CDD, or an SW-C (via service port and RTE) calls J1939Rm_SendRequest,
       the J1939 Request Manager shall call PduR_J1939RmTransmit to send the request.
      -Test that the J1939 Request Manager shall use the J1939Rm_TxConfirmation of the associated I-PDU
       to trigger transmission of pending Request PGs.
      -Test that the requests are queued based on priority.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
     1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
     2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
     3: Call the J1939Rm_SendRequest three times with different DA (03,04,0xFF), and Check that it returns E_OK for each.
     4: Call the J1939Rm_MainFunction to handle the transmission of the first request.
     5: VP:
        Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
     6: VP:
        Check that PduR_J1939RmTransmit was called to send the first request.
     7: Call the J1939Rm_TxConfirmation.   
     8: Call the J1939Rm_MainFunction() to start handling the second request.
     9: VP:
        Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    10: VP:
        Check that PduR_J1939RmTransmit was called to send the second request.
    11: Call the J1939Rm_TxConfirmation.
    12: Call the J1939Rm_MainFunction() to start handling the third request.
    13: VP:
        Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    14: VP:
        Check that PduR_J1939RmTransmit was called to send the third request.
    15: Call the J1939Rm_DeInit.
    16: VP:
        Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00021.queueing_Rqst_PG</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00016.BSW_CDD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00054.SendRequestAPI</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>831</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_twoChannels</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_Test/source/application/Tests.c</sourcefile>
      <sourceline>207</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that Transmission requests for the Request PG shall be queued when a previous transmission of this PG is still pending.
      -Test that when a BSW module, a CDD, or an SW-C (via service port and RTE) calls J1939Rm_SendRequest,
       the J1939 Request Manager shall call PduR_J1939RmTransmit to send the request.
      -Test that the J1939 Request Manager shall use the J1939Rm_TxConfirmation of the associated I-PDU
        to trigger transmission of pending Request PGs.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and channel 1 and on-line state ,and Check that it returns E_OK.
    3: Call the J1939Rm_SendRequest many times to transmit the request on both of channels,
       and Check that it returns E_OK for each.
    4: Call the J1939Rm_MainFunction to handle the transmission of the first request for each channel.
    5: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    6: VP:
       Check that PduR_J1939RmTransmit was called to send the request.
    7: Call the J1939Rm_TxConfirmation for channel 0 and channel 1.   
    8: Call the J1939Rm_MainFunction() to start handling the second request for each channel.
    9: VP:
       Check that EcuC_SetMetaDataCanId was called twice to set the meta-data before each transmission.
    10: VP:
        Check that PduR_J1939RmTransmit was called twice to send the two requests.
    11: Call the J1939Rm_TxConfirmation for channel 0 and channel 1.
    12: Call the J1939Rm_MainFunction() to start handling the third request.
    13: VP:
        Check that EcuC_SetMetaDataCanId was called set the meta-data before each transmission.
    14: VP:
        Check that PduR_J1939RmTransmit was called to send the request.
    15: Call the J1939Rm_MainFunction() three times.
    16: VP:
        Check that PduR_J1939RmTransmit and EcuC_SetMetaDataCanId_Stub were not called again.
    17: Call the J1939Rm_DeInit.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00021.queueing_Rqst_PG</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00016.BSW_CDD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.ASR41.SWS_J1939Rm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00054.SendRequestAPI</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>832</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_Request_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_Test/source/application/Tests.c</sourcefile>
      <sourceline>375</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that if the J1939Rm_TxConfirmation is called with E_NOT_OK,
      the J1939 Request Manager shall flush the Request PG queue.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
    3: Call the J1939Rm_SendRequest twice to enqueue two requests, and Check that it returns E_OK for each.
    4: Call the J1939Rm_MainFunction to handle the transmission of the first request.
    5: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    6: VP:
       Check that PduR_J1939RmTransmit was called to send the request.
  
    7: Call the J1939Rm_TxConfirmation with E_NOT_OK.
    8: VP:
       Check that PduR_J1939RmTransmit was not called (J1939 Request Manager flushed the Request PG queue).
    9: Call the J1939Rm_DeInit.
    10: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00023</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>833</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_Full_Queue</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_Test/source/application/Tests.c</sourcefile>
      <sourceline>478</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
     -Test that J1939Rm shall reject transmission of a Request by returning E_NOT_OK
      when another Request is pending and the Request queue is full.
     -Test that the size of Request PG queue is determined by J1939RmRequestQueueSize.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel 0 node 5 and on-line state, and check it returns E_OK.
    3: VP:
       Call the J1939Rm_SendRequest() 10 times to get the queue full, and check it returns E_OK each time.
    4: VP:
       Call the J1939Rm_SendRequest() while the queue is full, and check it returns E_NOT_OK.
    5: Call the J1939Rm_DeInit().
    6: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00021.J1939RmRequestQueueSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>834</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_E_NOT_OK_TxReturn</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_Test/source/application/Tests.c</sourcefile>
      <sourceline>538</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that PduR_J1939RmTransmit should be called again if the first transmission failed.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
    3: Call the J1939Rm_SendRequest and Check that it returns E_OK.
    4: Call the J1939Rm_MainFunction to handle the transmission of the request.
    5: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
    6: VP:
       Check that PduR_J1939RmTransmit was called to send the request.
    7: Call the J1939Rm_MainFunction() to trigger the transmission again.
    8: VP:
       Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission again.
    9: VP:
       Check that PduR_J1939RmTransmit was called to send the request again.
    10: Call the J1939Rm_DeInit.
    11: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00016.BSW_CDD</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>835</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_Queue_Overflow</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_Test/source/application/Tests.c</sourcefile>
      <sourceline>647</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test the overflow scenario for TXPG_RQST queue by verifying that the queue will
      store at index zero after reaching last element in the queue, when the queue is not full.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should be in on-line state.
  
Test Execution: 
      1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
      2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
      3: VP: Call the J1939Rm_SendRequest() 10 times to get the queue full, and check it returns E_OK each time
      4: Call the J1939Rm_MainFunction to handle the transmission of the request
      5: VP:Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
      6: VP: Check that PduR_J1939RmTransmit was called.
      7: Call the J1939Rm_TxConfirmation.
      8: VP: Call the J1939Rm_SendRequest() again and check it returns E_OK each time
      9: Call the J1939Rm_MainFunction to handle the transmission of the request
      10: VP:Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
      11: VP: Check that PduR_J1939RmTransmit was called.
      12: Call the J1939Rm_TxConfirmation.
      13: Call J1939Rm_MainFunction and check that Trace is empty.
      14: Call the J1939Rm_DeInit.
      15: VP: Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00021.J1939RmRequestQueueSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>836</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SEND_REQUEST_WithSetNewAddress</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SendRequest_Test/source/application/Tests.c</sourcefile>
      <sourceline>746</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test if SetNodeAddress is called after J1939Rm_SendRequest has been called but request not actual transmited
      and new request added with new address.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
      1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
      2: Call the J1939Rm_SetState with node 0 and on-line state ,and Check that it returns E_OK.
      3: VP: Call the J1939Rm_SendRequest()
      4: Call the J1939Rm_SetState with node 0 and Offline state ,and Check that it returns E_OK.
      5: Call J1939Rm_SetNodeAddress with new address and check if it returns E_OK.
      6: Call the J1939Rm_SetState with node 0 and on-line state ,and Check that it returns E_OK.
      7: Call main function and check that there is no transmission activites in progress.
      8: Send a new request with new address.
      9: Call main function to send this reuqest.
      10: Check that EcuC_SetMetaDataCanId was called to set the meta-data before transmission.
      11: Check that PduR_J1939RmTransmit is called.
      12: Call the J1939Rm_DeInit.
      13: VP: Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SendRequestForAbsoluteNodeAddress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>837</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_SetNodeAddress_before_Initialization</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SetNodeAddress_Test/source/application/Tests.c</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_SetNodeAddress before initialization,
      shall raise Det_ReportError with ErrorId corresponding to J1939RM_E_UNINIT.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: call J1939Rm_Init with correct config pointer
    2: Call the J1939Rm_SetState with channel 0 and Node ID 0 and OFFLINE state.
    3: call J1939Rm_Deinit to make module in non intialized state
    4: call J1939Rm_SetNodeAddress with valid parameters
    5: VP:
       Check that Det_ReportError called with ErrorId corresponding to J1939RM_E_UNINIT.
    6: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SetNodeAddress_ModuleStatus_Validation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>838</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SetNodeAddress_With_Valid_Parameters</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SetNodeAddress_Test/source/application/Tests.c</sourcefile>
      <sourceline>115</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_SetNodeAddress with the valid parameters.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: call J1939Rm_Init with correct config pointer
    2: Call the J1939Rm_SetState with channel 0 and Node ID 0 and OFFLINE state.
    3: call J1939Rm_SetNodeAddress with valid parameters
    4: Call the J1939Rm_DeInit.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.J1939RmSetNodeAddress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>839</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SetNodeAddress_With_Wrong_NodeId</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SetNodeAddress_Test/source/application/Tests.c</sourcefile>
      <sourceline>166</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_SetNodeAddress with not configured node,
      shall raise Det_ReportError with ErrorId corresponding to J1939RM_E_INVALID_NODE.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: call J1939Rm_Init with correct config pointer
    2: Call the J1939Rm_SetState with channel 0 and Node ID 0 and OFFLINE state.
    3: call J1939Rm_SetNodeAddress with wrong node id
    4: VP:
       Check that Det_ReportError called with ErrorId corresponding to J1939RM_E_INVALID_NODE.
    5: Call the J1939Rm_DeInit.
    6: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SetNodeAddress_NodeId_Validation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>840</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SetNodeAddress_With_WrongAddress</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SetNodeAddress_Test/source/application/Tests.c</sourcefile>
      <sourceline>221</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_SetNodeAddress with not valid address.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: call J1939Rm_Init with correct config pointer
    2: Call the J1939Rm_SetState with channel 0 and Node ID 0 and OFFLINE state.
    3: call J1939Rm_SetNodeAddress with not valid address
    4: Call the J1939Rm_DeInit.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SetNodeAddress_NewAddress_Validation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>841</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SetNodeAddress_For_OnlineNodeChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SetNodeAddress_Test/source/application/Tests.c</sourcefile>
      <sourceline>269</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      calling J1939Rm_SetNodeAddress for Online node channel Should be rejected.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: call J1939Rm_Init with correct config pointer
    2: Call the J1939Rm_SetState with channel 0 and Node ID 0 and ONLINE state.
    3: call J1939Rm_SetNodeAddress with valid parameters
    4: Call the J1939Rm_DeInit.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.SetNodeAddress_State_Validation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>842</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_SET_STATE_before_Initialization</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SetState_Test/source/application/Tests.c</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_SetState before initialization,
      shall raise Det_ReportError with ErrorId corresponding to J1939RM_E_UNINIT.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_SetState with channel 0 and ONLINE state, without initialization.
    2: VP:
       Check that Det_ReportError called with ErrorId corresponding to J1939RM_E_UNINIT.
    3: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_SetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>843</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SET_STATE_With_Wrong_state</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SetState_Test/source/application/Tests.c</sourcefile>
      <sourceline>107</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_SetState with the 'newState' is not in the valid range,
      J1939Rm shall raise Det_ReportError with ErrorId corresponding to J1939RM_E_INVALID_STATE.
	  J1939Rm.ASR41.SWS_J1939Rm_00040
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and 'newState' is not in the valid range.
    3: VP:
       Check that Det_ReportError called with ErrorId corresponding to J1939RM_E_INVALID_STATE.
    4: Call the J1939Rm_DeInit.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00040.rejection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00040.DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_STATE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>844</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SET_STATE_With_Wrong_ChannelId</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SetState_Test/source/application/Tests.c</sourcefile>
      <sourceline>169</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_SetState not configured channel,
      shall raise Det_ReportError with ErrorId corresponding to J1939RM_E_INVALID_NETWORK_ID.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with not configured channel and ONLINE state.
    3: VP:
       Check that Det_ReportError called with ErrorId corresponding to J1939RM_E_INVALID_NETWORK_ID.
    4: Call the J1939Rm_DeInit.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00041.J1939Rm_SetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>845</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SET_STATE_With_Wrong_NodeId</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SetState_Test/source/application/Tests.c</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_SetState not configured node,
      shall raise Det_ReportError with ErrorId corresponding to J1939RM_E_INVALID_NODE.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with not configured Node and ONLINE state.
    3: VP:
       Check that Det_ReportError called with ErrorId corresponding to J1939RM_E_INVALID_NODE.
    4: Call the J1939Rm_DeInit.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_NODE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>846</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SET_STATE_With_NodeId_for_wrong_channel</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SetState_Test/source/application/Tests.c</sourcefile>
      <sourceline>274</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_SetState with channel not configured for the passed node
      will return E_NOT_OK.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with channel not configured for the passed node,
       and check that it returns E_NOT_OK.
    4: Call the J1939Rm_DeInit.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>847</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_SET_STATE_With_ValidID</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_SetState_Test/source/application/Tests.c</sourcefile>
      <sourceline>322</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_SetState with valid channel id and valid node id and check on the state after SetState Call.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with value non zero value to initialize the module.
    2: VP:
       Call the J1939Rm_SetState with configured channel for the passed node,
       and check that it returns E_OK.
    4: Call the J1939Rm_DeInit.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.SWS_J1939Rm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>848</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939Rm_TpTxConfirmation_before_Initialization</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_TpTxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that calling J1939Rm_TpTxConfirmation() before initialization shall shall raise DET.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    no initialization
  
Test Execution: 
    1: Call the J1939Rm_TpTxConfirmation().
    2: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_UNINIT.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_TpTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>849</internalId></specobject>
    <specobject>
      <id>TS_J1939Rm_TpTxConfirmation_Wrong_ID</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_TpTxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that calling J1939Rm_TpTxConfirmation() with a wrong ID,
       J1939Rm shall raise Det_ReportError with ErrorId corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_TpTxConfirmation() with a wrong ID.
    3: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
    4: Call the J1939Rm_DeInit.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.    
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_TpTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>850</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939RM_TRANSMIT_before_Initialization</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Transmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Rm_Transmit()  before initialization,
	  leads to calling Det_ReportError with ErrorId corresponding to J1939RM_E_UNINIT.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Rm should not be intialized.
  
Test Execution: 
    1: Call J1939Rm_Transmit() before initializing the module.
    2: VP:
	   Check that Det_ReportError was called with ErrorId J1939RM_E_UNINIT.
	3: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>851</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_TRANSMIT_with_Null_Pointer</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Transmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that calling J1939Rm_Transmit() with info equals to NULL_PTR,
	     leads to calling Det_ReportError with ErrorId corresponding to J1939RM_E_PARAM_POINTER.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
    3: Call J1939Rm_Transmit() with Null_PTR.
    4: VP:
	     Check that Det_ReportError was called with ErrorId J1939RM_E_PARAM_POINTER.
    5: Call J1939Rm_Transmit() with wrong ID.
    6: VP:
       Check that Det_ReportError was called with ErrorId J1939RM_E_INVALID_PDU_SDU_ID.
	  7: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00034.J1939Rm_Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>852</internalId></specobject>
    <specobject>
      <id>TS_J1939RM_TRANSMIT_with_Wrong_ID</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_Transmit_Test/source/application/Tests.c</sourcefile>
      <sourceline>164</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that calling J1939Rm_Transmit() with a wrong ID,
       leads to calling Det_ReportError with ErrorId corresponding to J1939RM_E_INVALID_NETWORK_ID.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_SetState with channel 0 and on-line state ,and Check that it returns E_OK.
    3: Call J1939Rm_Transmit() with wrong ID.
    4: VP:
       Check that Det_ReportError was called with ErrorId J1939RM_E_INVALID_PDU_SDU_ID.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_INVALID_NETWORK_ID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_Transmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>853</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939Rm_TxConfirmation_before_Initialization</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that calling J1939Rm_TxConfirmation() before initialization shall shall raise DET.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    no initialization
  
Test Execution: 
    1: Call the J1939Rm_TxConfirmation().
    2: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_UNINIT.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00010.J1939Rm_TxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00031.J1939RM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>854</internalId></specobject>
    <specobject>
      <id>TS_J1939Rm_TxConfirmation_Wrong_ID</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that calling J1939Rm_TxConfirmation() with a wrong ID,
       J1939Rm shall raise Det_ReportError with ErrorId corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_TxConfirmation() with a wrong ID.
    3: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
    4: Call the J1939Rm_DeInit.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.    
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_TxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>855</internalId></specobject>
    <specobject>
      <id>TS_J1939Rm_TxConfirmation_Wrong_Confirmation</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that calling J1939Rm_TxConfirmation() with a wrong Frame,
       J1939Rm shall raise Det_ReportError with ErrorId corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: VP: Call the J1939Rm_SetState with channel 0, NodeId 7 ,and ONLINE state, and check that it returns E_OK.
    3: Call the J1939Rm_RxIndication() after initialization of J1939RM for RQSTRXPDU.
    4: VP: Receive wrong J1939Rm_TxConfirmation on after Request reception without any transmission .
    5: VP: Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
    6: Call the J1939Rm_DeInit.
    7: VP: Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_TxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>856</internalId></specobject>
    <specobject>
      <id>TS_J1939Rm_TxConfirmation_Invalid_Pdu_ID</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Conformance/IN/J1939Rm_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>235</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      -Test that calling J1939Rm_TxConfirmation() with a Invalid_Pdu_ID,
       J1939Rm shall raise Det_ReportError with ErrorId corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Rm_Init() with valid config pointer to initialize the module.
    2: Call the J1939Rm_TxConfirmation() with a Invalid_Pdu_ID.
    3: VP:
       Check that Det_ReportError was called with ErrorId corresponding to J1939RM_E_INVALID_PDU_SDU_ID.
    4: Call the J1939Rm_DeInit.
    5: VP:
       Call EBSTUBS_TRACE_CHECKEMPTY() to Check that nothing was called accidentally.    
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Rm_00033.J1939Rm_TxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>857</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_GenTest_01001_Err_PduR_Invalid_AckmRxPduRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_01_InvalidConfiguration/source/application/J1939Rm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if J1939RmAckmRxPduRef is not configured in the PduR
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>858</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01002_Err_PduR_Invalid_AckmPduRSrcPduRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_01_InvalidConfiguration/source/application/J1939Rm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if J1939RmAckmPduRSrcPduRef is not configured for PduR
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>859</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01003_Err_PduR_Invalid_RqstRxPduRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_01_InvalidConfiguration/source/application/J1939Rm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if J1939RmRqstRxPduRef is not configured for PduR
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>860</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01004_Err_PduR_Invalid_RqstTxPduRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_01_InvalidConfiguration/source/application/J1939Rm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if J1939RmRqstTxPduRef is not configured for Com module
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>861</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01005_Err_EcuC_Invalid_MetaDataItemType</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_01_InvalidConfiguration/source/application/J1939Rm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>116</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if MetaDataItemType is not configured for J1939RmRqstTxPdu
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>862</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01006_Err_EcuC_Invalid_MetaDataTypeRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_01_InvalidConfiguration/source/application/J1939Rm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>138</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if MetaDataTypeRef is not configured for Pdu of J1939RmRqstTxPdu
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>863</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01007_Err_EcuC_Invalid_RqstTxPduRefMetaDataItemType</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_01_InvalidConfiguration/source/application/J1939Rm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>160</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if J1939RmRqstTxPduRefMetaDataItemType 
  is not configured for EcuC Pdu of J1939RmRqstTxPdu
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ECUC_J1939Rm_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>864</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01008_Err_Com_Invalid_UpperComIPduRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_01_InvalidConfiguration/source/application/J1939Rm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>183</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if J1939RmTxNSduRef is not configured for Com module
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>865</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01009_Err_PduR_Invalid_PduRDestPduHandleId</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_01_InvalidConfiguration/source/application/J1939Rm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>205</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if PduRDestPduHandleId is not configured for the Pdu
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>866</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01010_Err_EcuC_Invalid_MetaDataItemTypeSOURCE_ADDRESS_16</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_01_InvalidConfiguration/source/application/J1939Rm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>227</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if MetaDataItemType of SOURCE_ADDRESS_16 is not configured for EcuC
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.MetaData_J1939RmLowerComIPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>867</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01011_Err_EcuC_Invalid_MetaDataItemTypeTARGET_ADDRESS_16</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_01_InvalidConfiguration/source/application/J1939Rm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>249</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if MetaDataItemType of TARGET_ADDRESS_16 is not configured for EcuC
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.MetaData_J1939RmLowerComIPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>868</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01012_Err_EcuC_Invalid_AckmTxPduRefMetaDataTypeRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_01_InvalidConfiguration/source/application/J1939Rm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>271</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if MetaDataTypeRef is not configured
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.MetaData_J1939RmAckmTxPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>869</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01013_Err_EcuC_Invalid_RqstTxPduRefMetaDataTypeRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_01_InvalidConfiguration/source/application/J1939Rm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>293</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if MetaDataTypeRef is not configured
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.MetaData_J1939RmRqstTxPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>870</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01014_Err_PduR_Invalid_ComIpduTypeComIPdu_IF</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_01_InvalidConfiguration/source/application/J1939Rm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>315</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if ComIpduTypeComIPdu is not configured for PduR
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.ASR41.ECUC_J1939Rm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>871</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01015_Err_EcuC_Invalid_J1939RmLowerComIPduRefPduId</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_01_InvalidConfiguration/source/application/J1939Rm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>337</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if J1939RmLowerComIPduRefPduId is not configured for EcuC
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.J1939RmLowerComIPduRefPduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>872</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_GenTest_02001_Err_EcuC_Invalid_MetaDataItemTypeSOURCE_ADDRESS_16_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_02_InvalidConfiguration/source/application/J1939Rm_GenTest_02_InvalidConfiguration.h</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if MetaDataItemType is not configured
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.MetaData_J1939RmLowerComIPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>873</internalId></specobject>
    <specobject>
      <id>TS_GenTest_02002_Err_EcuC_Invalid_LowerComIPduRefMetaDataTypeRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_02_InvalidConfiguration/source/application/J1939Rm_GenTest_02_InvalidConfiguration.h</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if LowerComIPduRef is not configured
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.MetaData_J1939RmLowerComIPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>874</internalId></specobject>
    <specobject>
      <id>TS_GenTest_02003_Err_EcuC_Invalid_MetaDataItemTypeTARGET_ADDRESS_16_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_02_InvalidConfiguration/source/application/J1939Rm_GenTest_02_InvalidConfiguration.h</sourcefile>
      <sourceline>70</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if MetaDataItemType is not configured
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.MetaData_J1939RmLowerComIPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>875</internalId></specobject>
    <specobject>
      <id>TS_GenTest_02004_Err_EcuC_Invalid_LowerComIPduRefMetaDataTypeRef_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Rm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Rm/test/ts5/Generic/IN/J1939Rm_GenTest_02_InvalidConfiguration/source/application/J1939Rm_GenTest_02_InvalidConfiguration.h</sourcefile>
      <sourceline>92</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error if MetaDataTypeRef is not configured
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Rm.EB.MetaData_J1939RmLowerComIPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>876</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
