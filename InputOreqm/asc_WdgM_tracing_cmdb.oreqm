<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_WdgM_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_AUTOSAR_SWS_WdgM_4_0_3.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_AUTOSAR_SWS_WdgM_R20-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_EB_Refinements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_WdgM_ASR40_EBExtensions.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_WdgM_ASR43_EBExtensions.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_WdgM_EBExtensions.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_WdgM_EBMulticoreExtensions.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_WdgM_TimEPM_EBExtensions.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_WdgM_TimEPM_SafetyCharacteristics.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/common_req/WdgM_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 20:13:49 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_WdgM_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_AUTOSAR_SWS_WdgM_4_0_3.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_AUTOSAR_SWS_WdgM_R20-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_EB_Refinements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_WdgM_ASR40_EBExtensions.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_WdgM_ASR43_EBExtensions.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_WdgM_EBExtensions.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_WdgM_EBMulticoreExtensions.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_WdgM_TimEPM_EBExtensions.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_Native/asc_WdgM_requirements_WdgM_TimEPM_SafetyCharacteristics.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/common_req/WdgM_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0001</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If the <code>WdgM_PerformReset</code> API can interrupt the <code>WdgM_MainFunction</code>,
        the Watchdog Manager may postpone the update of the Watchdog triggering
        conditions to <parameter>0</parameter> by one main function cycle due to race conditions.
      </description>
      <rationale>Existing race condition in case <code>WdgM_PerformReset</code> interrupt has higher priority
        than <code>WdgM_MainFunction</code>.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0002</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>2</version>
      <description>If the WdgM is integrated in an environment where the individual applications are allocated
        to different partitions, then the general parameter
        <parameter>WdgMPartitioningEnabled</parameter> must be enabled.
        The WdgM then makes use of the memory section
        <code>WDGM_START/STOP_SEC_VAR_CLEARED_SHARED_UNSPECIFIED</code> which is required for the access
        to the shared graph data (Logical Supervision)
        in the context of different applications / Supervised Entities.
        The integrity of the shared data is ensured by holding all values double inverse.

        Therefore, the integrator must configure this section to be globally accessable
        (write and readably) from all partitions.
      </description>
      <rationale>This version of the WdgM module is tailored for the use in a single core environment where the
        shared memory approach is more efficient than splitting the memory among the different
        partitions.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0003</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
      If mode swich is done synchronous (<parameter>WdgMSetModeSynchron</parameter>
      is set to TRUE) then the API <code>WdgM_SetMode</code>
      should not be preempt by <code>WdgM_DeInit</code>.
      </description>
      <rationale>Both APIs are setting the watchdog to a specific mode.
      The preemtion of <code>WdgM_SetMode</code> by <code>WdgM_DeInit</code> may lead to inconsistency
        in the watchdog mode.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0004</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If mode swich is done synchronous (<parameter>WdgMSetModeSynchron</parameter>
        is set to TRUE) and the <code>WdgM_SetMode</code> API can interrupt the <code>WdgM_CheckpointReached</code>,
        the Watchdog Manager may postpone the evaluation of the Supervised Entyty results if it
        is not used in the new mode until it is activated again in a new mode, due to race conditions.
      </description>
      <rationale>Existing race condition in case <code>WdgM_SetMode</code> interrupt has higher priority
        than <code>WdgM_CheckpointReached</code>.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0005</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If mode swich is done synchronous (<parameter>WdgMSetModeSynchron</parameter>
        is set to TRUE) and the <code>WdgM_MainFunction</code> API can interrupt the <code>WdgM_SetMode</code>,
        the Watchdog Manager may evaluate results of the Supervised Entities from the old mode and
        the new mode, until the next main function, due to race conditions.
      </description>
      <rationale>Existing race condition in case <code>WdgM_MainFunction</code> interrupt has higher priority
        than <code>WdgM_CheckpointReached</code>.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0006</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If mode swich is done synchronous (<parameter>WdgMSetModeSynchron</parameter>
        is set to TRUE) then <code>WdgM_SetMode</code> should not interrupt the <code>WdgM_MainFunction</code>.
      </description>
      <rationale><parameter>WdgMFailedAliveSupervisionRefCycle</parameter> of a Supervised Entity
                which is not used in the new mode when <code>WdgM_SetMode</code> is called
                may have a value of 1 instead of 0 when the Supervised Enity is reactivated in a new mode.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0008</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>2</version>
      <description>If AUTROSAR 4.3 service is used then the swcd arxml files are generated only for
      the generate_swcd command in Tresos.
      </description>
      <rationale>Reduce services generator complexity.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0009</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>The integrator must assure the natural alignment of the variables, based on their memory mapping.
      </description>
      <rationale>To be able to access the data atomically the data must be align correctly. 
      </rationale>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.InterCoreSharedData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0010</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If multicore feature is enabled, the integrator must assure cache coherency for Inter Core Data exchange.
      </description>
      <rationale>Cache coherency must be assured or cache must be disabled, otherwise inter core data consistency cannot be guaranteed. 
      </rationale>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.InterCoreSharedData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0011</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If Partition Restart feature is used then the integrator shall
      assure the WdgM_MainFunction executes on a partition not referenced by any Supervised Entity.
      </description>
      <rationale>WdgM_MainFunction is evaluating the partition status. If partition is reset then 
      WdgM_MainFunction does not execute anymore to evaluate the partition status.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0012</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If multicore feature is enabled, the integrator shall call WdgM_GetAllExpiredSEID, 
      WdgM_GetFirstExpiredSEID, WdgM_GetGlobalStatus, WdgM_GetMode, WdgM_PerformReset and WdgM_SetMode
      only from the Master Instance of WdgM.
      </description>
      <rationale>These APIs are related with the Global Status of WdgM and must be controlled by
      the WdgM Master Instance.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0013</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If multicore feature is enabled and WdgM_PerformReset() is called then
      WdgM will update the trigger conditions to zero only for the master controlled watchdogs.
      </description>
      <rationale>WdgMImmediateReset can be used to trigger a ECU reset or an watchdog which
      reset the whole ECU.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0014</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If multicore feature and configuration parameter WdgMGetAllExpiredSEIDs are enabled
      then WdgM_GetAllExpiredSEID() API shall be called before WdgM is re-initialized.
      </description>
      <rationale>Saved expired supervised entities are relevant after reset before
      the re-initialization of the WdgM. Afterwards WdgM will start again supervising.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0015</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>2</version>
      <description>If multicore feature is enabled and WdgMGetElapsedTimeCallout() callout is not configured, then WdgM_GetFirstExpiredSEID() 
      may not be fully reliable due to race conditions.
      </description>
      <rationale>Without a timestamp over cores this can not be achieved.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0016</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If WdgMExtLogicalOptimization is enabled for WdgMExternalLogicalSupervision then no concurrent 
      or parallel executed checkpoints shall be part of that WdgMExternalLogicalSupervision.
      </description>
      <rationale>Optimization is possible only if no checkpoints are executed concurrently or in parallel.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>
    <specobject>
      <id>lim.WdgM.EB_INTREQ_WdgM_0017</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If multicore feature is enabled and WdgMGetElapsedTimeCallout() callout is configured, then WdgM_GetFirstExpiredSEID()
      shall be called before the WdgM is re-initialized.
      </description>
      <rationale>Saved expired supervised entities are relevant after reset before
      the re-initialization of the WdgM. Afterwards WdgM will start again supervising.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>WdgM.ASR40.ECUC_WdgM_00300</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Name: WdgMGeneral
        Container Type: Container
        Sub-Containers: WdgMCallerIds WdgMSupervisedEntity WdgMWatchdog 
        Description: Container defines all general configuration parameters of the Watchdog Manager.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.ECUC_WdgM_00343</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Name: WdgMInternalCheckpointInitialRef
        Parameter Type: Reference
        Parent Containers: WdgMSupervisedEntity,
        Description: This is the reference to the initial Checkpoint for this Supervised Entity.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Origin: AUTOSAR_ECUC
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMCheckpoint
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.ECUC_WdgM_00344</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Name: WdgMInternallCheckpointFinalRef
        Parameter Type: Reference
        Parent Containers: WdgMSupervisedEntity,
        Description: This is the reference to the final Checkpoint(s) for this Supervised Entity.
        Lower Multiplicity: 1
        Upper Multiplicity: 65535
        Origin: AUTOSAR_ECUC
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMCheckpoint
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs</srcid><srcstatus/><internalId>1815</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs_Multicore</srcid><srcstatus/><internalId>1862</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedAliveInternalLogicalDeadlineSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2051</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.ECUC_WdgM_00346</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Name: WdgMOsApplicationRef
        Parameter Type: Reference
        Parent Containers: WdgMSupervisedEntity,
        Description: Optional reference to an OS Application. Beware, the Watchdog Manager module will 
        trigger a partition restart of this OS Application when the corresponding Supervised Entity 
        reaches WDGM_LOCAL_STATUS_FAILED.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Origin: AUTOSAR_ECUC
        Destination: /AUTOSAR/EcucDefs/Os/OsApplication
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count: Due to the high importance of this topic, it's 
       checked in many test configurations resulting in surpassing the count limit.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_Callout</srcid><srcstatus/><internalId>1898</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_DifferentPartition</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_SupervisedEntityNotMappedToPartition</srcid><srcstatus/><internalId>1900</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_AliveFailure</srcid><srcstatus/><internalId>1901</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_InternalTransition</srcid><srcstatus/><internalId>1902</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Two_WdgMRequestPartitionReset</srcid><srcstatus/><internalId>1903</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_FailedAliveSupervisionRefCycleTol</srcid><srcstatus/><internalId>1904</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_ReferenceCycle</srcid><srcstatus/><internalId>1905</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Two_WdgMRequestPartitionReset_ReferenceCycle</srcid><srcstatus/><internalId>1906</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_DeadlineSupervision</srcid><srcstatus/><internalId>1907</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_GetApplicationState_E_NOT_OK</srcid><srcstatus/><internalId>1908</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_E_NOT_OK</srcid><srcstatus/><internalId>1909</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_PartitionState</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.ECUC_WdgM_00352</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Name: WdgMDefensiveBehavior
        Parameter Type: Boolean
        Parent Containers: WdgMGeneral,
        Description: Preprocessor switch to enable/disable the defensive behavior of the Watchdog 
        Manager module.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Origin: AUTOSAR_ECUC
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.ECUC_WdgM_00353</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Name: WdgMDemEventParameterRefs
        Container Type: Sub-Container
        Parent Containers: WdgMConfigSet,
        Description: Container for the references to DemEventParameter elements which shall be invoked 
        using the API Dem_ReportErrorStatus API in case the corresponding error occurs. The EventId is 
        taken from the referenced DemEventParameter's DemEventId value. The standardized errors are 
        provided in the container and can be extended by vendor specific error references.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.ECUC_WdgM_00354</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Name: WDGM_E_MONITORING
        Parameter Type: Reference
        Parent Containers: WdgMDemEventParameterRefs,
        Description: Reference to the DemEventParameter which shall be issued when the error "
        Monitoring has failed and a watchdog reset will occur" has occured.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Origin: AUTOSAR_ECUC
        Destination: /AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.ECUC_WdgM_00355</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Name: WDGM_E_SET_MODE
        Parameter Type: Reference
        Parent Containers: WdgMDemEventParameterRefs,
        Description: Reference to the DemEventParameter which shall be issued when the error "Watchdog 
        drivers' mode switch has failed" has occured.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Origin: AUTOSAR_ECUC
        Destination: /AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.ECUC_WdgM_00357</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Name: WDGM_E_IMPROPER_CALLER
        Parameter Type: Reference
        Parent Containers: WdgMDemEventParameterRefs,
        Description: Reference to the DemEventParameter which shall be issued when the defensive 
        behavior checks have detected an improper caller.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Origin: AUTOSAR_ECUC
        Destination: /AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.ECUC_WdgM_00358</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Name: WdgMCallerIds
        Container Type: Sub-Container
        Parent Containers: WdgMGeneral,
        Description: Contains the definition of valid CallerIds for the callers who have permission to 
        call the function WdgM_SetMode.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
      </description>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_MultipleCallerIds</srcid><srcstatus/><internalId>1840</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.ECUC_WdgM_00359</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Name: WdgMCallerId
        Parameter Type: Integer
        Parent Containers: WdgMCallerIds,
        Description: This parameter defines one valid CallerId for the callers who have permission to 
        call the function WdgM_SetMode.
        Lower Multiplicity: 0
        Upper Multiplicity: 255
        Origin: AUTOSAR_ECUC
        Symbolic-Name-Value: false
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall be able to detect the following errors and exceptions 
        depending on its configuration (development / production mode): Type or error Relevance Related 
        error code Value API service used in wrong context (without module initialization) Development 
        WDGM_E_NO_INIT 0x10 API service Wdg_Init was called with an erroneous configuration set. 
        Development WDGM_E_PARAM_CONFIG 0x11 API service called with wrong "mode" parameter Development 
        WDGM_E_PARAM_MODE 0x12 API service called with wrong "supervised entity identifier" parameter 
        Development WDGM_E_PARAM_SEID 0x13 API service called with a null pointer parameter Development 
        WDGM_E_INV_POINTER 0x14 Disabling of watchdog not allowed (e.g. in safety-related systems) 
        Development WDGM_E_DISABLE_NOT_ALLOWED 0x15 API service used with an invalid CheckpointId. 
        Development WDGM_E_CPID 0x16 Deprecated API service was used. Development WDGM_E_DEPRECATED 
        0x17 Function WdgM_UpdateAliveIndication cannot determine the Checkpoint, because there are 
        more than one alive supervisions configured in the current mode for the given Supervised Entity.
        Development WDGM_E_AMBIGIOUS 0x18 API service used with a checkpoint of a Supervised Entity 
        that is deactivated in the current Watchdog Manager mode. Development WDGM_E_SEDEACTIVATED 0x19 
        Supervision has failed and a watchdog reset will occur Production WDGM_E_SUPERVISION assigned 
        by DEM Watchdog drivers' mode switch has failed Production WDGM_E_SET_MODE assigned by DEM 
        Defensive behavior checks have detected an improper caller. Production WDGM E_IMPROPER_CALLER 
        assigned by DEM Values for production code Event Ids are assigned externally by the Diagnostic 
        Event Manager (DEM)
      </description>
      <furtherinfo>
        WRN.swurs.needscoverage.count: Requirement use case is refined in more than 10 refined 
        requirements due to use case consistency.
      </furtherinfo>
      <comment>
        Refined this requirement in order to allow separate handling of all the different
        error codes. WDGM_E_SUPERVISION was replaced by WDGM_E_MONITORING due to Rfc#61167.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00004.1</srcid><srcstatus/><internalId>372</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00004.2</srcid><srcstatus/><internalId>373</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00004.3</srcid><srcstatus/><internalId>374</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00004.4</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00004.5</srcid><srcstatus/><internalId>376</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00004.6</srcid><srcstatus/><internalId>377</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00004.7</srcid><srcstatus/><internalId>378</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00004.8</srcid><srcstatus/><internalId>379</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00004.9</srcid><srcstatus/><internalId>380</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00004.10</srcid><srcstatus/><internalId>381</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00004.11</srcid><srcstatus/><internalId>382</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00004.12</srcid><srcstatus/><internalId>383</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00004.13</srcid><srcstatus/><internalId>384</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDemStoppedSupervisionReport [WdgM.ECUC_WdgM_00338] is set to true 
        then production relevant errors shall be reported to the Diagnostic Event Manager (DEM)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30045</srcid><srcstatus/><internalId>1755</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30046</srcid><srcstatus/><internalId>1756</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2964</srcid><srcstatus/><internalId>1111</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall use only the following imported types of other modules: 
        Module Imported Type Dem Dem_EventIdType Dem_EventStatusType Os AccessType 
        ApplicationStateRefType ApplicationType CounterType ISRType MemorySizeType 
        MemoryStartAddressType ObjectAccessType ObjectTypeType RestartType ScheduleTableStatusRefType 
        ScheduleTableType StatusType TaskType TickRefType TickType TrustedFunctionIndexType 
        TrustedFunctionParameterRefType Std_Types Std_ReturnType Std_VersionInfoType WdgIf 
        WdgIf_ModeType 
      </description>
      <comment>
        Set coverage to REFINE, because requirement is not atomar.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00011.1</srcid><srcstatus/><internalId>385</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00011.2</srcid><srcstatus/><internalId>386</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00011.3</srcid><srcstatus/><internalId>387</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00011.4</srcid><srcstatus/><internalId>388</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall perform Inter Module Checks to avoid integration of 
        incompatible files. The imported included files shall be checked by preprocessing directives. 
        The following version numbers shall be verified: &lt;MODULENAME&gt;_AR_RELEASE_MAJOR_VERSION &lt;
        MODULENAME&gt;_AR_RELEASE_MINOR_VERSION Where &lt;MODULENAME&gt; is the module short name of the other (
        external) modules which provide header files included by the Watchdog Manager module. If the 
        values are not identical to the expected values, an error shall be reported.
      </description>
      <comment>
        Conflicts with EB coding guideline [BSWM_CHK_401] (...inter-module version-checks
        SHALL NOT be done...). See:
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Engineering_AutoCore/Software_Construction/Coding_Guidelines
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.VersionChek</srcid><srcstatus/><internalId>755</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The file include structure shall be as follows: Figure 1: File include structure for the 
        Watchdog Manager Gray boxes are optional.
      </description>
      <comment>
        The SWS specifies a UML diagram of the file include structure in Figure 1.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure</srcid><srcstatus/><internalId>1638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The detection of production code errors cannot be switched off.
      </description>
      <comment>
        Conflicts with EB requirement [BSWM_EB_002]. See:
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/
        Engineering_AutoCore/Software_Construction/Coding_Guidelines
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.OptionalDemReporting</srcid><srcstatus/><internalId>748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] is enabled, the routine shall 
        check if the Watchdog Manager is initialized. In case of an error the mode switch shall not be 
        executed, the error shall be reported to the Development Error Tracer with the error code 
        WDGM_E_NO_INIT and the routine shall return the value E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30034</srcid><srcstatus/><internalId>1743</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1605</srcid><srcstatus/><internalId>983</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] is enabled, the parameter SEId 
        shall be checked for being in the list of the entities under control of the Watchdog Manager. 
        In case of an error the service shall not be executed, the error shall be reported to the 
        Development Error Tracer with the error code WDGM_E_PARAM_SEID and the routine shall return the 
        value E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30051</srcid><srcstatus/><internalId>1762</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2030</srcid><srcstatus/><internalId>1019</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] is enabled, the routine shall 
        check if the Watchdog Manager is initialized. In case of an error the service shall not be 
        executed, the error shall be reported to the Development Error Tracer with the error code 
        WDGM_E_NO_INIT and the routine shall return the value E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30036</srcid><srcstatus/><internalId>1746</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2012</srcid><srcstatus/><internalId>1017</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the WdgMOffModeEnabled [WdgM.ECUC_WdgM_00340] switch is not enabled, and the initial mode provided 
        by the configuration (ConfigPtr) will disable the watchdog (WDGIF_OFF_MODE) then the function 
        WdgM_Init shall not execute the initialization routine and if the WdgMDevErrorDetect switch is 
        enabled, the function WdgM_Init shall report development error code WDGM_E_DISABLE_NOT_ALLOWED 
        to the Det_ReportError service of the Development Error Tracer.
      </description>
      <comment>
        The configuration restriction (xpath check) specified in WDGM.EB.WdgMOffModeEnabled
        ensures that WdgMOffModeEnabled can only be disabled if no watchdog is configured with WdgIf
        mode WDGIF_OFF_MODE. Further, no post-build time confiugration can bypass this constraint
        due to Deviation: ASCWDGM-224 Post build time configuration. Further,
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.WdgMOffModeEnabled</srcid><srcstatus/><internalId>488</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The following Data Types shall be used for the functions defined in this specification.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00038.1</srcid><srcstatus/><internalId>389</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00038.2</srcid><srcstatus/><internalId>390</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00038.3</srcid><srcstatus/><internalId>391</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00038.4</srcid><srcstatus/><internalId>392</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00038.5</srcid><srcstatus/><internalId>393</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00038.6</srcid><srcstatus/><internalId>394</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDefensiveBehavior [WdgM.ECUC_WdgM_00352] is enabled, the routine 
        shall check if the Watchdog Manager is initialized. In case of an error the main function shall 
        not be executed, the error shall be reported to the Development Error Tracer with the error 
        code WDGM_E_NO_INIT.
      </description>
      <comment>
        Refined in WDGM.EB.TIMEPM.WDGM020437 due to the polling communication concept. See
        also Deviation: ASCWDGM-303 ((De-)Init is done synchronously to MainFunction).
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.TIMEPM.WDGM020437</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The detection of all development errors shall be configurable (on/off) at pre-compile time. The 
        switch WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] shall activate or deactivate the detection of all 
        development errors.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Detected development errors shall be reported to the Det_ReportError service of the Development 
        Error Tracer (DET) if the configuration parameter WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] is enabled.
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count: DET will be called for each API and each API has its own test so test counter can not be fullfiled.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30105</srcid><srcstatus/><internalId>1742</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30034</srcid><srcstatus/><internalId>1743</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30108</srcid><srcstatus/><internalId>1744</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30035</srcid><srcstatus/><internalId>1745</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30036</srcid><srcstatus/><internalId>1746</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30039</srcid><srcstatus/><internalId>1747</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30106</srcid><srcstatus/><internalId>1748</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30040</srcid><srcstatus/><internalId>1749</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30041</srcid><srcstatus/><internalId>1750</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30044</srcid><srcstatus/><internalId>1751</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30027</srcid><srcstatus/><internalId>1753</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30042</srcid><srcstatus/><internalId>1754</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30109</srcid><srcstatus/><internalId>1757</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30043</srcid><srcstatus/><internalId>1758</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30049</srcid><srcstatus/><internalId>1760</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30050</srcid><srcstatus/><internalId>1761</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30051</srcid><srcstatus/><internalId>1762</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30107</srcid><srcstatus/><internalId>1763</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30047</srcid><srcstatus/><internalId>1764</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30048</srcid><srcstatus/><internalId>1765</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30052</srcid><srcstatus/><internalId>1766</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM_Int.h.m4_32</srcid><srcstatus/><internalId>936</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00060</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The function WdgM_MainFunction() shall perform the processing of cyclic jobs of the Watchdog 
        Manager module.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30118</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30118_Multicore</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2366</srcid><srcstatus/><internalId>1054</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00110</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The function Wdg_GetVersionInfo shall return the version information of this module. The 
        version information shall include the Module Id, the Vendor Id and the Vendor specific version 
        number. The function Wdg_GetVersionInfo can be disabled by the pre-compile time configuration 
        parameter WdgMVersionInfoApi [WdgM.ECUC_WdgM_00302]
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30017</srcid><srcstatus/><internalId>1741</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1505</srcid><srcstatus/><internalId>971</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00126</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The module shall include the Dem.h file. By this inclusion the APIs to report errors as well as 
        the required Event Id symbols are included. This specification defines the name of the Event Id 
        symbols which are provided by XML to the DEM configuration tool. The DEM configuration tool 
        assigns ECU dependent values to the Event Id symbols and publishes the symbols in Dem_IntErrId.
        h.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB_Multicore</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM_Int.h.m4_22</srcid><srcstatus/><internalId>935</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00127</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The code file structure shall not be defined within this specification completely. At this 
        point it shall be pointed out that the code-file structure shall include the following file 
        named if post-build time configurations parameters exists: WdgM_PBcfg.c - for post build time 
        configurable parameters. This file shall contain all post-build time configurable parameters.
      </description>
      <comment>
        Set to DEVIATION because of deviation: [ASCWDGM-224] Post build time configuration
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.PostBuildTimeConfiguration</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00129</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        When the Global Supervision Status has reached WDGM_GLOBAL_STATUS_STOPPED and if the 
        configuration parameter WdgMDemStoppedSupervisionReport is set to TRUE, the Watchdog Manager 
        module shall report an error status to the DEM (for details see chapters 7.5 and 7.7)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30124</srcid><srcstatus/><internalId>1727</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30135</srcid><srcstatus/><internalId>1730</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30136</srcid><srcstatus/><internalId>1731</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30114</srcid><srcstatus/><internalId>1808</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30124_Multicore</srcid><srcstatus/><internalId>1851</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30135_Multicore</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30136_Multicore</srcid><srcstatus/><internalId>1855</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4589</srcid><srcstatus/><internalId>1215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00146</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall provide a single service port for Alive Supervision for each 
        Supervised Entity that is configured. To be able to match an Alive Supervision port with its 
        corresponding mode port for Status Reporting, a naming convention is necessary.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30137</srcid><srcstatus/><internalId>1773</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30137_multicore</srcid><srcstatus/><internalId>1796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00147</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Alive Supervision ports of the Watchdog Manager module shall be named alive000, alive001, 
        to alive&lt;#SE-1&gt;. The numbers shall start with 0 and be consecutive until the number of 
        configured Supervised Entities is reached.
      </description>
      <comment>
        Set to DEVIATION because of deviation: [ASCWDGM-164] Symbolic port names instead of
        numeric port name numbering =&gt; replaced by WDGM.EB.WDGM147
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.SymbolicPortNames</srcid><srcstatus/><internalId>752</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00149</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Watchdog Manager module's single mode ports for reporting the Supervision Status of each 
        Supervised Entity shall be named mode000, mode001, to mode&lt;#SE-1&gt;. The numbers shall start with 
        0 and be consecutive until the number of configured Supervised Entities is reached. Furthermore,
        the Watchdog Manager module must be able to report the Global Supervision Status.
      </description>
      <comment>
        Set to DEVIATION because of deviation: [ASCWDGM-164] Symbolic port names instead of
        numeric port name numbering =&gt; replaced by WDGM.EB.WDGM149
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.SymbolicPortNames</srcid><srcstatus/><internalId>752</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00155</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Service name: WdgM_UpdateAliveCounter Syntax: Std_ReturnType WdgM_UpdateAliveCounter(ÿÿÿ 
        WdgM_SupervisedEntityIdType SEID) Service ID[hex]: 0x04 Sync/Async: Synchronous Reentrancy: 
        Reentrant Parameters (in): SEID Identifier of the entity under control of the WdgM whose alive 
        counter shall be updated Parameters (inout): None Parameters (out): None Return value: 
        Std_ReturnType E_OK: Successfully updated alive counterE_NOT_OK: Update failed Description: 
        BEWARE, this API is deprecated. Gives alive indications to the Watchdog Manager. This function 
        is deprecated and should not be used anymore. It is only provided for backward compatibility. 
        Use WdgM_CheckpointReached instead! If the function WdgM_UpdateAliveCounter is used, then there 
        shall be at most one Alive Supervision configured for a Supervised Entity for a given mode. By 
        this means, at runtime the function WdgM_CheckpointReached is able to identify the Checkpoint 
        from the Supervised Entity ID. If more than one are configured, the function returns an error 
        code to DET.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_LogicalSupervision</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_DeadlineSupervision</srcid><srcstatus/><internalId>1711</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_0702_DetErrorAmbigous</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_380</srcid><srcstatus/><internalId>901</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1991</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        API function Description AllowAccess This service sets the own state of an OS-Application from 
        APPLICATION_RESTARTING to APPLICATION_ACCESSIBLE. CallTrustedFunction A (trusted or non-trusted)
        OS-Application uses this service to call a trusted function CheckISRMemoryAccess This service 
        checks if a memory region is write/read/execute accessible and also returns information if the 
        memory region is part of the stack space. CheckObjectAccess This service determines if the OS-
        Applications, given by ApplID, is allowed touse the IDs of a Task, ISR, Resource, Counter, 
        Alarm or Schedule Table in API calls. CheckObjectOwnership This service determines to which OS-
        Application a given Task, ISR, Counter, Alarm or Schedule Table belongs CheckTaskMemoryAccess 
        This service checks if a memory region is write/read/execute accessible and also returns 
        information if the memory region is part of the stack space. GetApplicationID This service 
        determines the currently running OS-Application (a unique identifier has to be allocated to 
        each application). GetApplicationState This service returns the current state of an OS-
        Application. GetElapsedValue This service gets the number of ticks between the current tick 
        value and a previously read tick value. GetISRID This service returns the identifier of the 
        currently executing ISR. GetScheduleTableStatus This service queries the state of a schedule 
        table (also with respect to synchronization). IncrementCounter This service increments a 
        software counter. NextScheduleTable This service switches the processing from one schedule 
        table to another schedule table. SetScheduletableAsync This service stops synchronization of a 
        schedule table. StartScheduleTableAbs This service starts the processing of a schedule table at 
        an absolute value "Start" on the underlying counter. StartScheduleTableRel This service starts 
        the processing of a schedule table at "Offset" relative to the "Now" value on the underlying 
        counter. StartScheduleTableSynchron This service starts an explicitly synchronized schedule 
        table synchronously. StopScheduleTable This service cancels the processing of a schedule table 
        immediately at any point while the schedule table is running. SyncScheduleTable This service 
        provides the schedule table with a synchronization count and start synchronization. 
        WdgIf_SetMode Map the service WdgIf_SetMode to the service Wdg_SetMode of the corresponding 
        Watchdog Driver. WdgIf_SetTriggerCondition Map the service WdgIf_SetTriggerCondition to the 
        service Wdg_SetTriggerCondition of the corresponding Watchdog Driver.
      </description>
      <furtherinfo>
        WRN.swurs.needscoverage.count: Requirement use case is refined in more than 10 refined 
        requirements due to use case consistency.
      </furtherinfo>
      <comment>
        Refined this requirement, because each interface shall be handled / tested
        individually. Further, only a small subset of these interfaces is really required.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.1</srcid><srcstatus/><internalId>395</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.2</srcid><srcstatus/><internalId>396</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.3</srcid><srcstatus/><internalId>397</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.4</srcid><srcstatus/><internalId>398</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.5</srcid><srcstatus/><internalId>399</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.6</srcid><srcstatus/><internalId>400</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.7</srcid><srcstatus/><internalId>401</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.8</srcid><srcstatus/><internalId>402</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.9</srcid><srcstatus/><internalId>403</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.10</srcid><srcstatus/><internalId>404</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.11</srcid><srcstatus/><internalId>405</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.12</srcid><srcstatus/><internalId>406</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.13</srcid><srcstatus/><internalId>407</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.14</srcid><srcstatus/><internalId>408</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.15</srcid><srcstatus/><internalId>409</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.16</srcid><srcstatus/><internalId>410</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.17</srcid><srcstatus/><internalId>411</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.18</srcid><srcstatus/><internalId>412</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.19</srcid><srcstatus/><internalId>413</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.20</srcid><srcstatus/><internalId>414</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00161.21</srcid><srcstatus/><internalId>415</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00162</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        API function Description BswM_WdgM_RequestPartitionReset Function called by WdgM to request a 
        partition reset. Dem_ReportErrorStatus Queues the reported events from the BSW modules (API is 
        only used by BSW modules). The interface has an asynchronous behavior, because the processing 
        of the event is done within the Dem main function. Det_ReportError Service to report 
        development errors. Mcu_PerformReset The service performs a microcontroller reset. 
        TerminateApplication This service terminates the OS-Application to which the calling Task/
        Category 2 ISR/application specific error hook belongs.
      </description>
      <comment>
        Refined this requirement, because each interface shall be handled / tested
        individually. Further, only a small subset of these interfaces are optionally required.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00162.1</srcid><srcstatus/><internalId>416</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00162.2</srcid><srcstatus/><internalId>417</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00162.3</srcid><srcstatus/><internalId>418</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00162.4</srcid><srcstatus/><internalId>419</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00162.5</srcid><srcstatus/><internalId>420</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00173</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] is enabled, the routine shall 
        check if the Watchdog Manager is initialized. In case of an error the service shall not be 
        executed, the error shall be reported to the Development Error Tracer with the error code 
        WDGM_E_NO_INIT and the routine shall return the value E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30039</srcid><srcstatus/><internalId>1747</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2123</srcid><srcstatus/><internalId>1026</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00176</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] is enabled, the routine shall 
        check if the Watchdog Manager is initialized. In case of an error the service shall not be 
        executed, the error shall be reported to the Development Error Tracer with the error code 
        WDGM_E_NO_INIT and the routine shall return the value E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30106</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2199</srcid><srcstatus/><internalId>1034</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00195</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The mode ports of the Watchdog Manager module shall declare the following modes: STATUS_OK 
        STATUS_FAILED STATUS_EXPIRED STATUS_STOPPED STATUS_DEACTIVATED This definition corresponds to 
        the type WdgM_LocalStatusType.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30137</srcid><srcstatus/><internalId>1773</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30137_multicore</srcid><srcstatus/><internalId>1796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00196</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall notify SW-Cs / CDDs through the RTE mode ports when the state 
        change occurs. It is an implementation choice whether to use the Direct or the Indirect RTE API 
        for this notification. Via the Direct API the implementation must invoke the generated API for 
        individual Supervised Entities Rte_StatusType Rte_Switch_mode&lt;SEID&gt;_currentMode(
        Rte_ModeType_WdgM_Mode mode) and for the global state Rte_StatusType 
        Rte_Switch_globalMode_currentMode(Rte_ModeType_WdgM_Mode mode) where mode is the new mode to be 
        notified. The value range is specified by the previous requirement. The return value can be 
        ignored. Using the indirect port API as shown in chapter 7.11.2.3 Port Interfaces can result in 
        less code when reporting the state to individual Supervised Entities and can therefore be used 
        alternatively to the above API.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30137</srcid><srcstatus/><internalId>1773</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30137_multicore</srcid><srcstatus/><internalId>1796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00212</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Watchdog Manager configuration generator shall reject configurations where Internal 
        Transitions  in a Supervised Entity connect Checkpoints that do not both belong to the same 
        Supervised Entity. To switch on and off the Logical monitoring of an Internal Graph depending 
        on the mode, it is needed to reference (or respectively do not reference) the Supervised Entity 
        from each mode . It is possible to have only zero, one or more Internal Graphs per Supervised 
        Entity. Moreover, not all Checkpoints of a Supervised Entity need to be monitored. However, no 
        checkpoint may belong to more than one Graph. This is because it is assumed that each Graph can 
        be executed concurrently and in case of overlaps, there are no means to differentiate to which 
        Graph a given Checkpoint would belong.
      </description>
      <comment>
        Requirement must be refined, because: * it violates the atomicity constraint, and *
        a Supervised Entity can have at most one internal Graph: see
        http://www.autosar.org/bugzilla/show_bug.cgi?id=56411
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00212.1</srcid><srcstatus/><internalId>421</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00212.2</srcid><srcstatus/><internalId>422</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00212.3</srcid><srcstatus/><internalId>423</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00212.4</srcid><srcstatus/><internalId>424</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00219</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the Global Supervision Status was WDGM_GLOBAL_STATUS_EXPIRED, the Local Supervision Status 
        of at least one Supervised Entity is WDGM_LOCAL_STATUS_EXPIRED, and the Expired Cycle Counter 
        is less or equal to the configured Expired Supervision Tolerance , then function 
        Wdgm_MainFunction shall keep Global Supervision Status WDGM_GLOBAL_STATUS_EXPIRED and increment 
        the Expired Cycle Counter  in Figure 4)
      </description>
      <comment>
        Implemented differently due to: Deviation [ASCWDGM-310] Consistent interpretation of
        parameter WdgMExpiredSupervisionCycleTol
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.WdgMExpiredSupervisionCycleTol</srcid><srcstatus/><internalId>751</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00220</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the Global Supervision Status was WDGM_GLOBAL_STATUS_EXPIRED, the Local Supervision Status 
        of at least one Supervised Entity is WDGM_LOCAL_STATUS_EXPIRED, and the Expired Cycle Counter 
        is larger than the configured Expired Supervision Tolerance , then function Wdgm_MainFunction 
        shall change the Global Supervision Status to WDGM_GLOBAL_STATUS_STOPPED  in Figure 4)
      </description>
      <comment>
        Implemented differently due to: Deviation [ASCWDGM-310] Consistent interpretation of
        parameter WdgMExpiredSupervisionCycleTol
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.WdgMExpiredSupervisionCycleTol</srcid><srcstatus/><internalId>751</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00223</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall update the trigger condition every time the Global 
        Supervision Status has been recomputed. Following rules shall be used to derive the decision, 
        how to set the triggering condition. In short: For the states WDGM_GLOBAL_STATUS_OK, 
        WDGM_GLOBAL_STATUS_FAILED and WDGM_GLOBAL_STATUS_EXPIRED, the function WdgM_MainFunction shall 
        set correctly the trigger conditions. For the states WDGM_GLOBAL_STATUS_DEACTIVATED, and 
        WDGM_GLOBAL_STATUS_STOPPED, the function WdgM_MainFunction shall set the trigger conditions to 
        0, which results with a reset through HW watchdog(s)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30126</srcid><srcstatus/><internalId>1728</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30111</srcid><srcstatus/><internalId>1803</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30112</srcid><srcstatus/><internalId>1804</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30113</srcid><srcstatus/><internalId>1805</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30115</srcid><srcstatus/><internalId>1809</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30126_Multicore</srcid><srcstatus/><internalId>1852</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2621</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2627</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2672</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6219</srcid><srcstatus/><internalId>1323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00225</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the Local Supervision Status of a Supervised Entity changes to WDGM_LOCAL_STATUS_FAILED and 
        this Supervised Entity has a corresponding OS Application configured , then the Watchdog 
        Manager module shall call the API function BswM_WdgM_RequestPartitionReset of the Basic 
        Software Mode Manager module to request a restart/shutdown of the corresponding partition for 
        the configured OS Application.
      </description>
      <comment>
        Set to DEVIATION because of WdgM.ASR40.SWS_WdgM_00162.1: Supervisor Callout is used
      instead of BswM_WdgM_RequestPartitionReset. Replaced by WDGM.EB.ASR40.WDGM020225.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.PartitionRestart</srcid><srcstatus/><internalId>745</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00234</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Each variable of the Watchdog Manager module that shall be accessible by AUTOSAR Debugging 
        shall be defined as global variable.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.DebugAndTrace</srcid><srcstatus/><internalId>754</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00235</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        All type definitions of variables of the Watchdog Manager module that shall be accessible by 
        AUTOSAR Debugging shall be accessible by the header file WdgM.h.
      </description>
      <comment>
        AUTOSAR Debugging is not supported.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.DebugAndTrace</srcid><srcstatus/><internalId>754</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00236</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The declaration of variables of the Watchdog Manager module in the header file WdgM.h that 
        shall be accessible by AUTOSAR Debugging, shall be such, that it is possible to calculate the 
        size of the variables by C-"sizeof"
      </description>
      <comment>
        AUTOSAR Debugging is not supported.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.DebugAndTrace</srcid><srcstatus/><internalId>754</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00237</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Variables of the Watchdog Manager module that shall be accessible by AUTOSAR Debugging shall be 
        described in the respective Basic Software Module Description. For the Watchdog Manager module 
        the following variables shall be accessible by AUTOSAR Debugging: Local Supervision Status of 
        each Supervised Entity  Global Supervision Status  Alive Counters of each Checkpoint  Timestamp 
        when Checkpoint has been reached  Reached Checkpoints
      </description>
      <comment>
        AUTOSAR Debugging is not supported.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.DebugAndTrace</srcid><srcstatus/><internalId>754</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00238</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Local Supervision Status of each Supervised Entity shall be available for debugging within 
        the Watchdog Manager module. See chapter 7.8 for additional debugging requirements. Figure 3 
        shows the state machine for Local Supervision Status of a Supervised Entity with all possible 
        states. Figure 3: Local Supervision Status For the transitions between the states of the Local 
        Supervision Status the following rules apply:
      </description>
      <comment>
        AUTOSAR Debugging is not supported.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.DebugAndTrace</srcid><srcstatus/><internalId>754</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00239</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Global Supervision Status shall be available for debugging within the Watchdog Manager 
        module. See chapter 7.8 for additional debugging requirements. The Watchdog Manager module 
        provides a feature to postpone the error reaction (the error reaction being not setting a 
        correct trigger condition) for a configurable amount of time measured in multiples of the 
        Supervision Cycle (Supervision cycle is the period at which Wdgm_MainFunction is called), named 
        Expired Supervision Tolerance . The Expired Supervision Tolerance is implemented within the 
        state machine of the Global Supervision Status. The defined state machine is in the state 
        WDGM_GLOBAL_STATUS_EXPIRED while the blocking is postponed.
      </description>
      <comment>
        AUTOSAR Debugging is not supported.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.DebugAndTrace</srcid><srcstatus/><internalId>754</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00240</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Alive Counters of each Checkpoint shall be available for debugging within the Watchdog 
        Manager module. See chapter 7.8 for additional debugging requirements.
      </description>
      <comment>
        AUTOSAR Debugging is not supported.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.DebugAndTrace</srcid><srcstatus/><internalId>754</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00241</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        For each start Checkpoint, the timestamp when each Checkpoint has been reached and the result 
        of Deadline Supervision for each Supervised Entity shall be available for debugging within the 
        Watchdog Manager module.
      </description>
      <comment>
        AUTOSAR Debugging is not supported.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.DebugAndTrace</srcid><srcstatus/><internalId>754</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00242</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The information about the most recently reached Checkpoints for each Graph, the Activity Flag 
        for Each Graph and the result of Logical Supervision for each Supervised Entity shall be 
        available for debugging within the Watchdog Manager module. See chapter 7.8 for additional 
        debugging requirements.
      </description>
      <comment>
        AUTOSAR Debugging is not supported.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.DebugAndTrace</srcid><srcstatus/><internalId>754</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00245</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [WdgM.ECUC_WdgM_00352] switch is enabled, the 
        Watchdog Manager shall check if the given CallerID is in the list of allowed CallerIDs [
        WdgM.ECUC_WdgM_00358]. If it is not, then the service shall return without any effect, it shall return 
        the value E_NOT_OK, and shall report the error status WDGM_E_IMPROPER_CALLER to the DEM.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30045</srcid><srcstatus/><internalId>1755</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_MultipleCallerIds</srcid><srcstatus/><internalId>1840</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1590</srcid><srcstatus/><internalId>982</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6269</srcid><srcstatus/><internalId>1328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00253</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] is enabled, the routine shall 
        check if the Watchdog Manager is initialized. In case of an error the service shall not be 
        executed, the error shall be reported to the Development Error Tracer with the error code 
        WDGM_E_NO_INIT and the routine shall return the value E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30108</srcid><srcstatus/><internalId>1744</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30039</srcid><srcstatus/><internalId>1747</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1713</srcid><srcstatus/><internalId>995</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00255</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] switch is enabled and the configuration variant is 
        VARIANT-POST-BUILD, the function WdgM_Init shall check if a NULL pointer is passed for the 
        ConfigPtr parameter. In case of an error the remaining function WdgM_Init shall not be executed 
        and the function WdgM_Init shall report development error code WDGM_E_INV_POINTER to the 
        Det_ReportError service of the Development Error Tracer.
      </description>
      <comment>
        Set to DEVIATION because of deviation: [ASCWDGM-224] Post build time configuration
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.PostBuildTimeConfiguration</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00259</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Development error values are of type uint8.
      </description>
      <comment>
        Refined in order to trace individual error types.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00259.1</srcid><srcstatus/><internalId>425</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00259.2</srcid><srcstatus/><internalId>426</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00259.3</srcid><srcstatus/><internalId>427</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00259.4</srcid><srcstatus/><internalId>428</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00259.5</srcid><srcstatus/><internalId>429</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00259.6</srcid><srcstatus/><internalId>430</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00259.7</srcid><srcstatus/><internalId>431</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00259.8</srcid><srcstatus/><internalId>432</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00259.9</srcid><srcstatus/><internalId>433</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00259.10</srcid><srcstatus/><internalId>434</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00260</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] switch is enabled API parameter checking is enabled. 
        The detailed description of the detected errors can be found in chapter 7.2 and chapter 8.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30105</srcid><srcstatus/><internalId>1742</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30109</srcid><srcstatus/><internalId>1757</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30043</srcid><srcstatus/><internalId>1758</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30049</srcid><srcstatus/><internalId>1760</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30051</srcid><srcstatus/><internalId>1762</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30107</srcid><srcstatus/><internalId>1763</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30047</srcid><srcstatus/><internalId>1764</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30048</srcid><srcstatus/><internalId>1765</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30052</srcid><srcstatus/><internalId>1766</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00350</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The function WdgM_Init shall clear from the non-initialized RAM the
        double-inverse value storing the SEID that first reached the EXIRED state. See 8.3.11 for
        more information, <biblioref linkend="bmarkAUTOSARSWS"/>. </description>
      <comment> Changed due to Deviation ASCWDGM-303 ((De-)Init is done synchronously to
        MainFunction). That is, WdgM_(De)Init is requested and applied synchronously to
        MainFunction. (see WDGM.EB.TIMEPM.WDGM020434) </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.SynchronousDeInit</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00262</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If source code for caller and callee of WdgM_GetVersionInfo is available at compile time, the 
        Watchdog Manager module should realize WdgM_GetVersionInfo as a macro, defined in the module's 
        header file. There are optional checks that are executed if and only if WdgMDevErrorDetect is 
        enabled.
      </description>
      <comment>
        WdgM_GetVersionInfo is always provided as a function definition and can be disabled
        via configuration parameter WdgMVersionInfoApi (see WdgM.ECUC_WdgM_00302). Set to DEVIATION because
        of deviation [ASCWDGM-226] WdgM_GetVersionInfo as a function
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.GetVersionApi</srcid><srcstatus/><internalId>753</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The parameters of the Watchdog Manager module that shall be configurable at
        post-build time shall be located in an external data structure of type WdgM_ConfigType. The
        type declaration shall be located in the file WdgM.h. </description>
      <comment> Set to DEVIATION because of deviation: [ASCWDGM-224] Post build time configuration </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.PostBuildTimeConfiguration</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00265</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        VARIANT-PRE-COMPILE: This variant contains only pre-compile time configuration parameters.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_LogicalSupervision</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_DeadlineSupervision</srcid><srcstatus/><internalId>1711</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00266</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        VARIANT-POST-BUILD: This variant is a mixture of pre-compile time and post build time 
        configuration parameters.
      </description>
      <comment>
        Set to DEVIATION because of deviation: [ASCWDGM-224] Post build time configuration
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.PostBuildTimeConfiguration</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00267</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The standardized common published parameters as required by BSW00402 in the General 
        Requirements on Basic Software Modules [2] shall be published within the header file of this 
        module and need to be provided in the BSW Module Description. The according module abbreviation 
        can be found in the List of Basic Software Modules [8]
      </description>
      <comment>
        This requirement is set to REFINE in order to allow separation of the BSW module
        description.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00267.1</srcid><srcstatus/><internalId>435</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00267.2</srcid><srcstatus/><internalId>436</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00268</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> If the function WdgM_Init is successfully called, then for each Supervised
        Entity that is referenced from the Initial Mode (WdgMInitialMode) (i.e. each Supervised
        Entity that is activated in the initial mode), the function WdgM_Init shall set the Local
        Monitoring Status for this Supervised Entity to WDGM_LOCAL_STATUS_OK. (see Transition (10)
        in <xref linkend="figureBSWLocalSupervisionStatus"/>). </description>
      <comment> Changed due to Deviation ASCWDGM-303 ((De-)Init is done synchronously to
        MainFunction). That is, WdgM_(De)Init is requested and applied synchronously to
        MainFunction. (see WDGM.EB.TIMEPM.WDGM020426) </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.SynchronousDeInit</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00270</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] is enabled, the routine shall 
        check if the Watchdog Manager is initialized. In case of an error the service shall not be 
        executed, the error shall be reported to the Development Error Tracer with the error code 
        WDGM_E_NO_INIT.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30044</srcid><srcstatus/><internalId>1751</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2249</srcid><srcstatus/><internalId>1040</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00275</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The OS task which is executing the main function WdgM_MainFunction shall be separated from the 
        OS task(s) calling any function from a Supervised Entity under supervision.
      </description>
      <comment>
        This requirement is informational only. Is a userguide requirement and placed at the
        architecture document.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00279</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] is enabled, the routine shall 
        check if the Watchdog Manager is initialized. In case of an error the service shall not be 
        executed, the error shall be reported to the Development Error Tracer with the error code 
        WDGM_E_NO_INIT and the routine shall return the value E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30035</srcid><srcstatus/><internalId>1745</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1802</srcid><srcstatus/><internalId>1003</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00285</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the function WdgM_Init [WDGM151] was successfully called then the function shall change the 
        Global Supervision Status to WDGM_GLOBAL_STATUS_OK  in Figure 9)
      </description>
      <comment>
        Changed due to Deviation ASCWDGM-303 ((De-)Init is done synchronously to
        MainFunction). That is, WdgM_(De)Init is requested and applied synchronously to
        MainFunction. (see WDGM.EB.TIMEPM.WDGM020428)
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.SynchronousDeInit</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00288</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] is enabled, the function 
        WdgM_DeInit shall check if the Watchdog Manager is initialized. In case of an error, the 
        function WdgM_DeInit shall return without any effect and shall report the error to the 
        Development Error Tracer with the error code WDGM_E_NO_INIT.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30040</srcid><srcstatus/><internalId>1749</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1463</srcid><srcstatus/><internalId>962</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00290</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] is enabled, the function shall 
        report the error code WDGM_E_DEPRECATED to the Development Error Tracer.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30055</srcid><srcstatus/><internalId>1759</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckUpdateAliveCounterReturnError</srcid><srcstatus/><internalId>2059</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2023</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00292</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the Global Supervision Status has recomputed as WDGM_GLOBAL_STATUS_DEACTIVATED, then this 
        means that the Watchdog Manager module is not properly initialized and it shall not call 
        WdgIf_SetTriggerCondition.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30126</srcid><srcstatus/><internalId>1728</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30126_Multicore</srcid><srcstatus/><internalId>1852</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2433</srcid><srcstatus/><internalId>1060</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2462</srcid><srcstatus/><internalId>1064</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2469</srcid><srcstatus/><internalId>1065</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00304</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        A unique Supervised Entity identifier for each Supervised Entity is provided in configuration 
        parameter WdgMSupervisedEntityID . The Identifier shall be unique in the scope of the Watchdog 
        Manager module.
      </description>
      <comment>
        Is fulfilled by WdgM.ASR40.SWS_WdgM_00307.1
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00307.1</srcid><srcstatus/><internalId>437</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00305</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        No SW-Cs shall have as Supervised Entity ID a value of any BSW Module ID, regardless which BSW 
        Modules are deployed.
      </description>
      <comment>
        This requirement is informational only. Set to REJECTED, because this is a userguide
        requirement.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00306</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        Each BSW module shall use its module ID as the Supervised Entity ID.
      </description>
      <comment>
        This requirement is informational only. Set to REJECTED, because this is a userguide
        requirement.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00307</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Watchdog Manager configuration generator shall reject configurations where Supervised 
        Entity ID is not unique and the configurations where SW-C Supervised Entities use as a 
        Supervised Entity ID a value that is equal to the Module ID of any BSW module. The Supervised 
        Entities and Checkpoints exist irrespective of Modes. On the other side, the Supervision 
        Functions exist partially irrespective of Modes, and partially dependent on Modes.
      </description>
      <comment>
        Set coverage to REFINE because requirement is not atomar.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00307.1</srcid><srcstatus/><internalId>437</internalId></linkedfrom><linkedfrom><srcid>WdgM.ASR40.SWS_WdgM_00307.2</srcid><srcstatus/><internalId>438</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00308</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Watchdog manager shall reject configurations where a Checkpoint belongs to more than one 
        Internal Graphs.
      </description>
      <comment>
        This requirement is not applicable: A Supervised Entity can have at most one
        internal Graph. see http://www.autosar.org/bugzilla/show_bug.cgi?id=56411
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00309</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Watchdog manager shall reject configurations where in any mode there is a Checkpoint that 
        belongs to an External Graph and to an Internal Graph.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_822</srcid><srcstatus/><internalId>1584</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_876</srcid><srcstatus/><internalId>1589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00310</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Watchdog manager shall reject configurations where in the same mode a Checkpoint belongs to 
        more than one External Graphs.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_823</srcid><srcstatus/><internalId>1585</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_877</srcid><srcstatus/><internalId>1590</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00311</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Watchdog Manager configuration generator shall reject the configurations where 
        WdgMOsApplicationRef points to a trusted OS-Application (i.e. where OsTrusted the of 
        OsApplication is true)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GEN_WdgMOsApplicationRef_TrustedOSApplication</srcid><srcstatus/><internalId>1939</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1375</srcid><srcstatus/><internalId>1601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00313</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Watchdog Manager configuration generator shall reject configurations where the Deadline 
        Supervision (WdgMDeadlineSupervision) of a Supervised Entity refer to Checkpoints (
        WdgMDeadlineStartRef, WdgMDeadlineEndRef) that does not both belong to that Supervised Entity (
        i.e. both referred Checkpoints shall belong to the Supervised Entity)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_02_NegativeTestsPart2</srcid><srcstatus/><internalId>1934</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_645</srcid><srcstatus/><internalId>1577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00314</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The Watchdog Manager configuration generator shall reject configurations where for an ordered 
        set of two Checkpoints there are more than one Deadline Supervision (WdgMDeadlineSupervision) 
        defined.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_02_NegativeTestsPart2</srcid><srcstatus/><internalId>1934</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GENTEST_04_NegativeTestsPart4</srcid><srcstatus/><internalId>1936</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6005</srcid><srcstatus/><internalId>1310</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6100</srcid><srcstatus/><internalId>1315</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_652</srcid><srcstatus/><internalId>1578</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00317</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        The function WdgM_SetMode shall not change the Global Supervision Status nor the expired 
        reference cycle counter.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30126</srcid><srcstatus/><internalId>1728</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30113</srcid><srcstatus/><internalId>1805</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30126_Multicore</srcid><srcstatus/><internalId>1852</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2722</srcid><srcstatus/><internalId>1095</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00318</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        This function shall call the function WdgM_CheckpointReached and shall provide as parameter the 
        Checkpoint of the Alive Supervision of the current mode.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30119</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30120</srcid><srcstatus/><internalId>1720</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30122</srcid><srcstatus/><internalId>1721</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30121</srcid><srcstatus/><internalId>1722</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30141</srcid><srcstatus/><internalId>1733</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30119_Multicore</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30120_Multicore</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30122_Multicore</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30121_Multicore</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30141_Multicore</srcid><srcstatus/><internalId>1857</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2066</srcid><srcstatus/><internalId>1021</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00319</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] is enabled, the routine shall 
        check if Supervised Entity to which the parameter CheckpointID belongs, is activated in the 
        current mode. In case of an error (i.e. the Supervised Entity is deactivated in the current 
        mode), the service shall not be executed, the error shall be reported to the Development Error 
        Tracer with the error code WDGM_E_SEDEACTIVATED and the routine shall return the value E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30050</srcid><srcstatus/><internalId>1761</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1855</srcid><srcstatus/><internalId>1006</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00320</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] is enabled, the routine shall 
        check if in the current mode there are more than one Alive Supervisions (WdgMAliveSupervision) 
        configured. If so, then the routine shall report the error code WDGM_E_AMBIGIOUS to the 
        Development Error Tracer.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_0702_DetErrorAmbigous</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2071</srcid><srcstatus/><internalId>1022</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00333</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        ClientServerInterface WdgM_AliveSupervision { isService = true; PossibleErrors { E_NOT_OK }; 
        UpdateAliveCounter (ERR{E_NOT_OK}); CheckpointReached(IN WdgM_CheckpointIdType, ERR{E_NOT_OK}
        Compared to the API, the "WdgM_" prefix in the names is not required, because the names given 
        here will show up in the XML not globally but as part of an interface description.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30137</srcid><srcstatus/><internalId>1773</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30138</srcid><srcstatus/><internalId>1774</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30137_multicore</srcid><srcstatus/><internalId>1796</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30138_multicore</srcid><srcstatus/><internalId>1797</internalId></linkedfrom><linkedfrom><srcid>TS_WdgM_ImpTest_04_04_RteIntegration</srcid><srcstatus/><internalId>1968</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00338</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        This is the definition of the Watchdog Manager as a * service. This is the outside view of the 
        Watchdog Manager, * which must be visible to the SW-Cs/CDDs / ECU integrator **/ Service WdgM 
        For each supervised entity the Watchdog Manager // provides a port to update the alive counter 
        ProvidePort WdgM_AliveSupervision alive000;. ProvidePort WdgM_AliveSupervision alive&lt;#SE-1&gt;
        For each supervised entity the Watchdog Manager // provides a mode port to signal the Local // 
        Supervision Status to interested SW-Cs/CDDs and the RTE ProvidePort WdgM_IndividualMode mode000;
        ProvidePort WdgM_IndividualMode mode&lt;#SE-1&gt;; // The Watchdog Manager also provides a single 
        mode port // to signal the Global Supervision Status to // interested SW-Cs/CDDs and the 
        RTEProvidePort WdgM_GlobalMode globalMode; InternalBehavior { // Runnable entities of the 
        Watchdog Manager RunnableEntity UpdateAliveCounter symbol "WdgM_UpdateAliveCounter" 
        canbeInvokedConcurrently = TRUE RunnableEntity CheckpointReached symbol "WdgM_CheckpointReached"
        canbeInvokedConcurrently = TRUE PortArgument{port= alive000, value.type= 
        WdgM_SupervisedEntityIdType, value.value=0}; PortArgument{port= alive001, value.type= 
        WdgM_SupervisedEntityIdType, value.value=1};. PortArgument{port= alive&lt;#SE-1&gt;, value.type= 
        WdgM_SupervisedEntityIdType, value.value=&lt;#SE-1&gt;}; IndirectAPI{port= mode000}; IndirectAPI{port=
        mode001};. IndirectAPI{port= mode&lt;#SE-1&gt;
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30137</srcid><srcstatus/><internalId>1773</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30137_multicore</srcid><srcstatus/><internalId>1796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>WdgM.ECUC_WdgM_00300</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        Name: WdgMGeneral
        Container Type: Container
        Sub-Containers: WdgMSupervisedEntity WdgMWatchdog 
        Description: Container defines all general configuration parameters of the Watchdog Manager.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00301</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMDevErrorDetect
        Parameter Type: Boolean
        Parent Containers: WdgMGeneral,
        Description: Switches the development error detection and notification on or off.
        Introduction: * true: detection and notification is enabled. * false: detection and 
        notification is disabled.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00302</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMVersionInfoApi
        Parameter Type: Boolean
        Parent Containers: WdgMGeneral,
        Description: Preprocessor switch to enable/disable the existence of the API WdgM_GetVersionInfo.
        Shall be used to remove unneeded code segments.
        Introduction: true: API is enabled false: API is disabled
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00303</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMSupervisedEntity
        Container Type: Sub-Container
        Parent Containers: WdgMGeneral,
        Sub-Containers: WdgMCheckpoint WdgMInternalTransition 
        Description: This container collects all common (mode-independent) parameters of a Supervised 
        Entity to be supervised by the Watchdog Manager.
        Lower Multiplicity: 0
        Upper Multiplicity: 65535
      </description>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30118</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30118_Multicore</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00304</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMSupervisedEntityId
        Parameter Type: Integer
        Parent Containers: WdgMSupervisedEntity,
        Description: This parameter shall contain the unique identifier of the supervised entity.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This requirement is refined to provide a check that the CheckpointIds are unique
        (with restriction of zero-based and dense numbering - see Limitation ASCWDGM-306 Restriction
        of numbering of Checkpoint IDs)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SYMBOLICNAMEVALUES</srcid><srcstatus/><internalId>1708</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.WdgMCheckpointID</srcid><srcstatus/><internalId>492</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.WdgMCheckpointIDValues</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00305</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMCheckpoint
        Container Type: Sub-Container
        Parent Containers: WdgMSupervisedEntity,
        Description: This container collects all Checkpoints of this Supervised Entity. Each Supervised 
        Entity has at least one Checkpoint.
        Lower Multiplicity: 1
        Upper Multiplicity: 65535
      </description>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_0701_MultipleAliveCounters</srcid><srcstatus/><internalId>1827</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00306</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMCheckpointId
        Parameter Type: Integer
        Parent Containers: WdgMCheckpoint,
        Description: This parameter shall contain the unique identifier of Checkpoint.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SYMBOLICNAMEVALUES</srcid><srcstatus/><internalId>1708</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00307</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMModeId
        Parameter Type: Integer
        Parent Containers: WdgMMode,
        Description: This parameter fixes the identifier for the mode. This identifier is for instance 
        passed as a parameter to the WdgM_SetMode service.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 255 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SYMBOLICNAMEVALUES</srcid><srcstatus/><internalId>1708</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00308</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMAliveSupervision
        Container Type: Sub-Container
        Parent Containers: WdgMMode,
        Description: This container collects all configuration parameters of Alive-Supervision of one 
        Checkpoint. Note that each Checkpoint may have different parameters. For example, it may have 
        different min and max margin.
        Lower Multiplicity: 0
        Upper Multiplicity: 65535
      </description>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30118</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_0701_MultipleAliveCounters</srcid><srcstatus/><internalId>1827</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30118_Multicore</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_AliveSupervisionLimit_OK</srcid><srcstatus/><internalId>1915</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_AliveSupervisionLimit_NOK_missedCP</srcid><srcstatus/><internalId>1916</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_AliveSupervisionLimit_OK_Multicore</srcid><srcstatus/><internalId>1917</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_AliveSupervisionLimit_NOK_missedCP_Multicore</srcid><srcstatus/><internalId>1918</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckPointLimit_OK_Multicore</srcid><srcstatus/><internalId>1919</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SupervisedEntityLimit_OK_Multicore</srcid><srcstatus/><internalId>1930</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00309</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMAliveSupervisionCheckpointRef
        Parameter Type: Reference
        Parent Containers: WdgMAliveSupervision,
        Description: Reference to Checkpoint within a Supervised Entity that shall be supervised.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMCheckpoint
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00310</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMSupervisionReferenceCycle
        Parameter Type: Integer
        Parent Containers: WdgMAliveSupervision,
        Description: This parameter shall contain the amount of supervision cycles to be used as 
        reference by the alive-supervision mechanism to perform the checkup with counted alive 
        indications according to corresponding SE.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 65535 (Type:
        Min-Value: 1 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00311</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMExpectedAliveIndications
        Parameter Type: Integer
        Parent Containers: WdgMAliveSupervision,
        Description: This parameter contains the amount of expected alive indications of the Checkpoint 
        within the referenced amount of defined supervision cycles according to corresponding SE.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00312</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMMinMargin
        Parameter Type: Integer
        Parent Containers: WdgMAliveSupervision,
        Description: This parameter contains the amount of alive indications of the Checkpoint that are 
        acceptable to be missed from the expected alive indications within the corresponding 
        supervision reference cycle.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 255 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00313</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMMaxMargin
        Parameter Type: Integer
        Parent Containers: WdgMAliveSupervision,
        Description: This parameter contains the amount of alive indications of the Checkpoint that are 
        acceptable to be additional to the expected alive indications within the corresponding 
        supervision reference cycle.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 255 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00314</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMDeadlineSupervision
        Container Type: Sub-Container
        Parent Containers: WdgMMode,
        Description: This container collects all configuration parameters for Deadline Supervision for 
        a Supervised Entity.
        Lower Multiplicity: 0
        Upper Multiplicity: 65535
      </description>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision</srcid><srcstatus/><internalId>1830</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision_Multicore</srcid><srcstatus/><internalId>1875</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedAliveInternalLogicalDeadlineSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2051</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00315</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMDeadlineStartRef
        Parameter Type: Reference
        Parent Containers: WdgMDeadlineSupervision,
        Description: This is the reference to the start Checkpoint for Deadline Supervision.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMCheckpoint
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00316</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMDeadlineStopRef
        Parameter Type: Reference
        Parent Containers: WdgMDeadlineSupervision,
        Description: This is the reference to the stop Checkpoint for Deadline Supervision.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMCheckpoint
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00317</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMDeadlineMin
        Parameter Type: FloatValue
        Parent Containers: WdgMDeadlineSupervision,
        Description: This parameter contains the shortest time span after which the deadline is 
        considered to be met.
        Introduction: Unit: [s]
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: INF (Type: CLOSED)
        Min-Value: 0 (Type: CLOSED)
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00318</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMDeadlineMax
        Parameter Type: FloatValue
        Parent Containers: WdgMDeadlineSupervision,
        Description: This parameter contains the longest time span after which the deadline is 
        considered to be met.
        Introduction: Unit: [s]
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: INF (Type: CLOSED)
        Min-Value: 0 (Type: CLOSED)
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00319</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMExternalLogicalSupervision
        Container Type: Sub-Container
        Parent Containers: WdgMMode,
        Sub-Containers: WdgMExternalTransition 
        Description: This container collects all configuration parameters for Logical Supervision for 
        one external graph.
        Lower Multiplicity: 0
        Upper Multiplicity: 65535
      </description>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs</srcid><srcstatus/><internalId>1815</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs_Multicore</srcid><srcstatus/><internalId>1862</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00320</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMExternalTransition
        Container Type: Sub-Container
        Parent Containers: WdgMExternalLogicalSupervision,
        Description: This container collects the Checkpoints for an External Transition across 
        Supervised Entities.
        Lower Multiplicity: 0
        Upper Multiplicity: 65535
      </description>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs</srcid><srcstatus/><internalId>1815</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ExternalLogicalCheckpointReached</srcid><srcstatus/><internalId>1817</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision</srcid><srcstatus/><internalId>1830</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs_Multicore</srcid><srcstatus/><internalId>1862</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ExternalLogicalCheckpointReached_Multicore</srcid><srcstatus/><internalId>1864</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision_Multicore</srcid><srcstatus/><internalId>1875</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ExternalLogical_OK_Multicore</srcid><srcstatus/><internalId>1887</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ExternalLogical_NOK_missedCP_Multicore</srcid><srcstatus/><internalId>1888</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00321</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMExternalTransitionSourceRef
        Parameter Type: Reference
        Parent Containers: WdgMExternalTransition,
        Description: This is the reference to the source Checkpoint of an External Transition.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMCheckpoint
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00322</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMExternalTransitionDestRef
        Parameter Type: Reference
        Parent Containers: WdgMExternalTransition,
        Description: This is the reference to the destination Checkpoint of an External Transition.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMCheckpoint
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00323</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMExternalCheckpointInitialRef
        Parameter Type: Reference
        Parent Containers: WdgMExternalLogicalSupervision,
        Description: This is the reference to the initial Checkpoint(s) for this External Graph.
        Lower Multiplicity: 1
        Upper Multiplicity: 65535
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: true
        Post-Build-Variant-Value: true
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMCheckpoint
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs</srcid><srcstatus/><internalId>1815</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs_Multicore</srcid><srcstatus/><internalId>1862</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00324</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMExternalCheckpointFinalRef
        Parameter Type: Reference
        Parent Containers: WdgMExternalLogicalSupervision,
        Description: This is the reference to the final Checkpoint(s) for this External Graph.
        Lower Multiplicity: 1
        Upper Multiplicity: 65535
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: true
        Post-Build-Variant-Value: true
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMCheckpoint
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs</srcid><srcstatus/><internalId>1815</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs_Multicore</srcid><srcstatus/><internalId>1862</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00325</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMLocalStatusParams
        Container Type: Sub-Container
        Parent Containers: WdgMMode,
        Description: This container collects all configuration parameters for the Local Status of a 
        Supervised Entity.
        Lower Multiplicity: 0
        Upper Multiplicity: 65535
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count: Due to the high importance of this topic, it's checked 
        in many test configurations resulting in surpassing the count limit.
      </furtherinfo>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_0703_MultipleAliveReferenceCycles</srcid><srcstatus/><internalId>1829</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_01</srcid><srcstatus/><internalId>2040</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_02</srcid><srcstatus/><internalId>2041</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_01</srcid><srcstatus/><internalId>2042</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_02</srcid><srcstatus/><internalId>2043</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_03</srcid><srcstatus/><internalId>2044</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromLogicalFailureDetection_01</srcid><srcstatus/><internalId>2045</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromLogicalFailureDetection_02</srcid><srcstatus/><internalId>2046</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckWdgMModeSwitchNotification_01</srcid><srcstatus/><internalId>2049</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedAliveInternalLogicalDeadlineSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2051</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedInternalLogicalDeadlineSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2052</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedAliveInternalLogicalSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2053</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckExternalLogicalSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2054</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedAliveExternalLogicalSupervision_SupervisorDisabled_01</srcid><srcstatus/><internalId>2055</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckExternalLogicalSupervision_SupervisorDisabled_01</srcid><srcstatus/><internalId>2056</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckExternalLogicalSupervision_SupervisorDisabled_02</srcid><srcstatus/><internalId>2057</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckExternalLogicalSupervision_SupervisorDisabled_03</srcid><srcstatus/><internalId>2058</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckUpdateAliveCounterReturnError</srcid><srcstatus/><internalId>2059</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckDeadlineInternalLogicalResetFlag_SupervisorEnabled_01</srcid><srcstatus/><internalId>2060</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInternalLogicalResetFlag_SupervisorEnabled_01</srcid><srcstatus/><internalId>2061</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckExternalLogicalResetFlag_SupervisorEnabled_01</srcid><srcstatus/><internalId>2062</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00326</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMLocalStatusSupervisedEntityRef
        Parameter Type: Reference
        Parent Containers: WdgMLocalStatusParams,
        Description: This is the reference to the Supervised Entity for which the Local Status 
        parameters are specified.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMSupervisedEntity
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00327</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMFailedAliveSupervisionRefCycleTol
        Parameter Type: Integer
        Parent Containers: WdgMLocalStatusParams,
        Description: This parameter shall contain the acceptable amount of reference cycles with 
        incorrect/failed alive supervisions for this Supervised Entity.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 255 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00329</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMExpiredSupervisionCycleTol
        Parameter Type: Integer
        Parent Containers: WdgMMode,
        Description: This parameter shall be used to define a value that fixes the amount of expired 
        supervision cycles for how long the blocking of watchdog triggering shall be postponed, AFTER 
        THE GLOBAL SUPERVISION STATUS HAS REACHED THE STATE EXPIRED.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00330</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMSupervisionCycle
        Parameter Type: FloatValue
        Parent Containers: WdgMMode,
        Description: This parameter defines the schedule period of the main function WdgM_MainFunction.
        Introduction: Unit: [s]
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: INF (Type: OPEN)
        Min-Value: 0 (Type: OPEN)
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00331</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMTrigger
        Container Type: Sub-Container
        Parent Containers: WdgMMode,
        Description: This container collects all configuration parameters for the triggering of 
        hardware watchdogs.
        Lower Multiplicity: 0
        Upper Multiplicity: 255
      </description>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30111</srcid><srcstatus/><internalId>1803</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30112</srcid><srcstatus/><internalId>1804</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30113</srcid><srcstatus/><internalId>1805</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30116</srcid><srcstatus/><internalId>1806</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30115</srcid><srcstatus/><internalId>1809</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00332</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMWatchdogMode
        Parameter Type: Enumeration
        Parent Containers: WdgMTrigger,
        Description: This parameter contains the watchdog mode that shall be used for the referenced 
        watchdog in this Watchdog Manager mode.
        Introduction: Implementation Type: WdgIf_ModeType
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Enumeration Literal: WDGIF_FAST_MODE, AUTOSAR_ECUC
        Enumeration Literal: WDGIF_OFF_MODE, AUTOSAR_ECUC
        Enumeration Literal: WDGIF_SLOW_MODE, AUTOSAR_ECUC
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00333</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMTriggerConditionValue
        Parameter Type: Integer
        Parent Containers: WdgMTrigger,
        Description: This parameter shall contain the value that is passed to WdgIf_SetTriggerCondition 
        for this watchdog.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 65535 (Type:
        Min-Value: 1 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00334</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMTriggerWatchdogRef
        Parameter Type: Reference
        Parent Containers: WdgMTrigger,
        Description: This parameter is a reference to the configured watchdog.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMWatchdog
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00335</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMMode
        Container Type: Sub-Container
        Parent Containers: WdgMConfigSet,
        Sub-Containers: WdgMAliveSupervision WdgMDeadlineSupervision WdgMExternalLogicalSupervision 
        WdgMLocalStatusParams WdgMTrigger 
        Description: The container describes one of several modes of the Watchdog Manager.
        Lower Multiplicity: 1
        Upper Multiplicity: 255
      </description>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30118</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs</srcid><srcstatus/><internalId>1815</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_0701_MultipleAliveCounters</srcid><srcstatus/><internalId>1827</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision</srcid><srcstatus/><internalId>1830</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30118_Multicore</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs_Multicore</srcid><srcstatus/><internalId>1862</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision_Multicore</srcid><srcstatus/><internalId>1875</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedAliveInternalLogicalDeadlineSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2051</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00336</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMInitialMode
        Parameter Type: Reference
        Parent Containers: WdgMConfigSet,
        Description: The mode that the Watchdog Manager is in after it has been initialized.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMConfigSet/WdgMMode
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30126</srcid><srcstatus/><internalId>1728</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30126_Multicore</srcid><srcstatus/><internalId>1852</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00337</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMConfigSet
        Container Type: Container
        Sub-Containers: WdgMDemEventParameterRefs WdgMMode 
        Description: This container describes one of multiple configuration sets of WdgM.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00338</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMDemStoppedSupervisionReport
        Parameter Type: Boolean
        Parent Containers: WdgMGeneral,
        Description: Parameter to enable/disable the error reporting to DEM.
        Introduction: true: A notification to DEM is sent if the Watchdog Manager reaches the state 
        WDGM_GLOBAL_STATUS_STOPPED. false: The notification is disabled.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30124</srcid><srcstatus/><internalId>1727</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30124_Multicore</srcid><srcstatus/><internalId>1851</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00339</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMImmediateReset
        Parameter Type: Boolean
        Parent Containers: WdgMGeneral,
        Description: This parameter enables/disablse the immediate reset feature in case of alive-
        supervision failure.
        Introduction: true: Immediate reset is enabled false: Immediate reset is disabled
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03</srcid><srcstatus/><internalId>1943</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03_MC</srcid><srcstatus/><internalId>2090</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00340</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMOffModeEnabled
        Parameter Type: Boolean
        Parent Containers: WdgMGeneral,
        Description: This parameter enables/disables the selection of the "OffMode" of the watchdog 
        driver.
        Introduction: true: "OffMode" selection is allowed false: "OffMode" selection is disallowed
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00343</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        Name: WdgMInternalCheckpointInitialRef
        Parameter Type: Reference
        Parent Containers: WdgMSupervisedEntity,
        Description: This is the reference to the initial Checkpoint for this Supervised Entity.
        Lower Multiplicity: 0
        Upper Multiplicity: 65535
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMCheckpoint
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00344</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        Name: WdgMInternallCheckpointFinalRef
        Parameter Type: Reference
        Parent Containers: WdgMSupervisedEntity,
        Description: This is the reference to the final Checkpoint(s) for this Supervised Entity.
        Lower Multiplicity: 0
        Upper Multiplicity: 65535
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMCheckpoint
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00345</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMInternalTransition
        Container Type: Sub-Container
        Parent Containers: WdgMSupervisedEntity,
        Description: This container defines the graph of Internal Transitions within this Supervised 
        Entity.
        Lower Multiplicity: 0
        Upper Multiplicity: 65535
      </description>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs</srcid><srcstatus/><internalId>1815</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_InternalLogicalCheckpointReached</srcid><srcstatus/><internalId>1816</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs_Multicore</srcid><srcstatus/><internalId>1862</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_InternalLogicalCheckpointReached_Multicore</srcid><srcstatus/><internalId>1863</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ParalellLogicalSupervision_Multicore</srcid><srcstatus/><internalId>1874</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00347</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMWatchdog
        Container Type: Sub-Container
        Parent Containers: WdgMGeneral,
        Description: This container collects all common (mode-independent) parameters of a Watchdog to 
        be triggered by the Watchdog Manager.
        Lower Multiplicity: 0
        Upper Multiplicity: 255
      </description>
      <comment>
        Since multiplicity is greater than 1, at least one testcase must exist having a
        configuration with more than one instance of this configuration entity.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30111</srcid><srcstatus/><internalId>1803</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30112</srcid><srcstatus/><internalId>1804</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30113</srcid><srcstatus/><internalId>1805</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30116</srcid><srcstatus/><internalId>1806</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30115</srcid><srcstatus/><internalId>1809</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00348</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMWatchdogName
        Parameter Type: StringParameter
        Parent Containers: WdgMWatchdog,
        Description: This parameter shall contain the name of the watchdog instance.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        String Param Def Condition: Default Value: , Max-Length: , Min-Length: , Regular-Expression:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SYMBOLICNAMEVALUES</srcid><srcstatus/><internalId>1708</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00349</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMWatchdogDeviceRef
        Parameter Type: Reference
        Parent Containers: WdgMWatchdog,
        Description: Reference to one device container of Watchdog Interface. In the referenced 
        container WdgIfDevice, the parameter WdgIfDeviceIndex contains the Index parameter that WdgM 
        has to use for WdgIf_SetTriggerCondition calls for that watchdog instance.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/WdgIf/WdgIfDevice
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00350</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMInternalTransitionSourceRef
        Parameter Type: Reference
        Parent Containers: WdgMInternalTransition,
        Description: This is the reference to the source Checkpoint of a Internal Transition within 
        this Supervised Entity.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMCheckpoint
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00351</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMInternalTransitionDestRef
        Parameter Type: Reference
        Parent Containers: WdgMInternalTransition,
        Description: This is the reference to the destination Checkpoint of a Internal Transition 
        within this Supervised Entity.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMCheckpoint
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00353</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        Name: WdgMDemEventParameterRefs
        Container Type: Sub-Container
        Parent Containers: WdgMConfigSet,
        Description: Container for the references to DemEventParameter elements which shall be invoked 
        using the API Dem_SetEventStatus in case the corresponding error occurs. The EventId is taken 
        from the referenced DemEventParameter's DemEventId symbolic value. The standardized errors are 
        provided in this container and can be extended by vendor-specific error references.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00360</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMEcucPartitionRef
        Parameter Type: Reference
        Parent Containers: WdgMSupervisedEntity,
        Description: Denotes in which "EcucPartition" the supervised entity is executed. When the 
        partition is stopped, the supervised entity shall be de-activated in the WdgM to avoid an ECU 
        reset.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall support the parallel usage of multiple watchdogs.
      </description>
      <comment>
        Note: Configuration structure WdgM_TrigCfg_M[WdgMModeId] contains WdgIfDeviceIndex
        for each Watchdog configured in the WdgIf.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30115</srcid><srcstatus/><internalId>1809</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        Type of error | Related error code | Error value 
        API service used in wrong context (without module initialization) | WDGM_E_UNINIT.
        WDGM_E_UNINIT | 0x10 
        API service Wdg_Init was called with an erroneous configuration set | WDGM_E_PARAM_CONFIGWdgM.
        WDGM_E_PARAM_CONFIG | 0x11 
        API service called with wrong "mode" parameter | WDGM_E_PARAM_MODEWdgM.WDGM_E_PARAM_MODE | 0x12 
        API service called with wrong "supervised entity identifier" parameter | WDGM_E_PARAM_SEIDWdgM.
        WDGM_E_PARAM_SEID | 0x13 
        API service called with invalid pointer | WDGM_E_INV_POINTERWdgM.WDGM_E_INV_POINTER | 0x14 
        API service used with an invalid CheckpointId. | WDGM_E_CPIDWdgM.WDGM_E_CPID | 0x16 
        API service used in wrong context - WdgM_Init called when module is not deinitialized (global 
        status is not WDGM_GLOBAL_STATUS_DEACTIVATED) | WDGM_E_NO_DEINITWdgM.WDGM_E_NO_DEINIT | 0x1A 
        Initialization failed, e.g. selected configuration set doesn't exist | WDGM_E_INIT_FAILEDWdgM.
        WDGM_E_INIT_FAILED | 0x1B 
        API service called with a null pointer parameter | WDGM_E_PARAM_POINTERWdgM.
        WDGM_E_PARAM_POINTER | 0x1C 
      </description>
      <comment>
        Refined this requirement in order to allow separate handling of all the different
        error codes. WDGM_E_SUPERVISION was replaced by WDGM_E_MONITORING due to Rfc#61167.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the WdgMDevErrorDetect [ECUC_WdgM_00301] switch is enabled and the configuration variant is 
        VARIANT-POST-BUILD, the function WdgM_Init shall check the contents of the given configuration 
        set for being within the allowed boundaries. If the function WdgM_Init detects an error, then 
        it shall not execute the initialization of the Watchdog Manager module and it shall report the 
        error code WDGM_E_PARAM_CONFIG to the Det_ReportError service of the Default Error Tracer.
      </description>
      <comment>
        Set to DEVIATION because of deviation: [ASCWDGM-224] Post build time configuration
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.PostBuildTimeConfiguration</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        Module | Header File | Imported Type 
        Dem | Rte_Dem_Type.h | Dem_EventIdType 
        Rte_Dem_Type.h | Dem_EventStatusType 
        Os | Os.h | ApplicationType 
        Os.h | StatusType 
        Os.h | TickRefType 
        Os.h | TickType 
        Rte_Os_Type.h | CounterType 
        Std | Std_Types.h | Std_ReturnType 
        Std_Types.h | Std_VersionInfoType 
        WdgIf | WdgIf.h | WdgIf_ModeType 
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_Init shall initialize all module variables (global and static) of the 
        Watchdog Manager module.
      </description>
      <comment>
        Changed due to Deviation ASCWDGM-303 ((De-)Init is done synchronously to
        MainFunction). That is, WdgM_(De)Init is requested and applied synchronously to
        MainFunction. (see WDGM.EB.TIMEPM.WDGM020432)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled, the parameter 
        Mode shall be checked for being in the allowed range. In case of an error, the mode switch 
        shall not be executed and the error shall be reported to the Default Error Tracer with the 
        value WDGM_E_PARAM_MODE.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30042</srcid><srcstatus/><internalId>1754</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1581</srcid><srcstatus/><internalId>981</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled: The function 
        WdgM_SetMode shall report the error to default error tracer with error code WDGM_E_UNINIT, 
        without any further effect, if the Watchdog Manager is in WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The parameters of the Watchdog Manager module that shall minimally be configurable at system 
        generation and / or system compile time (pre-compile)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_LogicalSupervision</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_DeadlineSupervision</srcid><srcstatus/><internalId>1711</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        The parameters of the Watchdog Manager module that shall be configurable at post-build time.
      </description>
      <comment>
        Set to DEVIATION because of deviation: [ASCWDGM-224] Post build time configuration
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.PostBuildTimeConfiguration</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        If the WdgMOffModeEnabled [ECUC_WdgM_00340] switch is not enabled, and the initial mode 
        provided by the configuration (ConfigPtr) will disable the watchdog (WDGIF_OFF_MODE) then the 
        function WdgM_Init shall return with E_NOT_OK without any action, and the function WdgM_Init 
        shall report runtime error code WDGM_E_DISABLE_NOT_ALLOWED to the Default Error Tracer.
      </description>
      <comment>
        The configuration restriction (xpath check) specified in WDGM.EB.WdgMOffModeEnabled
        ensures that WdgMOffModeEnabled can only be disabled if no watchdog is configured with WdgIf
        mode WDGIF_OFF_MODE. Further, no post-build time confiugration can bypass this constraint
        due to Deviation: ASCWDGM-224 Post build time configuration. Further,
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If disabling the watchdog is not allowed by setting the parameter WdgMOffModeEnabled [
        ECUC_WdgM_00340] to FALSE, the routine shall check if the requested mode would disable the 
        watchdog (WDGIF_OFF_MODE). In this case (i.e. it would disable while it is not allowed)
        The mode switch shall not be executed.
        The error shall be reported to the Default Error Tracer with the runtime error code 
        WDGM_E_DISABLE_NOT_ALLOWED.
        The routine shall return the value E_NOT_OK.
      </description>
      <comment>
        This requirement is not applicable: The configuration restriction (xpath check)
        specified in WDGM.EB.WdgMOffModeEnabled already ensures at configuration time (pre-compile
        time) that WdgMOffModeEnabled can only be disabled if no watchdog is configured with WdgIf
        mode WDGIF_OFF_MODE.
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.WdgMOffModeEnabled</srcid><srcstatus/><internalId>488</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled, the routine 
        shall check if the Watchdog Manager is initialized. In case of an error, the main function 
        shall not be executed and the development error shall be reported to the Default Error Tracer 
        with the error code WDGM_E_UNINIT.
      </description>
      <comment>
        Refined in WDGM.EB.TIMEPM.WDGM020437 due to the polling communication concept. See
        also Deviation: ASCWDGM-303 ((De-)Init is done synchronously to MainFunction).
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The structure WdgM_ConfigType shall contain all post-build configurable parameters of the 
        Watchdog Manager module. The exact content of this structure depends on the selected 
        configuration variant. See Chapter [REF] for information on configuration parameters.
      </description>
      <comment>
        Set to DEVIATION because of deviation: [ASCWDGM-224] Post build time configuration
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.PostBuildTimeConfiguration</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Global Supervision Status is not in the state WDGM_GLOBAL_STATUS_DEACTIVATED, then the 
        WdgM_MainFunction() shall be executed according to the configured Supervision Cycle (see 
        WdgMSupervisionCycle [ECUC_WdgM_00330]
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30119</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_0701_MultipleAliveCounters</srcid><srcstatus/><internalId>1827</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30119_Multicore</srcid><srcstatus/><internalId>1843</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2433</srcid><srcstatus/><internalId>1060</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00074</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_MainFunction shall examine an Alive Counter by checking if it is within the 
        allowed tolerance (Expected - Min Margin; Expected + Max Margin) (see 
        WdgMExpectedAliveIndications [ECUC_WdgM_00311], WdgMMinMargin, WdgMMaxMargin)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30119</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_0701_MultipleAliveCounters</srcid><srcstatus/><internalId>1827</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30119_Multicore</srcid><srcstatus/><internalId>1843</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3901</srcid><srcstatus/><internalId>1169</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00076</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Global Supervision Status was WDGM_GLOBAL_STATUS_OK, the Local Supervision Status of at 
        least one Supervised Entity is WDGM_LOCAL_STATUS_FAILED, and no Supervised Entity is in Local 
        Supervision Status WDGM_LOCAL_STATUS_EXPIRED, then the function WdgM_MainFunction shall change 
        the Global Supervision Status to WDGM_GLOBAL_STATUS_FAILED (see Transition (2) in Figure 3)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30123</srcid><srcstatus/><internalId>1725</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30123_Multicore</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ParalellAliveSupervision_Multicore</srcid><srcstatus/><internalId>1860</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4695</srcid><srcstatus/><internalId>1224</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00077</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Global Supervision Status was WDGM_GLOBAL_STATUS_FAILED, the Local Supervision Status of 
        at least one Supervised Entity is WDGM_LOCAL_STATUS_EXPIRED, and the Expired Supervision 
        Tolerance is configured to a value larger than zero (see configuration parameter 
        WdgMExpiredSupervisionCycleTol [ECUC_WdgM_00329]), then function WdgM_MainFunction shall change 
        the Global Supervision Status to WDGM_GLOBAL_STATUS_EXPIRED. And increment the Expired Cycle 
        Counter. (see Transition (7) in Figure 3)
      </description>
      <comment>
        Implemented differently due to: Deviation [ASCWDGM-310] Consistent interpretation of
        parameter WdgMExpiredSupervisionCycleTol
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.WdgMExpiredSupervisionCycleTol</srcid><srcstatus/><internalId>751</internalId></linkedfrom><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00078</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Global Supervision Status was WDGM_GLOBAL_STATUS_OK and the Local Supervision Status of 
        all Supervised Entities are either WDGM_LOCAL_STATUS_OK or WDGM_LOCAL_STATUS_DEACTIVATED then 
        the function WdgM_MainFunction shall keep the Global Supervision Status WDGM_GLOBAL_STATUS_OK (
        see Transition (1) in Figure 3)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30123</srcid><srcstatus/><internalId>1725</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30123_Multicore</srcid><srcstatus/><internalId>1849</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4705</srcid><srcstatus/><internalId>1226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00083</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_MainFunction shall not perform the examination of the Alive Counter of a 
        Checkpoint if no corresponding Alive Supervision (WdgMAliveSupervision) is defined in the 
        active Watchdog Manager Mode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30118</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30118_Multicore</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4085</srcid><srcstatus/><internalId>1182</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00085</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall derive the required number of independent data resources to 
        perform the Alive Supervision within the Watchdog Manager module from the number of Supervised 
        Entities, number of WdgMModes and their WdgMAliveSupervisions.
      </description>
      <comment>
        Refined to identify the specific required independent data resources.
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.SWS_WdgM_00085.1</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>WdgM.SWS_WdgM_00085.3</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>WdgM.SWS_WdgM_00085.4</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>WdgM.SWS_WdgM_00085.5</srcid><srcstatus/><internalId>359</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00098</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_MainFunction shall perform for each Alive Supervision (WdgMAliveSupervision) 
        configured in the active Mode, the examination of the Alive Counter of each Checkpoint of the 
        Supervised Entity. The examination shall be done at the period WdgMSupervisionReferenceCycle of 
        the corresponding Alive Supervision(WdgMAliveSupervision). During the intermediate Supervision 
        Cycles (see WdgMSupervisionCycle) of the Alive Supervision, the function WdgM_MainFunction 
        shall not perform the examination of Alive Counters.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30119</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_0701_MultipleAliveCounters</srcid><srcstatus/><internalId>1827</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_0703_MultipleAliveReferenceCycles</srcid><srcstatus/><internalId>1829</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30119_Multicore</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_AliveSupervisionLimit_NOK_missedCP_Multicore</srcid><srcstatus/><internalId>1918</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckPointLimit_OK_Multicore</srcid><srcstatus/><internalId>1919</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckPointLimit_NOK_missedCP_Multicore</srcid><srcstatus/><internalId>1920</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckAliveDataOverflow</srcid><srcstatus/><internalId>2039</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3921</srcid><srcstatus/><internalId>1170</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.SWS_WdgM_00098.1</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00104</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The precompile options shall be used for code implementations that are not directly generated 
        out of code generators. Therefore the precompile options support the optimization of re-used 
        sourcecode-file of the Watchdog Manager module according to settings of static configuration.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Cfg.h.m4_65</srcid><srcstatus/><internalId>764</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00115</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the function WdgM_MainFunction detects a deviation between the counted Alive Indications and 
        the expected amount of alive indications [ECUC_WdgM_00311] (including tolerance margins [
        ECUC_WdgM_00312], [ECUC_WdgM_00313]) for any Checkpoint of a Supervised Entity, then Alive 
        Supervision at this Supervision Reference Cycle for this Supervised Entity shall be defined as 
        incorrect. Otherwise, it shall be defined as correct.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30119</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_0701_MultipleAliveCounters</srcid><srcstatus/><internalId>1827</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30119_Multicore</srcid><srcstatus/><internalId>1843</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3887</srcid><srcstatus/><internalId>1168</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3901</srcid><srcstatus/><internalId>1169</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00117</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Global Supervision Status was WDGM_GLOBAL_STATUS_FAILED, the Local Supervision Status of 
        at least one Supervised Entity is WDGM_LOCAL_STATUS_EXPIRED, and the Expired Supervision 
        Tolerance is configured to zero (see configuration parameter WdgMExpiredSupervisionCycleTol [
        ECUC_WdgM_00329]), then function WdgM_MainFunction shall change the Global Supervision Status 
        to WDGM_GLOBAL_STATUS_STOPPED (see Transition (8) in Figure 3)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30135</srcid><srcstatus/><internalId>1730</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30135_Multicore</srcid><srcstatus/><internalId>1854</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4717</srcid><srcstatus/><internalId>1228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00119</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Global Supervision Status has recomputed as WDGM_GLOBAL_STATUS_OK, then the Watchdog 
        Manager module shall call WdgIf_SetTriggerCondition for all watchdogs not configured as 
        WDGIF_OFF_MODE [ECUC_WdgM_00332] with &lt;parameter for id&gt; set to WdgMWatchdogDeviceRef [
        ECUC_WdgM_00348] and &lt;parameter for trigger condition&gt; set to WdgMTriggerCondition [
        ECUC_WdgM_00333]
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30126</srcid><srcstatus/><internalId>1728</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30111</srcid><srcstatus/><internalId>1803</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30112</srcid><srcstatus/><internalId>1804</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30126_Multicore</srcid><srcstatus/><internalId>1852</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15</srcid><srcstatus/><internalId>2067</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32</srcid><srcstatus/><internalId>2068</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31</srcid><srcstatus/><internalId>2069</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15_MC</srcid><srcstatus/><internalId>2071</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32_MC</srcid><srcstatus/><internalId>2072</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31_MC</srcid><srcstatus/><internalId>2073</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6230</srcid><srcstatus/><internalId>1325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00120</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Global Supervision Status has recomputed as WDGM_GLOBAL_STATUS_FAILED, then the Watchdog 
        Manager module shall call WdgIf_SetTriggerCondition for all watchdogs not configured as 
        WDGIF_OFF_MODE [ECUC_WdgM_00332] with &lt;parameter for id&gt; set to WdgMWatchdogDeviceRef [
        ECUC_WdgM_00348] and &lt;parameter for trigger condition&gt; set to WdgMTriggerCondition [
        ECUC_WdgM_00333]
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30126</srcid><srcstatus/><internalId>1728</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30126_Multicore</srcid><srcstatus/><internalId>1852</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6230</srcid><srcstatus/><internalId>1325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00121</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Global Supervision Status has recomputed as WDGM_GLOBAL_STATUS_EXPIRED, then the 
        Watchdog Manager module shall call WdgIf_SetTriggerCondition for all watchdogs not configured 
        as WDGIF_OFF_MODE [ECUC_WdgM_00332] with &lt;parameter for id&gt; set to WdgMWatchdogDeviceRef [
        ECUC_WdgM_00348] and &lt;parameter for trigger condition&gt; set to WdgMTriggerCondition [
        ECUC_WdgM_00333]
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30126</srcid><srcstatus/><internalId>1728</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30126_Multicore</srcid><srcstatus/><internalId>1852</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6230</srcid><srcstatus/><internalId>1325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00122</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Global Supervision Status has recomputed as WDGM_GLOBAL_STATUS_STOPPED, then the 
        Watchdog Manager module shall call WdgIf_SetTriggerCondition for all watchdogs not configured 
        as WDGIF_OFF_MODE [ECUC_WdgM_00332] with &lt;parameter for id&gt; set to WdgMWatchdogDeviceRef [
        ECUC_WdgM_00348] and &lt;parameter for trigger condition&gt; set to zero.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30126</srcid><srcstatus/><internalId>1728</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30115</srcid><srcstatus/><internalId>1809</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30126_Multicore</srcid><srcstatus/><internalId>1852</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6219</srcid><srcstatus/><internalId>1323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00129</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        Within the first call of WdgM_MainFunction after WdgM_Init and when the reset-cause was that in 
        the previous operation cylce the Global Supervision Status had reached 
        WDGM_GLOBAL_STATUS_STOPPED and if the configuration parameter WdgMDemStoppedSupervisionReport 
        is set to TRUE, the Watchdog Manager module shall report an error status FAILED for 
        WDGM_E_SUPERVISION to the DEM.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00133</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMImmediateReset [ECUC_WdgM_00339] is set to TRUE and the 
        Global Supervision Status has reached the state WDGM_GLOBAL_STATUS_STOPPED, the Watchdog 
        Manager module shall call the MCU service Mcu_PerformReset on the MCU Driver module.
      </description>
      <comment>
        Refined in order to trace individual parts of this requirement.
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.SWS_WdgM_00133.1</srcid><srcstatus/><internalId>361</internalId></linkedfrom><linkedfrom><srcid>WdgM.SWS_WdgM_00133.2</srcid><srcstatus/><internalId>362</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00134</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        In case of an immediate MCU reset, the Watchdog Manager module shall not provide a notification 
        to the application via the RTE mode mechanism.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30139</srcid><srcstatus/><internalId>1775</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30139_multicore</srcid><srcstatus/><internalId>1798</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4601</srcid><srcstatus/><internalId>1217</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00135</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_Init shall establish the initial mode of the Watchdog Manager module.
      </description>
      <comment>
        Changed due to Deviation ASCWDGM-303 ((De-)Init is done synchronously to
        MainFunction). That is, WdgM_(De)Init is requested and applied synchronously to
        MainFunction. (see WDGM.EB.TIMEPM.WDGM020433)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.SynchronousDeInit</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00139</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If a call to WdgIf_SetMode fails (see chapter [REF]), function shall assume a global 
        supervision failure and set the Global Supervision Status to WDGM_GLOBAL_STATUS_STOPPED. (see 
        Transition (12) in Figure 9)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30114</srcid><srcstatus/><internalId>1808</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2275</srcid><srcstatus/><internalId>1043</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00142</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the function WdgM_SetMode [SWS_WdgM_00154] fails because a call to WdgIf_SetMode service 
        fails [SWS_WdgM_00139], the Watchdog Manager shall report to the Default Error Tracer a runtime 
        error with the value WDGM_E_SET_MODE.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.SWS_WdgM_00142.1</srcid><srcstatus/><internalId>363</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00145</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall only execute the service WdgM_SetMode if the Global 
        Supervision Status is equal to [WDGM_GLOBAL_STATUS_OK or WDGM_GLOBAL_STATUS_FAILED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30125</srcid><srcstatus/><internalId>1723</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30128</srcid><srcstatus/><internalId>1726</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30116</srcid><srcstatus/><internalId>1806</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30125_Multicore</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30128_Multicore</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1617</srcid><srcstatus/><internalId>985</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2728</srcid><srcstatus/><internalId>1096</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00146</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall provide a single service port for Supervision for each 
        Supervised Entity that is configured. To be able to match an Supervision port with its 
        corresponding mode port for Status Reporting, a naming convention is necessary.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_149</srcid><srcstatus/><internalId>1632</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30137</srcid><srcstatus/><internalId>1773</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration</srcid><srcstatus/><internalId>1778</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Multicore</srcid><srcstatus/><internalId>1783</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Supervisor</srcid><srcstatus/><internalId>1788</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30137_multicore</srcid><srcstatus/><internalId>1796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00147</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | localSupervision_{SupervisedEntityCheckpointName}WdgM.port_WdgM_localSupervision 
        Kind | ProvidedPort | Interface | WdgM_LocalSupervision 
        Description | This port provides the Supervision interface of one Supervised Entity Checkpoint 
        to a SWC.
        Port Defined Argument Value(s) | Type | WdgM_SupervisedEntityIdType 
        Value | {ecuc(WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMSupervisedEntityId.value)
        Type | WdgM_CheckpointIdType 
        Value | ecuc{WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMCheckpoint/WdgMCheckpointId}
        Variation | SupervisedEntityCheckpointName = {ecuc(WdgM/WdgMGeneral/WdgMSupervisedEntity.SHORT-
        NAME)}_{ecuc(WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMCheckpoint.SHORT-NAME)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_153</srcid><srcstatus/><internalId>1633</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration</srcid><srcstatus/><internalId>1778</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_CheckpointReachedService</srcid><srcstatus/><internalId>1779</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Multicore</srcid><srcstatus/><internalId>1783</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_CheckpointReachedService_Multicore</srcid><srcstatus/><internalId>1784</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Supervisor</srcid><srcstatus/><internalId>1788</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_CheckpointReachedService_Supervisor</srcid><srcstatus/><internalId>1789</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00148</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall provide a single mode port for reporting the Local 
        Supervision Status of each Supervised Entity that is configured. To be able to match a 
        Supervision port with its corresponding mode port for Status Reporting, a naming convention is 
        necessary.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_161</srcid><srcstatus/><internalId>1635</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_162</srcid><srcstatus/><internalId>1636</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30137</srcid><srcstatus/><internalId>1773</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration</srcid><srcstatus/><internalId>1778</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Multicore</srcid><srcstatus/><internalId>1783</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Supervisor</srcid><srcstatus/><internalId>1788</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30137_multicore</srcid><srcstatus/><internalId>1796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00149</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | mode_{SupervisedEntityName}WdgM.port_WdgM_mode 
        Kind | ProvidedPort | Interface | WdgM_LocalMode 
        Description 
        Variation | SupervisedEntityName = {ecuc(WdgM/WdgMGeneral/WdgMSupervisedEntity/
        WdgMSupervisedEntityId.SHORT-NAME)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_168</srcid><srcstatus/><internalId>1637</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration</srcid><srcstatus/><internalId>1778</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Multicore</srcid><srcstatus/><internalId>1783</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Supervisor</srcid><srcstatus/><internalId>1788</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00150</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | globalmodeWdgM.port_WdgM_globalmode 
        Kind | ProvidedPort | Interface | WdgM_GlobalMode 
        Description 
        Variation 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_136</srcid><srcstatus/><internalId>1630</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30137</srcid><srcstatus/><internalId>1773</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration</srcid><srcstatus/><internalId>1778</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Multicore</srcid><srcstatus/><internalId>1783</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Supervisor</srcid><srcstatus/><internalId>1788</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30137_multicore</srcid><srcstatus/><internalId>1796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00151</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | WdgM_Init 
        Syntax 
        void WdgM_Init (const WdgM_ConfigType* ConfigPtr)
        Service ID [hex] | 0x00 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | ConfigPtr | Pointer to post-build configuration data 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | Initializes the Watchdog Manager.
        Available via | WdgM.h 
      </description>
      <comment>
        Changed API description due to Deviation ASCWDGM-303 ((De-)Init is done
        synchronously to MainFunction). That is, WdgM_(De)Init is requested and applied
        synchronously to MainFunction. (see WDGM.EB.TIMEPM.WDGM020431)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.SynchronousDeInit</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00153</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | WdgM_GetVersionInfo 
        Syntax 
        void WdgM_GetVersionInfo (Std_VersionInfoType* VersionInfo)
        Service ID [hex] | 0x02 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | VersionInfo | Pointer to where to store the version information of the 
        module WdgM.
        Return value | None 
        Description | Returns the version information of this module.
        Available via | WdgM.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_LogicalSupervision</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_DeadlineSupervision</srcid><srcstatus/><internalId>1711</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1486</srcid><srcstatus/><internalId>968</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00154</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | WdgM_SetMode 
        Syntax 
        Std_ReturnType WdgM_SetMode (WdgM_ModeType Mode)
        Service ID [hex] | 0x03 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | Mode | One of the configured Watchdog Manager modes.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: Successfully changed to the new modeE_NOT_OK: Changing to 
        the new mode failed 
        Description | Sets the current mode of Watchdog Manager.
        Available via | WdgM.h 
        The behavior of this service and the corresponding functional requirements are described in chapter 7.5.
      </description>
      <comment>
        Changed description of API due to Deviation ASCWDGM-302 
        Mode switch is done synchronously or asynchronously (synchronously to MainFunction) 
        if WdgMSetModeSynchron configuration parameter is set or not. (see WDGM.EB.TIMEPM.WDGM020425)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.SynchronousModeSwitch</srcid><srcstatus/><internalId>756</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00159</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | WdgM_MainFunction 
        Syntax 
        void WdgM_MainFunction (void)
        Service ID [hex] | 0x08 
        Description | Performs the processing of the cyclic Watchdog Manager jobs.
        Available via | SchM_WdgM.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_LogicalSupervision</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_DeadlineSupervision</srcid><srcstatus/><internalId>1711</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2366</srcid><srcstatus/><internalId>1054</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00161</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        API Function | Header File | Description 
        Det_ReportRuntimeError | Det.h | Service to report runtime errors. If a callout has been 
        configured then this callout shall be called.
        GetElapsedValue | Os.h | This service gets the number of ticks between the current tick value 
        and a previously read tick value.
        WdgIf_SetMode | WdgIf.h | Map the service WdgIf_SetMode to the service Wdg_SetMode of the 
        corresponding Watchdog Driver.
        WdgIf_SetTriggerCondition | WdgIf.h | Map the service WdgIf_SetTriggerCondition to the service 
        Wdg_SetTriggerCondition of the corresponding Watchdog Driver.
      </description>
      <comment>
        Refined this requirement, because each interface shall be handled / tested
        individually. Further, only a small subset of these interfaces is really required.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00162</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        API Function | Header File | Description 
        BswM_WdgM_RequestPartitionReset | BswM_WdgM.h | Function called by WdgM to request a partition 
        reset.
        Dem_SetEventStatus | Dem.h | Called by SW-Cs or BSW modules to report monitor status 
        information to the Dem. BSW modules calling Dem_SetEventStatus can safely ignore the return 
        value. This API will be available only if ({Dem/DemConfigSet/DemEventParameter/
        DemEventReportingType} == STANDARD_REPORTING)
        Det_ReportError | Det.h | Service to report development errors.
        Mcu_PerformReset | Mcu.h | The service performs a microcontroller reset.
      </description>
      <comment>
        Refined this requirement, because each interface shall be handled / tested
        individually. Further, only a small subset of these interfaces are optionally required.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00168</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | WdgM_GetMode 
        Syntax 
        Std_ReturnType WdgM_GetMode (WdgM_ModeType* Mode)
        Service ID [hex] | 0x0b 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | Mode | Current mode of the Watchdog Manager.
        Return value | Std_ReturnType | E_OK: Current mode successfully returnedE_NOT_OK: Returning 
        current mode failed 
        Description | Returns the current mode of the Watchdog Manager.
        Available via | WdgM.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_LogicalSupervision</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_DeadlineSupervision</srcid><srcstatus/><internalId>1711</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1686</srcid><srcstatus/><internalId>992</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable21</srcid><srcstatus/><internalId>1684</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00169</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | WdgM_GetLocalStatus 
        Syntax 
        Std_ReturnType WdgM_GetLocalStatus (WdgM_SupervisedEntityIdType SEID, WdgM_LocalStatusType* 
        Status)
        Service ID [hex] | 0x0c 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | SEID | Identifier of the supervised entity whose supervision status shall be 
        returned.
        Parameters (inout) | None 
        Parameters (out) | Status | Supervision status of the given supervised entity.
        Return value | Std_ReturnType | E_OK: Current supervision status successfully returnedE_NOT_OK:
        Returning current supervision status failed 
        Description | Returns the supervision status of an individual Supervised Entity.
        Available via | WdgM.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_LogicalSupervision</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_DeadlineSupervision</srcid><srcstatus/><internalId>1711</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2099</srcid><srcstatus/><internalId>1024</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00170</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The WdgM_GetMode service shall return the currently active mode of the Watchdog Manager. If the 
        WdgM_SetMode service is active while this service is called, WdgM_GetMode shall return the 
        previously active mode as long as the new mode has not been completely activated.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30132</srcid><srcstatus/><internalId>1807</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1757</srcid><srcstatus/><internalId>998</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00171</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The WdgM_GetLocalStatus service shall return the individual supervision status of the given 
        Supervised Entity.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30119</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_0701_MultipleAliveCounters</srcid><srcstatus/><internalId>1827</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30119_Multicore</srcid><srcstatus/><internalId>1843</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2148</srcid><srcstatus/><internalId>1029</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00172</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled, the parameter 
        SEID shall be checked for being in the list of entities under control of the Watchdog Manager. 
        In case of an error, the service shall not be executed and the error shall be reported to the 
        Default Error Tracer with the error code WDGM_E_PARAM_SEID.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30107</srcid><srcstatus/><internalId>1763</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2138</srcid><srcstatus/><internalId>1028</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00173</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled: The function 
        WdgM_GetLocalStatus shall report the error to default error tracer with error code 
        WDGM_E_UNINIT, without any further effect, if the Watchdog Manager is in 
        WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00175</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | WdgM_GetGlobalStatus 
        Syntax 
        Std_ReturnType WdgM_GetGlobalStatus (WdgM_GlobalStatusType* Status)
        Service ID [hex] | 0x0d 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | Status | Global supervision status of the Watchdog Manager.
        Return value | Std_ReturnType | E_OK: Current supervision status successfully returnedE_NOT_OK:
        Returning current supervision status failed 
        Description | Returns the global supervision status of the Watchdog Manager.
        Available via | WdgM.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_LogicalSupervision</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_DeadlineSupervision</srcid><srcstatus/><internalId>1711</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2170</srcid><srcstatus/><internalId>1031</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00176</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled, the routine 
        shall check if the Watchdog Manager is initialized. In case of an error, the service shall not 
        be executed and the error shall be reported to the Default Error Tracer with the error code 
        WDGM_E_UNINIT.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00178</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Each mode of the Watchdog Manager module has an identifier (see WdgMModeId [ECUC_WdgM_00307]) 
        which shall be unique.
      </description>
      <comment>
        Refined in WDGM.EB.WdgMModeId, because actual implementation is more restrictive due
        to zero-based and consecutive IDs.
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.WdgMModeId</srcid><srcstatus/><internalId>493</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00179</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Watchdog Manager module has one initial mode WdgMMInitialMode [ECUC_WdgM_00336] which shall 
        be activated when it is initialized.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30111</srcid><srcstatus/><internalId>1803</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00181</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        For each watchdog instance, the watchdog mode shall be statically configured and represented by 
        the parameter WdgMWatchdogMode.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30113</srcid><srcstatus/><internalId>1805</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00182</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the current global status is WDGM_GLOBAL_STATUS_OK or WDGM_GLOBAL_STATUS_FAILED then for 
        each Supervised Entity that is activated in the new mode (passed to function WdgM_SetMode as 
        parameter), the function WdgM_SetMode shall retain the current state of the Supervised Entity. 
        Switching to the mode where a Supervised Entity is deactivated clears also errors that had 
        resulted with the WDGM_GLOBAL_STATUS_FAILED status.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30128</srcid><srcstatus/><internalId>1726</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30128_Multicore</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2802</srcid><srcstatus/><internalId>1099</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00186</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If function WdgM_SetMode (see [SWS_WdgM_00154]) is called, the Watchdog Manager module shall 
        apply the configured watchdog mode parameters (see WdgMWatchdogMode [ECUC_WdgM_00332]) to each 
        watchdog by calling the WdgIf_SetMode service.
      </description>
      <comment>
        Mode switch is done also synchronously to MainFunction if multicore is not activated
        and  WdgMSetModeSynchron parameter is not set.
        (see WDGM.EB.TIMEPM.WDGM020424, WDGM.EB.TIMEPM.WDGM020450)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30146_SetModeSynchron</srcid><srcstatus/><internalId>1737</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30149_CheckSetModeReturnE_NOT_OK</srcid><srcstatus/><internalId>1740</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2913</srcid><srcstatus/><internalId>1106</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2976</srcid><srcstatus/><internalId>1112</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00197</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the Local Supervision Status of a single Supervised Entity changes, the Watchdog Manager 
        module shall report that change via the mode port for that Supervised Entity immediately after 
        it has been recognized.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2822</srcid><srcstatus/><internalId>1101</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2859</srcid><srcstatus/><internalId>1104</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4551</srcid><srcstatus/><internalId>1211</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30139</srcid><srcstatus/><internalId>1775</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_SupervisionStatusService</srcid><srcstatus/><internalId>1780</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_SupervisionStatusService_Multicore</srcid><srcstatus/><internalId>1785</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30139_multicore</srcid><srcstatus/><internalId>1798</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00198</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the Global Supervision Status changes, the Watchdog Manager module shall report that 
        change via the global mode port.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2617</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2688</srcid><srcstatus/><internalId>1090</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4602</srcid><srcstatus/><internalId>1218</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4610</srcid><srcstatus/><internalId>1219</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30139</srcid><srcstatus/><internalId>1775</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_SupervisionStatusService</srcid><srcstatus/><internalId>1780</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_SupervisionStatusService_Multicore</srcid><srcstatus/><internalId>1785</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30139_multicore</srcid><srcstatus/><internalId>1798</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00199</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        After computing the Global Supervision Status from all Local Supervision Status, the Watchdog 
        Manager module shall report any change in the resulting Global Supervision Status only once.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30139</srcid><srcstatus/><internalId>1775</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_SupervisionStatusService</srcid><srcstatus/><internalId>1780</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_SupervisionStatusService_Multicore</srcid><srcstatus/><internalId>1785</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_SupervisionStatusService_Supervisor</srcid><srcstatus/><internalId>1790</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30139_multicore</srcid><srcstatus/><internalId>1798</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00200</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall track the Local Supervision Status of each Supervised Entity.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30119</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30120</srcid><srcstatus/><internalId>1720</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_0701_MultipleAliveCounters</srcid><srcstatus/><internalId>1827</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30119_Multicore</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30120_Multicore</srcid><srcstatus/><internalId>1844</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_128</srcid><srcstatus/><internalId>788</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_890</srcid><srcstatus/><internalId>821</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00201</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If all values in three sets of results of Supervision (results of Alive Supervision, results of 
        Deadline Supervision, results of Logical Supervision) for the Supervised Entity are correct and 
        the Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_OK, then the function 
        WdgM_MainFunction shall keep the Supervised Entity in the Local Supervision Status 
        WDGM_LOCAL_STATUS_OK (see Transition (1) in Figure 2)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30119</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30120</srcid><srcstatus/><internalId>1720</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_0701_MultipleAliveCounters</srcid><srcstatus/><internalId>1827</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30119_Multicore</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30120_Multicore</srcid><srcstatus/><internalId>1844</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4523</srcid><srcstatus/><internalId>1209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00202</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_OK AND:
        At least one result of Alive Supervision of the Supervised Entity is incorrect and a Failure 
        Tolerance of zero is configured (see configuration parameter 
        WdgMFailedAliveSupervisionRefCycleTol [ECUC_WdgM_00327]) OR
        If the result of at least one Deadline Supervision of the Supervised Entity or the result of at 
        least one Logical supervision of the Supervised Entity is incorrect)
        THEN the function WdgM_MainFunction shall change the Local Supervision Status to 
        WDGM_LOCAL_STATUS_EXPIRED (see Transition (2) in Figure 2)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30122</srcid><srcstatus/><internalId>1721</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30122_Multicore</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_AliveSupervisionLimit_NOK_missedCP</srcid><srcstatus/><internalId>1916</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckPointLimit_NOK_missedCP_Multicore</srcid><srcstatus/><internalId>1920</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SupervisedEntityLimit_NOK_missedCP_Multicore</srcid><srcstatus/><internalId>1931</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4387</srcid><srcstatus/><internalId>1195</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4432</srcid><srcstatus/><internalId>1200</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4474</srcid><srcstatus/><internalId>1205</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4485</srcid><srcstatus/><internalId>1206</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00203</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_OK AND:
        If the result of at least one Alive Supervision of the Supervised Entity is incorrect and a 
        Failure Tolerance greater than zero is configured (see configuration parameter 
        WdgMFailedAliveSupervisionRefCycleTol [ECUC_WdgM_00327]) AND
        If all the results of Deadline Supervision of the Supervised Entity and all results of Logical 
        Supervision of the Supervised Entity are correct)
        THEN the function WdgM_MainFunction shall change the Local Supervision Status to 
        WDGM_LOCAL_STATUS_FAILED and increment the counter for Failed Supervision Reference Cycles (see 
        Transition (3) in Figure 2)
      </description>
      <comment>
        Refined requirement to be compatible with TimE feature: Smooth error reaction
        without a reset for individual Supervised Entities. (see WDGM.EB.ASR40.WDGM203)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.ASR40.WDGM203</srcid><srcstatus/><internalId>503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00204</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_FAILED AND:
        If the result of at least one Alive Supervision is incorrect and the counter for failed 
        supervision reference cycles is less than the configured Failure Tolerance (see parameter 
        WdgMFailedAliveSupervisionRefCycleTol [ECUC_WdgM_00327]) AND
        If all the results of Deadline Supervisions of the Supervised Entity and all the result of 
        Logical Supervision of the Supervised Entity are correct)
        THEN the function WdgM_MainFunction shall keep the Local Supervision Status in 
        WDGM_LOCAL_STATUS_FAILED and increment the counter for Failed Supervision Reference Cycles (see 
        Transition (4) in Figure 2)
      </description>
      <comment>
        Implemented differently due to: Deviation [ASCWDGM-309] Consistent interpretation of
        parameter WdgMFailedAliveSupervisionRefCycleTol and refined to be compatible with TimE
        feature: Smooth error reaction without a reset for individual Supervised Entities. (see
        WDGM.EB.ASR40.WDGM204)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.WdgMFailedAliveSupervisionRefCycleTol</srcid><srcstatus/><internalId>750</internalId></linkedfrom><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00205</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_FAILED AND:
        If all the results of Alive Supervision of the Supervised Entity are correct and the counter 
        for Failed Supervision Reference Cycles equals 1) AND
        If all the results of Deadline Supervisions of the Supervised Entity and all the results of 
        Logical Supervision of the Supervised Entity are correct)
        THEN the function WdgM_MainFunction shall change the Local Supervision Status to 
        WDGM_LOCAL_STATUS_OK and decrement the counter for Failed Supervision Reference Cycles (see 
        Transition (5) in Figure 2)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30120</srcid><srcstatus/><internalId>1720</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30120_Multicore</srcid><srcstatus/><internalId>1844</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4444</srcid><srcstatus/><internalId>1201</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4450</srcid><srcstatus/><internalId>1203</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4459</srcid><srcstatus/><internalId>1204</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00206</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_FAILED AND:
        If at least one result of Alive Supervision is incorrect and the counter for Failed Supervision 
        Reference Cycles is equal to the configured Failure Tolerance (see configuration parameter 
        WdgMFailedAliveSupervisionRefCycleTol [ECUC_WdgM_00327]) OR
        If at least one result of Deadline Supervision of the Supervised Entity or at least one the 
        result of Logical Supervision of the Supervised Entity is incorrect)
        THEN the function WdgM_MainFunction shall change the Local Supervision Status to 
        WDGM_LOCAL_STATUS_EXPIRED (see Transition (6) in Figure 2)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.WdgMFailedAliveSupervisionRefCycleTol</srcid><srcstatus/><internalId>750</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00207</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_OK and if a call of 
        WdgM_SetMode switches to a mode which deactivates the Supervised Entity (see [SWS_WdgM_00283]
        then the Watchdog Manager module shall change the Local Supervision Status to 
        WDGM_LOCAL_STATUS_DEACTIVATED (see Transition (7) in Figure 2)
      </description>
      <comment>
        Mode switch is done also synchronously to MainFunction if multicore is not activated
        and  WdgMSetModeSynchron parameter is not set.
        (see WDGM.EB.TIMEPM.WDGM020422, WDGM.EB.TIMEPM.WDGM020102_Conf)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30146_SetModeSynchron</srcid><srcstatus/><internalId>1737</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2835</srcid><srcstatus/><internalId>1102</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00208</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Supervised Entity was in the Local Supervision Status WDGM_LOCAL_STATUS_DEACTIVATED, the 
        functions WdgM_CheckpointReached and WdgM_MainFunction shall not perform any Supervision 
        Functions for this Supervised Entity and keep the Local Supervision Status in the state 
        WDGM_LOCAL_STATUS_DEACTIVATED. (see Transition (8) in Figure 2)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30118</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30118_Multicore</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1839</srcid><srcstatus/><internalId>1005</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4038</srcid><srcstatus/><internalId>1179</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4533</srcid><srcstatus/><internalId>1210</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00209</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_DEACTIVATED and if a 
        call of WdgM_SetMode switches to a mode in which the Supervised Entity is active (see [
        SWS_WdgM_00282]), then the Watchdog Manager module shall change the Local Supervision Status to 
        WDGM_LOCAL_STATUS_OK. And the counter for Failed Supervision Reference Cycles shall be set to 
        zero (0). (see Transition (9) in Figure 2)
      </description>
      <comment>
        Mode switch is done also synchronously to MainFunction if multicore is not activated
        and  WdgMSetModeSynchron parameter is not set.
        (see WDGM.EB.TIMEPM.WDGM020421)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30146_SetModeSynchron</srcid><srcstatus/><internalId>1737</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2807</srcid><srcstatus/><internalId>1100</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00213</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall have one Global Supervision Status for the whole monitored 
        software.
      </description>
      <comment>
        There exists exactly one global variable WdgM_GlobalSupervStatus that holds the
        global supervision status. Refined with WDGM.EB.DesignDecision.InternalVariable2.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable2</srcid><srcstatus/><internalId>1665</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00214</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_MainFunction shall calculate the Global Supervision Status in every 
        Supervision Cycle. The function shall compute the Global Supervision Status after it computed 
        every Local Supervision Status. The cyclic update of Global Supervision Status is necessary to 
        trigger the timely transition from WDGM_GLOBAL_STATUS_EXPIRED to WDGM_GLOBAL_STATUS_STOPPED.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30123</srcid><srcstatus/><internalId>1725</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30112</srcid><srcstatus/><internalId>1804</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30123_Multicore</srcid><srcstatus/><internalId>1849</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2458</srcid><srcstatus/><internalId>1062</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00215</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Global Supervision Status was WDGM_GLOBAL_STATUS_OK, the Local Supervision Status of at 
        least one Supervised Entity is WDGM_LOCAL_STATUS_EXPIRED, and the Expired Supervision Tolerance 
        is configured to a value larger than zero (see configuration parameter 
        WdgMExpiredSupervisionCycleTol [ECUC_WdgM_00329]), then function WdgM_MainFunction shall change 
        the Global Supervision Status to WDGM_GLOBAL_STATUS_EXPIRED. And increment the Expired Cycle 
        Counter. (see Transition (3) in Figure 3)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30140</srcid><srcstatus/><internalId>1732</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30140_Multicore</srcid><srcstatus/><internalId>1856</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ParalellAliveSupervision_Multicore</srcid><srcstatus/><internalId>1860</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4711</srcid><srcstatus/><internalId>1227</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00216</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Global Supervision Status was WDGM_GLOBAL_STATUS_OK, the Local Supervision Status of at 
        least one Supervised Entity is WDGM_LOCAL_STATUS_EXPIRED, and the Expired Supervision Tolerance 
        is configured to zero (see configuration parameter WdgMExpiredSupervisionCycleTol [
        ECUC_WdgM_00329]), then the function WdgM_MainFunction shall change the Global Supervision 
        Status to WDGM_GLOBAL_STATUS_STOPPED (see Transition (4) in Figure 3)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30136</srcid><srcstatus/><internalId>1731</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30136_Multicore</srcid><srcstatus/><internalId>1855</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4717</srcid><srcstatus/><internalId>1228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00217</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Global Supervision Status was WDGM_GLOBAL_STATUS_FAILED, the Local Supervision Status of 
        at least one Supervised Entity is WDGM_LOCAL_STATUS_FAILED, and no Supervised Entity is in 
        Local Supervision Status WDGM_LOCAL_STATUS_EXPIRED, then function WdgM_MainFunction shall 
        remain in Global Supervision Status WDGM_GLOBAL_STATUS_FAILED. (see Transition (5) in Figure 3)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30128</srcid><srcstatus/><internalId>1726</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30128_Multicore</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4700</srcid><srcstatus/><internalId>1225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00218</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Global Supervision Status was WDGM_GLOBAL_STATUS_FAILED and the Local Supervision Status 
        of all Supervised Entities is either WDGM_LOCAL_STATUS_OK or WDGM_LOCAL_STATUS_DEACTIVATED then 
        function WdgM_MainFunction shall change the Global Supervision Status to WDGM_GLOBAL_STATUS_OK 
        see Transition (6) in Figure 3)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30141</srcid><srcstatus/><internalId>1733</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30141_Multicore</srcid><srcstatus/><internalId>1857</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ParalellAliveSupervision_Multicore</srcid><srcstatus/><internalId>1860</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4705</srcid><srcstatus/><internalId>1226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00219</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        If the Global Supervision Status was WDGM_GLOBAL_STATUS_EXPIRED, the Local Supervision Status 
        of at least one Supervised Entity is WDGM_LOCAL_STATUS_EXPIRED, and the Expired Cycle Counter 
        is less than the configured Expired Supervision Tolerance (see configuration parameter 
        WdgMExpiredSupervisionCycleTol [ECUC_WdgM_00329]), then function WdgM_MainFunction shall keep 
        Global Supervision Status WDGM_GLOBAL_STATUS_EXPIRED and increment the Expired Cycle Counter (
        see Transition (9) in Figure 3)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30123</srcid><srcstatus/><internalId>1725</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30123_Multicore</srcid><srcstatus/><internalId>1849</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4728</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00220</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        If the Global Supervision Status was WDGM_GLOBAL_STATUS_EXPIRED, the Local Supervision Status 
        of at least one Supervised Entity is WDGM_LOCAL_STATUS_EXPIRED, and the Expired Cycle Counter 
        is equal to the configured Expired Supervision Tolerance (see configuration parameter 
        WdgMExpiredSupervisionCycleTol [ECUC_WdgM_00329]), then function WdgM_MainFunction shall change 
        the Global Supervision Status to WDGM_GLOBAL_STATUS_STOPPED (see Transition (10) in Figure 3)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30123</srcid><srcstatus/><internalId>1725</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30123_Multicore</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SupervisedEntityLimit_ExpiredSupervisionCycleTol</srcid><srcstatus/><internalId>1929</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SupervisedEntityLimit_ExpiredSupervisionCycleTol_Multicore</srcid><srcstatus/><internalId>1932</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4728</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00221</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Global Supervision Status was WDGM_GLOBAL_STATUS_STOPPED, then function 
        WdgM_MainFunction shall remain in Global Supervision Status WDGM_GLOBAL_STATUS_STOPPED (see 
        Transition (11) in Figure 3)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30123</srcid><srcstatus/><internalId>1725</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30123_Multicore</srcid><srcstatus/><internalId>1849</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4739</srcid><srcstatus/><internalId>1230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00223</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        The Watchdog Manager module shall update the trigger condition every time the Global 
        Supervision Status has been recomputed. The following rules shall be used to derive the 
        decision, how to set the triggering condition:
        For the states WDGM_GLOBAL_STATUS_OK, WDGM_GLOBAL_STATUS_FAILED and WDGM_GLOBAL_STATUS_EXPIRED,
        the function WdgM_MainFunction shall set correctly the trigger conditions.
        For the state WDGM_GLOBAL_STATUS_STOPPED, the function WdgM_MainFunction shall set the trigger 
        condition to 0, which results in a reset through HW watchdog(s)
        For the state WDGM_GLOBAL_STATUS_DEACTIVATED, the function WdgM_MainFunction shall not perform 
        setting of the trigger condition (because this state means that the Watchdog Manager module is 
        not properly initialized)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00225</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        If the Local Supervision Status of a Supervised Entity changes to WDGM_LOCAL_STATUS_FAILED and 
        this Supervised Entity has a corresponding OS Application configured (see configuration 
        parameter WdgMEcucPartitionRef), then the Watchdog Manager module shall call the API function 
        BswM_WdgM_RequestPartitionReset of the Basic Software Mode Manager module to request a restart/
        shutdown of the Basic Software Mode Manager module to request a restart/shutdown of the 
        corresponding partition.
      </description>
      <comment>
        Set to DEVIATION because of WdgM.ASR40.SWS_WdgM_00162.1: Supervisor Callout is used
      instead of BswM_WdgM_RequestPartitionReset. Replaced by WDGM.EB.ASR40.WDGM020225.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00228</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the Deadline Start Checkpoint is reached and this Checkpoint is referenced in the active 
        Mode, then the function WdgM_CheckpointReached shall record the current timestamp under the 
        timestamp of the reached Deadline Start Checkpoint. The current timestamp shall be used as the 
        reference for examining the time of the corresponding Deadline End Checkpoint.
      </description>
      <comment>
        Refined in WDGM.EB.ASR40.WDGM228 in the way that additionally, an active flag will
        be set for this Deadline Monitoring, because taking the timestamp value != 0 for being
        active is problematic if time can have a wrap-around.
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.ASR40.WDGM228</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00229</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the Deadline End Checkpoint is reached and this Checkpoint is referenced in the active 
        Mode, and timestamp of the corresponding Deadline Start Checkpoint is &lt;&gt;0, then the function 
        WdgM_CheckpointReached shall measure the time difference between current timestamp and the 
        corresponding Deadline Start Checkpoint timestamp. Then, the function shall clear (i.e. set to 
        0) the timestamp of the corresponding Deadline Start Checkpoint.
      </description>
      <comment>
        Refined in WDGM.EB.ASR40.WDGM229 in the way that additionally, an active flag will
        be set for this Deadline Monitoring, because taking the timestamp value != 0 for being
        active is problematic if time can have a wrap-around.
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.ASR40.WDGM229</srcid><srcstatus/><internalId>517</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00232</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When this service is called, the Watchdog Manager shall set the trigger condition for all 
        configured Watchdog Drivers to 0 (zero)
      </description>
      <comment>
        Refined in WdgM.EB.PerformReset1, because it makes no sense to update trigger
        condition of all watchdogs. Instead only watchdogs which are active in actual mode shall be
        updated.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.EB.PerformReset1</srcid><srcstatus/><internalId>500</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00233</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        After this service has been called, the Watchdog Manager shall not update the trigger condition 
        anymore.
      </description>
      <comment>
        Refined in WdgM.EB.PerformReset3, because updating triggering conditions with 0 is
        ok.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.EB.PerformReset3</srcid><srcstatus/><internalId>501</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00246</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_CheckpointReached shall store for each External Graph and for each Internal 
        Graph the Checkpoint that has been most recently reported by a Supervised Entity (see 
        WdgM_CheckpointReached [SWS_WdgM_00263]). If the Activity Flag for a Graph is true, the 
        function WdgM_CheckpointReached checks for each new Checkpoint if the Transition between the 
        stored Checkpoint and the newly reported Checkpoint is allowed.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_StoreCheckpoint</srcid><srcstatus/><internalId>1820</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_StoreCheckpoint_Multicore</srcid><srcstatus/><internalId>1867</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ExternalLogical_OK_Multicore</srcid><srcstatus/><internalId>1887</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ExternalLogical_NOK_missedCP_Multicore</srcid><srcstatus/><internalId>1888</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_IntLogicalNOK_ExternalLogicalOK_Multicore</srcid><srcstatus/><internalId>1891</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3072</srcid><srcstatus/><internalId>1120</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3183</srcid><srcstatus/><internalId>1129</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3330</srcid><srcstatus/><internalId>1139</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00252</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_CheckpointReached [SWS_WdgM_00263] shall verify if the reported Checkpoint 
        belonging to an External Graph is a correct one by the following checks:
        If the Activity Flag for the Graph of the reported Checkpoint is false, then:
        If the Checkpoint is an Initial Checkpoint (WdgMExternalCheckpointInitialRef), then the result 
        of this Logical Supervision within the Supervised Entity of the reported Checkpoint is correct,
        otherwise incorrect.
        Else if Activity Flag is true and all previously called Checkpoints of this Graph were called 
        in the right sequence, then:
        If the reported Checkpoint is a successor of the stored Checkpoint within the Graph of the 
        reported Checkpoint (this means there is an WdgMExternalTransition with 
        WdgMExternalTransitionSourceRef and WdgMExternalTransitionDestRef), then the result of this 
        Logical Supervision for Supervised Entity of the reported Checkpoint is correct, otherwise 
        incorrect.
        Else (i.e. Activity Flag is true, but at least one Checkpoint in this Graph was previously 
        called in a wrong sequence)
        The result of this Logical Supervision of the Supervised Entity keeps incorrect.
        The above requirement means that in case of an incorrect External Transition, the Supervised 
        Entity that is considered as erroneous is the one that reported the incorrect Checkpoint.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ExternalLogicalCheckpointReached</srcid><srcstatus/><internalId>1817</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ExternalLogicalCheckpointReached_Multicore</srcid><srcstatus/><internalId>1864</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ExternalLogical_OK_Multicore</srcid><srcstatus/><internalId>1887</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ExternalLogical_NOK_missedCP_Multicore</srcid><srcstatus/><internalId>1888</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ExternalLogicalNOK_IntLogicalOK_Multicore</srcid><srcstatus/><internalId>1892</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3035</srcid><srcstatus/><internalId>1117</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3146</srcid><srcstatus/><internalId>1126</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3270</srcid><srcstatus/><internalId>1135</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00253</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled: The function 
        WdgM_GetMode shall report the error to default error tracer with error code WDGM_E_UNINIT, 
        without any further effect, if the Watchdog Manager is in WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00254</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled, the routine 
        shall check if NULL pointers are passed for OUT parameters. In case of an error, the service 
        shall not be executed and the error shall be reported to the Default Error Tracer with the 
        error code WDGM_E_INV_POINTER.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30109</srcid><srcstatus/><internalId>1757</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1720</srcid><srcstatus/><internalId>996</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00256</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the WdgMDevErrorDetect [ECUC_WdgM_00301] switch is enabled, the function WdgM_GetVersionInfo 
        shall check if a NULL pointer is passed for the VersionInfo parameter. In case of an error the 
        remaining function WdgM_GetVersionInfo shall not be executed and the function 
        WdgM_GetVersionInfo shall report development error code WDGM_E_INV_POINTER to the 
        Det_ReportError service of the Default Error Tracer.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30105</srcid><srcstatus/><internalId>1742</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1497</srcid><srcstatus/><internalId>970</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00257</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled, the routine 
        shall check if NULL pointers are passed for OUT parameters. In case of an error, the service 
        shall not be executed and the error shall be reported to the Default Error Tracer with the 
        error code WDGM_E_INV_POINTER.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30048</srcid><srcstatus/><internalId>1765</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2129</srcid><srcstatus/><internalId>1027</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00258</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled, the routine 
        shall check if NULL pointers are passed for OUT parameters. In case of an error, the service 
        shall not be executed and the error shall be reported to the Default Error Tracer with the 
        error code WDGM_E_INV_POINTER.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30047</srcid><srcstatus/><internalId>1764</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2206</srcid><srcstatus/><internalId>1035</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00344</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00261</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | WdgM_DeInit 
        Syntax 
        void WdgM_DeInit (void)
        Service ID [hex] | 0x01 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | De-initializes the Watchdog Manager.
        Available via | WdgM.h 
      </description>
      <comment>
        Changed due to Deviation ASCWDGM-303 ((De-)Init is done synchronously to
        MainFunction). That is, WdgM_(De)Init is requested and applied synchronously to
        MainFunction. (see WDGM.EB.TIMEPM.WDGM020436)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.SynchronousDeInit</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00263</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | WdgM_CheckpointReached 
        Syntax 
        Std_ReturnType WdgM_CheckpointReached (WdgM_SupervisedEntityIdType SEID, WdgM_CheckpointIdType 
        CheckpointID)
        Service ID [hex] | 0x0e 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | SEID | Identifier of the Supervised Entity that reports a Checkpoint.
        CheckpointID | Identifier of the Checkpoint within a Supervised Entity that has been reached.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: Successfully updated alive counterE_NOT_OK: Update failed 
        Description | Indicates to the Watchdog Manager that a Checkpoint within a Supervised Entity 
        has been reached.
        Available via | WdgM.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_LogicalSupervision</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_DeadlineSupervision</srcid><srcstatus/><internalId>1711</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_407</srcid><srcstatus/><internalId>902</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1778</srcid><srcstatus/><internalId>1000</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00264</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | WdgM_PerformReset 
        Syntax 
        void WdgM_PerformReset (void)
        Service ID [hex] | 0x0f 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | Instructs the Watchdog Manager to cause a watchdog reset.
        Available via | WdgM.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_LogicalSupervision</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_DeadlineSupervision</srcid><srcstatus/><internalId>1711</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2229</srcid><srcstatus/><internalId>1037</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00268</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        If the function WdgM_Init is successfully called, then for each Supervised Entity that is 
        referenced from the Initial Mode (WdgMInitialMode) (i.e. each Supervised Entity that is 
        activated in the initial mode), the function WdgM_Init shall set the Local Supervision Status 
        for this Supervised Entity to WDGM_LOCAL_STATUS_OK. And the counter for Failed Supervision 
        Reference Cycles shall be set to zero (0). (see Transition (10) in Figure 2)
      </description>
      <comment>
        Changed due to Deviation ASCWDGM-303 ((De-)Init is done synchronously to
        MainFunction). That is, WdgM_(De)Init is requested and applied synchronously to
        MainFunction. (see WDGM.EB.TIMEPM.WDGM020426)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.SynchronousDeInit</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00269</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the function WdgM_Init is successfully called, then for each Supervised Entity that is not 
        referenced from the Initial Mode (WdgMInitialMode), the function WdgM_Init shall set the Local 
        Supervision Status for this Supervised Entity to WDGM_LOCAL_STATUS_DEACTIVATED (see Transition 
        11) in Figure 2). If the function WdgM_Init is successfully called and the parameter 
        WdgMInitialMode [ECUC_WdgM_00336] of this Supervised Entity in WdgMInitialMode is not 
        configured to WDGM_LOCAL_STATUS_OK then the Watchdog Manager module shall set the Local 
        Supervision Status for this Supervised Entity to WDGM_LOCAL_STATUS_DEACTIVATED. (see Transition 
        11) in Figure 2)
      </description>
      <comment>
        Changed due to Deviation ASCWDGM-303 ((De-)Init is done synchronously to
        MainFunction). That is, WdgM_(De)Init is requested and applied synchronously to
        MainFunction. (see WDGM.EB.TIMEPM.WDGM020427)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.SynchronousDeInit</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00270</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled: The function 
        WdgM_PerformReset shall report the error to default error tracer with error code WDGM_E_UNINIT,
        without any further effect, if the Watchdog Manager is in WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00271</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall maintain for each Graph an Activity Flag.
      </description>
      <comment>
        Refined with WDGM.EB.DesignDecision.InternalVariable7. Further, tested via
        WdgM.SWS_WdgM_00329 and WdgM.SWS_WdgM_00273.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable7</srcid><srcstatus/><internalId>1670</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable13</srcid><srcstatus/><internalId>1676</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.SWS_WdgM_00273</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>WdgM.SWS_WdgM_00329</srcid><srcstatus/><internalId>287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00273</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the function WdgM_CheckpointReached determines that the result of the Logical Supervision 
        for the given Checkpoint is true, and the Checkpoint is the initial one (
        WdgMInternalCheckpointInitialRef), then shall set the Activity Flag of the Graph corresponding 
        to the Checkpoint to true.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ActivityFlagSet</srcid><srcstatus/><internalId>1821</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ActivityFlagSet_Multicore</srcid><srcstatus/><internalId>1868</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3060</srcid><srcstatus/><internalId>1119</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3171</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3310</srcid><srcstatus/><internalId>1138</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00274</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_CheckpointReached [SWS_WdgM_00263] shall verify if the reported Checkpoint 
        belonging to an Internal Graph is a correct one by the following checks:
        If the Activity Flag for the Graph of the reported Checkpoint is false, then:
        If the Checkpoint is an Initial Checkpoint (WdgMInternalCheckpointInitialRef) the result of 
        Logical Supervision for the Supervised Entity is correct, otherwise incorrect.
        Else if Activity Flag is true and all previously called Checkpoints of this Graph were called 
        in the right sequence, then:
        If the reported Checkpoint is a successor of the stored Checkpoint within the Graph of the 
        reported Checkpoint (this means there is an WdgMInternalTransition with 
        WdgMInternalTransitionSourceRef and WdgMInternalTransitionDestRef), then the result of this 
        Logical Supervision of the Supervised Entity is correct, otherwise incorrect.
        Else (i.e. Activity Flag is true, but at least one Checkpoint in this Graph was previously 
        called in a wrong sequence)
        The result of this Logical Supervision of the Supervised Entity keeps incorrect.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_InternalLogicalCheckpointReached</srcid><srcstatus/><internalId>1816</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_InternalLogicalCheckpointReached_Multicore</srcid><srcstatus/><internalId>1863</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ParalellLogicalSupervision_Multicore</srcid><srcstatus/><internalId>1874</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ExternalLogicalNOK_IntLogicalOK_Multicore</srcid><srcstatus/><internalId>1892</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3035</srcid><srcstatus/><internalId>1117</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3146</srcid><srcstatus/><internalId>1126</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3270</srcid><srcstatus/><internalId>1135</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00278</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled, the parameter 
        SEID shall be checked for being in the list of the entities under control of the Watchdog 
        Manager. In case of an error, the service shall not be executed and the error shall be reported 
        to the Default Error Tracer with the error code WDGM_E_PARAM_SEID.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30043</srcid><srcstatus/><internalId>1758</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1792</srcid><srcstatus/><internalId>1002</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00279</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled: The function 
        WdgM_CheckpointReached shall report the error to default error tracer with error code 
        WDGM_E_UNINIT, without any further effect, if the Watchdog Manager is in 
        WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00282</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        In order to have a Supervised Entity with supervision activated in a given mode (in short: 
        Activated Supervised Entity), the following shall be fulfilled:
        The Supervised Entity shall be referenced from the Mode (see WdgMMode WdgMLocalStatusParams 
        WdgMLocalStatusSupervisedEntityRef WdgMSupervisedEntity AND
        At least one of mode-dependent settings of Supervision Functions shall be set for the given 
        Mode (Alive, Deadline, Logical for External Graphs)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30118</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30118_Multicore</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00283</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        In order to have a Supervised Entity with supervision deactivated in a given mode (in short: 
        Deactivated Supervised Entity), the following shall be fulfilled:
        The Supervised Entity shall not be referenced from the Mode (see WdgMMode WdgMLocalStatusParams 
        WdgMLocalStatusSupervisedEntityRef WdgMSupervisedEntity AND
        No mode-dependent settings of Supervision Functions shall be set for the given Mode (Alive, 
        Deadline, Logical for External Graphs)
        Because the Logical supervision for Internal Graphs is a property of a Supervised Entity, the 
        configuration of Logical Supervision for Internal Graphs do not impact the deactivation/
        activation status of Supervised Entity.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30127</srcid><srcstatus/><internalId>1729</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30127_Multicore</srcid><srcstatus/><internalId>1853</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00284</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled, the routine 
        shall check if the parameter CheckpointID is within the set of Checkpoints (see [
        ECUC_WdgM_00303]) associated with the Supervised Entity given by the parameter SEID. In case of 
        an error, the service shall not be executed and the error shall be reported to the Default 
        Error Tracer with the error code WDGM_E_CPID.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30049</srcid><srcstatus/><internalId>1760</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1822</srcid><srcstatus/><internalId>1004</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00285</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        If the function WdgM_Init [SWS_WdgM_00151] was successfully called then the function shall 
        change the Global Supervision Status to WDGM_GLOBAL_STATUS_OK. And the Expired Cycle Counter 
        shall be set to zero (0). (see Transition (13) in Figure 4)
      </description>
      <comment>
        Changed due to Deviation ASCWDGM-303 ((De-)Init is done synchronously to
        MainFunction). That is, WdgM_(De)Init is requested and applied synchronously to
        MainFunction. (see WDGM.EB.TIMEPM.WDGM020428)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.SynchronousDeInit</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00286</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Global Supervision Status was WDGM_GLOBAL_STATUS_OK and the function WdgM_DeInit [
        SWS_WdgM_00261] is successfully called, then the function shall change the Global Supervision 
        Status to WDGM_GLOBAL_STATUS_DEACTIVATED (see Transitions (14), (15), (16) and (17) in Figure 4)
      </description>
      <comment>
        Changed due to Deviation ASCWDGM-303 ((De-)Init is done synchronously to
        MainFunction). That is, WdgM_(De)Init is requested and applied synchronously to
        MainFunction. (see WDGM.EB.TIMEPM.WDGM020435)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.AlwaysAllowDeInit</srcid><srcstatus/><internalId>749</internalId></linkedfrom><linkedfrom><srcid>dev.WdgM.SynchronousDeInit</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00288</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled: The function 
        WdgM_DeInit shall report the error to default error tracer with error code WDGM_E_UNINIT, 
        without any further effect, if the Watchdog Manager is in WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00291</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_FAILED and if a call 
        of WdgM_SetMode switches to a mode in which the Supervised Entity is Deactivated (see [
        SWS_WdgM_00283]), then the Watchdog Manager module shall change the Local Supervision Status to 
        WDGM_LOCAL_STATUS_DEACTIVATED (see Transition (12) in Figure 2)
      </description>
      <comment>
        Mode switch is done also synchronously to MainFunction if multicore is not activated
        and  WdgMSetModeSynchron parameter is not set.
        (see WDGM.EB.TIMEPM.WDGM020423, WDGM.EB.TIMEPM.WDGM020102_Conf)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30146_SetModeSynchron</srcid><srcstatus/><internalId>1737</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2835</srcid><srcstatus/><internalId>1102</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00293</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall derive the required number of independent data resources to 
        perform the Deadline Supervision within the Watchdog Manager module from the number of 
        Supervised Entities, number of WdgMModes and their WdgMAliveSupervisions.
      </description>
      <comment>
        Refined to identify the specific required independent data resources.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.SWS_WdgM_00293.1</srcid><srcstatus/><internalId>364</internalId></linkedfrom><linkedfrom><srcid>WdgM.SWS_WdgM_00293.2</srcid><srcstatus/><internalId>365</internalId></linkedfrom><linkedfrom><srcid>WdgM.SWS_WdgM_00293.3</srcid><srcstatus/><internalId>366</internalId></linkedfrom><linkedfrom><srcid>WdgM.SWS_WdgM_00293.4</srcid><srcstatus/><internalId>367</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00293_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall derive the required number of independent data
        resources to perform the Logical Supervision within the Watchdog Manager module from the
        number of Supervised Entities, number of WdgMModes and their WdgMExternalLogicalSupervisions
        and WdgMInternalTransitions. () </description>
      <comment> Refined to identify the specific required independent data resources. </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.SWS_WdgM_00293_1.1</srcid><srcstatus/><internalId>368</internalId></linkedfrom><linkedfrom><srcid>WdgM.SWS_WdgM_00293_1.2</srcid><srcstatus/><internalId>369</internalId></linkedfrom><linkedfrom><srcid>WdgM.SWS_WdgM_00293_1.3</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00294</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the measured time difference (see SWS_WdgM_00229) is not within the minimum and the maximum 
        limits (that is, the time difference is either less than WdgMDeadlineMin or greater than 
        WdgMDeadlineMax), then the function WdgM_CheckpointReached shall define the result of Deadline 
        Supervision for this Supervised Entity as incorrect. Otherwise, it shall be defined as correct.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision</srcid><srcstatus/><internalId>1830</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision_Multicore</srcid><srcstatus/><internalId>1875</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3607</srcid><srcstatus/><internalId>1150</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3694</srcid><srcstatus/><internalId>1156</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00295</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_CheckpointReached shall identify to which one Graph a reached Checkpoint 
        belongs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_IdentifyGraph</srcid><srcstatus/><internalId>1819</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_IdentifyGraph_Multicore</srcid><srcstatus/><internalId>1866</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ExternalLogicalNOK_IntLogicalOK_Multicore</srcid><srcstatus/><internalId>1892</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3018</srcid><srcstatus/><internalId>1115</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3129</srcid><srcstatus/><internalId>1124</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3242</srcid><srcstatus/><internalId>1133</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00296</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_Init shall be set the Activity Flag for each Graph to false. Each Graph may 
        have one or more Initial Checkpoints. Initial Checkpoints are Checkpoints with which a Graph 
        can start. To notify reaching a Checkpoint, a Supervised Entity invokes the function 
        WdgM_CheckpointReached, which results with execution of Logical Supervision algorithm. To 
        verify if transitions are valid, the algorithm needs to store the most recently reached 
        Checkpoint. For every External and Internal Graph, the Watchdog Manger stores the most recently 
        reached Checkpoint. Because a Checkpoint can belong to only one Graph, the function 
        WdgM_CheckpointReached is able to identify to which Graph a Checkpoint belongs.
      </description>
      <comment>
        Changed due to Deviation ASCWDGM-303 ((De-)Init is done synchronously to
        MainFunction). That is, WdgM_(De)Init is requested and applied synchronously to
        MainFunction. (see WDGM.EB.TIMEPM.WDGM020430)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.SynchronousDeInit</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00297</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        For any reported Checkpoint that does not belong to any Graph, the function 
        WdgM_CheckpointReached [SWS_WdgM_00263] shall ignore it and not update the result of the 
        Logical Supervision for the Supervised Entity.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_IgnoredCheckpoint</srcid><srcstatus/><internalId>1818</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_IgnoredCheckpoint_Multicore</srcid><srcstatus/><internalId>1865</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1873</srcid><srcstatus/><internalId>1007</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1899</srcid><srcstatus/><internalId>1009</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1921</srcid><srcstatus/><internalId>1011</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1932</srcid><srcstatus/><internalId>1012</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00298</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_Init shall for all Deadline Start Checkpoints set their timestamps to 0. When 
        a Deadline Start Checkpoint (i.e. Checkpoint referenced by WdgMDeadlineStartRef) is reached, a 
        Supervised Entity invokes the function WdgM_CheckpointReached, which results with the execution 
        of Deadline Supervision.
      </description>
      <comment>Changed due to Deviation ASCWDGM-303 ((De-)Init is done synchronously to
        MainFunction). That is, WdgM_(De)Init is requested and applied synchronously to
        MainFunction. (see WDGM.EB.TIMEPM.WDGM020429)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.SynchronousDeInit</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00299</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        For any reported Checkpoint that is neither a Deadline Start Checkpoint nor a Deadline End 
        Checkpoint, the function WdgM_CheckpointReached [SWS_WdgM_00263] shall ignore this Checkpoint 
        and not update the result of the Deadline Supervision for the Supervised Entity.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_IgnoredCheckpointDeadlineSupervision</srcid><srcstatus/><internalId>1839</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_IgnoredCheckpointDeadlineSupervision_Multicore</srcid><srcstatus/><internalId>1884</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1900</srcid><srcstatus/><internalId>1010</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00300</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_FAILED AND:
        If all the results of Alive Supervision of the Supervised Entity are correct and the counter 
        for Failed Supervision Reference Cycles is &gt; 1) AND
        If all the result of Deadline Supervision of the Supervised Entity and all the result of 
        Logical Supervision of the Supervised Entity are correct)
        THEN the function WdgM_MainFunction shall keep the Local Supervision Status in 
        WDGM_LOCAL_STATUS_FAILED and decrement the counter for Failed Supervision Reference Cycles (see 
        Transition (4) in Figure 2)
      </description>
      <comment>
        Refined requirement to be compatible with TimE feature: Smooth error reaction
        without a reset for individual Supervised Entities. (see WDGM.EB.ASR40.WDGM300)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.ASR40.WDGM300</srcid><srcstatus/><internalId>505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00315</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the current global status is WDGM_GLOBAL_STATUS_OK or WDGM_GLOBAL_STATUS_FAILED then for 
        each Supervised Entity that is deactivated in the new mode (passed to function WdgM_SetMode as 
        parameter), the function WdgM_SetMode shall change the state of the Supervised Entity to 
        WDGM_LOCAL_STATUS_DEACTIVATED; It shall set its Results of Active, Deadline and Logical 
        Supervision to correct; It shall also clear its failed reference cycle counter to 0.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30128</srcid><srcstatus/><internalId>1726</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30127</srcid><srcstatus/><internalId>1729</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30128_Multicore</srcid><srcstatus/><internalId>1850</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30127_Multicore</srcid><srcstatus/><internalId>1853</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ExternalLogicalMultipleModes_Multicore</srcid><srcstatus/><internalId>1893</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2835</srcid><srcstatus/><internalId>1102</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00316</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the current global status is not WDGM_GLOBAL_STATUS_OK nor WDGM_GLOBAL_STATUS_FAILED then 
        the function WdgM_SetMode shall return without doing any actions.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30128</srcid><srcstatus/><internalId>1726</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30128_Multicore</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1617</srcid><srcstatus/><internalId>985</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2728</srcid><srcstatus/><internalId>1096</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00319</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>2</version>
      <description>
        The routine shall check if Supervised Entity to which the parameter CheckpointID belongs, is 
        activated in the current mode. In case of an error (i.e. the Supervised Entity is deactivated 
        in the current mode), the service shall return with E_NOT_OK without any action, and the error 
        shall be reported to the Default Error Tracer with the runtime error code WDGM_E_SEDEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ChangedFunctionalities</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00321</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_CheckpointReached() shall increment the Alive Counter of reported Checkpoint.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30119</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_0701_MultipleAliveCounters</srcid><srcstatus/><internalId>1827</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30119_Multicore</srcid><srcstatus/><internalId>1843</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3774</srcid><srcstatus/><internalId>1161</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00322</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_CheckpointReached() shall perform the Deadline Supervision (detection of 
        early arrivals and delays) for the reported Supervised Entity using the reported Checkpoint. 
        The output shall be an updated result of Deadline Supervision for the Supervised Entity.
      </description>
      <furtherinfo>
        WRN.swuts.needscoverage.count: Based on configuration parameters this 
        Deadline Supervision is checked in many places in the sources and also in some test configurations,
        due to the highly important nature of this topic resulting in surpassing the count limit.
      </furtherinfo>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SimpleDeadlineSupervision_1</srcid><srcstatus/><internalId>1831</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SimpleDeadlineSupervision_2</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SimpleDeadlineSupervision_3</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_MultipleDeadlineSupervision_1</srcid><srcstatus/><internalId>1834</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_MultipleDeadlineSupervision_2</srcid><srcstatus/><internalId>1835</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_MultipleDeadlineSupervision_3</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_MultipleDeadlineSupervision_4</srcid><srcstatus/><internalId>1837</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_MultipleDeadlineSupervision_5</srcid><srcstatus/><internalId>1838</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SimpleDeadlineSupervision_Multicore1</srcid><srcstatus/><internalId>1876</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SimpleDeadlineSupervision_Multicore2</srcid><srcstatus/><internalId>1877</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SimpleDeadlineSupervision_Multicore3</srcid><srcstatus/><internalId>1878</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_MultipleDeadlineSupervision_Multicore1</srcid><srcstatus/><internalId>1879</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_MultipleDeadlineSupervision_Multicore2</srcid><srcstatus/><internalId>1880</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_MultipleDeadlineSupervision_Multicore3</srcid><srcstatus/><internalId>1881</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_MultipleDeadlineSupervision_Multicore4</srcid><srcstatus/><internalId>1882</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_MultipleDeadlineSupervision_Multicore5</srcid><srcstatus/><internalId>1883</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ParalelDeadlineSupervision_Multicore_Master</srcid><srcstatus/><internalId>1885</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ParalelDeadlineSupervision_Multicore_Satellite</srcid><srcstatus/><internalId>1886</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_DeadlineSupervisionLimit</srcid><srcstatus/><internalId>1921</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_DeadlineSupervisionLimit_Multicore</srcid><srcstatus/><internalId>1922</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3493</srcid><srcstatus/><internalId>1144</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00323</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_CheckpointReached() shall perform the Logical Supervision for the reported 
        Supervised Entity using the reported Checkpoint. The output shall be an updated result of 
        Logical Supervision for the Supervised Entity.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs</srcid><srcstatus/><internalId>1815</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs_Multicore</srcid><srcstatus/><internalId>1862</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ParalellLogicalSupervision_Multicore</srcid><srcstatus/><internalId>1874</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3035</srcid><srcstatus/><internalId>1117</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3146</srcid><srcstatus/><internalId>1126</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3270</srcid><srcstatus/><internalId>1135</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00324</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_MainFunction()shall perform the Alive Supervision for the reported Supervised 
        Entity using the reported Checkpoint. The input of this function shall be the Alive Counters of 
        the Checkpoint. The output of this function shall be the Results of Alive Supervision for the 
        Supervised Entity.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30118</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30118_Multicore</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3901</srcid><srcstatus/><internalId>1169</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00325</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Based on the results from Alive, Deadline and Logical Supervision, for each activated 
        Supervised Entity the function WdgM_MainFunction() shall determine the Local Supervision Status.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30118</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30118_Multicore</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2450</srcid><srcstatus/><internalId>1061</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00326</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Based on the Local Supervision Status of each activated Supervised Entity, the function 
        WdgM_MainFunction() shall determine the Global Supervision Status.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30123</srcid><srcstatus/><internalId>1725</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30124</srcid><srcstatus/><internalId>1727</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30123_Multicore</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30124_Multicore</srcid><srcstatus/><internalId>1851</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2458</srcid><srcstatus/><internalId>1062</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00327</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Based on the Local Supervision Status of each Supervision Status and the Global Supervision 
        Status, the function WdgM_MainFunction() shall manage the corresponding error handling.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30124</srcid><srcstatus/><internalId>1727</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30135</srcid><srcstatus/><internalId>1730</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30136</srcid><srcstatus/><internalId>1731</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30124_Multicore</srcid><srcstatus/><internalId>1851</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30135_Multicore</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30136_Multicore</srcid><srcstatus/><internalId>1855</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2462</srcid><srcstatus/><internalId>1064</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2469</srcid><srcstatus/><internalId>1065</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00328</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Based on the Global Supervision Status, the function WdgM_MainFunction() shall call set 
        correspondingly the trigger condition of Watchdog Interface modules.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30112</srcid><srcstatus/><internalId>1804</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2462</srcid><srcstatus/><internalId>1064</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2469</srcid><srcstatus/><internalId>1065</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00329</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the function WdgM_CheckpointReached determines that the result of the Logical Supervision 
        for the given Checkpoint is true, and the Checkpoint is the final one (
        WdgMInternallCheckpointFinalRef), then shall set the Activity Flag of the Graph corresponding 
        to the Checkpoint to true.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ActivityFlagSet</srcid><srcstatus/><internalId>1821</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ActivityFlagSet_Multicore</srcid><srcstatus/><internalId>1868</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3048</srcid><srcstatus/><internalId>1118</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3159</srcid><srcstatus/><internalId>1127</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3285</srcid><srcstatus/><internalId>1136</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00331</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the function WdgM_CheckpointReached the result correct, and the Checkpoint is defined as a 
        final one, then the function WdgM_CheckpointReached shall set the Activity Flag of the 
        corresponding Graph to false. After a Final Checkpoint, the only possible are Initial 
        Checkpoints.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ActivityFlagUnset</srcid><srcstatus/><internalId>1822</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ActivityFlagUnset_Multicore</srcid><srcstatus/><internalId>1869</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3048</srcid><srcstatus/><internalId>1118</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3159</srcid><srcstatus/><internalId>1127</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3285</srcid><srcstatus/><internalId>1136</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00332</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the function WdgM_CheckpointReached the result correct, and the Checkpoint is defined as a 
        initial one, then the function WdgM_CheckpointReached shall set the Activity Flag of the 
        corresponding Graph to true.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ActivityFlagSet</srcid><srcstatus/><internalId>1821</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ActivityFlagSet_Multicore</srcid><srcstatus/><internalId>1868</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3060</srcid><srcstatus/><internalId>1119</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3171</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3310</srcid><srcstatus/><internalId>1138</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00333</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | WdgM_LocalSupervisionWdgM_LocalSupervision 
        Comment 
        IsService | true 
        Variation 
        Possible Errors | 0 | E_OKWdgM_LocalSupervision.E_OK | Operation successful 
        1 | E_NOT_OKWdgM_LocalSupervision.E_NOT_OK | Operation failed 
        Operation | CheckpointReachedWdgM_LocalSupervision.CheckpointReached 
        Comment | Indicates to the Watchdog Manager that a Checkpoint within a Supervised Entity has 
        been reached.
        Variation 
        Possible Errors | WdgM_LocalSupervision.E_OKWdgM_LocalSupervision.E_NOT_OK 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_927</srcid><srcstatus/><internalId>1627</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration</srcid><srcstatus/><internalId>1778</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Multicore</srcid><srcstatus/><internalId>1783</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Supervisor</srcid><srcstatus/><internalId>1788</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00334</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | WdgM_ModeWdgM_Mode 
        Kind | ModeDeclarationGroup 
        Category | EXPLICIT_ORDER 
        Initial mode | WdgM_Mode.SUPERVISION_OK 
        On transition value | 255 
        Modes | SUPERVISION_OKWdgM_Mode.SUPERVISION_OK | 0 
        SUPERVISION_FAILEDWdgM_Mode.SUPERVISION_FAILED | 1 
        SUPERVISION_EXPIREDWdgM_Mode.SUPERVISION_EXPIRED | 2 
        SUPERVISION_STOPPEDWdgM_Mode.SUPERVISION_STOPPED | 3 
        SUPERVISION_DEACTIVATEDWdgM_Mode.SUPERVISION_DEACTIVATED | 4 
        Description | The category of ModeDeclarationGroup WdgM_Mode is EXPLICIT_ORDER, The attribute 
        value for the ModeDeclaration are set as following: "SUPERVISION_OK" = 0 "SUPERVISION_FAILED"
        1 "SUPERVISION_EXPIRED" = 2 "SUPERVISION_STOPPED" = 3 "SUPERVISION_DEACTIVATED" = 4 The 
        onTransitionValue is defined as 255 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_797</srcid><srcstatus/><internalId>1626</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30137</srcid><srcstatus/><internalId>1773</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes</srcid><srcstatus/><internalId>1777</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration</srcid><srcstatus/><internalId>1778</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes_Multicore</srcid><srcstatus/><internalId>1782</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Multicore</srcid><srcstatus/><internalId>1783</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes_Supervisor</srcid><srcstatus/><internalId>1787</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Supervisor</srcid><srcstatus/><internalId>1788</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30137_multicore</srcid><srcstatus/><internalId>1796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00335</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | WdgM_LocalModeWdgM_LocalMode 
        Comment 
        IsService | true 
        Variation 
        ModeGroup | currentMode | WdgM_Mode 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30137</srcid><srcstatus/><internalId>1773</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30137_multicore</srcid><srcstatus/><internalId>1796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00336</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | WdgM_GlobalModeWdgM_GlobalMode 
        Comment 
        IsService | true 
        Variation 
        ModeGroup | currentMode | WdgM_Mode 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30137</srcid><srcstatus/><internalId>1773</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30137_multicore</srcid><srcstatus/><internalId>1796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00344</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If development error detection for the Watchdog Manager module is enabled, then the function 
        WdgM_GetGlobalStatus shall check whether the parameter Status is a NULL pointer (NULL_PTR). If 
        Status is a NULL pointer, then the function shall raise the development error 
        WDGM_E_INV_POINTER (i.e. invalid pointer) and return.
      </description>
      <comment>
        WDGM258 states that this check shall only be performed for OUT parameters, but since
        WdgM_GetGlobalStatus has only one parameter which is an OUT parameter, this requirement
        duplicates WDGM258.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.SWS_WdgM_00258</srcid><srcstatus/><internalId>248</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00345</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        These requirements are not applicable to this specification.
      </description>
      <comment>
        This requirement is informational only. Design item not relevant for the module
        implementation.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00361</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMOSCounter
        Parameter Type: Reference
        Parent Containers: WdgMSupervisedEntity,
        Description: OS counter used by Watchdog Manager to perform the deadline supervision of the 
        Supervised Entity.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/Os/OsCounter
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00346</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | WdgM_GetFirstExpiredSEID 
        Syntax 
        Std_ReturnType WdgM_GetFirstExpiredSEID (WdgM_SupervisedEntityIdType* SEID)
        Service ID [hex] | 0x10 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | SEID | Identifier of the supervised entity that first reached the state 
        WDGM_LOCAL_STATUS_EXPIRED.
        Return value | Std_ReturnType | E_OK: SEID successfully returnedE_NOT_OK: Error when returning 
        the SEID 
        Description | Returns SEID that first reached the state WDGM_LOCAL_STATUS_EXPIRED.
        Available via | WdgM.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_LogicalSupervision</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_DeadlineSupervision</srcid><srcstatus/><internalId>1711</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2299</srcid><srcstatus/><internalId>1047</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00347</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If development error detection for the Watchdog Manager module is enabled, then the function 
        WdgM_GetFirstExpiredSEID() shall check whether the parameter SEID is a NULL pointer (NULL_PTR)
        If Status is a NULL pointer, then the function shall raise the development error 
        WDGM_E_INV_POINTER (i.e. invalid pointer) and return.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30052</srcid><srcstatus/><internalId>1766</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2326</srcid><srcstatus/><internalId>1051</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00348</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_GetFirstExpiredSEID() shall be available before WdgM_Init.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30142</srcid><srcstatus/><internalId>1717</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30142_Multicore</srcid><srcstatus/><internalId>1841</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2313</srcid><srcstatus/><internalId>1049</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00349</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_GetFirstExpiredSEID() shall read the SEID from non-initialized RAM location, 
        stored as a double-inverse value. In case the value and the inverse value do not correspond to 
        each other, then the function shall return E_NOT_OK and shall write 0 to *SEID. In case the 
        value and the inverse value correspond, the function shall return E_OK and set write the read 
        value to *SEID.
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30143</srcid><srcstatus/><internalId>1734</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30144_GetFirstExpiredSEID</srcid><srcstatus/><internalId>1735</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30143_Multicore</srcid><srcstatus/><internalId>1858</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30144_GetFirstExpiredSEID_Multicore</srcid><srcstatus/><internalId>1859</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2338</srcid><srcstatus/><internalId>1052</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.SWS_WdgM_00349.1</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00351</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        For the first Supervised Entity that switched to the state WDGM_LOCAL_STATUS_EXPIRED since the 
        last time WdgM_Init() was called, the function WdgM_MainFunction() shall store the SEID of that 
        Supervised Entity in a non-initialized RAM, as a double-inverted value (i.e. SEID and ~SEID)
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30143</srcid><srcstatus/><internalId>1734</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30143_Multicore</srcid><srcstatus/><internalId>1858</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2611</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4506</srcid><srcstatus/><internalId>1207</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4511</srcid><srcstatus/><internalId>1208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00354</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the Deadline End Checkpoint is reached and this Checkpoint is referenced in the active 
        Mode, and timestamp of the corresponding Deadline Start Checkpoint is =0, then the function 
        WdgM_CheckpointReached shall exit with success (without measuring the time difference)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00355</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | WdgM_ConfigType 
        Kind | Structure 
        Elements | implementation specific 
        Type 
        Comment | The contents of this structure depends on the configuration variant.
        Description | This structure contains all post-build configurable parameters of the Watchdog 
        Manager. A pointer to this structure is passed to the Watchdog Manager initialization function 
        for configuration.
        Available via | WdgM.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1418</srcid><srcstatus/><internalId>953</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00356</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | WdgM_SupervisedEntityIdType 
        Kind | Type 
        Derived from | uint16 
        Range | 0-&lt;Number of Supervised Entities&gt; | -- | The range of valid IDs depends on the number 
        of configured Supervised Entities.
        Description | This type identifies an individual Supervised Entity for the Watchdog Manager.
        Variation 
        Available via | Rte_WdgM_Type.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_719</srcid><srcstatus/><internalId>1621</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes</srcid><srcstatus/><internalId>1777</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes_Multicore</srcid><srcstatus/><internalId>1782</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes_Supervisor</srcid><srcstatus/><internalId>1787</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00357</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | WdgM_CheckpointIdType 
        Kind | Type 
        Derived from | uint16 
        Range | 0-&lt;Maximum number of Checkpoints&gt; | -- | The range of valid IDs depends on the maximum 
        number of configured Checkpoints within all configured Supervised Entities.
        Description | This type identifies a Checkpoint in the context of a Supervised Entity for the 
        Watchdog Manager. Note that an individual Checkpoint can only be identified by the pair of 
        Supervised Entity ID and Checkpoint ID.
        Variation 
        Available via | Rte_WdgM_Type.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_720</srcid><srcstatus/><internalId>1622</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes</srcid><srcstatus/><internalId>1777</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes_Multicore</srcid><srcstatus/><internalId>1782</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes_Supervisor</srcid><srcstatus/><internalId>1787</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00358</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | WdgM_ModeType 
        Kind | Type 
        Derived from | uint8 
        Range | 0-&lt;Number of Modes&gt; | -- | The actual upper limit depends on the number of configured 
        modes for Watchdog Manager.
        Description | This type distinguishes the different modes that were configured for the Watchdog 
        Manager.
        Variation 
        Available via | Rte_WdgM_Type.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_723</srcid><srcstatus/><internalId>1625</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes</srcid><srcstatus/><internalId>1777</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes_Multicore</srcid><srcstatus/><internalId>1782</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes_Supervisor</srcid><srcstatus/><internalId>1787</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00359</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | WdgM_LocalStatusType 
        Kind | Type 
        Derived from | uint8 
        Range | WDGM_LOCAL_STATUS_OK | 0 | The supervision of this Supervised Entity has not shown any 
        failures.
        WDGM_LOCAL_STATUS_FAILED | 1 | The supervision of this Supervised Entity has failed but can 
        still be "healed". I.e., if the Supervised Entity returns to a normal behavior, its supervision 
        state will also return to WDGM_LOCAL_STATUS_OK. Furthermore, the number of times that the 
        supervision has failed has not yet exceeded a configurable limit. When this limit has been 
        exceeded the state will change to WDGM_LOCAL_STATUS_EXPIRED.
        WDGM_LOCAL_STATUS_EXPIRED | 2 | The supervision of this Supervised Entity has failed 
        permanently. This state cannot be left.
        WDGM_LOCAL_STATUS_DEACTIVATED | 4 | The supervision of this Supervised Entity is temporarily 
        disabled.
        Description | This type shall be used for variables that represent the current status of 
        supervision for individual Supervised Entities.
        Variation 
        Available via | Rte_WdgM_Type.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_721</srcid><srcstatus/><internalId>1623</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes</srcid><srcstatus/><internalId>1777</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes_Multicore</srcid><srcstatus/><internalId>1782</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes_Supervisor</srcid><srcstatus/><internalId>1787</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00360</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | WdgM_GlobalStatusType 
        Kind | Type 
        Derived from | uint8 
        Range | WDGM_GLOBAL_STATUS_OK | 0 | Supervision did not show any failures.
        WDGM_GLOBAL_STATUS_FAILED | 1 | Supervision has failed but is still within the limit of allowed 
        failures.
        WDGM_GLOBAL_STATUS_EXPIRED | 2 | Supervision has failed, the allowed limit of failures has been 
        exceeded, but the Watchdog Driver has not yet been instructed to stop triggering.
        WDGM_GLOBAL_STATUS_STOPPED | 3 | Supervision has failed, the allowed limit of failures has been 
        exceeded, and the Watchdog Driver has been instructed to stop triggering. A watchdog reset is 
        about to happen.
        WDGM_GLOBAL_STATUS_DEACTIVATED | 4 | WdgM is not initialized and therefore will not manage the 
        watchdogs.
        Description | This type shall be used for variables that represent the global supervision 
        status of the Watchdog Manager module.
        Variation 
        Available via | Rte_WdgM_Type.h 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_722</srcid><srcstatus/><internalId>1624</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes</srcid><srcstatus/><internalId>1777</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes_Multicore</srcid><srcstatus/><internalId>1782</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_RTEServiceTypes_Supervisor</srcid><srcstatus/><internalId>1787</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00366</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Watchdog Manager module shall derive the required number of independent data resources to 
        perform the Logical Supervision within the Watchdog Manager module from the number of 
        Supervised Entities, number of WdgMModes and their WdgMExternalLogicalSupervisions and 
        WdgMInternalTransitions.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_337</srcid><srcstatus/><internalId>813</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_435</srcid><srcstatus/><internalId>814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00370</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_Init shall clear from the non-initialized RAM the double-inverse value 
        storing the SEID that first reached the EXIRED state. See [REF] for more information.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00373</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        To determine the timestamp and to compute the timestamp differences, the function 
        WdgM_CheckpointReached shall use OS function GetElapsedValue, using as 1st parameter the 
        CounterID that is configured for the Supervised Entity. To determine the timestamp and to 
        compute the timestamp differences, the function WdgM_CheckpointReached (for detection of both 
        early arrivals and delays) and the function WdgM_MainFunction (for detection of timeouts) shall 
        use OS function GetElapsedValue, using as 1st parameter the CounterID that is configured for 
        the Supervised Entity (see WdgMOSCounter, ECUC_WdgM_00361)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00374</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        For scaling of timestamp difference to the limit values (WdgMDeadlineMin and WdgMDeadlineMax) (
        see SWS_WdgM_00294), the function WdgM_CheckpointReached (for detection of early arrivals and 
        delays) and the function WdgM_MainFunction (for detection of timeouts) shall use 
        OsSecondsPerTick configuration parameter.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00375</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        See "SWS_WatchdogManager__Table_10"
        Error Name: | WDGM_E_SUPERVISION 
        Short Description: | Supervision has failed and a watchdog reset will occur 
        Long Description: | Supervision has failed (Global Supervision Status has reached 
        WDGM_GLOBAL_STATUS_STOPPED) and a watchdog reset will occur.
        Detection Criteria: | Fail | WDGM_GLOBAL_STATUS_STOPPED has been reached, the reset will occur.
        Pass | After a start up.
        Secondary Parameters:
        Time Required: | depending on configuration of WdgM 
        Monitor Frequency | periodic supervision within WdgM 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6500</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The parameter WdgMImmediateReset [ECUC_WdgM_00339] may only be set to TRUE if the 
        McuPerformResetApi (defined in SWS_Mcu_Driver) is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6501</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The WdgM only supports the partition restart of EcuC Partitions (WdgMEcucPartitionRef) which 
        are linked to non-trusted OS-Applications.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1374</srcid><srcstatus/><internalId>1600</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GEN_WdgMOsApplicationRef_TrustedOSApplication</srcid><srcstatus/><internalId>1939</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6502</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        A unique Supervised Entity identifier for each Supervised Entity is provided in configuration 
        parameter WdgMSupervisedEntityID (see [ECUC_WdgM_00304]). The Identifier shall be unique in the 
        scope of the Watchdog Manager module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1326</srcid><srcstatus/><internalId>1598</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6503</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Each BSW module shall use its module ID as the Supervised Entity ID.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6504</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        No SW-Cs shall have as Supervised Entity ID a value of any BSW Module ID, regardless which BSW 
        Modules are deployed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6505</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Deadline Supervision (WdgMDeadlineSupervision) of a Supervised Entity shall refer to 
        Checkpoints (WdgMDeadlineStartRef, WdgMDeadlineEndRef) that both belong to that Supervised 
        Entity. In other words, any of the referred Checkpoints shall not belong to other Supervised 
        Entities.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_644</srcid><srcstatus/><internalId>1576</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_02_NegativeTestsPart2</srcid><srcstatus/><internalId>1934</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6506</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Internal Transitions (see WdgMInternalTransition) in a Supervised Entity shall not connect 
        Checkpoints that do not both belong to the same Supervised Entity.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1581</srcid><srcstatus/><internalId>1607</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1623</srcid><srcstatus/><internalId>1611</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6507</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        A Checkpoint shall not belong to more than one Internal Graph.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6508</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        A Checkpoint shall not belong to an External Graph and to an Internal Graph; this applies 
        across all modes.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_821</srcid><srcstatus/><internalId>1583</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_875</srcid><srcstatus/><internalId>1588</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6509</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        In a given mode, a Checkpoint shall not belong to more than one External Graph.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_820</srcid><srcstatus/><internalId>1582</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_874</srcid><srcstatus/><internalId>1587</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00362</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WDGM_E_SUPERVISION
        Parameter Type: Reference
        Parent Containers: WdgMDemEventParameterRefs,
        Description: Reference to the DemEventParameter which shall be issued when the error "
        Supervision has failed (Global Supervision Status has reached WDGM_GLOBAL_STATUS_STOPPED) and a 
        watchdog reset will occur" has occurred.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: true
        Post-Build-Variant-Value: true
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6510</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The following shall be available for the operation Supervision Functions of Watchdog Manager:
        availability of initialized Wdg Interface,
        availability of initialized OS,
        initialized WdgM - by invocation of WdgM_Init() function, and
        periodic invocation of WdgM_MainFunction() function.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6511</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        It shall be ensured by the callers of WdgM module, that the functions WdgM_DeInit, WdgM_Init 
        and WdgM_SetMode are not invoked concurrently to WdgM_MainFunction.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6512</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Any ordered set of two Checkpoints shall not have more than one Deadline Supervision (
        WdgMDeadlineSupervision) defined.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00387</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Global Supervision Status shall be statically initialized with WDGM_GLOBAL_STATUS_DEACTIVATED (
        see Transition (18) in Figure 4)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_874</srcid><srcstatus/><internalId>820</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00388</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is disabled: The function 
        WdgM_DeInit shall return without any effect if the Watchdog Manager is in 
        WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1474</srcid><srcstatus/><internalId>965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00389</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled: The function 
        WdgM_Init shall report the error to default error tracer with error code WDGM_E_UNINIT, without 
        any further effect, if the Watchdog Manager is in WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00390</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is disabled: The function 
        WdgM_Init shall return without any effect if the Watchdog Manager is not in 
        WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00392</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is disabled: The function 
        WdgM_SetMode shall return without any effect if the Watchdog Manager is in 
        WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00393</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is enabled: The function 
        WdgM_CheckpointReached shall report the error to default error tracer with error code 
        WDGM_E_UNINIT, without any further effect, if the Watchdog Manager is in 
        WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00394</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is disabled: The function 
        WdgM_CheckpointReached shall return without any effect if the Watchdog Manager is in 
        WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00395</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is disabled: The function 
        WdgM_GetMode shall return without any effect if the Watchdog Manager is in 
        WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00396</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is disabled: The function 
        WdgM_CheckpointReached shall return without any effect if the Watchdog Manager is in 
        WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00397</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is disabled: The function 
        WdgM_GetLocalStatus shall return without any effect if the Watchdog Manager is in 
        WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00401</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the configuration parameter WdgMDevErrorDetect [ECUC_WdgM_00301] is disabled: The function 
        WdgM_PerformReset shall return without any effect if the Watchdog Manager is in 
        WDGM_GLOBAL_STATUS_DEACTIVATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_91001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | WdgM_GlobalSupervisionWdgM_GlobalSupervision 
        Comment 
        IsService | true 
        Variation 
        Possible Errors | 0 | E_OKWdgM_GlobalSupervision.E_OK | Operation successful 
        1 | E_NOT_OKWdgM_GlobalSupervision.E_NOT_OK | Operation failed 
        Operation | GetFirstExpiredSEIDWdgM_GlobalSupervision.GetFirstExpiredSEID 
        Comment | Returns SEID that first reached the state WDGM_LOCAL_STATUS_EXPIRED.
        Variation 
        Parameters | SEIDWdgM_GlobalSupervision.GetFirstExpiredSEID.SEID 
        Type | WdgM_SupervisedEntityIdType 
        Direction | OUT 
        Comment | Identifier of the supervised entity that first reached the state 
        WDGM_LOCAL_STATUS_EXPIRED.
        Variation 
        Possible Errors | WdgM_GlobalSupervision.E_OKWdgM_GlobalSupervision.E_NOT_OK 
        Operation | GetGlobalStatusWdgM_GlobalSupervision.GetGlobalStatus 
        Comment | Returns the global supervision status of the Watchdog Manager.
        Variation 
        Parameters | StatusWdgM_GlobalSupervision.GetGlobalStatus.Status 
        Type | WdgM_GlobalStatusType 
        Direction | OUT 
        Comment | Global supervision status of the Watchdog Manager.
        Variation 
        Possible Errors | WdgM_GlobalSupervision.E_OKWdgM_GlobalSupervision.E_NOT_OK 
        Operation | GetModeWdgM_GlobalSupervision.GetMode 
        Comment | Returns the current mode of the Watchdog Manager.
        Variation 
        Parameters | ModeWdgM_GlobalSupervision.GetMode.Mode 
        Type | WdgM_ModeType 
        Direction | OUT 
        Comment | Current mode of the Watchdog Manager.
        Variation 
        Possible Errors | WdgM_GlobalSupervision.E_OKWdgM_GlobalSupervision.E_NOT_OK 
        Operation | PerformResetWdgM_GlobalSupervision.PerformReset 
        Comment | Instructs the Watchdog Manager to cause a watchdog reset.
        Variation 
        Possible Errors 
        Operation | SetModeWdgM_GlobalSupervision.SetMode 
        Comment | Sets the current mode of Watchdog Manager.
        Variation 
        Parameters | ModeWdgM_GlobalSupervision.SetMode.Mode 
        Type | WdgM_ModeType 
        Direction | IN 
        Comment | One of the configured Watchdog Manager modes.
        Variation 
        Possible Errors | WdgM_GlobalSupervision.E_OKWdgM_GlobalSupervision.E_NOT_OK 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_990</srcid><srcstatus/><internalId>1629</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration</srcid><srcstatus/><internalId>1778</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_SupervisionStatusService</srcid><srcstatus/><internalId>1780</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_GlobalSupervisionService</srcid><srcstatus/><internalId>1781</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Multicore</srcid><srcstatus/><internalId>1783</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_SupervisionStatusService_Multicore</srcid><srcstatus/><internalId>1785</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_GlobalSupervisionService_Multicore</srcid><srcstatus/><internalId>1786</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Supervisor</srcid><srcstatus/><internalId>1788</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_SupervisionStatusService_Supervisor</srcid><srcstatus/><internalId>1790</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_GlobalSupervisionService_Supervisor</srcid><srcstatus/><internalId>1791</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_91002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | globalSupervisionWdgM.port_WdgM_globalSupervision 
        Kind | ProvidedPort | Interface | WdgM_GlobalSupervision 
        Description | This port provides the Global Supervision interface of the WdgM.
        Variation 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_141</srcid><srcstatus/><internalId>1631</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration</srcid><srcstatus/><internalId>1778</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Multicore</srcid><srcstatus/><internalId>1783</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Supervisor</srcid><srcstatus/><internalId>1788</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_91003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | localSupervisonStatus_{SupervisedEntityName}WdgM.port_WdgM_localSupervisionStatus 
        Kind | ProvidedPort | Interface | WdgM_LocalSupervisionStatus 
        Description | This port provides the Supervision status interface of one Supervised Entity to a 
        SWC.
        Port Defined Argument Value(s) | Type | WdgM_SupervisedEntityIdType 
        Value | {ecuc(WdgM/WdgMGeneral/WdgMSupervisedEntity/WdgMSupervisedEntityId.value)
        Variation | SupervisedEntityName = {ecuc(WdgM/WdgMGeneral/WdgMSupervisedEntity.SHORT-NAME)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_160</srcid><srcstatus/><internalId>1634</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration</srcid><srcstatus/><internalId>1778</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Multicore</srcid><srcstatus/><internalId>1783</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Supervisor</srcid><srcstatus/><internalId>1788</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_91004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | WdgM_LocalSupervisionStatusWdgM_LocalSupervisionStatus 
        Comment 
        IsService | true 
        Variation 
        Possible Errors | 0 | E_OKWdgM_LocalSupervisionStatus.E_OK | Operation successful 
        1 | E_NOT_OKWdgM_LocalSupervisionStatus.E_NOT_OK | Operation failed 
        Operation | GetLocalStatusWdgM_LocalSupervisionStatus.GetLocalStatus 
        Comment | Returns the supervision status of an individual Supervised Entity.
        Variation 
        Parameters | StatusWdgM_LocalSupervisionStatus.GetLocalStatus.Status 
        Type | WdgM_LocalStatusType 
        Direction | OUT 
        Comment | Supervision status of the given supervised entity.
        Variation 
        Possible Errors | WdgM_LocalSupervisionStatus.E_OKWdgM_LocalSupervisionStatus.E_NOT_OK 
      </description>
      <comment>AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_955</srcid><srcstatus/><internalId>1628</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration</srcid><srcstatus/><internalId>1778</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_SupervisionStatusService</srcid><srcstatus/><internalId>1780</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Multicore</srcid><srcstatus/><internalId>1783</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_SupervisionStatusService_Multicore</srcid><srcstatus/><internalId>1785</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Supervisor</srcid><srcstatus/><internalId>1788</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_SupervisionStatusService_Supervisor</srcid><srcstatus/><internalId>1790</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00402</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Type of error | Related error code | Error value 
        Disabling of watchdog not allowed (e.g. in safety-related systems) | 
        WDGM_E_DISABLE_NOT_ALLOWEDWdgM.WDGM_E_DISABLE_NOT_ALLOWED | 0x15 
        API service used with a checkpoint of a Supervised Entity that is deactivated in the current 
        Watchdog Manager mode. | WDGM_E_SEDEACTIVATEDWdgM.WDGM_E_SEDEACTIVATED | 0x19 
        Watchdog drivers' mode switch has failed | WDGM_E_SET_MODEWdgM.WDGM_E_SET_MODE | 0x1D 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        See"WdgM_x_Module"
        Module Name | WdgMWdgM 
        Module Description | Configuration of the WdgM (Watchdog Manager) module.
        Post-Build Variant Support | true 
        Supported Config Variants | VARIANT-POST-BUILD, VARIANT-PRE-COMPILE 
        Included containers: "WdgM_x_Included_Containers"
        Included Containers 
        Container Name | Multiplicity | Scope / Dependency 
        WdgMConfigSet | 1 | This container describes one of multiple configuration sets of WdgM.
        WdgMGeneral | 1 | Container defines all general configuration parameters of the Watchdog 
        Manager.
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        (Checked by VSMD checker)
      AUTOSAR R20-11 comment: Requirement was changed without functional impact.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>
    <specobject>
      <id>WdgM.ECUC_WdgM_00363</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: WdgMEnableTimeoutDetection
        Parameter Type: Boolean
        Parent Containers: WdgMGeneral,
        Description: This parameter enables the timeout detection part of the Deadline Supervision (
        needed to detect deadline supervision violation when end checkpoint is never reached)
        Introduction: true : Timeout detection is enabled. false : Timeout detection is disabled. Note:
        By default this option is disabled for backward compatibility reasons.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00403</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If Deadline Timeout detection is enabled [i.e. WdgMEnableTimeoutDetection (ECUC_WdgM_00363) is 
        set to 'true'] then, for all Deadline Supervisions configured in the active mode, if timestamp 
        of the corresponding Deadline Start Checkpoint is &lt;&gt;0 (i.e. if the Start Checkpoint is reported 
        but corresponding End Checkpoint is not yet reported), then the function WdgM_MainFunction 
        shall measure the time difference between current timestamp and the corresponding Deadline 
        Start Checkpoint timestamp. If the measured time difference exceeds (is greater than) maximum 
        limit (WdgMDeadlineMax), then the function WdgM_MainFunction shall define the result of 
        Deadline Supervision for the Supervised Entity as incorrect.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00404</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The function WdgM_MainFunction() shall perform the Deadline Supervision (detection of timeouts)
        for the all Supervised Entities with active Deadline Supervisions (e.g. reached a Deadline 
        Start Checkpoints and before reaching the corresponding Deadline End Checkpoint). The output 
        shall be an updated result of Deadline Supervision for the Supervised Entity.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4125</srcid><srcstatus/><internalId>1184</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5464</srcid><srcstatus/><internalId>1277</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_02</srcid><srcstatus/><internalId>2043</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00406</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The WdgM module shall start both the Supervision Functions (for all Supervision Algorithms, 
        including Supervision Reference Cycles) and the Watchdog Handling during the first invocation 
        of the WdgM_MainFunction after the initialization of the module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00407</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The WdgM module shall stop the Supervision Functions (for all Supervision Algorithms) and 
        Watchdog Handling in the WdgM_DeInit.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1475</srcid><srcstatus/><internalId>966</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00408</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Within the first call of WdgM_MainFunction after WdgM_Init, but after [SWS_WdgM_00129] is 
        executed and if the configuration parameter WdgMDemStoppedSupervisionReport is set to TRUE, the 
        Watchdog Manager module shall report an error status PASSED for WDGM_E_SUPERVISION to the DEM.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_0275</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The OS task which is executing the main function WdgM_MainFunction shall be separated from the 
        OS task(s) calling any function from a Supervised Entity under supervision.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_0320</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        No two WdgMAliveSupervisions aggregated by the same WdgMMode shall refer to the identical 
        WdgMCheckpoint.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6513</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        For each Supervised Entity, an OS counter shall be configured (see WdgMOSCounter, 
        ECUC_WdgM_00361) if at least one Deadline Supervision is configured for the Supervised Entity 
        in any of the WdgM Modes.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6514</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The OS counters for each Supervised Entity shall be configured to be accessible from the 
        OsApplication which contains the Supervised Entity.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_CONSTR_6515</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The OS counters for each Supervised Entity shall be configured to be also accessible from the 
        OsApplication which calls WdgM_MainFunction, if WdgMEnableTimeoutDetection is set to true.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UnsupportedFunctionalities</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>WdgM.SWS_WdgM_00085.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define a global variable (runtime data)
        holding the alive counter for each individual Checkpoint. </description>
      <comment> Refined with WDGM.EB.DesignDecision.InternalVariable3. </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable3</srcid><srcstatus/><internalId>1666</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable25</srcid><srcstatus/><internalId>1688</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00085.3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define a global variable (runtime data)
        holding the failed supervision reference cycle counter for each Supervised Entity which is
        supervised in some WdgMMode for alive supervision. </description>
      <comment> This is a pure design item which is not testable. Therefore, must be traced to
        source code. see
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Engineering_AutoCore/Requirements_and_Design#Standard_cases_in_requirements_engineering </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1303</srcid><srcstatus/><internalId>846</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable10</srcid><srcstatus/><internalId>1673</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00085.4</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define a global global variable (runtime data)
        holding the expired supervision cycle counter. </description>
      <comment> Refined with WDGM.EB.DesignDecision.InternalVariable20. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable20</srcid><srcstatus/><internalId>1683</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00085.5</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define a global variable (runtime data)
        holding the Local Supervision Status for each Supervised Entity. </description>
      <comment> Refined with WDGM.EB.DesignDecision.InternalVariable1. </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable1</srcid><srcstatus/><internalId>1664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00098.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define a global variable (runtime data)
        holding the internal counter for supervision cycles. </description>
      <comment> Refined with WDGM.EB.DesignDecision.InternalVariable30 and WDGM.EB.DesignDecision.InternalVariable31. </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable30</srcid><srcstatus/><internalId>1693</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable31</srcid><srcstatus/><internalId>1694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00133.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> If the configuration parameter WdgMImmediateReset [WdgM.ECUC_WdgM_00339] is set to TRUE
        and the Global Supervision Status has reached the state WDGM_GLOBAL_STATUS_STOPPED, the
        Watchdog Manager module shall call the MCU service Mcu_PerformReset on the MCU Driver
        module. </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30124</srcid><srcstatus/><internalId>1727</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30135</srcid><srcstatus/><internalId>1730</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30136</srcid><srcstatus/><internalId>1731</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30114</srcid><srcstatus/><internalId>1808</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30124_Multicore</srcid><srcstatus/><internalId>1851</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30135_Multicore</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30136_Multicore</srcid><srcstatus/><internalId>1855</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03</srcid><srcstatus/><internalId>1943</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03_MC</srcid><srcstatus/><internalId>2090</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2278</srcid><srcstatus/><internalId>1044</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4597</srcid><srcstatus/><internalId>1216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00133.2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager configuration tool should not allow to configure the
        parameter WdgMImmediateReset [WdgM.ECUC_WdgM_00339] to TRUE if the McuPerformResetApi (defined in
        SWS_MCU_Driver) is not set to TRUE. </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00142.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager shall report to the Diagnostic Event Manager an error with
        the value WDGM_E_SET_MODE in case at least one call to WdgIf_SetMode() failed. </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30046</srcid><srcstatus/><internalId>1756</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2964</srcid><srcstatus/><internalId>1111</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00293.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define an internal variable (runtime data)
        holding the start time stamp for each start checkpoint of a configured deadline supervision. </description>
      <comment> Refined with WDGM.EB.DesignDecision.InternalVariable4 and WDGM.EB.DesignDecision.InternalVariable26. </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable4</srcid><srcstatus/><internalId>1667</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable24</srcid><srcstatus/><internalId>1687</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00293.2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define an internal variable (runtime data)
        holding the activity flag for each Deadline Start Checkpoint of a configured deadline
        supervision. </description>
      <comment> Refined with WDGM.EB.DesignDecision.InternalVariable9. </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable9</srcid><srcstatus/><internalId>1672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00293.3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define an internal variable (runtime data)
        holding the deadline supervision result for each individual Checkpoint. </description>
      <comment> Refined with WDGM.EB.DesignDecision.InternalVariable5. </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable5</srcid><srcstatus/><internalId>1668</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00293.4</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define an internal variable (runtime data)
        holding the maximum allowed main function cycles until deadline violation. </description>
      <comment> Refined with WDGM.EB.DesignDecision.InternalVariable11. </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable11</srcid><srcstatus/><internalId>1674</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00293_1.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define an internal variable (runtime data)
        holding the graph dependent last reached Checkpoint for each configured Logical Supervision
        Graph. </description>
      <comment> Refined with WDGM.EB.DesignDecision.InternalVariable6. </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable6</srcid><srcstatus/><internalId>1669</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable12</srcid><srcstatus/><internalId>1675</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00293_1.2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define an internal variable (runtime data)
        holding the activity flag for each configured Logical Supervision Graph. </description>
      <comment> Refined with WDGM.EB.DesignDecision.InternalVariable7. </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable7</srcid><srcstatus/><internalId>1670</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable13</srcid><srcstatus/><internalId>1676</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00293_1.3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define an internal variable (runtime data)
        holding the Logical Supervision Result for each individual Checkpoint. </description>
      <comment> Refined with WDGM.EB.DesignDecision.InternalVariable8. </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable8</srcid><srcstatus/><internalId>1671</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable16</srcid><srcstatus/><internalId>1679</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>
    <specobject>
      <id>WdgM.SWS_WdgM_00349.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define a global variable (runtime data)
        holding the first expired Supervised Entity. </description>
      <comment> Refined with WDGM.EB.DesignDecision.InternalVariable19. </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable19</srcid><srcstatus/><internalId>1682</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable26</srcid><srcstatus/><internalId>1689</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00349</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00004.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall be able to detect the following errors and
        exceptions depending on its configuration (development / production mode): API service used
        in wrong context (without module initialization): WDGM_E_NO_INIT 0x10 </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_112</srcid><srcstatus/><internalId>882</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1463</srcid><srcstatus/><internalId>962</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1605</srcid><srcstatus/><internalId>983</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1713</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1802</srcid><srcstatus/><internalId>1003</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2012</srcid><srcstatus/><internalId>1017</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2123</srcid><srcstatus/><internalId>1026</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2199</srcid><srcstatus/><internalId>1034</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2249</srcid><srcstatus/><internalId>1040</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6396</srcid><srcstatus/><internalId>1334</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00004.2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall be able to detect the following errors and
        exceptions depending on its configuration (development / production mode): API service
        Wdg_Init was called with an erroneous configuration set: WDGM_E_PARAM_CONFIG 0x11 </description>
      <comment> This error code will never be reported because of deviation: [ASCWDGM-224] Post
        build time configuration </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.PostBuildTimeConfiguration</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00004.3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall be able to detect the following errors and
        exceptions depending on its configuration (development / production mode): API service
        called with wrong mode parameter: WDGM_E_PARAM_MODE 0x12 </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_127</srcid><srcstatus/><internalId>884</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1581</srcid><srcstatus/><internalId>981</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00004.4</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall be able to detect the following errors and
        exceptions depending on its configuration (development / production mode): API service
        called with wrong 'supervised entity identifier' parameter: WDGM_E_PARAM_SEID 0x13 </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30107</srcid><srcstatus/><internalId>1763</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_134</srcid><srcstatus/><internalId>885</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1792</srcid><srcstatus/><internalId>1002</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2030</srcid><srcstatus/><internalId>1019</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2138</srcid><srcstatus/><internalId>1028</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00004.5</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall be able to detect the following errors and
        exceptions depending on its configuration (development / production mode): API service
        called with a null pointer parameter: WDGM_E_INV_POINTER 0x14 </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_NullPtrAPI</srcid><srcstatus/><internalId>1767</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_NullPtrGetAllExpired</srcid><srcstatus/><internalId>1768</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_142</srcid><srcstatus/><internalId>886</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1497</srcid><srcstatus/><internalId>970</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1720</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2129</srcid><srcstatus/><internalId>1027</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2206</srcid><srcstatus/><internalId>1035</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2326</srcid><srcstatus/><internalId>1051</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00004.6</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall be able to detect the following errors and
        exceptions depending on its configuration (development / production mode): Disabling of
        watchdog not allowed (e.g. in safety-related systems): WDGM_E_DISABLE_NOT_ALLOWED 0x15 </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_149</srcid><srcstatus/><internalId>887</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00004.7</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall be able to detect the following errors and
        exceptions depending on its configuration (development / production mode): API service used
        with an invalid CheckpointId: WDGM_E_CPID 0x16 </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_156</srcid><srcstatus/><internalId>888</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1822</srcid><srcstatus/><internalId>1004</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00004.8</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall be able to detect the following errors and
        exceptions depending on its configuration (development / production mode): Deprecated API
        service was used: DGM_E_DEPRECATED 0x17 </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckUpdateAliveCounterReturnError</srcid><srcstatus/><internalId>2059</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_163</srcid><srcstatus/><internalId>889</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2023</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00004.9</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall be able to detect the following errors and
        exceptions depending on its configuration (development / production mode): Function
        WdgM_UpdateAliveIndication cannot determine the Checkpoint, because there are more than one
        alive supervisions configured in the current mode for the given Supervised Entity:
        WDGM_E_AMBIGIOUS 0x18 </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_0702_DetErrorAmbigous</srcid><srcstatus/><internalId>1828</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_170</srcid><srcstatus/><internalId>890</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2071</srcid><srcstatus/><internalId>1022</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00004.10</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall be able to detect the following errors and
        exceptions depending on its configuration (development / production mode): API service used
        with a checkpoint of a Supervised Entity that is deactivated in the current Watchdog Manager
        mode: WDGM_E_SEDEACTIVATED 0x19 </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_179</srcid><srcstatus/><internalId>891</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1855</srcid><srcstatus/><internalId>1006</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00004.11</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall be able to detect the following errors and
        exceptions depending on its configuration (development / production mode): Supervision has
        failed and a watchdog reset will occur: WDGM_E_MONITORING </description>
      <comment> WDGM_E_SUPERVISION was replaced by WDGM_E_MONITORING due to Rfc#61167. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30124</srcid><srcstatus/><internalId>1727</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30124_Multicore</srcid><srcstatus/><internalId>1851</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4589</srcid><srcstatus/><internalId>1215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00004.12</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall be able to detect the following errors and
        exceptions depending on its configuration (development / production mode): Watchdog drivers'
        mode switch has failed: WDGM_E_SET_MODE </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30046</srcid><srcstatus/><internalId>1756</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2964</srcid><srcstatus/><internalId>1111</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00004.13</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall be able to detect the following errors and
        exceptions depending on its configuration (development / production mode): Defensive
        behavior checks have detected an improper caller: WDGM_E_IMPROPER_CALLER </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30045</srcid><srcstatus/><internalId>1755</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6269</srcid><srcstatus/><internalId>1328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00011.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall use the following imported type of module Dem:
        Dem: Dem_EventIdType, Dem_EventStatusType, </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ImportedTypes_DEM</srcid><srcstatus/><internalId>1769</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ImportedTypes_DEM_multicore</srcid><srcstatus/><internalId>1792</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>

    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00011.2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall use the following imported type of module Os:
        Os: ApplicationType </description>
      <comment> The WdgM only use the type ApplicationType of the use for the API
        BswM_WdgM_RequestPartitionReset(). </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ImportedTypes_Os</srcid><srcstatus/><internalId>1770</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ImportedTypes_Os_multicore</srcid><srcstatus/><internalId>1793</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00011.3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall use the following imported types of module
        Std_Types: Std_Types: Std_ReturnType, Std_VersionInfoType </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ImportedTypes_StdTypes</srcid><srcstatus/><internalId>1771</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ImportedTypes_StdTypes_multicore</srcid><srcstatus/><internalId>1794</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00011.4</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager module shall use the following imported type of module
        WdgIf: WdgIf: WdgIf_ModeType </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ImportedTypes_WdgIf</srcid><srcstatus/><internalId>1772</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ImportedTypes_WdgIf_multicore</srcid><srcstatus/><internalId>1795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00038.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following Data Types shall be used for the functions defined in this
        specification: Name: WdgM_ConfigType Type: uint8 Range: -- implementation specific
        Description: This dummy type is used for the post-build configurable, because post-build is
        not supported A pointer to this structure is passed to the Watchdog Manager initialization
        function for configuration. </description>
      <comment> Dummy type uint8 is used instead of a structure type, because of deviation:
        [ASCWDGM-224] Post build time configuration </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_00_DataTypes</srcid><srcstatus/><internalId>1814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00038.2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following Data Types shall be used for the functions defined in this
        specification: Name: WdgM_SupervisedEntityIdType Type: uint16 Range: 0-[Number of Supervised
        Entities] -- The range of valid IDs depends on the number of configured Supervised Entities
        and on the chosen platform type Description: This type identifies an individual Supervised
        Entity for the Watchdog Manager. </description>
      <comment> uint16 type is always used independent of the number of configured SEs </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_00_DataTypes</srcid><srcstatus/><internalId>1814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00038.3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following Data Types shall be used for the functions defined in this
        specification: Name: WdgM_CheckpointIdType Type: uint16 Range: 0-[Maximum number of
        Checkpoints] -- The range of valid IDs depends on the maximum number of configured
        Checkpoints within all configured Supervised Entities and on the chosen platform type.
        Description: This type identifies a Checkpoint in the context of a Supervised Entity for the
        Watchdog Manager. Note that an individual Checkpoint can only be identified by the pair of
        Supervised Entity ID and Checkpoint ID. </description>
      <comment> uint16 type is always used independent of the number of configured SEs </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_00_DataTypes</srcid><srcstatus/><internalId>1814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00038.4</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following Data Types shall be used for the functions defined in this
        specification: Name: WdgM_ModeType Type: uint8 Range: 0-[Number of Modes] -- The actual
        upper limit depends on the number of configured modes for Watchdog Manager. Description:
        This type distinguishes the different modes that were configured for the Watchdog Manager. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_00_DataTypes</srcid><srcstatus/><internalId>1814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00038.5</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following Data Types shall be used for the functions defined in this
        specification: Name: WdgM_LocalStatusType Range: Type: uint8 WDGM_LOCAL_STATUS_OK 0 The
        supervision of this Supervised Entity has not shown any failures. WDGM_LOCAL_STATUS_FAILED 1
        The supervision of this Supervised Entity has failed but can still be "healed". I.e., if the
        Supervised Entity returns to a normal behavior, its supervision state will also return to
        WDGM_LOCAL_STATUS_OK. Furthermore, the number of times that the supervision has failed has
        not yet exceeded a configurable limit. When this limit has been exceeded the state will
        change to WDGM_LOCAL_STATUS_EXPIRED. WDGM_LOCAL_STATUS_EXPIRED 2 The supervision of this
        Supervised Entity has failed permanently. This state cannot be left.
        WDGM_LOCAL_STATUS_DEACTIVATED 4 The supervision of this Supervised Entity is temporarily
        disabled. Description: This type shall be used for variables that represent the current
        status of supervision for individual Supervised Entities. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_00_DataTypes</srcid><srcstatus/><internalId>1814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00038.6</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following Data Types shall be used for the functions defined in this
        specification: Name: WdgM_GlobalStatusType Type: uint8 Range: WDGM_GLOBAL_STATUS_OK 0
        Supervision did not show any failures. WDGM_GLOBAL_STATUS_FAILED 1 Supervision has failed
        but is still within the limit of allowed failures. WDGM_GLOBAL_STATUS_EXPIRED 2 Supervision
        has failed, the allowed limit of failures has been exceeded, but the Watchdog Driver has not
        yet been instructed to stop triggering. WDGM_GLOBAL_STATUS_STOPPED 3 Supervision has failed,
        the allowed limit of failures has been exceeded, and the Watchdog Driver has been instructed
        to stop triggering. A watchdog reset is about to happen. WDGM_GLOBAL_STATUS_DEACTIVATED 4
        WdgM is not initialized and therefore will not manage the watchdogs. Description: This type
        shall be used for variables that represent the global supervision status of the Watchdog
        Manager module. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_00_DataTypes</srcid><srcstatus/><internalId>1814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.1</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: AllowAccess </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.2</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: CallTrustedFunction </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.3</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: CheckISRMemoryAccess </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.4</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: CheckObjectAccess </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.5</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: CheckObjectOwnership </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.6</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: CheckTaskMemoryAccess </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.7</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: GetApplicationID </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.8</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: GetApplicationState </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.9</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: GetElapsedValue </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.10</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: GetISRID </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.11</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: GetScheduleTableStatus </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.12</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: IncrementCounter </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.13</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: NextScheduleTable </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.14</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: SetScheduletableAsync </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.15</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: StartScheduleTableAbs </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.16</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: StartScheduleTableRel </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.17</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: StartScheduleTableSynchron </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.18</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: StopScheduleTable </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.19</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: SyncScheduleTable </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.20</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: WdgIf_SetMode </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_03_MandatoryAPIs</srcid><srcstatus/><internalId>1812</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00161.21</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following interface is required to fulfill the core functionality of the
        module: WdgIf_SetTriggerCondition </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_03_MandatoryAPIs</srcid><srcstatus/><internalId>1812</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00162.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following optional interface is required to fulfill the core functionality
        of the module: BswM_WdgM_RequestPartitionReset </description>
      <comment> Set to DEVIATION because of WdgM.ASR40.SWS_WdgM_00162.1: Supervisor Callout is used
      instead of BswM_WdgM_RequestPartitionReset. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.PartitionRestart</srcid><srcstatus/><internalId>745</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00162.2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following optional interface is required to fulfill the core functionality
        of the module: Dem_ReportErrorStatus </description>
      <comment> Fulfilled at least by WdgM.SWS_WdgM_00142. A test shall check that this API is used /
        called. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30053_OptionalAPI_Used</srcid><srcstatus/><internalId>1752</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_04_OptionalAPI_Unused</srcid><srcstatus/><internalId>1813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00162.3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following optional interface is required to fulfill the core functionality
        of the module: Det_ReportError </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30053_OptionalAPI_Used</srcid><srcstatus/><internalId>1752</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_04_OptionalAPI_Unused</srcid><srcstatus/><internalId>1813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00162.4</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following optional interface is required to fulfill the core functionality
        of the module: Mcu_PerformReset </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30046</srcid><srcstatus/><internalId>1756</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_04_OptionalAPI_Unused</srcid><srcstatus/><internalId>1813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00162.5</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The following optional interface is required to fulfill the core functionality
        of the module: TerminateApplication </description>
      <comment> This requirement is not applicable, because this interface is never used in WdgM. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00212.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where
        Internal Transitions (see WdgMInternalTransition) in a Supervised Entity connect Checkpoints
        that do not both belong to the same Supervised Entity. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1582</srcid><srcstatus/><internalId>1608</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1624</srcid><srcstatus/><internalId>1612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00212.2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> To switch on and off the Logical monitoring of an Internal Graph depending on
        the mode, it is needed to reference (or respectively do not reference) the Supervised Entity
        from each mode (see WdgMLocalStatusParams). </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_InternalGraphMonitoring</srcid><srcstatus/><internalId>1824</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_InternalGraphMonitoring_Multicore</srcid><srcstatus/><internalId>1871</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00212.3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> It is possible to have only zero or one Internal Graph per Supervised Entity. </description>
      <comment> Note: A Supervised Entity can have at most one internal Graph: see
        http://www.autosar.org/bugzilla/show_bug.cgi?id=56411 </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_InternalGraphCount</srcid><srcstatus/><internalId>1825</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_InternalGraphCount_Multicore</srcid><srcstatus/><internalId>1872</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00212.4</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> Not all Checkpoints of a Supervised Entity need to be monitored. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckpointNotMonitored</srcid><srcstatus/><internalId>1826</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckpointNotMonitored_Multicore</srcid><srcstatus/><internalId>1873</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00259.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> Development error value WDGM_E_NO_INIT is of type uint8. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_01_DetErrorValues</srcid><srcstatus/><internalId>1810</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_112</srcid><srcstatus/><internalId>882</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00259.2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> Development error value WDGM_E_PARAM_CONFIG is of type uint8. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_01_DetErrorValues</srcid><srcstatus/><internalId>1810</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_119</srcid><srcstatus/><internalId>883</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00259.3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> Development error value WDGM_E_PARAM_MODE is of type uint8. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_01_DetErrorValues</srcid><srcstatus/><internalId>1810</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_127</srcid><srcstatus/><internalId>884</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00259.4</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> Development error value WDGM_E_PARAM_SEID is of type uint8. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_01_DetErrorValues</srcid><srcstatus/><internalId>1810</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_134</srcid><srcstatus/><internalId>885</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00259.5</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> Development error value WDGM_E_INV_POINTER is of type uint8. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_01_DetErrorValues</srcid><srcstatus/><internalId>1810</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_142</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00259.6</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> Development error value WDGM_E_DISABLE_NOT_ALLOWED is of type uint8. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_01_DetErrorValues</srcid><srcstatus/><internalId>1810</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_149</srcid><srcstatus/><internalId>887</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00259.7</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> Development error value WDGM_E_CPID is of type uint8. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_01_DetErrorValues</srcid><srcstatus/><internalId>1810</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_156</srcid><srcstatus/><internalId>888</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00259.8</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> Development error value WDGM_E_DEPRECATED is of type uint8. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_01_DetErrorValues</srcid><srcstatus/><internalId>1810</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckUpdateAliveCounterReturnError</srcid><srcstatus/><internalId>2059</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_163</srcid><srcstatus/><internalId>889</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00259.9</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> Development error value WDGM_E_AMBIGIOUS is of type uint8. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_01_DetErrorValues</srcid><srcstatus/><internalId>1810</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_170</srcid><srcstatus/><internalId>890</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00259.10</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> Development error value WDGM_E_SEDEACTIVATED is of type uint8. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_01_DetErrorValues</srcid><srcstatus/><internalId>1810</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_179</srcid><srcstatus/><internalId>891</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>
    <specobject>
      <!--  New requirement compared to ASR 3.0 release  -->
      <id>WdgM.ASR40.SWS_WdgM_00267.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The standardized common published parameters as required by BSW00402 in the SRS
        General on Basic Software Modules <biblioref linkend="AUTOSAR_SRS_BSWGeneral"/> shall be
        published within the header file of this module. (BSW00318, BSW00441, BSW00374, BSW00379,
        BSW00402) </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_02_PublishedInformation</srcid><srcstatus/><internalId>1811</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00267</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>
    <specobject>
      <!--  New requirement compared to ASR 3.0 release  -->
      <id>WdgM.ASR40.SWS_WdgM_00267.2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The standardized common published parameters as required by BSW00402 in the SRS
        General on Basic Software Modules <biblioref linkend="AUTOSAR_SRS_BSWGeneral"/> shall be
        provided in the BSW Module Description (see <biblioref linkend="AUTOSAR_BSW_Description Template"/>). </description>
      <comment> This part of the BSW module description is tested by the use of a reference file. </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_Bswmd</srcid><srcstatus/><internalId>1709</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00267</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00307.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where
        Supervised Entity ID is not unique. </description>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1327</srcid><srcstatus/><internalId>1599</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00307</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00304</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>
    <specobject>
      <id>WdgM.ASR40.SWS_WdgM_00307.2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where
        SW-C Supervised Entities use as a Supervised Entity ID a value that is equal to the Module
        ID of any BSW module. </description>
      <comment> See Deviation: ASCWDGM-425 The WdgM does not check if a Supervised Entity ID equals
        some AUTOSAR Module ID </comment>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.SupervisedEntityIDValues</srcid><srcstatus/><internalId>747</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00307</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>WDGM.EB.ASR40.WDGM002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall contain a configuration parameter
            <parameter>WdgMEnableASR40ServiceAPI</parameter> in container
            <parameter>WdgMServiceAPI</parameter> in container <parameter>WdgMGeneral</parameter>
          with the following properties: </para>
        <para>Description: Configures whether the AUTOSAR 4.0 service API shall be provided. TRUE =
          Enables AUTOSAR 4.0 service API, FALSE = Disables AUTOSAR 4.0 service API. </para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucBooleanParamDef</para>
        <para>Default value: false</para>
        <para>ConfigurationClass: Pre-compile time - all variants</para>
        <para>Scope / Dependency: Module</para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_01_SvcCompDescr</srcid><srcstatus/><internalId>1965</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_909</srcid><srcstatus/><internalId>1524</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR40.WDGM004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> AUTOSAR 4.0 interface elements shall be placed in AUTOSAR package
            <code>/AUTOSAR_WdgM/ASR40</code> if the pre-compile time configuration switch
            <parameter>WdgMEnableASR40ServiceAPI</parameter>=<code>true</code>. </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_01_SvcCompDescr</srcid><srcstatus/><internalId>1965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR40.WDGM006</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> AUTOSAR 4.0 interface elements shall be placed in AUTOSAR package
            <code>/AUTOSAR_WdgM</code> if the pre-compile time configuration switch
            <parameter>DefaultASRServiceAPI</parameter>=<code>AUTOSAR_40</code>. </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_01_SvcCompDescr</srcid><srcstatus/><internalId>1965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR40.WDGM009</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The AUTOSAR 4.0 implementation and internal behavior elements of the WdgM Service
          Component shall be infixed with <code>_ASR40_</code> and placed in AUTOSAR package
            <code>/AUTOSAR_WdgM</code> if the pre-compile time configuration switch
            <parameter>WdgMEnableASR40ServiceAPI</parameter>=<code>true</code>. </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_02_Types</srcid><srcstatus/><internalId>1966</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR40.WDGM109</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If the pre-compile time configuration switch
            <code>WdgMEnableASR40ServiceAPI=true</code>, then for all AUTOSAR 4.0 APIs called in the
          implementation of the Rte/SWC API as defined in the WdgM Service Component, the file
            <code>WdgM_Rte_Lcfg.c</code> shall implement this function with a simple call to the
          corresponding AUTOSASR 40 WdgM BSW API. </para>
        <para> Note: This concerns the following AUTOSAR 4.0 APIs:
            <function>WdgM_CheckpointReached</function> (see WDGM.ASR40.WDGM263)and
            <function>WdgM_UpdateAliveCounter</function> (see WDGM.EB.WDGM155). </para>
        <para> Note: If multicore is enabled core identifier is added in the naming of
          WdgM_Rte_Lcfg.c for each core configured (eg. WdgM_Rte_Core_0_Lcfg.c). </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_03_RteAPIs</srcid><srcstatus/><internalId>1967</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_164</srcid><srcstatus/><internalId>1389</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_167</srcid><srcstatus/><internalId>1392</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_171</srcid><srcstatus/><internalId>1395</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_862</srcid><srcstatus/><internalId>1455</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_881</srcid><srcstatus/><internalId>1458</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_909</srcid><srcstatus/><internalId>1461</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR40.WDGM110</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If the pre-compile time configuration switch
            <code>DefaultASRServiceAPI=AUTOSAR_40</code>, then for all AUTOSAR 4.0 APIs called in
          the implementation of the Rte/SWC API as defined in the WdgM Service Component, the file
            <code>WdgM_Rte_Lcfg.c</code> shall implement this function with a simple call to the
          corresponding AUTOSASR 4.0 WdgM BSW API. </para>
        <para> Note: This concerns the following AUTOSAR 4.0 APIs:
            <function>WdgM_CheckpointReached</function> (see WDGM.ASR40.WDGM263) and
            <function>WdgM_UpdateAliveCounter</function> (see WDGM.EB.WDGM155). </para>
        <para> Note: If multicore is enabled core identifier is added in the naming of
          WdgM_Rte_Lcfg.c for each core configured (eg. WdgM_Rte_Core_0_Lcfg.c). </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_03_RteAPIs</srcid><srcstatus/><internalId>1967</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_135</srcid><srcstatus/><internalId>1376</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_138</srcid><srcstatus/><internalId>1378</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_649</srcid><srcstatus/><internalId>1429</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_669</srcid><srcstatus/><internalId>1432</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR40.WDGM011</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The AUTOSAR 4.0 implementation and internal behavior elements of the WdgM Service
          Component shall be placed in AUTOSAR package <code>/AUTOSAR_WdgM</code> if the pre-compile
          time configuration switch
            <parameter>DefaultASRServiceAPI</parameter>=<code>AUTOSAR_40</code>. </para>
        <para> Note: These elements are not infixed and exist additionally to WDGM.EB.ASR40.WDGM009
          (i.e., this requirement is not conflicting). </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_01_SvcCompDescr</srcid><srcstatus/><internalId>1965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR40.WDGM014</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The Watchdog Manager shall generate the following files conforming to the AUTOSAR 4.0
          schema via generator mode <code>generate_asr40_swcd</code>: </para>
        <para>
          <code>WdgM_ASR40_swc_interface.arxml</code>: Contains the AUTOSAR 4.0
          data type and port interface type definitions of the WdgM Service Component. </para>
        <para>
          <code>WdgM_ASR40_swc_internal.arxml</code>: Contains the AUTOSAR 4.0
          implementation and internal behavior elements of the WdgM Service Component. </para>
        <para>
          <code>WdgM_ASR40_Bswmd.arxml</code>: Contains the Basic Software Module Description of the
          Watchdog Manager. </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_01_SvcCompDescr</srcid><srcstatus/><internalId>1965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>WDGM.EB.ASR43.WDGM121</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall contain a configuration parameter
            <parameter>WdgMEnableASR43ServiceAPI</parameter> in container
            <parameter>WdgMServiceAPI</parameter> in container <parameter>WdgMGeneral</parameter>
          with the following properties: </para>
        <para>Description: Configures whether the AUTOSAR 4.3 service API shall be provided. TRUE =
          Enables AUTOSAR 4.3 service API, FALSE = Disables AUTOSAR 4.3 service API. </para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucBooleanParamDef</para>
        <para>Default value: false</para>
        <para>ConfigurationClass: Pre-compile time - all variants</para>
        <para>Scope / Dependency: Module</para>
      </description>
      <comment> </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_01_SvcCompDescr</srcid><srcstatus/><internalId>1965</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_937</srcid><srcstatus/><internalId>1525</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR43.WDGM122</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> AUTOSAR 4.3 interface elements shall be placed in AUTOSAR package
            <code>/AUTOSAR_WdgM/ASR43</code> if the pre-compile time configuration switch
            <parameter>WdgMEnableASR43ServiceAPI</parameter>=<code>true</code>. </para>
      </description>
      <comment> </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_01_SvcCompDescr</srcid><srcstatus/><internalId>1965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR43.WDGM120</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> AUTOSAR 4.3 interface elements shall be placed in AUTOSAR package
            <code>/AUTOSAR_WdgM</code> if the pre-compile time configuration switch
            <parameter>DefaultASRServiceAPI</parameter>=<code>AUTOSAR_43</code>. </para>
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_01_SvcCompDescr</srcid><srcstatus/><internalId>1965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR43.WDGM123</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The AUTOSAR 4.3 implementation and internal behavior elements of the WdgM Service
          Component shall be infixed with <code>_ASR43_</code> and placed in AUTOSAR package
            <code>/AUTOSAR_WdgM</code> if the pre-compile time configuration switch
            <parameter>WdgMEnableASR43ServiceAPI</parameter>=<code>true</code>. </para>
      </description>
      <comment> </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_02_Types</srcid><srcstatus/><internalId>1966</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR43.WDGM124</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The AUTOSAR 4.3 implementation and internal behavior elements of the WdgM Service
          Component shall be placed in AUTOSAR package <code>/AUTOSAR_WdgM</code> if the pre-compile
          time configuration switch
            <parameter>DefaultASRServiceAPI</parameter>=<code>AUTOSAR_43</code>. </para>
        <para> Note: These elements are not infixed and exist additionally to WDGM.EB.ASR43.WDGM123
          (i.e., this requirement is not conflicting). </para>
      </description>
      <comment> </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_01_SvcCompDescr</srcid><srcstatus/><internalId>1965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR43.WDGM125</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If the pre-compile time configuration switch
            <code>WdgMEnableASR43ServiceAPI=true</code>, then for all AUTOSAR 4.3 APIs called in the
          implementation of the Rte/SWC API as defined in the WdgM Service Component, the file
            <code>WdgM_Rte_Lcfg.c</code> shall implement this function with a simple call to the
          corresponding AUTOSASR 43 WdgM BSW API. </para>
        <para> Note: This concerns the following AUTOSAR 4.3 APIs:
            <function>WdgM_CheckpointReached</function> (see WDGM.ASR40.WDGM263)and
            <function>WdgM_GetLocalStatus</function> (see WDGM.ASR40.WDGM169)
            <function>WdgM_GetFirstExpiredSEID </function> (see WDGM.ASR40.WDGM346)
            <function>WdgM_GetGlobalStatus</function> (see WDGM.ASR40.WDGM175)
            <function>WdgM_GetMode</function> (see WdgM.SWS_WdgM_00168)
            <function>WdgM_SetMode</function> (see WDGM.ASR40.WDGM154)
            <function>WdgM_PerformReset</function> (see WDGM.ASR40.WDGM264).</para>
        <para> Note: If multicore is enabled core identifier is added in the naming of
          WdgM_Rte_Lcfg.c for each core configured (eg. WdgM_Rte_Core_0_Lcfg.c). </para>
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_05_ASR43RteAPIs</srcid><srcstatus/><internalId>1969</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_173</srcid><srcstatus/><internalId>1397</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_178</srcid><srcstatus/><internalId>1400</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_922</srcid><srcstatus/><internalId>1463</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_942</srcid><srcstatus/><internalId>1466</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_963</srcid><srcstatus/><internalId>1469</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_983</srcid><srcstatus/><internalId>1472</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1002</srcid><srcstatus/><internalId>1475</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1071</srcid><srcstatus/><internalId>1481</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR43.WDGM126</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If the pre-compile time configuration switch
            <code>DefaultASRServiceAPI=AUTOSAR_43</code>, then for all AUTOSAR 4.3 APIs called in
          the implementation of the Rte/SWC API as defined in the WdgM Service Component, the file
            <code>WdgM_Rte_Lcfg.c</code> shall implement this function with a simple call to the
          corresponding AUTOSASR 4.3 WdgM BSW API. </para>
            <para> Note: This concerns the following AUTOSAR 4.3 APIs:
            <function>WdgM_CheckpointReached</function> (see WDGM.ASR40.WDGM263)and
            <function>WdgM_GetLocalStatus</function> (see WDGM.ASR40.WDGM169)
            <function>WdgM_GetFirstExpiredSEID </function> (see WDGM.ASR40.WDGM346)
            <function>WdgM_GetGlobalStatus</function> (see WDGM.ASR40.WDGM175)
            <function>WdgM_GetMode</function> (see WdgM.SWS_WdgM_00168)
            <function>WdgM_SetMode</function> (see WDGM.ASR40.WDGM154) and
            <function>WdgM_PerformReset</function> (see WDGM.ASR40.WDGM264).</para>
        <para> Note: If multicore is enabled core identifier is added in the naming of
          WdgM_Rte_Lcfg.c for each core configured (eg. WdgM_Rte_Core_0_Lcfg.c). </para>
      </description>
      <furtherinfo>WRN.impl.needscoverage.count: Jet files are transformed into java files, so multiple 
        implementations are counted.</furtherinfo>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_05_ASR43RteAPIs</srcid><srcstatus/><internalId>1969</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_142</srcid><srcstatus/><internalId>1380</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_147</srcid><srcstatus/><internalId>1383</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_155</srcid><srcstatus/><internalId>1386</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_186</srcid><srcstatus/><internalId>1403</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_697</srcid><srcstatus/><internalId>1435</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_717</srcid><srcstatus/><internalId>1438</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_738</srcid><srcstatus/><internalId>1441</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_758</srcid><srcstatus/><internalId>1444</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_777</srcid><srcstatus/><internalId>1447</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_811</srcid><srcstatus/><internalId>1450</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_846</srcid><srcstatus/><internalId>1453</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1036</srcid><srcstatus/><internalId>1478</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR43.WDGM127</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> Only if <code>WdgMServiceAPI are disabled</code> or <code>DefaultASRServiceAPI=NONE</code> or
        <code>DefaultASRServiceAPI=AUTOSAR_40</code>
        the file <code>WdgM_Types.h</code> shall provide the typedef for the following types
        <code>WdgM_ModeType</code>
        <code>WdgM_LocalStatusType</code> and
        <code>WdgM_GlobalStatusType</code>. </para>
      </description>
      <comment>Starting from AUTOSAR 4.3 the service description also provide the above types.</comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_00_DataTypes</srcid><srcstatus/><internalId>1814</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Types.h_188</srcid><srcstatus/><internalId>803</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR43.WDGM404</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If parameter <parameter>WdgMBSWCompatibilityMode</parameter>=<code>AUTOSAR_43</code>
          (see WDGM.EB.WDGM029), then the WdgM shall provide the BSW API
            <code>WdgM_SetMode</code> without the <code>CallerID</code> argument. </para>
        <para> Note: CallerIDs are not supported in these modes. </para>
      </description>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_Compile_0801_CompatibilityMode</srcid><srcstatus/><internalId>1712</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1531</srcid><srcstatus/><internalId>975</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR43.WDGM405</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If parameter <parameter>WdgMBSWCompatibilityMode</parameter>=<code>AUTOSAR_43</code> and the
          container <parameter>WdgMCallerIds</parameter> (see WdgM.ASR40.ECUC_WdgM_00358) is enabled, then the
          following error shall be reported: "The support for the configuration of CallerIDs is not
          possible in BSW compatibility modes AUTOSAR_43." </para>
      </description>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_02_NegativeTestsPart2</srcid><srcstatus/><internalId>1934</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1242</srcid><srcstatus/><internalId>1596</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>WdgM.EB.ReportToDem</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The EB-specific coding guideline rule BSWM_EB_002 applies for the WdgM module;
        refer to <biblioref linkend="EBTresosCodingGuidelines"/>. </description>
	  <furtherinfo>WRN.swurs.needscoverage.count: Requirement use case is refined in more than 20 refined 
		requirements due to use case consistency..</furtherinfo>	
      <comment> Set to REFINE because applies for several DEM parameters. </comment>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WdgM.EB.ReportToDem.Supervision.1</srcid><srcstatus/><internalId>458</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.Supervision.2</srcid><srcstatus/><internalId>459</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.Supervision.3</srcid><srcstatus/><internalId>460</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.Supervision.5</srcid><srcstatus/><internalId>461</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.SetMode.1</srcid><srcstatus/><internalId>462</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.SetMode.2</srcid><srcstatus/><internalId>463</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.SetMode.3</srcid><srcstatus/><internalId>464</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.SetMode.5</srcid><srcstatus/><internalId>465</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.SlaveSwitchMode.1</srcid><srcstatus/><internalId>466</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.SlaveSwitchMode.2</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.SlaveSwitchMode.3</srcid><srcstatus/><internalId>468</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.SlaveSwitchMode.5</srcid><srcstatus/><internalId>469</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.ImproperCaller.1</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.ImproperCaller.2</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.ImproperCaller.3</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.ImproperCaller.5</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.MfTimingViolation.1</srcid><srcstatus/><internalId>474</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.MfTimingViolation.2</srcid><srcstatus/><internalId>475</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.MfTimingViolation.3</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.MfTimingViolation.5</srcid><srcstatus/><internalId>477</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.MfSatelliteFailure.1</srcid><srcstatus/><internalId>478</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.MfSatelliteFailure.2</srcid><srcstatus/><internalId>479</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.MfSatelliteFailure.3</srcid><srcstatus/><internalId>480</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.MfSatelliteFailure.5</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.DataCorruption.1</srcid><srcstatus/><internalId>482</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.DataCorruption.2</srcid><srcstatus/><internalId>483</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.DataCorruption.3</srcid><srcstatus/><internalId>484</internalId></linkedfrom><linkedfrom><srcid>WdgM.EB.ReportToDem.DataCorruption.5</srcid><srcstatus/><internalId>485</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.Supervision.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description> For the Dem event type WDGM_E_MONITORING, a configurable enumeration parameter
        WdgMSupervisionReportToDem shall be added to the sub container ReportToDem with the
        following range: DEM - this event type is reported to Dem (set
        WDGM_EB_PROD_ERR_HANDLING_SUPERVISION to WDGM_PROD_ERR_REP_TO_DEM) DET - this event type is
        not reported to Dem but redirected towards the Det. This applies to the reporting of failed
        events only. (generator: set WDGM_EB_PROD_ERR_HANDLING_SUPERVISION to
        WDGM_PROD_ERR_REP_TO_DET) DISABLE - this event is not reported at all (generator: set
        WDGM_EB_PROD_ERR_HANDLING_SUPERVISION to WDGM_PROD_ERR_DISABLE) </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_44</srcid><srcstatus/><internalId>1494</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.Supervision.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The WdgM configuration shall contain a configuration parameter
        WdgMSupervisionDemDetErrId in the sub container ReportToDem with the following properties:
        Description: If a production error is reported towards the Det, this parameter defines the
        error id which is reported towards the Det. The value must be larger or equal to 30 and less
        than 255; the default value is 30. The preprocessor define WDGM_E_DEMTODET_E_SUPERVISION is
        generated holding the value of WdgMSupervisionDemDetErrId. Enabled: This parameter is
        enabled only if WdgMSupervisionReportToDem (see WdgM.EB.ReportToDem.Supervision.1) is set to
        DET and WdgMDevErrorDetect (see WDGM.ASR40.WDGM301_Conf) is set to true. Multiplicity: 1
        Type: Integer (Range: [30..255]) Note: Values from 0 to 29 are used as standard IDs
        according to AUTOSAR SWS. Default value: 30 ConfigurationClass: Pre-compile time - all
        variants Scope / Dependency: Module </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_77</srcid><srcstatus/><internalId>1495</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.Supervision.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The configuration parameter WdgMSupervisionDemDetErrId is enabled (and
        evaluated) in the XDM schema file only if the WdgMSupervisionReportToDem parameter is set to
        DET. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_109</srcid><srcstatus/><internalId>1496</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.Supervision.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If the parameter WdgMSupervisionReportToDem (see
        WdgM.EB.ReportToDem.Supervision.1) is set to DET, then the following macro shall be defined
        in WdgM_Cfg.h: Name: WDGM_EB_E_DEMTODET_SUPERVISION Value: value of
        WdgMSupervisionDemDetErrId (see WdgM.EB.ReportToDem.Supervision.2) </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Cfg.h.m4_380</srcid><srcstatus/><internalId>765</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.SetMode.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description> For the Dem event type WDGM_E_SET_MODE, a configurable enumeration parameter
        WdgMSetModeReportToDem shall exist in a sub container ReportToDem with the following range:
        DEM - this event type is reported to Dem (set WDGM_EB_PROD_ERR_HANDLING_SET_MODE to
        WDGM_PROD_ERR_REP_TO_DEM) DET - this event type is not reported to Dem but redirected towards
        the Det. This applies to the reporting of failed events only. (generator: set
        WDGM_EB_PROD_ERR_HANDLING_SET_MODE to WDGM_PROD_ERR_REP_TO_DET) DISABLE - this event is not
        reported at all (generator: set WDGM_EB_PROD_ERR_HANDLING_SET_MODE to WDGM_PROD_ERR_DISABLE) </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_02</srcid><srcstatus/><internalId>1942</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03</srcid><srcstatus/><internalId>1943</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_04</srcid><srcstatus/><internalId>1944</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_02_MC</srcid><srcstatus/><internalId>2089</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03_MC</srcid><srcstatus/><internalId>2090</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_04_MC</srcid><srcstatus/><internalId>2091</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_122</srcid><srcstatus/><internalId>1497</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.SetMode.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The WdgM configuration shall contain a configuration parameter
        WdgMSetModeDemDetErrId in the sub container ReportToDem with the following properties:
        Description: If a production error is reported towards the Det, this parameter defines the
        error id which is reported towards the Det. The value must be larger or equal to 30 and less
        than 255; the default value is 30. The preprocessor define WDGM_EB_E_DEMTODET_SET_MODE is
        generated holding the value of WdgMSetModeDemDetErrId. Enabled: This parameter is enabled
        only if WdgMSetModeReportToDem (see WdgM.EB.ReportToDem.SetMode.1) is set to DET and
        WdgMDevErrorDetect (see WDGM.ASR40.WDGM301_Conf) is set to true. Multiplicity: 1 Type:
        Integer (Range: [30..255]) Note: Values from 0 to 29 are used as standard IDs according to
        AUTOSAR SWS. Default value: 30 ConfigurationClass: Pre-compile time - all variants Scope /
        Dependency: Module </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_153</srcid><srcstatus/><internalId>1498</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.SetMode.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The configuration parameter WdgMSetModeDemDetErrId is enabled (and evaluated) in
        the XDM schema file only if the WdgMSetModeReportToDem parameter is set to DET. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_185</srcid><srcstatus/><internalId>1499</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.SetMode.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If the parameter WdgMSetModeReportToDem (see WdgM.EB.ReportToDem.SetMode.1) is
        set to DET, then the following macro shall be defined in WdgM_Cfg.h: Name:
        WDGM_EB_E_DEMTODET_SET_MODE Value: value of WdgMSetModeDemDetErrId (see
        WdgM.EB.ReportToDem.SetMode.2) </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Cfg.h.m4_401</srcid><srcstatus/><internalId>766</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.SlaveSwitchMode.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> For the Dem event type WDGM_E_SLAVE_FAILED_CHANGEMODE, a configurable enumeration parameter
        WdgMMasterWaitSlaveModeSwitchFailure shall exist in a sub container ReportToDem with the following range:
        DEM - this event type is reported to Dem (set WDGM_EB_PROD_ERR_HANDLING_SET_MODE to
        WDGM_PROD_ERR_REP_TO_DEM) DET - this event type is not reported to Dem but redirected towards
        the Det. This applies to the reporting of failed events only. (generator: set
        WDGM_EB_PROD_ERR_HANDLING_SET_MODE to WDGM_PROD_ERR_REP_TO_DET) DISABLE - this event is not
        reported at all (generator: set WDGM_EB_PROD_ERR_HANDLING_SET_MODE to WDGM_PROD_ERR_DISABLE) </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_198</srcid><srcstatus/><internalId>1500</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.SlaveSwitchMode.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The WdgM configuration shall contain a configuration parameter
        WdgMMasterWaitSlaveModeSwitchDemDetErrId in the sub container ReportToDem with the following properties:
        Description: If a production error is reported towards the Det, this parameter defines the
        error id which is reported towards the Det. The value must be larger or equal to 30 and less
        than 255; the default value is 30. The preprocessor define WDGM_EB_E_SLAVE_FAILED_CHANGEMODE is
        generated holding the value of WdgMMasterWaitSlaveModeSwitchDemDetErrId. Enabled: This parameter is enabled
        only if WdgMMasterWaitSlaveModeSwitchFailure (see WdgM.EB.ReportToDem.SlaveSwitchMode.1) is set to DET and
        WdgMDevErrorDetect (see WDGM.ASR40.WDGM301_Conf) is set to true. Multiplicity: 1 Type:
        Integer (Range: [30..255]) Note: Values from 0 to 29 are used as standard IDs according to
        AUTOSAR SWS. Default value: 30 ConfigurationClass: Pre-compile time - all variants Scope /
        Dependency: Module </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_229</srcid><srcstatus/><internalId>1501</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.SlaveSwitchMode.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The configuration parameter WdgMMasterWaitSlaveModeSwitchDemDetErrId is enabled (and evaluated) in
        the XDM schema file only if the WdgMMasterWaitSlaveModeSwitchFailure parameter is set to DET. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_261</srcid><srcstatus/><internalId>1502</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.SlaveSwitchMode.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If the parameter WdgMMasterWaitSlaveModeSwitchFailure (see WdgM.EB.ReportToDem.SlaveSwitchMode.1) is
        set to DET, then the following macro shall be defined in WdgM_Cfg.h: Name:
        WDGM_EB_E_SLAVE_FAILED_CHANGEMODE Value: value of WdgMMasterWaitSlaveModeSwitchDemDetErrId (see
        WdgM.EB.ReportToDem.SlaveSwitchMode.2) </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Cfg.h.m4_422</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.ImproperCaller.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description> For the Dem event type WDGM_E_IMPROPER_CALLER, a configurable enumeration
        parameter WdgMImproperCallerReportToDem shall exist in a sub container ReportToDem with the
        following range: DEM - this event type is reported to Dem (set
        WDGM_EB_PROD_ERR_HANDLING_IMPROPER_CALLER to WDGM_PROD_ERR_REP_TO_DEM) DET - this event type
        is not reported to Dem but redirected towards the Det. This applies to the reporting of
        failed events only. (generator: set WDGM_EB_PROD_ERR_HANDLING_IMPROPER_CALLER to
        WDGM_PROD_ERR_REP_TO_DET) DISABLE - this event is not reported at all (generator: set
        WDGM_EB_PROD_ERR_HANDLING_IMPROPER_CALLER to WDGM_PROD_ERR_DISABLE) </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_01</srcid><srcstatus/><internalId>1941</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_01_MC</srcid><srcstatus/><internalId>2088</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_352</srcid><srcstatus/><internalId>1506</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.ImproperCaller.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The WdgM configuration shall contain a configuration parameter
        WdgMImproperCallerDemDetErrId in the sub container ReportToDem with the following
        properties: Description: If a production error is reported towards the Det, this parameter
        defines the error id which is reported towards the Det. The value must be larger or equal to
        30 and less than 255; the default value is 30. The preprocessor define
        WDGM_EB_E_DEMTODET_IMPROPER_CALLER is generated holding the value of
        WdgMImproperCallerDemDetErrId Enabled: This parameter is enabled only if
        WdgMImproperCallerReportToDem (see WdgM.EB.ReportToDem.ImproperCaller.1) is set to DET and
        WdgMDevErrorDetect (see WDGM.ASR40.WDGM301_Conf) is set to true. Multiplicity: 1 Type:
        Integer (Range: [30..255]) Note: Values from 0 to 29 are used as standard IDs according to
        AUTOSAR SWS. Default value: 30 ConfigurationClass: Pre-compile time - all variants Scope /
        Dependency: Module </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_387</srcid><srcstatus/><internalId>1507</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.ImproperCaller.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The configuration parameter WdgMImproperCallerDemDetErrId is enabled (and
        evaluated) in the XDM schema file only if the WdgMImproperCallerReportToDem parameter is set
        to DET. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_419</srcid><srcstatus/><internalId>1508</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.ImproperCaller.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If the parameter WdgMImproperCallerReportToDem (see
        WdgM.EB.ReportToDem.ImproperCaller.1) is set to DET, then the following macro shall be
        defined in WdgM_Cfg.h: Name: WDGM_EB_E_DEMTODET_IMPROPER_CALLER Value: value of
        WdgMImproperCallerDemDetErrId (see WdgM.EB.ReportToDem.ImproperCaller.2) </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Cfg.h.m4_443</srcid><srcstatus/><internalId>768</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.MfTimingViolation.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description> For the Dem event type WDGM_E_MF_TIMINGVIOLATION, a configurable enumeration
        parameter WdgMMFTimingViolationReportToDem shall be added to the sub container ReportToDem
        with the following range: DEM - this event type is reported to Dem (set
        WDGM_EB_PROD_ERR_HANDLING_MF_TIMINGVIOLATION to WDGM_PROD_ERR_REP_TO_DEM) DET - this event
        type is not reported to Dem but redirected towards the Det. This applies to the reporting of
        failed events only. (generator: set WDGM_EB_PROD_ERR_HANDLING_MF_TIMINGVIOLATION to
        WDGM_PROD_ERR_REP_TO_DET) DISABLE - this event is not reported at all (generator: set
        WDGM_EB_PROD_ERR_HANDLING_MF_TIMINGVIOLATION to WDGM_PROD_ERR_DISABLE) </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_432</srcid><srcstatus/><internalId>1509</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.MfTimingViolation.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The WdgM configuration shall contain a configuration parameter
        WdgMMFTimingViolationReportToDem in the sub container ReportToDem with the following
        properties: Description: If a production error is reported towards the Det, this parameter
        defines the error id which is reported towards the Det. The value must be larger or equal to
        30 and less than 255; the default value is 30. The preprocessor define
        WDGM_E_DEMTODET_E_MF_TIMINGVIOLATION is generated holding the value of
        WdgMMFTimingViolationDemDetErrId. Enabled: This parameter is enabled only if
        WdgMMFTimingViolationReportToDem (see WdgM.EB.ReportToDem.MfTimingViolation.1) is set to DET
        and WdgMDevErrorDetect (see WDGM.ASR40.WDGM301_Conf) is set to true. Multiplicity: 1 Type:
        Integer (Range: [30..255]) Note: Values from 0 to 29 are used as standard IDs according to
        AUTOSAR SWS. Default value: 30 ConfigurationClass: Pre-compile time - all variants Scope /
        Dependency: Module </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GENTEST_04_NegativeTestsPart4</srcid><srcstatus/><internalId>1936</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_465</srcid><srcstatus/><internalId>1510</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.MfTimingViolation.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The configuration parameter WdgMMFTimingViolationDemDetErrId is enabled (and
        evaluated) in the XDM schema file only if the WdgMMFTimingViolationReportToDem parameter is
        set to DET. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_497</srcid><srcstatus/><internalId>1511</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.MfTimingViolation.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If the parameter WdgMMFTimingViolationReportToDem (see
        WdgM.EB.ReportToDem.MfTimingViolation.1) is set to DET, then the following macro shall be
        defined in WdgM_Cfg.h: Name: WDGM_EB_E_DEMTODET_MF_TIMINGVIOLATION Value: value of
        WdgMMFTimingViolationDemDetErrId (see WdgM.EB.ReportToDem.MfTimingViolation.2) </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Cfg.h.m4_464</srcid><srcstatus/><internalId>769</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.MfSatelliteFailure.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> For the Dem event type WDGM_E_MF_SATELLITE_ERROR, a configurable enumeration
        parameter WdgMSatelliteAlivenessReportToDem shall be added to the sub container ReportToDem
        with the following range: DEM - this event type is reported to Dem (set
        WDGM_EB_PROD_ERR_SATELLITE_ALIVENESS_FAILURE to WDGM_PROD_ERR_REP_TO_DEM) DET - this event
        type is not reported to Dem but redirected towards the Det. This applies to the reporting of
        failed events only. (generator: set WDGM_EB_PROD_ERR_SATELLITE_ALIVENESS_FAILURE to
        WDGM_PROD_ERR_REP_TO_DET) DISABLE - this event is not reported at all (generator: set
        WDGM_EB_PROD_ERR_SATELLITE_ALIVENESS_FAILURE to WDGM_PROD_ERR_DISABLE) </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_01_MC</srcid><srcstatus/><internalId>2064</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_02_MC</srcid><srcstatus/><internalId>2065</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_274</srcid><srcstatus/><internalId>1503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.MfSatelliteFailure.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The WdgM configuration shall contain a configuration parameter
        WdgMSatelliteAlivenessReportToDem in the sub container ReportToDem with the following
        properties: Description: If a production error is reported towards the Det, this parameter
        defines the error id which is reported towards the Det. The value must be larger or equal to
        30 and less than 255; the default value is 30. The preprocessor define
        WDGM_EB_E_DEMTODET_SATELLITE_ALIVENESS_FAILURE is generated holding the value of
        WdgMSatelliteAlivenessDemDetErrId. Enabled: This parameter is enabled only if
        WdgMSatelliteAlivenessReportToDem (see WdgM.EB.ReportToDem.MfTimingViolation.1) is set to DET
        and WdgMDevErrorDetect (see WDGM.ASR40.WDGM301_Conf) is set to true. Multiplicity: 1 Type:
        Integer (Range: [30..255]) Note: Values from 0 to 29 are used as standard IDs according to
        AUTOSAR SWS. Default value: 30 ConfigurationClass: Pre-compile time - all variants Scope /
        Dependency: Module </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_307</srcid><srcstatus/><internalId>1504</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.MfSatelliteFailure.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The configuration parameter WdgMSatelliteAlivenessDemDetErrId is enabled (and
        evaluated) in the XDM schema file only if the WdgMSatelliteAlivenessReportToDem parameter is
        set to DET. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_339</srcid><srcstatus/><internalId>1505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.MfSatelliteFailure.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If the parameter WdgMSatelliteAlivenessReportToDem (see
        WdgM.EB.ReportToDem.MfSatelliteFailure.1) is set to DET, then the following macro shall be
        defined in WdgM_Cfg.h: Name: WDGM_EB_E_DEMTODET_SATELLITE_ALIVENESS_FAILURE Value: value of
        WdgMMFTimingViolationDemDetErrId (see WdgM.EB.ReportToDem.MfSatelliteFailure.2) </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Cfg.h.m4_804</srcid><srcstatus/><internalId>772</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.DataCorruption.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description> For the Dem event type WDGM_E_DATA_CORRUPTION, a configurable enumeration
        parameter WdgMDataCorruptionReportToDem shall be added to the sub container ReportToDem with
        the following range: DEM - this event type is reported to Dem (set
        WDGM_EB_PROD_ERR_HANDLING_DATA_CORRUPTION to WDGM_PROD_ERR_REP_TO_DEM) DET - this event type
        is not reported to Dem but redirected towards the Det. This applies to the reporting of
        failed events only. (generator: set WDGM_EB_PROD_ERR_HANDLING_DATA_CORRUPTION to
        WDGM_PROD_ERR_REP_TO_DET) DISABLE - this event is not reported at all (generator: set
        WDGM_EB_PROD_ERR_HANDLING_DATA_CORRUPTION to WDGM_PROD_ERR_DISABLE) </description>
	  <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
        aspect is checked in many places in the sources and also in some test configurations,
        due to the highly important nature of this topic resulting in surpassing the count limit.
	  </furtherinfo>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_01</srcid><srcstatus/><internalId>1984</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_02</srcid><srcstatus/><internalId>1985</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_03a</srcid><srcstatus/><internalId>1986</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_03b</srcid><srcstatus/><internalId>1987</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_04</srcid><srcstatus/><internalId>1988</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_05a</srcid><srcstatus/><internalId>1989</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_05b</srcid><srcstatus/><internalId>1990</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_06</srcid><srcstatus/><internalId>1991</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_07</srcid><srcstatus/><internalId>1992</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_08</srcid><srcstatus/><internalId>1993</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_09</srcid><srcstatus/><internalId>1994</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_10</srcid><srcstatus/><internalId>1995</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_11</srcid><srcstatus/><internalId>1996</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_12_1</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_12_2</srcid><srcstatus/><internalId>1998</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_13_1</srcid><srcstatus/><internalId>1999</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_13_2</srcid><srcstatus/><internalId>2000</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_14</srcid><srcstatus/><internalId>2001</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_09</srcid><srcstatus/><internalId>2002</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_10</srcid><srcstatus/><internalId>2003</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_11</srcid><srcstatus/><internalId>2004</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_12</srcid><srcstatus/><internalId>2005</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_01</srcid><srcstatus/><internalId>2006</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_02</srcid><srcstatus/><internalId>2007</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_03</srcid><srcstatus/><internalId>2008</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_04</srcid><srcstatus/><internalId>2009</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_05</srcid><srcstatus/><internalId>2010</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_06</srcid><srcstatus/><internalId>2011</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_07</srcid><srcstatus/><internalId>2012</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_08</srcid><srcstatus/><internalId>2013</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_510</srcid><srcstatus/><internalId>1512</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.DataCorruption.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The WdgM configuration shall contain a configuration parameter
        WdgMDataCorruptionReportToDem in the sub container ReportToDem with the following
        properties: Description: If a production error is reported towards the Det, this parameter
        defines the error id which is reported towards the Det. The value must be larger or equal to
        30 and less than 255; the default value is 30. The preprocessor define
        WDGM_E_DEMTODET_E_DATA_CORRUPTION is generated holding the value of
        WdgMDataCorruptionDemDetErrId. Enabled: This parameter is enabled only if
        WdgMDataCorruptionReportToDem (see WdgM.EB.ReportToDem.DataCorruption.1) is set to DET and
        WdgMDevErrorDetect (see WDGM.ASR40.WDGM301_Conf) is set to true. Multiplicity: 1 Type:
        Integer (Range: [30..255]) Note: Values from 0 to 29 are used as standard IDs according to
        AUTOSAR SWS. Default value: 30 ConfigurationClass: Pre-compile time - all variants Scope /
        Dependency: Module </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GENTEST_04_NegativeTestsPart4</srcid><srcstatus/><internalId>1936</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_541</srcid><srcstatus/><internalId>1513</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.DataCorruption.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The configuration parameter WdgMDataCorruptionDemDetErrId is enabled (and
        evaluated) in the XDM schema file only if the WdgMDataCorruptionReportToDem parameter is set
        to DET. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_573</srcid><srcstatus/><internalId>1514</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>

    <specobject>
      <id>WdgM.EB.ReportToDem.DataCorruption.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If the parameter WdgMDataCorruptionReportToDem (see
        WdgM.EB.ReportToDem.DataCorruption.1) is set to DET, then the following macro shall be
        defined in WdgM_Cfg.h: Name: WDGM_EB_E_DEMTODET_DATA_CORRUPTION Value: value of
        WdgMDataCorruptionDemDetErrId (see WdgM.EB.ReportToDem.DataCorruption.2) </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Cfg.h.m4_486</srcid><srcstatus/><internalId>770</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WDGM147</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> In contrast to WDGM.ASR40.WDGM147, the Alive Supervision ports of the Watchdog
        Manager module shall be named alive_[SEsymbolicNameValue]. The variable
        [SEsymbolicNameValue] defines the unique symbolic short name of the Supervised Entity taken
        from the configuration. </description>
      <comment> See global deviation [ASCWDGM-164] Symbolic port names instead of numeric port name
        numbering </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30137</srcid><srcstatus/><internalId>1773</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30137_multicore</srcid><srcstatus/><internalId>1796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WDGM149</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> In contrast to WDGM.ASR40.WDGM149, the Watchdog Manager module's single mode
        ports for reporting the Supervision Status of each Supervised Entity shall be named
        mode_[SEsymbolicNameValue]. The variable [SEsymbolicNameValue] defines the unique symbolic
        short name of the Supervised Entity taken from the configuration. </description>
      <comment> See global deviation [ASCWDGM-164] Symbolic port names instead of numeric port name
        numbering </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30137</srcid><srcstatus/><internalId>1773</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30137_multicore</srcid><srcstatus/><internalId>1796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WdgMOffModeEnabled</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager configuration generator(e.g. EB tresos Studio) shall reject
        configurations where the WdgMWatchdogMode set to WDGIF_OFF_MODE (see WdgM.ECUC_WdgM_00332) and the
        configuration parameter WdgMOffModeEnabled is set to false (see WdgM.ECUC_WdgM_00340). </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1050</srcid><srcstatus/><internalId>1595</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WdgM_DeInit.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> The API <function>WdgM_DeInit</function> (see [WDGM261]) updates the trigger
        conditions via an OPTIONAL watchdog manager mode switch to a sleep mode defined by the
        integrator (see WDGM.EB.WdgM_DeInit.2) and de-initializes the Watchdog Manager module. </description>
      <!--
      Note:
      According to SWS Rev 3, Chapter "7.10.3 Watchdog Handling during Sleep", page 64:
      The mode switch is needed to update the watchdogs trigger conditions of all running watchdogs
      to a timeout that allows the rest of the shutdown to be executed without a watchdog reset.
      This is needed as a consequence of the concept "Windowed Watchdogs".
    -->
      <!-- See bugzilla http://www.autosar.org/bugzilla/show_bug.cgi?id=54122 -->
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SleepMode</srcid><srcstatus/><internalId>1940</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2661</srcid><srcstatus/><internalId>1087</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WdgM_DeInit.2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> In addition to the configuration parameter WdgMInitialMode, a similar
        configuration OPTIONAL parameter WdgMSleepMode shall be added to the container
        WdgMConfigSet. Name: WdgMSleepMode Description: References the mode that the Watchdog
        Manager is in after WdgM_DeInit has been called. Type: Optional Reference to [ WdgMMode ]
        ConfigurationClass: Pre-compile time: VARIANT-PRE-COMPILE Post-build time:
        VARIANT-POST-BUILD </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SleepMode</srcid><srcstatus/><internalId>1940</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_590</srcid><srcstatus/><internalId>1515</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WdgMInit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If the WdgMDevErrorDetect [WdgM.ECUC_WdgM_00301] switch is enabled and the configuration
        variant is VARIANT-PRE-COMPILE, the function WdgM_Init shall not check if a NULL pointer is
        passed for the ConfigPtr parameter. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30027</srcid><srcstatus/><internalId>1753</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1430</srcid><srcstatus/><internalId>955</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WdgMCheckpointID</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where
        the symbolic name of the configuration parameter WdgMCheckpointId (see [WdgM.ECUC_WdgM_00306]) is
        not unique compared to all configured WdgMCheckpointIds among all Supervised Entities in the
        scope of the Watchdog Manger module. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1506</srcid><srcstatus/><internalId>1606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00304</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WdgMModeId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where
        the Watchdog Manager modes (see WdgMModeId [WdgM.ECUC_WdgM_00307]) do not have unique identifiers. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_292</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>

    <specobject>
      <id>WDGM.EB.BSWMDGeneration_1</id>
      <status>rejected</status>
      <source>EB</source>
      <version>1</version>
      <description> The WdgM module's generator shall generate a basic software module description
        (BSWMD) based on the WdgM module's configuration containing information on the exclusive
        areas required by the WdgM module's implementation. </description>
      <comment> This requirement is not applicable: The Watchdog Manager module does not have any
        critical sections.
        <!-- Note: see also
      See https://issue.ebgroup.elektrobit.com/browse/ASCPROJECT-324
      and http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/BSWMD
      -->
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>

    <specobject>
      <id>WDGM.EB.BSWMDGeneration_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The WdgM module's generator shall generate a basic software module description
        (BSWMD) based on the WdgM module's configuration containing information on the scheduled
        MainFunctions together with the scheduling period. </description>
      <comment> See https://issue.ebgroup.elektrobit.com/browse/ASCPROJECT-324 and
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/BSWMD </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_Bswmd</srcid><srcstatus/><internalId>1709</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Variables_Multicore</srcid><srcstatus/><internalId>1715</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_Bswmd.arxml.m4_39</srcid><srcstatus/><internalId>1616</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>

    <specobject>
      <id>WDGM.EB.BSWMDGeneration_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The WdgM module's BSWMD shall be generated using a generator mode named
        "generate_swcd". </description>
      <comment> See https://issue.ebgroup.elektrobit.com/browse/ASCPROJECT-324 and
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/BSWMD </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_Bswmd</srcid><srcstatus/><internalId>1709</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Variables_Multicore</srcid><srcstatus/><internalId>1715</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>

    <specobject>
      <id>WDGM.EB.BSWMDGeneration_4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The WdgM module's generator shall generate a basic software module description
        (BSWMD) based on the WdgM module's configuration containing information on the used memory
        abstraction. </description>
      <comment> See https://issue.ebgroup.elektrobit.com/browse/ASCPROJECT-324 and
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/BSWMD </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_Bswmd</srcid><srcstatus/><internalId>1709</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Variables_Multicore</srcid><srcstatus/><internalId>1715</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_Bswmd.arxml.m4_181</srcid><srcstatus/><internalId>1617</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WdgMRteUsage_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The WdgM configuration shall contain a configuration parameter
          <parameter>WdgMRteUsage</parameter> in the container <parameter>WdgMGeneral</parameter>
        with the following properties: Description: This parameter enables the usage of the RTE for
        this module. For an easy integration it is recommended to disable the usage of the RTE at
        the beginning of the integration work. Multiplicity: 1 Type: EcucBooleanParamDef Default
        value: false ConfigurationClass: Pre-compile time - all variants Scope / Dependency: Module </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_663</srcid><srcstatus/><internalId>1517</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>

    <specobject>
      <id>WDGM.EB.RteCheckpointIDs</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM shall specify a computation method for the Implementation Data Type
            <code>WdgM_SupervisedEntityIdType</code> that defines a symbolic name as a constant
          value for each configured CheckpointId of each SupervisionEntity as follows: </para>
        <para>WdgMConf_WdgMCheckpoint_&lt;CheckpointId&gt;</para>
      </description>
      <comment>This is in order to force the Rte the generation of the symbolic name
        values.</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_RteCheckpointIDs</srcid><srcstatus/><internalId>1776</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_RteCheckpointIDs_multicore</srcid><srcstatus/><internalId>1799</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_89</srcid><srcstatus/><internalId>1619</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_633</srcid><srcstatus/><internalId>1620</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>

    <specobject>
      <id>WdgM.EB.PerformReset1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> After the service WdgM_PerformReset has been called, the Watchdog Manager shall
        set the Global Supervision Status to WDGM_GLOBAL_STATUS_STOPPED. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30116</srcid><srcstatus/><internalId>1806</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckPerformReset_SupervisorEnabled_01</srcid><srcstatus/><internalId>2047</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2275</srcid><srcstatus/><internalId>1043</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2284</srcid><srcstatus/><internalId>1045</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>

    <specobject>
      <id>WdgM.EB.PerformReset3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> After the service WdgM_PerformReset has been called, the WdgM_MainFunction shall
        update the trigger condition only with value 0. </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30116</srcid><srcstatus/><internalId>1806</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckPerformReset_SupervisorEnabled_01</srcid><srcstatus/><internalId>2047</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6222</srcid><srcstatus/><internalId>1324</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR40.WDGM206</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM206</source>
      <version>1</version>
      <description> If the Supervised Entity was in Local Supervision Status
        WDGM_LOCAL_STATUS_FAILED AND: 1. (If at least one result of Alive Supervision is incorrect
        and the counter for failed supervision reference cycles + 1 exceeds the configured Failure
        Tolerance (see configuration parameter WdgMFailedAliveSupervisionRefCycleTol [WdgM.ECUC_WdgM_00327])
        OR 2. If at least one result of Deadline Supervision of the Supervised Entity or at least
        one the result of Logical supervision of the Supervised Entity is incorrect), THEN the
        function WdgM_MainFunction shall change the Local Supervision Status to
        WDGM_LOCAL_STATUS_EXPIRED, see Transition (6) in <xref linkend="figureBSWLocalSupervisionStatus"/>. </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4432</srcid><srcstatus/><internalId>1200</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4474</srcid><srcstatus/><internalId>1205</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4485</srcid><srcstatus/><internalId>1206</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30118</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30122</srcid><srcstatus/><internalId>1721</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30121</srcid><srcstatus/><internalId>1722</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30118_Multicore</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30122_Multicore</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30121_Multicore</srcid><srcstatus/><internalId>1846</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR40.WDGM203</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM203</source>
      <version>1</version>
      <description> If the configuration parameter <parameter>WdgMErrorRecoveryEnabled</parameter>
        is disabled AND the Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_OK
        AND: 1. (If the result of at least one Alive Supervision of the Supervised Entity is
        incorrect and a Failure Tolerance greater than zero is configured (see configuration
        parameter WdgMFailedAliveSupervisionRefCycleTol [WdgM.ECUC_WdgM_00327]) AND 2. If all the results of
        Deadline Supervision of the Supervised Entity and all results of Logical supervision of the
        Supervised Entity are correct), THEN the function WdgM_MainFunction shall change the Local
        Supervision Status to WDGM_LOCAL_STATUS_FAILED and increment the counter for failed
        supervision reference cycles (see Transition (3) in <xref linkend="figureBSWLocalSupervisionStatus"/>). </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30118</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30119</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30120</srcid><srcstatus/><internalId>1720</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_0701_MultipleAliveCounters</srcid><srcstatus/><internalId>1827</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30118_Multicore</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30119_Multicore</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30120_Multicore</srcid><srcstatus/><internalId>1844</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4422</srcid><srcstatus/><internalId>1198</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR40.WDGM204</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM204</source>
      <version>1</version>
      <description> If the configuration parameter <parameter>WdgMErrorRecoveryEnabled</parameter>
        is disabled AND the Supervised Entity was in Local Supervision Status
        WDGM_LOCAL_STATUS_FAILED AND: 1. (If the result of at least one Alive Supervision is
        incorrect and the counter for failed supervision reference cycles + 1 does not exceed the
        configured Failure Tolerance (see parameter WdgMFailedAliveSupervisionRefCycleTol
        [WdgM.ECUC_WdgM_00327]) AND 2. If all the results of Deadline Supervisions of the Supervised Entity
        and all the result of Logical Supervision of the Supervised Entity are correct), THEN the
        function WdgM_MainFunction shall keep the Local Supervision Status in
        WDGM_LOCAL_STATUS_FAILED and increment the counter for failed supervision reference cycles,
        see Transition (4) in <xref linkend="figureBSWLocalSupervisionStatus"/>. </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4422</srcid><srcstatus/><internalId>1198</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30120</srcid><srcstatus/><internalId>1720</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30120_Multicore</srcid><srcstatus/><internalId>1844</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR40.WDGM300</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM300</source>
      <version>1</version>
      <description> If the configuration parameter <parameter>WdgMErrorRecoveryEnabled</parameter>
        is disabled AND the Supervised Entity was in Local Supervision Status
        WDGM_LOCAL_STATUS_FAILED AND: 1. (If all the results of Alive Supervision of the Supervised
        Entity are correct and the counter for failed supervision reference cycles is &gt; 1) AND 2.
        If all the result of Deadline Supervision of the Supervised Entity and all the result of
        Logical supervision of the Supervised Entity are correct), THEN the function
        WdgM_MainFunction shall keep the Local Supervision Status in WDGM_LOCAL_STATUS_FAILED and
        decrement the counter for failed supervision reference cycles (see Transition (4) in <xref linkend="figureBSWLocalSupervisionStatus"/>). </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30120</srcid><srcstatus/><internalId>1720</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30120_Multicore</srcid><srcstatus/><internalId>1844</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4444</srcid><srcstatus/><internalId>1201</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR40.WDGM077</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM077</source>
      <version>1</version>
      <description> If the Global Supervision Status was WDGM_GLOBAL_STATUS_FAILED, the Local
        Supervision Status of at least one Supervised Entity is WDGM_LOCAL_STATUS_EXPIRED, and the
        Expired Supervision Tolerance is configured to a value larger than zero (see configuration
        parameter WdgMExpiredSupervisionCycleTol [WdgM.ECUC_WdgM_00329]), then the Expired Cycle Counter
        shall be set to 1 and the function Wdgm_MainFunction shall change the Global Supervision
        Status to WDGM_GLOBAL_STATUS_EXPIRED, see Transition (7) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>. </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4711</srcid><srcstatus/><internalId>1227</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30123</srcid><srcstatus/><internalId>1725</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30123_Multicore</srcid><srcstatus/><internalId>1849</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>

    <specobject>
      <id>WDGM.EB.InternalSupervision1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where
        the referenced source checkpoint of an Internal Transition (see WdgMInternalTransition) in a
        Supervised Entity references a final checkpoint. </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_900</srcid><srcstatus/><internalId>1591</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_InternalLogicalLimit_OK_Multicore</srcid><srcstatus/><internalId>1925</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_InternalLogicalLimit_NOK_missedCP_Multicore</srcid><srcstatus/><internalId>1926</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GENTEST_02_NegativeTestsPart2</srcid><srcstatus/><internalId>1934</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>

    <specobject>
      <id>WDGM.EB.InternalSupervision2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where
        Internal Transitions (see WdgMInternalTransition) in a Supervised Entity do not create a
        connected graph. </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1588</srcid><srcstatus/><internalId>1609</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1630</srcid><srcstatus/><internalId>1613</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_02_NegativeTestsPart2</srcid><srcstatus/><internalId>1934</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>

    <specobject>
      <id>WDGM.EB.InternalSupervision3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where
        an Internal Transition (see WdgMInternalTransition) in an Internal Graph of a Supervised
        Entity is duplicated (i.e. same source and destination checkpoint is already referenced by a
        different Internal Transition). </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1642</srcid><srcstatus/><internalId>1614</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_02_NegativeTestsPart2</srcid><srcstatus/><internalId>1934</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ExternalSupervision1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where
        in any mode the referenced source checkpoint of an External Transition (see
        WdgMExternalTransition) in an External Logical Supervision graph (see
        WdgMExternalLogicalSupervision) references a final checkpoint. </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1617</srcid><srcstatus/><internalId>1610</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_01_NegativeTestsPart1</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ExternalSupervision2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where
        in any mode the External Transitions (see WdgMExternalTransition) in an External Logical
        Supervision graph do not create a connected graph. </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_846</srcid><srcstatus/><internalId>1586</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_906</srcid><srcstatus/><internalId>1592</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Checks.m_47</srcid><srcstatus/><internalId>1615</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_02_NegativeTestsPart2</srcid><srcstatus/><internalId>1934</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GENTEST_05_NegativeTestsPart5</srcid><srcstatus/><internalId>1937</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ExternalSupervision3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where
        an External Transition (see WdgMExternalTransition) in an External Graph is duplicated (i.e.
        same source and destination checkpoint is already referenced by a different External
        Transition). </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_918</srcid><srcstatus/><internalId>1593</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_02_NegativeTestsPart2</srcid><srcstatus/><internalId>1934</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ExtLogSupLimit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where
        more than 254 external transitions per graph are configured. </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_782</srcid><srcstatus/><internalId>1581</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ExternalLogicalLimit_OK_Multicore</srcid><srcstatus/><internalId>1923</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ExternalLogicalLimit_NOK_missedCP_Multicore</srcid><srcstatus/><internalId>1924</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GENTEST_05_NegativeTestsPart6</srcid><srcstatus/><internalId>1938</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>

    <specobject>
      <id>WDGM.EB.NumberOfSEs</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where
        more than 255 Supervised Entities are configured. </description>
      <comment> This is due to Deviation ASCWDGM-305: At most 255 Supervised Entities </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1293</srcid><srcstatus/><internalId>1597</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SupervisedEntityLimit_OK</srcid><srcstatus/><internalId>1927</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SupervisedEntityLimit_NOK_missedCP</srcid><srcstatus/><internalId>1928</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SupervisedEntityLimit_OK_Multicore</srcid><srcstatus/><internalId>1930</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SupervisedEntityLimit_NOK_missedCP_Multicore</srcid><srcstatus/><internalId>1931</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GENTEST_02_NegativeTestsPart2</srcid><srcstatus/><internalId>1934</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>

    <specobject>
      <id>WDGM.EB.NumberOfCheckpoints</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where
        more than 255 Checkpoints are configured for a Supervised Entity. </description>
      <comment> This is due to Deviation ASCWDGM-304: At most 255 checkpoints per Supervision Entity </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1456</srcid><srcstatus/><internalId>1603</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_02_NegativeTestsPart2</srcid><srcstatus/><internalId>1934</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR40.WDGM228</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> When the Deadline Start Checkpoint is reached and this Checkpoint is referenced
        in the active Mode, then the function WdgM_CheckpointReached shall record the current
        timestamp as the timestamp of the reached Deadline Start Checkpoint and set the active flag
        for this Deadline Supervision to true. This is the reference to examining the time of the
        corresponding Deadline End Checkpoint. () </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision</srcid><srcstatus/><internalId>1830</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision_Multicore</srcid><srcstatus/><internalId>1875</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3548</srcid><srcstatus/><internalId>1147</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3571</srcid><srcstatus/><internalId>1148</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ASR40.WDGM229</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description> When the Deadline End Checkpoint is reached and this Checkpoint is referenced in
        the active Mode, and the activity flag (see WdgM.SWS_WdgM_00293.2) of the corresponding
        Deadline Start Checkpoint is set true, then the function WdgM_CheckpointReached shall
        measure the difference between current timestamp and the corresponding Deadline Start
        Checkpoint timestamp. Then, the function shall set the activity flag of the corresponding
        Deadline Start Checkpoint to false. </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision</srcid><srcstatus/><internalId>1830</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision_Multicore</srcid><srcstatus/><internalId>1875</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3649</srcid><srcstatus/><internalId>1153</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>

    <specobject>
      <id>WDGM.EB.LogicalSupervision.ErrorTracking</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>a Checkpoint participates in an Internal or External Supervision Graph, AND</para>
          </listitem>
          <listitem>
            <para>this Supervision Graph is active, AND</para>
          </listitem>
          <listitem>
            <para>the result of Logical Supervision for any Supervised Entity of this Supervision
              Graph is incorrect</para>
          </listitem>
        </itemizedlist>
        <para> then </para>
        <itemizedlist>
          <listitem>
            <para>the result of Logical Supervision for the Supervised Entity of this Checkpoint is
              incorrect, AND</para>
          </listitem>
          <listitem>
            <para>the API <code>WdgM_CheckpointReached()</code> shall return E_NOT_OK.</para>
          </listitem>
        </itemizedlist>
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromLogicalFailureDetection_01</srcid><srcstatus/><internalId>2045</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromLogicalFailureDetection_02</srcid><srcstatus/><internalId>2046</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3822</srcid><srcstatus/><internalId>1164</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>

    <specobject>
      <id>WDGM.EB.Dbg1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>2</version>
      <description>
        <para> The WdgM shall generate a file <code>WdgM_Trace.h</code> which only includes
            <code>Dbg.h</code> if the AUTOSAR module <code>Dbg</code> is available and
            empty macro definitions with prefix DBG_WDGM_ for all macro calls specified in
            WDGM.EB.Dbg4, for core specific functions.</para>
      </description>
      <comment> see
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/D_and_T_Integration#Alternative_2
        (29.05.2013, 10:10) </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_03_FileIncludes_Dbg1</srcid><srcstatus/><internalId>1948</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_03_FileIncludes_Dbg1_Multicore</srcid><srcstatus/><internalId>1958</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Trace.h_10</srcid><srcstatus/><internalId>798</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>

    <specobject>
      <id>WDGM.EB.Dbg2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        <para> The WdgM shall provide a static file <code>WdgM_Trace_Stc.h</code> which includes
            <code>WdgM_Trace.h</code> and contains empty macro definitions with prefix DBG_WDGM_ for
          all macro calls specified in WDGM.EB.Dbg4 if the macro is not already defined (e.g. by
          inclusion of <code>Dbg.h</code> via <code>WdgM_Trace.h</code>). </para>
      </description>
      <comment> see
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/D_and_T_Integration#Alternative_2
        (29.05.2013, 10:10) </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_01_FileStructure_EB</srcid><srcstatus/><internalId>1946</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_04_FileIncludes_Dbg2</srcid><srcstatus/><internalId>1949</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_01_FileStructure_EB_Multicore</srcid><srcstatus/><internalId>1956</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_04_FileIncludes_Dbg2_Multicore</srcid><srcstatus/><internalId>1959</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM_Trace_Stc.h_7</srcid><srcstatus/><internalId>940</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>

    <specobject>
      <id>WDGM.EB.Dbg3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        <para> Each WdgM source file that contains function definitions shall additionally include
          the file <code>WdgM_Trace_Stc.h</code>. </para>
      </description>
      <comment> see
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/D_and_T_Integration#Alternative_2
        (29.05.2013, 10:10) </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_00_FileStructure</srcid><srcstatus/><internalId>1945</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_05_FileIncludes_Dbg3</srcid><srcstatus/><internalId>1950</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_00_FileStructure_Multicore</srcid><srcstatus/><internalId>1955</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_05_FileIncludes_Dbg3_Multicore</srcid><srcstatus/><internalId>1960</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_34</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_197</srcid><srcstatus/><internalId>1415</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_102</srcid><srcstatus/><internalId>1486</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>

    <specobject>
      <id>WDGM.EB.Dbg4</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0</source>
      <version>1</version>
      <description>
        <para> Each internal and external WdgM function shall contain a call to a macro
            <code>DBG_&lt;FUNCNAME&gt;_ENTRY(param1, param2, ...)</code> and
            <code>DBG_&lt;FUNCNAME&gt;_EXIT([ReturnValue,]param1, param2, ...)</code> at the
          beginning and at the end of the function, respectively. </para>
      </description>
	  <furtherinfo>WRN.impl.needscoverage.count: Jet files are transformed into java files, so multiple implementations
      	are counted.</furtherinfo>
      <comment> see
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/D_and_T_Integration#Alternative_2
        (29.05.2013, 10:10) </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1629</srcid><srcstatus/><internalId>850</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1706</srcid><srcstatus/><internalId>855</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1790</srcid><srcstatus/><internalId>859</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1830</srcid><srcstatus/><internalId>861</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2193</srcid><srcstatus/><internalId>870</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2216</srcid><srcstatus/><internalId>872</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1426</srcid><srcstatus/><internalId>954</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1439</srcid><srcstatus/><internalId>957</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1456</srcid><srcstatus/><internalId>960</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1479</srcid><srcstatus/><internalId>967</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1493</srcid><srcstatus/><internalId>969</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1513</srcid><srcstatus/><internalId>972</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1547</srcid><srcstatus/><internalId>976</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1550</srcid><srcstatus/><internalId>977</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1675</srcid><srcstatus/><internalId>990</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1678</srcid><srcstatus/><internalId>991</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1695</srcid><srcstatus/><internalId>993</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1766</srcid><srcstatus/><internalId>999</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1789</srcid><srcstatus/><internalId>1001</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1985</srcid><srcstatus/><internalId>1014</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2000</srcid><srcstatus/><internalId>1016</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2086</srcid><srcstatus/><internalId>1023</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2112</srcid><srcstatus/><internalId>1025</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2163</srcid><srcstatus/><internalId>1030</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2181</srcid><srcstatus/><internalId>1032</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2222</srcid><srcstatus/><internalId>1036</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2233</srcid><srcstatus/><internalId>1038</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2293</srcid><srcstatus/><internalId>1046</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2310</srcid><srcstatus/><internalId>1048</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2354</srcid><srcstatus/><internalId>1053</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2375</srcid><srcstatus/><internalId>1055</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2546</srcid><srcstatus/><internalId>1070</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2564</srcid><srcstatus/><internalId>1072</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2641</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2657</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2699</srcid><srcstatus/><internalId>1093</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2719</srcid><srcstatus/><internalId>1094</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2922</srcid><srcstatus/><internalId>1108</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2942</srcid><srcstatus/><internalId>1109</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2998</srcid><srcstatus/><internalId>1114</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3025</srcid><srcstatus/><internalId>1116</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3109</srcid><srcstatus/><internalId>1123</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3136</srcid><srcstatus/><internalId>1125</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3220</srcid><srcstatus/><internalId>1132</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3260</srcid><srcstatus/><internalId>1134</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3405</srcid><srcstatus/><internalId>1142</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3472</srcid><srcstatus/><internalId>1143</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3520</srcid><srcstatus/><internalId>1145</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3540</srcid><srcstatus/><internalId>1146</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3617</srcid><srcstatus/><internalId>1151</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3637</srcid><srcstatus/><internalId>1152</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3704</srcid><srcstatus/><internalId>1157</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3722</srcid><srcstatus/><internalId>1158</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3743</srcid><srcstatus/><internalId>1159</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3762</srcid><srcstatus/><internalId>1160</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3780</srcid><srcstatus/><internalId>1162</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3798</srcid><srcstatus/><internalId>1163</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3845</srcid><srcstatus/><internalId>1166</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3883</srcid><srcstatus/><internalId>1167</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3926</srcid><srcstatus/><internalId>1171</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3945</srcid><srcstatus/><internalId>1172</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3958</srcid><srcstatus/><internalId>1174</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3978</srcid><srcstatus/><internalId>1175</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3991</srcid><srcstatus/><internalId>1177</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4007</srcid><srcstatus/><internalId>1178</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4184</srcid><srcstatus/><internalId>1186</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4410</srcid><srcstatus/><internalId>1197</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4565</srcid><srcstatus/><internalId>1212</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4578</srcid><srcstatus/><internalId>1213</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4616</srcid><srcstatus/><internalId>1220</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4634</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4751</srcid><srcstatus/><internalId>1231</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4769</srcid><srcstatus/><internalId>1232</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4782</srcid><srcstatus/><internalId>1233</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4794</srcid><srcstatus/><internalId>1234</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4824</srcid><srcstatus/><internalId>1237</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4858</srcid><srcstatus/><internalId>1238</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4882</srcid><srcstatus/><internalId>1241</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4903</srcid><srcstatus/><internalId>1242</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4916</srcid><srcstatus/><internalId>1243</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4934</srcid><srcstatus/><internalId>1244</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4954</srcid><srcstatus/><internalId>1247</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4971</srcid><srcstatus/><internalId>1248</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4979</srcid><srcstatus/><internalId>1249</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4999</srcid><srcstatus/><internalId>1250</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5017</srcid><srcstatus/><internalId>1252</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5033</srcid><srcstatus/><internalId>1253</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5041</srcid><srcstatus/><internalId>1254</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5053</srcid><srcstatus/><internalId>1255</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5060</srcid><srcstatus/><internalId>1256</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5085</srcid><srcstatus/><internalId>1257</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5120</srcid><srcstatus/><internalId>1260</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5369</srcid><srcstatus/><internalId>1270</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5393</srcid><srcstatus/><internalId>1273</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5415</srcid><srcstatus/><internalId>1274</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5428</srcid><srcstatus/><internalId>1275</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5454</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5500</srcid><srcstatus/><internalId>1281</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5515</srcid><srcstatus/><internalId>1282</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5523</srcid><srcstatus/><internalId>1283</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5541</srcid><srcstatus/><internalId>1284</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5556</srcid><srcstatus/><internalId>1286</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5573</srcid><srcstatus/><internalId>1287</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5581</srcid><srcstatus/><internalId>1288</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5599</srcid><srcstatus/><internalId>1289</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5614</srcid><srcstatus/><internalId>1291</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5629</srcid><srcstatus/><internalId>1292</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5638</srcid><srcstatus/><internalId>1293</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5664</srcid><srcstatus/><internalId>1294</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5693</srcid><srcstatus/><internalId>1297</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5736</srcid><srcstatus/><internalId>1299</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5749</srcid><srcstatus/><internalId>1300</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5891</srcid><srcstatus/><internalId>1303</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5905</srcid><srcstatus/><internalId>1304</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5922</srcid><srcstatus/><internalId>1305</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6021</srcid><srcstatus/><internalId>1312</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6036</srcid><srcstatus/><internalId>1313</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6116</srcid><srcstatus/><internalId>1316</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6132</srcid><srcstatus/><internalId>1317</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6148</srcid><srcstatus/><internalId>1318</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6166</srcid><srcstatus/><internalId>1319</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6188</srcid><srcstatus/><internalId>1320</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6203</srcid><srcstatus/><internalId>1321</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6236</srcid><srcstatus/><internalId>1326</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6250</srcid><srcstatus/><internalId>1327</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6279</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6299</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6406</srcid><srcstatus/><internalId>1335</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6422</srcid><srcstatus/><internalId>1336</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6521</srcid><srcstatus/><internalId>1339</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6538</srcid><srcstatus/><internalId>1340</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6625</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6638</srcid><srcstatus/><internalId>1347</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6683</srcid><srcstatus/><internalId>1352</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6698</srcid><srcstatus/><internalId>1353</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6728</srcid><srcstatus/><internalId>1355</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_86</srcid><srcstatus/><internalId>1365</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_96</srcid><srcstatus/><internalId>1366</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_103</srcid><srcstatus/><internalId>1367</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_109</srcid><srcstatus/><internalId>1368</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_116</srcid><srcstatus/><internalId>1369</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_122</srcid><srcstatus/><internalId>1370</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_127</srcid><srcstatus/><internalId>1371</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_130</srcid><srcstatus/><internalId>1372</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_131</srcid><srcstatus/><internalId>1373</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_132</srcid><srcstatus/><internalId>1374</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_134</srcid><srcstatus/><internalId>1375</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_137</srcid><srcstatus/><internalId>1377</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_141</srcid><srcstatus/><internalId>1379</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_144</srcid><srcstatus/><internalId>1381</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_146</srcid><srcstatus/><internalId>1382</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_149</srcid><srcstatus/><internalId>1384</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_152</srcid><srcstatus/><internalId>1385</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_158</srcid><srcstatus/><internalId>1387</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_162</srcid><srcstatus/><internalId>1388</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_165</srcid><srcstatus/><internalId>1390</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_166</srcid><srcstatus/><internalId>1391</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_168</srcid><srcstatus/><internalId>1393</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_169</srcid><srcstatus/><internalId>1394</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_172</srcid><srcstatus/><internalId>1396</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_175</srcid><srcstatus/><internalId>1398</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_177</srcid><srcstatus/><internalId>1399</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_180</srcid><srcstatus/><internalId>1401</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_183</srcid><srcstatus/><internalId>1402</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_189</srcid><srcstatus/><internalId>1404</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_193</srcid><srcstatus/><internalId>1405</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java_31</srcid><srcstatus/><internalId>1408</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java_35</srcid><srcstatus/><internalId>1409</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java_36</srcid><srcstatus/><internalId>1410</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java_40</srcid><srcstatus/><internalId>1411</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java_41</srcid><srcstatus/><internalId>1412</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java_45</srcid><srcstatus/><internalId>1413</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_462</srcid><srcstatus/><internalId>1416</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_482</srcid><srcstatus/><internalId>1417</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_501</srcid><srcstatus/><internalId>1418</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_512</srcid><srcstatus/><internalId>1419</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_531</srcid><srcstatus/><internalId>1420</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_542</srcid><srcstatus/><internalId>1421</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_562</srcid><srcstatus/><internalId>1422</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_577</srcid><srcstatus/><internalId>1423</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_593</srcid><srcstatus/><internalId>1424</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_600</srcid><srcstatus/><internalId>1425</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_617</srcid><srcstatus/><internalId>1426</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_624</srcid><srcstatus/><internalId>1427</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_646</srcid><srcstatus/><internalId>1428</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_652</srcid><srcstatus/><internalId>1430</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_666</srcid><srcstatus/><internalId>1431</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_672</srcid><srcstatus/><internalId>1433</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_694</srcid><srcstatus/><internalId>1434</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_700</srcid><srcstatus/><internalId>1436</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_714</srcid><srcstatus/><internalId>1437</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_720</srcid><srcstatus/><internalId>1439</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_735</srcid><srcstatus/><internalId>1440</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_741</srcid><srcstatus/><internalId>1442</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_755</srcid><srcstatus/><internalId>1443</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_761</srcid><srcstatus/><internalId>1445</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_774</srcid><srcstatus/><internalId>1446</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_780</srcid><srcstatus/><internalId>1448</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_802</srcid><srcstatus/><internalId>1449</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_825</srcid><srcstatus/><internalId>1451</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_843</srcid><srcstatus/><internalId>1452</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_849</srcid><srcstatus/><internalId>1454</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_871</srcid><srcstatus/><internalId>1456</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_876</srcid><srcstatus/><internalId>1457</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_891</srcid><srcstatus/><internalId>1459</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_896</srcid><srcstatus/><internalId>1460</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_919</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_925</srcid><srcstatus/><internalId>1464</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_939</srcid><srcstatus/><internalId>1465</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_945</srcid><srcstatus/><internalId>1467</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_960</srcid><srcstatus/><internalId>1468</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_966</srcid><srcstatus/><internalId>1470</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_980</srcid><srcstatus/><internalId>1471</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_986</srcid><srcstatus/><internalId>1473</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_999</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1005</srcid><srcstatus/><internalId>1476</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1027</srcid><srcstatus/><internalId>1477</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1050</srcid><srcstatus/><internalId>1479</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1068</srcid><srcstatus/><internalId>1480</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1074</srcid><srcstatus/><internalId>1482</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_148</srcid><srcstatus/><internalId>1488</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_171</srcid><srcstatus/><internalId>1489</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_187</srcid><srcstatus/><internalId>1490</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_210</srcid><srcstatus/><internalId>1491</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_226</srcid><srcstatus/><internalId>1492</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_249</srcid><srcstatus/><internalId>1493</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ResetActiveFlags1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If the WdgM switches to a new WdgM Mode, then the WdgM shall set the active flag of
          all Deadline Supervisions referenced in the new WdgM Mode to inactive (reset possible old
          Supervision Data). </para>
        <para> Note: Since a Checkpoint can be part of at most one Deadline Supervision (see
          WDGM.ASR40.WDGM314), it is guaranteed that this Graph is deactivated in the new WdgM Mode.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckDeadlineInternalLogicalResetFlag_SupervisorEnabled_01</srcid><srcstatus/><internalId>2060</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6014</srcid><srcstatus/><internalId>1311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ResetActiveFlags2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If the WdgM switches to a new WdgM Mode, then the WdgM shall set the active flag of
          all External Logical Supervision Graphs referenced in the new WdgM Mode to inactive (reset
          possible old Supervision Data). </para>
        <para> Note: Since a Checkpoint can be part of at most one Supervision Graph (see
          WDGM.ASR40.WDGM309, WDGM.ASR40.WDGM310), it is guaranteed that this Graph is deactivated
          in the new WdgM Mode. </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckExternalLogicalResetFlag_SupervisorEnabled_01</srcid><srcstatus/><internalId>2062</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5958</srcid><srcstatus/><internalId>1307</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5992</srcid><srcstatus/><internalId>1309</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6062</srcid><srcstatus/><internalId>1314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ResetActiveFlags3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If the WdgM switches to a new WdgM Mode, then for each Supervised Entity which has no
          Internal Logical Supervision configured in the old WdgM Mode and has an Internal Logical
          Supervision configured in the new WdgM Mode, the WdgM shall set the active of this
          Internal Logical Supervision to inactive (reset possible old Supervision Data). </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckDeadlineInternalLogicalResetFlag_SupervisorEnabled_01</srcid><srcstatus/><internalId>2060</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInternalLogicalResetFlag_SupervisorEnabled_01</srcid><srcstatus/><internalId>2061</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5958</srcid><srcstatus/><internalId>1307</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5992</srcid><srcstatus/><internalId>1309</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6062</srcid><srcstatus/><internalId>1314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ActiveFlags4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If the WdgM switches to a new WdgM Mode, then for each Supervised Entity which has an
          Internal Logical Supervision configured in the old WdgM Mode and has an Internal Logical
          Supervision configured in the new WdgM Mode, the WdgM shall keep the active flag (maintain
          old Supervision Data). </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckDeadlineInternalLogicalResetFlag_SupervisorEnabled_01</srcid><srcstatus/><internalId>2060</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInternalLogicalResetFlag_SupervisorEnabled_01</srcid><srcstatus/><internalId>2061</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5952</srcid><srcstatus/><internalId>1306</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5975</srcid><srcstatus/><internalId>1308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>

    <specobject>
      <id>WDGM.EB.UpdateAliveCounter</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The <function>WdgM_UpdateAliveCounter()</function> routine shall check if in the
        current mode there is no Alive Supervision (WdgMAliveSupervision) is configured even if the
        Supervised Entity is active (due to active Deadline Supervision or Logical Supervision) and
        return E_NOT_OK without any further execution of this routine. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckUpdateAliveCounterReturnError</srcid><srcstatus/><internalId>2059</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2061</srcid><srcstatus/><internalId>1020</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>

   <specobject>
      <id>WDGM.EB.ResetAliveCounter</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          If the WdgM switches to a new WdgM Mode, then for each
          Supervised Entity which has an Alive Supervision configured
          in the old WdgM Mode and has an Alive Supervision configured in the new
          WdgM Mode, WdgM shall reset the Alive Counter of all Alive Supervision
          referenced in the new WdgM Mode.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30145_SameAliveSupervision</srcid><srcstatus/><internalId>1736</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2876</srcid><srcstatus/><internalId>1105</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WdgMCheckpointIDValues</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where
        the CheckpointIds of a Supervised Entity (see WdgMCheckpointId [WdgM.ECUC_WdgM_00304]) are not
        zero-based and dense. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_05_NegativeTestsPart5</srcid><srcstatus/><internalId>1937</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1487</srcid><srcstatus/><internalId>1604</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1493</srcid><srcstatus/><internalId>1605</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00304</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.WDGM225.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          When the Watchdog Manager request a restart/shutdown of an OS Application
          then the Watchdog Manager shall stop monitor the Supervised Entities executed 
          from the restarted/shutdown Os Applications.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.PartitionStateMachine</srcid><srcstatus/><internalId>1659</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_DifferentPartition</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_InternalTransition</srcid><srcstatus/><internalId>1902</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_FailedAliveSupervisionRefCycleTol</srcid><srcstatus/><internalId>1904</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_ReferenceCycle</srcid><srcstatus/><internalId>1905</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Two_WdgMRequestPartitionReset_ReferenceCycle</srcid><srcstatus/><internalId>1906</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_DeadlineSupervision</srcid><srcstatus/><internalId>1907</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_GetApplicationState_E_NOT_OK</srcid><srcstatus/><internalId>1908</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.WDGM225.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          When any monitored OS Application has finished restarting then 
          the Watchdog Manager shall start to monitor the Supervised Entities
          from the restarted Os Applications.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.PartitionStateMachine</srcid><srcstatus/><internalId>1659</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_DifferentPartition</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_InternalTransition</srcid><srcstatus/><internalId>1902</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_FailedAliveSupervisionRefCycleTol</srcid><srcstatus/><internalId>1904</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_ReferenceCycle</srcid><srcstatus/><internalId>1905</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Two_WdgMRequestPartitionReset_ReferenceCycle</srcid><srcstatus/><internalId>1906</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_DeadlineSupervision</srcid><srcstatus/><internalId>1907</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_GetApplicationState_E_NOT_OK</srcid><srcstatus/><internalId>1908</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.WDGM225.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          If the Local Supervision Status of a Supervised Entity changes to WDGM_LOCAL_STATUS_FAILED
          AND
          counter for failed supervision reference cycles does not exceed the configured Failure
          Tolerance (see parameter WdgMFailedAliveSupervisionRefCycleTol [WdgM.ECUC_WdgM_00327])
          AND
          this Supervised Entity has a corresponding OS Application configured (see configuration
          parameter WdgMOsApplicationRef [WdgM.ASR40.ECUC_WdgM_00346]),
          THEN
          the Watchdog Manager module shall delay the restart/shutdown of the corresponding partition
          for the configured OS Application until failed supervision reference cycles exceeds the 
          configured Failure Tolerance.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_FailedAliveSupervisionRefCycleTol</srcid><srcstatus/><internalId>1904</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4198</srcid><srcstatus/><internalId>1187</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.GetAllExpiredSEID.API</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          Service Name       WdgM_GetAllExpiredSEID
          Syntax             Std_ReturnType WdgM_GetAllExpiredSEID (
                               WdgM_SupervisedEntityIdType* ExpiredSEID,
                               uint8*                       NoOfExpiredSEID
                             )
          Service ID [hex]   0x1c
          Sync/Async         Synchronous
          Reentrancy         Reentrant
          Parameters (in)    None
          Parameters (inout) None
          Parameters (out)   ExpiredSEID     The supervised entities that expired
                             NoOfExpiredSEID The number of expired supervised entities
          Return value       Std_ReturnType  E_OK: The currently expired supervised entities are successfully returned
                                             E_NOT_OK: The currently expired supervised entities failed to return
          Description        Returns the supervised entities that expired up until the API's call.
          Available via      WdgM.h
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_SingleCore</srcid><srcstatus/><internalId>1895</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_PowerOnReset_SingleCore</srcid><srcstatus/><internalId>1896</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_ExpireAgainSameSE_SingleCore</srcid><srcstatus/><internalId>1897</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_MultiCore</srcid><srcstatus/><internalId>1911</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_MultiCore_SatelliteCall</srcid><srcstatus/><internalId>1912</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_PowerOnReset_MultiCore</srcid><srcstatus/><internalId>1913</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_ExpireAgainSameSE_MultiCore</srcid><srcstatus/><internalId>1914</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_519</srcid><srcstatus/><internalId>903</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6737</srcid><srcstatus/><internalId>1357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>

    <specobject>
      <id>WDGM.EB.GetAllExpiredSEID.ConfigParam</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          Name WdgMGetAllExpiredSEIDs
          Parent Container WdgMGeneral
          Description Allows the user to retrieve all the expired supervised entities using the WdgM_GetAllExpiredSEID() API.
                   true: the WdgM_GetAllExpiredSEID() API can be called to retrieve all the expired supervised entities.
                   false: the expired supervised entities cannot be retrieved.
          Multiplicity 1
          Type EcucBooleanParamDef
          Default value false
          Post-Build Variant Value false
          Value Configuration Class Pre-compile time X All Variants
                                    Link time        --
                                    Post-build time  --
          Scope / Dependency scope: local
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_692</srcid><srcstatus/><internalId>1518</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>

    <specobject>
      <id>WDGM.EB.GetAllExpiredSEID.Availability</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          If the WdgMGetAllExpiredSEIDs configuration parameter is enabled, the WdgM_GetAllExpiredSEID() API shall be available for calling.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_SingleCore</srcid><srcstatus/><internalId>1895</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_PowerOnReset_SingleCore</srcid><srcstatus/><internalId>1896</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_ExpireAgainSameSE_SingleCore</srcid><srcstatus/><internalId>1897</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_MultiCore</srcid><srcstatus/><internalId>1911</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_MultiCore_SatelliteCall</srcid><srcstatus/><internalId>1912</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_PowerOnReset_MultiCore</srcid><srcstatus/><internalId>1913</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_ExpireAgainSameSE_MultiCore</srcid><srcstatus/><internalId>1914</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6735</srcid><srcstatus/><internalId>1356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>

    <specobject>
      <id>WDGM.EB.GetAllExpiredSEID.Params.NULL_PTR</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          If a NULL pointer is passed to the WdgM_GetAllExpiredSEID() API, the function shall immediately return with E_NOT_OK.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_NullPointer</srcid><srcstatus/><internalId>1894</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_NullPointer_MultiCore</srcid><srcstatus/><internalId>1910</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6750</srcid><srcstatus/><internalId>1358</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>

    <specobject>
      <id>WDGM.EB.GetAllExpiredSEID.Params.DetReport</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          If a NULL pointer is passed to the WdgM_GetAllExpiredSEID() API, the function shall report WDGM_E_INV_POINTER to the Det module (when WdgMDevErrorDetect is enabled).
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_NullPointer</srcid><srcstatus/><internalId>1894</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_NullPointer_MultiCore</srcid><srcstatus/><internalId>1910</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6753</srcid><srcstatus/><internalId>1359</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>

    <specobject>
      <id>WDGM.EB.GetAllExpiredSEID.MasterInstanceOnly</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          If multicore is enabled, the WdgM_GetAllExpiredSEID() API shall only be callable from the master instance.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_MultiCore</srcid><srcstatus/><internalId>1911</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_MultiCore_SatelliteCall</srcid><srcstatus/><internalId>1912</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6766</srcid><srcstatus/><internalId>1360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>

    <specobject>
      <id>WDGM.EB.GetAllExpiredSEID.SatelliteCall.Return</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          If multicore is enabled and the WdgM_GetAllExpiredSEID() API is called from a satellite instance, the function shall immediately return with E_NOT_OK.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_MultiCore_SatelliteCall</srcid><srcstatus/><internalId>1912</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6767</srcid><srcstatus/><internalId>1361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>

    <specobject>
      <id>WDGM.EB.GetAllExpiredSEID.SatelliteCall.DetError</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          If multicore is enabled and the WdgM_GetAllExpiredSEID() API is called from a satellite instance, the function shall report WDGM_E_PARAM_WRONG_CORE_ID to the Det module (when WdgMDevErrorDetect is enabled).
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_MultiCore_SatelliteCall</srcid><srcstatus/><internalId>1912</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6787</srcid><srcstatus/><internalId>1363</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>

    <specobject>
      <id>WDGM.EB.GetAllExpiredSEID.MainFunction.Write</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          When the WdgM_MainFunction() is cyclically called, each expired supervised entity shall be saved in a core-specific array.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5280</srcid><srcstatus/><internalId>1267</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable27</srcid><srcstatus/><internalId>1690</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable28</srcid><srcstatus/><internalId>1691</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>

    <specobject>
      <id>WDGM.EB.GetAllExpiredSEID.CoreSpecific.Read</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          The WdgM_GetAllExpiredSEID() API shall read all core-specific arrays that contain the expired supervised entities.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1724</srcid><srcstatus/><internalId>856</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>

    <specobject>
      <id>WDGM.EB.GetAllExpiredSEID.CoreSpecific.Reset</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          If the core-specific retrieval of expired supervised entities is successful, the WdgM_GetAllExpiredSEID() API shall reset the core-specific arrays before returning.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_PowerOnReset_SingleCore</srcid><srcstatus/><internalId>1896</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GetAllExpiredSEID_PowerOnReset_MultiCore</srcid><srcstatus/><internalId>1913</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6773</srcid><srcstatus/><internalId>1362</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>
    
   <specobject>
      <id>WDGM.EB.TemporaryDisableAlive</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          If WdgMSetModeSynchron configuration parameter is set and a mode switch is requested
          then Alive Supervision shall be disabled until the next <function>WdgM_MainFunction</function>.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable32</srcid><srcstatus/><internalId>1695</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>

    <specobject>
      <id>WDGM.EB.NumberOfInternalCheckpointInitialRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager configuration generator shall reject configurations where in an Internal 
        Logical Supervision more than one initial reference is configured. </description>
      <comment> This is due to Deviation: Multiplicity of <code>WdgMInternalCheckpointInitialRef</code> </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_1402</srcid><srcstatus/><internalId>1602</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.WdgM.InternalCheckpointInitialRef</srcid><srcstatus/><internalId>760</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WDGM003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall contain a configuration parameter
            <parameter>WdgMDefaultASRServiceAPI</parameter> in container
            <parameter>WdgMServiceAPI</parameter> in container <parameter>WdgMGeneral</parameter>
          with the following properties: </para>
        <para>Description: Defines the default AUTOSAR service API. AUTOSAR_40 = AUTOSAR 4.0 service 
          API is the default one, AUTOSAR_43 = AUTOSAR 4.3 service API is the default one, NONE = No
          default AUTOSAR service API is provided. </para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucEnumerationParamDef</para>
        <para>Range: AUTOSAR_40, AUTOSAR_43, NONE</para>
        <para>Default value: AUTOSAR_40</para>
        <para>ConfigurationClass: Pre-compile time - all variants</para>
        <para>Scope / Dependency: Module</para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_01_SvcCompDescr</srcid><srcstatus/><internalId>1965</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_965</srcid><srcstatus/><internalId>1526</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WDGM015</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The Watchdog Manager shall generate the following files conforming to the generated
          default AUTOSAR schema via generator mode <code>generate_swcd</code>: </para>
        <para>
          <code>WdgM_swc_interface.arxml</code>: Contains the AUTOSAR 4.0 and/or AUTOSAR 4.3 data
          type and port interface type definitions of the WdgM Service Component. </para>
        <para>
          <code>WdgM_swc_internal.arxml</code>: Contains the AUTOSAR 4.0 and/or AUTOSAR 4.3
          implementation and internal behavior elements of the WdgM Service Component. </para>
        <para>
          <code>WdgM_Bswmd.arxml</code>: Contains the Basic Software Module Description of the
          Watchdog Manager. </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30137</srcid><srcstatus/><internalId>1773</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration</srcid><srcstatus/><internalId>1778</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Multicore</srcid><srcstatus/><internalId>1783</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ASR43_ServiceGeneration_Supervisor</srcid><srcstatus/><internalId>1788</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30137_multicore</srcid><srcstatus/><internalId>1796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WDGM117</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> Only if <code>WdgMServiceAPI are disabled</code> or <code>DefaultASRServiceAPI=NONE</code>
        the file <code>WdgM_Types.h</code> shall  provide the typedef for
            <code>WdgM_SupervisedEntityIdType</code>. </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_00_DataTypes</srcid><srcstatus/><internalId>1814</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Types.h_169</srcid><srcstatus/><internalId>801</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WDGM118</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> Only if <code>WdgMServiceAPI are disabled</code> or <code>DefaultASRServiceAPI=NONE</code>
         the file <code>WdgM_Types.h</code> shall provide the typedef for <code>WdgM_CheckpointIdType</code>.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_00_DataTypes</srcid><srcstatus/><internalId>1814</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Types.h_178</srcid><srcstatus/><internalId>802</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WDGM029</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall contain a configuration parameter
            <parameter>WdgMBSWCompatibilityMode</parameter> in container
            <parameter>WdgMGeneral</parameter> with the following properties: </para>
        <para>Description: Configures whether the AUTOSAR BSW APIs shall be compatible to AUTOSAR 
          4.0 or AUTOSAR 4.3. AUTOSAR_40 = AUTOSAR 4.0 BSW APIs are provided (e.g. WdgM_SetMode with
          CallerId), AUTOSAR_43 = AUTOSAR 4.3 BSW APIs are provided (e.g. WdgM_SetMode without
          CallerId). </para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucEnumerationParamDef</para>
        <para>Range: AUTOSAR_40, AUTOSAR_43</para>
        <para>Default value: AUTOSAR_40</para>
        <para>ConfigurationClass: Pre-compile time - all variants</para>
        <para>Scope / Dependency: Module</para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_05_ASR43RteAPIs</srcid><srcstatus/><internalId>1969</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_715</srcid><srcstatus/><internalId>1519</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WDGM155</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>Service name: WdgM_UpdateAliveCounter</para>
        <para>Syntax: <code>Std_ReturnType WdgM_UpdateAliveCounter( WdgM_SupervisedEntityIdType SEId
            )</code>
        </para>
        <para>Service ID[hex]: 0x04</para>
        <para>Sync/Async: Synchronous</para>
        <para>Reentrancy: Reentrant</para>
        <para>Parameters (in): SEId - Identifier of the entity under control of the WdgM whose alive
          counter shall be updated</para>
        <para>Parameters (inout): None</para>
        <para>Parameters (out): None</para>
        <para>Return value: Std_ReturnType - E_OK: Successfully updated alive counter, E_NOT_OK:
          Update failed</para>
        <para>Description: Gives alive indications to the Watchdog Manager.</para>
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_03_RteAPIs</srcid><srcstatus/><internalId>1967</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>

    <specobject>
      <id>WDGM.EB.WDGM200</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>Name: WdgM_SupervisedEntityIdType</para>
        <para>Type: uint16</para>
        <para>Range: 0-[Number of Supervised Entities] -- The range of valid IDs depends on the
          number of configured Supervised Entities and on the chosen platform type </para>
        <para>Description: This type identifies an individual Supervised Entity for the Watchdog
          Manager.</para>
      </description>
      <comment> uint16 type is always used independent of the number of configured SEs </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_ImpTest_04_02_Types</srcid><srcstatus/><internalId>1966</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020111_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMGeneral</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMNumberOfCores</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucIntegerParamDef</para>
        <para>Default value: 1</para>
        <para>ConfigurationClass: Pre-compile time - all variants</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: This parameter defines the maximum number of cores on which WdgM is
          distributed. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_Variables_Multicore</srcid><srcstatus/><internalId>1715</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SECoreId_Range_Multicore</srcid><srcstatus/><internalId>1716</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatellitesNotSwitchedToNewMode_Multicore</srcid><srcstatus/><internalId>2079</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Cfg.h.m4_751</srcid><srcstatus/><internalId>771</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_749</srcid><srcstatus/><internalId>1520</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020113_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMGeneral</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMMasterCoreId</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucIntegerParamDef</para>
        <para>Default value: 0</para>
        <para>ConfigurationClass: Pre-compile time - all variants</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: This parameter maps the master instance of WdgM to a specific Os Core ID.
        </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_Variables_Multicore</srcid><srcstatus/><internalId>1715</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SECoreId_Range_Multicore</srcid><srcstatus/><internalId>1716</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatellitesNotSwitchedToNewMode_Multicore</srcid><srcstatus/><internalId>2079</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Cfg.h.m4_827</srcid><srcstatus/><internalId>773</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_786</srcid><srcstatus/><internalId>1521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020120_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisedEntity</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMSupervisedEntityCoreId</parameter></para>
        <para>Multiplicity: 0..65535</para>
        <para>Type: EcucIntegerParamDef</para>
        <para>Default value: 0</para>
        <para>ConfigurationClass: Pre-compile time - all variants</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: This parameter maps to which core the SupervisedEntity belongs to.</para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_Variables_Multicore</srcid><srcstatus/><internalId>1715</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SECoreId_Range_Multicore</srcid><srcstatus/><internalId>1716</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_GlobalLocalStatus_Multicore</srcid><srcstatus/><internalId>2075</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SEId_Wrong_Core_Multicore</srcid><srcstatus/><internalId>2076</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_1000</srcid><srcstatus/><internalId>1527</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020119_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMGeneral</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMMasterWaitSlaveModeSwitch</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucIntegerParamDef</para>
        <para>Default value: 1</para>
        <para>ConfigurationClass: Pre-compile time - all variants</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: This parameter defines the amount of time the WdgM master instance shall
          wait until WdgM satellite Instances finish the mode switch operation. Unit: Number of WdgM
          master instance main functions.</para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_Variables_Multicore</srcid><srcstatus/><internalId>1715</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SECoreId_Range_Multicore</srcid><srcstatus/><internalId>1716</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatellitesNotSwitchedToNewMode_Multicore</srcid><srcstatus/><internalId>2079</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Cfg.h.m4_834</srcid><srcstatus/><internalId>774</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_822</srcid><srcstatus/><internalId>1522</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020110_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMGetCoreIdCallout</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - all variants</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: Defines the implemented API name for getting the information regarding
          the core id. This API shall have the following syntax: <itemizedlist>
            <listitem>
              <para>Syntax: <function> uint16 [ConfiguredAPIName](void) </function></para>
            </listitem>
            <listitem>
              <para>Parameter (in): <code>None</code>
              </para>
            </listitem>
            <listitem>
              <para>Return value: The return value is the unique ID of the core. </para>
            </listitem>
            <listitem>
              <para>Description: The function returns a unique core identifier. </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckWdgMGetCoreIdCallout_SupervisorEnabled_01</srcid><srcstatus/><internalId>2063</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_849</srcid><srcstatus/><internalId>1558</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>

    <specobject>
      <id>WDGM.EB.MulticoreInit.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If multicore is enabled and when all the instances (satellites and master) are
        initialized the master instance of the WdgM shall set the initialization status of the
        module to TRUE .</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2571</srcid><srcstatus/><internalId>1074</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_InitSatelliteBeforeMaster_Multicore</srcid><srcstatus/><internalId>2086</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>

 <!--    <specobject>
      <id>WDGM.EB.MulticoreInit.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If multicore is enabled and at least one instance (satellites and master) of the
        module was not able to initilize the master instance of the WdgM shall set the
        initialization status of the module to FALSE.</description>
      <needscoverage>
        <needsobj>impl</needsobj>
        <needsobj>swuts</needsobj>
      </needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EB_TIMEPM010852</linksto>
          <dstversion>1</dstversion>
        </provcov>
        <provcov>
          <linksto>EB_TIMEPM010866</linksto>
          <dstversion>1</dstversion>
        </provcov>
        <provcov>
          <linksto>EB_TIMEPM010883</linksto>
          <dstversion>1</dstversion>
        </provcov>
      </providescoverage>
    </specobject> -->

    <specobject>
      <id>WDGM.EB.MulticoreInit.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description> If multicore is enabled the master instance of the WdgM shall report a DET or 
        a DEM error if any satellite instance failed to initilize in the number of WdgM_Mainfunction 
        equal to WdgMMasterWaitSlaveModeSwitch.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6658</srcid><srcstatus/><internalId>1348</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6662</srcid><srcstatus/><internalId>1350</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_NotAllSatellitesInitialised_Multicore</srcid><srcstatus/><internalId>2077</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>

    <specobject>
      <id>WDGM.EB.MulticoreInit.4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>If multicore is enabled, WdgM master instance shall have access to the
        initialization status from all the cores instances.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1109</srcid><srcstatus/><internalId>834</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1511</srcid><srcstatus/><internalId>848</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GlobalInitializationStatus_Multicore</srcid><srcstatus/><internalId>2078</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable15</srcid><srcstatus/><internalId>1678</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>

    <specobject>
      <id>WDGM.EB.MulticoreDeInit</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If multicore is enabled the satellite instance of the WdgM shall announce the master
        instance of a succesfully de-init.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2693</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GlobalInitializationStatus_Multicore</srcid><srcstatus/><internalId>2078</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_OnlyMasterDeinitialised_Multicore</srcid><srcstatus/><internalId>2082</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_DeInitSatelliteBeforeMaster_Multicore1</srcid><srcstatus/><internalId>2085</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_DeInitSatelliteBeforeMaster_Multicore2</srcid><srcstatus/><internalId>2087</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>

    <specobject>
      <id>WDGM.EB.MulticoreSwitchMode.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If multicore is enabled and WdgM_SetMode was called with a new mode WdgM master
        instance shall check that all satellite instances changed to the new mode in the time given by
        parameter WdgMMasterWaitSlaveModeSwitch.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5224</srcid><srcstatus/><internalId>1262</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SatellitesSwitchedToNewMode_Multicore</srcid><srcstatus/><internalId>2080</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable33</srcid><srcstatus/><internalId>1696</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>

    <specobject>
      <id>WDGM.EB.MulticoreSwitchMode.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description> If multicore is enabled and WdgM_SetMode was called with a new mode WdgM master
        instance shall report a DET or a DEM if any of the satellite instances failed to switch to the new mode
        in the time given by parameter WdgMMasterWaitSlaveModeSwitch.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6659</srcid><srcstatus/><internalId>1349</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6663</srcid><srcstatus/><internalId>1351</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SatellitesNotSwitchedToNewMode_Multicore</srcid><srcstatus/><internalId>2079</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>

    <specobject>
      <id>WDGM.EB.MulticoreSwitchMode.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>If multicore is enabled and a mode switch is performed, WdgM satellite instance shall
        announce the master instance of a successfully switch mode.</description>
      <comment>The initialization is a particular case of mode switch to the Initial Mode.</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6615</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SatelliteInitialization_Success_01</srcid><srcstatus/><internalId>1800</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatellitesSwitchedToNewMode_Multicore</srcid><srcstatus/><internalId>2080</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable14</srcid><srcstatus/><internalId>1677</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>

    <specobject>
      <id>WDGM.EB.MulticoreSwitchMode.4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If multicore is enabled and WdgM_SetMode was called with a new mode WdgM satellite
        instances shall change to the new mode only after the master instance successfully
        changed to the new mode.</description>
      <rationale>If from some reasons the master does not change to the new mode, the satellites
      should also not change to the new mode.</rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6559</srcid><srcstatus/><internalId>1342</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_MasterSwitchedNewModeNotSatellites_Multicore</srcid><srcstatus/><internalId>2083</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.MulticoreTriggerWatchdog</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>If multicore is enabled and WdgMMulticoreWdgEnable is false and WdgMMulticoreWdgCoreId is disabled, 
      only the WdgM master instance shall trigger all the watchdog drivers.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2621</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2627</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2672</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2913</srcid><srcstatus/><internalId>1106</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SlaveTrigger_01</srcid><srcstatus/><internalId>1802</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TriggerWatchdogSatelliteMaster_Multicore</srcid><srcstatus/><internalId>2081</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.MulticoreTriggerWatchdog2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>If WdgMMulticoreWdgEnable is true, all core instances shall trigger
      the referenced watchdog drivers.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6209</srcid><srcstatus/><internalId>1322</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SlaveTrigger_01</srcid><srcstatus/><internalId>1802</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.MulticoreTriggerWatchdog3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>If WdgMMulticoreWdgCoreId is set, the core instance specified
      by WdgMMulticoreWdgCoreId shall trigger the referenced watchdog drivers.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6209</srcid><srcstatus/><internalId>1322</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SlaveTrigger_01</srcid><srcstatus/><internalId>1802</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>

    <specobject>
      <id>WDGM.EB.MulticoreSetWatchdog</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>If multicore is enabled and WdgMMulticoreWdgEnable is false and WdgMMulticoreWdgCoreId is disabled, 
      only the WdgM master instance shall change all the watchdog drivers mode.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2914</srcid><srcstatus/><internalId>1107</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SlaveTrigger_01</srcid><srcstatus/><internalId>1802</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TriggerWatchdogSatelliteMaster_Multicore</srcid><srcstatus/><internalId>2081</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>

    <specobject>
      <id>WDGM.EB.MulticoreSetWatchdog2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>If WdgMMulticoreWdgEnable is set, all core instances shall change
      the referenced watchdog driver's mode.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2954</srcid><srcstatus/><internalId>1110</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6209</srcid><srcstatus/><internalId>1322</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SlaveTrigger_01</srcid><srcstatus/><internalId>1802</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>

    <specobject>
      <id>WDGM.EB.MulticoreSetWatchdog3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>If WdgMMulticoreWdgCoreId is true, the core instance specified
      by WdgMMulticoreWdgCoreId shall change the referenced watchdog driver's mode.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2954</srcid><srcstatus/><internalId>1110</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SlaveTrigger_01</srcid><srcstatus/><internalId>1802</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.MulticoreSetWatchdog4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>If a satellite instance call to WdgIf_SetMode fails, the
      satellite shall trigger the master instance to set 
      Global Supervision Status to WDGM_GLOBAL_STATUS_STOPPED. </description>
      <comment>When WdgIf_SetMode fails we shall assume a global supervision failure</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2404</srcid><srcstatus/><internalId>1057</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SlaveTrigger_01</srcid><srcstatus/><internalId>1802</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable34</srcid><srcstatus/><internalId>1697</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.MulticoreGlobalStatus</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>If multicore is enabled, only the WdgM master instance shall compute the Global
        Supervision Status from all the satellites Local Supervision Status.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2459</srcid><srcstatus/><internalId>1063</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GlobalLocalStatus_Multicore</srcid><srcstatus/><internalId>2075</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable1</srcid><srcstatus/><internalId>1664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.MulticoreGlobalStatus2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>If multicore is enabled and not all the Satellite Instances changed to the new mode, 
                    the Master instance shall compute the Global Supervision Status
                    only from the instances which changed to the new mode.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4647</srcid><srcstatus/><internalId>1222</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GlobalLocalStatus_Multicore</srcid><srcstatus/><internalId>2075</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>
   
    <specobject>
      <id>WDGM.EB.MulticoreLocalStatus1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>If multicore is enabled, all core instances shall compute the Local Supervision
        Status for all the Supervised Entitys configured on that core (see
        WdgMSupervisedEntityCoreId).</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2450</srcid><srcstatus/><internalId>1061</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GlobalLocalStatus_Multicore</srcid><srcstatus/><internalId>2075</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>

    <specobject>
      <id>WDGM.EB.MulticoreLocalStatus2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>If multicore is enabled, WdgM master instance shall have access to the Local
        Supervision Status from all the cores instances.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1246</srcid><srcstatus/><internalId>843</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1558</srcid><srcstatus/><internalId>849</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GlobalLocalStatus_Multicore</srcid><srcstatus/><internalId>2075</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>

    <specobject>
      <id>WDGM.EB.GetFirstExpired1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>If multicore is enabled, GetFirstExpired() shall use WdgMGetElapsedTimeCallout() to get a timestamp 
        between the start of the ECU and the current time which shall be stored for each core.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5710</srcid><srcstatus/><internalId>1298</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GetFirstExpiredSEID_CorruptedData_Multicore</srcid><srcstatus/><internalId>1861</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>

    <specobject>
      <id>WDGM.EB.GetFirstExpired2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>If multicore is enabled and WdgMGetElapsedTimeCallout(), GetFirstExpired() shall compare the timestamp 
        of all expired supervised entities and if multiple supervised entities are expired only provide the one which 
        occurred first.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1969</srcid><srcstatus/><internalId>862</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GlobalLocalStatus_Multicore</srcid><srcstatus/><internalId>2075</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>

    <specobject>
      <id>WDGM.EB.ExtGraphData</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>For External Logical Supervision the SE External Graph Run-time Data shall be
        stored doubled bit-inverse.</description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable12</srcid><srcstatus/><internalId>1675</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable13</srcid><srcstatus/><internalId>1676</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable16</srcid><srcstatus/><internalId>1679</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>

    <specobject>
      <id>WDGM.EB.InterCoreSharedData</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>If multicore is enabled, data shared between cores shall be atomically read and
        write by any core.</description>
      <needscoverage>
        <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>lim.WdgM.EB_INTREQ_WdgM_0009</srcid><srcstatus/><internalId>7</internalId></linkedfrom><linkedfrom><srcid>lim.WdgM.EB_INTREQ_WdgM_0010</srcid><srcstatus/><internalId>8</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.WdgMMulticoreInclude.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If multicore is enabled and WdgMGetCoreIdCallout is disabled, WdgM_Type.h shall
      include Os.h. </description>
      <comment> GetCoreId API from Os. </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_09_OsIncludes</srcid><srcstatus/><internalId>1954</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_09_OsIncludes_Multicore</srcid><srcstatus/><internalId>1964</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Types.h_13</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>

    <specobject>
      <id>WDGM.EB.SatelliteCall.DetError</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        If multicore is enabled and any of WdgM_Init(), WdgM_DeInit(), WdgM_GetFirstExpiredSEID(), WdgM_GetGlobalStatus(), 
        WdgM_GetMode(), WdgM_PerformReset() or WdgM_SetMode() API are called from a satellite instance, 
        the function shall report WDGM_E_PARAM_WRONG_CORE_ID to the Det module (when WdgMDevErrorDetect
        is enabled) and return without doing anything.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30034</srcid><srcstatus/><internalId>1743</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30108</srcid><srcstatus/><internalId>1744</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30106</srcid><srcstatus/><internalId>1748</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30044</srcid><srcstatus/><internalId>1751</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30042</srcid><srcstatus/><internalId>1754</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30045</srcid><srcstatus/><internalId>1755</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30109</srcid><srcstatus/><internalId>1757</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30047</srcid><srcstatus/><internalId>1764</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30052</srcid><srcstatus/><internalId>1766</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1563</srcid><srcstatus/><internalId>978</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1707</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2193</srcid><srcstatus/><internalId>1033</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2244</srcid><srcstatus/><internalId>1039</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2320</srcid><srcstatus/><internalId>1050</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020121_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMWatchdog</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMMulticoreWdgEnable</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucBooleanParamDef</para>
        <para>Default value: false</para>
        <para>ConfigurationClass: Pre-compile time - all variants</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: This parameter defines if the referenced watchdog driver is triggered form all the cores, when multicore is enabled. Each trigger will be done in the context of the core which trigger the watchdog driver.</para>
      </description>
      <comment>This parameter is used to be able to trigger watchdog drivers with one reference in the WdgIf and that is core aware.</comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SlaveTrigger_01</srcid><srcstatus/><internalId>1802</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_1037</srcid><srcstatus/><internalId>1528</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020122_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMWatchdog</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMMulticoreWdgCoreId</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucIntegerParamDef</para>
        <para>Default value: 0</para>
        <para>ConfigurationClass: Pre-compile time - all variants</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: This parameter defines the core instance which will trigger the referenced watchdog driver.</para>
      </description>
      <comment>This parameter is used to be able to trigger watchdog drivers from a specific core.</comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SlaveTrigger_01</srcid><srcstatus/><internalId>1802</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_1060</srcid><srcstatus/><internalId>1529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>
    
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020100_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following optional container within the
          container <parameter>WdgMGeneral</parameter>: </para>
        <para>Container Name: <parameter>WdgMSupervisorCallouts</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: Container</para>
        <para>Description: Enables the configuration of callouts for WdgM APIs and integration of a
          trusted component (e.g. Supervisor). </para>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Due to the high importance of this topic, it's 
        checked in many places in sources and test configurations resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01</srcid><srcstatus/><internalId>2015</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckModeSwitch_SupervisorDisabled_01</srcid><srcstatus/><internalId>2016</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckModeSwitch_SupervisorDisabled_02</srcid><srcstatus/><internalId>2017</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_01</srcid><srcstatus/><internalId>2018</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_02</srcid><srcstatus/><internalId>2019</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_03</srcid><srcstatus/><internalId>2020</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_04</srcid><srcstatus/><internalId>2021</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_11</srcid><srcstatus/><internalId>2022</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_12</srcid><srcstatus/><internalId>2023</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckDeInit_SupervisorDisabled_01</srcid><srcstatus/><internalId>2024</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckDeInit_SupervisorDisabled_02</srcid><srcstatus/><internalId>2025</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2026</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_02</srcid><srcstatus/><internalId>2027</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_03</srcid><srcstatus/><internalId>2028</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_04</srcid><srcstatus/><internalId>2029</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_05</srcid><srcstatus/><internalId>2030</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_06</srcid><srcstatus/><internalId>2031</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_07</srcid><srcstatus/><internalId>2032</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_08</srcid><srcstatus/><internalId>2033</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_09</srcid><srcstatus/><internalId>2034</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_10</srcid><srcstatus/><internalId>2035</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_11</srcid><srcstatus/><internalId>2036</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_12</srcid><srcstatus/><internalId>2037</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckWdgMExpiredNotification</srcid><srcstatus/><internalId>2038</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_01</srcid><srcstatus/><internalId>2042</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_02</srcid><srcstatus/><internalId>2043</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_03</srcid><srcstatus/><internalId>2044</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckPerformReset_SupervisorEnabled_01</srcid><srcstatus/><internalId>2047</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMFTimingBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2048</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckWdgMModeSwitchNotification_01</srcid><srcstatus/><internalId>2049</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedAliveInternalLogicalDeadlineSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2051</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedInternalLogicalDeadlineSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2052</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedAliveInternalLogicalSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2053</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckExternalLogicalSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2054</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckDeadlineInternalLogicalResetFlag_SupervisorEnabled_01</srcid><srcstatus/><internalId>2060</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_317</srcid><srcstatus/><internalId>1536</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020101_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMGetExpectedInitStateCallout</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: Defines the implemented API name for polling a desired initialization
          state. This API is usually implemented in the Supervisor and shall have the following
          syntax: <itemizedlist>
            <listitem>
              <para>Syntax: <function> Std_ReturnType [ConfiguredAPIName](WdgM_EB_InitStatusType*
                  InitStatus) </function></para>
            </listitem>
            <listitem>
              <para>Parameter (inout): <code>InitStatus</code> The caller of the callout (WdgM)
                provides the current initial status, the expected initial status for the WdgM shall
                be returned in case <code>E_OK</code> is returned. <itemizedlist>
                  <listitem>
                    <para>
                      <code>WDGM_EB_INIT_STATUS_INIT</code>: The WdgM shall be initialized,
                      respectively stay initialized. </para>
                  </listitem>
                  <listitem>
                    <para>
                      <code>WDGM_EB_INIT_STATUS_DEINIT</code>: The WdgM shall be de-initialized,
                      respectively stay de-initialized. </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>Return value: <itemizedlist>
                  <listitem>
                    <para>
                      <code>E_OK</code>: The returned value in <code>InitStatus</code> is valid. The
                      WdgM changes to the expected state. </para>
                  </listitem>
                  <listitem>
                    <para>
                      <code>E_NOT_OK</code>: The returned value is not valid and will be ignored
                      (Watchdog Manager remains in old init state). </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>Description: The callout is invoked at the beginning of main function cycle.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Due to the high importance of this topic, it's 
	checked in many places in sources and test configurations resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2026</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_02</srcid><srcstatus/><internalId>2027</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_03</srcid><srcstatus/><internalId>2028</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_04</srcid><srcstatus/><internalId>2029</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_05</srcid><srcstatus/><internalId>2030</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_06</srcid><srcstatus/><internalId>2031</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_07</srcid><srcstatus/><internalId>2032</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_08</srcid><srcstatus/><internalId>2033</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_09</srcid><srcstatus/><internalId>2034</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_10</srcid><srcstatus/><internalId>2035</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_11</srcid><srcstatus/><internalId>2036</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_12</srcid><srcstatus/><internalId>2037</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckPerformReset_SupervisorEnabled_01</srcid><srcstatus/><internalId>2047</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMFTimingBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2048</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_338</srcid><srcstatus/><internalId>1537</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.TIMEPM.WDGM020101.1</srcid><srcstatus/><internalId>587</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020101.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define a global variable (runtime data)
        holding the expected initialization state of WdgM. </description>
      <comment> Refined with WDGM.EB.DesignDecision.InternalVariable18. </comment>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable18</srcid><srcstatus/><internalId>1681</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020102_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
          The WdgM configuration shall include the following optional container
          within the container <parameter>WdgMGeneral</parameter>:
        </para>
        <para>Container Name: <parameter>WdgMSetModeSynchron</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: Container</para>
        <para>Description:
          Enable WdgM_SetMode synchronously switch to the new mode.
          This behavior is available for the case when the Supervisor Proxy is not used.
        </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30146_SetModeSynchron</srcid><srcstatus/><internalId>1737</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_631</srcid><srcstatus/><internalId>1516</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020115_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMInitRedirectionCallout</parameter></para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: This parameter is only used if parameter
            <parameter>WdgMGetExpectedInitStateCallout</parameter> is enabled. The WdgM redirects
          each call to BSW API <code>WdgM_Init</code> to the configured callout API. If this
          parameter is left empty, then the BSW API <code>WdgM_Init</code> is not provided and no
          redirection is performed. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2026</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_03</srcid><srcstatus/><internalId>2028</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_04</srcid><srcstatus/><internalId>2029</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_05</srcid><srcstatus/><internalId>2030</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_374</srcid><srcstatus/><internalId>1539</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020116_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMDeInitRedirectionCallout</parameter></para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: This parameter is only used if parameter
            <parameter>WdgMGetExpectedInitStateCallout</parameter> is enabled. The WdgM redirects
          each call to BSW API <code>WdgM_DeInit</code> to the configured callout API. If this
          parameter is left empty, then the BSW API <code>WdgM_DeInit</code> is not provided and no
          redirection is performed. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_02</srcid><srcstatus/><internalId>2027</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_06</srcid><srcstatus/><internalId>2031</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_07</srcid><srcstatus/><internalId>2032</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_08</srcid><srcstatus/><internalId>2033</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_09</srcid><srcstatus/><internalId>2034</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_10</srcid><srcstatus/><internalId>2035</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_11</srcid><srcstatus/><internalId>2036</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_12</srcid><srcstatus/><internalId>2037</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_408</srcid><srcstatus/><internalId>1540</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020103_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMGetExpectedWdgMModeCallout</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: Defines the implemented API name for polling the expected WdgM mode. This
          API is usually implemented in the Supervisor and shall have the following syntax: <itemizedlist>
            <listitem>
              <para>Syntax: <function> Std_ReturnType [ConfiguredAPIName](WdgM_ModeType* WdgMMode)
                </function>
              </para>
            </listitem>
            <listitem>
              <para>Parameter (inout): <code>WdgMMode</code> The caller of the callout (WdgM)
                provides the current mode, the expected mode for the WdgM shall be returned in case
                  <code>E_OK</code> is returned. </para>
            </listitem>
            <listitem>
              <para>Return value: <itemizedlist>
                  <listitem>
                    <para>
                      <code>E_OK</code>: The WdgM shall perform a mode switch to the mode stored in
                      the argument <code>WdgMMode</code>. </para>
                  </listitem>
                  <listitem>
                    <para>
                      <code>E_NOT_OK</code>: The returned value is not valid and will be ignored
                      (Watchdog Manager remains in old Watchdog Manager Mode). </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>Description: The callout is invoked at the beginning of main function cycle if
                WdgM is initialized and the prior call to
                  <code>WdgMGetExpectedInitStateCallout</code> also returned
                  <code>WDGM_EB_INIT_STATUS_INIT</code>. </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this aspect is checked 
	in many places in the sources and also in some test configurations, due to the highly important nature 
	of this topic resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2026</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_02</srcid><srcstatus/><internalId>2027</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_03</srcid><srcstatus/><internalId>2028</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_04</srcid><srcstatus/><internalId>2029</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_05</srcid><srcstatus/><internalId>2030</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_06</srcid><srcstatus/><internalId>2031</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_07</srcid><srcstatus/><internalId>2032</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_08</srcid><srcstatus/><internalId>2033</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_09</srcid><srcstatus/><internalId>2034</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_10</srcid><srcstatus/><internalId>2035</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_11</srcid><srcstatus/><internalId>2036</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_12</srcid><srcstatus/><internalId>2037</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckPerformReset_SupervisorEnabled_01</srcid><srcstatus/><internalId>2047</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMFTimingBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2048</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_35_36</srcid><srcstatus/><internalId>2066</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15</srcid><srcstatus/><internalId>2067</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32</srcid><srcstatus/><internalId>2068</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31</srcid><srcstatus/><internalId>2069</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15_MC</srcid><srcstatus/><internalId>2071</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32_MC</srcid><srcstatus/><internalId>2072</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31_MC</srcid><srcstatus/><internalId>2073</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_442</srcid><srcstatus/><internalId>1541</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.TIMEPM.WDGM020103.1</srcid><srcstatus/><internalId>592</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020103.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define a global variable (runtime data)
        holding the expected mode for each WdgM instance. </description>
      <comment> Refined with WDGM.EB.DesignDecision.InternalVariable17. </comment>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable17</srcid><srcstatus/><internalId>1680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020117_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMSetModeRedirectionCallout</parameter></para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: This parameter is only used if parameter
            <parameter>WdgMGetExpectedWdgMModeCallout</parameter> is enabled. The WdgM redirects
          each call to BSW API <code>WdgM_SetMode</code> to the configured callout API. If this
          parameter is left empty, then the BSW API <code>WdgM_SetMode</code> is not provided and no
          redirection is performed. </para>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this aspect is checked in 
	many places in the sources and also in some test configurations, due to the highly important nature 
	of this topic resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_GlobalSupervisionService_Supervisor</srcid><srcstatus/><internalId>1791</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2026</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_02</srcid><srcstatus/><internalId>2027</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_03</srcid><srcstatus/><internalId>2028</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_04</srcid><srcstatus/><internalId>2029</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_05</srcid><srcstatus/><internalId>2030</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_06</srcid><srcstatus/><internalId>2031</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_07</srcid><srcstatus/><internalId>2032</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_08</srcid><srcstatus/><internalId>2033</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_09</srcid><srcstatus/><internalId>2034</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_10</srcid><srcstatus/><internalId>2035</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_11</srcid><srcstatus/><internalId>2036</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_12</srcid><srcstatus/><internalId>2037</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_35_36</srcid><srcstatus/><internalId>2066</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_478</srcid><srcstatus/><internalId>1543</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020104_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMGetElapsedTimeCallout</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: Defines the implemented API name for getting the information regarding
          the global and elapsed time. This API is usually implemented in a safe OS and shall have
          the following syntax: <itemizedlist>
            <listitem>
              <para>Syntax: <function> void [ConfiguredAPIName](uint32* PreviousTime, uint32*
                  ElapsedTime) </function>
              </para>
            </listitem>
            <listitem>
              <para>Parameter (inout): <code>PreviousTime</code> The old time is passed in order to
                calculate the difference to the actual time. The actual time is returned via this
                variable. The time units are in the granularity provided in parameter
                  <parameter>WdgMTimeGranularity</parameter> (see WDGM.EB.TIMEPM.WDGM020114_Conf).
              </para>
            </listitem>
            <listitem>
              <para>Parameter (out): <code>ElapsedTime</code> The elapsed time with respect to the
                time passed via parameter <parameter>PreviousTime</parameter>. The time units are in
                the granularity provided in parameter <parameter>WdgMTimeGranularity</parameter>
                (see WDGM.EB.TIMEPM.WDGM020114_Conf). </para>
            </listitem>
            <listitem>
              <para>Return value: None</para>
            </listitem>
            <listitem>
              <para>Description: Returns the current time and the elapsed time with respect to a
                passed old time in the granularity provided in parameter
                  <parameter>WdgMTimeGranularity</parameter> (see WDGM.EB.TIMEPM.WDGM020114_Conf).
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_01</srcid><srcstatus/><internalId>2042</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_02</srcid><srcstatus/><internalId>2043</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_03</srcid><srcstatus/><internalId>2044</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMFTimingBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2048</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedAliveInternalLogicalDeadlineSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2051</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedInternalLogicalDeadlineSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2052</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedAliveInternalLogicalSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2053</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckExternalLogicalSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2054</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckDeadlineInternalLogicalResetFlag_SupervisorEnabled_01</srcid><srcstatus/><internalId>2060</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_512</srcid><srcstatus/><internalId>1544</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020114_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMTimeGranularity</parameter></para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucFloatParamDef</para>
        <para>Range: 0 .. INF</para>
        <para>Default value: 0.0001</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: This parameter defines the granularity in real-time between two
          consecutive units of the arguments used in GetElapsedTime API specified via parameter
            <parameter>WdgMGetElapsedTimeCallout</parameter>. Unit: [s]</para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckMFTimingBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2048</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_547</srcid><srcstatus/><internalId>1545</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020123_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMMainFunctionPeriodTolerance</parameter></para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucFloatParamDef</para>
        <para>Range: 0 .. INF</para>
        <para>Default value: 0.0001</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: This parameter defines the allowed tolerance (plus / minus) in real-time
          between two main function calls with respect to the configured schedule time
            <parameter>WdgMSupervisionCycle</parameter>. Unit: [s]</para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckMFTimingBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2048</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_591</srcid><srcstatus/><internalId>1547</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.TIMEPM.WDGM020123.1</srcid><srcstatus/><internalId>597</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020123.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager module shall define a global variable (runtime data)
        holding the timestamp of the last WdgM MainFunction </description>
      <comment> Refined with WDGM.EB.DesignDecision.InternalVariable23. </comment>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable23</srcid><srcstatus/><internalId>1686</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020123_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>596</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020132_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMSatelliteAlivenessPeriodCheck</parameter></para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucIntegerParamDef</para>
        <para>Range: 0 .. 255</para>
        <para>Default value: 1</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>This parameter defines the frequency at which the MasterCore main function
          checks the Satellite core(s) main function execution.
          Unit: [MasterCore main function cycles]</para>
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_01_MC</srcid><srcstatus/><internalId>2064</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_02_MC</srcid><srcstatus/><internalId>2065</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_975</srcid><srcstatus/><internalId>1562</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020105_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMIsPerformResetCallout</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: Defines the implemented API name for getting the authorization of a
          requested Watchdog reset. This API is usually implemented in the Supervisor and shall have
          the following syntax: <itemizedlist>
            <listitem>
              <para>Syntax: <function> Std_ReturnType [ConfiguredAPIName](void) </function>
              </para>
            </listitem>
            <listitem>
              <para>Parameter: <code>none</code>
              </para>
            </listitem>
            <listitem>
              <para>Return value: <itemizedlist>
                  <listitem>
                    <para>
                      <code>E_OK</code>: Caller of Perform Reset is authorized and therefore reset
                      request will be executed. </para>
                  </listitem>
                  <listitem>
                    <para>
                      <code>E_NOT_OK</code>: Caller of Perform Reset is not authorized and therefore
                      reset request will be ignored. </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>Description: Returns if the caller of the WdgM Perform Reset API is authorized.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_GlobalSupervisionService_Supervisor</srcid><srcstatus/><internalId>1791</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckPerformReset_SupervisorEnabled_01</srcid><srcstatus/><internalId>2047</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_647</srcid><srcstatus/><internalId>1552</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020106_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMSupervisionExpiredCallout</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: Defines the implemented API name for indicating the Supervisor about a
          Supervision failure and getting the information for a possible re-initialization. This API
          is usually implemented in the Supervisor and shall have the following syntax: <itemizedlist>
            <listitem>
              <para>Syntax: <function> void [ConfiguredAPIName](WdgM_SupervisedEntityIdType
                  ExpiredSEID) </function></para>
            </listitem>
            <listitem>
              <para>Parameter (in): <function>ExpiredSEID</function> SupervisedEntity ID that
                expired (one of DeadlineSupervision, LogicalSupervision, or AliveSupervision
                failed). </para>
            </listitem>
            <listitem>
              <para>Return value: <code>none</code>
              </para>
            </listitem>
            <listitem>
              <para>Description: This callout function is called when the local status of a
                SupervisedEntity changes to <emphasis>WDGM_LOCAL_STATUS_EXPIRED</emphasis> (i.e. one
                of LogicalSupervision, DeadlineSupervision, or AliveSupervision was incorrect for
                this SupervisedEntity). </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckWdgMExpiredNotification</srcid><srcstatus/><internalId>2038</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_680</srcid><srcstatus/><internalId>1553</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020107_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMIndividualModeSwitchCallout</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: Defines the implemented API name for indicating the Supervisor about a
          mode switch of a SupervisedEntity (e.g. from WDGM_LOCAL_STATUS_OK to
          WDGM_LOCAL_STATUS_FAILED, or from WDGM_LOCAL_STATUS_FAILED to
          WDGM_LOCAL_STATUS_DEACTIVATED, etc.). This API is usually implemented in the Supervisor
          and shall have the following syntax: <itemizedlist>
            <listitem>
              <para>Syntax: <function> void [ConfiguredAPIName](WdgM_SupervisedEntityIdType SEID,
                  WdgM_LocalStatusType OldMode, WdgM_LocalStatusType NewMode) </function></para>
            </listitem>
            <listitem>
              <para>Parameter (in): <function>SEID</function> SupervisedEntity ID that performed a
                mode switch </para>
              <para>Parameter (in): Old WdgMMode of the <function>SEID</function>
              </para>
              <para>Parameter (in): New WdgMMode of the <function>SEID</function>
              </para>
            </listitem>
            <listitem>
              <para>Return value: <code>none</code>
              </para>
            </listitem>
            <listitem>
              <para>Description: This callout function informs the Supervisor about a mode switch of
                a SupervisedEntity. </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_SupervisionStatusService_Supervisor</srcid><srcstatus/><internalId>1790</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckWdgMModeSwitchNotification_01</srcid><srcstatus/><internalId>2049</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_714</srcid><srcstatus/><internalId>1554</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020108_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMGlobalModeSwitchCallout</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: Defines the implemented API name for indicating the Supervisor about a
          global mode switch of the WdgM (e.g. from WDGM_GLOBAL_STATUS_OK to
          WDGM_GLOBAL_STATUS_FAILED, or from WDGM_GLOBAL_STATUS_FAILED to
          WDGM_GLOBAL_STATUS_EXPIRED, etc.). This API is usually implemented in the Supervisor and
          shall have the following syntax: <itemizedlist>
            <listitem>
              <para>Syntax: <function> void [ConfiguredAPIName](WdgM_GlobalStatusType OldMode,
                  WdgM_GlobalStatusType NewMode) </function></para>
            </listitem>
            <listitem>
              <para>Parameter (in): Old global WdgMMode </para>
              <para>Parameter (in): New global WdgMMode </para>
            </listitem>
            <listitem>
              <para>Return value: <code>none</code>
              </para>
            </listitem>
            <listitem>
              <para>Description: This callout function informs the Supervisor about a global mode
                switch. </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ASR43_SupervisionStatusService_Supervisor</srcid><srcstatus/><internalId>1790</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckWdgMModeSwitchNotification_01</srcid><srcstatus/><internalId>2049</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_750</srcid><srcstatus/><internalId>1555</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020109_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter> </para>
        <para>Parameter Name: <parameter>WdgMDetCallout</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: Defines the implemented API name for indicating the Supervisor about a
          DET error. This API shall have the following syntax: <itemizedlist>
            <listitem>
              <para>Syntax: <function> void [ConfiguredAPIName](uint8 ApiID, uint8 ErrorID)
                </function></para>
            </listitem>
            <listitem>
              <para>Parameter (in): <function>SID</function> ID of the API where an internal error
                was detected </para>
              <para>Parameter (in): <function>ErrorID</function> Internal Error Type </para>
            </listitem>
            <listitem>
              <para>Return value: <code>none</code>
              </para>
            </listitem>
            <listitem>
              <para>Description: This callout function informs the Supervisor about a detected
                internal DET error. </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this aspect is checked in 
	many places in the sources and also in some test configurations, due to the highly important nature of 
	this topic resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_02</srcid><srcstatus/><internalId>1942</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03</srcid><srcstatus/><internalId>1943</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_04</srcid><srcstatus/><internalId>1944</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_01</srcid><srcstatus/><internalId>1984</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_02</srcid><srcstatus/><internalId>1985</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_03a</srcid><srcstatus/><internalId>1986</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_03b</srcid><srcstatus/><internalId>1987</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_04</srcid><srcstatus/><internalId>1988</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_05a</srcid><srcstatus/><internalId>1989</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_05b</srcid><srcstatus/><internalId>1990</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_06</srcid><srcstatus/><internalId>1991</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_07</srcid><srcstatus/><internalId>1992</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_08</srcid><srcstatus/><internalId>1993</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_09</srcid><srcstatus/><internalId>1994</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_10</srcid><srcstatus/><internalId>1995</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_11</srcid><srcstatus/><internalId>1996</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_12_1</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_12_2</srcid><srcstatus/><internalId>1998</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_13_1</srcid><srcstatus/><internalId>1999</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_13_2</srcid><srcstatus/><internalId>2000</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_14</srcid><srcstatus/><internalId>2001</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ImpTest_0601_TimE_DetDem</srcid><srcstatus/><internalId>2014</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckPerformReset_SupervisorEnabled_01</srcid><srcstatus/><internalId>2047</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMFTimingBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2048</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_02_MC</srcid><srcstatus/><internalId>2089</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03_MC</srcid><srcstatus/><internalId>2090</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_04_MC</srcid><srcstatus/><internalId>2091</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_785</srcid><srcstatus/><internalId>1556</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020135_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter> </para>
        <para>Parameter Name: <parameter>WdgMDemCallout</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: Defines the implemented API name for indicating the Supervisor about a
          DEM error. This API shall have the following syntax: <itemizedlist>
            <listitem>
              <para>Syntax: <function> void [ConfiguredAPIName](uint16 EventID, uint8 EventStatus)
                </function></para>
            </listitem>
            <listitem>
              <para>Parameter (in): <function>EventID</function> Event identification assigned by the DEM </para>
              <para>Parameter (in): <function>EventStatus</function> Contains all monitor test result values </para>
            </listitem>
            <listitem>
              <para>Return value: <code>none</code>
              </para>
            </listitem>
            <listitem>
              <para>Description: This callout function informs the Supervisor about a detected
                internal DEM error. </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this aspect is checked in 
	many places in the sources and also in some test configurations, due to the highly important nature of 
	this topic resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_02</srcid><srcstatus/><internalId>1942</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03</srcid><srcstatus/><internalId>1943</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_04</srcid><srcstatus/><internalId>1944</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_817</srcid><srcstatus/><internalId>1557</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020126_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMRequestPartitionResetCallout</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: Defines the implemented API name for indicating the Supervisor about a
          request for partition reset. This API shall have the following syntax: <itemizedlist>
            <listitem>
              <para>Syntax: <function> Std_ReturnType [ConfiguredAPIName](ApplicationType Application)
                </function></para>
            </listitem>
            <listitem>
              <para>Parameter (in): <function>Application</function> The OS-Application from which the reset is requested</para>
            </listitem>
            <listitem>
              <para>Return value: <itemizedlist>
                  <listitem>
                    <para>
                      <code>E_OK</code>: No errors. </para>
                  </listitem>
                  <listitem>
                    <para>
                      <code>E_NOT_OK</code>: Partition was not restarted </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>Description: This callout function informs the Supervisor about a request for
              partition reset. </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this aspect is checked in 
	many places in the sources and also in some test configurations, due to the highly important nature of 
	this topic resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_Callout</srcid><srcstatus/><internalId>1898</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_DifferentPartition</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_SupervisedEntityNotMappedToPartition</srcid><srcstatus/><internalId>1900</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_AliveFailure</srcid><srcstatus/><internalId>1901</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_InternalTransition</srcid><srcstatus/><internalId>1902</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Two_WdgMRequestPartitionReset</srcid><srcstatus/><internalId>1903</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_FailedAliveSupervisionRefCycleTol</srcid><srcstatus/><internalId>1904</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_ReferenceCycle</srcid><srcstatus/><internalId>1905</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Two_WdgMRequestPartitionReset_ReferenceCycle</srcid><srcstatus/><internalId>1906</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_DeadlineSupervision</srcid><srcstatus/><internalId>1907</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_GetApplicationState_E_NOT_OK</srcid><srcstatus/><internalId>1908</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_E_NOT_OK</srcid><srcstatus/><internalId>1909</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_PartitionState</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_1012</srcid><srcstatus/><internalId>1563</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020127_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMGetApplicationState</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: Defines the implemented API name for indicating the Supervisor about a
          request for partition reset. This API shall have the following syntax: <itemizedlist>
            <listitem>
              <para>Syntax: <function> Std_ReturnType [ConfiguredAPIName](ApplicationType Application, 
              ApplicationStateRefType Value)
                </function></para>
            </listitem>
            <listitem>
              <para>Parameter (in): <function>Application</function> The OS-Application from which the state is requested</para>
              <para>Parameter (inout): <function>Value</function> The current state of the application</para>
            </listitem>
            <listitem>
              <para>Return value: <itemizedlist>
                  <listitem>
                    <para>
                      <code>E_OK</code>: No errors. </para>
                  </listitem>
                  <listitem>
                    <para>
                      <code>E_NOT_OK</code>: Application is not valid. </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>Description: This callout function returns the current state of an OS-Application.</para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this aspect is checked in 
	many places in the sources and also in some test configurations, due to the highly important nature of 
	this topic resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_Callout</srcid><srcstatus/><internalId>1898</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_DifferentPartition</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_SupervisedEntityNotMappedToPartition</srcid><srcstatus/><internalId>1900</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_AliveFailure</srcid><srcstatus/><internalId>1901</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_InternalTransition</srcid><srcstatus/><internalId>1902</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Two_WdgMRequestPartitionReset</srcid><srcstatus/><internalId>1903</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_FailedAliveSupervisionRefCycleTol</srcid><srcstatus/><internalId>1904</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_ReferenceCycle</srcid><srcstatus/><internalId>1905</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Two_WdgMRequestPartitionReset_ReferenceCycle</srcid><srcstatus/><internalId>1906</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_DeadlineSupervision</srcid><srcstatus/><internalId>1907</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_GetApplicationState_E_NOT_OK</srcid><srcstatus/><internalId>1908</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_E_NOT_OK</srcid><srcstatus/><internalId>1909</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_PartitionState</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_1047</srcid><srcstatus/><internalId>1564</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020124_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMMainFunctionViolationCallout</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: Defines the implemented API name for indicating the Supervisor about a
              a violation of main function schedule time. 
              This API shall have the following syntax: <itemizedlist>
            <listitem>
              <para>Syntax: <function> void [ConfiguredAPIName](void)
                </function></para>
            </listitem>
            <listitem>
              <para>Parameter: <code>none</code>
              </para>
            </listitem>
            <listitem>
              <para>Return value: <code>none</code>
              </para>
            </listitem>
            <listitem>
              <para>Description: This callout announce a violation of main function 
              schedule time.</para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckMFTimingBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2048</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_884</srcid><srcstatus/><internalId>1559</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020112_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisedEntity</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMErrorRecoveryEnabled</parameter></para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucBooleanParamDef</para>
        <para>Default value: false</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: If set to true, then the Supervised Entity never enters the local
          Supervision Status <code>WDGM_LOCAL_STATUS_EXPIRED</code> (i.e. independent of the
          configured kind of supervision, in case of a detected incorrect supervision, it remains in
          status <code>WDGM_LOCAL_STATUS_FAILED</code> until all supervisions succeed again). If set
          to false, then the Supervised Entity behaves according to AUTOSAR. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_01</srcid><srcstatus/><internalId>2040</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_02</srcid><srcstatus/><internalId>2041</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_01</srcid><srcstatus/><internalId>2042</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_02</srcid><srcstatus/><internalId>2043</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_03</srcid><srcstatus/><internalId>2044</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromLogicalFailureDetection_01</srcid><srcstatus/><internalId>2045</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromLogicalFailureDetection_02</srcid><srcstatus/><internalId>2046</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_1086</srcid><srcstatus/><internalId>1565</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020136_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMExternalLogicalSupervision</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMExtLogicalOptimization</parameter></para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucBooleanParamDef</para>
        <para>Default value: false</para>
        <para>ConfigurationClass: Pre-compile time - all variants</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: If set to TRUE, then the optimized algorithm (the one from the Internal Logical 
          Supervision) is used instead of the External Logical Supervision algorithm. Also if this parameter
          is set to TRUE then checkpoints from this graph shall not be executed concurrently or in parallel.</para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs</srcid><srcstatus/><internalId>1815</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckLogicalGraphs_Multicore</srcid><srcstatus/><internalId>1862</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_695</srcid><srcstatus/><internalId>1580</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020118_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMGeneral</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMPartitioningEnabled</parameter></para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: false</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: This parameter defines whether the environment makes use of partitioning.
          In this case, the WdgM provides a separate memory abstraction which must be configured by
          the integrator to be read/write accessible from the execution context of all other
          partitions contain WdgM check points and WdgM main function. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_Bswmd</srcid><srcstatus/><internalId>1709</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_1001_PartitionSupport</srcid><srcstatus/><internalId>1714</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_247</srcid><srcstatus/><internalId>1534</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020130_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMGeneral</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMMixedSafetyCriticalityEnabled</parameter></para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucBooleanParamDef</para>
        <para>Default value: false</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: This parameter defines whether the environment makes use of different
        safety level for cores.
        In this case, the WdgM provides a separate memory abstraction which must be configured by
        the integrator to be read/write accessible from the execution context of all cores. The
        master core must always have the highest safety level required by the system safety level
        and the satellites cores can have different safety levels depending on the needs of the system.</para>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
        WdgMMixedSafetyCriticalityEnabledMultiplicity is checked in many places in the sources and 
	also in some test configurations, due to the highly important nature of this topic resulting 
	in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_09</srcid><srcstatus/><internalId>2002</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_10</srcid><srcstatus/><internalId>2003</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_11</srcid><srcstatus/><internalId>2004</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_12</srcid><srcstatus/><internalId>2005</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_01</srcid><srcstatus/><internalId>2006</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_02</srcid><srcstatus/><internalId>2007</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_03</srcid><srcstatus/><internalId>2008</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_04</srcid><srcstatus/><internalId>2009</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_05</srcid><srcstatus/><internalId>2010</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_06</srcid><srcstatus/><internalId>2011</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_07</srcid><srcstatus/><internalId>2012</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_08</srcid><srcstatus/><internalId>2013</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_283</srcid><srcstatus/><internalId>1535</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020125_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMDemEventParameterRefs</parameter>: </para>
        <para>Parameter Name: <parameter>WDGM_E_MF_TIMINGVIOLATION</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: Reference to [ DemEventParameter ]</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: Reference to the DemEventParameter which shall be issued when the actual
          Watchdog Manager main function period deviates from the configured mode-dependent schedule
          period (WdgMSupervisionCycle). </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckMFTimingBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2048</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_81</srcid><srcstatus/><internalId>1531</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020133_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMDemEventParameterRefs</parameter>: </para>
        <para>Parameter Name: <parameter>WDGM_E_MF_SATELLITE_ERROR</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: Reference to [ DemEventParameter ]</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Reference to the DemEventParameter that shall be issued when the
          Satellite core(s) main function(s) didn't run in the specified 
          period (WdgMSatelliteAlivenessPeriodCheck). </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_01_MC</srcid><srcstatus/><internalId>2064</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_02_MC</srcid><srcstatus/><internalId>2065</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_133</srcid><srcstatus/><internalId>1532</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020143_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMDemEventParameterRefs</parameter>: </para>
        <para>Parameter Name: <parameter>WDGM_E_SLAVE_FAILED_CHANGEMODE</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: Reference to [ DemEventParameter ]</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Reference to the DemEventParameter that shall be issued when the
          Satellite core(s) failed to change modes in the specified 
          period (WdgMMasterWaitSlaveModeSwitch). </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_184</srcid><srcstatus/><internalId>1533</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020131_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMSatelliteAlivenessCallout</parameter></para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucStringParamDef</para>
        <para>Default value: --</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: If this parameter is enabled then the WdgM redirects
          each call to the configured callout API if Satellite core(s) main function(s) is not 
          run in the specified period (WdgMSatelliteAlivenessPeriodCheck). Using the configured 
          callout API, WgdM shall report each core id each failed satellite.
          If <parameter>WdgMSatelliteAlivenessCoreIdDisable</parameter> is enabled, WdgM shall
          not provide the core id for the failed satellite(s).
          If this parameter is left empty, then no redirection is performed. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_918</srcid><srcstatus/><internalId>1560</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020134_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMSupervisorCallouts</parameter>: </para>
        <para>Parameter Name: <parameter>WdgMSatelliteAlivenessCoreIdDisable</parameter></para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucBooleanParamDef</para>
        <para>Default value: false</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: This parameter enables/disables the return of the CoreId for failed 
          satellites using the configured callout API provided through the parameter 
          <parameter>WdgMSatelliteAlivenessCallout</parameter>.
          If set to true, WdgM shall not return the CoreId for the failed satellite.
          If set to false, WdgM shall return the CoreId for the failed satellite.</para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_951</srcid><srcstatus/><internalId>1561</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020128_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMGeneral</parameter>: </para>
        <para>Parameter Name: <parameter>WdgM_GetFirstExpiredSEID</parameter></para>
        <para>Multiplicity: 1</para>
        <para>Type: EcucBooleanParamDef</para>
        <para>Default value: false</para>
        <para>ConfigurationClass: Pre-compile time - all variants</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: This parameter enables or disables the API WdgM_GetFirstExpiredSEID().
        When multicore is enabled and WdgM_GetFirstExpiredSEID parameter is enabled WdgM_GetFirstExpiredSEID() 
        may not be fully reliable.</para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters.xdm.m4_858</srcid><srcstatus/><internalId>1523</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020129_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM configuration shall include the following parameter within the container
            <parameter>WdgMDemEventParameterRefs</parameter>: </para>
        <para>Parameter Name: <parameter>WDGM_E_DATA_CORRUPTION</parameter></para>
        <para>Multiplicity: 0..1</para>
        <para>Type: Reference to [ DemEventParameter ]</para>
        <para>ConfigurationClass: Pre-compile time - VariantPreCompile</para>
        <para>Scope / Dependency: Module</para>
        <para>Description: Reference to the DemEventParameter which shall be issued when a data
          corruption is detected in the internal WdgM data which is hold double inverse. </para>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
        Data corruption is checked in many places in the sources and also in some test configurations,
        due to the highly important nature of this topic resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtection_01</srcid><srcstatus/><internalId>1984</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_02</srcid><srcstatus/><internalId>1985</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_03a</srcid><srcstatus/><internalId>1986</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_03b</srcid><srcstatus/><internalId>1987</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_04</srcid><srcstatus/><internalId>1988</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_05a</srcid><srcstatus/><internalId>1989</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_05b</srcid><srcstatus/><internalId>1990</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_06</srcid><srcstatus/><internalId>1991</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_07</srcid><srcstatus/><internalId>1992</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_08</srcid><srcstatus/><internalId>1993</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_09</srcid><srcstatus/><internalId>1994</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_10</srcid><srcstatus/><internalId>1995</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_11</srcid><srcstatus/><internalId>1996</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_12_1</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_12_2</srcid><srcstatus/><internalId>1998</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_13_1</srcid><srcstatus/><internalId>1999</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_13_2</srcid><srcstatus/><internalId>2000</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_14</srcid><srcstatus/><internalId>2001</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_26</srcid><srcstatus/><internalId>1530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020119</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM module generator shall reject configurations where any kind of Deadline
          Monitoring is configured, but parameter <parameter>WdgMGetElapsedTimeCallout</parameter>
          (see WDGM.EB.TIMEPM.WDGM020104_Conf) of container
            <parameter>WdgMSupervisorCallouts</parameter> is disabled or empty. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_03_NegativeTestsPart3</srcid><srcstatus/><internalId>1935</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_670</srcid><srcstatus/><internalId>1579</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>
    <!-- [ASCWDGM-240] Limitation: No dynamic change of the main function period -->
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020120</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM module generator shall reject configurations where the schedule period,
          represented via parameter <parameter>WdgMSupervisionCycle</parameter> (see
          WDGM.EB.TIMEPM.WDGM020104), of any two WdgM Modes are different. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_03_NegativeTestsPart3</srcid><srcstatus/><internalId>1935</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_333</srcid><srcstatus/><internalId>1567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020121</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM module generator shall reject configurations where one of the following
          parameters as part of Deadline Supervision <parameter>WdgMDeadlineMin</parameter> (see
          WDGM.ASR40.WDGM317_Conf) <parameter>WdgMDeadlineMax</parameter> (see
          WDGM.ASR40.WDGM318_Conf) in any mode does not fulfill one of the following constraints
          with respect to <parameter>WdgMTimeGranularity</parameter> (see
          WDGM.EB.TIMEPM.WDGM020114_Conf): </para>
        <itemizedlist>
          <listitem>
            <para>
              <parameter>WdgMDeadlineMin</parameter> equals 0 or
                <parameter>WdgMDeadlineMin</parameter> is greater than or equal to
                <parameter>WdgMTimeGranularity</parameter>
            </para>
          </listitem>
          <listitem>
            <para>
              <parameter>WdgMDeadlineMax</parameter> is greater than or equal to
                <parameter>WdgMTimeGranularity</parameter>
            </para>
          </listitem>
          <listitem>
            <para>
              <parameter>WdgMDeadlineMin/Max</parameter> is a multiple of
                <parameter>WdgMTimeGranularity</parameter>
            </para>
          </listitem>
          <listitem>
            <para>
              <parameter>WdgMDeadlineMax</parameter> divided by
                <parameter>WdgMTimeGranularity</parameter> is less than 4294967296 (i.e. 2^32) </para>
            <para> Note: This avoids the occurence of multiple overflows of the time value (in case
              of a very fine-grained time). </para>
          </listitem>
          <listitem>
            <para><parameter>WdgMDeadlineMax</parameter> is greater than or equal to
                <parameter>WdgMDeadlineMin</parameter>
            </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_03_NegativeTestsPart3</srcid><srcstatus/><internalId>1935</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_511</srcid><srcstatus/><internalId>1568</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_517</srcid><srcstatus/><internalId>1569</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_524</srcid><srcstatus/><internalId>1570</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_531</srcid><srcstatus/><internalId>1571</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_571</srcid><srcstatus/><internalId>1573</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_579</srcid><srcstatus/><internalId>1574</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_586</srcid><srcstatus/><internalId>1575</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020128</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM module generator shall reject configurations where parameter
            <parameter>WdgMDeadlineMax</parameter> (see WDGM.ASR40.WDGM318_Conf) in any mode does
          not fulfill one of the following constraints with respect to
            <parameter>WdgMSupervisionCycle</parameter> (see WDGM.EB.TIMEPM.WDGM020104_Conf): </para>
        <itemizedlist>
          <listitem>
            <para>
              <parameter>WdgMDeadlineMax</parameter> divided by
                <parameter>WdgMSupervisionCycle</parameter> is less than 32768 (=2^15) </para>
            <para> Note: This is to ensure that the value can be represented with a 16-bit value.
              15-bit value is taken to consider a safe margin. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_04_NegativeTestsPart4</srcid><srcstatus/><internalId>1936</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_538</srcid><srcstatus/><internalId>1572</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020122</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM module generator shall reject configurations where one of the following
          constraints for parameter <parameter>WdgMTimeGranularity</parameter> (see
          WDGM.EB.TIMEPM.WDGM020114_Conf) is violated with respect to parameter
            <parameter>WdgMSupervisionCycle</parameter> (see WDGM.EB.TIMEPM.WDGM020104_Conf) for any
          WdgM mode: </para>
        <itemizedlist>
          <listitem>
            <para>
              <parameter>WdgMSupervisionCycle</parameter> divided by
                <parameter>WdgMTimeGranularity</parameter> is less than 2147483648 (=2^31) </para>
            <para> Note: This avoids the occurence of multiple overflows of the time value (in case
              of a very fine-grained time). </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_03_NegativeTestsPart3</srcid><srcstatus/><internalId>1935</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_580</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020124</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM module generator shall reject configurations where one of the following
          constraints for parameter <parameter>WdgMMainFunctionPeriodTolerance</parameter> (see
          WDGM.EB.TIMEPM.WDGM020123_Conf) is violated with respect to parameter
            <parameter>WdgMTimeGranularity</parameter> (see WDGM.EB.TIMEPM.WDGM020114_Conf). </para>
        <itemizedlist>
          <listitem>
            <para>
              <parameter>WdgMMainFunctionPeriodTolerance</parameter> is greater than or equal to the
              value of parameter <parameter>WdgMTimeGranularity</parameter> (see
              WDGM.EB.TIMEPM.WDGM020114_Conf) </para>
          </listitem>
          <listitem>
            <para>
              <parameter>WdgMMainFunctionPeriodTolerance</parameter> is a multiple of
                <parameter>WdgMTimeGranularity</parameter>
            </para>
          </listitem>
          <listitem>
            <para>
              <parameter>WdgMMainFunctionPeriodTolerance</parameter> divided by
                <parameter>WdgMTimeGranularity</parameter> is less than 32768 (=2^15) </para>
            <para> Note: This is to ensure that the value can be represented with a 16-bit value.
              15-bit value is taken to consider a safe margin. </para>
          </listitem>
          <listitem>
            <para>
              <parameter>WdgMMainFunctionPeriodTolerance</parameter> shall be smaller than
                <parameter>WdgMSupervisionCycle</parameter> divided by 2</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_04_NegativeTestsPart4</srcid><srcstatus/><internalId>1936</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_620</srcid><srcstatus/><internalId>1548</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_624</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_630</srcid><srcstatus/><internalId>1550</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_634</srcid><srcstatus/><internalId>1551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020126</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM module generator shall reject configurations where only one of the
          parameters <parameter>WdgMGetExpectedInitStateCallout</parameter> (see
          WDGM.EB.TIMEPM.WDGM020101_Conf) and <parameter>WdgMGetExpectedWdgMModeCallout</parameter>
          (see WDGM.EB.TIMEPM.WDGM020103_Conf) is enabled. </para>
        <para> That is, either both parameters are enabled or both are disabled. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_04_NegativeTestsPart4</srcid><srcstatus/><internalId>1936</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_367</srcid><srcstatus/><internalId>1538</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_471</srcid><srcstatus/><internalId>1542</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020127</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM module generator shall reject configurations where the parameter
            <parameter>WdgMErrorRecoveryEnabled</parameter> (WDGM.EB.TIMEPM.WDGM020112_Conf) for all
          Supervised Entities of any configured Supervision Graph is not consistently set to either
          enabled or disabled. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GENTEST_04_NegativeTestsPart4</srcid><srcstatus/><internalId>1936</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/WdgM_Extension.xdm.m4_931</srcid><srcstatus/><internalId>1594</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020200</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM shall generate the file <code>WdgM_Callouts.h</code> containing all callout
          function declarations which are expected to be implemented externally. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_06_FileStructure_TIME</srcid><srcstatus/><internalId>1951</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_06_FileStructure_TIME_Multicore</srcid><srcstatus/><internalId>1961</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Callouts.h_3</srcid><srcstatus/><internalId>761</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020202</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The generated file <code>WdgM_Cfg.h</code> shall provide the interface version of the
          component WdgM Static by defining the macro <code>WDGM_EB_STATICIF_VERSION</code>. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_07_VersionCheck1</srcid><srcstatus/><internalId>1952</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_07_VersionCheck1_Multicore</srcid><srcstatus/><internalId>1962</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Cfg.h.m4_961</srcid><srcstatus/><internalId>775</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020203</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The generated file <code>WdgM_Cfg.h</code> shall provide the interface version of the
          required component WdgM Generated by defining the macro
            <code>WDGM_EB_GENIF_VERSION_REQ</code>. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_07_VersionCheck1</srcid><srcstatus/><internalId>1952</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_07_VersionCheck1_Multicore</srcid><srcstatus/><internalId>1962</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Cfg.h.m4_968</srcid><srcstatus/><internalId>776</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020204</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The generated file <code>WdgM_Cfg.h</code> shall provide the macro
            <code>WDGM_EB_GENIF_VERSION_CHECK(staticif_req, generatedif)</code> for checking the
          interface compatibility between the components WdgM Static and WdgM Generated in the
          component WdgM Generated. </para>
        <para> Parameter <code>staticif_req</code> is the required interface version of WdgM Static. </para>
        <para> Parameter <code>generatedif</code> is the interface version of WdgM Generated. </para>
        <para> The macro returns TRUE if the interfaces between the components WdgM Static and WdgM
          Generated are compatible (i.e. <code>WDGM_EB_STATICIF_VERSION &gt;= staticif_req</code>
          and <code>generatedif &gt;= WDGM_EB_GENIF_VERSION_REQ</code>) </para>
        <para> The macro returns FALSE if the interfaces are not compatible. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_07_VersionCheck1</srcid><srcstatus/><internalId>1952</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_07_VersionCheck1_Multicore</srcid><srcstatus/><internalId>1962</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Cfg.h.m4_976</srcid><srcstatus/><internalId>777</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020205</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The file <code>WdgM.h</code> file shall check the compatibility between the
          components WdgM Static and WdgM Generated by using the macro
            <code>WDGM_EB_GENIF_VERSION_CHECK</code>. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_08_VersionCheck2</srcid><srcstatus/><internalId>1953</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_08_VersionCheck2_Multicore</srcid><srcstatus/><internalId>1963</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_27</srcid><srcstatus/><internalId>881</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020304</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMPartitioningEnabled</parameter>
              (WDGM.EB.TIMEPM.WDGM020118_Conf) is enabled</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>all runtime data which can be accessed (read and write) outside the execution
              context of the Watchdog Manager (e.g. from a Software Component) shall be allocated to
              a separate memory abstraction with identifier:
                <code>WDGM_[START|STOP]_SEC_VAR_CLEARED_SHARED_UNSPECIFIED</code>
            </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_1001_PartitionSupport</srcid><srcstatus/><internalId>1714</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_35</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_112</srcid><srcstatus/><internalId>787</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_181</srcid><srcstatus/><internalId>793</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_102</srcid><srcstatus/><internalId>807</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2299</srcid><srcstatus/><internalId>874</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_464</srcid><srcstatus/><internalId>924</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020305</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMPartitioningEnabled</parameter>
              (WDGM.EB.TIMEPM.WDGM020118_Conf) is enabled</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the generated Basic Software Module Description shall additionally specify the
              following memory abstraction identifier: <code>VAR_CLEARED_SHARED_UNSPECIFIED</code>
            </para>
            <para>Note: WdgM, all modules and SW-Cs which have check points implemented shall have
              write access to this section.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_Bswmd</srcid><srcstatus/><internalId>1709</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/WdgM_Bswmd.arxml.m4_404</srcid><srcstatus/><internalId>1618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020306</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameters <parameter>WdgMMixedSafetyCriticalityEnabled</parameter>
              (WDGM.EB.TIMEPM.WDGM020130_Conf) is enabled</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>all runtime data which can be accessed (read and write) only inside the
              execution context of a specific core instance shall be allocated
               to a memory abstraction with the core ID in the PREFIX and keyword LOCAL before alignment. 
               (eg.  WDGM_1_CORE_1_START_SEC_VAR_INIT_ASIL_D_LOCAL_UNSPECIFIED)
            </para>
          </listitem>
        </itemizedlist>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Due to the high importance of this topic, it's checked in 
	many places in sources and test configurations resulting in surpassing the count limit.
      </furtherinfo>
      <comment> The core ID is missing for the Master Instance in the PREFIX. 
        If the LOCAL is missing it means that data can be accessed (read and write)
        from all the cores (normal behavior). 
        See PREFIX and {coreScope} in AUTOSAR_SWS_MemoryMapping.pdf</comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_09</srcid><srcstatus/><internalId>2002</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_10</srcid><srcstatus/><internalId>2003</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_11</srcid><srcstatus/><internalId>2004</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_01</srcid><srcstatus/><internalId>2006</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_02</srcid><srcstatus/><internalId>2007</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_03</srcid><srcstatus/><internalId>2008</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_04</srcid><srcstatus/><internalId>2009</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_05</srcid><srcstatus/><internalId>2010</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_06</srcid><srcstatus/><internalId>2011</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_07</srcid><srcstatus/><internalId>2012</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_08</srcid><srcstatus/><internalId>2013</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1099</srcid><srcstatus/><internalId>833</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1230</srcid><srcstatus/><internalId>842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020307</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMMixedSafetyCriticalityEnabled</parameter>
              (WDGM.EB.TIMEPM.WDGM020130_Conf) is enabled</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>all runtime data which can be read only outside the execution
              context of the Watchdog Manager Master instance (e.g. from a Satellite)
              shall be allocated to a separate memory abstraction with identifier:
                <code>WDGM_[START|STOP]_SEC_VAR_INIT_SATELLITE_R_8</code>
                <code>WDGM_[START|STOP]_SEC_VAR_INIT_SATELLITE_R_16</code>
                <code>WDGM_[START|STOP]_SEC_VAR_CLEARED_SATELLITE_R_16</code>
            </para>
          </listitem>
        </itemizedlist>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
        WdgMMixedSafetyCriticalityEnabled is checked in many places in the sources and also in some test 
        configurations, due to the highly important nature of this topic resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_09</srcid><srcstatus/><internalId>2002</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_10</srcid><srcstatus/><internalId>2003</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_11</srcid><srcstatus/><internalId>2004</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_12</srcid><srcstatus/><internalId>2005</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_01</srcid><srcstatus/><internalId>2006</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_02</srcid><srcstatus/><internalId>2007</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_03</srcid><srcstatus/><internalId>2008</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_04</srcid><srcstatus/><internalId>2009</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_05</srcid><srcstatus/><internalId>2010</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_06</srcid><srcstatus/><internalId>2011</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_07</srcid><srcstatus/><internalId>2012</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_08</srcid><srcstatus/><internalId>2013</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_91</srcid><srcstatus/><internalId>785</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_864</srcid><srcstatus/><internalId>818</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1045</srcid><srcstatus/><internalId>831</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020308</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMPartitioningEnabled</parameter>
              (WDGM.EB.TIMEPM.WDGM020118_Conf) is enabled</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMNumberOfCores</parameter>
              (WDGM.EB.TIMEPM.WDGM020111_Conf) is greater than 1</para>
            </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>all runtime data which can be accessed (read and write) from all the cores
              outside the execution context of the Watchdog Manager (e.g. from a Software Component)
              shall be allocated to a separate memory abstraction with identifier:
                <code>WDGM_[START|STOP]_SEC_VAR_CLEARED_SHARED_MC_UNSPECIFIED</code>
            </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_1001_PartitionSupport</srcid><srcstatus/><internalId>1714</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2295</srcid><srcstatus/><internalId>873</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020302</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If the configuration parameter <parameter>WdgMDetCallout</parameter>
          (WDGM.EB.TIMEPM.WDGM020109_Conf) is enabled, then, instead of a DET report, the WdgM shall
          call the callout API configured in <parameter>WdgMDetCallout</parameter>
          (WDGM.EB.TIMEPM.WDGM020109_Conf) with the same arguments. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ImpTest_0601_TimE_DetDem</srcid><srcstatus/><internalId>2014</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckPerformReset_SupervisorEnabled_01</srcid><srcstatus/><internalId>2047</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMFTimingBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2048</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM_Int.h.m4_52</srcid><srcstatus/><internalId>937</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020303</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If the configuration parameter <parameter>WdgMDemCallout</parameter>
          (WDGM.EB.TIMEPM.WDGM020135_Conf) is enabled, then, instead of a DEM report, the WdgM shall
          call the callout API configured in <parameter>WdgMDemCallout</parameter>
          (WDGM.EB.TIMEPM.WDGM020135_Conf) with the same arguments. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM_Int.h.m4_63</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020400</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedWdgMModeCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020103_Conf) is disabled AND</para>
          </listitem>
          <listitem>
            <para>the GLOBAL state is WDGM_INIT_PENDING AND</para>
          </listitem>
          <listitem>
            <para>the GLOBAL status is WDGM_GLOBAL_DEACTIVATED</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>a call to function <code>WdgM_SetMode</code> returns E_OK and sets the Mode Switch
              Request to active for the next main function call, see Transition (19) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>.</para>
          </listitem>
        </itemizedlist>
        <para> Note: A Mode Switch Request can be overwritten (queue-size=0) and is executed /
          consumed within the next main function call. The following exceptions can exist:
          WdgM.ASR40.SWS_WdgM_00245, WdgM.SWS_WdgM_00145, WDGM.ASR40.WDGM021, WDGM.EB.TIMEPM.WDGM020457,
          WDGM.EB.TIMEPM.WDGM020458 </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30046</srcid><srcstatus/><internalId>1756</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30113</srcid><srcstatus/><internalId>1805</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30114</srcid><srcstatus/><internalId>1808</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_02</srcid><srcstatus/><internalId>1942</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03</srcid><srcstatus/><internalId>1943</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_04</srcid><srcstatus/><internalId>1944</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01</srcid><srcstatus/><internalId>2015</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_02_MC</srcid><srcstatus/><internalId>2089</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03_MC</srcid><srcstatus/><internalId>2090</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_04_MC</srcid><srcstatus/><internalId>2091</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1577</srcid><srcstatus/><internalId>980</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1612</srcid><srcstatus/><internalId>984</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1629</srcid><srcstatus/><internalId>986</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020461</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedWdgMModeCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020103_Conf) is disabled AND</para>
          </listitem>
          <listitem>
            <para>the GLOBAL state is WDGM_OK_MODE_NOT_PENDING AND</para>
          </listitem>
          <listitem>
            <para>the GLOBAL status is WDGM_GLOBAL_STATUS_OK </para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>a call to function <code>WdgM_SetMode</code> returns E_OK and sets the Mode Switch
              Request to active for the next main function call, see Transition (29) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>.</para>
          </listitem>
        </itemizedlist>
        <para> Note: A Mode Switch Request can be overwritten (queue-size=0) and is executed /
          consumed within the next main function call. The following exceptions can exist:
          WdgM.ASR40.SWS_WdgM_00245, WdgM.SWS_WdgM_00145, WDGM.ASR40.WDGM021, WDGM.EB.TIMEPM.WDGM020457,
          WDGM.EB.TIMEPM.WDGM020458 </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15</srcid><srcstatus/><internalId>2067</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32</srcid><srcstatus/><internalId>2068</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31</srcid><srcstatus/><internalId>2069</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15_MC</srcid><srcstatus/><internalId>2071</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32_MC</srcid><srcstatus/><internalId>2072</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31_MC</srcid><srcstatus/><internalId>2073</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1629</srcid><srcstatus/><internalId>986</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020462</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedWdgMModeCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020103_Conf) is disabled AND</para>
          </listitem>
          <listitem>
            <para>the GLOBAL state is WDGM_FAILED_MODE_NOT_PENDING AND</para>
          </listitem>
          <listitem>
            <para>the GLOBAL status is WDGM_GLOBAL_STATUS_FAILED </para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>a call to function <code>WdgM_SetMode</code> returns E_OK and sets the Mode Switch
              Request to active for the next main function call, see Transition (30) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>.</para>
          </listitem>
        </itemizedlist>
        <para> Note: A Mode Switch Request can be overwritten (queue-size=0) and is executed /
          consumed within the next main function call. The following exceptions can exist:
          WdgM.ASR40.SWS_WdgM_00245, WdgM.SWS_WdgM_00145, WDGM.ASR40.WDGM021, WDGM.EB.TIMEPM.WDGM020457,
          WDGM.EB.TIMEPM.WDGM020458 </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32</srcid><srcstatus/><internalId>2068</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32_MC</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1644</srcid><srcstatus/><internalId>988</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1665</srcid><srcstatus/><internalId>989</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020463</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedWdgMModeCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020103_Conf) is disabled AND</para>
          </listitem>
          <listitem>
            <para>the GLOBAL state is <code>WDGM_FAILED_MODE_PENDING</code> AND</para>
          </listitem>
          <listitem>
            <para>the GLOBAL status is <code>WDGM_GLOBAL_STATUS_FAILED</code></para>
          </listitem>
          <listitem>
            <para>the Local Supervision status of all Supervised Entities is
                <code>WDGM_LOCAL_STATUS_OK</code> or <code>WDGM_LOCAL_STATUS_DEACTIVATED</code>.
            </para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the <code>WdgM_MainFunction</code> shall perform the mode switch to the new WdgM
              Mode as specified after update of the GLOBAL status, see Transition (31) <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31</srcid><srcstatus/><internalId>2069</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31_MC</srcid><srcstatus/><internalId>2073</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4584</srcid><srcstatus/><internalId>1214</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020457</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedWdgMModeCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020103_Conf) is disabled AND</para>
          </listitem>
          <listitem>
            <para>the global state is WDGM_NOT_INITIALIZED AND NO Initialization Request is active
              ()</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>a call to function <code>WdgM_SetMode</code> returns E_NOT_OK and NO Mode Switch
              Request shall be set, see Transition (21) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>. . </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckModeSwitch_SupervisorDisabled_01</srcid><srcstatus/><internalId>2016</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1605</srcid><srcstatus/><internalId>983</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020458</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedWdgMModeCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020103_Conf) is disabled AND</para>
          </listitem>
          <listitem>
            <para>the WdgM is initialized AND</para>
          </listitem>
          <listitem>
            <para>the current global status does not equal WDGM_GLOBAL_STATUS_OK or
              WDGM_GLOBAL_STATUS_FAILED AND </para>
          </listitem>
          <listitem>
            <para>the current global state is WDGM_GLOBAL_STATUS_EXPIRED OR
              WDGM_GLOBAL_STATUS_FSTOPPED</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>a call to function <code>WdgM_SetMode</code> returns E_NOT_OK and NO Mode Switch
              Request shall be set, see Transition (22) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckModeSwitch_SupervisorDisabled_02</srcid><srcstatus/><internalId>2017</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1617</srcid><srcstatus/><internalId>985</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020459</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedWdgMModeCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020103_Conf) is disabled AND</para>
          </listitem>
          <listitem>
            <para>the Global state is WDGM_DEINIT_PENDING AND</para>
          </listitem>
          <listitem>
            <para>the Global status is either WDGM_GLOBAL_STATUS_OK OR WDGM_GLOBAL_STATUS_FAILED OR
              WDGM_GLOBAL_STATUS_EXPIRED OR WDGM_GLOBAL_STATUS_STOPPED</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>a call to function <code>WdgM_SetMode</code> returns E_NOT_OK and NO Mode Switch
              Request shall be set, see Transition (23) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/> AND </para>
          </listitem>
          <listitem>
            <para>if the configuration parameter <parameter>WdgMDevErrorDetect</parameter>
              (WDGM.ASR40.WDGM301_Conf) is enabled, then the error shall be reported to the
              Development Error Tracer with the error code WDGM_E_NO_INIT, according to
              WdgM.SWS_WdgM_00142. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30147_CheckSetModeBeforeInit</srcid><srcstatus/><internalId>1738</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30148_CheckSetModeWithSameMode</srcid><srcstatus/><internalId>1739</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_23</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_23_MC</srcid><srcstatus/><internalId>2074</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1572</srcid><srcstatus/><internalId>979</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020401</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedWdgMModeCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020103_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMSetModeRedirectionCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020117_Conf) is empty</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the function <code>WdgM_SetMode</code> shall not be provided.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_Compile_09_ProvidedFunctions</srcid><srcstatus/><internalId>1713</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_302</srcid><srcstatus/><internalId>899</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1520</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020402</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedWdgMModeCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020103_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMSetModeRedirectionCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020117_Conf) is not empty</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>a call to function <code>WdgM_SetMode</code> shall re-direct the call with same
              arguments and return value to the function configured in parameter
                <parameter>WdgMSetModeRedirectionCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020117_Conf).</para>
          </listitem>
        </itemizedlist>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Due to the high importance of this topic, it's checked in 
	many places in sources and test configurations resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2026</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_02</srcid><srcstatus/><internalId>2027</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_03</srcid><srcstatus/><internalId>2028</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_04</srcid><srcstatus/><internalId>2029</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_05</srcid><srcstatus/><internalId>2030</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_06</srcid><srcstatus/><internalId>2031</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_07</srcid><srcstatus/><internalId>2032</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_08</srcid><srcstatus/><internalId>2033</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_09</srcid><srcstatus/><internalId>2034</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_10</srcid><srcstatus/><internalId>2035</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_11</srcid><srcstatus/><internalId>2036</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_12</srcid><srcstatus/><internalId>2037</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_35_36</srcid><srcstatus/><internalId>2066</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_351</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020403</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) is disabled AND</para>
          </listitem>
          <listitem>
            <para>the Global state is WDGM_NOT_INITIALIZED</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>a call to function <code>WdgM_Init</code> shall set an Initialization Request to
              active for the next main function execution, see Transition (28) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>.</para>
          </listitem>
        </itemizedlist>
        <para> Note: A (de-)Initialization Request can be overwritten (queue-size=0) and is executed
          / consumed within the next main function call. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01</srcid><srcstatus/><internalId>2015</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckModeSwitch_SupervisorDisabled_02</srcid><srcstatus/><internalId>2017</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_01</srcid><srcstatus/><internalId>2018</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_02</srcid><srcstatus/><internalId>2019</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_03</srcid><srcstatus/><internalId>2020</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_04</srcid><srcstatus/><internalId>2021</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_11</srcid><srcstatus/><internalId>2022</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_12</srcid><srcstatus/><internalId>2023</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1434</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020404</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) is disabled AND</para>
          </listitem>
          <listitem>
            <para>the WdgM is initialized AND </para>
          </listitem>
          <listitem>
            <para>the GLOBAL state is either WDGM_OK_MODE_NOT_PENDING OR WDGM_OK_MODE_PENDING OR
              WDGM_FAILED_MODE_NOT_PENDING OR WDGM_FAILED_MODE_PENDING AND </para>
          </listitem>
          <listitem>
            <para>the GLOBAL status is either WDGM_GLOBAL_STATUS_OK OR WDGM_GLOBAL_STATUS_FAILED
            </para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>a call to function <code>WdgM_DeInit</code> shall set a De-initialization Request
              to active for the next main function call, see Transition (17) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>.</para>
          </listitem>
        </itemizedlist>
        <para> Note: A (de-)Initialization Request can be overwritten (queue-size=0) and is executed
          / consumed within the next main function call. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_01</srcid><srcstatus/><internalId>2018</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_02</srcid><srcstatus/><internalId>2019</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_03</srcid><srcstatus/><internalId>2020</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_04</srcid><srcstatus/><internalId>2021</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_DeInit_NotInit_Multicore</srcid><srcstatus/><internalId>2084</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1458</srcid><srcstatus/><internalId>961</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1469</srcid><srcstatus/><internalId>963</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020464</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) is disabled AND</para>
          </listitem>
          <listitem>
            <para>the WdgM is initialized AND </para>
          </listitem>
          <listitem>
            <para>the GLOBAL state is either WDGM_GLOBAL_STATUS_EXPIRED OR
              WDGM_GLOBAL_STATUS_STOPPED AND </para>
          </listitem>
          <listitem>
            <para>the GLOBAL status is either WDGM_GLOBAL_STATUS_EXPIRED OR
              WDGM_GLOBAL_STATUS_STOPPED </para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>a call to function <code>WdgM_DeInit</code> shall set a De-initialization Request
              to active for the next main function call, see Transition (24) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>.</para>
          </listitem>
        </itemizedlist>
        <para> Note: A (de-)Initialization Request can be overwritten (queue-size=0) and is executed
          / consumed within the next main function call. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_11</srcid><srcstatus/><internalId>2022</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_12</srcid><srcstatus/><internalId>2023</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1473</srcid><srcstatus/><internalId>964</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020405</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMInitRedirectionCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020115_Conf) is empty</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the function <code>WdgM_Init</code> shall not be provided.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_Compile_09_ProvidedFunctions</srcid><srcstatus/><internalId>1713</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_233</srcid><srcstatus/><internalId>895</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1417</srcid><srcstatus/><internalId>952</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020406</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMInitRedirectionCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020115_Conf) is not empty</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>a call to function <code>WdgM_Init</code> shall re-direct the call with same
              argument to the function configured in parameter
                <parameter>WdgMInitRedirectionCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020115_Conf).</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2026</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_03</srcid><srcstatus/><internalId>2028</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_04</srcid><srcstatus/><internalId>2029</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_05</srcid><srcstatus/><internalId>2030</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_251</srcid><srcstatus/><internalId>896</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020407</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMDeInitRedirectionCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020116_Conf) is empty</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the function <code>WdgM_DeInit</code> shall not be provided.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_Compile_09_ProvidedFunctions</srcid><srcstatus/><internalId>1713</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_256</srcid><srcstatus/><internalId>897</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1447</srcid><srcstatus/><internalId>959</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020408</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMDeInitRedirectionCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020116_Conf) is not empty</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>a call to function <code>WdgM_DeInit</code> shall re-direct the call to the
              function configured in parameter <parameter>WdgMDeInitRedirectionCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020116_Conf).</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_02</srcid><srcstatus/><internalId>2027</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_06</srcid><srcstatus/><internalId>2031</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_07</srcid><srcstatus/><internalId>2032</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_08</srcid><srcstatus/><internalId>2033</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_09</srcid><srcstatus/><internalId>2034</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_10</srcid><srcstatus/><internalId>2035</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_11</srcid><srcstatus/><internalId>2036</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_12</srcid><srcstatus/><internalId>2037</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_274</srcid><srcstatus/><internalId>898</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020409</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) is disabled AND</para>
          </listitem>
          <listitem>
            <para>a WdgM Initialization Request is active (i.e. the API WdgM_Init was called
              before), see Transition (28) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>
              AND</para>
          </listitem>
          <listitem>
            <para>the Global state is WDGM_INIT_PENDING AND</para>
          </listitem>
          <listitem>
            <para>no WdgM Mode Switch Request is active (i.e. WdgM_SetMode was not called after
              WdgM_Init)</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the <code>WdgM_MainFunction</code> shall initialize the WdgM with the WdgMMode
              configured in parameter <parameter>WdgMInitialMode</parameter> (see
              WDGM.ASR40.WDGM336_Conf), see Transition (18) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30111</srcid><srcstatus/><internalId>1803</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckModeSwitch_SupervisorDisabled_02</srcid><srcstatus/><internalId>2017</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_01</srcid><srcstatus/><internalId>2018</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_02</srcid><srcstatus/><internalId>2019</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_03</srcid><srcstatus/><internalId>2020</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_04</srcid><srcstatus/><internalId>2021</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_11</srcid><srcstatus/><internalId>2022</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_12</srcid><srcstatus/><internalId>2023</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2583</srcid><srcstatus/><internalId>1076</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020410</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) is disabled AND</para>
          </listitem>
          <listitem>
            <para>a WdgM Initialization Request is active (i.e. the API WdgM_Init was called
              before), see Transition (28) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>
              AND</para>
          </listitem>
          <listitem>
            <para>a WdgM Mode Switch Request is active (i.e. WdgM_SetMode was called after
              WdgM_Init), see Transition (19) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>
            </para>
          </listitem>
          <listitem>
            <para>the Global state is WDGM_PRE_MODE_CHANGE_PENDING</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the <code>WdgM_MainFunction</code> shall initialize the WdgM with the WdgMMode of
              the active WdgM Mode Switch Request, see Transition (20) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01</srcid><srcstatus/><internalId>2015</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2583</srcid><srcstatus/><internalId>1076</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020412</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>the Global state is WDGM_NOT_INITIALIZED</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the <code>WdgM_MainFunction</code> shall call the function configured in parameter
                <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) and, </para>
          </listitem>
          <listitem>
            <para> only if the function returns <code>E_OK</code> with an expected initialization
              state of <code>WDGM_EB_INIT_STATUS_INIT</code>, </para>
          </listitem>
          <listitem>
            <para> the <code>WdgM_MainFunction</code> shall initialize the WdgM with the mode
              returned by this function in the argument WdgMMode, see Transition (13) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2026</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_03</srcid><srcstatus/><internalId>2028</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_04</srcid><srcstatus/><internalId>2029</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2583</srcid><srcstatus/><internalId>1076</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6308</srcid><srcstatus/><internalId>1331</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020414</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) is disabled AND</para>
          </listitem>
          <listitem>
            <para>the WdgM is initialized AND</para>
          </listitem>
          <listitem>
            <para>a WdgM De-initialization Request is active (i.e. the API WdgM_DeInit was called
              before) AND</para>
          </listitem>
          <listitem>
            <para>the Global state WDGM_DEINIT_PENDING AND </para>
          </listitem>
          <listitem>
            <para>the Global status is either WDGM_GLOBAL_STATUS_OK OR WDGM_GLOBAL_STATUS_FAILED OR
              WDGM_GLOBAL_STATUS_EXPIRED OR WDGM_GLOBAL_STATUS_STOPPED</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the <code>WdgM_MainFunction</code> shall de-initialize the WdgM without a final
              evaluation of the supervision algorithm, see Transiton (14) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_01</srcid><srcstatus/><internalId>2018</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_02</srcid><srcstatus/><internalId>2019</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_03</srcid><srcstatus/><internalId>2020</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_04</srcid><srcstatus/><internalId>2021</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_11</srcid><srcstatus/><internalId>2022</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_12</srcid><srcstatus/><internalId>2023</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2417</srcid><srcstatus/><internalId>1058</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020415</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) is enabled AND</para>
          </listitem>
          <listitem><para>the WdgM is initialized</para> AND</listitem>
          <listitem>
            <para> the GLOBAL state is either WDGM_OK_MODE_NOT_PENDING OR
              WDGM_FAILED_MODE_NOT_PENDING AND </para>
          </listitem>
          <listitem>
            <para>the Global status is either WDGM_GLOBAL_STATUS_OK OR WDGM_GLOBAL_STATUS_FAILED
            </para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the <code>WdgM_MainFunction</code> shall call the function configured in parameter
                <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) and, </para>
          </listitem>
          <listitem>
            <para> only if the function returns <code>E_OK</code> with an expected initialization
              state of <code>WDGM_EB_INIT_STATUS_DEINIT</code> in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>. </para>
          </listitem>
          <listitem>
            <para> the <code>WdgM_MainFunction</code> shall de-initialize the WdgM without a final
              evaluation of the supervision algorithm, see Transition (33) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_06</srcid><srcstatus/><internalId>2031</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_07</srcid><srcstatus/><internalId>2032</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_09</srcid><srcstatus/><internalId>2034</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_10</srcid><srcstatus/><internalId>2035</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6431</srcid><srcstatus/><internalId>1337</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020465</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) is enabled AND</para>
          </listitem>
          <listitem><para>the WdgM is initialized</para> AND</listitem>
          <listitem>
            <para> WDGM_GLOBAL_STATUS_EXPIRED OR WDGM_GLOBAL_STATUS_STOPPED AND </para>
          </listitem>
          <listitem>
            <para>the Global status is either WDGM_GLOBAL_STATUS_EXPIRED OR
              WDGM_GLOBAL_STATUS_STOPPED</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the <code>WdgM_MainFunction</code> shall call the function configured in parameter
                <parameter>WdgMGetExpectedInitStateCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020101_Conf) and, </para>
          </listitem>
          <listitem>
            <para> only if the function returns <code>E_OK</code> with an expected initialization
              state of <code>WDGM_EB_INIT_STATUS_DEINIT</code>. </para>
          </listitem>
          <listitem>
            <para> the <code>WdgM_MainFunction</code> shall de-initialize the WdgM without a final
              evaluation of the supervision algorithm, see Transition (34) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_11</srcid><srcstatus/><internalId>2036</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_12</srcid><srcstatus/><internalId>2037</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2417</srcid><srcstatus/><internalId>1058</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020417</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedWdgMModeCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020103_Conf) is disabled AND</para>
          </listitem>
          <listitem>
            <para>the WdgM is initialized AND</para>
          </listitem>
          <listitem>
            <para>a NO De-initialization Request is active AND</para>
          </listitem>
          <listitem>
            <para>the Global status is WDGM_GLOBAL_STATUS_OK AND</para>
          </listitem>
          <listitem>
            <para>a WdgM Mode Switch Request is active AND</para>
          </listitem>
          <listitem>
            <para>the Global state is WDGM_OK_MODE_PENDING</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem><para>the <code>WdgM_MainFunction</code> shall perform the Transition (15), see
                <xref linkend="figureBSWTimEGlobalSupervisionStatus"/> AND</para></listitem>
          <listitem><para>if the requested WdgMMode differs from the actual WdgMMode then the
                <code>WdgM_MainFunction</code> shall perform the mode switch to the new WdgM mode as
              specified after the execution of the supervision. </para></listitem>. </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30113</srcid><srcstatus/><internalId>1805</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30114</srcid><srcstatus/><internalId>1808</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15</srcid><srcstatus/><internalId>2067</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15_MC</srcid><srcstatus/><internalId>2071</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1634</srcid><srcstatus/><internalId>987</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2513</srcid><srcstatus/><internalId>1068</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6577</srcid><srcstatus/><internalId>1343</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020460</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedWdgMModeCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020103_Conf) is disabled AND</para>
          </listitem>
          <listitem>
            <para>the WdgM is initialized AND</para>
          </listitem>
          <listitem>
            <para>a NO De-initialization Request is active AND</para>
          </listitem>
          <listitem>
            <para> the Global status is WDGM_GLOBAL_STATUS_FAILED AND</para>
          </listitem>
          <listitem>
            <para>a WdgM Mode Switch Request is active AND</para>
          </listitem>
          <listitem>
            <para>the Global state is WDGM_FAILED_MODE_PENDING AND</para>
          </listitem>
          <listitem>
            <para>at least the status of one Local Supervised Entity is
              WDGM_LOCAL_STATUS_FAILED</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the <code>WdgM_MainFunction</code> shall perform the Transition(32), see <xref linkend="figureBSWTimEGlobalSupervisionStatus"/> AND</para>
          </listitem>
          <listitem>
            <para>if the requested WdgMMode differs from the actual WdgMMode then perform the mode
              switch to the new WdgM mode as specified after the execution of the supervision.
            </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32</srcid><srcstatus/><internalId>2068</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32_MC</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1634</srcid><srcstatus/><internalId>987</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2513</srcid><srcstatus/><internalId>1068</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020419</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetExpectedWdgMModeCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020103_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>the WdgM is initialized AND</para>
          </listitem>
          <listitem>
            <para>the WdgM is not de-initialized during the WdgM main function execution (due to
              WDGM.EB.TIMEPM.WDGM020415) AND</para>
          </listitem>
          <listitem>
            <para> the Global status is either WDGM_GLOBAL_STATUS_OK OR WDGM_GLOBAL_STATUS_FAILED
            </para>
          </listitem>
          <listitem>
            <para> the Global state is either WDGM_OK_MODE_NOT_PENDING OR
              WDGM_FAILED_MODE_NOT_PENDING AND </para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the <code>WdgM_MainFunction</code> shall call the function configured in parameter
                <parameter>WdgMGetExpectedWdgMModeCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020103_Conf) and, </para>
          </listitem>
          <listitem>
            <para> only if the function returns <code>E_OK</code> with a valid new WdgM mode that
              differs from the actual WdgMMode, </para>
          </listitem>
          <listitem>
            <para> the <code>WdgM_MainFunction</code> shall perform a mode switch to the new WdgM
              mode as specified after the execution of the supervision, see Transition (35) and (36)
              in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_05</srcid><srcstatus/><internalId>2030</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_06</srcid><srcstatus/><internalId>2031</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_08</srcid><srcstatus/><internalId>2033</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_09</srcid><srcstatus/><internalId>2034</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_35_36</srcid><srcstatus/><internalId>2066</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6546</srcid><srcstatus/><internalId>1341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020420</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM is not initialized during the WdgM main function execution (due to
              WDGM.EB.TIMEPM.WDGM020412, WDGM.EB.TIMEPM.WDGM020410, or WDGM.EB.TIMEPM.WDGM020409)
              OR</para>
          </listitem>
          <listitem>
            <para>the WdgM is de-initialized during the WdgM main function execution (due to
              WDGM.EB.TIMEPM.WDGM020415 or WDGM.EB.TIMEPM.WDGM020414) OR</para>
          </listitem>
          <listitem>
            <para>the WdgM is kept initialized during the WdgM main function execution and the
              global supervision status equals <code>WDGM_GLOBAL_STATUS_DEACTIVATED</code></para>
          </listitem>
          <listitem>
            <para>the GLOBAL state is either WDGM_NOT_INITIALIZED OR WDGM_INT_PENDING OR
              WDGM_PRE_MODE_CHANGE_PENDING AND </para>
          </listitem>
          <listitem>
            <para>the GLOBAL status is WDGM_GLOBAL_STATUS_DEACTIVATED </para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the <code>WdgM_MainFunction</code> shall not execute the Supervision Algorithms
              which includes calculation of the local / global supervision status and triggering of
              the watchdogs, see Transition (25) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>. </para>
          </listitem>
        </itemizedlist>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this aspect is 
	checked in many places in the sources and also in some test configurations, due to the highly 
	important nature of this topic resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_01</srcid><srcstatus/><internalId>2018</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_02</srcid><srcstatus/><internalId>2019</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_03</srcid><srcstatus/><internalId>2020</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_04</srcid><srcstatus/><internalId>2021</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_11</srcid><srcstatus/><internalId>2022</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_12</srcid><srcstatus/><internalId>2023</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckDeInit_SupervisorDisabled_01</srcid><srcstatus/><internalId>2024</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckDeInit_SupervisorDisabled_02</srcid><srcstatus/><internalId>2025</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2026</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_02</srcid><srcstatus/><internalId>2027</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_07</srcid><srcstatus/><internalId>2032</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_10</srcid><srcstatus/><internalId>2035</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_11</srcid><srcstatus/><internalId>2036</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_12</srcid><srcstatus/><internalId>2037</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2433</srcid><srcstatus/><internalId>1060</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020416</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter WdgMGetExpectedInitStateCallout is disabled AND</para>
          </listitem>
          <listitem>
            <para>the Global state is WDGM_PRE_MODE_CHANGE_PENDING AND</para>
          </listitem>
          <listitem>
            <para>the GLOBAL status is WDGM_GLOBAL_STATUS_DEACTIVATED </para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>a succesfull call to function WdgM_DeInit shall de-initialize the WdgM, the Global
              state shall change to WDGM_NOT_INITIALIZED, see Transition (26) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckDeInit_SupervisorDisabled_02</srcid><srcstatus/><internalId>2025</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1469</srcid><srcstatus/><internalId>963</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020418</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter WdgMGetExpectedInitStateCallout is disabled AND</para>
          </listitem>
          <listitem>
            <para>the Global state is WDGM_INIT_PENDING AND</para>
          </listitem>
          <listitem>
            <para>the GLOBAL status is WDGM_GLOBAL_STATUS_DEACTIVATED </para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>a succesfull call to function WdgM_DeInit shall de-initialize the WdgM, the Global
              state shall change to WDGM_NOT_INITIALIZED, see Transition (27) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>.. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckDeInit_SupervisorDisabled_01</srcid><srcstatus/><internalId>2024</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1469</srcid><srcstatus/><internalId>963</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>
    <!-- additional error reporting -->
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020447</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM_MainFunction is called AND</para>
          </listitem>
          <listitem>
            <para>a WdgM_MainFunction execution is currently active (i.e. execution of
              WdgM_MainFunction is interrupted)</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM_MainFunction shall return without any actions.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckMainFunctionReentrancy_02</srcid><srcstatus/><internalId>2050</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2385</srcid><srcstatus/><internalId>1056</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable22</srcid><srcstatus/><internalId>1685</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>


    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020448</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMErrorRecoveryEnabled</parameter>
              (WDGM.EB.TIMEPM.WDGM020112_Conf) is enabled for a Supervised Entity</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the Supervised Entity shall enter LocalSupervisionStatus
                <parameter>WDGM_LOCAL_STATUS_FAILED</parameter> instead of
                <parameter>WDGM_LOCAL_STATUS_EXPIRED</parameter> without incrementing the counter
              for failed supervision reference cycles. </para>
          </listitem>
        </itemizedlist>
        <para> Note: This is in contrast to WdgM.SWS_WdgM_00202 and WDGM.EB.ASR40.WDGM206 which only
          apply in case the configuration parameter <parameter>WdgMErrorRecoveryEnabled</parameter>
          is disabled. </para>
      </description>
      <comment> The transition from DGM_LOCAL_STATUS_FAILED to WDGM_LOCAL_STATUS_OK as required for
        error recovery is performed according to WdgM.SWS_WdgM_00205. This means that if Alive
        Supervision is configured together with Deadline and/or Logical Supervision and if the
        parameter <parameter>WdgMFailedAliveSupervisionRefCycleTol</parameter> (see
        WDGM.ASR40.WDGM327_Conf) is set to a value greater than 0, then Error recovery is performed
        only at the Supervision Reference Cycles and no change of the Global Supervision State is
        performed in between.
        <!--  geho: new design item addedd to address Jira ASCWDGM-364--></comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4387</srcid><srcstatus/><internalId>1195</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4432</srcid><srcstatus/><internalId>1200</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4474</srcid><srcstatus/><internalId>1205</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4485</srcid><srcstatus/><internalId>1206</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_01</srcid><srcstatus/><internalId>2040</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_02</srcid><srcstatus/><internalId>2041</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_01</srcid><srcstatus/><internalId>2042</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_02</srcid><srcstatus/><internalId>2043</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_03</srcid><srcstatus/><internalId>2044</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromLogicalFailureDetection_01</srcid><srcstatus/><internalId>2045</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromLogicalFailureDetection_02</srcid><srcstatus/><internalId>2046</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020480</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMErrorRecoveryEnabled</parameter>
              (WDGM.EB.TIMEPM.WDGM020112_Conf) is enabled for a Supervised Entity AND </para>
          </listitem>
          <listitem>
            <para>Deadline Monitoring is configured for this Supervised Entity AND</para>
          </listitem>
          <listitem>
            <para>the Deadline Start Checkpoint is called AND</para>
          </listitem>
          <listitem>
            <para>the Deadline End Checkpoint is called but not within the Min, Max limit AND</para>
          </listitem>
          <listitem>
            <para>the Deadline End Checkpoint called again (i.e. the Deadline Start Checkpoint is
              not called in between) but now within the Min, Max limit</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the Supervised Entity shall enter the LocalSupervisionStatus
                <parameter>WDGM_LOCAL_STATUS_FAILED</parameter>. </para>
          </listitem>
        </itemizedlist>
        <para> Note: This is in contrast to WdgM.SWS_WdgM_00202 and WDGM.EB.ASR40.WDGM206 which only
          apply in case the configuration parameter <parameter>WdgMErrorRecoveryEnabled</parameter>
          is disabled. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3674</srcid><srcstatus/><internalId>1154</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_01</srcid><srcstatus/><internalId>2042</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_02</srcid><srcstatus/><internalId>2043</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020481</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem><para>the configuration parameter
                <parameter>WdgMErrorRecoveryEnabled</parameter> (WDGM.EB.TIMEPM.WDGM020112_Conf) is
              enabled for a Supervised Entity AND </para>
          </listitem>
          <listitem><para>Logical Supervision is configured for this Supervised Entity
            AND</para></listitem>
          <listitem><para>the result of Logical Supervision is <code>incorrect</code> (e.g. are
              bypassed) so that the LocalSupervisionStatus is
                <parameter>WDGM_LOCAL_STATUS_FAILED</parameter> AND</para></listitem>
          <listitem><para>if all paths in the Logical Supervision Graph having a Checkpoint with a
              failed Logical Supervision State are executed again in the correct sequence
            </para></listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem><para>the Supervised Entity shall enter LocalSupervisionStatus
                <parameter>WDGM_LOCAL_STATUS_OK</parameter>. </para>
          </listitem>
        </itemizedlist>
        <para> Note: This is in contrast to WdgM.SWS_WdgM_00202 and WDGM.EB.ASR40.WDGM206 which only
          apply in case the configuration parameter <parameter>WdgMErrorRecoveryEnabled</parameter>
          is disabled. </para>
        <para> Note: If a checkpoint in an IF-Then path reports an error (e.g. in the TRUE path),
          and in the next execution the FALSE path of this checkpoint is passed correctly and the
          LocalSupervisionStatus is still <parameter>WDGM_LOCAL_STATUS_FAILED</parameter> because of
          the previous failed checkpoint was not passed correctly. Only when all previous failed
          checkpoints are passed with the status OK then the LocalSupervisionStatus is
            <parameter>WDGM_LOCAL_STATUS_OK</parameter>.</para>. </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3077</srcid><srcstatus/><internalId>1121</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3188</srcid><srcstatus/><internalId>1130</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3335</srcid><srcstatus/><internalId>1140</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromLogicalFailureDetection_01</srcid><srcstatus/><internalId>2045</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromLogicalFailureDetection_02</srcid><srcstatus/><internalId>2046</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>
    <!--  geho: new design item addedd to address Jira ASCWDGM-393-->
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020482</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If the <parameter>WdgMErrorRecoveryEnabled</parameter> is enabled AND the
        Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_OK AND If the result of
        at least one Alive Supervision of the Supervised Entity is incorrect and a Failure Tolerance
        greater than zero is configured (see configuration parameter
        WdgMFailedAliveSupervisionRefCycleTol [WDGM327_Conf]) THEN the function WdgM_MainFunction
        shall change the Local Supervision Status to WDGM_LOCAL_STATUS_FAILED and increment the
        counter for failed supervision reference cycles (see Transition (3) in <xref linkend="figureBSWLocalSupervisionStatus"/>). Note: This is in contrast to
        WDGM.ASR40.WDGM203 which only apply in case the configuration parameter
        WdgMErrorRecoveryEnabled is disabled. </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4427</srcid><srcstatus/><internalId>1199</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_01</srcid><srcstatus/><internalId>2040</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_02</srcid><srcstatus/><internalId>2041</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020483</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If the <parameter>WdgMErrorRecoveryEnabled</parameter> is enabled AND the
        Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_FAILED AND: If the
        result of at least one Alive Supervision is incorrect and the counter for failed supervision
        reference cycles does not exceed the configured Failure Tolerance (see parameter
        WdgMFailedAliveSupervisionRefCycleTol [WDGM327_Conf]) THEN the function WdgM_MainFunction
        shall keep the Local Supervision Status in WDGM_LOCAL_STATUS_FAILED and increment the
        counter for failed supervision reference cycles (see Transition (4) in <xref linkend="figureBSWLocalSupervisionStatus"/>). Note: This is in contrast to
        WDGM.ASR40.WDGM204 which only apply in case the configuration parameter
        WdgMErrorRecoveryEnabled is disabled. </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4427</srcid><srcstatus/><internalId>1199</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_01</srcid><srcstatus/><internalId>2040</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_02</srcid><srcstatus/><internalId>2041</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020484</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If the <parameter>WdgMErrorRecoveryEnabled</parameter> is enabled AND the
        Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_FAILED AND: If all the
        results of Alive Supervision of the Supervised Entity are correct and the counter for failed
        supervision reference cycles is &gt; 1 THEN the function WdgM_MainFunction shall keep the
        Local Supervision Status in WDGM_LOCAL_STATUS_FAILED and decrement the counter for failed
        supervision reference cycles (see Transition (4) in <xref linkend="figureBSWLocalSupervisionStatus"/>). Note: This is in contrast to
        WDGM.ASR40.WDGM300 which only apply in case the configuration parameter
        WdgMErrorRecoveryEnabled is disabled. </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4447</srcid><srcstatus/><internalId>1202</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_01</srcid><srcstatus/><internalId>2040</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_02</srcid><srcstatus/><internalId>2041</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020449</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The Watchdog Manager module shall be able to detect the following error: Call to an
          API is not authorized: <parameter>WDGM_E_NOT_AUTHORIZED 0xF1</parameter>
        </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckPerformReset_SupervisorEnabled_01</srcid><srcstatus/><internalId>2047</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2263</srcid><srcstatus/><internalId>1042</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020451</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>function <code>WdgM_PerformReset</code> is called AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMIsPerformResetCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020105_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>a call to the function configured in parameter
                <parameter>WdgMIsPerformResetCallout</parameter> (WDGM.EB.TIMEPM.WDGM020105_Conf)
              returns <code>E_OK</code></para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the Watchdog Manager shall execute the service as specified.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckPerformReset_SupervisorEnabled_01</srcid><srcstatus/><internalId>2047</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2259</srcid><srcstatus/><internalId>1041</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020452</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the function <code>WdgM_PerformReset</code> is called AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMIsPerformResetCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020105_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>a call to the function configured in parameter
                <parameter>WdgMIsPerformResetCallout</parameter> (WDGM.EB.TIMEPM.WDGM020105_Conf)
              returns <code>E_NOT_OK</code></para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the service shall not be executed AND </para>
          </listitem>
          <listitem>
            <para>if the configuration parameter <parameter>WdgMDevErrorDetect</parameter> (see
              WDGM.ASR40.WDGM301_Conf) is enabled then the error shall be reported to the
              Development Error Tracer with the error code
                <parameter>WDGM_E_NOT_AUTHORIZED</parameter> (see WDGM.EB.TIMEPM.WDGM020449).</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckPerformReset_SupervisorEnabled_01</srcid><srcstatus/><internalId>2047</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2263</srcid><srcstatus/><internalId>1042</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020453</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager module shall be able to detect the following errors and
        exceptions depending on its configuration (development / production mode): Violation of main
        function schedule time: <parameter>WDGM_E_MF_TIMINGVIOLATION</parameter>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckMFTimingBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2048</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4810</srcid><srcstatus/><internalId>1235</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020454</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetElapsedTimeCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020104_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>the WdgM is initialized</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the <code>WdgM_MainFunction</code> shall report to the Diagnostic Event Manager an
              error with the value <parameter>WDGM_E_MF_TIMINGVIOLATION</parameter> in case the
              measured time difference to the previous <code>WdgM_MainFunction</code> call does not
              equal the configured mode-dependent schedule period of the main function specified in
              parameter <parameter>WdgMSupervisionCycle</parameter> (see WDGM.ASR40.WDGM330_Conf)
              with respect to some tolerance time (plus / minus) configured in parameter
                <parameter>WdgMMainFunctionPeriodTolerance</parameter> (see
              WDGM.EB.TIMEPM.WDGM020123_Conf). </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckMFTimingBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2048</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2423</srcid><srcstatus/><internalId>1059</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4810</srcid><srcstatus/><internalId>1235</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020485</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetElapsedTimeCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020104_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMMainFunctionFaultCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020124_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>the WdgM is initialized</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the <code>WdgM_MainFunction</code> shall call the Supervisor Callout 
              configured by paramter WdgMMainFunctionFaultCallout in case the
              measured time difference to the previous <code>WdgM_MainFunction</code> call does not
              equal the configured mode-dependent schedule period of the main function specified in
              parameter <parameter>WdgMSupervisionCycle</parameter> (see WDGM.ASR40.WDGM330_Conf)
              with respect to some tolerance time (plus / minus) configured in parameter
                <parameter>WdgMMainFunctionPeriodTolerance</parameter> (see
              WDGM.EB.TIMEPM.WDGM020123_Conf). </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_DeadlineSupervision</srcid><srcstatus/><internalId>1907</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckMFTimingBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2048</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4818</srcid><srcstatus/><internalId>1236</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020487</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMSatelliteAlivenessCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020131_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMSatelliteAlivenessPeriodCheck</parameter>
              (WDGM.EB.TIMEPM.WDGM020132_Conf) is greater than 0 AND</para>
          </listitem>
          <listitem>
            <para>the WdgM is initialized</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the Master Core <code>WdgM_MainFunction</code> shall check the aliveness 
              of the Satelite Core(s) <code>WdgM_MainFunction</code> at a frequency specified by
              the parameter <parameter>WdgMSatelliteAlivenessPeriodCheck</parameter> (WDGM.EB.TIMEPM.WDGM020132_Conf)
            </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_01_MC</srcid><srcstatus/><internalId>2064</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_02_MC</srcid><srcstatus/><internalId>2065</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2536</srcid><srcstatus/><internalId>1069</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4323</srcid><srcstatus/><internalId>1193</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable36</srcid><srcstatus/><internalId>1699</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable37</srcid><srcstatus/><internalId>1700</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020488</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMSatelliteAlivenessCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020131_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMSatelliteAlivenessPeriodCheck</parameter>
              (WDGM.EB.TIMEPM.WDGM020132_Conf) is greater than 0 AND</para>
          </listitem>
          <listitem>
            <para>the WdgM is initialized</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the Master Core <code>WdgM_MainFunction</code> shall report to the Diagnostic Event 
              manager an error with the value <parameter>WDGM_E_MF_SATELLITE_ERROR</parameter> in case 
              the Satelitte Core(s) <code>WdgM_MainFunction</code> did not run in the configured number of Master Core 
              <code>WdgM_MainFunction</code> iterations specified by parameter 
              <parameter>WdgMSatelliteAlivenessPeriodCheck</parameter> (see WDGM.EB.TIMEPM.WDGM020132_Conf) 
            </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_01_MC</srcid><srcstatus/><internalId>2064</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_02_MC</srcid><srcstatus/><internalId>2065</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1674</srcid><srcstatus/><internalId>853</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020489</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The Watchdog Manager module shall be able to detect the following errors and
        exceptions depending on its configuration (development / production mode): Violation of satellite
        core(s) main function aliveness: <parameter>WDGM_E_MF_SATELLITE_ERROR</parameter>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_01_MC</srcid><srcstatus/><internalId>2064</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_02_MC</srcid><srcstatus/><internalId>2065</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1674</srcid><srcstatus/><internalId>853</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020490</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMSatelliteAlivenessCallout</parameter>
              (WDGM.EB.TIMEPM.WDGM020131_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMSatelliteAlivenessPeriodCheck</parameter>
              (WDGM.EB.TIMEPM.WDGM020132_Conf) is greater than 0 AND</para>
          </listitem>
          <listitem>
            <para>the WdgM is initialized</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the Master Core <code>WdgM_MainFunction</code> shall call the Supervisor Callout 
              configured by paramter WdgMSatelliteAlivenessCallout in case the Satellite Core(s) 
              <code>WdgM_MainFunction</code> did not run in the configured number of Master Core 
              <code>WdgM_MainFunction</code> iterations specified by parameter 
              <parameter>WdgMSatelliteAlivenessPeriodCheck</parameter> (see WDGM.EB.TIMEPM.WDGM020132_Conf)
            </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_12</srcid><srcstatus/><internalId>2005</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_01_MC</srcid><srcstatus/><internalId>2064</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_02_MC</srcid><srcstatus/><internalId>2065</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1701</srcid><srcstatus/><internalId>854</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020466</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The Watchdog Manager module shall be able to detect the following errors and
          exceptions depending on its configuration (development / production mode): Data Corruption
          of internal WdgM data : <parameter>WDGM_E_DATA_CORRUPTION</parameter>
        </para>
      </description>
      <furtherinfo>WRN.impl.needscoverage.count, WRN.swuts.needscoverage.count: Based on configuration parameters 
	this Data corruption is checked in many places in the sources and also in some test configurations,
        due to the highly important nature of this topic resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtection_01</srcid><srcstatus/><internalId>1984</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_02</srcid><srcstatus/><internalId>1985</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_03a</srcid><srcstatus/><internalId>1986</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_03b</srcid><srcstatus/><internalId>1987</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_04</srcid><srcstatus/><internalId>1988</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_05a</srcid><srcstatus/><internalId>1989</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_05b</srcid><srcstatus/><internalId>1990</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_06</srcid><srcstatus/><internalId>1991</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_07</srcid><srcstatus/><internalId>1992</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_08</srcid><srcstatus/><internalId>1993</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_09</srcid><srcstatus/><internalId>1994</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_10</srcid><srcstatus/><internalId>1995</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_11</srcid><srcstatus/><internalId>1996</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_12_1</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_12_2</srcid><srcstatus/><internalId>1998</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_13_1</srcid><srcstatus/><internalId>1999</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_13_2</srcid><srcstatus/><internalId>2000</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_14</srcid><srcstatus/><internalId>2001</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_12</srcid><srcstatus/><internalId>2005</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1646</srcid><srcstatus/><internalId>851</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1740</srcid><srcstatus/><internalId>857</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1758</srcid><srcstatus/><internalId>858</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1808</srcid><srcstatus/><internalId>860</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1983</srcid><srcstatus/><internalId>863</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2144</srcid><srcstatus/><internalId>868</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2162</srcid><srcstatus/><internalId>869</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2199</srcid><srcstatus/><internalId>871</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1739</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1971</srcid><srcstatus/><internalId>1013</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2789</srcid><srcstatus/><internalId>1097</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3084</srcid><srcstatus/><internalId>1122</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3195</srcid><srcstatus/><internalId>1131</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3342</srcid><srcstatus/><internalId>1141</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3592</srcid><srcstatus/><internalId>1149</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3679</srcid><srcstatus/><internalId>1155</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3827</srcid><srcstatus/><internalId>1165</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3950</srcid><srcstatus/><internalId>1173</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3983</srcid><srcstatus/><internalId>1176</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4048</srcid><srcstatus/><internalId>1180</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4332</srcid><srcstatus/><internalId>1194</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4400</srcid><srcstatus/><internalId>1196</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4661</srcid><srcstatus/><internalId>1223</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4874</srcid><srcstatus/><internalId>1240</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4946</srcid><srcstatus/><internalId>1246</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5009</srcid><srcstatus/><internalId>1251</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5096</srcid><srcstatus/><internalId>1259</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5241</srcid><srcstatus/><internalId>1264</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5257</srcid><srcstatus/><internalId>1266</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5287</srcid><srcstatus/><internalId>1268</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5311</srcid><srcstatus/><internalId>1269</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5385</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5492</srcid><srcstatus/><internalId>1280</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5684</srcid><srcstatus/><internalId>1296</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020467</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM is initialized</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the <code>WdgM_MainFunction</code> shall report to the Diagnostic Event Manager an
              error with the value <parameter>WDGM_E_DATA_CORRUPTION</parameter> in case the WdgM
              detects a data corruption (i.e. the data value and the inverse value do not correspond
              to each other) during the read operation to the internal WdgM data (see
              WDGM.EB.TIMEPM.WDGM020470). </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtection_02</srcid><srcstatus/><internalId>1985</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_04</srcid><srcstatus/><internalId>1988</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_06</srcid><srcstatus/><internalId>1991</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_09</srcid><srcstatus/><internalId>1994</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_11</srcid><srcstatus/><internalId>1996</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3950</srcid><srcstatus/><internalId>1173</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3983</srcid><srcstatus/><internalId>1176</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5096</srcid><srcstatus/><internalId>1259</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5492</srcid><srcstatus/><internalId>1280</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020468</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM is initialized</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the <code>WdgM_CheckpointReached</code> (resp.
                <code>WdgM_UpdateAliveCounter</code>) shall report to the Diagnostic Event Manager
              an error with the value <parameter>WDGM_E_DATA_CORRUPTION</parameter> in case the WdgM
              detects a data corruption (i.e. the data value and the inverse value do not correspond
              to each other) during the read operation to the internal WdgM data (see
              WDGM.EB.TIMEPM.WDGM020470). </para>
          </listitem>
        </itemizedlist>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count, WRN.impl.needscoverage.count: Due to the high importance of 
	this topic, it's checked in many places in sources and test configurations resulting in surpassing the 
	count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtection_01</srcid><srcstatus/><internalId>1984</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_03a</srcid><srcstatus/><internalId>1986</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_03b</srcid><srcstatus/><internalId>1987</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_05a</srcid><srcstatus/><internalId>1989</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_05b</srcid><srcstatus/><internalId>1990</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_07</srcid><srcstatus/><internalId>1992</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_08</srcid><srcstatus/><internalId>1993</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_10</srcid><srcstatus/><internalId>1995</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_12_1</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_12_2</srcid><srcstatus/><internalId>1998</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_13_1</srcid><srcstatus/><internalId>1999</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_13_2</srcid><srcstatus/><internalId>2000</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_14</srcid><srcstatus/><internalId>2001</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1740</srcid><srcstatus/><internalId>857</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1758</srcid><srcstatus/><internalId>858</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1808</srcid><srcstatus/><internalId>860</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2144</srcid><srcstatus/><internalId>868</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2162</srcid><srcstatus/><internalId>869</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2199</srcid><srcstatus/><internalId>871</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1739</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1971</srcid><srcstatus/><internalId>1013</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2789</srcid><srcstatus/><internalId>1097</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3084</srcid><srcstatus/><internalId>1122</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3195</srcid><srcstatus/><internalId>1131</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3342</srcid><srcstatus/><internalId>1141</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3592</srcid><srcstatus/><internalId>1149</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3679</srcid><srcstatus/><internalId>1155</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3827</srcid><srcstatus/><internalId>1165</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4048</srcid><srcstatus/><internalId>1180</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4332</srcid><srcstatus/><internalId>1194</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4400</srcid><srcstatus/><internalId>1196</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4661</srcid><srcstatus/><internalId>1223</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4874</srcid><srcstatus/><internalId>1240</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4946</srcid><srcstatus/><internalId>1246</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5009</srcid><srcstatus/><internalId>1251</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5241</srcid><srcstatus/><internalId>1264</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5257</srcid><srcstatus/><internalId>1266</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5287</srcid><srcstatus/><internalId>1268</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5311</srcid><srcstatus/><internalId>1269</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5385</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5684</srcid><srcstatus/><internalId>1296</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020469</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM is initialized</para>
          </listitem>
            <para>AND</para>
          <listitem>
            <para>mixed core criticality is enabled</para>
          </listitem>
        </itemizedlist>
          <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the master instance<code>WdgM_MainFunction</code> (resp.
                <code>WdgM_EB_CheckSatelliteAliveCounter</code>) shall report to the Diagnostic Event Manager
              an error with the value <parameter>WDGM_E_DATA_CORRUPTION</parameter> in case the WdgM
              detects a data corruption (i.e. the data value and the inverse value do not correspond
              to each other) during the read operation of the inter-core shared WdgM data (see WDGM.EB.TIMEPM.WDGM020473).
            </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_12</srcid><srcstatus/><internalId>2005</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_01_MC</srcid><srcstatus/><internalId>2064</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_02_MC</srcid><srcstatus/><internalId>2065</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1646</srcid><srcstatus/><internalId>851</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1983</srcid><srcstatus/><internalId>863</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020455</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM is initialized</para>
          </listitem>
            <para>AND</para>
          <listitem>
            <para>mixed core criticality is enabled</para>
          </listitem>
        </itemizedlist>
          <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the master instance<code>WdgM_MainFunction</code> shall call AliveSupervisionFailure callout
              in case the WdgM detects a data corruption (i.e. the data value and the inverse value do not correspond
              to each other) during the read operation of the inter-core shared WdgM data WdgM_EB_Satellite_Core&lt;CoreID&gt;AliveCounter
              (see WDGM.EB.TIMEPM.WDGM020473).
            </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_12</srcid><srcstatus/><internalId>2005</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1653</srcid><srcstatus/><internalId>852</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020456</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the measured time difference (WdgM.SWS_WdgM_00404) exceeds the maximum limit
              configured in parameter <parameter>WdgMDeadlineMax</parameter> (see
              WDGM.ASR40.WDGM318_Conf) rounded up to be a multiple of the main function
              period</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para> the function <code>WdgM_MainFunction</code> shall define the result of Deadline
              Supervision for this Supervised Entity as incorrect. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_02</srcid><srcstatus/><internalId>2043</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4129</srcid><srcstatus/><internalId>1185</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5479</srcid><srcstatus/><internalId>1278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>
    <!-- The following requirements are updats of ASR requirements due to performing
        SetMode / Init DeInit requests synchronously to main function -->
    <!-- Design items regarding SetMode -->
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020421</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM209</source>
      <version>1</version>
      <description>
        <para> IF </para>
        <itemizedlist>
          <listitem>
            <para>the Supervised Entity was in Local Supervision Status
                <code>WDGM_LOCAL_STATUS_DEACTIVATED</code> AND</para>
          </listitem>
          <listitem>
            <para>the WdgM main function performs a Mode Switch to a new WdgM mode AND</para>
          </listitem>
          <listitem><para>the Supervised Entity is active (see [WDGM282]) in the new WdgM mode AND</para></listitem>
          <listitem><para>the WdgMSetModeSynchron configuration parameter is not set</para></listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall change the Local Supervision Status to
                <code>WDGM_LOCAL_STATUS_OK</code> (see Transition (9) in <xref linkend="figureBSWLocalSupervisionStatus"/>.</para>
          </listitem>
        </itemizedlist>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Due to the high importance of this topic, it's checked in 
	many places in sources and test configurations resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30118</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30119</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30129</srcid><srcstatus/><internalId>1724</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_0701_MultipleAliveCounters</srcid><srcstatus/><internalId>1827</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30118_Multicore</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30119_Multicore</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30129_Multicore</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15</srcid><srcstatus/><internalId>2067</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32</srcid><srcstatus/><internalId>2068</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31</srcid><srcstatus/><internalId>2069</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15_MC</srcid><srcstatus/><internalId>2071</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32_MC</srcid><srcstatus/><internalId>2072</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31_MC</srcid><srcstatus/><internalId>2073</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2807</srcid><srcstatus/><internalId>1100</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020422</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM207</source>
      <version>1</version>
      <description>
        <para> IF </para>
        <itemizedlist>
          <listitem>
            <para>the Supervised Entity was in Local Supervision Status
                <code>WDGM_LOCAL_STATUS_OK</code> AND</para>
          </listitem>
          <listitem>
            <para>the WdgM main function performs a Mode Switch to a new WdgM mode AND</para>
          </listitem>
          <listitem><para>the Supervised Entity is deactivated (see [WDGM283]) in the new WdgM mode AND</para></listitem>
          <listitem><para>the WdgMSetModeSynchron configuration parameter is not set</para></listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall change the Local Supervision Status to
                <code>WDGM_LOCAL_STATUS_DEACTIVATED</code>, see Transition (7) in <xref linkend="figureBSWLocalSupervisionStatus"/>.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30129</srcid><srcstatus/><internalId>1724</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30129_Multicore</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15</srcid><srcstatus/><internalId>2067</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15_MC</srcid><srcstatus/><internalId>2071</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2835</srcid><srcstatus/><internalId>1102</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020423</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM291</source>
      <version>1</version>
      <description>
        <para> IF </para>
        <itemizedlist>
          <listitem>
            <para>the Supervised Entity was in Local Supervision Status
                <code>WDGM_LOCAL_STATUS_FAILED</code> AND</para>
          </listitem>
          <listitem>
            <para>the WdgM main function performs a Mode Switch to a new WdgM mode AND</para>
          </listitem>
          <listitem><para>the Supervised Entity is deactivated (see [WDGM283]) in the new WdgM mode AND</para></listitem>
          <listitem><para>the WdgMSetModeSynchron configuration parameter is not set</para></listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall change the Local Supervision Status to
                <code>WDGM_LOCAL_STATUS_DEACTIVATED</code>, see Transition (12) in <xref linkend="figureBSWLocalSupervisionStatus"/>.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30125</srcid><srcstatus/><internalId>1723</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30129</srcid><srcstatus/><internalId>1724</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30127</srcid><srcstatus/><internalId>1729</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30125_Multicore</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30129_Multicore</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30127_Multicore</srcid><srcstatus/><internalId>1853</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31</srcid><srcstatus/><internalId>2069</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31_MC</srcid><srcstatus/><internalId>2073</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2835</srcid><srcstatus/><internalId>1102</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020424</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM186</source>
      <version>1</version>
      <description>
        <para> IF </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function performs a Mode Switch to a new WdgM mode AND</para>
          </listitem>
          <listitem><para>the Mode Switch to the new WdgM mode is successful AND</para></listitem>
          <listitem><para>the WdgMSetModeSynchron configuration parameter is not set</para></listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall apply the configured watchdog mode parameters (see
              WdgMWatchdogMode [WDGM332_Conf]) to each watchdog by calling the
                <parameter>WdgIf_SetMode</parameter> service.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30113</srcid><srcstatus/><internalId>1805</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30114</srcid><srcstatus/><internalId>1808</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15</srcid><srcstatus/><internalId>2067</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32</srcid><srcstatus/><internalId>2068</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31</srcid><srcstatus/><internalId>2069</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15_MC</srcid><srcstatus/><internalId>2071</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32_MC</srcid><srcstatus/><internalId>2072</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31_MC</srcid><srcstatus/><internalId>2073</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2913</srcid><srcstatus/><internalId>1106</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2976</srcid><srcstatus/><internalId>1112</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020450</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM186</source>
      <version>2</version>
      <description>
        <para> IF </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function performs a Mode Switch to a new WdgM mode AND</para>
          </listitem>
          <listitem><para>the Mode Switch to the new WdgM mode fails AND</para></listitem>
          <listitem><para>the WdgMSetModeSynchron configuration parameter is not set</para></listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>WdgM.SWS_WdgM_00139, WdgM.SWS_WdgM_00133, WDGM.EB.TIMEPM.WDGM020440,
              WDGM.EB.TIMEPM.WDGM020441 and WDGM.EB.MulticoreSetWatchdog4 apply.</para>
          </listitem>
        </itemizedlist>
        <para> Note: If a call to <code>WdgIf_SetMode</code> service fails during WdgM_Init, then
          the MCU Reset API is called directly (if configured, see [WdgM.SWS_WdgM_00133]) and the
          Watchdog Manager module shall be in state initialized afterwards with Global Supervision
          Status WDGM_GLOBAL_STATUS_STOPPED (see [WdgM.SWS_WdgM_00139]). This will cause a reset,
          either when the first watchdog expires or immediately, if an immediate reset of the
          Watchdog Manager module is configured. </para>
      </description>
      <comment> </comment>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03</srcid><srcstatus/><internalId>1943</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03_MC</srcid><srcstatus/><internalId>2090</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2570</srcid><srcstatus/><internalId>1073</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2976</srcid><srcstatus/><internalId>1112</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020425</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM154</source>
      <version>1</version>
      <description>
        <itemizedlist>
          <listitem>
            <para>Service name: WdgM_SetMode</para>
          </listitem>
          <listitem>
            <para>Syntax: Std_ReturnType WdgM_SetMode(WdgM_ModeType Mode, uint16 CallerID )</para>
          </listitem>
          <listitem>
            <para>Service ID[hex]: 0x03</para>
          </listitem>
          <listitem><para>Sync/Async: Synchronous OR Asynchronus(synchronus to MainFunction) if the WdgMSetModeSynchron
            configuration parameter is set or not and the multicore is activated or not.</para></listitem>
          <listitem>
            <para>Reentrancy: Non Reentrant</para>
          </listitem>
          <listitem>
            <para>Parameters (in): Mode One of the configured Watchdog Manager modes.</para>
          </listitem>
          <listitem>
            <para>Parameters (in): CallerID Module ID of the calling module.</para>
          </listitem>
          <listitem>
            <para>Parameters (inout): None</para>
          </listitem>
          <listitem>
            <para>Parameters (out): None</para>
          </listitem>
          <listitem>
            <para>Std_ReturnType: E_OK Mode Switch Request was successful and will be executed in
              next main function call</para>
          </listitem>
          <listitem>
            <para>Std_ReturnType: E_NOT_OK: Mode Switch Request failed (e.g. WdgM is not
              initialized, CallerID not valid, etc.)</para>
          </listitem>
          <listitem>
            <para>Description: Sets the current mode of Watchdog Manager at the next main function
              execution.</para>
          </listitem>
        </itemizedlist>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this aspect is 
	checked in many places in the sources and also in some test configurations, due to the highly 
	important nature of this topic resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_LogicalSupervision</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_DeadlineSupervision</srcid><srcstatus/><internalId>1711</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30129</srcid><srcstatus/><internalId>1724</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30129_Multicore</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15</srcid><srcstatus/><internalId>2067</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32</srcid><srcstatus/><internalId>2068</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31</srcid><srcstatus/><internalId>2069</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_29_15_MC</srcid><srcstatus/><internalId>2071</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_32_MC</srcid><srcstatus/><internalId>2072</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckTransition_30_31_MC</srcid><srcstatus/><internalId>2073</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1523</srcid><srcstatus/><internalId>974</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
    <!-- Design items regarding Init -->
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020426</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM268</source>
      <version>1</version>
      <description>
        <para> IF </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function performs an initialization of the WdgM AND</para>
          </listitem>
          <listitem>
            <para>this initialization is successful</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>for each Supervised Entity that is referenced from the Initial Mode,</para>
          </listitem>
          <listitem>
            <para>the WdgM main function shall set the Local Monitoring Status for this Supervised
              Entity to <code>WDGM_LOCAL_STATUS_OK</code>, see Transition (10) in <xref linkend="figureBSWLocalSupervisionStatus"/>.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <releases>
         <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30120</srcid><srcstatus/><internalId>1720</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30120_Multicore</srcid><srcstatus/><internalId>1844</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2807</srcid><srcstatus/><internalId>1100</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020427</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM269</source>
      <version>1</version>
      <description>
        <para> IF </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function performs an initialization of the WdgM AND</para>
          </listitem>
          <listitem>
            <para>this initialization is successful</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>for each Supervised Entity that is not referenced from the Initial Mode,</para>
          </listitem>
          <listitem>
            <para>the WdgM main function shall set the Local Monitoring Status for this Supervised
              Entity to <code>WDGM_LOCAL_STATUS_DEACTIVATED</code>, see Transition (11) in <xref linkend="figureBSWLocalSupervisionStatus"/>.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30118</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30118_Multicore</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2853</srcid><srcstatus/><internalId>1103</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020428</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM285</source>
      <version>1</version>
      <description>
        <para> IF </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function performs an initialization of the WdgM AND</para>
          </listitem>
          <listitem>
            <para>this initialization is successful</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall change the Global Supervision Status to
                <code>WDGM_GLOBAL_STATUS_OK</code>. (see Transition (13), (18) and (20) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>.</para>
          </listitem>
        </itemizedlist>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Due to the high importance of this topic, 
	it's checked in many places in sources and test configurations resulting in surpassing 
	the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30123</srcid><srcstatus/><internalId>1725</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30111</srcid><srcstatus/><internalId>1803</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30123_Multicore</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01</srcid><srcstatus/><internalId>2015</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckModeSwitch_SupervisorDisabled_02</srcid><srcstatus/><internalId>2017</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_01</srcid><srcstatus/><internalId>2018</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_02</srcid><srcstatus/><internalId>2019</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_03</srcid><srcstatus/><internalId>2020</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_04</srcid><srcstatus/><internalId>2021</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_11</srcid><srcstatus/><internalId>2022</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_12</srcid><srcstatus/><internalId>2023</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_03</srcid><srcstatus/><internalId>2028</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_04</srcid><srcstatus/><internalId>2029</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2615</srcid><srcstatus/><internalId>1080</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020429</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM298</source>
      <version>1</version>
      <description>
        <para> IF </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function performs an initialization of the WdgM</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>for all Deadline Start Checkpoints</para>
          </listitem>
          <listitem>
            <para>the WdgM main function shall set the Deadline Supervision to inactive. </para>
          </listitem>
        </itemizedlist>
      </description>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_12</srcid><srcstatus/><internalId>1982</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6014</srcid><srcstatus/><internalId>1311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020430</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM296</source>
      <version>1</version>
      <description>
        <para> IF </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function performs an initialization of the WdgM</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall set the Activity Flag for each Graph to false.</para>
          </listitem>
        </itemizedlist>
      </description>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ActivityFlagWdgMInit</srcid><srcstatus/><internalId>1823</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ActivityFlagWdgMInit_Multicore</srcid><srcstatus/><internalId>1870</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5952</srcid><srcstatus/><internalId>1306</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5975</srcid><srcstatus/><internalId>1308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020431</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM151</source>
      <version>1</version>
      <description>
        <itemizedlist>
          <listitem>
            <para>Service name: WdgM_Init</para>
          </listitem>
          <listitem>
            <para>Syntax: void WdgM_Init(const WdgM_ConfigType* ConfigPtr )</para>
          </listitem>
          <listitem>
            <para>Service ID[hex]: 0x00</para>
          </listitem>
          <listitem>
            <para>Sync/Async: Synchronous</para>
          </listitem>
          <listitem>
            <para>Reentrancy: Non Reentrant</para>
          </listitem>
          <listitem>
            <para>Parameters (in): ConfigPtr Pointer to post-build configuration data.</para>
          </listitem>
          <listitem>
            <para>Parameters (inout): None</para>
          </listitem>
          <listitem>
            <para>Parameters (out): None</para>
          </listitem>
          <listitem>
            <para>Return value: None</para>
          </listitem>
          <listitem>
            <para>Description: Initializes the Watchdog Manager at the next main function
              execution.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_LogicalSupervision</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_DeadlineSupervision</srcid><srcstatus/><internalId>1711</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1416</srcid><srcstatus/><internalId>951</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2553</srcid><srcstatus/><internalId>1071</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020432</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM018</source>
      <version>1</version>
      <description>
        <para> IF </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function performs an initialization of the WdgM</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall initialize all module variables (global and static)
              of the Watchdog Manager module. (BSW09107)</para>
          </listitem>
        </itemizedlist>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Due to the high importance of this topic, it's checked in 
	many places in sources and test configurations resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30111</srcid><srcstatus/><internalId>1803</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_01</srcid><srcstatus/><internalId>1970</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_03</srcid><srcstatus/><internalId>1973</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_05</srcid><srcstatus/><internalId>1975</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_06</srcid><srcstatus/><internalId>1976</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_07</srcid><srcstatus/><internalId>1977</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_08</srcid><srcstatus/><internalId>1978</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_09</srcid><srcstatus/><internalId>1979</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_10</srcid><srcstatus/><internalId>1980</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_11</srcid><srcstatus/><internalId>1981</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_12</srcid><srcstatus/><internalId>1982</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_13</srcid><srcstatus/><internalId>1983</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2728</srcid><srcstatus/><internalId>1096</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020433</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM135</source>
      <version>1</version>
      <description>
        <para> IF </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function performs an initialization of the WdgM</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall establish the initial mode of the Watchdog Manager
              module.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> This requirement is not applicable: because specified differently by
        WDGM.EB.TIMEPM.WDGM020409 WDGM.EB.TIMEPM.WDGM020410 WDGM.EB.TIMEPM.WDGM020411
        WDGM.EB.TIMEPM.WDGM020412 WDGM.EB.TIMEPM.WDGM020413 </comment>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020434</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM350</source>
      <version>1</version>
      <description>
        <para> IF </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function performs an initialization of the WdgM</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall set all bytes (including inverse data bytes) to 0 of
              the non-initialized RAM storing the double-inverse value of the SEID that first
              reached the EXIRED state. See 8.3.11 for more information.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30144_GetFirstExpiredSEID</srcid><srcstatus/><internalId>1735</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30144_GetFirstExpiredSEID_Multicore</srcid><srcstatus/><internalId>1859</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2591</srcid><srcstatus/><internalId>1077</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2609</srcid><srcstatus/><internalId>1078</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
    <!-- Design items regarding DeInit -->
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020435</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM286</source>
      <version>1</version>
      <description>
        <para> IF </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function performs a de-initialization of the WdgM AND</para>
          </listitem>
          <listitem>
            <para>the de-initialization is successful</para>
          </listitem>
          <!-- <listitem><para>the Global Supervision Status equals <code>WDGM_GLOBAL_STATUS_OK</code></para></listitem> -->
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall change the Global Supervision Status to
              WDGM_GLOBAL_STATUS_DEACTIVATED, see Transition (14) (33) and (34) in <xref linkend="figureBSWTimEGlobalSupervisionStatus"/>.</para>
          </listitem>
        </itemizedlist>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Due to the high importance of this topic, it's checked in 
	many places in sources and test configurations resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30126</srcid><srcstatus/><internalId>1728</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30126_Multicore</srcid><srcstatus/><internalId>1852</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_01</srcid><srcstatus/><internalId>2018</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_02</srcid><srcstatus/><internalId>2019</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_03</srcid><srcstatus/><internalId>2020</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_04</srcid><srcstatus/><internalId>2021</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_11</srcid><srcstatus/><internalId>2022</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_12</srcid><srcstatus/><internalId>2023</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_07</srcid><srcstatus/><internalId>2032</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_10</srcid><srcstatus/><internalId>2035</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_11</srcid><srcstatus/><internalId>2036</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_12</srcid><srcstatus/><internalId>2037</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2685</srcid><srcstatus/><internalId>1089</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020436</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM261</source>
      <version>1</version>
      <description>
        <itemizedlist>
          <listitem>
            <para>Service name: WdgM_DeInit</para>
          </listitem>
          <listitem>
            <para>Syntax: void WdgM_DeInit( void )</para>
          </listitem>
          <listitem>
            <para>Service ID[hex]: 0x01</para>
          </listitem>
          <listitem>
            <para>Sync/Async: Synchronous</para>
          </listitem>
          <listitem>
            <para>Reentrancy: Non Reentrant</para>
          </listitem>
          <listitem>
            <para>Parameters (in): None</para>
          </listitem>
          <listitem>
            <para>Parameters (inout): None</para>
          </listitem>
          <listitem>
            <para>Parameters (out): None</para>
          </listitem>
          <listitem>
            <para>Return value: None</para>
          </listitem>
          <listitem>
            <para>Description: De-Initializes the Watchdog Manager at the next main function
              execution.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_32034</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_32034_multicore</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_LogicalSupervision</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Compile_DeadlineSupervision</srcid><srcstatus/><internalId>1711</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1446</srcid><srcstatus/><internalId>958</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2647</srcid><srcstatus/><internalId>1085</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
    <!-- see also: [ASCWDGM-228] Initialization check in main function -->
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020437</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_WatchdogManager.pdf, V2.2.0, WDGM039</source>
      <version>1</version>
      <description>
        <para> IF AND ONLY IF </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter WdgMDefensiveBehavior [WDGM352_Conf] is enabled
              AND</para>
          </listitem>
          <listitem>
            <para>the WdgM was not initialized before the WdgM main function execution AND</para>
          </listitem>
          <listitem>
            <para>the WdgM will not be initialized during the execution of the WdgM
              MainFunction</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall report the error code <code>WDGM_E_NO_INIT</code> to
              the Development Error Tracer.</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30041</srcid><srcstatus/><internalId>1750</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6396</srcid><srcstatus/><internalId>1334</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020438</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM shall be able to detect the following Development Error: </para>
        <itemizedlist>
          <listitem>
            <para>A Mode Switch Request was not successful during the main function execution
                or during the execution of the WdgM_SetMode synchron: WDGM_EB_E_SETMODE_REQUEST 0x82</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30149_CheckSetModeReturnE_NOT_OK</srcid><srcstatus/><internalId>1740</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_30046</srcid><srcstatus/><internalId>1756</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_02</srcid><srcstatus/><internalId>1942</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_02_MC</srcid><srcstatus/><internalId>2089</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_203</srcid><srcstatus/><internalId>894</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6596</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6711</srcid><srcstatus/><internalId>1354</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020439</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration switch WdgMDevErrorDetect is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMDetCallout</parameter> is disabled
              AND</para>
          </listitem>
          <listitem>
            <para>the WdgM main function performs a Mode Switch AND</para>
          </listitem>
          <listitem>
            <para>the Mode Switch was not successful</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall report the error code
                <code>WDGM_EB_E_SETMODE_REQUEST</code> to the Development Error Tracer. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_30046</srcid><srcstatus/><internalId>1756</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_02</srcid><srcstatus/><internalId>1942</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_02_MC</srcid><srcstatus/><internalId>2089</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6596</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6711</srcid><srcstatus/><internalId>1354</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020440</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration switch WdgMDevErrorDetect is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMDetCallout</parameter> is enabled
              AND</para>
          </listitem>
          <listitem>
            <para>the WdgM main function performs a Mode Switch AND</para>
          </listitem>
          <listitem>
            <para>the Mode Switch was not successful</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall report the error code
                <code>WDGM_EB_E_SETMODE_REQUEST</code> via the callout function configured in
              parameter <parameter>WdgMDetCallout</parameter>. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_02</srcid><srcstatus/><internalId>1942</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_02_MC</srcid><srcstatus/><internalId>2089</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM_Int.h.m4_54</srcid><srcstatus/><internalId>938</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6596</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6711</srcid><srcstatus/><internalId>1354</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020441</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM shall be able to detect the following Development Error: </para>
        <itemizedlist>
          <listitem>
            <para>A Mode Switch Request was not successful during the main function execution:
              WDGM_EB_E_INIT_REQUEST 0x80</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SatelliteInitialization_Failure_01</srcid><srcstatus/><internalId>1801</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03</srcid><srcstatus/><internalId>1943</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03_MC</srcid><srcstatus/><internalId>2090</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_189</srcid><srcstatus/><internalId>892</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6350</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6374</srcid><srcstatus/><internalId>1333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020442</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration switch WdgMDevErrorDetect is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMDetCallout</parameter> is disabled
              AND</para>
          </listitem>
          <listitem>
            <para>the WdgM main function performs an initialization AND</para>
          </listitem>
          <listitem>
            <para>the initialization was not successful</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall report the error code
                <code>WDGM_EB_E_INIT_REQUEST</code> to the Development Error Tracer. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SatelliteInitialization_Failure_01</srcid><srcstatus/><internalId>1801</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03</srcid><srcstatus/><internalId>1943</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03_MC</srcid><srcstatus/><internalId>2090</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6350</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6374</srcid><srcstatus/><internalId>1333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020443</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration switch WdgMDevErrorDetect is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMDetCallout</parameter> is enabled
              AND</para>
          </listitem>
          <listitem>
            <para>the WdgM main function performs an initialization AND</para>
          </listitem>
          <listitem>
            <para>the initialization was not successful</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall report the error code
                <code>WDGM_EB_E_INIT_REQUEST</code> via the callout function configured in parameter
                <parameter>WdgMDetCallout</parameter>. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03</srcid><srcstatus/><internalId>1943</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_03_MC</srcid><srcstatus/><internalId>2090</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM_Int.h.m4_54</srcid><srcstatus/><internalId>938</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020444</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> The WdgM shall be able to detect the following Development Error: </para>
        <itemizedlist>
          <listitem>
            <para>A Mode Switch Request was not successful during the main function execution:
              WDGM_EB_E_DEINIT_REQUEST 0x81</para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_04</srcid><srcstatus/><internalId>1944</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_04_MC</srcid><srcstatus/><internalId>2091</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_196</srcid><srcstatus/><internalId>893</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6476</srcid><srcstatus/><internalId>1338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020445</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration switch WdgMDevErrorDetect is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMDetCallout</parameter> is disabled
              AND</para>
          </listitem>
          <listitem>
            <para>the WdgM main function performs a de-initialization AND</para>
          </listitem>
          <listitem>
            <para>the de-initialization was not successful</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall report the error code
                <code>WDGM_EB_E_DEINIT_REQUEST</code> to the Development Error Tracer. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_04</srcid><srcstatus/><internalId>1944</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_04_MC</srcid><srcstatus/><internalId>2091</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_6476</srcid><srcstatus/><internalId>1338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020446</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration switch WdgMDevErrorDetect is enabled AND</para>
          </listitem>
          <listitem>
            <para>the configuration parameter <parameter>WdgMDetCallout</parameter> is enabled
              AND</para>
          </listitem>
          <listitem>
            <para>the WdgM main function performs a de-initialization AND</para>
          </listitem>
          <listitem>
            <para>the de-initialization was not successful</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the WdgM main function shall report the error code
                <code>WDGM_EB_E_DEINIT_REQUEST</code> via the callout function configured in
              parameter <parameter>WdgMDetCallout</parameter>. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_04</srcid><srcstatus/><internalId>1944</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SetMode_DetDem_04_MC</srcid><srcstatus/><internalId>2091</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM_Int.h.m4_54</srcid><srcstatus/><internalId>938</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020470</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para> The SE Run-Time data used for Checkpoint Result data (Deadline, Logical supervision
          and Alive counter), Deadline Supervision Data and Graph data shall be stored doubled
          bit-inverse. Note: The following list gives a overview about the pertaining SE Run-Time
          data. <variablelist>
            <varlistentry>
              <term>WdgM_EB_CPDataType</term>
              <listitem><para>unit 32 AliveCounterData </para></listitem>
              <listitem><para>unit 16 DeadlineData </para></listitem>
              <listitem><para>unit 16 LogicalData </para></listitem>
            </varlistentry>
            <varlistentry>
              <term>WdgM_EB_DMDataType</term>
              <listitem><para>unit 32 WdgMEB_TimestampType StartTimestampData</para></listitem>
              <listitem><para>unit 32 WdgMEB_TimestampType StartTimestampDataInv</para></listitem>
              <listitem><para>unit 32 MaxCyclesData</para></listitem>
              <listitem><para>unit 16 IsActiveData</para></listitem>
            </varlistentry>
            <varlistentry>
              <term>WdgM_EB_GraphDataType</term>
              <listitem><para>unit 32 LastCPData</para></listitem>
              <listitem><para>unit 16 IsActiveData </para></listitem>
            </varlistentry>
            <varlistentry>
              <term>WdgM_EB_ExtGraphDataSeqArrayType</term>
              <listitem><para>unit 16 </para></listitem>
            </varlistentry>
          </variablelist>
        </para>
      </description>
      <comment> </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_01</srcid><srcstatus/><internalId>1970</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_05</srcid><srcstatus/><internalId>1975</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_07</srcid><srcstatus/><internalId>1977</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_09</srcid><srcstatus/><internalId>1979</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_10</srcid><srcstatus/><internalId>1980</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_11</srcid><srcstatus/><internalId>1981</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_13</srcid><srcstatus/><internalId>1983</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4872</srcid><srcstatus/><internalId>1239</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4944</srcid><srcstatus/><internalId>1245</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5094</srcid><srcstatus/><internalId>1258</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5383</srcid><srcstatus/><internalId>1271</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5490</srcid><srcstatus/><internalId>1279</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5551</srcid><srcstatus/><internalId>1285</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5609</srcid><srcstatus/><internalId>1290</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020471</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> In case a data corruption of the internal WdgM data (see WDGM.EB.TIMEPM.WDGM020470)
          is detected (i.e. the data value and the inverse value do not correspond to each other),
          then the function <function>WdgM_CheckpointReached()</function> (resp.
            <function>WdgM_UpdateAliveCounter()</function>) shall behave in the same way as if the
          Supervision Result that corresponds to the internal WdgM Supervision Data is
            <code>incorrect</code>. </para>
        <para> Note: This means that the API returns <code>E_NOT_OK</code> and the WdgM switches to
          a different Global Supervision State as specified in case the Supervision Result is
            <code>incorrect</code>. </para>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this 
        Data corruption is checked in many places in the sources and also in some test configurations,
        due to the highly important nature of this topic resulting in surpassing the count limit.
      </furtherinfo>
      <comment> </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_01</srcid><srcstatus/><internalId>1970</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_05</srcid><srcstatus/><internalId>1975</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_07</srcid><srcstatus/><internalId>1977</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_09</srcid><srcstatus/><internalId>1979</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_10</srcid><srcstatus/><internalId>1980</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_11</srcid><srcstatus/><internalId>1981</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_13</srcid><srcstatus/><internalId>1983</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_01</srcid><srcstatus/><internalId>1984</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_03a</srcid><srcstatus/><internalId>1986</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_03b</srcid><srcstatus/><internalId>1987</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_05a</srcid><srcstatus/><internalId>1989</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_05b</srcid><srcstatus/><internalId>1990</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_07</srcid><srcstatus/><internalId>1992</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_08</srcid><srcstatus/><internalId>1993</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_10</srcid><srcstatus/><internalId>1995</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_12_1</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_12_2</srcid><srcstatus/><internalId>1998</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_13_1</srcid><srcstatus/><internalId>1999</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_13_2</srcid><srcstatus/><internalId>2000</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_14</srcid><srcstatus/><internalId>2001</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4872</srcid><srcstatus/><internalId>1239</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4944</srcid><srcstatus/><internalId>1245</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5383</srcid><srcstatus/><internalId>1271</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5551</srcid><srcstatus/><internalId>1285</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5609</srcid><srcstatus/><internalId>1290</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>718</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020472</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para> In case a data corruption of the internal WdgM data (see WDGM.EB.TIMEPM.WDGM020470
          and WDGM.EB.TIMEPM.WDGM020473) is detected (i.e. the data value and the inverse value 
          do not correspond to each other), then the function <function>WdgM_MainFunction()</function>
          shall behave in the same way as if the Supervision Result that corresponds to the internal 
          WdgM Supervision Data is <code>incorrect</code>. </para>
        <para> Note: This means that the API returns <code>E_NOT_OK</code> and the WdgM switches to
          a different Global Supervision State as specified in case the Supervision Result is
            <code>incorrect</code>. </para>
      </description>
      <comment> </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtection_02</srcid><srcstatus/><internalId>1985</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_04</srcid><srcstatus/><internalId>1988</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_06</srcid><srcstatus/><internalId>1991</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_09</srcid><srcstatus/><internalId>1994</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_11</srcid><srcstatus/><internalId>1996</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2795</srcid><srcstatus/><internalId>1098</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5094</srcid><srcstatus/><internalId>1258</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5490</srcid><srcstatus/><internalId>1279</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5551</srcid><srcstatus/><internalId>1285</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5609</srcid><srcstatus/><internalId>1290</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020473</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para> The Inter-Core Shared data used for inter-core communication when mixed core
        criticality is configured (see WDGM.EB.TIMEPM.WDGM020130_Conf)(Local Statuses, 
        Expiration information, Satellites initialization status), shall be stored
        doubled bit-inverse. Note: The following list gives a overview about the pertaining
        Inter-Core Shared data:
            <itemizedlist>
              <listitem><para>uint16 WdgM_EB_SELocalStatus_Core&lt;CoreID&gt; </para></listitem>
              <listitem><para>uint16 WdgM_EB_ExpiredSEID </para></listitem>
              <listitem><para>uint16 WdgM_EB_ExpiredSEIDsCounter_Core&lt;CoreID&gt; </para></listitem>
              <listitem><para>uint16 WdgM_EB_ExpiredSEIDs_Core&lt;CoreID&gt; </para></listitem>
              <listitem><para>uint16 WdgM_EB_IsExpiredSEIdSet </para></listitem>
              <listitem><para>uint16 WdgM_EB_SatelliteWdgIfSetModeFailed </para></listitem>
              <listitem><para>uint16 WdgM_EB_InitStatus_Core&lt;CoreID&gt; </para></listitem>
              <listitem><para>uint16 WdgM_EB_CoreSwitchMode_Core&lt;CoreID&gt; </para></listitem>
              <listitem><para>uint32 WdgM_EB_Satellite_Core&lt;CoreID&gt;AliveCounter</para></listitem>
            </itemizedlist>
        </para>
      </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Based on configuration parameters this aspect 
	is checked in many places in the sources and also in some test configurations, due to 
	the highly important nature of this topic resulting in surpassing the count limit.
      </furtherinfo>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_09</srcid><srcstatus/><internalId>2002</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_10</srcid><srcstatus/><internalId>2003</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_11</srcid><srcstatus/><internalId>2004</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_12</srcid><srcstatus/><internalId>2005</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_01</srcid><srcstatus/><internalId>2006</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_02</srcid><srcstatus/><internalId>2007</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_03</srcid><srcstatus/><internalId>2008</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_04</srcid><srcstatus/><internalId>2009</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_05</srcid><srcstatus/><internalId>2010</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_06</srcid><srcstatus/><internalId>2011</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_07</srcid><srcstatus/><internalId>2012</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_08</srcid><srcstatus/><internalId>2013</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2572</srcid><srcstatus/><internalId>1075</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2611</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2694</srcid><srcstatus/><internalId>1092</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2982</srcid><srcstatus/><internalId>1113</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5126</srcid><srcstatus/><internalId>1261</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5677</srcid><srcstatus/><internalId>1295</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5756</srcid><srcstatus/><internalId>1301</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5774</srcid><srcstatus/><internalId>1302</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020475</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> In case a data corruption of the internal WdgM data (see WDGM.EB.TIMEPM.WDGM020473)
          is detected (i.e. the data value and the inverse value 
          do not correspond to each other), then the function <function>WdgM_GetAllExpiredSEID()</function>
          shall give the DET error WDGM_E_DATA_CORRUPTION and return E_NOT_OK. </para>
      </description>
      <comment> </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_02</srcid><srcstatus/><internalId>2007</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_08</srcid><srcstatus/><internalId>2013</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1740</srcid><srcstatus/><internalId>857</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1758</srcid><srcstatus/><internalId>858</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1808</srcid><srcstatus/><internalId>860</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2144</srcid><srcstatus/><internalId>868</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2162</srcid><srcstatus/><internalId>869</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2199</srcid><srcstatus/><internalId>871</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020486</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> In case a data corruption of the internal WdgM data (see WDGM.EB.TIMEPM.WDGM020473)
          is detected (i.e. the data value and the inverse value 
          do not correspond to each other), then the function <function>WdgM_GetMode()</function>
          shall give the DET error WDGM_E_DATA_CORRUPTION and return E_NOT_OK. </para>
      </description>
      <comment> </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_01</srcid><srcstatus/><internalId>2006</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1739</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5684</srcid><srcstatus/><internalId>1296</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020476</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameters <parameter>WdgMMixedSafetyCriticalityEnabled</parameter>
              (WDGM.EB.TIMEPM.WDGM020130_Conf) is enabled</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>during runtime the Watchdog Master Instance shall detect if the Satellite mode is
                changed (eg. Satellite data corruption) without a mode change request from the
                Watchdog Manager Master Instance. 
            </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment>WdgM_EB_CoreSwitchMode_{Satellite} is compared with WdgM_EB_CoreSwitchMode_{Master} 
        on every WdgM_MainFunction() by the WdgM Master Instance. </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_05</srcid><srcstatus/><internalId>2010</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5234</srcid><srcstatus/><internalId>1263</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable35</srcid><srcstatus/><internalId>1698</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020477</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameters <parameter>WdgMMixedSafetyCriticalityEnabled</parameter>
              (WDGM.EB.TIMEPM.WDGM020130_Conf) is enabled</para>
          </listitem>
          <listitem>
            <para>AND Satellite mode data is corrupted</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the Watchdog Manager Master instance shall report the DET error WDGM_E_DATA_CORRUPTION
            and trigger a watchdog reset. 
            </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment>Satellite mode data corruption is consider a fatal error. </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_05</srcid><srcstatus/><internalId>2010</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5241</srcid><srcstatus/><internalId>1264</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020478</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameters <parameter>WdgMMixedSafetyCriticalityEnabled</parameter>
              (WDGM.EB.TIMEPM.WDGM020130_Conf) is enabled</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>during runtime the Watchdog Master Instance shall detect if the Satellite initialization
            status is changed (eg. Satellite data corruption) without a init/de-init change request from the
                Watchdog Manager Master Instance. 
            </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment>WdgM_EB_InitStatus_{Satellite} is compared with WdgM_EB_InitStatus_{Master} 
        on every WdgM_MainFunction() by the WdgM Master Instance. </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_05</srcid><srcstatus/><internalId>2010</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5252</srcid><srcstatus/><internalId>1265</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable35</srcid><srcstatus/><internalId>1698</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020479</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameters <parameter>WdgMMixedSafetyCriticalityEnabled</parameter>
              (WDGM.EB.TIMEPM.WDGM020130_Conf) is enabled</para>
          </listitem>
          <listitem>
            <para>AND Satellite initialization status data is corrupted</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the Watchdog Manager Master instance shall report the DET error WDGM_E_DATA_CORRUPTION
            and trigger a watchdog reset. 
            </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment>Satellite mode data corruption is consider a fatal error. </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_05</srcid><srcstatus/><internalId>2010</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_5257</srcid><srcstatus/><internalId>1266</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>
    
    <specobject>
      <id>WDGM.EB.TIMEPM.WDGM020225</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If the Local Supervision Status of a Supervised Entity changes to
        WDGM_LOCAL_STATUS_FAILED and this Supervised Entity has a corresponding OS Application
        configured (see configuration parameter WdgMOsApplicationRef [WDGM346_Conf]), then the
        Watchdog Manager module shall call <parameter>WdgMRequestPartitionResetCallout</parameter>
          (see WDGM.EB.TIMEPM.WDGM020121_Conf) of container
            <parameter>WdgMSupervisorCallouts</parameter> to request a restart/shutdown of the corresponding
        partition for the configured OS Application. </description>
      <furtherinfo>WRN.swuts.needscoverage.count: Due to the high importance of this topic, it's checked in 
	many places in sources and test configurations resulting in surpassing the count limit.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_Callout</srcid><srcstatus/><internalId>1898</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_DifferentPartition</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_SupervisedEntityNotMappedToPartition</srcid><srcstatus/><internalId>1900</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_AliveFailure</srcid><srcstatus/><internalId>1901</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_InternalTransition</srcid><srcstatus/><internalId>1902</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Two_WdgMRequestPartitionReset</srcid><srcstatus/><internalId>1903</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_FailedAliveSupervisionRefCycleTol</srcid><srcstatus/><internalId>1904</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_ReferenceCycle</srcid><srcstatus/><internalId>1905</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_Two_WdgMRequestPartitionReset_ReferenceCycle</srcid><srcstatus/><internalId>1906</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_DeadlineSupervision</srcid><srcstatus/><internalId>1907</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_GetApplicationState_E_NOT_OK</srcid><srcstatus/><internalId>1908</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_E_NOT_OK</srcid><srcstatus/><internalId>1909</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_PartitionState</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4210</srcid><srcstatus/><internalId>1188</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>
    
    <specobject>
    <id>WDGM.EB.TIMEPM.WDGM020226</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para> If </para>
        <itemizedlist>
          <listitem>
            <para>the configuration parameter <parameter>WdgMGetApplicationState</parameter>
              (WDGM.EB.TIMEPM.WDGM020122_Conf) is enabled AND</para>
          </listitem>
          <listitem>
            <para>the WdgM is initialized</para>
          </listitem>
        </itemizedlist>
        <para> THEN </para>
        <itemizedlist>
          <listitem>
            <para>the <code>WdgM_MainFunction</code> shall be able to read the status of the 
            configured OS Applications. </para>
          </listitem>
        </itemizedlist>
      </description>
      <comment> Supervision must be done only for the active OS Applications.</comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_DifferentPartition</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_GetApplicationState_E_NOT_OK</srcid><srcstatus/><internalId>1908</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4271</srcid><srcstatus/><internalId>1191</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.InternalVariable29</srcid><srcstatus/><internalId>1692</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>   
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>WDGM.EB.TIMEPM.Safety020701</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> Example of the simplest Deadline Supervision configuration, is depicted in
        images/Deadline1.png. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_01</srcid><srcstatus/><internalId>2042</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_02</srcid><srcstatus/><internalId>2043</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_03</srcid><srcstatus/><internalId>2044</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.Safety020702</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> Example of a consecutive deadline checkpoint configuration is depicted in
        images/Deadline2.png. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedAliveInternalLogicalDeadlineSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2051</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.Safety020703</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> Example of a nested deadline checkpoint configuration is depicted in
        images/Deadline3.png. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedInternalLogicalDeadlineSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2052</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.Safety020704</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> If the <code>WdgMDeadlineEndRef</code> is never reached (e.g. the end reference
        checkpoint is bypassed) then the Time and Execution Protection Module Deadline Algorithm is
        still able to detect this violation, an example is given in images/Deadline4.png. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_02</srcid><srcstatus/><internalId>2043</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.Safety020705</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> The <code>WdgMDeadlineEndRef</code> is called twice, the first one to early and
        the second one within the limit, the Time and Execution Protection Module Deadline Algorithm
        is still able to detect this violation, an example is given in images/Deadline5.png. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_01</srcid><srcstatus/><internalId>2042</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.Safety020706</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> When the Deadline Start Checkpoint (<code>WdgMDeadlineStartRef</code>) is
        reached twice, without a call of the <code>WdgMDeadlineEndRef</code> between them, then the
        function WdgM_CheckpointReached shall define the result of Deadline Supervision for this
        Supervised Entity as incorrect, an example is given in images/Deadline6.png. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_03</srcid><srcstatus/><internalId>2044</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.Safety020750</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> Example of a simple linear control flow graph with one entry point and one exit
        point and only one allowed predecessor, an example is given in CFG1.png. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedInternalLogicalDeadlineSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2052</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.Safety020751</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> Example of a flow graph with different exit points, an example is given in
        images/CFG2.png. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedAliveInternalLogicalDeadlineSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2051</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.Safety020752</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> Example of control flow graphs with different predecessors, an example is given
        in images/CFG3.png. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedAliveInternalLogicalSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2053</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.Safety020753</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> Example of a control flow graph with different supervision entities, an example
        is given in images/CFG4.png. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckMixedAliveExternalLogicalSupervision_SupervisorDisabled_01</srcid><srcstatus/><internalId>2055</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.Safety020754</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> Example of different control flow graphs, an example is given in
        images/CFG5.png. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckExternalLogicalSupervision_SupervisorDisabled_01</srcid><srcstatus/><internalId>2056</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.Safety020755</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> Example of a control flow graph with different exit points, an example is given
        in images/CFG6.png. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckExternalLogicalSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2054</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.Safety020756</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> Example of a control flow graph with different entry points, an example is given
        in images/CFG7.png. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckExternalLogicalSupervision_SupervisorEnabled_01</srcid><srcstatus/><internalId>2054</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.Safety020757</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> Example of a control flow graph with different supervision entities and
        different predecessors, an example is given in images/CFG8.png. Note: Is is also possible to
        use External Graphs which are composed by other sequences e.g. loops. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckExternalLogicalSupervision_SupervisorDisabled_02</srcid><srcstatus/><internalId>2057</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>

    <specobject>
      <id>WDGM.EB.TIMEPM.Safety020758</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> Example of a control flow graph with different supervision entities, an example
        is given in images/CFG9.png. </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckExternalLogicalSupervision_SupervisorDisabled_03</srcid><srcstatus/><internalId>2058</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>WdgM.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WdgM_VerifyCodeStub</srcid><srcstatus/><internalId>1705</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.WdgM.PartitionRestart</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>110</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00162.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>745</internalId></specobject>
    <specobject>
      <id>dev.WdgM.PostBuildTimeConfiguration</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>126</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00029</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00266</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00255</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>746</internalId></specobject>
    <specobject>
      <id>dev.WdgM.SupervisedEntityIDValues</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>156</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00307.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>747</internalId></specobject>
    <specobject>
      <id>dev.WdgM.OptionalDemReporting</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>186</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>748</internalId></specobject>
    <specobject>
      <id>dev.WdgM.AlwaysAllowDeInit</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>208</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00286</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>749</internalId></specobject>
    <specobject>
      <id>dev.WdgM.WdgMFailedAliveSupervisionRefCycleTol</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>750</internalId></specobject>
    <specobject>
      <id>dev.WdgM.WdgMExpiredSupervisionCycleTol</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>262</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>751</internalId></specobject>
    <specobject>
      <id>dev.WdgM.SymbolicPortNames</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>289</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>752</internalId></specobject>
    <specobject>
      <id>dev.WdgM.GetVersionApi</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>307</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00262</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>753</internalId></specobject>
    <specobject>
      <id>dev.WdgM.DebugAndTrace</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>323</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00240</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>754</internalId></specobject>
    <specobject>
      <id>dev.WdgM.VersionChek</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>356</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>755</internalId></specobject>
    <specobject>
      <id>dev.WdgM.SynchronousModeSwitch</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>380</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>756</internalId></specobject>
    <specobject>
      <id>dev.WdgM.SynchronousDeInit</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>401</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00268</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00268</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00269</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00285</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00285</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00296</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00350</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00286</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00261</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>757</internalId></specobject>
    <specobject>
      <id>dev.ChangedFunctionalities</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>445</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00223</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00319</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00162</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00161</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00129</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00288</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00176</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00253</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00021</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00173</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00270</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00279</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00039</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00011</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00344</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00004</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00300</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00343</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00225</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>758</internalId></specobject>
    <specobject>
      <id>dev.UnsupportedFunctionalities</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>477</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00354</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00392</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6511</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6510</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00390</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6504</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6503</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00374</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00373</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00370</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00408</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00030</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00353</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_0275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6515</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6507</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00406</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6514</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6513</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6512</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00361</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_0320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00396</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00395</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00394</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00393</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00362</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00375</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00389</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00363</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>759</internalId></specobject>
    <specobject>
      <id>dev.WdgM.InternalCheckpointInitialRef</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>531</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.NumberOfInternalCheckpointInitialRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>760</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Callouts.h_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Callouts.h</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>761</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Callouts.h_10</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Callouts.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure08</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>762</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Cfg.h.m4_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Cfg.h.m4</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure09</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1647</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>763</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Cfg.h.m4_65</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Cfg.h.m4</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>764</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Cfg.h.m4_380</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Cfg.h.m4</sourcefile>
      <sourceline>380</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.Supervision.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>461</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>765</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Cfg.h.m4_401</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Cfg.h.m4</sourcefile>
      <sourceline>401</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>766</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Cfg.h.m4_422</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Cfg.h.m4</sourcefile>
      <sourceline>422</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SlaveSwitchMode.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>767</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Cfg.h.m4_443</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Cfg.h.m4</sourcefile>
      <sourceline>443</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.ImproperCaller.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>768</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Cfg.h.m4_464</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Cfg.h.m4</sourcefile>
      <sourceline>464</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfTimingViolation.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>769</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Cfg.h.m4_486</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Cfg.h.m4</sourcefile>
      <sourceline>486</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>770</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Cfg.h.m4_751</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Cfg.h.m4</sourcefile>
      <sourceline>751</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020111_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>771</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Cfg.h.m4_804</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Cfg.h.m4</sourcefile>
      <sourceline>804</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfSatelliteFailure.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>772</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Cfg.h.m4_827</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Cfg.h.m4</sourcefile>
      <sourceline>827</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020113_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>773</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Cfg.h.m4_834</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Cfg.h.m4</sourcefile>
      <sourceline>834</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020119_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>774</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Cfg.h.m4_961</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Cfg.h.m4</sourcefile>
      <sourceline>961</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>775</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Cfg.h.m4_968</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Cfg.h.m4</sourcefile>
      <sourceline>968</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>776</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Cfg.h.m4_976</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Cfg.h.m4</sourcefile>
      <sourceline>976</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>777</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>778</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1648</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>779</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_35</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020304</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>780</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_44</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1666</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>781</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_45</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1668</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>782</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_46</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>783</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_73</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable18</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1681</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>784</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_91</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020307</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>785</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1665</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>786</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_112</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020304</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>787</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_128</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>128</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>788</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_129</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable1</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>789</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_135</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable17</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1680</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>790</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_147</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>147</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable26</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1689</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>791</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_157</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable26</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1689</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>792</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_181</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>181</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020304</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>793</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_191</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>191</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1675</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1676</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>794</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_198</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>198</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable6</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1669</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable7</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1670</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>795</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Lcfg.h_218</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Lcfg.h</sourcefile>
      <sourceline>218</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable19</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1682</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>796</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Trace.h_9</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Trace.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>797</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Trace.h_10</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Trace.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>798</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Types.h_9</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Types.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure14</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1652</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>799</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Types.h_13</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Types.h</sourcefile>
      <sourceline>13</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WdgMMulticoreInclude.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>800</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Types.h_169</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Types.h</sourcefile>
      <sourceline>169</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WDGM117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>801</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Types.h_178</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Types.h</sourcefile>
      <sourceline>178</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WDGM118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>802</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Types.h_188</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Types.h</sourcefile>
      <sourceline>188</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>803</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_37</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure03</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1641</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>804</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_39</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1643</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>805</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_43</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure04</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1642</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>806</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020304</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>807</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_111</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1666</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1668</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>808</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_122</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1667</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>809</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_123</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>123</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1674</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>810</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1672</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>811</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_125</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>125</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable24</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>812</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_337</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>337</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00366</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>813</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_435</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>435</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00366</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>814</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_801</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>801</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable29</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>815</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_803</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>803</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable29</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>816</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_851</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>851</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable18</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1681</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>817</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_864</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>864</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020307</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>818</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_873</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>873</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1665</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>819</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_874</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>874</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00387</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>820</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_890</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>890</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>821</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_891</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>891</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable1</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>822</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_898</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>898</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable17</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1680</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>823</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_909</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>909</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable26</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1689</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>824</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_921</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>921</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable26</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1689</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>825</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_937</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>937</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable27</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>826</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_946</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>946</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable28</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1691</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>827</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_958</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>958</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable19</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1682</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>828</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_994</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>994</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable27</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>829</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1004</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1004</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable28</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1691</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>830</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1045</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1045</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020307</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>831</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1055</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1055</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable14</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1677</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>832</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1099</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1099</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>833</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1109</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreInit.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>834</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1110</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1110</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable15</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1678</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>835</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1116</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1116</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable34</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1697</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>836</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1146</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1146</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable26</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1689</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>837</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1155</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1155</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable26</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1689</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>838</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1166</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1166</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable19</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1682</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>839</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1189</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1189</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable37</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>840</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1197</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1197</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable36</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>841</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1230</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1230</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>842</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1246</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1246</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreLocalStatus2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>843</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1247</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1247</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable1</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>844</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1299</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1299</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable25</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>845</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1303</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1303</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00085.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable10</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1673</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>846</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1388</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1388</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable30</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1693</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>847</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1511</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1511</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreInit.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>848</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1558</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1558</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreLocalStatus2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>849</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1629</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1629</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>850</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1646</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1646</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020469</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>851</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1653</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1653</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020455</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>852</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1674</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1674</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>681</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020489</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>682</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>853</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1701</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1701</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>854</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1706</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1706</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>855</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1724</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1724</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.CoreSpecific.Read</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>856</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1740</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1740</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020475</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>857</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1758</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1758</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020475</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>858</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1790</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1790</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>859</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1808</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1808</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020475</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>860</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1830</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1830</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>861</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1969</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1969</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetFirstExpired2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>862</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1983</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>1983</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020469</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>863</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2043</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>2043</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable25</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>864</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2048</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>2048</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable10</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1673</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>865</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2065</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>2065</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable15</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1678</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>866</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2114</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>2114</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable30</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1693</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>867</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2144</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>2144</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020475</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>868</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2162</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>2162</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020475</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>869</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2193</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>2193</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>870</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2199</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>2199</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020475</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>871</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2216</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>2216</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>872</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2295</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>2295</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>636</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>873</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2299</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>2299</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020304</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>874</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2310</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>2310</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1675</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1676</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>875</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2315</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>2315</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable16</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1679</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>876</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2324</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>2324</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable6</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1669</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable7</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1670</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>877</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2529</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/src/WdgM_BSW_Lcfg.c</sourcefile>
      <sourceline>2529</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable29</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>878</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/WdgM.h_18</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>879</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_21</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure02</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1640</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>880</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_27</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>881</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_112</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>882</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_119</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>119</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>883</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_127</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>127</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>884</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_134</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>134</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>885</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_142</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>142</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>886</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_149</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>887</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_156</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>156</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>888</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_163</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>163</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>889</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_170</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>170</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>890</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_179</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>179</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>891</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_189</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>189</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020441</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>892</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_196</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>196</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020444</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>714</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>893</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_203</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>203</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020438</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>894</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_233</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>233</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020405</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>895</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_251</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>251</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020406</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>896</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_256</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020407</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>653</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>897</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_274</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>274</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020408</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>898</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_302</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>302</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>899</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_351</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>351</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>900</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_380</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>380</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>901</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_407</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>407</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00263</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>902</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM.h_519</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM.h</sourcefile>
      <sourceline>519</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>903</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_18</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure06</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1644</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>904</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure07</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>905</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_169</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>169</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1667</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>906</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_187</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>187</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1666</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>907</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_190</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>190</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1668</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>908</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_194</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>194</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>909</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_200</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>200</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable6</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1669</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable7</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1670</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>910</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_206</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>206</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable7</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1670</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>911</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_362</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>362</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable1</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>912</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_375</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>375</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable27</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>913</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_379</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>379</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable28</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1691</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>914</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_382</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>382</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable10</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1673</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>915</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_384</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>384</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable25</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>916</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_386</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>386</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable15</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1678</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>917</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_389</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>389</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable14</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1677</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>918</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_392</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>392</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable31</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>919</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_394</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>394</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable21</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>920</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_396</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>396</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable22</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>921</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_399</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>399</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable23</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>922</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_407</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>407</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable30</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1693</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>923</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_464</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>464</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020304</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>924</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_469</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>469</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1667</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>925</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_470</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>470</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1674</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>926</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_471</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>471</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1672</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>927</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_472</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>472</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable24</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>928</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_487</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>487</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1667</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>929</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_488</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>488</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1674</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>930</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_489</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>489</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1672</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>931</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_BSW_Lcfg.h_490</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_BSW_Lcfg.h</sourcefile>
      <sourceline>490</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable24</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>932</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/WdgM_Int.h.m4_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_Int.h.m4</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure08</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>933</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_Int.h.m4_9</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_Int.h.m4</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure02</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1640</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>934</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_Int.h.m4_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_Int.h.m4</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>935</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_Int.h.m4_32</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_Int.h.m4</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>936</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_Int.h.m4_52</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_Int.h.m4</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020302</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>637</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>937</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_Int.h.m4_54</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_Int.h.m4</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020440</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020443</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020446</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>716</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>938</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/WdgM_Int.h.m4_63</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_Int.h.m4</sourcefile>
      <sourceline>63</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>939</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/WdgM_Trace_Stc.h_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/include/WdgM_Trace_Stc.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>940</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_33</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure03</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1641</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>941</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_34</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>942</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_36</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure04</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1642</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>943</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_38</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1643</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>944</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_40</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure06</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1644</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>945</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_42</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure07</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>946</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1371</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1371</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable33</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>947</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1379</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1379</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable35</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>948</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1386</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1386</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable32</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>949</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1401</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1401</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable20</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>950</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1416</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1416</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020431</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>701</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>951</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1417</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1417</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020405</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>952</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1418</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1418</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00355</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>953</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1426</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1426</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>954</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1430</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1430</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WdgMInit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>955</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1434</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1434</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>956</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1439</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1439</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>957</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1446</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1446</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020436</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>706</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>958</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1447</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1447</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020407</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>653</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>959</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1456</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1456</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>960</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1458</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1458</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>961</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1463</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1463</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00288</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>962</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1469</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1469</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020418</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>666</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020416</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>665</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>963</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1473</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1473</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020464</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>650</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>964</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1474</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1474</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00388</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>965</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1475</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1475</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00407</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>966</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1479</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1479</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>967</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1486</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1486</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>968</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1493</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1493</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>969</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1497</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1497</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00256</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>970</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1505</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1505</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>971</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1513</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1513</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>972</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1520</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1520</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>973</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1523</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1523</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020425</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>974</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1531</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1531</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>975</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1547</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1547</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>976</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1550</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1550</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>977</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1563</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1563</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.SatelliteCall.DetError</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>978</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1572</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1572</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020459</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>979</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1577</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1577</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>980</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1581</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1581</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>981</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1590</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1590</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>982</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1605</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1605</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020457</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>643</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>983</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1612</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1612</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>984</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1617</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1617</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00316</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020458</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>644</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>985</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1629</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1629</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020461</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>986</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1634</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1634</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020417</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020460</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>987</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1644</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1644</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020462</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>641</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>988</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1665</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1665</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020462</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>641</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>989</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1675</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1675</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>990</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1678</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1678</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>991</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1686</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1686</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>992</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1695</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1695</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>993</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1707</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1707</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.SatelliteCall.DetError</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>994</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1713</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1713</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00253</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>995</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1720</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1720</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00254</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>996</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1739</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1739</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020486</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>722</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>997</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1757</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1757</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>998</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1766</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1766</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>999</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1778</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1778</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00263</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1000</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1789</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1789</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1001</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1792</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1792</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00278</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1002</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1802</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1802</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00279</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1003</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1822</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1822</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00284</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1004</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1839</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1839</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1005</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1855</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1855</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00319</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1006</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1873</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1873</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1007</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1880</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1880</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionSupervisionActive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1008</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1899</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1899</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1009</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1900</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1900</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00299</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1010</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1921</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1921</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1011</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1932</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1932</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1012</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1971</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1971</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1013</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1985</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1985</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1014</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_1991</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>1991</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1015</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2000</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2000</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1016</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2012</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2012</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1017</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2023</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2023</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00290</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1018</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2030</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2030</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1019</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2061</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2061</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.UpdateAliveCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1020</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2066</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2066</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00318</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1021</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2071</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2071</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1022</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2086</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2086</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1023</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2099</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2099</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1024</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2112</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2112</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1025</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2123</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2123</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1026</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2129</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2129</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1027</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2138</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2138</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1028</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2148</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2148</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1029</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2163</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2163</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1030</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2170</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2170</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1031</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2181</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2181</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1032</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2193</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2193</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.SatelliteCall.DetError</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1033</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2199</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2199</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1034</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2206</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2206</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00258</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1035</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2222</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2222</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1036</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2229</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2229</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1037</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2233</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2233</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1038</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2244</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2244</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.SatelliteCall.DetError</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1039</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2249</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2249</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00270</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1040</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2259</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2259</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020451</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>675</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1041</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2263</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2263</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020449</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>674</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020452</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>676</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1042</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2275</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2275</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.PerformReset1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1043</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2278</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2278</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00133.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1044</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2284</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2284</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.PerformReset1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1045</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2293</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2293</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1046</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2299</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2299</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1047</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2310</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2310</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1048</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2313</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2313</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00348</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1049</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2320</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2320</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.SatelliteCall.DetError</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1050</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2326</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2326</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1051</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2338</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2338</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00349</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1052</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2354</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2354</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1053</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2366</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2366</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1054</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2375</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2375</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1055</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2385</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2385</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020447</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>667</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1056</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2404</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2404</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreSetWatchdog4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1057</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2417</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2417</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020414</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020465</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1058</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2423</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2423</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020454</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>678</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1059</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2433</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2433</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1060</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2450</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2450</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreLocalStatus1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1061</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2458</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2458</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00326</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1062</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2459</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2459</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreGlobalStatus</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1063</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2462</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2462</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00327</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00328</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1064</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2469</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2469</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00327</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00328</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1065</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2490</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2490</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionInitial</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1704</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1066</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2505</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2505</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionActive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1701</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1067</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2513</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2513</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020417</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020460</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1068</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2536</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2536</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020487</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>680</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1069</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2546</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2546</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1070</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2553</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2553</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020431</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>701</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1071</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2564</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2564</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1072</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2570</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2570</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020450</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1073</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2571</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2571</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreInit.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1074</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2572</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2572</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1075</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2583</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2583</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020409</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020410</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020412</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1076</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2591</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2591</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020434</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>704</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1077</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2609</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2609</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020434</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>704</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1078</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2611</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2611</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00351</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1079</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2615</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2615</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1080</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2617</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2617</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1081</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2621</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2621</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreTriggerWatchdog</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1082</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2627</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2627</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreTriggerWatchdog</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1083</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2641</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2641</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1084</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2647</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2647</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020436</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>706</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1085</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2657</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2657</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1086</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2661</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2661</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WdgM_DeInit.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1087</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2672</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2672</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreTriggerWatchdog</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1088</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2685</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2685</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1089</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2688</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2688</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1090</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2693</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2693</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreDeInit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1091</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2694</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2694</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1092</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2699</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2699</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1093</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2719</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2719</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1094</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2722</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2722</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00317</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1095</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2728</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2728</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00316</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1096</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2789</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2789</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1097</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2795</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2795</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020472</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1098</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2802</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2802</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1099</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2807</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2807</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020426</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>696</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1100</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2822</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2822</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1101</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2835</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2835</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020422</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>691</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020423</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00291</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1102</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2853</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2853</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020427</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>697</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1103</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2859</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2859</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1104</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2876</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2876</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ResetAliveCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1105</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2913</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2913</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020424</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreTriggerWatchdog</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1106</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2914</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2914</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreSetWatchdog</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1107</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2922</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2922</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1108</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2942</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2942</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1109</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2954</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2954</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreSetWatchdog2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreSetWatchdog3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1110</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2964</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2964</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00142.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1111</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2976</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2976</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020424</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020450</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1112</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2982</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2982</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1113</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_2998</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>2998</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1114</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3018</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3018</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1115</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3025</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3025</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1116</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3035</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3035</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1117</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3048</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3048</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00329</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00331</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1118</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3060</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3060</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00273</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00332</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1119</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3072</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3072</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1120</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3077</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3077</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020481</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1121</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3084</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3084</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1122</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3109</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1123</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3129</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3129</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1124</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3136</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1125</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3146</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3146</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1126</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3159</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3159</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00329</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00331</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1127</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3171</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3171</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00273</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00332</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1128</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3183</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3183</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1129</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3188</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3188</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020481</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1130</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3195</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3195</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1131</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3220</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3220</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1132</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3242</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3242</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1133</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3260</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3260</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1134</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3270</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3270</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1135</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3285</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3285</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00329</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00331</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1136</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3297</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3297</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.ConcurrentCall1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1137</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3310</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3310</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00273</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00332</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1138</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3330</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3330</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1139</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3335</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3335</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020481</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1140</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3342</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3342</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1141</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3405</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3405</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1142</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3472</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3472</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1143</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3493</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3493</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1144</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3520</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3520</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1145</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3540</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3540</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1146</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3548</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3548</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1147</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3571</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3571</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1148</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3592</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3592</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1149</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3607</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3607</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00294</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1150</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3617</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3617</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1151</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3637</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3637</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1152</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3649</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3649</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1153</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3674</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3674</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020480</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>669</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1154</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3679</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3679</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1155</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3694</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3694</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00294</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1156</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3704</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3704</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1157</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3722</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3722</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1158</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3743</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3743</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1159</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3762</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3762</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1160</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3774</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3774</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00321</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1161</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3780</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3780</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1162</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3798</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3798</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1163</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3822</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3822</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.LogicalSupervision.ErrorTracking</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1164</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3827</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3827</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1165</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3845</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3845</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1166</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3883</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3883</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1167</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3887</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3887</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1168</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3901</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3901</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00324</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1169</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3921</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3921</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1170</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3926</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3926</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1171</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3945</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3945</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1172</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3950</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3950</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020467</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1173</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3958</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3958</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1174</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3978</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3978</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1175</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3983</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3983</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020467</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1176</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_3991</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>3991</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1177</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4007</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4007</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1178</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4038</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4038</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1179</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4048</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4048</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1180</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4059</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4059</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionSupervisionActive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1660</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionSupervisionRestart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1181</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4085</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4085</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1182</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4091</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4091</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionSupervisionPost</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1183</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4125</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4125</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1184</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4129</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4129</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020456</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>689</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1185</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4184</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4184</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1186</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4198</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4198</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WDGM225.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1187</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4210</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4210</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1188</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4216</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4216</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionRestart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1703</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1189</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4234</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4234</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionResetData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1658</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1190</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4271</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4271</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>728</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1191</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4301</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4301</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionPost</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1702</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1192</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4323</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4323</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020487</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>680</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1193</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4332</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4332</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1194</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4387</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4387</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020448</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1195</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4400</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4400</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1196</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4410</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4410</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1197</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4422</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4422</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1198</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4427</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4427</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020482</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020483</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>672</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1199</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4432</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4432</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020448</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1200</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4444</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4444</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1201</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4447</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4447</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020484</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>673</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1202</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4450</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4450</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1203</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4459</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4459</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1204</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4474</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4474</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020448</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1205</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4485</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4485</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020448</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1206</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4506</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4506</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00351</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1207</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4511</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4511</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00351</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1208</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4523</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4523</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1209</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4533</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4533</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1210</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4551</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4551</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1211</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4565</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4565</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1212</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4578</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4578</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1213</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4584</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4584</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020463</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>642</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1214</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4589</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4589</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1215</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4597</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4597</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00133.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1216</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4601</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4601</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1217</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4602</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4602</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1218</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4610</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4610</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1219</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4616</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4616</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1220</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4634</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4634</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1221</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4647</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4647</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreGlobalStatus2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1222</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4661</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4661</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1223</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4695</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4695</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1224</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4700</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4700</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1225</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4705</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4705</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1226</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4711</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4711</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1227</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4717</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4717</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1228</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4728</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4728</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00219</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00220</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1229</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4739</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4739</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1230</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4751</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4751</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1231</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4769</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4769</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1232</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4782</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4782</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1233</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4794</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4794</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1234</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4810</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4810</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020454</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>678</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020453</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>677</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1235</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4818</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4818</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020485</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>679</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1236</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4824</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4824</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1237</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4858</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4858</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1238</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4872</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4872</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020470</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1239</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4874</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4874</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1240</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4882</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4882</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1241</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4903</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4903</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1242</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4916</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4916</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1243</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4934</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4934</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1244</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4944</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4944</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020470</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1245</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4946</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4946</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1246</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4954</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4954</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1247</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4971</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4971</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1248</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4979</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4979</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1249</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_4999</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>4999</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1250</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5009</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5009</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1251</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5017</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5017</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1252</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5033</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5033</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1253</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5041</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5041</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1254</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5053</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5053</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1255</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5060</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5060</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1256</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5085</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5085</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1257</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5094</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5094</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020470</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020472</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1258</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5096</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5096</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020467</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1259</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5120</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5120</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1260</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5126</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5126</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1261</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5224</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5224</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreSwitchMode.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1262</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5234</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5234</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020476</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1263</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5241</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5241</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020477</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1264</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5252</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5252</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020478</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1265</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5257</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5257</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020479</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>726</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1266</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5280</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5280</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.MainFunction.Write</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1267</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5287</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5287</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1268</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5311</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5311</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1269</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5369</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5369</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1270</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5383</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5383</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020470</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1271</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5385</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5385</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1272</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5393</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5393</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1273</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5415</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5415</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1274</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5428</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5428</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1275</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5454</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5454</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1276</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5464</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5464</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1277</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5479</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5479</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020456</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>689</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1278</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5490</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5490</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020470</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020472</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1279</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5492</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5492</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020467</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1280</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5500</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5500</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1281</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5515</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5515</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1282</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5523</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5523</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1283</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5541</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5541</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1284</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5551</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5551</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020470</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020472</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1285</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5556</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5556</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1286</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5573</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5573</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1287</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5581</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5581</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1288</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5599</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5599</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1289</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5609</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5609</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020470</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020472</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1290</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5614</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5614</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1291</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5629</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5629</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1292</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5638</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5638</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1293</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5664</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5664</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1294</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5677</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5677</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1295</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5684</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5684</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020486</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>722</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1296</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5693</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5693</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1297</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5710</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5710</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetFirstExpired1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1298</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5736</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5736</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1299</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5749</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5749</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1300</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5756</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5756</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1301</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5774</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5774</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1302</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5891</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5891</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1303</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5905</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5905</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1304</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5922</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5922</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1305</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5952</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5952</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020430</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>700</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ActiveFlags4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1306</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5958</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5958</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ResetActiveFlags3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ResetActiveFlags2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1307</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5975</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5975</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020430</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>700</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ActiveFlags4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1308</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_5992</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>5992</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ResetActiveFlags3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ResetActiveFlags2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1309</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6005</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6005</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1310</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6014</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6014</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020429</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ResetActiveFlags1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1311</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6021</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6021</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1312</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6036</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6036</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1313</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6062</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6062</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ResetActiveFlags3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ResetActiveFlags2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1314</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1315</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6116</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6116</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1316</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1317</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6148</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6148</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1318</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6166</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6166</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1319</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6188</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6188</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1320</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6203</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6203</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1321</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6209</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6209</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreTriggerWatchdog2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreTriggerWatchdog3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreSetWatchdog2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1322</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6219</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6219</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1323</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6222</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6222</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.PerformReset3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1324</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6230</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6230</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1325</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6236</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6236</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1326</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6250</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6250</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1327</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6269</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6269</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1328</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6279</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6279</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1329</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6299</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6299</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1330</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6308</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6308</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020412</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1331</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6350</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6350</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020441</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020442</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1332</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6374</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6374</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020441</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020442</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1333</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6396</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6396</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020437</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>707</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1334</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6406</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6406</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1335</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6422</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6422</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1336</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6431</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6431</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020415</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1337</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6476</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6476</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020444</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>714</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020445</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>715</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1338</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6521</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6521</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1339</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6538</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6538</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1340</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6546</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6546</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020419</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1341</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6559</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6559</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreSwitchMode.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>565</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1342</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6577</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6577</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020417</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1343</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6596</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6596</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020438</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020439</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>709</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020440</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1344</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6615</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6615</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreSwitchMode.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1345</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6625</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6625</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1346</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6638</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6638</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1347</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6658</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6658</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreInit.3</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1348</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6659</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6659</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreSwitchMode.2</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1349</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6662</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6662</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreInit.3</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1350</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6663</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6663</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreSwitchMode.2</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1351</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6683</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6683</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1352</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6698</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6698</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1353</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6711</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6711</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020438</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020439</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>709</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020440</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1354</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6728</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6728</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1355</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6735</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6735</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.Availability</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1356</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6737</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6737</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1357</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6750</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6750</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.Params.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1358</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6753</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6753</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.Params.DetReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1359</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6766</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6766</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.MasterInstanceOnly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1360</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6767</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6767</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.SatelliteCall.Return</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1361</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6773</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6773</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.CoreSpecific.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1362</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/WdgM.c.m4_6787</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/src/WdgM.c.m4</sourcefile>
      <sourceline>6787</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.SatelliteCall.DetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1363</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_27</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure03</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1641</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1364</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_86</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1365</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_96</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1366</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1367</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_109</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1368</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_116</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>116</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1369</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_122</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1370</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_127</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>127</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1371</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_130</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>130</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1372</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_131</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>131</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1373</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1374</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_134</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>134</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1375</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_135</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1376</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_137</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>137</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1377</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_138</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>138</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1378</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_141</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>141</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1379</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_142</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>142</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1380</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_144</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>144</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1381</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_146</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>146</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1382</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_147</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>147</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1383</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_149</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1384</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_152</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>152</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1385</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_155</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>155</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1386</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_158</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>158</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1387</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_162</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>162</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1388</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_164</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>164</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1389</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_165</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>165</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1390</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_166</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>166</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1391</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_167</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>167</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1392</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_168</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>168</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1393</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_169</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>169</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1394</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_171</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>171</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1395</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_172</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>172</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1396</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_173</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>173</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1397</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_175</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>175</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1398</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_177</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>177</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1399</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_178</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>178</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1400</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_180</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>180</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1401</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_183</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>183</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1402</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_186</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>186</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1403</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_189</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>189</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1404</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_193</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java</sourcefile>
      <sourceline>193</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1405</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_h.java_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_h.java</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure04</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1642</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1406</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure03</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1641</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1407</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java_31</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1408</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java_35</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1409</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java_36</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1410</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java_40</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1411</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java_41</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1412</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java_45</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1413</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_196</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>196</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure03</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1641</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1414</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_197</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>197</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1415</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_462</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>462</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1416</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_482</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>482</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1417</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_501</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>501</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1418</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_512</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>512</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1419</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_531</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>531</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1420</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_542</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>542</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1421</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_562</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>562</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1422</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_577</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>577</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1423</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_593</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>593</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1424</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_600</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>600</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1425</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_617</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>617</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1426</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_624</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>624</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1427</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_646</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>646</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1428</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_649</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>649</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1429</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_652</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>652</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1430</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_666</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>666</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1431</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_669</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>669</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1432</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_672</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>672</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1433</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_694</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>694</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1434</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_697</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>697</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1435</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_700</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>700</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1436</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_714</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>714</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1437</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_717</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>717</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1438</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_720</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>720</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1439</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_735</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>735</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1440</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_738</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>738</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1441</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_741</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>741</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1442</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_755</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>755</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1443</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_758</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>758</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1444</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_761</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>761</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1445</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_774</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>774</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1446</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_777</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>777</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1447</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_780</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>780</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1448</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_802</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>802</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1449</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_811</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>811</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1450</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_825</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>825</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1451</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_843</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>843</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1452</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_846</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>846</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1453</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_849</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>849</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1454</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_862</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>862</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1455</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_871</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>871</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1456</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_876</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>876</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1457</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_881</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>881</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1458</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_891</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>891</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1459</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_896</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>896</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1460</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_909</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>909</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1461</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_919</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>919</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1462</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_922</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>922</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1463</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_925</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>925</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1464</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_939</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>939</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1465</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_942</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>942</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1466</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_945</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>945</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1467</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_960</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>960</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1468</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_963</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>963</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1469</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_966</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>966</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1470</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_980</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>980</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1471</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_983</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>983</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1472</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_986</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>986</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1473</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_999</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>999</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1474</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1002</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>1002</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1475</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1005</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>1005</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1476</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1027</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>1027</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1477</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1036</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>1036</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1478</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1050</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>1050</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1479</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1068</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>1068</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1480</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1071</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>1071</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1481</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_1074</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet</sourcefile>
      <sourceline>1074</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1482</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_h.jet_58</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_h.jet</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure04</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1642</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1483</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_h.jet_60</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_h.jet</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure06</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1644</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1484</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_101</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure03</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1641</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1485</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet</sourcefile>
      <sourceline>102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1486</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_104</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1649</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1487</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_148</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet</sourcefile>
      <sourceline>148</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1488</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_171</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet</sourcefile>
      <sourceline>171</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1489</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_187</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet</sourcefile>
      <sourceline>187</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1490</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_210</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet</sourcefile>
      <sourceline>210</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1491</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_226</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet</sourcefile>
      <sourceline>226</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1492</internalId></specobject>
    <specobject>
      <id>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_249</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet</sourcefile>
      <sourceline>249</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1493</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_44</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.Supervision.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1494</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_77</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>77</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.Supervision.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1495</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_109</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.Supervision.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>460</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1496</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_122</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1497</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_153</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>153</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1498</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_185</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>185</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1499</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_198</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>198</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SlaveSwitchMode.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1500</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_229</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>229</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SlaveSwitchMode.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1501</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_261</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>261</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SlaveSwitchMode.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1502</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_274</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>274</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfSatelliteFailure.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1503</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_307</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>307</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfSatelliteFailure.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1504</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_339</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>339</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfSatelliteFailure.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1505</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_352</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>352</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.ImproperCaller.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1506</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_387</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>387</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.ImproperCaller.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1507</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_419</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>419</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.ImproperCaller.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1508</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_432</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>432</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfTimingViolation.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1509</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_465</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>465</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfTimingViolation.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1510</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_497</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>497</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfTimingViolation.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1511</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_510</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>510</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1512</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_541</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>541</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1513</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_573</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>573</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1514</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_590</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>590</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WdgM_DeInit.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1515</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_631</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>631</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020102_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1516</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_663</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>663</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WdgMRteUsage_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1517</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_692</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>692</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.ConfigParam</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1518</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_715</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>715</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WDGM029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1519</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_749</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>749</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020111_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1520</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_786</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>786</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020113_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1521</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_822</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>822</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020119_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1522</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_858</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>858</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020128_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>617</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1523</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_909</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>909</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1524</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_937</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>937</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1525</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_965</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>965</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WDGM003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1526</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_1000</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>1000</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020120_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1527</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_1037</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>1037</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020121_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1528</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters.xdm.m4_1060</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters.xdm.m4</sourcefile>
      <sourceline>1060</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020122_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1529</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1530</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_81</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020125_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1531</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_133</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020133_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1532</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_184</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>184</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020143_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>614</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1533</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_247</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>247</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020118_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1534</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_283</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>283</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020130_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1535</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_317</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>317</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1536</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_338</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>338</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1537</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_367</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>367</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1538</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_374</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>374</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020115_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1539</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_408</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>408</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020116_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1540</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_442</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>442</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1541</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_471</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>471</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1542</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_478</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>478</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1543</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_512</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>512</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020104_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1544</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_547</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>547</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020114_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1545</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_580</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>580</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1546</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_591</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>591</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020123_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>596</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1547</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_620</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>620</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>624</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1548</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_624</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>624</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>624</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1549</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_630</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>630</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>624</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1550</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_634</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>634</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>624</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1551</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_647</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>647</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020105_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1552</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_680</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>680</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020106_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1553</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_714</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>714</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020107_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1554</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_750</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>750</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020108_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1555</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_785</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>785</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1556</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_817</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>817</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020135_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1557</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_849</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>849</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020110_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1558</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_884</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>884</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020124_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1559</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_918</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>918</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020131_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>615</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1560</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_951</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>951</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020134_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>616</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1561</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_975</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>975</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020132_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>598</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1562</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_1012</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>1012</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1563</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_1047</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>1047</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1564</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4_1086</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_EBParameters_TimEPM.xdm.m4</sourcefile>
      <sourceline>1086</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020112_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1565</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_292</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>292</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WdgMModeId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1566</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_333</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>333</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1567</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_511</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>511</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1568</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_517</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>517</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1569</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_524</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>524</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1570</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_531</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>531</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1571</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_538</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>538</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1572</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_571</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>571</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1573</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_579</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>579</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1574</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_586</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>586</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1575</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_644</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>644</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6505</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1576</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_645</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>645</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1577</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_652</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>652</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1578</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_670</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>670</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1579</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_695</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>695</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020136_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>609</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1580</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_782</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>782</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ExtLogSupLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1581</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_820</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>820</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6509</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1582</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_821</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>821</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6508</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1583</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_822</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>822</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00309</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1584</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_823</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>823</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00310</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1585</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_846</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>846</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ExternalSupervision2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1586</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_874</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>874</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6509</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1587</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_875</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>875</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6508</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1588</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_876</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>876</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00309</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1589</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_877</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>877</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00310</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1590</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_900</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>900</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.InternalSupervision1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1591</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_906</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>906</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ExternalSupervision2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1592</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_918</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>918</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ExternalSupervision3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1593</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_931</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>931</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>626</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1594</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1050</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1050</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WdgMOffModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1595</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1242</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1242</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM405</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1596</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1293</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1293</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.NumberOfSEs</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1597</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1326</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1326</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6502</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1598</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1327</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1327</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00307.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1599</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1374</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1374</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1600</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1375</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1375</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00311</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1601</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1402</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1402</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.NumberOfInternalCheckpointInitialRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1602</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1456</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1456</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.NumberOfCheckpoints</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1603</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1487</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1487</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WdgMCheckpointIDValues</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1604</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1493</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1493</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WdgMCheckpointIDValues</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1605</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1506</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1506</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WdgMCheckpointID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1606</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1581</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1581</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1607</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1582</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1582</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00212.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1608</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1588</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1588</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.InternalSupervision2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1609</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1617</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1617</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ExternalSupervision1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1610</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1623</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1623</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1611</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1624</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1624</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00212.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1612</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1630</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1630</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.InternalSupervision2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1613</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/WdgM_Extension.xdm.m4_1642</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/config/WdgM_Extension.xdm.m4</sourcefile>
      <sourceline>1642</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.InternalSupervision3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1614</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/WdgM_Checks.m_47</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate/include/WdgM_Checks.m</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ExternalSupervision2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1615</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_Bswmd.arxml.m4_39</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_Bswmd.arxml.m4</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.BSWMDGeneration_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1616</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_Bswmd.arxml.m4_181</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_Bswmd.arxml.m4</sourcefile>
      <sourceline>181</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.BSWMDGeneration_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1617</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_Bswmd.arxml.m4_404</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_Bswmd.arxml.m4</sourcefile>
      <sourceline>404</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020305</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>633</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1618</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_89</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.RteCheckpointIDs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1619</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_633</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4</sourcefile>
      <sourceline>633</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.RteCheckpointIDs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1620</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_719</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4</sourcefile>
      <sourceline>719</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00356</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1621</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_720</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4</sourcefile>
      <sourceline>720</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00357</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1622</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_721</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4</sourcefile>
      <sourceline>721</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00359</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1623</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_722</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4</sourcefile>
      <sourceline>722</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00360</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1624</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_723</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4</sourcefile>
      <sourceline>723</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00358</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1625</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_797</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4</sourcefile>
      <sourceline>797</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00334</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1626</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_927</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4</sourcefile>
      <sourceline>927</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00333</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1627</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_955</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4</sourcefile>
      <sourceline>955</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1628</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4_990</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_interface.arxml.m4</sourcefile>
      <sourceline>990</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1629</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_136</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4</sourcefile>
      <sourceline>136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1630</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_141</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4</sourcefile>
      <sourceline>141</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1631</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_149</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4</sourcefile>
      <sourceline>149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1632</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_153</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4</sourcefile>
      <sourceline>153</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1633</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_160</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4</sourcefile>
      <sourceline>160</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1634</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_161</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4</sourcefile>
      <sourceline>161</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1635</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_162</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4</sourcefile>
      <sourceline>162</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1636</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4_168</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/src/Autosar/generate_swcd/swcd/WdgM_swc_internal.arxml.m4</sourcefile>
      <sourceline>168</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1637</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22114</sourceline>
      <version>4</version>
      <description>The file include structure shall be as in Figure: File Structure View.
</description>
      <rationale>AUTOSAR 4.0 provides a include structure which is further refined in this requirement.</rationale>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure01</srcid><srcstatus/><internalId>1639</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure02</srcid><srcstatus/><internalId>1640</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure03</srcid><srcstatus/><internalId>1641</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure04</srcid><srcstatus/><internalId>1642</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure05</srcid><srcstatus/><internalId>1643</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure06</srcid><srcstatus/><internalId>1644</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure07</srcid><srcstatus/><internalId>1645</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure08</srcid><srcstatus/><internalId>1646</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure09</srcid><srcstatus/><internalId>1647</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure10</srcid><srcstatus/><internalId>1648</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure11</srcid><srcstatus/><internalId>1649</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure12</srcid><srcstatus/><internalId>1650</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure13</srcid><srcstatus/><internalId>1651</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure14</srcid><srcstatus/><internalId>1652</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure15</srcid><srcstatus/><internalId>1653</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure16</srcid><srcstatus/><internalId>1654</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure17</srcid><srcstatus/><internalId>1655</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.Design.IncludeFileStructure18</srcid><srcstatus/><internalId>1656</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swdd.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>1638</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure01</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22132</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgM_Cfg.h file.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_20</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM.h_18</srcid><srcstatus/><internalId>879</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB_Multicore</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1639</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure02</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22149</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgM_Version.h file.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM.h_21</srcid><srcstatus/><internalId>880</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_Int.h.m4_9</srcid><srcstatus/><internalId>934</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1640</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure03</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22165</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgM_Trace_Stc.h file.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_37</srcid><srcstatus/><internalId>804</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_33</srcid><srcstatus/><internalId>941</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_c.java_27</srcid><srcstatus/><internalId>1364</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_c.java_26</srcid><srcstatus/><internalId>1407</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_c.jet_196</srcid><srcstatus/><internalId>1414</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_101</srcid><srcstatus/><internalId>1485</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB_Multicore</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1641</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure04</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22182</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgM.h file.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_43</srcid><srcstatus/><internalId>806</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_36</srcid><srcstatus/><internalId>943</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/Java/dreisoft/tresos/wdgm/generated/jet/WdgM_Rte_Lcfg_h.java_22</srcid><srcstatus/><internalId>1406</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_h.jet_58</srcid><srcstatus/><internalId>1483</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_00_FileStructure</srcid><srcstatus/><internalId>1945</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_00_FileStructure_Multicore</srcid><srcstatus/><internalId>1955</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB_Multicore</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1642</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure05</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22199</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgM_Lcfg.h file.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_39</srcid><srcstatus/><internalId>805</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_38</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB_Multicore</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1643</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure06</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22220</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgM_Int.h file.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_18</srcid><srcstatus/><internalId>904</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_40</srcid><srcstatus/><internalId>945</internalId></linkedfrom><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_Lcfg_h.jet_60</srcid><srcstatus/><internalId>1484</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB_Multicore</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
        
        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1644</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure07</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22245</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgIf.h file.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_20</srcid><srcstatus/><internalId>905</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_42</srcid><srcstatus/><internalId>946</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1645</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure08</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22265</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgM_Types.h file.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Callouts.h_10</srcid><srcstatus/><internalId>762</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_Int.h.m4_7</srcid><srcstatus/><internalId>933</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB_Multicore</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1646</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure09</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22282</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgM_Callouts.h file.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Cfg.h.m4_8</srcid><srcstatus/><internalId>763</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB_Multicore</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1647</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure10</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22303</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgM_BSW_Lcfg.h file.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_22</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB_Multicore</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1648</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure11</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22320</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgM_Rte_Lcfg.h file.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.WdgMExt.Autosar/jet_templates/WdgM_Rte_c.jet_104</srcid><srcstatus/><internalId>1487</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB_Multicore</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1649</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure12</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22337</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgM.c file.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_00_FileStructure</srcid><srcstatus/><internalId>1945</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_00_FileStructure_Multicore</srcid><srcstatus/><internalId>1955</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB_Multicore</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
        
        
        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1650</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure13</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22365</sourceline>
      <version>1</version>
      <description>The WdgM module shall include Dbg.h file.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Trace.h_9</srcid><srcstatus/><internalId>797</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1651</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure14</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22381</sourceline>
      <version>1</version>
      <description>The WdgM module shall include Std_Types.h file.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Types.h_9</srcid><srcstatus/><internalId>799</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1652</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure15</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22397</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgM_Rte.c file.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB_Multicore</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1653</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure16</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22413</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgM_Rte_Lcfg.c file.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB_Multicore</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1654</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure17</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22429</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgM_BSW_Lcfg.c file.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB_Multicore</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1655</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.IncludeFileStructure18</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22445</sourceline>
      <version>1</version>
      <description>The WdgM module shall include WdgM_Trace.h file.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_02_FileIncludes_EB_Multicore</srcid><srcstatus/><internalId>1957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1656</internalId></specobject>
    <specobject>
      <id>WDGM.EB.Design.FileStructure</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22461</sourceline>
      <version>2</version>
      <description>The Watchdog Manager shall be composed of the following files in addition to the file  structure specified by AUTOSAR: WdgM_BSW_Lcfg.c, WdgM_Rte.c,  WdgM_Rte_Lcfg.c, WdgM_Lcfg.h, WdgM_BSW_Lcfg.h, WdgM_Int.h, WdgM_Types.h, WdgM_Trace.h, WdgM_Trace_Stc.h, WdgM_Version.h, WdgM_Callouts.h and WdgM_Rte_Lcfg.h.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_01_FileStructure_EB</srcid><srcstatus/><internalId>1946</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_01_FileStructure_EB_Multicore</srcid><srcstatus/><internalId>1956</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1657</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.PartitionResetData</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22471</sourceline>
      <version>1</version>
      <description>When a Supervised Entity is mapped to an Os Application that resets due to a failure then WdgM shall reset all internal data for all the Supervised Entities which are referencing that Os Application.</description>
      <rationale>All SE mapped to an restarting Os Application must start supervision from initial conditions.</rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4234</srcid><srcstatus/><internalId>1190</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_PartitionState</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1658</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.PartitionStateMachine</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22483</sourceline>
      <version>1</version>
      <description>When partition reset feature is enabled, each Os Application referenced by the WdgM shall implement a state machine, representing the current state of the Os Application.
</description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>WDGM.EB.DesignDecision.PartitionActive</srcid><srcstatus/><internalId>1701</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.DesignDecision.PartitionPost</srcid><srcstatus/><internalId>1702</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.DesignDecision.PartitionRestart</srcid><srcstatus/><internalId>1703</internalId></linkedfrom><linkedfrom><srcid>WDGM.EB.DesignDecision.PartitionInitial</srcid><srcstatus/><internalId>1704</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WDGM225.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1659</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.PartitionSupervisionActive</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22504</sourceline>
      <version>1</version>
      <description>When a Supervised Entity is mapped to an Os Application that is in state WDGM_EB_PARTITION_ACTIVE WdgM shall execute all supervision mechanism configured for that Supervised Entity.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1880</srcid><srcstatus/><internalId>1008</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4059</srcid><srcstatus/><internalId>1181</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_PartitionState</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1660</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.PartitionSupervisionPost</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22515</sourceline>
      <version>1</version>
      <description>When a Supervised Entity is mapped to an Os Application that is in state WDGM_EB_PARTITION_POST_RESTARTED WdgM shall execute all supervision mechanism configured for that Supervised Entity except Alive Supervision.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4091</srcid><srcstatus/><internalId>1183</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_PartitionState</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1661</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.PartitionSupervisionRestart</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22526</sourceline>
      <version>1</version>
      <description>When a Supervised Entity is mapped to an Os Application that is in state WDGM_EB_PARTITION_RESTARTED WdgM shall inactivate all supervision mechanism configured for that Supervised Entity.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4059</srcid><srcstatus/><internalId>1181</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_PartitionState</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1662</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.ConcurrentCall1</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22537</sourceline>
      <version>1</version>
      <description>WdgM shall be able to detect if for the current external graph another CP was run in parallel before the current CP finished it's processing.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_ExternalLogicalConcurrent_Multicore</srcid><srcstatus/><internalId>1889</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_ExternalLogicalConcurrent_Multicore_2</srcid><srcstatus/><internalId>1890</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_3297</srcid><srcstatus/><internalId>1137</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1663</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable1</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22548</sourceline>
      <version>4</version>
      <description>The Local Supervision Status of each Supervised Entity shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable structure element: WdgM_EB[_Core&amp;lt;CoreId&amp;gt;]_Context-&amp;gt;WdgM_EB_SELocalStatus
Note: 
[_Core&amp;lt;CoreId&amp;gt;] is optional for the multicore configuration, where &amp;lt;CoreId&amp;gt; represent the core number.
This variable is accessed from core context.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_1001_PartitionSupport</srcid><srcstatus/><internalId>1714</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_02</srcid><srcstatus/><internalId>1972</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_129</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_891</srcid><srcstatus/><internalId>822</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1247</srcid><srcstatus/><internalId>844</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_362</srcid><srcstatus/><internalId>912</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreGlobalStatus</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00085.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1664</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable2</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22572</sourceline>
      <version>1</version>
      <description>The Global Supervision Status shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable: WdgM_EB_GlobalStatus.</description>
      <rationale>WDGM.ASR40.WDGM239</rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_04</srcid><srcstatus/><internalId>1974</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_100</srcid><srcstatus/><internalId>786</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_873</srcid><srcstatus/><internalId>819</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1665</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable3</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22590</sourceline>
      <version>1</version>
      <description>For each Checkpoint, the Alive Counters shall be available for debugging within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable where [SEName] is replaced by the short-name of the configured Supervised Entity: WdgM_EB_CPData_[SEName].AliveCounterData.</description>
      <rationale>in relation to WDGM.ASR40.WDGM240</rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_1001_PartitionSupport</srcid><srcstatus/><internalId>1714</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_01</srcid><srcstatus/><internalId>1970</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_01</srcid><srcstatus/><internalId>1984</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_02</srcid><srcstatus/><internalId>1985</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_44</srcid><srcstatus/><internalId>781</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_111</srcid><srcstatus/><internalId>808</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_187</srcid><srcstatus/><internalId>907</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00085.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1666</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable4</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22608</sourceline>
      <version>1</version>
      <description>For each start Checkpoint, the timestamp when each Checkpoint has been reached shall be available for debugging of Deadline Supervision within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable: WdgM_EB_DMData[DeadlineId].StartTimestampData.</description>
      <rationale>in relation to WDGM.ASR40.WDGM241</rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_1001_PartitionSupport</srcid><srcstatus/><internalId>1714</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision</srcid><srcstatus/><internalId>1830</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision_Multicore</srcid><srcstatus/><internalId>1875</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_05</srcid><srcstatus/><internalId>1975</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_07</srcid><srcstatus/><internalId>1992</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_122</srcid><srcstatus/><internalId>809</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_169</srcid><srcstatus/><internalId>906</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_469</srcid><srcstatus/><internalId>925</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_487</srcid><srcstatus/><internalId>929</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1667</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable5</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22626</sourceline>
      <version>1</version>
      <description>For each start Checkpoint, the result of Deadline Supervision for each Supervised Entity shall be available for debugging of Deadline Supervision within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable where [SEName] is replaced by the short-name of the configured Supervised Entity: WdgM_EB_CPData_[SEName].DeadlineData.</description>
      <rationale>in relation to WDGM.ASR40.WDGM241</rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_1001_PartitionSupport</srcid><srcstatus/><internalId>1714</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_07</srcid><srcstatus/><internalId>1977</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_03a</srcid><srcstatus/><internalId>1986</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_03b</srcid><srcstatus/><internalId>1987</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_04</srcid><srcstatus/><internalId>1988</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_45</srcid><srcstatus/><internalId>782</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_111</srcid><srcstatus/><internalId>808</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_190</srcid><srcstatus/><internalId>908</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1668</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable6</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22644</sourceline>
      <version>2</version>
      <description>For each start Internal Logical Supervision Graph, the information about the most recently reached Checkpoints shall be available for debugging within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable:WdgM_EB_InternalGraphData[GraphId].LastCPData.</description>
      <rationale>in relation to WDGM.ASR40.WDGM242</rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_1001_PartitionSupport</srcid><srcstatus/><internalId>1714</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_09</srcid><srcstatus/><internalId>1979</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_13_2</srcid><srcstatus/><internalId>2000</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_198</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2324</srcid><srcstatus/><internalId>877</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_200</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293_1.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1669</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable7</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22662</sourceline>
      <version>2</version>
      <description>For each start Internal Logical Supervision Graph, the information about the Activity Flag shall be available for debugging within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable: WdgM_EB_InternalGraphData[GraphId].IsActiveData.</description>
      <rationale>in relation to WDGM.ASR40.WDGM242</rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_1001_PartitionSupport</srcid><srcstatus/><internalId>1714</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_10</srcid><srcstatus/><internalId>1980</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_12_2</srcid><srcstatus/><internalId>1998</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_198</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2324</srcid><srcstatus/><internalId>877</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_200</srcid><srcstatus/><internalId>910</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_206</srcid><srcstatus/><internalId>911</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293_1.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1670</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable8</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22684</sourceline>
      <version>1</version>
      <description>For each start Logical Supervision Graph, the information about the result of Logical Supervision shall be available for debugging within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable where [SEName] is replaced by the short-name of the configured Supervised Entity: WdgM_EB_CPData_[SEName].LogicalData.</description>
      <rationale>in relation to WDGM.ASR40.WDGM242</rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_1001_PartitionSupport</srcid><srcstatus/><internalId>1714</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_11</srcid><srcstatus/><internalId>1981</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_05a</srcid><srcstatus/><internalId>1989</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_05b</srcid><srcstatus/><internalId>1990</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_06</srcid><srcstatus/><internalId>1991</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_46</srcid><srcstatus/><internalId>783</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_111</srcid><srcstatus/><internalId>808</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_194</srcid><srcstatus/><internalId>909</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293_1.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1671</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable9</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22702</sourceline>
      <version>1</version>
      <description>For each start Checkpoint, the information about the Activity Flag shall be available for debugging within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable: WdgM_EB_DMData[DeadlineId].IsActiveData.</description>
      <rationale>in relation to WDGM.ASR40.WDGM241</rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision</srcid><srcstatus/><internalId>1830</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDeadlineSupervision_Multicore</srcid><srcstatus/><internalId>1875</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_12</srcid><srcstatus/><internalId>1982</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_124</srcid><srcstatus/><internalId>811</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_471</srcid><srcstatus/><internalId>927</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_489</srcid><srcstatus/><internalId>931</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1672</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable10</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22720</sourceline>
      <version>3</version>
      <description>The failed reference cycle counter of a individual  Supervised Entity shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable structure element: WdgM_EB[_Core&amp;lt;CoreId&amp;gt;]_Context.WdgM_EB_FailedAliveSupervisionRefCycleCnt. 
Note: 
[_Core&amp;lt;CoreId&amp;gt;] is optional for the multicore configuration, where &amp;lt;CoreId&amp;gt; represent the core number.
This variable is accessed from core context.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_03</srcid><srcstatus/><internalId>1973</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1303</srcid><srcstatus/><internalId>846</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2048</srcid><srcstatus/><internalId>865</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_382</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00085.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1673</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable11</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22740</sourceline>
      <version>1</version>
      <description>or deadline supervision, the information about the maximum allowed WdgM_MainFunction cycles until deadline violation occurs shall be available for debugging within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable: WdgM_EB_DMData[DeadlineId].MaxCyclesData.</description>
      <rationale>in relation to WDGM.ASR40.WDGM241</rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_08</srcid><srcstatus/><internalId>1978</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_123</srcid><srcstatus/><internalId>810</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_470</srcid><srcstatus/><internalId>926</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_488</srcid><srcstatus/><internalId>930</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1674</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable12</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22758</sourceline>
      <version>1</version>
      <description>For each start External Logical Supervision Graph, the information about the most recently reached Checkpoints shall be available for debugging within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable: WdgM_EB_ExternalGraphData[GraphId].LastCPData.</description>
      <rationale>in relation to WDGM.ASR40.WDGM242</rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtection_13_1</srcid><srcstatus/><internalId>1999</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_191</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2310</srcid><srcstatus/><internalId>875</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ExtGraphData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293_1.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1675</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable13</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22780</sourceline>
      <version>1</version>
      <description>For each start ExternalLogical Supervision Graph, the information about the Activity Flag shall be available for debugging within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable: WdgM_EB_ExternalGraphData[GraphId].IsActiveData.
</description>
      <rationale>in relation to WDGM.ASR40.WDGM242</rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtection_12_1</srcid><srcstatus/><internalId>1997</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_191</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2310</srcid><srcstatus/><internalId>875</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ExtGraphData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293_1.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1676</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable14</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22807</sourceline>
      <version>1</version>
      <description>When multicore is enabled, the current mode of all the core instances shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable structure element: WdgM_EB[_Core&amp;lt;CoreId&amp;gt;]_Context.WdgM_EB_CoreSwitchMode
Note: 
[_Core&amp;lt;CoreId&amp;gt;] is optional for the multicore configuration, where &amp;lt;CoreId&amp;gt; represent the core number.
This variable is accessed from core context.</description>
      <rationale>Mode for each cores shall be the same for all the cores, after a mode switch</rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1055</srcid><srcstatus/><internalId>832</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_389</srcid><srcstatus/><internalId>918</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SatellitesSwitchedToNewMode_Multicore</srcid><srcstatus/><internalId>2080</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreSwitchMode.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1677</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable15</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22828</sourceline>
      <version>3</version>
      <description>The core initialization status of the Watchdog Manager module shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable structure element: WdgM_EB[_Core&amp;lt;CoreId&amp;gt;]_Context.WdgM_EB_InitStatus.
Notes: 
[_Core&amp;lt;CoreId&amp;gt;] is optional for the multicore configuration, where &amp;lt;CoreId&amp;gt; represent the core number.
This variable is accessed from core context.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1110</srcid><srcstatus/><internalId>835</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2065</srcid><srcstatus/><internalId>866</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_386</srcid><srcstatus/><internalId>917</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GlobalInitializationStatus_Multicore</srcid><srcstatus/><internalId>2078</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreInit.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1678</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable16</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22848</sourceline>
      <version>1</version>
      <description> For each external Logical Supervision Graph, the information about the last Supervision Entity which reported  shall be available for debugging within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable where [GraphID] is the external Graph Id: WdgM_EB_ExtGraphDataSeqPtr[GraphID].GraphDataPtr.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_13</srcid><srcstatus/><internalId>1983</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_14</srcid><srcstatus/><internalId>2001</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2315</srcid><srcstatus/><internalId>876</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ExtGraphData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293_1.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1679</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable17</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22869</sourceline>
      <version>1</version>
      <description>The expected mode of in which all the core instances should be shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable: WdgM_EB_ExpectedWdgMModeId.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_135</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_898</srcid><srcstatus/><internalId>823</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SatellitesSwitchedToNewMode_Multicore</srcid><srcstatus/><internalId>2080</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1680</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable18</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22886</sourceline>
      <version>1</version>
      <description>The expected initialization mode of WdgM shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable: WdgM_EB_ExpectedInitState.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_73</srcid><srcstatus/><internalId>784</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_851</srcid><srcstatus/><internalId>817</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_DeInit_NotInit_Multicore</srcid><srcstatus/><internalId>2084</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1681</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable19</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22903</sourceline>
      <version>1</version>
      <description>The first expired Supervised Entity ID shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable: WdgM_EB_ExpiredSEID.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_218</srcid><srcstatus/><internalId>796</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_958</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1166</srcid><srcstatus/><internalId>839</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GlobalLocalStatus_Multicore</srcid><srcstatus/><internalId>2075</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00349.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1682</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable20</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22920</sourceline>
      <version>1</version>
      <description>The number of supervision cycles spent in state EXPIRED shall be available within the Watchdog Manager module via the following static variable from WdgM.c: WdgM_EB_ExpiredSupervisionCycleCnt.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1401</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00085.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1683</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable21</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22937</sourceline>
      <version>1</version>
      <description>The current mode of WdgM instance shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable structure element: WdgM_EB[_Core&amp;lt;CoreId&amp;gt;]_Context.WdgM_EB_CurrentModeId.
Note: 
[_Core&amp;lt;CoreId&amp;gt;] is optional for the multicore configuration, where &amp;lt;CoreId&amp;gt; represent the core number.
This variable is accessed from core context.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_394</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_SatellitesSwitchedToNewMode_Multicore</srcid><srcstatus/><internalId>2080</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1684</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable22</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22957</sourceline>
      <version>1</version>
      <description>The active MainFunction execution shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable structure element: WdgM_EB[_Core&amp;lt;CoreId&amp;gt;]_Context. WdgM_EB_MainFunctionActive.
Note: 
[_Core&amp;lt;CoreId&amp;gt;] is optional for the multicore configuration, where &amp;lt;CoreId&amp;gt; represent the core number.
This variable is accessed from core context.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_396</srcid><srcstatus/><internalId>921</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckMainFunctionReentrancy_02</srcid><srcstatus/><internalId>2050</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020447</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>667</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1685</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable23</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22977</sourceline>
      <version>1</version>
      <description>The timestamp of the last WdgM MainFunction shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable structure element: WdgM_EB[_Core&amp;lt;CoreId&amp;gt;]_Context.WdgM_EB_MainFunctionTimeStamp.
Note: 
[_Core&amp;lt;CoreId&amp;gt;] is optional for the multicore configuration, where &amp;lt;CoreId&amp;gt; represent the core number.
This variable is accessed from core context.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_399</srcid><srcstatus/><internalId>922</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_TimE_CheckMFTimingBehavior_SupervisorEnabled_01</srcid><srcstatus/><internalId>2048</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020123.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>597</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1686</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable24</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>22997</sourceline>
      <version>1</version>
      <description>For each start Checkpoint, the inverse timestamp when each Checkpoint has been reached shall be available for debugging of Deadline Supervision within the Watchdog Manager module via inclusion of WdgM_BSW_Lcfg.h via the following external global variable: WdgM_EB_DMData[DeadlineId].StartTimestampDataInv.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_125</srcid><srcstatus/><internalId>812</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_472</srcid><srcstatus/><internalId>928</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_490</srcid><srcstatus/><internalId>932</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_06</srcid><srcstatus/><internalId>1976</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtection_07</srcid><srcstatus/><internalId>1992</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00293.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1687</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable25</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23015</sourceline>
      <version>1</version>
      <description>For each Checkpoint, the copy of the Alive Counters shall be available for debugging within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable: WdgM_EB[_Core&amp;lt;CoreId&amp;gt;]_Context.-&amp;gt;WdgM_EB_IntRAMData[IntRamIdx].AliveCounterData
Note:
[_Core&amp;lt;CoreId&amp;gt;] is optional for the multicore configuration, where &amp;lt;CoreId&amp;gt; represent the core number.
This variable is accessed from core context.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1299</srcid><srcstatus/><internalId>845</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2043</srcid><srcstatus/><internalId>864</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_384</srcid><srcstatus/><internalId>916</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckInternalVariable_01b</srcid><srcstatus/><internalId>1971</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00085.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1688</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable26</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23035</sourceline>
      <version>1</version>
      <description>The existance of the first expired Supervised Entity ID shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable:WdgM_EB_IsExpiredSEIdSet.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_147</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/WdgM_Lcfg.h_157</srcid><srcstatus/><internalId>792</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_909</srcid><srcstatus/><internalId>824</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_921</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1146</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1155</srcid><srcstatus/><internalId>838</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GlobalLocalStatus_Multicore</srcid><srcstatus/><internalId>2075</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00349.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1689</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable27</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23053</sourceline>
      <version>1</version>
      <description>If the WdgMGetAllExpiredSEIDs configuration parameter is enabled all the expired Supervised Entity IDs shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable structure element: WdgM_EB[_Core&amp;lt;CoreId&amp;gt;]_Context-&amp;gt;WdgM_EB_ExpiredSEIDs.
Note: 
[_Core&amp;lt;CoreId&amp;gt;] is optional for the multicore configuration, where &amp;lt;CoreId&amp;gt; represent the core number.
This variable is accessed from core context.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_937</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_994</srcid><srcstatus/><internalId>829</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_375</srcid><srcstatus/><internalId>913</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GetAllExpiredInternalVariables</srcid><srcstatus/><internalId>2092</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.MainFunction.Write</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1690</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable28</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23073</sourceline>
      <version>1</version>
      <description>If the WdgMGetAllExpiredSEIDs configuration parameter is enabled the number of expired Supervised Entity IDs shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable structure element: WdgM_EB[_Core&amp;lt;CoreId&amp;gt;]_Context-&amp;gt;WdgM_EB_ExpiredSEIDsCounter.
Note: 
[_Core&amp;lt;CoreId&amp;gt;] is optional for the multicore configuration, where &amp;lt;CoreId&amp;gt; represent the core number.
This variable is accessed from core context.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_946</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1004</srcid><srcstatus/><internalId>830</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_379</srcid><srcstatus/><internalId>914</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_GetAllExpiredInternalVariables</srcid><srcstatus/><internalId>2092</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.MainFunction.Write</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1691</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable29</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23094</sourceline>
      <version>1</version>
      <description>If the WdgMGetAllExpiredSEIDs configuration parameter is enabled all the expired Supervised Entity IDs shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable: WdgM_EB_Core&amp;lt;CoreId&amp;gt;_PartitionStatus[].
Note: This variable is accessed from WdgM_EB_SetPartitionStatus().
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_801</srcid><srcstatus/><internalId>815</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_803</srcid><srcstatus/><internalId>816</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2529</srcid><srcstatus/><internalId>878</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>728</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1692</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable30</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23112</sourceline>
      <version>1</version>
      <description>If configuration parameter WdgMOsApplicationRef is enabled the internal counter for that Os Application supervision cycles shall be available within the Watchdog Manager module via inclusion of WdgM_Lcfg.h via the following external global variable structure element: WdgM_EB[_Core&amp;lt;CoreId&amp;gt;]_Context-&amp;gt;WdgM_EB_PartitionSupervisionCycleCntPtr.
Note: 
[_Core&amp;lt;CoreId&amp;gt;] is optional for the multicore configuration, where &amp;lt;CoreId&amp;gt; represent the core number.
This variable is accessed from core context.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1388</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_2114</srcid><srcstatus/><internalId>867</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_407</srcid><srcstatus/><internalId>923</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_PartitionState</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00098.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1693</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable31</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23132</sourceline>
      <version>1</version>
      <description>The internal counter for supervision cycles shall be available within the Watchdog Manager module via inclusion of WdgM_BSW_Lcfg.h via the following external global variable structure element: WdgM_EB[_Core&amp;lt;CoreId&amp;gt;]_Context. WdgM_EB_SupervisionCycleCnt.
Note: 
[_Core&amp;lt;CoreId&amp;gt;] is optional for the multicore configuration, where &amp;lt;CoreId&amp;gt; represent the core number.
This variable is accessed from core context.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/WdgM_BSW_Lcfg.h_392</srcid><srcstatus/><internalId>919</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_PartitionState</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00098.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1694</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable32</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23152</sourceline>
      <version>1</version>
      <description>Temporary disable of the alive supervision shall be available within the Watchdog Manager module via the following static variable from WdgM.c: WdgM_EB_TmpDisableAliveSupv.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1386</srcid><srcstatus/><internalId>949</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TemporaryDisableAlive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1695</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable33</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23169</sourceline>
      <version>1</version>
      <description>The counter for how many WdgM_MainFunction to wait until Satellites changed to the new mode shall be available within the Watchdog Manager module via the following static variable from WdgM.c: WdgM_EB_MasterWaitSlavesModeSwitch.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1371</srcid><srcstatus/><internalId>947</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreSwitchMode.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1696</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable34</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23186</sourceline>
      <version>1</version>
      <description>Indication of an error in satellite setting wdg drivers shall be available within the Watchdog Manager module via the following static variable from WdgM.c: WdgM_EB_SatelliteWdgIfSetModeFailed.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1116</srcid><srcstatus/><internalId>836</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreSetWatchdog4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1697</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable35</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23203</sourceline>
      <version>1</version>
      <description>Indication of an active mode switch operation shall be available within the Watchdog Manager module via the following static variable from WdgM.c: WdgM_EB_ModeSwitchInProgress.
</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_01</srcid><srcstatus/><internalId>2006</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_02</srcid><srcstatus/><internalId>2007</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_03</srcid><srcstatus/><internalId>2008</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_04</srcid><srcstatus/><internalId>2009</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_05</srcid><srcstatus/><internalId>2010</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_06</srcid><srcstatus/><internalId>2011</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_07</srcid><srcstatus/><internalId>2012</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_08</srcid><srcstatus/><internalId>2013</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_1379</srcid><srcstatus/><internalId>948</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020476</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020478</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1698</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable36</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23225</sourceline>
      <version>1</version>
      <description>Indication of an satellite aliveness shall be available within the Watchdog Manager module via the following static variable from WdgM_BSW_Lcfg.c: WdgM_EB_Satellite_&amp;lt;Satellite&amp;gt;_AliveCounter.

</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1197</srcid><srcstatus/><internalId>841</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_12</srcid><srcstatus/><internalId>2005</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_01_MC</srcid><srcstatus/><internalId>2064</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_02_MC</srcid><srcstatus/><internalId>2065</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020487</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>680</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1699</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.InternalVariable37</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23244</sourceline>
      <version>1</version>
      <description>Indication of satellite alive counter shall be available within the Watchdog Manager module via the following static variable from WdgM_BSW_Lcfg.c: WdgM_MasterCounter_&amp;lt;Satellite&amp;gt;.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/WdgM_BSW_Lcfg.c_1189</srcid><srcstatus/><internalId>840</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_CheckDataProtectionRedundant_12</srcid><srcstatus/><internalId>2005</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_01_MC</srcid><srcstatus/><internalId>2064</internalId></linkedfrom><linkedfrom><srcid>TS_WDGM_SatelliteAliveness_DetDem_02_MC</srcid><srcstatus/><internalId>2065</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020487</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>680</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1700</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.PartitionActive</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23262</sourceline>
      <version>1</version>
      <description>If the partition was in status WDGM_EB_PARTITION_POST_RESTARTED and WdgM finished calculating the local and/or global supervision status, then the partition shall change the status to WDGM_EB_PARTITION_ACTIVE.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2505</srcid><srcstatus/><internalId>1067</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_PartitionState</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionStateMachine</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1659</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1701</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.PartitionPost</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23280</sourceline>
      <version>1</version>
      <description>If the partition was in status WDGM_EB_PARTITION_RESTARTING and the partition is active, then the partition shall change the status to WDGM_EB_PARTITION_POST_RESTARTED.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4301</srcid><srcstatus/><internalId>1192</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_PartitionState</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionStateMachine</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1659</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1702</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.PartitionRestart</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23297</sourceline>
      <version>1</version>
      <description>If the partition was in status WDGM_EB_PARTITION_ACTIVE and a Supervised Entity failed on that partition, then the partition shall change the status to WDGM_EB_PARTITION_RESTARTING.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_4216</srcid><srcstatus/><internalId>1189</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_PartitionState</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionStateMachine</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1659</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1703</internalId></specobject>
    <specobject>
      <id>WDGM.EB.DesignDecision.PartitionInitial</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/doc/project/design/pdf/EBASCTIMESE-WdgM-33_Design_Specifcation-profiled.xml</sourcefile>
      <sourceline>23314</sourceline>
      <version>1</version>
      <description>WdgM shall initialize all referenced partitions to WDGM_EB_PARTITION_ACTIVE.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/WdgM.c.m4_2490</srcid><srcstatus/><internalId>1066</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_WDGM_WdgMRequestPartitionReset_PartitionState</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionStateMachine</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1659</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1704</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WdgM_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/build/reqm/common_req/WdgM_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(WdgM.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>744</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1705</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_32034</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Compile/IN/WdgM_ComTest_01/source/application/WdgM_ComTest_Common.c.m4</sourcefile>
      <sourceline>207</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

This compile test checks several issues which are subsumed
herein in order to reduce the test execution time.

PART 1:
Test that the translation of the WdgM Module containing
all WdgM API calls works without any errors for the
permutations stated below.

PART 2:
Test the correct generation of all pre-compile time configuration
parameters for the permutations stated below.

PART 3:
Test the correct generation of all pre-compile time macros
regarding DET errors are correctly generated.

PART 4:
Test the correct generation of all EB specific pre-compile time configuration
parameters for the permutations stated below.

PART 5:
Test that the range of the configuration parameters
WdgMSupervisionDemDetErrId, WdgMSetModeDemDetErrId, and WdgMImproperCallerDemDetErrId
are only checked if the parameter is enabled (That is,
WdgMSupervisionReportToDem, WdgMSetModeReportToDem, and WdgMImproperCallerReportToDem
must be set to DET, respectively).

   Parameter / Permutation               |    p0   |    p1   |    p2   |    p3   |
--------------------------------------------|-------------------------------------
WdgMDevErrorDetect                       | false   | false   | true    | true    |
WdgMSupervisionReportToDem               | DEM     | DISABLE | DET     | DEM     |
WdgMSetModeReportToDem                   | DEM     | DISABLE | DET     | DEM     |
WdgMImproperCallerReportToDem            | DEM     | DISABLE | DET     | DEM     |
WdgMFTimingViolationReportToDem          | DEM     | DISABLE | DET     | DEM     |
WdgMDataCorruptionReportToDem            | DEM     | DISABLE | DET     | DEM     |
WdgMMasterWaitSlaveModeSwitchFailure     | DEM     | DISABLE | DET     | DEM     |
WdgMVersionInfoApi                       | true    | false   | true    | true    |
WdgMDemStoppedSupervisionReport          | true    | false   | true    | true    |
WdgMImmediateReset                       | false   | true    | false   | false   |
WdgMOffModeEnabled                       | true    | true    | true    | false   |
WdgMRteUsage                             | false   | false   | false   | false   |
WdgMDefensiveBehavior                    | true    | true    | false   | true    |
WdgMCallerIds                            | true    | false   | true    | true    |
WdgMSupervisionDemDetErrId               | 30      | 30      | 30      | 30      |
WdgMSetModeDemDetErrId                   | 31      | 31      | 31      | 31      |
WdgMImproperCallerDemDetErrId            | 32      | 32      | 32      | 32      |
WdgMMFTimingViolationDemDetErrId         | 33      | 33      | 33      | 33      |
WdgMDataCorruptionDemDetErrId            | 34      | 34      | 34      | 34      |
WdgMMasterWaitSlaveModeSwitchDemDetErrId | 35      | 35      | 35      | 35      |


Test Object: None.
Test Precondition: 

Only for PART 5:
  * Successful execution of test-case: TS_WDGM_GENTEST_00_NegativeTests
  * WdgM Configuration:
    - WdgMSupervisionReportToDem is set to DET
    - WdgMSetModeReportToDem is set to DET
    - WdgMImproperCallerReportToDem is set to DET
    - WdgMMFTimingViolationReportToDem is set to DET
    - WdgMDataCorruptionReportToDem is set to DET
    - WdgMSupervisionDemDetErrId has a value greater than or equal to 30
    - WdgMSetModeDemDetErrId has a value greater than or equal to 30
    - WdgMImproperCallerDemDetErrId has a value greater than or equal to 30
    - WdgMMFTimingViolationDemDetErrId has a value greater than or equal to 30
    - WdgMDataCorruptionDemDetErrId has a value greater than or equal to 30
    Note: The aforementioned preconditions regarding the WdgM Config
          are part of permutation p2.


Test Execution: 

For all stated permutations:
PART 1: Successful compilation of WdgM containing all WdgM API calls.
  VP 01 (WdgM.ASR40.WDGM025, WDGM.EB.TIMEPM.WDGM020431):
     WdgM successfully compiles with the call of WdgM_Init()
  VP 02 (WdgM.ASR40.WDGM025, WDGM.EB.TIMEPM.WDGM020436):
     WdgM successfully compiles with the call WdgM_DeInit(()
  VP 03 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM153):
     WdgM successfully compiles with the call of WdgM_GetVersionInfo()
  VP 04 (WdgM.ASR40.WDGM025, WDGM.EB.TIMEPM.WDGM020425):
     WdgM successfully compiles with the call of WdgM_SetMode()
  VP 05 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM168):
     WdgM successfully compiles with the call of WdgM_GetMode()
  VP 06 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM263):
     WdgM successfully compiles with the call of WdgM_CheckpointReached()
  VP 07 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM155):
     WdgM successfully compiles with the call of WdgM_UpdateAliveCounter()
  VP 08 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM169):
     WdgM successfully compiles with the call of WdgM_GetLocalStatus()
  VP 09 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM175):
     WdgM successfully compiles with the call of WdgM_GetGlobalStatus()
  VP 10 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM264):
     WdgM successfully compiles with the call of WdgM_PerformReset()
  VP 11 (WdgM.ASR40.WDGM025, WdgM.SWS_WdgM_00346):
     WdgM successfully compiles with the call of WdgM_GetFirstExpiredSEID()
  VP 12 (WdgM.ASR40.WDGM025, WdgM.SWS_WdgM_00159):
     WdgM successfully compiles with the call of WdgM_MainFunction()

PART 2: All pre-compile time macros are correctly generated into WdgM_Cfg.h
  VP 21 (WdgM.ASR40.WDGM104,WdgM.ASR40.WDGM352_Conf):
     The pre-compile time configuration parameter
     WdgMDefensiveBehavior is correctly generated
  VP 22 (WdgM.ASR40.WDGM104,WdgM.ASR40.WDGM338_Conf):
     The pre-compile time configuration parameter
     WdgMDemStoppedSupervisionReport is correctly generated
  VP 23 (WdgM.ASR40.WDGM104,WdgM.ASR40.WDGM047, WdgM.ASR40.WDGM301_Conf):
     The pre-compile time configuration parameter
     WdgMDevErrorDetect is correctly generated
  VP 24 (WdgM.ASR40.WDGM104,WdgM.ASR40.WDGM339_Conf):
     The pre-compile time configuration parameter
     WdgMImmediateReset is correctly generated
  VP 25 (WdgM.ASR40.WDGM104,WdgM.ASR40.WDGM340_Conf):
     The pre-compile time configuration parameter
     WdgMOffModeEnabled is correctly generated
  VP 26 (WdgM.ASR40.WDGM104,WdgM.ASR40.WDGM302_Conf):
     The pre-compile time configuration parameter
     WdgMVersionInfoApi is correctly generated
  VP 27 (WdgM.ASR40.WDGM104,WdgM.ASR40.WDGM358_Conf):
     The pre-compile time configuration parameter
     WdgMCallerIds are correctly generated

PART 3: All DET error macros are correctly generated.
  VP 30 (WdgM.ASR40.SWS_WdgM_00004.1):
        Macro WDGM_E_NO_INIT is generated with value 0x10
  VP 31 (WdgM.ASR40.SWS_WdgM_00004.3):
        Macro WDGM_E_PARAM_MODE is generated with value 0x12
  VP 32 (WdgM.ASR40.SWS_WdgM_00004.4):
        Macro WDGM_E_PARAM_SEID is generated with value 0x13
  VP 33 (WdgM.ASR40.SWS_WdgM_00004.5):
        Macro WDGM_E_INV_POINTER is generated with value 0x14
  VP 34 (WdgM.ASR40.SWS_WdgM_00004.6):
        Macro WDGM_E_DISABLE_NOT_ALLOWED is generated with value 0x15
  VP 35 (WdgM.ASR40.SWS_WdgM_00004.7):
        Macro WDGM_E_CPID is generated with value 0x16
  VP 36 (WdgM.ASR40.SWS_WdgM_00004.8):
        Macro WDGM_E_DEPRECATED is generated with value 0x17
  VP 37 (WdgM.ASR40.SWS_WdgM_00004.10):
        Macro WDGM_E_SEDEACTIVATED is generated with value 0x19
  VP 42 (WDGM.EB.TIMEPM.WDGM020449):
        the macro WDGM_E_NOT_AUTHORIZED is generated with value 0xF1

PART 4: All EB-specific pre-compile time macros are correctly generated.
  VP 51 (WdgM.EB.ReportToDem.Supervision.1,
         WdgM.EB.ReportToDem.Supervision.2,
         WdgM.EB.ReportToDem.Supervision.5):
         For permutation p2:
           a macro WDGM_EB_E_DEMTODET_SUPERVISION is defined
           with the value specified in WdgMSupervisionDemDetErrId
  VP 52 (WdgM.EB.ReportToDem.SetMode.1,
         WdgM.EB.ReportToDem.SetMode.2,
         WdgM.EB.ReportToDem.SetMode.5):
         For permutation p2:
           a macro WDGM_EB_E_DEMTODET_SET_MODE is defined
           with the value specified in WdgMSetModeDemDetErrId
  VP 53 (WdgM.EB.ReportToDem.ImproperCaller.1,
         WdgM.EB.ReportToDem.ImproperCaller.2,
         WdgM.EB.ReportToDem.ImproperCaller.5):
         For permutation p2:
           a macro WDGM_EB_E_DEMTODET_IMPROPER_CALLER is defined
           with the value specified in WdgMImproperCallerDemDetErrId
  VP 54 (WdgM.EB.WdgMRteUsage_Conf):
        WDGM_EB_INCLUDE_RTE is generated with STD_OFF
  VP 55 (WdgM.EB.ReportToDem.MFTimingViolation.1,
         WdgM.EB.ReportToDem.MFTimingViolation.2,
         WdgM.EB.ReportToDem.MFTimingViolation.5):
         For permutation p2:
           a macro WDGM_EB_E_DEMTODET_MF_TIMINGVIOLATION is defined
           with the value specified in WdgMMFTimingViolationCallerDemDetErrId
  VP 56 (WdgM.EB.ReportToDem.DataCorruption.1,
         WdgM.EB.ReportToDem.DataCorruption.2,
         WdgM.EB.ReportToDem.DataCorruption.5):
         For permutation p2:
           a macro WDGM_EB_E_DEMTODET_DATA_CORRUPTION is defined
           with the value specified in WdgMDataCorruptionCallerDemDetErrId
  VP 57 (WdgM.EB.ReportToDem.SlaveSwitchMode.1,
         WdgM.EB.ReportToDem.SlaveSwitchMode.2,
         WdgM.EB.ReportToDem.SlaveSwitchMode.5):
         For permutation p2:
           a macro WDGM_EB_E_SLAVE_FAILED_CHANGEMODE is defined
           with the value specified in PM_WdgMMasterWaitSlaveModeSwitchDemDetErrId

PART 5:
  VP 60 (WdgM.EB.ReportToDem.Supervision.3,
         WdgM.EB.ReportToDem.SetMode.3,
         WdgM.EB.ReportToDem.ImproperCaller.3,
         WdgM.EB.ReportToDem.MFTimingViolation.3,
         WdgM.EB.ReportToDem.DataCorruption.3
         WdgM.EB.ReportToDem.SlaveSwitchMode.3)
        Generator reports no errors.
        Note: This is implicitly tested via the ts5 environment,
        because if the generator reports an error, then this complete
        compile test is classified as failed.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020431</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>701</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020436</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>706</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020425</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00263</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00265</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00352</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00338</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00339</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00340</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00302</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00358</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020449</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>674</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.Supervision.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.Supervision.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.Supervision.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>461</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.ImproperCaller.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.ImproperCaller.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.ImproperCaller.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfTimingViolation.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfTimingViolation.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfTimingViolation.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SlaveSwitchMode.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SlaveSwitchMode.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SlaveSwitchMode.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WdgMRteUsage_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020143_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>614</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.Supervision.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>460</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.ImproperCaller.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfTimingViolation.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SlaveSwitchMode.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1706</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_32034_multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Compile/IN/WdgM_ComTest_01_multicore/source/application/WdgM_ComTest_Common.c.m4</sourcefile>
      <sourceline>268</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

This compile test checks several issues which are subsumed
herein in order to reduce the test execution time.

PART 1:
Test that the translation of the WdgM Module containing
all WdgM API calls works without any errors for the
permutations stated below.

PART 2:
Test the correct generation of all pre-compile time configuration
parameters for the permutations stated below.

PART 3:
Test the correct generation of all pre-compile time macros
regarding DET errors are correctly generated.

PART 4:
Test the correct generation of all EB specific pre-compile time configuration
parameters for the permutations stated below.

PART 5:
Test that the range of the configuration parameters
WdgMSupervisionDemDetErrId, WdgMSetModeDemDetErrId, and WdgMImproperCallerDemDetErrId
are only checked if the parameter is enabled (That is,
WdgMSupervisionReportToDem, WdgMSetModeReportToDem, and WdgMImproperCallerReportToDem
must be set to DET, respectively).

   Parameter / Permutation               |    p0   |    p1   |    p2   |    p3   |
----------------------------------------------------------------------------------
WdgMDevErrorDetect                       | false   | false   | true    | true    |
WdgMSupervisionReportToDem               | DEM     | DISABLE | DET     | DEM     |
WdgMSetModeReportToDem                   | DEM     | DISABLE | DET     | DEM     |
WdgMImproperCallerReportToDem            | DEM     | DISABLE | DET     | DEM     |
WdgMFTimingViolationReportToDem          | DEM     | DISABLE | DET     | DEM     |
WdgMDataCorruptionReportToDem            | DEM     | DISABLE | DET     | DEM     |
WdgMSatelliteAlivenessReportToDem        | DEM     | DISABLE | DET     | DISABLE |
WdgMMasterWaitSlaveModeSwitchFailure     | DEM     | DISABLE | DET     | DISABLE |
WdgMVersionInfoApi                       | true    | false   | true    | true    |
WdgMDemStoppedSupervisionReport          | true    | false   | true    | true    |
WdgMImmediateReset                       | false   | true    | false   | false   |
WdgMOffModeEnabled                       | true    | true    | true    | false   |
WdgMRteUsage                             | false   | false   | false   | false   |
WdgMDefensiveBehavior                    | true    | true    | false   | true    |
WdgMCallerIds                            | true    | false   | true    | true    |
WdgM_GetFirstExpiredSEID                 | true    | true    | true    | false   |
WdgMSatelliteAlivenessCallout            | true    | true    | true    | false   |
WdgMSatelliteAlivenessCoreIdDisable      | false   | false   | true    | false   |
WdgMSupervisionDemDetErrId               | 30      | 30      | 30      | 30      |
WdgMSetModeDemDetErrId                   | 31      | 31      | 31      | 31      |
WdgMImproperCallerDemDetErrId            | 32      | 32      | 32      | 32      |
WdgMMFTimingViolationDemDetErrId         | 33      | 33      | 33      | 33      |
WdgMDataCorruptionDemDetErrId            | 34      | 34      | 34      | 34      |
WdgMSatelliteAlivenessDemDetErrId        | 35      | 35      | 35      | 35      |
WdgMMasterWaitSlaveModeSwitchDemDetErrId | 36      | 36      | 36      | 36      |


Test Object: None.
Test Precondition: 

Only for PART 5:
  * Successful execution of test-case: TS_WDGM_GENTEST_00_NegativeTests
  * WdgM Configuration:
    - WdgMSupervisionReportToDem is set to DET
    - WdgMSetModeReportToDem is set to DET
    - WdgMImproperCallerReportToDem is set to DET
    - WdgMMFTimingViolationReportToDem is set to DET
    - WdgMDataCorruptionReportToDem is set to DET
    - WdgMSupervisionDemDetErrId has a value greater than or equal to 30
    - WdgMSetModeDemDetErrId has a value greater than or equal to 30
    - WdgMImproperCallerDemDetErrId has a value greater than or equal to 30
    - WdgMMFTimingViolationDemDetErrId has a value greater than or equal to 30
    - WdgMDataCorruptionDemDetErrId has a value greater than or equal to 30
    Note: The aforementioned preconditions regarding the WdgM Config
          are part of permutation p2.


Test Execution: 

For all stated permutations:
PART 1: Successful compilation of WdgM containing all WdgM API calls.
  VP 01 (WdgM.ASR40.WDGM025, WDGM.EB.TIMEPM.WDGM020431):
     WdgM successfully compiles with the call of WdgM_Init()
  VP 02 (WdgM.ASR40.WDGM025, WDGM.EB.TIMEPM.WDGM020436):
     WdgM successfully compiles with the call WdgM_DeInit(()
  VP 03 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM153):
     WdgM successfully compiles with the call of WdgM_GetVersionInfo()
  VP 04 (WdgM.ASR40.WDGM025, WDGM.EB.TIMEPM.WDGM020425):
     WdgM successfully compiles with the call of WdgM_SetMode()
  VP 05 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM168):
     WdgM successfully compiles with the call of WdgM_GetMode()
  VP 06 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM263):
     WdgM successfully compiles with the call of WdgM_CheckpointReached()
  VP 07 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM155):
     WdgM successfully compiles with the call of WdgM_UpdateAliveCounter()
  VP 08 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM169):
     WdgM successfully compiles with the call of WdgM_GetLocalStatus()
  VP 09 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM175):
     WdgM successfully compiles with the call of WdgM_GetGlobalStatus()
  VP 10 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM264):
     WdgM successfully compiles with the call of WdgM_PerformReset()
  VP 11 (WdgM.ASR40.WDGM025, WdgM.SWS_WdgM_00346, WDGM.EB.TIMEPM.WDGM020128_Conf):
     WdgM successfully compiles with the call of WdgM_GetFirstExpiredSEID()
  VP 12 (WdgM.ASR40.WDGM025, WdgM.SWS_WdgM_00159):
     WdgM successfully compiles with the call of WdgM_MainFunction()

PART 2: All pre-compile time macros are correctly generated into WdgM_Cfg.h
  VP 20 (WDGM.EB.TIMEPM.WDGM020134_Conf):
     The pre-compile time configuration parameter
     WdgMSatelliteAlivenessCoreIdDisable is correctly generated
  VP 21 (WdgM.ASR40.WDGM104,WdgM.ASR40.WDGM352_Conf):
     The pre-compile time configuration parameter
     WdgMDefensiveBehavior is correctly generated
  VP 22 (WdgM.ASR40.WDGM104,WdgM.ASR40.WDGM338_Conf):
     The pre-compile time configuration parameter
     WdgMDemStoppedSupervisionReport is correctly generated
  VP 23 (WdgM.ASR40.WDGM104,WdgM.ASR40.WDGM047, WdgM.ASR40.WDGM301_Conf):
     The pre-compile time configuration parameter
     WdgMDevErrorDetect is correctly generated
  VP 24 (WdgM.ASR40.WDGM104,WdgM.ASR40.WDGM339_Conf):
     The pre-compile time configuration parameter
     WdgMImmediateReset is correctly generated
  VP 25 (WdgM.ASR40.WDGM104,WdgM.ASR40.WDGM340_Conf):
     The pre-compile time configuration parameter
     WdgMOffModeEnabled is correctly generated
  VP 26 (WdgM.ASR40.WDGM104,WdgM.ASR40.WDGM302_Conf):
     The pre-compile time configuration parameter
     WdgMVersionInfoApi is correctly generated
  VP 27 (WdgM.ASR40.WDGM104,WdgM.ASR40.WDGM358_Conf):
     The pre-compile time configuration parameter
     WdgMCallerIds are correctly generated
  VP 28 (WDGM.EB.TIMEPM.WDGM020128_Conf):
     The pre-compile time configuration parameter
     WdgM_GetFirstExpiredSEID are correctly generated
  VP 29 (WDGM.EB.TIMEPM.WDGM020131_Conf):
     The pre-compile time configuration parameter
     WdgMSatelliteAlivenessCallout is correctly generated  

PART 3: All DET error macros are correctly generated.
  VP 30 (WdgM.ASR40.SWS_WdgM_00004.1):
        Macro WDGM_E_NO_INIT is generated with value 0x10
  VP 31 (WdgM.ASR40.SWS_WdgM_00004.3):
        Macro WDGM_E_PARAM_MODE is generated with value 0x12
  VP 32 (WdgM.ASR40.SWS_WdgM_00004.4):
        Macro WDGM_E_PARAM_SEID is generated with value 0x13
  VP 33 (WdgM.ASR40.SWS_WdgM_00004.5):
        Macro WDGM_E_INV_POINTER is generated with value 0x14
  VP 34 (WdgM.ASR40.SWS_WdgM_00004.6):
        Macro WDGM_E_DISABLE_NOT_ALLOWED is generated with value 0x15
  VP 35 (WdgM.ASR40.SWS_WdgM_00004.7):
        Macro WDGM_E_CPID is generated with value 0x16
  VP 36 (WdgM.ASR40.SWS_WdgM_00004.8):
        Macro WDGM_E_DEPRECATED is generated with value 0x17
  VP 37 (WdgM.ASR40.SWS_WdgM_00004.10):
        Macro WDGM_E_SEDEACTIVATED is generated with value 0x19
  VP 42 (WDGM.EB.TIMEPM.WDGM020449):
        the macro WDGM_E_NOT_AUTHORIZED is generated with value 0xF1

PART 4: All EB-specific pre-compile time macros are correctly generated.
  VP 51 (WdgM.EB.ReportToDem.Supervision.1,
         WdgM.EB.ReportToDem.Supervision.2,
         WdgM.EB.ReportToDem.Supervision.5):
         For permutation p2:
           a macro WDGM_EB_E_DEMTODET_SUPERVISION is defined
           with the value specified in WdgMSupervisionDemDetErrId
  VP 52 (WdgM.EB.ReportToDem.SetMode.1,
         WdgM.EB.ReportToDem.SetMode.2,
         WdgM.EB.ReportToDem.SetMode.5):
         For permutation p2:
           a macro WDGM_EB_E_DEMTODET_SET_MODE is defined
           with the value specified in WdgMSetModeDemDetErrId
  VP 53 (WdgM.EB.ReportToDem.ImproperCaller.1,
         WdgM.EB.ReportToDem.ImproperCaller.2,
         WdgM.EB.ReportToDem.ImproperCaller.5):
         For permutation p2:
           a macro WDGM_EB_E_DEMTODET_IMPROPER_CALLER is defined
           with the value specified in WdgMImproperCallerDemDetErrId
  VP 54 (WdgM.EB.WdgMRteUsage_Conf):
        WDGM_EB_INCLUDE_RTE is generated with STD_OFF
  VP 55 (WdgM.EB.ReportToDem.MFTimingViolation.1,
         WdgM.EB.ReportToDem.MFTimingViolation.2,
         WdgM.EB.ReportToDem.MFTimingViolation.5):
         For permutation p2:
           a macro WDGM_EB_E_DEMTODET_MF_TIMINGVIOLATION is defined
           with the value specified in WdgMMFTimingViolationCallerDemDetErrId
  VP 56 (WdgM.EB.ReportToDem.DataCorruption.1,
         WdgM.EB.ReportToDem.DataCorruption.2,
         WdgM.EB.ReportToDem.DataCorruption.5):
         For permutation p2:
           a macro WDGM_EB_E_DEMTODET_DATA_CORRUPTION is defined
           with the value specified in WdgMDataCorruptionCallerDemDetErrId
  VP 57 (WdgM.EB.ReportToDem.MfSatelliteFailure.1,
         WdgM.EB.ReportToDem.MfSatelliteFailure.2,
         WdgM.EB.ReportToDem.MfSatelliteFailure.5):
         For permutation p2:
           a macro WDGM_EB_E_DEMTODET_SATELLITE_ALIVENESS_FAILURE is defined
           with the value specified in PM_WdgMSatelliteAlivenessDemDetErrId
  VP 58 (WdgM.EB.ReportToDem.SlaveSwitchMode.1,
         WdgM.EB.ReportToDem.SlaveSwitchMode.2,
         WdgM.EB.ReportToDem.SlaveSwitchMode.5):
         For permutation p2:
           a macro WDGM_EB_E_SLAVE_FAILED_CHANGEMODE is defined
           with the value specified in PM_WdgMMasterWaitSlaveModeSwitchDemDetErrId

PART 5:
  VP 60 (WdgM.EB.ReportToDem.Supervision.3,
         WdgM.EB.ReportToDem.SetMode.3,
         WdgM.EB.ReportToDem.ImproperCaller.3,
         WdgM.EB.ReportToDem.MFTimingViolation.3,
         WdgM.EB.ReportToDem.DataCorruption.3
         WdgM.EB.ReportToDem.MfSatelliteFailure.3
         WdgM.EB.ReportToDem.SlaveSwitchMode.3)
        Generator reports no errors.
        Note: This is implicitly tested via the ts5 environment,
        because if the generator reports an error, then this complete
        compile test is classified as failed.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020431</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>701</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020436</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>706</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020425</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00263</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00265</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00352</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00338</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00339</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00340</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00302</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00358</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020128_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>617</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020131_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>615</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020134_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>616</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020449</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>674</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.Supervision.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.Supervision.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.Supervision.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>461</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.ImproperCaller.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.ImproperCaller.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.ImproperCaller.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfTimingViolation.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfTimingViolation.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfTimingViolation.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfSatelliteFailure.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfSatelliteFailure.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfSatelliteFailure.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SlaveSwitchMode.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SlaveSwitchMode.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SlaveSwitchMode.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WdgMRteUsage_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020143_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>614</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.Supervision.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>460</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.ImproperCaller.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfTimingViolation.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfSatelliteFailure.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SlaveSwitchMode.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1707</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_SYMBOLICNAMEVALUES</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Compile/IN/WdgM_ComTest_02_SymbNameValues/source/application/WdgM_ComTest_02_SymbNameValues.c</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Check that macros are generated for configuration parameters which are specified as
  SYMBOLICNAMEVALUES (WdgMWatchdogName, WdgMModeId, WdgMSupervisedEntityId, WdgMCheckpointId).


Test Object: None.
Test Precondition: None.
Test Execution: 

TS_WDGM_SymbNameValues:
  01: The module configuration generator produces the BSWMD containing the information
    on the required exclusive areas.
  02: This information is then used by the RTE generator to create the required SchM API
    for these exclusive areas.
  03: VP: This implicitly verifies that the BSWMD is syntactically and semantically correct.
    PduR's static code makes use of this API (and the respective defines) thus causing
    compile/link errors if the BSWMD does not contain the correct information.
  04: VP: Symbol WdgMConf_WdgMMode_WdgMMode_1 defined as 0 and
    symbols WdgM_WdgMMode_1 WdgMMode_1 not defined
    (suffix name generated from attribute name of parameter WdgMModeId
     of container item WdgMMode)
  05: VP: Symbol WdgMConf_WdgMMode_WdgMMode_0 defined as 1 and
    symbols WdgM_WdgMMode_0, WdgMMode_0 not defined
    (suffix name generated from attribute name of parameter WdgMModeId
     of container item WdgMMode)
  06: VP: Symbol WdgMConf_WdgMMode_WdgMMode_2 defined as 2 and
    symbols WdgM_WdgMMode_2, WdgMMode_2 not defined
    (suffix name generated from attribute name of parameter WdgMModeId
     of container item WdgMMode)
  07: VP: Symbol WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0 defined as 0 and
    symbols WdgM_WdgMSupervisedEntity_0, WdgMSupervisedEntity_0 not defined
    (suffix name generated from attribute name of parameter WdgMSupervisedEntityId
    of container item WdgMSupervisedEntity)
  08: VP: Symbol WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_1 defined as 1 and
    symbols WdgM_WdgMSupervisedEntity_1, WdgMSupervisedEntity_1 not defined
    (suffix name generated from attribute name of parameter WdgMSupervisedEntityId
    of container item WdgMSupervisedEntity)
  09: VP: Symbol WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_2 defined as 2 and
    symbols WdgM_WdgMSupervisedEntity_2, WdgMSupervisedEntity_2 not defined
    (suffix name generated from attribute name of parameter WdgMSupervisedEntityId
    of container item WdgMSupervisedEntity)
  10: VP: Symbol WdgMConf_WdgMCheckpoint_CP0_1 defined as 0 and
    symbols WdgM_CP0_1, CP0_1 not defined
    (suffix name generated from attribute name of parameter WdgMCheckpointId
     of container item WdgMCheckpoint)
  11: VP: Symbol WdgMConf_WdgMCheckpoint_CP1_1 defined as 1 and
    symbols WdgM_CP1_1, CP1_1 not defined
    (suffix name generated from attribute name of parameter WdgMCheckpointId
     of container item WdgMCheckpoint)


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00348</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00307</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00304</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1708</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_Bswmd</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Compile/IN/WdgM_ComTest_03_Bswmd/source/application/WdgM_ComTest_03_Bswmd.c</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

   This test checks that the WdgM module's generator generates a
   syntactically and semantically valid basic software module
   description (BSWMD) when the generator mode "generate_swcd" is invoked.
   It further tests that
     - the BswmD contains information on the scheduled MainFunctions
     - the BswmD contains information on the used memory abstraction
       with respect to configuration parameter WdgMPartitioningEnabled
   by comparison with a golden reference file.
   generated BSWMD.


This test is executed with the following configuration permutations:

Permutation table:
-------------------------------------------------------------------
Parameter / Permutation       |    p0  |   p1   |   p2   |   p3   |
===================================================================
Param OsNumberOfCoresValue    |    1   |    1   |    3   |    3   |
...................................................................
Param WdgMPartitioningEnabled | false  | true   | true   | false  |
-------------------------------------------------------------------


Test Object: None.
Test Precondition: 

  WdgM Config:
  - Supervision is enabled

  Folder 'reference' provides the following
  expected generated files for this test for comparison:
  - Permutations p0: (WdgM.ASR40.SWS_WdgM_00267.2, WDGM.EB.BSWMDGeneration_3, WDGM.EB.BSWMDGeneration_4)
       WdgM_Bswmd.arxml: see A)
  - Permutations p1: (WDGM.EB.TIMEPM.WDGM020118_Conf, WDGM.EB.TIMEPM.WDGM020305)
       WdgM_Bswmd.arxml: see A) and contains memory abstraction for VAR_CLEARED_SHARED_UNSPECIFIED
  - Permutations p2: (WDGM.EB.TIMEPM.WDGM020118_Conf, WDGM.EB.TIMEPM.WDGM020305)
       WdgM_Bswmd.arxml: see A) and contains memory abstraction for VAR_CLEARED_SHARED_UNSPECIFIED
  - Permutations p3: (WdgM.ASR40.SWS_WdgM_00267.2, WDGM.EB.BSWMDGeneration_3, WDGM.EB.BSWMDGeneration_4)
       WdgM_Bswmd.arxml: see A) 

     A) contains information regarding main function schedule period,
        memory abstraction, and common published parameters
        as required by BSW00402 based on parameter configuration
        stated in the Permutation table.


Test Execution: 

Ts5 build environment steps:
  01: The module configuration generator produces the BSWMD containing the information
    on the required exclusive areas.
  02: VP (WDGM.EB.BSWMDGeneration_2, WDGM.EB.BSWMDGeneration_3, WDGM.EB.BSWMDGeneration_4,
          WdgM.ASR40.SWS_WdgM_00267.2)
    Generated WdgM_Bswmd.arxml file is generated correctly and equals the provided reference file
  03: This information is then used by the RTE generator to create the required resources
  04: VP: This implicitly verifies that the BSWMD is syntactically and semantically correct.
    WdgM's static code makes use of this API (and the respective defines) thus causing
    compile/link errors if the BSWMD does not contain the correct information.


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.BSWMDGeneration_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.BSWMDGeneration_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.BSWMDGeneration_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00267.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020118_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020305</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>633</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1709</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_Compile_LogicalSupervision</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Compile/IN/WdgM_ComTest_04_LogicalSupervision/source/application/WdgM_ComTest_04_LogicalSupervision.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Test that all WdgM API calls work without any errors when using a configuration
that contains Logical Supervision.

Test Object: None.
Test Precondition: None.
Test Execution: 
Tests the successful compilation of WdgM with a Logical Supervision configuration
using the following WdgM API calls:
  VP 01 (WdgM.ASR40.WDGM025, WDGM.EB.TIMEPM.WDGM020431):
     WdgM successfully compiles with the call of WdgM_Init()
  VP 02 (WdgM.ASR40.WDGM025, WDGM.EB.TIMEPM.WDGM020436):
     WdgM successfully compiles with the call WdgM_DeInit(()
  VP 03 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM153):
     WdgM successfully compiles with the call of WdgM_GetVersionInfo()
  VP 04 (WdgM.ASR40.WDGM025, WDGM.EB.TIMEPM.WDGM020425):
     WdgM successfully compiles with the call of WdgM_SetMode()
  VP 05 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM168):
     WdgM successfully compiles with the call of WdgM_GetMode()
  VP 06 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM263):
     WdgM successfully compiles with the call of WdgM_CheckpointReached()
  VP 07 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM155):
     WdgM successfully compiles with the call of WdgM_UpdateAliveCounter()
  VP 08 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM169):
     WdgM successfully compiles with the call of WdgM_GetLocalStatus()
  VP 09 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM175):
     WdgM successfully compiles with the call of WdgM_GetGlobalStatus()
  VP 10 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM264):
     WdgM successfully compiles with the call of WdgM_PerformReset()
  VP 11 (WdgM.ASR40.WDGM025, WdgM.SWS_WdgM_00346):
     WdgM successfully compiles with the call of WdgM_GetFirstExpiredSEID()
  VP 12 (WdgM.ASR40.WDGM025, WdgM.SWS_WdgM_00159):
     WdgM successfully compiles with the call of WdgM_MainFunction()

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020431</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>701</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020436</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>706</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020425</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00263</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00265</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1710</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_Compile_DeadlineSupervision</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Compile/IN/WdgM_ComTest_05_DeadlineSupervision/source/application/WdgM_ComTest_05_DeadlineSupervision.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Test that all WdgM API calls work without any errors when using a configuration
that contains Deadline Monitoring.

Test Object: None.
Test Precondition: None.
Test Execution: 
Tests the successful compilation of WdgM with a Logical Supervision configuration
using the following WdgM API calls:
  VP 01 (WdgM.ASR40.WDGM025, WDGM.EB.TIMEPM.WDGM020431):
     WdgM successfully compiles with the call of WdgM_Init()
  VP 02 (WdgM.ASR40.WDGM025, WDGM.EB.TIMEPM.WDGM020436):
     WdgM successfully compiles with the call WdgM_DeInit(()
  VP 03 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM153):
     WdgM successfully compiles with the call of WdgM_GetVersionInfo()
  VP 04 (WdgM.ASR40.WDGM025, WDGM.EB.TIMEPM.WDGM020425):
     WdgM successfully compiles with the call of WdgM_SetMode()
  VP 05 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM168):
     WdgM successfully compiles with the call of WdgM_GetMode()
  VP 06 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM263):
     WdgM successfully compiles with the call of WdgM_CheckpointReached()
  VP 07 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM155):
     WdgM successfully compiles with the call of WdgM_UpdateAliveCounter()
  VP 08 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM169):
     WdgM successfully compiles with the call of WdgM_GetLocalStatus()
  VP 09 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM175):
     WdgM successfully compiles with the call of WdgM_GetGlobalStatus()
  VP 10 (WdgM.ASR40.WDGM025, WdgM.ASR40.WDGM264):
     WdgM successfully compiles with the call of WdgM_PerformReset()
  VP 11 (WdgM.ASR40.WDGM025, WdgM.SWS_WdgM_00346):
     WdgM successfully compiles with the call of WdgM_GetFirstExpiredSEID()
  VP 12 (WdgM.ASR40.WDGM025, WdgM.SWS_WdgM_00159):
     WdgM successfully compiles with the call of WdgM_MainFunction()

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020431</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>701</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020436</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>706</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020425</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00263</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00265</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1711</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_Compile_0801_CompatibilityMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Compile/IN/WdgM_ComTest_08_CompatibilityMode/source/application/WdgM_ComTest_08_CompatibilityMode.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  - Test that if parameter WdgMASRCompatibilityMode is set to AUTOSAR_43
    then WdgM provides the BSW API WdgM_SetMode without the CallerID argument.
  - Test corresponding ASR40 Service Component Description is generated
    in default generator Mode

Test Object: None.
Test Precondition: None.
Test Execution: 
  VP 01 (WDGM.EB.ASR43.WDGM404):
     - The WdgM generates the ASR401 Service Component Description files
       WdgM_interface.arxml, WdgM_internal.arxml, and WdgM_BswMd.arxml
     - WdgM successfully compiles when calling WdgM_SetMode() without the CallerID argument if the
       parameter WdgMASRCompatibilityMode is set to AUTOSAR_43


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1712</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_Compile_09_ProvidedFunctions</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Compile/IN/WdgM_ComTest_09_ProvidedFunctions/source/application/WdgM_09_ProvidedFunctions.c</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Test that the WDGM APIs WdgM_SetMode, WdgM_Init, and WdgM_DeInit are not available if callouts
are configured with empty strings for the related redirection APIs.
The used testing method is: not applicable here.


Test Object: None.
Test Precondition: 

 - The header file WdgM.h is included within this compilation unit
 - The configuration parameter WdgMGetExpectedWdgMModeCallout is enabled and not empty.
 - The configuration parameter WdgMSetModeRedirectionCallout is empty.
 - The configuration parameter WdgMGetExpectedInitSateCallout is enabled and not empty.
 - The configuration parameter WdgMInitRedirectionCallout is empty.
 - The configuration parameter WdgMDeInitRedirectionCallout is empty.


Test Execution: 
 01: Declare and define the function WdgM_SetMode() within this compilation unit.
 02: VP (WDGM.EB.TIMEPM.WDGM020401)
     WdgM.h does not provide WdgM_SetMode().
     Note: Otherwise, this compilation unit would not compile due to redundant definition of
     WdgM_SetMode().
 03: Declare and define the function WdgM_Init() within this compilation unit.
 04: VP (WDGM.EB.TIMEPM.WDGM020405)
     WdgM.h does not provide WdgM_Init().
     Note: Otherwise, this compilation unit would not compile due to redundant definition of
     WdgM_Init().
 05: Declare and define the function WdgM_DeInit() within this compilation unit.
 06: VP (WDGM.EB.TIMEPM.WDGM020407)
     WdgM.h does not provide WdgM_DeInit().
     Note: Otherwise, this compilation unit would not compile due to redundant definition of
     WdgM_DeInit().


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020405</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020407</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>653</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1713</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_TimE_1001_PartitionSupport</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Compile/IN/WdgM_ComTest_10_PartitionSupport/source/application/WdgM_ImpTest_10_PartitionSupport.c.m4</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that allocation of variables is correctly performed to a
  shared memory section if the configuration parameter WdgMPartitioningEnabled
  is enabled.

  This test is executed with the following configuration permutations:

  Permutation table:
  ---------------------------------------------------------------
  Parameter / Permutation       | p0    |  p1   | p3    | p4    |
  ===============================================================
  WdgMPartitioningEnabled       | false | true  | false | true  |
  WdgMNumberOfCores             |   1   |   1   |   2   |   2   |
  ---------------------------------------------------------------


Test Object: None.
Test Precondition: 

Due to WDGM.EB.DesignDecision.InternalVariable*, it is assumed that
all runtime data of the WdgM are allocated to variables with following pattern:
- VAR(WdgM_EB_CPDataType,WDGM_VAR) WdgM_EB_CPData_WdgMSupervisedEntity_*
- VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_ExternalGraphData[*]
- VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_InternalGraphData[*]
- VAR(WdgM_EB_DMDataType,WDGM_VAR) WdgM_EB_DMData[*]

  Folder 'reference' provides
      - checkWDGM020304.1.txt: showing that only file WdgM_BSW_Lcfg.c makes use
           of the Memory Abstraction WDGM_[START|STOP]_SEC_VAR_CLEARED_SHARED_UNSPECIFIED or
           showing that only file WdgM_BSW_Lcfg.c makes use of the Memory Abstraction 
           WDGM_[START|STOP]_SEC_VAR_CLEARED_SHARED_MC_UNSPECIFIED
      - checkWDGM020304.2.txt: showing that the number of memory sections using
                               the WDGM_[START|STOP]_SEC_VAR_CLEARED_SHARED_UNSPECIFIED or
                               WDGM_[START|STOP]_SEC_VAR_CLEARED_SHARED_MC_UNSPECIFIED
                               among all other files except WdgM_BSW_Lcfg.c is 0
      - checkWDGM020304.3.txt: showing that the memory abstraction using the shared
                               memory depends on the pre-compile time configuration
                               switch WDGM_EB_PARTITIONING_ENABLED as follows:
            #if (WDGM_EB_PARTITIONING_ENABLED == STD_ON)
            #define WDGM_START_SEC_VAR_CLEARED_SHARED_UNSPECIFIED
            #include &amp;lt;WdgM_MemMap.h&amp;gt;
	    #else
            #define WDGM_START_SEC_VAR_CLEARED_UNSPECIFIED
            #include &amp;lt;WdgM_MemMap.h&amp;gt;
            #endif
            --
            #if (WDGM_EB_PARTITIONING_ENABLED == STD_ON)
            #define WDGM_STOP_SEC_VAR_CLEARED_SHARED_UNSPECIFIED
            #include &amp;lt;WdgM_MemMap.h&amp;gt;
	    #else
            #define WDGM_STOP_SEC_VAR_CLEARED_UNSPECIFIED
            #include &amp;lt;WdgM_MemMap.h&amp;gt;
            #endif
      - checkWDGM020304.4.txt: showing that the internal variables that shall belong
         to the shared memory are as follows:
           3 Occurrences of: VAR(WdgM_EB_CPDataType,WDGM_VAR) WdgM_EB_CPData_WdgMSupervisedEntity_*
           2 Occurrences of: VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_InternalGraphData[*]
           2 Occurrences of: VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_ExternalGraphData[*]
           2 Occurrences of: VAR(WdgM_EB_DMDataType,WDGM_VAR) WdgM_EB_DMData[*]
      - checkWDGM020304.5.txt: showing that there are no other variables defined inside the partitions support shared
          memory section, apart from the ones bellow:
            - VAR(WdgM_EB_CPDataType,WDGM_VAR) WdgM_EB_CPData_WdgMSupervisedEntity_*
            - VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_InternalGraphData[*]
            - VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_ExternalGraphData[*]
            - VAR(WdgM_EB_DMDataType,WDGM_VAR) WdgM_EB_DMData[*]
              VAR(WdgM_EB_ExtGraphDataSeqArrayType, WDGM_VAR) WdgM_EB_ExtGraphDataSeq_*[
      - checkWDGM020304.6.txt: showing that the following internal variables are
         never defined outside the shared memory section:
            - VAR(WdgM_EB_CPDataType,WDGM_VAR) WdgM_EB_CPData_WdgMSupervisedEntity_*
            - VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_InternalGraphData[*]
            - VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_ExternalGraphData[*]
            - VAR(WdgM_EB_DMDataType,WDGM_VAR) WdgM_EB_DMData[*]
      - checkWDGM020304.7.txt: showing that the following internal variables are
         never defined in any other WdgM source file except WdgM_BSW_Lcfg.h:
            - VAR(WdgM_EB_CPDataType,WDGM_VAR) WdgM_EB_CPData_WdgMSupervisedEntity_*
            - VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_InternalGraphData[*]
            - VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_ExternalGraphData[*]
            - VAR(WdgM_EB_DMDataType,WDGM_VAR) WdgM_EB_DMData[*]

- file WdgM_Cfg.h is included in this test-file in order to provide
  the generated macro definition WDGM_EB_PARTITIONING_ENABLED


Test Execution: 

  01: VP (WDGM.EB.TIMEPM.WDGM020118_Conf)
      The macro WDGM_EB_PARTITIONING_ENABLED is defined
  02: VP (WDGM.EB.TIMEPM.WDGM020118_Conf)
      For Permutation p0:
        The macro WDGM_EB_PARTITIONING_ENABLED has value STD_OFF
      For Permutation p1:
        The macro WDGM_EB_PARTITIONING_ENABLED has value STD_ON

TS5 Test environment steps (see Merged_Makefile.mak):
  03: Extract all occurrences of "SHARED" from WdgM_BSW_Lcfg.c
  04: VP (WDGM.EB.TIMEPM.WDGM020304,WDGM.EB.DesignDecision.InternalVariable*)
      Only WdgM_BSW_Lcfg.c makes use of the SHARED Memory Abstraction.
      (test done by comparison via reference file checkWDGM020304.1.txt)
  05: Extract all occurrences of "SHARED" from all WdgM source files except WdgM_BSW_Lcfg.c
  06: VP (WDGM.EB.TIMEPM.WDGM020304,WDGM.EB.DesignDecision.InternalVariable*)
      Only WdgM_BSW_Lcfg.c makes use of the SHARED Memory Abstraction.
      (test done by comparison via reference file checkWDGM020304.2.txt)
  07: Extract START / STOP memory abstraction definition for the SHARED memory variables
      from WdgM_BSW_Lcfg.c
  08: VP (WDGM.EB.TIMEPM.WDGM020304,WDGM.EB.DesignDecision.InternalVariable*)
      Correct usage of MemMap Section SHARED in WdgM_BSW_Lcfg.c
      (test done by comparison via reference file checkWDGM020304.3.txt)
  09: Extract the following variable definitions from the shared memory section
      from WdgM_BSW_Lcfg.c:
        - VAR(WdgM_EB_CPDataType,WDGM_VAR) WdgM_EB_CPData_WdgMSupervisedEntity_*
        - VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_InternalGraphData[*]
        - VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_ExternalGraphData[*]
        - VAR(WdgM_EB_DMDataType,WDGM_VAR) WdgM_EB_DMData[*]
  10: VP (WDGM.EB.TIMEPM.WDGM020304,WDGM.EB.DesignDecision.InternalVariable*)
       The specified variables are defined inside the
       shared Memory section in WdgM_BSW_Lcfg.c by comparison via counter
       (test done by comparison via reference file checkWDGM020304.4.txt)
  11: Extract all other variable definitions inside the shared memory section
      from WdgM_BSW_Lcfg.c except the following variable definitions:
        - VAR(WdgM_EB_CPDataType,WDGM_VAR) WdgM_EB_CPData_WdgMSupervisedEntity_*
        - VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_InternalGraphData[*]
        - VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_ExternalGraphData[*]
        - VAR(WdgM_EB_DMDataType,WDGM_VAR) WdgM_EB_DMData[*]
  12: VP (WDGM.EB.TIMEPM.WDGM020304,WDGM.EB.DesignDecision.InternalVariable*)
       No other variables than the specified variables are defined
       inside the shared Memory section in WdgM_BSW_Lcfg.c (other variable defined would
       have been terminated with a semicolon)
       (test done by comparison via reference file checkWDGM020304.5.txt)
  13: Extract the following variable definitions outside the shared memory section
      from WdgM_BSW_Lcfg.c:
        - VAR(WdgM_EB_CPDataType,WDGM_VAR) WdgM_EB_CPData_WdgMSupervisedEntity_*
        - VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_InternalGraphData[*]
        - VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_ExternalGraphData[*]
        - VAR(WdgM_EB_DMDataType,WDGM_VAR) WdgM_EB_DMData[*]
  14: VP (WDGM.EB.TIMEPM.WDGM020304,WDGM.EB.DesignDecision.InternalVariable*)
       The specified variables of same pattern are not defined outside
       this Memory section in WdgM_BSW_Lcfg.c
       (test done by comparison via reference file checkWDGM020304.6.txt)
  15: Extract the following variable definitions from all WdgM source files
      except WdgM_BSW_Lcfg.c:
        - VAR(WdgM_EB_CPDataType,WDGM_VAR) WdgM_EB_CPData_WdgMSupervisedEntity_*
        - VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_InternalGraphData[*]
        - VAR(WdgM_EB_GraphDataType,WDGM_VAR) WdgM_EB_ExternalGraphData[*]
        - VAR(WdgM_EB_DMDataType,WDGM_VAR) WdgM_EB_DMData[*]
  16: VP (WDGM.EB.TIMEPM.WDGM020304,WDGM.EB.DesignDecision.InternalVariable*)
       The specified variables are not defined in
       any other c file except WdgM_BSW_Lcfg.c
       (test done by comparison via reference file checkWDGM020304.7.txt)

  17: Include the difference of the comparison of all previous steps


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020118_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020304</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>636</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable1</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1664</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1666</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1667</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1668</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable6</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1669</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable7</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1670</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1714</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_Variables_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Compile/IN/WdgM_ComTest_11_Multicore/source/application/WdgM_ComTest_11_Multicore.c</sourcefile>
      <sourceline>13</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Checks that WdgMSupervisedEntityCoreId and all multicore related macros are 
  generated as configured in the testing configuration as follows:
  - WdgMSupervisedEntity_0 has WdgMSupervisedEntityCoreId set to 0,
  - WdgMSupervisedEntity_1 has WdgMSupervisedEntityCoreId set to 1,
  - WdgMSupervisedEntity_2 has WdgMSupervisedEntityCoreId set to 2,
  in the WdgM_BSW_Lcfg.c file ( the core id of a SE ).
  - WDGM_EB_NUMBER_OF_CORES equals 3,
  - WDGM_EB_MASTER_INSTANCE equals 0,
  - WDGM_EB_MASTER_WAIT_SLAVE_MODE_SWITCH equals 3,
  in the WdgM_Cfg.h file, all of the above are verified by using the diff check.
  It also checks that the WdgM module's generator generates a
   syntactically and semantically valid basic software module
   description (BSWMD) when the generator mode "generate_swcd" is invoked.
      It further tests that
     - the BswmD contains information on the scheduled MainFunctions
     - the BswmD contains information on the used memory abstraction
     by comparison with a golden reference file.
  

Test Object: None.
Test Precondition: None.
Test Execution: 

Compare the WdgM_BSW_Lcfg.c, WdgM_Cfg.h and WdgM_Bswmd.arxml from the reference with the
generated one they should be identical.
     

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.BSWMDGeneration_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.BSWMDGeneration_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.BSWMDGeneration_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020111_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020113_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020119_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020120_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1715</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_SECoreId_Range_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Compile/IN/WdgM_ComTest_12_Multicore/source/application/WdgM_ComTest_12_Multicore.c</sourcefile>
      <sourceline>13</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Checks that configuration files are correctly generated when SupervisedEntities
  are mapped on all cores or on a subset of cores:
    &lt;para&gt;

      |---------------------------------------------------------------------------|
      | WdgM Supervised Entity | Supervised Entity Id | Supervised Entity Core Id |
      |------------------------|----------------------|---------------------------|
      | WdgMSupervisedEntity_0 |           0          |      PM_WdgMSE0CoreId     |
      |------------------------|----------------------|---------------------------|
      | WdgMSupervisedEntity_1 |           1          |      PM_WdgMSE1CoreId     |
      |------------------------|----------------------|---------------------------|
      | WdgMSupervisedEntity_2 |           2          |      PM_WdgMSE2CoreId     |
      |---------------------------------------------------------------------------|

      |---------------------------------------------------------------------------|
      |   WdgM Master Core Id  |                PM_WdgMMasterCoreId               |
      |---------------------------------------------------------------------------|

    &lt;/para&gt;
  - PM_WdgMSE0CoreId, PM_WdgMSE1CoreId and PM_WdgMSE2CoreId are replaced depending
  of permutation with values ranging from 0 to 2 (see permutor_def.m4def file for
  more details about values),
  - WDGM_EB_NUMBER_OF_CORES(WdgMNumberOfCores) equals 3,
  - PM_WdgMMasterCoreId(WdgMMasterCoreId) is replaced depending of permutation with
  values ranging from 0 to 2(see permutor_def.m4def file for more details about values),
  - WDGM_EB_MASTER_WAIT_SLAVE_MODE_SWITCH(WdgMMasterWaitSlaveModeSwitch) equals 3,
  in the WdgM_Cfg.h file, all of the above are verified by using the diff check.


Test Object: None.
Test Precondition: None.
Test Execution: 

Compare the WdgM_BSW_Lcfg.c and WdgM_Cfg.h from the reference with the
generated one they should be identical.
     

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020111_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020113_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020119_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020120_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1716</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_30142</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>444</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that WdgM_GetFirstExpiredSEID() is available before WdgM_Init.

Test Object: None.
Test Precondition: 
WdgM is not initialized

Test Execution: 

All tests are executed with the following permutations
with the following abbreviations:
ChRe ... API WdgM_CheckpointReached() is used for alive supervision
AlSu ... API WdgM_AliveSupervision() is used for alive supervision
   Parameter / Permutation      |    p0   |    p1   |    p2   |    p3   |
------------------------------------------|------------------------------
Used API for Alive Supervision  | ChRe    | ChRe    | AlSu    | AlSu    |
WdgMImmediateReset              | true    | false   | true    | false   |

  01 Call WdgM_GetFirstExpiredSEID()
  02 VP
     no DET nor a DEM function is called


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00348</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1717</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30118</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>503</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
Check that disabling and enabling of more than one Supervised Entity via mode switch is supported.

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1
  WdgMSupervisedEntity_1: Checkpoints: CP1_1
  WdgMSupervisedEntity_2: Checkpoints: CP2_1

Note: Each Supervision Entity has exactly one Checkpoint configured (not more)
This is to test both functions WdgM_CheckpointReached() and
WdgM_UpdateAliveCounter() by replacement strategy.

Modes and configured WdgMTriggers:
                    ConfigName  TriggerCondition  TriggerMode  DeviceIndex
                       |          |                |               |
  WdgMMode_0:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_1:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_2:
  WdgMMode_3:
  WdgMMode_4:
  WdgMMode_5:
  WdgMMode_6:
  WdgMMode_7:      WdgMTrigger_0  100   WDGIF_SLOW_MODE            5
  WdgMMode_8:
  WdgMMode_unused: WdgMTrigger_0  1     WDGIF_OFF_MODE             6
                   WdgMTrigger_1  2     WDGIF_OFF_MODE             7

Modes and configured AliveSupervisions:
  WdgMMode_0 (Initial Mode):
  WdgMMode_1: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1), WdgMSupervisedEntity_1(WdgMConf_WdgMCheckpoint_CP1_1),
  WdgMMode_2: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1)
  WdgMMode_3: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1)
  WdgMMode_4: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1)
  WdgMMode_5: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1)
  WdgMMode_6: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1)
  WdgMMode_7: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1)
  WdgMMode_8: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1)
  WdgMMode_unused:

Modes and configured parameters for WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0:
  WdgMMode_0:
    mode id: 0
  WdgMMode_1:
    mode id: 1
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 1
    WdgMExpiredSupervisionCycleTol 2
  WdgMMode_2:
    mode id: 2
    SupervisionReferenceCycle    3
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 1
    WdgMExpiredSupervisionCycleTol 0
  WdgMMode_3:
    mode id: 3
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     3
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 2
    WdgMExpiredSupervisionCycleTol 5
  WdgMMode_4:
    mode id: 5
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 1
    WdgMExpiredSupervisionCycleTol 0
  WdgMMode_5:
    mode id: 6
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 0
    WdgMExpiredSupervisionCycleTol 5
  WdgMMode_6:
    mode id: 7
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     3
    MaxMargin                    1
    MinMargin                    2
    FailedSupervisionRefCycleTol 1
    WdgMExpiredSupervisionCycleTol 0
  WdgMMode_7:
    mode id: 8
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 1
    WdgMExpiredSupervisionCycleTol 2
  WdgMMode_8:
    mode id: 9
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 0
    WdgMExpiredSupervisionCycleTol 0
  WdgMMode_unused:
    mode id: 4

Configured parameters for WdgMSupervisedEntity_1:
  WdgMMode_1:
    mode id: 1
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 1
    WdgMExpiredSupervisionCycleTol 2


Test Execution: 

  01: Initialize WdgM
  02: VP (WDGM.EB.TIMEPM.WDGM020427)
     all Supervised Entities are deactivated
  03: Call Main function several times
  04: VP (WdgM.ASR40.WDGM208, WdgM.ASR40.WDGM083)
     individual states do not change
     (examination of the Alive Counters is not performed
     in Mainfunction)
  05: Switch mode to WdgMMode_1
  06: VP (WDGM.EB.TIMEPM.WDGM020421, WdgM.ASR40.WDGM282)
     all Supervised Entities WdgMSupervisedEntity_0 and
     WdgMSupervisedEntity_1 are activated
  07: Call Main function
  08: VP (WDGM.EB.ASR40.WDGM203, WdgM.ASR40.SWS_WdgM_00060, WdgM.SWS_WdgM_00324,
          WdgM.SWS_WdgM_00325)
     individual state of WdgMSupervisedEntity_0 and
     WdgMSupervisedEntity_1 changed to
     WDGM_LOCAL_STATUS_FAILED
  09: Call Main function
  10: VP (WDGM.EB.ASR40.WDGM206, WdgM.ASR40.SWS_WdgM_00060, WdgM.SWS_WdgM_00324,
          WdgM.SWS_WdgM_00325)
     individual state of WdgMSupervisedEntity_0 and
     WdgMSupervisedEntity_1 changed to
     WDGM_LOCAL_STATUS_EXPIRED


Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020427</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>697</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00282</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00324</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1718</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30119</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>789</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 

Check that individual supervision status is tracked correctly (transition from
WDGM_LOCAL_STATUS_OK to WDGM_LOCAL_STATUS_FAILED) for boundary values of
different configurations of SupervisionReferenceCycle and ExpectedAliveIndications
with Minimum and Maximum margins.

Used Test Strategies:
- Boundary Value Analysis


Test Object: None.
Test Precondition: WdgM is initialized (TS_WDGM_30118)
Test Execution: 

For each entry in Tst_Config_Set:
  01(Tst_CheckSupervision): Re-initialize WdgM
  02(Tst_CheckSupervision): Switch mode to Tst_Config_Set.WdgMMode
  For each entry in Tst_Config_Set.Tst_SubConfig_Set,
  execute the following steps
    03(Tst_CheckASCycle):
        Call WdgM_MainFunction()
        Tst_SubConfig_Set.MFcalls times
    04(Tst_CheckASCycle):
        In permutations p0, p1: Call WdgM_CheckpointReached(WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0, WdgMConf_WdgMCheckpoint_CP0_1)
        In permutations p2, p3: Call WdgM_UpdateAliveCounter(WdgMSupervisedEntity_0)
        exactly n=Tst_SubConfig_Set.UAcalls times
    05(Tst_CheckASCycle): VP (WdgM.ASR40.SWS_WdgM_00318)
        Verified by Step 04 and the following steps, because
        the fact that WdgM_UpdateAliveCounter calls WdgM_CheckpointReached
        is implicitly tested by checking that the resulting behavior
        after the WdgM_CheckpointReached and the WdgM_UpdateAliveCounter call
        is the same for all requirements tested regarding WdgM_CheckpointReached
        with at most one configured Checkpoint per Supervision Entity.
    06(Tst_CheckASCycle): VP
        The local status of WdgMSupervisedEntity_0
        equals Tst_SubConfig_Set.status

Additional Descriptions for steps 02 and 03 w.r.t. IV/OV entries:
      Vector entry id of Tst_Config_Set resp. Tst_SubConfig_Set
  Step |
    |  |
    |  |
   02(01):
       Re-initialize WdgM and switch to a mode with following configuration:
          1 Supervision Entity is assigned to this mode containing 1 Checkpoint
          with following Alive Supervision:
            SupervisionReferenceCycle=3
            ExpectedAliveIndications=1
            MaxMargin=MinMargin=0
       Note: Aim of this test is to check correct behavior of the
             SupervisionReferenceCycle
   =========================================================================
   03(01.01): Do nothing
   04(01.01): Do nothing
   05(01.01): see general description of this step
   06(01.01): VP(WDGM.EB.TIMEPM.WDGM020421, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(01.02): Call WdgM Main function n-times such that
              SupervisionReferenceCycle is not reached (boundary test)
   04(01.02): Do nothing
   05(01.02): see general description of this step
   06(01.02): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(01.03): Do nothing
   04(01.03): Update Alive Counter by 1 for configured Supervision Entity
   05(01.03): see general description of this step
   06(01.03): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(01.04): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached
   04(01.04): Do nothing
   05(01.04): see general description of this step
   06(01.04): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.SWS_WdgM_00063,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(01.05): Call WdgM Main function n-times such that
              SupervisionReferenceCycle is not reached (boundary test)
   04(01.05): Update Alive Counter by 1 for configured Supervision Entity
   05(01.05): see general description of this step
   06(01.05): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(01.06): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached (boundary test)
   04(01.06): Do nothing
   05(01.06): see general description of this step
   06(01.06): VP(WdgM.ASR40.WDGM098, WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.SWS_WdgM_00063,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(01.07): Call WdgM Main function n-times such that
              SupervisionReferenceCycle is not reached (boundary test)
   04(01.07): Do nothing
   05(01.07): see general description of this step
   06(01.07): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(01.08): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached (boundary test)
              =&gt; AliveCounter = 0 less than ExpectedAliveIndications
   04(01.08): Do nothing
   05(01.08): see general description of this step
   06(01.08): VP(WDGM.EB.ASR40.WDGM203, WdgM.SWS_WdgM_00074, WdgM.SWS_WdgM_00115, WdgM.SWS_WdgM_00063,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------

   02[02]:
       Re-initialize WdgM and switch to a mode with following configuration:
         1 Supervision Entity is assigned to this mode containing 1 Checkpoint
          with following Alive Supervision:
            SupervisionReferenceCycle=3
            ExpectedAliveIndications=1
            MaxMargin=MinMargin=0
       Note: Aim of this test is to check correct behavior of the
             ExpectedAliveIndications (boundary test)..
   =========================================================================
   03(02.01): Do nothing
   04(02.01): Do nothing
   05(02.01): see general description of this step
   06(02.01): VP(WDGM.EB.TIMEPM.WDGM020421, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(02.02): Call WdgM Main function n-times such that
              SupervisionReferenceCycle is not reached (boundary test)
   04(02.02): Update Alive Counter by 1 for configured Supervision Entity
   05(02.02): see general description of this step
   06(02.02): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(02.03): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached (boundary test)
   04(02.03): Do nothing
   05(02.03): see general description of this step
   06(02.03): VP(WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(02.04): Call WdgM Main function n-times such that
              SupervisionReferenceCycle is not reached (boundary test)
   04(02.04): Update Alive Counter by 2 for configured Supervision Entity (boundary test)
   05(02.04): see general description of this step
   06(02.04): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(02.05): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached (boundary test)
              =&gt; AliveCounter = 2 greater than ExpectedAliveIndications
   04(02.05): Do nothing
   05(02.05): see general description of this step
   06(02.05): VP(WDGM.EB.ASR40.WDGM203, WdgM.SWS_WdgM_00074, WdgM.SWS_WdgM_00115, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------

   02[03]:
       Re-initialize WdgM and switch to a mode with following configuration:
         1 Supervision Entity is assigned to this mode containing 1 Checkpoint
          with following Alive Supervision:
            SupervisionReferenceCycle=1
            ExpectedAliveIndications=3
            MaxMargin=MinMargin=0
       Note: Aim of this test is to check correct behavior of the
             ExpectedAliveIndications (boundary test).
   =========================================================================
   03(03.01): Do nothing
   04(03.01): Do nothing
   05(03.01): see general description of this step
   06(03.01): VP(WDGM.EB.TIMEPM.WDGM020421, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(03.02): Do nothing
   04(03.02): Update Alive Counter by 3 for configured Supervision Entity (boundary test)
   05(03.02): see general description of this step
   06(03.02): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(03.03): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached
   04(03.03): Update Alive Counter by 3 for configured Supervision Entity (boundary test)
   05(03.03): see general description of this step
   06(03.03): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(03.04): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached (boundary test)
   04(03.04): Update Alive Counter by 2 for configured Supervision Entity (boundary test)
   05(03.04): see general description of this step
   06(03.04): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(03.05): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 2 less than ExpectedAliveIndications
   04(03.05): Update Alive Counter by 2 for configured Supervision Entity (boundary test)
   05(03.05): see general description of this step
   06(03.05): VP(WDGM.EB.ASR40.WDGM203, WdgM.SWS_WdgM_00074, WdgM.SWS_WdgM_00115, WdgM.ASR40.WDGM321,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------

   02[04]:
       Re-initialize WdgM and switch to a mode with following configuration:
         1 Supervision Entity is assigned to this mode containing 1 Checkpoint
          with following Alive Supervision:
            SupervisionReferenceCycle=1
            ExpectedAliveIndications=3
            MaxMargin=MinMargin=0
       Note: Aim of this test is to check correct behavior of the
             ExpectedAliveIndications with MaxMin margins (boundary test).
   =========================================================================
   03(04.01): Do nothing
   04(04.01): Do nothing
   05(04.01): see general description of this step
   06(04.01): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.02): Do nothing
   04(04.02): Update Alive Counter by 3 for configured Supervision Entity (boundary test)
   05(04.02): see general description of this step
   06(04.02): VP(WDGM.EB.TIMEPM.WDGM020421, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.03): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 3 and inside expected range [1..4]
   04(04.03): Update Alive Counter by 1 for configured Supervision Entity (boundary test)
   05(04.03): see general description of this step
   06(04.03): VP(WdgM.ASR40.WDGM098, WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.ASR40.WDGM321,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.04): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 1 and inside expected range [1..4]
   04(04.04): Update Alive Counter by 2 for configured Supervision Entity (boundary test)
   05(04.04): see general description of this step
   06(04.04): VP(WdgM.ASR40.WDGM098, WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.ASR40.WDGM321,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.05): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 2 and inside expected range [1..4]
   04(04.05): Update Alive Counter by 3 for configured Supervision Entity (boundary test)
   05(04.05): see general description of this step
   06(04.05): VP(WdgM.ASR40.WDGM098, WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.ASR40.WDGM321,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.06): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 3 and inside expected range [1..4]
   04(04.06): Update Alive Counter by 4 for configured Supervision Entity (boundary test)
   05(04.06): see general description of this step
   06(04.06): VP(WdgM.ASR40.WDGM098, WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.ASR40.WDGM321,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.07): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 4 and inside expected range [1..4]
   04(04.07): Do nothing
   05(04.07): see general description of this step
   06(04.07): VP(WdgM.ASR40.WDGM098, WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.08): Do nothing
   04(04.08): Update Alive Counter by 5 for configured Supervision Entity (boundary test)
   05(04.08): see general description of this step
   06(04.08): VP(WdgM.ASR40.WDGM098, WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.ASR40.WDGM321,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.09): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 5 and outside expected range [1..4]
   04(04.09): Do nothing
   05(04.09): see general description of this step
   06(04.09): VP(WdgM.ASR40.WDGM098, WDGM.EB.ASR40.WDGM203, WdgM.SWS_WdgM_00074, WdgM.SWS_WdgM_00115,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------

   02[05]:
       Re-initialize WdgM and switch to a mode with following configuration:
         1 Supervision Entity is assigned to this mode containing 1 Checkpoint
          with following Alive Supervision:
            SupervisionReferenceCycle=1
            ExpectedAliveIndications=3
            MaxMargin=1
            MinMargin=2
       Note: Aim of this test is to check correct behavior of the
             ExpectedAliveIndications with MaxMin margins (boundary test).
   =========================================================================
   03(05.01): Do nothing
   04(05.01): Update Alive Counter by 3 for configured Supervision Entity (boundary test)
   05(05.01): see general description of this step
   06(05.01): VP(WDGM.EB.TIMEPM.WDGM020421, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(05.02): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 3 and inside expected range [1..4]
   04(05.02): Do nothing
   05(05.02): see general description of this step
   06(05.02): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(05.03): Call WdgM Main function such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 0 and outside expected range [1..4]
   04(05.03): Do nothing
   05(05.03): see general description of this step
   06(05.03): VP(WDGM.EB.ASR40.WDGM203, WdgM.SWS_WdgM_00074, WdgM.SWS_WdgM_00115, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------


Test Input: 

Tst_Config_Set:
    WdgMMode          Tst_SubConfig_Set
       |                     |
  01: { WdgMMode_2, Tst_Config_30119_M2_1 },
  02: { WdgMMode_2, Tst_Config_30119_M2_2 },
  03: { WdgMMode_3, Tst_Config_30119_M3   },
  04: { WdgMMode_6, Tst_Config_30119_M6_1 },
  05: { WdgMMode_6, Tst_Config_30119_M6_2 },

Tst_SubConfig_Sets:

Tst_Config_30119_M2_1:
          MFcalls (Main function calls)
            |  UAcalls (CheckpointReached function calls)
            |   |          status (Expected local supervision status)
            |   |             |
  01.01: { 0U, 0U, WDGM_LOCAL_STATUS_OK}, // status must be ok after mode switch
  01.02: { 2U, 0U, WDGM_LOCAL_STATUS_OK}, // and before reference cycle is reached
  01.03: { 0U, 1U, WDGM_LOCAL_STATUS_OK}, // now we need an alive counter update
  01.04: { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // ... and state should still be ok
  01.05: { 2U, 1U, WDGM_LOCAL_STATUS_OK},
  01.06: { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // next reference cycle elapsed
  01.07: { 2U, 0U, WDGM_LOCAL_STATUS_OK}, // no counter update
  01.08: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed

Tst_Config_30119_M2_2:
  02.01: { 0U, 0U, WDGM_LOCAL_STATUS_OK}, // status must be ok after mode switch
  02.02: { 2U, 1U, WDGM_LOCAL_STATUS_OK}, // and before reference cycle is reached
  02.03: { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // state should still be ok
  02.04: { 2U, 2U, WDGM_LOCAL_STATUS_OK}, // that's one counter update too much!
  02.05: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed

Tst_Config_30119_M3:
  03.01: { 0U, 0U, WDGM_LOCAL_STATUS_OK}, // status must be ok after mode switch
  03.02: { 0U, 3U, WDGM_LOCAL_STATUS_OK}, // update counters
  03.03: { 1U, 3U, WDGM_LOCAL_STATUS_OK}, // call main and update counters for next run
  03.04: { 1U, 2U, WDGM_LOCAL_STATUS_OK}, // that's one counter update missing
  03.05: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed

Tst_Config_30119_M6_1:
  04.01: { 0U, 0U, WDGM_LOCAL_STATUS_OK}, // status must be ok after mode switch
  04.02: { 0U, 3U, WDGM_LOCAL_STATUS_OK}, // update counters
  04.03: { 1U, 1U, WDGM_LOCAL_STATUS_OK}, // call main and update counters for next run
  04.04: { 1U, 2U, WDGM_LOCAL_STATUS_OK}, // call main and update counters for next run
  04.05: { 1U, 3U, WDGM_LOCAL_STATUS_OK}, // call main and update counters for next run
  04.06: { 1U, 4U, WDGM_LOCAL_STATUS_OK}, // call main and update counters for next run
  04.07: { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // status still ok here
  04.08: { 0U, 5U, WDGM_LOCAL_STATUS_OK}, // update counters: one too much
  04.09: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed

Tst_Config_30119_M6_2:
  05.01: { 0U, 3U, WDGM_LOCAL_STATUS_OK}, // update counters
  05.02: { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // call main but no counter update for next run
  05.03: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed


Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00321</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00318</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1719</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30120</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>1212</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
Check that "healing" of individual supervision status is supported
 (transition from WDGM_LOCAL_STATUS_FAILED to WDGM_LOCAL_STATUS_OK)

Test Object: None.
Test Precondition: 

  see TS_WDGM_30118.


Test Execution: 

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_3
  For each entry in Tst_Config_Set,
  execute the following steps
    03 (Tst_CheckASCycle):
        Call WdgM_MainFunction() Tst_Config_Set.MFcalls times
    04 (Tst_CheckASCycle):
        In permutations p0, p1: Call WdgM_CheckpointReached(WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0, WdgMConf_WdgMCheckpoint_CP0_1)
        In permutations p2, p3: Call WdgM_UpdateAliveCounter(WdgMSupervisedEntity_0)
        exactly n=Tst_Config_Set.UAcalls times
    05 (Tst_CheckASCycle): VP (WdgM.ASR40.SWS_WdgM_00318)
        Verified by Step 04 and the following steps, because
        the fact that WdgM_UpdateAliveCounter calls WdgM_CheckpointReached
        is implicitly tested by checking that the resulting behavior
        after the WdgM_CheckpointReached and the WdgM_UpdateAliveCounter call
        is the same for all requirements tested regarding WdgM_CheckpointReached
        with at most one configured Checkpoint per Supervision Entity.
    06 (Tst_CheckASCycle): VP
        The local status of WdgMSupervisedEntity_0
        equals Tst_Config_Set.status

Additional Descriptions for steps 03 - 06 w.r.t. IV/OV entries:
Aim of this test is to check the correct incrementation and decrementation
of the Failed Alive Supervision Counter.
      Vector entry id of Tst_Config_Set
  Step |
    |  |
    |  |
   03(01): Do nothing
   04(01): Update Alive Counter by 3 for configured Supervision Entity
   05(01): see general description of this step
   06(01): VP(WdgM.ASR40.WDGM200, WDGM.EB.TIMEPM.WDGM020426)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(02): Call WdgM Main function such that SupervisionReferenceCycle is exactly reached
           =&gt; AliveCounter = 3 and equals ExpectedAliveIndications (3)
   04(02): Update Alive Counter by 2 for configured Supervision Entity
   05(02): see general description of this step
   06(02): VP(WdgM.ASR40.WDGM200, WdgM.SWS_WdgM_00201)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(03): Call WdgM Main function such that SupervisionReferenceCycle is exactly reached
           =&gt; AliveCounter = 2 is less than ExpectedAliveIndications (3)
           =&gt; Failed Alive Supervision Counter = 1 (incremented)
   04(03): Do nothing
   05(03): see general description of this step
   06(03): VP(WdgM.ASR40.WDGM200, WDGM.EB.ASR40.WDGM203)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------
   03(04): Call WdgM Main function such that SupervisionReferenceCycle is exactly reached
           =&gt; AliveCounter = 0 is less than ExpectedAliveIndications (3)
           =&gt; Failed Alive Supervision Counter = 2 (incremented)
   04(04): Do nothing
   05(04): see general description of this step
   06(04): VP(WdgM.ASR40.WDGM200, WDGM.EB.ASR40.WDGM204)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------
   03(05): Do nothing
   04(05): Update Alive Counter by 3 for configured Supervision Entity
   05(05): see general description of this step
   06(05): VP(WdgM.ASR40.WDGM200)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------
   03(06): Call WdgM Main function such that SupervisionReferenceCycle is exactly reached
           =&gt; AliveCounter = 3 and equals ExpectedAliveIndications (3)
           =&gt; Failed Alive Supervision Counter = 1 (decremented)
   04(06): Do nothing
   05(06): see general description of this step
   06(06): VP(WdgM.ASR40.WDGM200, WDGM.EB.ASR40.WDGM203, WDGM.EB.ASR40.WDGM300)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------
   03(07): Do nothing
   04(07): Update Alive Counter by 3 for configured Supervision Entity
   05(07): see general description of this step
   06(07): VP(WdgM.ASR40.WDGM200)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------
   03(08): Call WdgM Main function such that SupervisionReferenceCycle is exactly reached
           =&gt; AliveCounter = 3 and equals ExpectedAliveIndications (3)
           =&gt; Failed Alive Supervision Counter = 0 (decremented)
   04(08): Do nothing
   05(08): see general description of this step
   06(08): VP(WdgM.ASR40.WDGM200, WdgM.SWS_WdgM_00205)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(09): Do nothing
   04(09): Update Alive Counter by 4 for configured Supervision Entity
   05(09): see general description of this step
   06(09): VP(WdgM.ASR40.WDGM200)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(10): Call WdgM Main function such that SupervisionReferenceCycle is exactly reached
           =&gt; AliveCounter = 4 and greater than ExpectedAliveIndications (3)
           =&gt; Failed Alive Supervision Counter = 1 (incremented)
   04(10): Do nothing
   05(10): see general description of this step
   06(10): VP(WdgM.ASR40.WDGM200, WDGM.EB.ASR40.WDGM203)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------
   03(11): Do nothing
   04(11): Update Alive Counter by 3 for configured Supervision Entity
   05(11): see general description of this step
   06(11): VP(WdgM.ASR40.WDGM200)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------
   03(12): Call WdgM Main function such that SupervisionReferenceCycle is exactly reached
           =&gt; AliveCounter = 3 and equals ExpectedAliveIndications (3)
           =&gt; Failed Alive Supervision Counter = 0 (decremented)
   04(12): Do nothing
   05(12): see general description of this step
   06(12): VP(WdgM.ASR40.WDGM200, WdgM.SWS_WdgM_00205)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------


Test Input: 

Tst_Config_Set:
       MFcalls  (Main function calls)
         |  UAcalls (CheckpointReached function calls)
         |   |          status (Expected local supervision status)
         |   |             |
  01: { 0U, 3U, WDGM_LOCAL_STATUS_OK}, // update counters for first run (ok)
  02: { 1U, 2U, WDGM_LOCAL_STATUS_OK}, // that's one counter update missing
  03: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed -&gt; failed (FailedCnt=1)
  04: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed -&gt; failed (FailedCnt=2)
  05: { 0U, 3U, WDGM_LOCAL_STATUS_FAILED}, // update counters so recovery may happen (FailedCnt=2)
  06: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed -&gt; recovered (FailedCnt=1)
  07: { 0U, 3U, WDGM_LOCAL_STATUS_FAILED}, // update counters so recovery may happen (FailedCnt=1)
  08: { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // next reference cycle elapsed -&gt; recovered (FailedCnt=0)
  09: { 0U, 4U, WDGM_LOCAL_STATUS_OK}, // one counter update too much
  10: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed -&gt; failed (FailedCnt=1)
  11: { 0U, 3U, WDGM_LOCAL_STATUS_FAILED}, // update counters so recovery may happen (FailedCnt=1)
  12: { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // next reference cycle elapsed -&gt; recovered (FailedCnt=0)


Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020426</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>696</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00318</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1720</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30122</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>1408</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
Check that after WdgMFailedSupervisionRefCycleTol, WDGM_LOCAL_STATUS_EXPIRED is
   reached.

Test Object: None.
Test Precondition: None.
Test Execution: 

For each entry in Tst_Config_Set:
  01: Re-initialize WdgM
  02: Switch mode to Tst_Config_Set.WdgMMode
  For each entry in Tst_Config_Set.Tst_SubConfig_Set,
  execute the following steps
    03 (Tst_CheckASCycle):
        Call WdgM_MainFunction() Tst_SubConfig_Set.MFcalls times
    04 (Tst_CheckASCycle):
        In permutations p0, p1: Call WdgM_CheckpointReached(WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0, WdgMConf_WdgMCheckpoint_CP0_1)
        In permutations p2, p3: Call WdgM_UpdateAliveCounter(WdgMSupervisedEntity_0)
        exactly n=Tst_SubConfig_Set.UAcalls times
    05 (Tst_CheckASCycle): VP (WdgM.ASR40.SWS_WdgM_00318)
        Verified by Step 04 and the following steps, because
        the fact that WdgM_UpdateAliveCounter calls WdgM_CheckpointReached
        is implicitly tested by checking that the resulting behavior
        after the WdgM_CheckpointReached and the WdgM_UpdateAliveCounter call
        is the same for all requirements tested regarding WdgM_CheckpointReached
        with at most one configured Checkpoint per Supervision Entity.
    06 (Tst_CheckASCycle): VP
        The local status of WdgMSupervisedEntity_0
        equals Tst_SubConfig_Set.status


Test Input: 

Tst_Config_Set:
    WdgMMode          Tst_SubConfig_Set
       |                     |
  { WdgMMode_2, Tst_Config_30122_M2 },
  { WdgMMode_3, Tst_Config_30122_M3 },
  { WdgMMode_5, Tst_Config_30122_M5 },

Tst_SubConfig_Sets:

Tst_Config_30122_M2:
  MFcalls  (Main function calls)
    |  UAcalls (CheckpointReached function calls)
    |   |          status (Expected local supervision status)
    |   |             |
  { 0U, 0U, WDGM_LOCAL_STATUS_OK}, // status must be ok after mode switch
  { 2U, 1U, WDGM_LOCAL_STATUS_OK}, // and before reference cycle is reached
  { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // state should still be ok
  { 2U, 0U, WDGM_LOCAL_STATUS_OK}, // no counter updates
  { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed -&gt; failed
  { 2U, 0U, WDGM_LOCAL_STATUS_FAILED}, // still failed (cycle not reached)
  { 1U, 0U, WDGM_LOCAL_STATUS_EXPIRED}, // next reference cycle elapsed -&gt; expired (WDGM206)
Tst_Config_30122_M3:
  { 0U, 3U, WDGM_LOCAL_STATUS_OK}, // update counter, state must be ok
  { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // call main but no counter update for next run
  { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed
  { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed
  { 1U, 0U, WDGM_LOCAL_STATUS_EXPIRED}, // limit reached -&gt; expired (WDGM206)
Tst_Config_30122_M5:
  { 0U, 0U, WDGM_LOCAL_STATUS_OK}, // status must be ok after mode switch
  { 0U, 1U, WDGM_LOCAL_STATUS_OK}, // update counter
  { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // call main and don't update counters
  { 1U, 0U, WDGM_LOCAL_STATUS_EXPIRED}, // call main -&gt; expired (WDGM202)


Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00318</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1721</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30121</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>1517</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
Check that no "healing" is done if individual supervision status is
   WDGM_LOCAL_STATUS_EXPIRED.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_3
  For each entry in Tst_Config_Set,
  execute the following steps
    03 (Tst_CheckASCycle):
        Call WdgM_MainFunction() Tst_Config_Set.MFcalls times
    04 (Tst_CheckASCycle):
        In permutations p0, p1: Call WdgM_CheckpointReached(WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0, WdgMConf_WdgMCheckpoint_CP0_1)
        In permutations p2, p3: Call WdgM_UpdateAliveCounter(WdgMSupervisedEntity_0)
        exactly n=Tst_Config_Set.UAcalls times
    05 (Tst_CheckASCycle): VP (WdgM.ASR40.SWS_WdgM_00318)
        Verified by Step 04 and the following steps, because
        the fact that WdgM_UpdateAliveCounter calls WdgM_CheckpointReached
        is implicitly tested by checking that the resulting behavior
        after the WdgM_CheckpointReached and the WdgM_UpdateAliveCounter call
        is the same for all requirements tested regarding WdgM_CheckpointReached
        with at most one configured Checkpoint per Supervision Entity.
    06 (Tst_CheckASCycle): VP
        The local status of WdgMSupervisedEntity_0
        equals Tst_Config_Set.status


Test Input: 

Tst_Config_Set:

  MFcalls  (Main function calls)
    |  UAcalls (CheckpointReached function calls)
    |   |          status (Expected local supervision status)
    |   |             |
  { 0U, 3U, WDGM_LOCAL_STATUS_OK}, // update counters for first run (ok)
  { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // no counter updates any more
  { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed -&gt; failed
  { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed
  { 1U, 0U, WDGM_LOCAL_STATUS_EXPIRED}, // next reference cycle elapsed -&gt; expired
  { 0U, 3U, WDGM_LOCAL_STATUS_EXPIRED}, // update counters so timing is ok again
  { 1U, 0U, WDGM_LOCAL_STATUS_EXPIRED}, // next reference cycle elapsed -&gt; no recovery
  { 0U, 3U, WDGM_LOCAL_STATUS_EXPIRED}, // update counters so timing is ok
  { 1U, 0U, WDGM_LOCAL_STATUS_EXPIRED}, // next reference cycle elapsed -&gt; no recovery


Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00318</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1722</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30125</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>1608</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that mode switch is not possible if a
SE is in status WDGM_LOCAL_STATUS_EXPIRED.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_3
  03: Call WdgM_MainFunction() three times
  04: VP (WDGM.EB.TIMEPM.WDGM020423, WdgM.SWS_WdgM_00145)
      local state of WdgMSupervisedEntity_0 equals
      WDGM_LOCAL_STATUS_EXPIRED
  05: Switch to mode WdgMMode_0 where
      WdgMSupervisedEntity_0 is not active
  06: VP (WDGM.EB.TIMEPM.WDGM020423, WdgM.SWS_WdgM_00145)
      E_NOT_OK is returned, and no mode
      switch was performed


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020423</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1723</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30129</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>1692</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that the Local Supervision Status is calculated correctly regarding
an activation / de-activation of a Supervised Entity in the new WdgM mode when a
mode change is done:

1) Check the successful WdgM mode switch after a call to
   WdgM_MainFunction() if the WdgM mode Switch was requested before
   by a call to WdgM_SetMode() and the following pre-conditions are fulfilled:
   - WdgM is initialized
   - the Local Supervision Status of all Supervised Entities was one of
     either WDGM_LOCAL_STATUS_OK, WDGM_LOCAL_STATUS_FAILED,
     or WDGM_LOCAL_STATUS_DEACTIVATED
   - no CallerIDs are configured

2) Check that if the Supervised Entity was in Local Supervision Status
   WDGM_LOCAL_STATUS_DEACTIVATED in the old WdgM mode and
   the Supervised Entity is active in the new WdgM mode,
   then the Local Supervision Status equals WDGM_LOCAL_STATUS_OK.

3) Check that if the Supervised Entity was in Local Supervision Status
   WDGM_LOCAL_STATUS_OK in the old WdgM mode and
   the Supervised Entity is de-activated in the new WdgM mode,
   then the Local Supervision Status equals WDGM_LOCAL_STATUS_DEACTIVATED.

4) Check that if the Supervised Entity was in Local Supervision Status
   WDGM_LOCAL_STATUS_FAILED in the old WdgM mode and
   the Supervised Entity is de-activated in the new WdgM mode,
   then the Local Supervision Status equals WDGM_LOCAL_STATUS_DEACTIVATED.

 Note: This test-case regarding test aspect 3) assumes that the
       Local Supervision Status does not change during MainFunction
       execution (due to a detected supervision failure).
       This issue is tested in test-case TS_WDGM_30127.


Test Object: None.
Test Precondition: 

WdgM configuration: see TS_WDGM_30118

Runtime pre-conditions:
 - WdgM is initialized
 - During complete test execution, all Supervised Entities have a Local
   Supervision Status which equals one of WDGM_LOCAL_STATUS_OK,
   WDGM_LOCAL_STATUS_FAILED, or WDGM_LOCAL_STATUS_DEACTIVATED.

Configuration pre-conditions:
- CallerIDs are not configured / used


Test Execution: 

Transition table for Local Supervision Status of WdgMSupervisedEntity_0
--------------------------------------------------------------------------------------------
Item| Transition Trigger | Initial State                 | Final State
No. | / Execution Step   |                               | / Execution Step of VP
    |                    |                               |   and requirement (optional)
============================================================================================
1   | WdgM_SetMode + MF  | WDGM_LOCAL_STATUS_DEACTIVATED | WDGM_LOCAL_STATUS_OK
    | Execution Step: 02 |                               |
--------------------------------------------------------------------------------------------
2   | MF                 | WDGM_LOCAL_STATUS_OK          | WDGM_LOCAL_STATUS_FAILED
    | Execution Step: 03 |                               |
--------------------------------------------------------------------------------------------
3   | WdgM_SetMode + MF  | WDGM_LOCAL_STATUS_FAILED      | WDGM_LOCAL_STATUS_DEACTIVATED
    | Execution Step: 05 |                               | 07: VP (WDGM.EB.TIMEPM.WDGM020423
--------------------------------------------------------------------------------------------
4   | WdgM_SetMode + MF  | WDGM_LOCAL_STATUS_DEACTIVATED | WDGM_LOCAL_STATUS_OK
    | Execution Step: 08 |                               | 10: VP (WDGM.EB.TIMEPM.WDGM020421
--------------------------------------------------------------------------------------------
5   | WdgM_SetMode + MF  | WDGM_LOCAL_STATUS_OK          | WDGM_LOCAL_STATUS_DEACTIVATED
    | Execution Step: 11 |                               | 13: VP (WDGM.EB.TIMEPM.WDGM020422
--------------------------------------------------------------------------------------------
Note: MF ... WdgM_MainFunction call

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_3 (apply request by call to MainFunction)
  03: Call WdgM_MainFunction() once
  04: VP (WDGM.EB.TIMEPM.WDGM020423)
      local state of WdgMSupervisedEntity_0 equals
      WDGM_LOCAL_STATUS_FAILED
  05: Switch to mode WdgMMode_0 where
      WdgMSupervisedEntity_0 is not active
  06: VP (WDGM.EB.TIMEPM.WDGM020425)
      E_OK is returned, and mode
      switch was performed
  07: VP (WDGM.EB.TIMEPM.WDGM020423)
      local state of WdgMSupervisedEntity_0 equals
      WDGM_LOCAL_STATUS_DEACTIVATED
  08: Switch to mode WdgMMode_3 where
      WdgMSupervisedEntity_0 is active
  09: VP (WDGM.EB.TIMEPM.WDGM020425)
      E_OK is returned, and mode
      switch was performed
  10: VP (WDGM.EB.TIMEPM.WDGM020421)
      local state of WdgMSupervisedEntity_0 equals
      WDGM_LOCAL_STATUS_OK
  11: Switch to mode WdgMMode_0 where
      WdgMSupervisedEntity_0 is not active
  12: VP (WDGM.EB.TIMEPM.WDGM020425)
      E_OK is returned, and mode
      switch was performed
  13: VP (WDGM.EB.TIMEPM.WDGM020423)
      local state of WdgMSupervisedEntity_0 equals
      WDGM_LOCAL_STATUS_DEACTIVATED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020425</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020422</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>691</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020423</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1724</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30123</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>1913</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Test that after a call to WdgM_MainFunction, the Global Supervision Status
is calculated correctly based on the new Local Supervision Status values
of all activated Supervised Entities.

This is done by testing the following aspects:
1) (WDGM.EB.TIMEPM.WDGM020428)
   Test that after a call to WdgM_Init, then, after a subsequent
   call to WdgM_MainFunction, the Global Supervision Status equals WDGM_GLOBAL_STATUS_OK.

2) (WdgM.ASR40.SWS_WdgM_00078)
   Test that if the Global Supervision Status was WDGM_GLOBAL_STATUS_OK and the Local
   Supervision Status of all Supervised Entities are either
   WDGM_LOCAL_STATUS_OK or WDGM_LOCAL_STATUS_DEACTIVATED, then
   the new Global Supervision Status is WDGM_GLOBAL_STATUS_OK.

3) (WdgM.ASR40.SWS_WdgM_00076)
   Test that if the Global Supervision Status was WDGM_GLOBAL_STATUS_OK, the Local
   Supervision Status of at least one Supervised Entity is
   WDGM_LOCAL_STATUS_FAILED, and no Supervised Entity is in Local
   Supervision Status WDGM_LOCAL_STATUS_EXPIRED, then
   the new Global Supervision Status is WDGM_GLOBAL_STATUS_FAILED.

4) (WDGM.EB.ASR40.WDGM077)
   Test that if the Global Supervision Status was WDGM_GLOBAL_STATUS_FAILED, the Local
   Supervision Status of at least one Supervised Entity is
   WDGM_LOCAL_STATUS_EXPIRED, and the Expired Supervision Tolerance is
   configured to a value larger than zero, then
   - the new Global Supervision Status is WDGM_GLOBAL_STATUS_EXPIRED, and
   - the internal Expired Cycle Counter is set to 1

5) (WdgM.SWS_WdgM_00219)
   Test that if the Global Supervision Status was WDGM_LOCAL_STATUS_EXPIRED, the Local
   Supervision Status of at least one Supervised Entity is
   WDGM_LOCAL_STATUS_EXPIRED, and the Expired Cycle Counter + 1 is less or equal
   to the configured Expired Supervision Tolerance, then
   - the new Global Supervision Status is WDGM_GLOBAL_STATUS_EXPIRED, and
   - the internal Expired Cycle Counter is incremented by 1.

6) (WdgM.SWS_WdgM_00220)
   Test that if the Global Supervision Status was WDGM_GLOBAL_STATUS_EXPIRED, the Local
   Supervision Status of at least one Supervised Entity is
   WDGM_LOCAL_STATUS_EXPIRED, and the Expired Cycle Counter + 1 is larger than
   the configured Expired Supervision Tolerance, then
   the new Global Supervision Status is WDGM_GLOBAL_STATUS_STOPPED.

7) (WdgM.SWS_WdgM_00221)
   Test that if the Global Supervision Status was WDGM_GLOBAL_STATUS_STOPPED, then
   the new Global Supervision Status does not change anymore (except after a re-initialization
   of the WdgM).


Test Object: None.
Test Precondition: 

WdgM configuration: see TS_WDGM_30118
  Further:
    - Expired Supervision Tolerance for used WdgM Mode (WdgMMode_1) is configured to 2

Runtime pre-conditions:
 - WdgM is newly re-initialized


Test Execution: 

Transition table for Global Supervision Status:
-----------------------------------------------------------------------------------------------
Item| Transition Trigger   | Initial Global State /         | Final Global State /
 No.| Local SE State Trans.| Initial Global Status          | Final Global Status
    | / Execution Step     |                                |Execution Step of VP
===============================================================================================
1   | WdgM_Init + MF       | WDGM_NOT_INITIALIZED /         | WDGM_OK_MODE_NOT_PENDING /
    | SE0: DEACT  -&gt;DEACT  | WDGM_GLOBAL_STATUS_DEACTIVATED | WDGM_GLOBAL_STATUS_OK
    | SE1: DEACT  -&gt;DEACT  |                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 01   |                                |02: VP (WDGM.EB.TIMEPM.WDGM020428)
-----------------------------------------------------------------------------------------------
2   | WdgM_SetMode + MF    | WDGM_OK_MODE_NOT_PENDING /     | WDGM_OK_MODE_NOT_PENDING /
    | SE0: DEACT  -&gt;OK     | WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_OK
    | SE1: DEACT  -&gt;OK     |                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 03   |                                |04: VP (WdgM.SWS_WdgM_00078)
-----------------------------------------------------------------------------------------------
3   | UpdateAliveCnt + MF  | WDGM_OK_MODE_NOT_PENDING /     | WDGM_OK_MODE_NOT_PENDING /
    | SE0: OK     -&gt;OK     | WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_OK
    | SE1: OK     -&gt;OK     |                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 05,06|                                |07: VP (WdgM.SWS_WdgM_00078)
-----------------------------------------------------------------------------------------------
4   | UpdateAliveCnt + MF  | WDGM_OK_MODE_NOT_PENDING /     | WDGM_OK_MODE_NOT_PENDING /
    | SE0: DEACT  -&gt;OK     | WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_FAILED
    | SE1: DEACT  -&gt;FAILED |                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 08,09|                                |10: VP (WdgM.SWS_WdgM_00076)
-----------------------------------------------------------------------------------------------
5   | UpdateAliveCnt + MF  | WDGM_OK_MODE_NOT_PENDING /     | WDGM_OK_MODE_NOT_PENDING /
    | SE0: DEACT  -&gt;OK     | WDGM_GLOBAL_STATUS_FAILED      | WDGM_GLOBAL_STATUS_EXPIRED
    | SE1: DEACT  -&gt;EXPIRED|                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 11,12|                                |13: VP (WDGM.EB.ASR40.WDGM077)
    |                      |Note: ExpSupervCnt = 0          |Note: ExpSupervCnt = 1 &lt;= ExpSupervTol
-----------------------------------------------------------------------------------------------
6   |  MF                  | WDGM_OK_MODE_NOT_PENDING /     | WDGM_OK_MODE_NOT_PENDING /
    | SE0: DEACT  -&gt;FAILED | WDGM_GLOBAL_STATUS_EXPIRED     | WDGM_GLOBAL_STATUS_EXPIRED
    | SE1: DEACT  -&gt;EXPIRED|                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 14   |                                |15: VP (WdgM.SWS_WdgM_00219)
    |                      |Note: ExpSupervCnt = 1          |Note: ExpSupervCnt = 2 &lt;= ExpSupervTol
-----------------------------------------------------------------------------------------------
7   | UpdateAliveCnt + MF  | WDGM_OK_MODE_NOT_PENDING /     | WDGM_OK_MODE_NOT_PENDING /
    | SE0: DEACT  -&gt;OK     | WDGM_GLOBAL_STATUS_EXPIRED     | WDGM_GLOBAL_STATUS_STOPPED
    | SE1: DEACT  -&gt;EXPIRED|                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 16,17|                                |18: VP (WdgM.SWS_WdgM_00220)
    |                      |Note: ExpSupervCnt = 2          |
-----------------------------------------------------------------------------------------------
8   | UpdateAliveCnt + MF  | WDGM_OK_MODE_NOT_PENDING /     | WDGM_OK_MODE_NOT_PENDING /
    | SE0: DEACT  -&gt;OK     | WDGM_GLOBAL_STATUS_STOPPED     | WDGM_GLOBAL_STATUS_STOPPED
    | SE1: DEACT  -&gt;EXPIRED|                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 19,20|                                |21: VP (WdgM.SWS_WdgM_00221)
-----------------------------------------------------------------------------------------------
Note: MF ............... WdgM_MainFunction call,
      UpdateAliveCnt ... Update Alive Counter of the active SEs to retrieve expected local states
      SE0 .............. WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0,
      SE1 .............. WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_1,
      SE2 .............. WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_2,
      DEACT ............ WDGM_LOCAL_STATUS_DEACTIVATED,
      OK ............... WDGM_LOCAL_STATUS_OK,
      FAILED ........... WDGM_LOCAL_STATUS_FAILED,
      EXPIRED .......... WDGM_LOCAL_STATUS_EXPIRED
      ExpSupervCnt ..... Expired Supervision Counter
      ExpSupervTol ..... Expired Supervision Tolerance (configured to 2)

  01: Re-initialize WdgM
  02: VP (WDGM.EB.TIMEPM.WDGM020428)
     global status equals: WDGM_GLOBAL_STATUS_OK, because of
     following expected local status information:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  03: Switch to mode WdgMMode_1
  04: VP (WdgM.ASR40.SWS_WdgM_00326, WDGM.EB.TIMEPM.WDGM020428)
     global status equals: WDGM_GLOBAL_STATUS_OK, because of
     following expected local status information:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  05: Call checkpoints CP0_1 and CP1_1 for the SEs
      WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0 and WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_1,
      respectively
  06: Call WdgM_MainFunction() to re-calculate global state
  07: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00214, WdgM.SWS_WdgM_00078)
     global status equals: WDGM_GLOBAL_STATUS_OK, because of
     following expected local status information:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  08: Call checkpoint CP0_1 for the SE
      WdgMSupervisedEntity_0
  09: Call WdgM_MainFunction() to re-calculate global state
  10: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00214, WdgM.SWS_WdgM_00076)
     global status equals: WDGM_GLOBAL_STATUS_FAILED, because of
     following expected local status information:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  11: Call checkpoint CP0_1 for the SE
      WdgMSupervisedEntity_0
  12: Call WdgM_MainFunction() to re-calculate global state
  13: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00214, WDGM.EB.ASR40.WDGM077)
     global status equals: WDGM_GLOBAL_STATUS_EXPIRED, because of
     following expected local status information:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  14: Call WdgM_MainFunction() to re-calculate global state
  15: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00214, WdgM.SWS_WdgM_00219)
     global status equals: WDGM_GLOBAL_STATUS_EXPIRED, because of
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
     following expected local status information:
  16: Call checkpoint CP0_1 for the SE
      WdgMSupervisedEntity_0
  17: Call WdgM_MainFunction() to re-calculate global state
  18: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00214, WdgM.SWS_WdgM_00220)
     global status equals: WDGM_GLOBAL_STATUS_STOPPED, because of
     following expected local status information:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  19: Call checkpoints CP0_1 and CP1_1 for the SEs
      WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0 and WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_1,
      respectively
  20: Call WdgM_MainFunction() to re-calculate global state
  21: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00214, WdgM.SWS_WdgM_00221)
     global status equals: WDGM_GLOBAL_STATUS_STOPPED, because of
     following expected local status information:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00326</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00219</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00220</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1725</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30128</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>2283</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that WdgM_SetMode only works when global supervision status is
   WDGM_GLOBAL_STATUS_OK or WDGM_GLOBAL_STATUS_FAILED.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01 Re-initialize WdgM (initial mode = WdgMMode_0 where no SE is configured)
  02 VP (WdgM.SWS_WdgM_00145)
    global state equals: WDGM_GLOBAL_STATUS_OK
  03 switch to mode WdgMMode_1
  04 VP (WdgM.SWS_WdgM_00145)
     E_OK is returned and mode switch
     was correctly performed (i.e. getMode returns WdgMMode_1 )
  05 VP (WdgM.SWS_WdgM_00145, WdgM.ASR40.WDGM182)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  06 VP WdgM.SWS_WdgM_00145)
     global state equals: WDGM_GLOBAL_STATUS_OK
  07 Switch to mode WdgMMode_2 and call WdgM_MainFunction()
  08 VP (WdgM.SWS_WdgM_00145)
     E_OK is returned (WdgM_SetMode) and mode switch
     was correctly performed (i.e. getMode returns WdgMMode_2 )
  09 VP (WdgM.SWS_WdgM_00145, WdgM.ASR40.WDGM182, WdgM.SWS_WdgM_00315)
    The following local status information is retrieved
    - before mode switch was internally performed:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
    - after mode switch was internally performed:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  10 VP (WdgM.SWS_WdgM_00145)
     global state (old mode of step 07) equals: WDGM_GLOBAL_STATUS_FAILED
  11 switch to mode WdgMMode_1 and call WdgM_MainFunction()
  12 VP (WdgM.SWS_WdgM_00145, WdgM.ASR40.WDGM217, WdgM.ASR40.WDGM182)
     global state (new mode of step 07) equals: WDGM_GLOBAL_STATUS_FAILED
  13 VP (WdgM.SWS_WdgM_00145)
     E_OK is returned and mode switch
     was correctly performed (i.e. getMode returns WdgMMode_1 )
  14 VP (WdgM.SWS_WdgM_00145, WdgM.ASR40.WDGM182)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  15 VP (WdgM.SWS_WdgM_00145, WdgM.ASR40.WDGM217)
     global state equals: WDGM_GLOBAL_STATUS_FAILED
  16 Call WdgM_MainFunction()
  17 VP (WdgM.SWS_WdgM_00145)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  18 VP (WdgM.SWS_WdgM_00145)
     global state equals: WDGM_GLOBAL_STATUS_EXPIRED
  19 switch to mode WdgMMode_2
  20 VP (WdgM.SWS_WdgM_00316)
     E_NOT_OK is returned and mode switch
     was not performed (i.e. getMode returns WdgMMode_1 )
  21 Call WdgM_MainFunction() twice
  22 VP (WdgM.SWS_WdgM_00145)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  23 VP (WdgM.SWS_WdgM_00145)
     global state equals: WDGM_GLOBAL_STATUS_STOPPED
  24 switch to mode WdgMMode_2
  25 VP (WdgM.SWS_WdgM_00316)
     E_NOT_OK is returned and mode switch
     was not performed (i.e. getMode returns WdgMMode_1 )


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00316</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1726</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30124</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>2530</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that WDGM_E_MONITORING is reported to DEM if global supervision
   status reaches WDGM_LOCAL_STATUS_EXPIRED and that an Mcu reset is performed if
   global supervision status reaches WDGM_LOCAL_STATUS_STOPPED.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_1
      (has only WdgMSupervisedEntity_0 configured with
      expected indications 1, reference cycle 1, failed tolerance 1,
     margins 0, WdgMExpiredSupervisionCycleTol 2)
  03: Call WdgM_MainFunction()
  04: VP (WdgM.SWS_WdgM_00326, WdgM.ASR40.SWS_WdgM_00004.11)
      global status equals: WDGM_GLOBAL_STATUS_FAILED
  05: VP (WdgM.ASR40.SWS_WdgM_00004.11)
      No Dem or Det called
  06: Call WdgM_MainFunction()
  07: VP (WdgM.SWS_WdgM_00326, WdgM.ASR40.SWS_WdgM_00004.11)
      global status equals: WDGM_GLOBAL_STATUS_EXPIRED
  08: VP (WdgM.ASR40.SWS_WdgM_00004.11, WdgM.ASR40.WDGM338_Conf)
      No Dem or Det called
  09: Call WdgM_MainFunction()
  10: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00133.1)
      global status equals: WDGM_GLOBAL_STATUS_EXPIRED
  11: VP (WdgM.SWS_WdgM_00133.1, WdgM.SWS_WdgM_00129)
      No Dem or Det called
      No Mcu_PerformReset() called
  12: Call WdgM_MainFunction()
  13: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00133.1)
      global status equals: WDGM_GLOBAL_STATUS_STOPPED
  14: VP (WdgM.SWS_WdgM_00133.1, WdgM.SWS_WdgM_00327, WdgM.ASR40.SWS_WdgM_00129)
      Dem is called once with following arguments:
        EventId = WDGM_E_MONITORING
        EventStatus = DEM_EVENT_STATUS_FAILED
  15: VP (WdgM.SWS_WdgM_00133.1)
      In configuration p0, p2:  Mcu_PerformReset() is called once
      In configuration p1, p3:  Mcu_PerformReset() is not called


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00133.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00338</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00327</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00326</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1727</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30126</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>2691</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that watchdog triggering is done based on global supervision status
and on configured watchdog modes.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Re-initialize WdgM
  02: VP
      global state equals WDGM_GLOBAL_STATUS_OK
  03: VP (WdgM.ASR40.WDGM336_Conf)
      getMode() returns initial mode (i.e. WdgMMode_0)
  04: VP (WdgM.SWS_WdgM_00119)
      Trigger condition is set for:
        DeviceIndex: 5
        TimeoutValue: 1
  05: Switch to mode WdgMMode_1 and call WdgM_MainFunction
  06: VP (WdgM.ASR40.WDGM317)
      global state equals WDGM_GLOBAL_STATUS_OK (is calculated based on old mode
      and not on new mode after internal mode switch)
  07: VP (WdgM.ASR40.WDGM317)
      Trigger condition is set according to old mode
  08: Call WdgM_MainFunction()
  09: VP (WdgM.SWS_WdgM_00120)
      global state equals WDGM_GLOBAL_STATUS_FAILED
  10: VP (WdgM.ASR40.SWS_WdgM_00223, WdgM.SWS_WdgM_00120)
      Trigger condition is set for:
        DeviceIndex: 5
        TimeoutValue: 1
  11: Call WdgM_MainFunction()
  12: VP (WdgM.SWS_WdgM_00121)
      global state equals WDGM_GLOBAL_STATUS_EXPIRED
  13: VP (WdgM.ASR40.SWS_WdgM_00223, WdgM.SWS_WdgM_00121)
      Trigger condition is set for:
        DeviceIndex: 5
        TimeoutValue: 1
  14: Call WdgM_MainFunction()
  15: VP (WdgM.SWS_WdgM_00121)
      global state equals WDGM_GLOBAL_STATUS_EXPIRED
  16: VP (WdgM.ASR40.SWS_WdgM_00223, WdgM.SWS_WdgM_00121)
      Trigger condition is set for:
        DeviceIndex: 5
        TimeoutValue: 1
  17: Call WdgM_MainFunction()
  18: VP (WdgM.SWS_WdgM_00122, WdgM.ASR40.SWS_WdgM_00223)
      global state equals WDGM_GLOBAL_STATUS_EXPIRED
  19: VP (WdgM.ASR40.SWS_WdgM_00223, WdgM.SWS_WdgM_00122, WdgM.ASR40.SWS_WdgM_00223)
      Trigger condition is set for:
        DeviceIndex: 5
        TimeoutValue: 0


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00336</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00317</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1728</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30127</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>2891</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that the Local Supervision Status is calculated correctly regarding
a de-activation of a Supervised Entity in the new WdgM mode when
a Local Supervision Status change and a mode change are performed
in the same WdgM main function cycle.

1)Test that if
  a Supervised Entity is not referenced and no Supervision Function is configured
  for this Entity in the new WdgM Mode (i.e. de-activated), AND
  the Global Supervision Status is WDGM_GLOBAL_STATUS_OK or WDGM_GLOBAL_STATUS_FAILED then,
  after the mode switch, the Local Supervision Status is WDGM_LOCAL_STATUS_DEACTIVATED.

2)Test that if
  the Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_FAILED AND
  the WdgM main function performs a Mode Switch to a new WdgM mode AND
  the Supervised Entity is de-activated in the new WdgM mode
  THEN the WdgM main function shall change the Local Supervision Status
  to WDGM_LOCAL_STATUS_DEACTIVATED.

Note: The difference to test aspect 4) in TS_WDGM_30129 is that in this test-case,
      the Local Supervision Status WDGM_LOCAL_STATUS_FAILED exists temporarily
      (is set to WDGM_LOCAL_STATUS_FAILED in the same WdgM main function and
       was WDGM_LOCAL_STATUS_OK before the WdgM main function call).


Test Object: None.
Test Precondition: 

General WdgM configuration: see TS_WDGM_30118

Runtime pre-conditions:
  - successful execution of TS_WDGM_30129
  - WdgM is initialized

Configuration pre-conditions:
- CallerIDs are not configured / used
- WdgMSupervisedEntity_1 is refenced (activated) in WdgM mode WdgMMode_1 only
  with following configured parameters:
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 1
    WdgMExpiredSupervisionCycleTol 2


Test Execution: 

Transition table for Local Supervision Status of WdgMSupervisedEntity_1
--------------------------------------------------------------------------------------------
Item| Transition Trigger | Initial State                 | Final State
No. | / Execution Step   |                               | / Execution Step of VP
    |                    |                               |   and requirements (optional)
============================================================================================
1   | WdgMMode_1 + MF    | WDGM_LOCAL_STATUS_DEACTIVATED | WDGM_LOCAL_STATUS_OK
    | Execution Step: 02 |                               |
--------------------------------------------------------------------------------------------
2   | WdgMMode_2 + MF    | WDGM_LOCAL_STATUS_OK          | WDGM_LOCAL_STATUS_FAILED
    |                    |                               | Rationale: ExpectedAliveIndications
    |                    |                               |  configured to 1 and alive counter
    |                    |                               |  was not incremented.
    |                     ------------------------------------------------------------------
    |                    | WDGM_LOCAL_STATUS_FAILED      | WDGM_LOCAL_STATUS_DEACTIVATED
    |                    |                               | 04: VP (WdgM.SWS_WdgM_00315,
    |                    |                               |         WdgM.ASR40.WDGM283,
    | Execution Step: 03 |                               |         WDGM.EB.TIMEPM.WDGM020423)
--------------------------------------------------------------------------------------------
Note: WdgMMode_1 ... call WdgM_SetMode with new WdGM mode set to WdgMMode_1
      WdgMMode_2 ... call WdgM_SetMode with new WdGM mode set to WdgMMode_1
      MF ........... call WdgM_MainFunction to apply the mode

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_1 and call WdgM_MainFunction (applies new mode)
  03: Switch to mode WdgMMode_2 and call WdgM_MainFunction (applies new mode)
  04: VP (WdgM.SWS_WdgM_00315, WdgM.ASR40.WDGM283, WDGM.EB.TIMEPM.WDGM020423)
    The following local status information is retrieved:
      - before mode switch during main function execution
        WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
        WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
        WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
      - after mode switch during main function execution
        WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
        WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
        WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00283</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020423</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1729</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30135</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>3072</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that global supervision status transitions directly from WDGM_GLOBAL_STATUS_FAILED
to WDGM_GLOBAL_STATUS_STOPPED if WdgMExpiredSupervisionCycleTol is 0.

Test Object: None.
Test Precondition: None.
Test Execution: 

This test is executed with the following permutations:
   Parameter / Permutation      |    p0   |    p1   |
------------------------------------------|----------
WdgMImmediateReset              | true    | false   |

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_4 which has the following configuration:
      Only WdgMSupervisedEntity_0 is configured with
       expected indications 1, reference cycle 1, failed tolerance 1,
       margins 0, WdgMExpiredSupervisionCycleTol 0)
  03: VP
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  04: VP
      global state equals WDGM_GLOBAL_STATUS_OK
  05: Call WdgM_MainFunction()
  06: VP (WdgM.SWS_WdgM_00117)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  07: VP (WdgM.SWS_WdgM_00117)
      global state equals WDGM_GLOBAL_STATUS_FAILED
  08: Call WdgM_MainFunction()
  09: VP (WdgM.SWS_WdgM_00117)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  10: VP (WdgM.SWS_WdgM_00117)
      global state equals WDGM_GLOBAL_STATUS_STOPPED
  11: VP (WdgM.SWS_WdgM_00133.1, WdgM.ASR40.SWS_WdgM_00129, WdgM.SWS_WdgM_00327)
      No Det called and Dem is called once with following arguments:
        EventId = WDGM_E_MONITORING
        EventStatus = DEM_EVENT_STATUS_FAILED
  12: VP (WdgM.SWS_WdgM_00133.1)
      In configuration p0, p2:  Mcu_PerformReset() is called once
      In configuration p1, p3:  Mcu_PerformReset() is not called


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00133.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00327</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1730</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30136</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>3227</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that global supervision status transitions directly from WDGM_GLOBAL_STATUS_OK
to WDGM_GLOBAL_STATUS_STOPPED if WdgMExpiredSupervisionCycleTol and
WdgMFailedAliveSupervisionRefCycleTol are 0.

Test Object: None.
Test Precondition: None.
Test Execution: 

This test is executed with the following permutations:
   Parameter / Permutation      |    p0   |    p1   |
------------------------------------------|----------
WdgMImmediateReset              | true    | false   |

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_8 which has the following configuration:
      Only WdgMSupervisedEntity_0 is configured with
       expected indications 1, reference cycle 1, failed tolerance 0,
       margins 0, WdgMExpiredSupervisionCycleTol 0)
  03: VP (WdgM.SWS_WdgM_00216)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  04: VP (WdgM.SWS_WdgM_00216)
      global state equals WDGM_GLOBAL_STATUS_OK
  05: Call WdgM_MainFunction()
  06: VP (WdgM.SWS_WdgM_00216)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  07: VP (WdgM.SWS_WdgM_00216)
      global state equals WDGM_GLOBAL_STATUS_STOPPED
  08: VP (WdgM.SWS_WdgM_00133.1, WdgM.ASR40.SWS_WdgM_00129, WdgM.SWS_WdgM_00327)
      No Det called and Dem is called once with following arguments:
        EventId = WDGM_E_MONITORING
        EventStatus = DEM_EVENT_STATUS_FAILED
  09: VP (WdgM.SWS_WdgM_00133.1)
      In configuration p0, p2:  Mcu_PerformReset() is called once
      In configuration p1, p3:  Mcu_PerformReset() is not called


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00133.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00327</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1731</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30140</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>3360</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that global supervision status transitions directly from WDGM_GLOBAL_STATUS_OK
to WDGM_GLOBAL_STATUS_EXPIRED.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_5 which has the following configuration:
      Only WdgMSupervisedEntity_0 is configured with:
        SupervisionReferenceCycle      1
        ExpectedAliveIndications       1
        MaxMargin                      0
        MinMargin                      0
        FailedSupervisionRefCycleTol   0
        WdgMExpiredSupervisionCycleTol 5
  03: VP (WdgM.SWS_WdgM_00216)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  04: VP (WdgM.SWS_WdgM_00215)
      global state equals WDGM_GLOBAL_STATUS_OK
  05: Call WdgM_MainFunction()
  06: VP (WdgM.SWS_WdgM_00215)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  07: VP (WdgM.SWS_WdgM_00215)
      global state equals WDGM_GLOBAL_STATUS_EXPIRED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1732</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30141</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>3458</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
Check that global supervision status transitions from WDGM_GLOBAL_STATUS_FAILED
to WDGM_GLOBAL_STATUS_OK.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_4 which has the following configuration:
      Only WdgMSupervisedEntity_0 is configured with:
        SupervisionReferenceCycle      1
        ExpectedAliveIndications       1
        MaxMargin                      0
        MinMargin                      0
        FailedSupervisionRefCycleTol   1
        WdgMExpiredSupervisionCycleTol 0
  03: VP (WdgM.SWS_WdgM_00218)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  04: VP (WdgM.SWS_WdgM_00215)
      global state equals WDGM_GLOBAL_STATUS_OK
  05: Call WdgM_MainFunction()
  06: VP (WdgM.SWS_WdgM_00218)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  07: VP (WdgM.SWS_WdgM_00218)
      global state equals WDGM_GLOBAL_STATUS_FAILED
  08: In permutations p0, p1: Call WdgM_CheckpointReached(WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0, WdgMConf_WdgMCheckpoint_CP0_1)
      In permutations p2, p3: Call WdgM_UpdateAliveCounter(WdgMSupervisedEntity_0)
  08b: VP (WdgM.ASR40.SWS_WdgM_00318)
      Verified by Step 08 and the following steps, because
      the fact that WdgM_UpdateAliveCounter calls WdgM_CheckpointReached
      is implicitly tested by checking that the resulting behavior
      after the WdgM_CheckpointReached and the WdgM_UpdateAliveCounter call
      is the same for all requirements tested regarding WdgM_CheckpointReached
      with at most one configured Checkpoint per Supervision Entity.
  09: Call WdgM_MainFunction()
  10: VP (WdgM.SWS_WdgM_00218)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  11: VP (WdgM.SWS_WdgM_00218)
      global state equals WDGM_GLOBAL_STATUS_OK


Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00318</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1733</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30143</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>3592</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that WdgM_GetFirstExpiredSEID() correctly returns
the last expired SEID.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Initialize WdgM and switch to mode WdgMMode_1
  02: Let WdgMSupervisedEntity_0 first expire
  03: Call WdgM_GetFirstExpiredSEID()
  04: VP
     WdgM_GetFirstExpiredSEID() returns E_OK
     and the first expired Supervision Entity
     equals WdgMSupervisedEntity_0
  05: re-initialize the WdgM and switch to mode WdgMMode_1
  06: Let WdgMSupervisedEntity_1 first expire
  07: Call WdgM_GetFirstExpiredSEID()
  08: VP
     WdgM_GetFirstExpiredSEID() returns E_OK
     and the first expired Supervision Entity
     equals WdgMSupervisedEntity_1


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00349</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00351</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1734</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30144_GetFirstExpiredSEID</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>3752</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that WdgM_Init clears from the non-initialized RAM the double-inverse
value storing the SEID that first reached the EXIRED state which
is the value returned by WdgM_GetFirstExpiredSEID().

Test Object: None.
Test Precondition: 

Some SEID expired before (i.e. TS_WDGM_30143 executed successfully)


Test Execution: 

  01 Call WdgM_GetFirstExpiredSEID()
  02 VP (WDGM.EB.TIMEPM.WDGM020434, WdgM.ASR40.WDGM349)
     WdgM_GetFirstExpiredSEID() returns E_OK
  03 re-initialize WdgM
  04 Call WdgM_GetFirstExpiredSEID()
  05 VP (WDGM.EB.TIMEPM.WDGM020434, WdgM.ASR40.WDGM349)
     WdgM_GetFirstExpiredSEID() returns E_NOT_OK


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020434</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>704</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00349</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1735</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30145_SameAliveSupervision</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>3820</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
This test checks the behavior of the WdgM when the same alive supervision is used
after switching the mode. It should reset the alive indications from the previous
mode and also reset the reference supervision cycle. 

Test Object: None.
Test Precondition: 

Test Execution: 

  01 reset stub state variables
  02 switch to mode WdgMMode_9_Start(initial mode)
  03 call main function
      after WdgM_MainFunction call:
      global state equals: WDGM_GLOBAL_STATUS_OK
      local status for :
      WdgMSupervisedEntity_3 is WDGM_LOCAL_STATUS_OK
  04 VP verify that the mode is WdgMMode_9_Start
  05 VP global state must be ok
  06 VP check if local SE status of SE 3 is WDGM_LOCAL_STATUS_OK
  07 call only five times WdgM_CheckpointReached function(alive indications are incremented)
     WdgMMode_9_Start mode is configured to have ten alive indications in two main function calls
  08 switch to the mode WdgMMode_10_Run
  09 call main function
  10 VP verify that the mode is WdgMMode_10_Run
  11 call only six times WdgM_CheckpointReached function
     WdgMMode_10_Run mode is configured to have ten alive indications in two main function calls
  12 call main function
  13 VP global state must be ok : WDGM_GLOBAL_STATUS_OK
  14 VP check if local SE status of SE 3 is WDGM_LOCAL_STATUS_OK
  15 call the remaining four times WdgM_CheckpointReached function
  16 call main function
  17 VP global state must be ok : WDGM_GLOBAL_STATUS_OK
  18 VP check if local SE status of SE 3 is WDGM_LOCAL_STATUS_OK


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ResetAliveCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1736</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30146_SetModeSynchron</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>3966</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that WdgM_SetMode does not change the local statuses (OK and FAILED) 
  if the supervised entity is re-used in the new mode.


Test Object: None.
Test Precondition: None.
Test Execution: 

  01 Re-initialize WdgM (initial mode = WdgMMode_0 where no SE is configured)
  02 VP (WdgM.SWS_WdgM_00145)
     Global state equals: WDGM_GLOBAL_STATUS_OK
  03 VP (WdgM.SWS_WdgM_00209)
     The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  04 Switch to mode WdgMMode_1
  05 VP Check that the new mode is WdgMMode_1.
  06 Check if the local statuses are:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  07 Call WdgM_MainFunction()
  08 VP check that the global state equals: WDGM_GLOBAL_STATUS_OK
  09 VP (WdgM.SWS_WdgM_00207)
     Switch to the mode WdgMMode_2, only WdgMSupervisedEntity_0 is active.
  10  VP Check the local statuses, should be :
       WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
       WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
       WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  11 Call WdgM_MainFunction()
  12 VP (WdgM.SWS_WdgM_00291) Switch to mode WdgMMode_1.
     The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  13 VP Check that the new mode is WdgMMode_1.
  14 Call WdgM_MainFunction()
  15 VP Check the global state, must be WDGM_GLOBAL_STATUS_OK.
  16 Call WdgM_MainFunction()
  17 VP Check the global state, must be WDGM_GLOBAL_STATUS_FAILED.
  18 VP Check if the local statuses are:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  18 VP Check if local statuses are:
  19 Switch to mode WdgMMode_2
  20 VP  Check that the new mode is WdgMMode_2.
  21 Call WdgM_MainFunction()
  22 VP Check if local statuses are:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATE
  23 Switch to mode WdgMMode_1
  24 VP  Check that the new mode is WdgMMode_1.
  25 Call CheckpointReached function for SE0. This call should be ignored 
     because AliveSupervision is deactivated until the next MainFunction. 
     The old local status of SE0 is preserved
  26 Call WdgM_MainFunction()
  27 VP Check if local statuses are:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  28 Call CheckpointReached function, this checkpoint is registerd.
  29 Call WdgM_MainFunction()
  30 VP Check the local statuses, should be :
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  31 VP check that the global state equals: WDGM_GLOBAL_STATUS_EXPIRED
  32 VP Check the local statuses, should be :
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00291</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020102_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1737</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30147_CheckSetModeBeforeInit</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>4204</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks the case where SetMode is called between WdgM_Init and MainFunction.
  If WdgMSetModeSynchron configuration parameter is enabled(WdgM_SetMode synchronously
  switch to the new mode) it is not possible to change the mode in the case specified
  above and a DET WDGM_E_NO_INIT error is reported instead.
   

Test Object: None.
Test Precondition: None.
Test Execution: 

  01 Re-initialize WdgM (initial mode = WdgMMode_0 where no SE is configured)
  02 de-initialize WdgM
  03 re-initialize WdgM ( WdgM will be initialized after the first main function )
  04 try to switch to mode WdgMMode_1, WdgM is not initialized, WDGM_E_NO_INIT reported
  05 check if DET WDGM_E_NO_INIT is reported


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020459</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1738</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30148_CheckSetModeWithSameMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>4270</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks the case where SetMode is called consecutive with the same mode.
  If WdgMSetModeSynchron configuration parameter is enabled(WdgM_SetMode synchronously switch to the new mode)
  and if WdgM_SetMode function is called consecutive with the same mode, E_OK is returned.
   

Test Object: None.
Test Precondition: None.
Test Execution: 

  01 reset stub state variables 
  02 switch to the mode WdgMMode_1
  03 VP Check that the new mode is WdgMMode_1. 
  04 switch to the same mode WdgMMode_1, E_OK is returned
  05 VP Check that the new mode is WdgMMode_1. 


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020459</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1739</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30149_CheckSetModeReturnE_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_01_AliveSupervision/source/application/WdgM_ConTest_01_AliveSupervision.c</sourcefile>
      <sourceline>4337</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks the case where SetMode is called and something goes wrong, E_NOT_OK is returned.
  In our case, WdgIf_SetMode is forced to failure with the help of the stub.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01 reset stub state variables
  02 switch to the mode WdgMMode_2
  03 VP Check that the new mode is WdgMMode_2
  04 force a mode switch failure 
  05 switch to the mode WdgMMode_1, RetVal should be E_NOT_OK
  06 VP check that global state must be stopped
     must be WDGM_GLOBAL_STATUS_STOPPED
  07 DEM is reported
     Dem is called once with following arguments:
      EventId = WDGM_EB_SET_MODE_DEM_EVENT_ID
      EventStatus = DEM_EVENT_STATUS_FAILED
  08 DET WDGM_EB_E_SETMODE_REQUEST is reported


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020438</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1740</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_30017</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>160</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
check if the WdgM_GetVersionInfo returns the expected values.

This test and all sub-sequent tests are
executed with the following configuration permutations:

   Parameter / Permutation      |    p0   |    p1   |    p2   |    p3   |
=========================================================================
WdgMDevErrorDetect              | true    | true    | true    | true    |
WdgMSupervisionReportToDem      | DEM     | DET     | DISABLE | DET     |
WdgMSetModeReportToDem          | DEM     | DET     | DISABLE | DET     |
WdgMImproperCallerReportToDem   | DEM     | DET     | DISABLE | DET     |
WdgMDefensiveBehavior           | true    | true    | false   | true    |
WdgMNumberOfCores               |  1      |  1      |  1      |  2      |
WdgMMasterCoreId                |  0      |  0      |  0      |  0      |
------------------ The following parameters are constant ----------------
WdgMVersionInfoApi              | true    | true    | true    | true    |
WdgMDemStoppedSupervisionReport | true    | true    | true    | true    |
WdgMImmediateReset              | true    | true    | true    | true    |
WdgMOffModeEnabled              | true    | true    | true    | true    |
WdgMRteUsage                    | false   | false   | false   | false   |
WdgMCallerIds                   | true    | true    | true    | true    |
WdgMSupervisionDemDetErrId      |  -      | 30      |  -      | 30      |
WdgMSetModeDemDetErrId          |  -      | 31      |  -      | 31      |
WdgMImproperCallerDemDetErrId   |  -      | 32      |  -      | 32      |

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Call WdgM_GetVersionInfo with valid arguments
  02: VP
      The following values are returned:
      vendorID equals TS_VENDOR_ID_EB
      moduleID equals the configured module id in config.mk
      sw_major_version equals the SW major version in config.mk
      sw_minor_version equals the SW minor version in config.mk
      sw_patch_version equals the SW patch version in config.mk
  03: VP
      No Det is called for all configuration permutations


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1741</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30105</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
check if Det is called when WdgM_GetVersionInfo is given a NULL_PTR.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Call WdgM_GetVersionInfo with null pointer for all cores
  02: VP (WdgM.ASR40.SWS_WdgM_00260, WdgM.SWS_WdgM_00256, WdgM.ASR40.SWS_WdgM_00048)
      Det called with following parameters for p0,p1 and p2 
        InstanceId = 0x00U
        ApiId      = 0x02U
        ErrorId    = 0x14U
      Det called with following parameters for p3 
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x02U |  ApiId      = 0x02U  |
      |ErrorId    = 0x14U |  ErrorId    = 0x14U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00256</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1742</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30034</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>345</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the SetMode function is called
  while WdgM is not initialized.

Test Object: None.
Test Precondition: WdgM not initialized
Test Execution: 

  01: Call WdgM_SetMode with valid arguments on all cores
  02: VP
      E_NOT_OK is returned
  03: VP
      Det called with following parameters for p0,p1 and p2
        InstanceId = 0x00U
        ApiId      = 0x03U
        ErrorId    = 0x10U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x03U |  ApiId      = 0x03U  |
      |ErrorId    = 0x10U |  ErrorId    = 0x84U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.SatelliteCall.DetError</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1743</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30108</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>446</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the GetMode function is called
  while WdgM is not initialized.

Test Object: None.
Test Precondition: WdgM not initialized
Test Execution: 

  01: Call WdgM_GetMode with valid arguments for all cores
  02: VP
      E_NOT_OK is returned
  03: VP
      Det called with following parameters for p0,p1 and p2
        InstanceId = 0x00U
        ApiId      = 0x0bU
        ErrorId    = 0x10U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x0bU |  ApiId      = 0x0bU  |
      |ErrorId    = 0x10U |  ErrorId    = 0x84U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00253</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.SatelliteCall.DetError</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1744</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30035</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>548</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the WdgM_CheckpointReached function is called
  while WdgM is not initialized.

Test Object: None.
Test Precondition: WdgM not initialized
Test Execution: 

  01: Call WdgM_CheckpointReached with valid arguments on all cores
  02: VP
      E_NOT_OK is returned
  03: VP
      Det called with following parameters for p0,p1 and p2
        InstanceId = 0x00U
        ApiId      = 0x0eU
        ErrorId    = 0x10U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x0eU |  ApiId      = 0x0eU  |
      |ErrorId    = 0x10U |  ErrorId    = 0x10U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00279</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1745</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30036</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>648</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the UpdateAliveCounter function is called
  while WdgM is not initialized.

Test Object: None.
Test Precondition: WdgM not initialized
Test Execution: 

  01: Call WdgM_UpdateAliveCounter with valid arguments on all cores
  02: VP
      E_NOT_OK is returned
  03: VP
      Det called with following parameters for p0,p1 and p2
        InstanceId = 0x00U
        ApiId      = 0x04U
        ErrorId    = 0x10U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x04U |  ApiId      = 0x04U  |
      |ErrorId    = 0x10U |  ErrorId    = 0x10U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1746</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30039</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>748</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the WdgM_GetLocalStatus function is
  called while WdgM is not initialized.

Test Object: None.
Test Precondition: WdgM not initialized
Test Execution: 

  01: Call WdgM_GetLocalStatus with valid arguments on all cores
  02: VP
      E_NOT_OK is returned
  03: VP
      Det called with following parameters for p0,p1 and p2
        InstanceId = 0x00U
        ApiId      = 0x0cU
        ErrorId    = 0x10U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x0cU |  ApiId      = 0x0cU  |
      |ErrorId    = 0x10U |  ErrorId    = 0x10U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00253</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1747</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30106</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>850</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the GetGlobalStatus function is
  called while WdgM is not initialized.

Test Object: None.
Test Precondition: WdgM not initialized
Test Execution: 

  01: Call WdgM_GetGlobalStatus with valid arguments on all cores
  02: VP
      E_NOT_OK is returned
  03: VP
      Det called with following parameters for p0,p1 and p2
        InstanceId = 0x00U
        ApiId      = 0x0dU
        ErrorId    = 0x10U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x0dU |  ApiId      = 0x0dU  |
      |ErrorId    = 0x10U |  ErrorId    = 0x84U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.SatelliteCall.DetError</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1748</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30040</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>953</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is _not_ called, when the WdgM_DeInit
  function is called while WdgM is not initialized.

Test Object: None.
Test Precondition: WdgM not initialized
Test Execution: 

  01: Call WdgM_DeInit on all cores
  02: VP
      Det called with following parameters for p0,p1 and p2
        InstanceId = 0x00U
        ApiId      = 0x01U
        ErrorId    = 0x10U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x01U |  ApiId      = 0x01U  |
      |ErrorId    = 0x10U |  ErrorId    = 0x10U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00288</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1749</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30041</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>1043</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is only called if defensive behavior is activated,
when the MainFunction function is called while WdgM is not initialized.

Test Object: None.
Test Precondition: WdgM not initialized
Test Execution: 

  01: Call WdgM_MainFunction on all cores
  02: VP (WDGM.EB.TIMEPM.WDGM020437, WdgM.ASR40.SWS_WdgM_00048)
     permutations: p0, p1
      Det called with following parameters
        InstanceId = 0x00U
        ApiId   = 0x08U
        ErrorId = 0x10U
      Permutations: p2
        No Det called
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x08U |  ApiId      = 0x08U  |
      |ErrorId    = 0x10U |  ErrorId    = 0x10U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020437</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>707</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1750</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30044</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>1133</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the WdgM_PerformReset function is
  called while WdgM is not initialized.

Test Object: None.
Test Precondition: WdgM not initialized
Test Execution: 

  01: Call WdgM_PerformReset on all cores
  02: VP
      Det called with following parameters for p0,p1 and p2
        InstanceId = 0x00U
        ApiId      = 0x0fU
        ErrorId    = 0x10U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x0fU |  ApiId      = 0x0fU  |
      |ErrorId    = 0x10U |  ErrorId    = 0x84U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00270</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.SatelliteCall.DetError</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1751</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30053_OptionalAPI_Used</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>1223</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that APIs Dem_ReportErrorStatus and Det_ReportError
  are used for a specific configuration and therefore are optional
  in combination with test TS_WDGM_04_OptionalAPI_Unused
  that checks that these APIs are not used
  for a different configuration.


Test Object: None.
Test Precondition: 
- Testcase TS_WDGM_04_OptionalAPI_Unused executed successfully
- WdgM is not initialized

Test Execution: 

  01 Call WdgM_DeInit()
  02 VP (WdgM.ASR40.SWS_WdgM_00162.3)
     Det_ReportError is called at least once
  03 Initialize Watchdog Manager and perform
     a mode switch with an incorrect caller id
  04 VP (WdgM.ASR40.SWS_WdgM_00162.2)
     Dem_ReportErrorStatus is called at least once
     for permutation: p0


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00162.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00162.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1752</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30027</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>1290</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is not called, when the Init function
is called with any init pointer (no post build configuration
supported).

Test Object: None.
Test Precondition: WdgM not initialized
Test Execution: 

  01: Call WdgM_Init with invalid argument
  02: VP
      no Det called for all permutations


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WdgMInit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1753</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30042</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>1345</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the SetMode function
  is called with an invalid mode.

Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Call WdgM_SetMode with invalid mode
  02: VP
      E_NOT_OK is returned
  03: VP
      Det called with following parameters for p0, p1, p2
        ApiId   = 0x03U
        ErrorId = 0x12U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x03U |  ApiId      = 0x03U  |
      |ErrorId    = 0x12U |  ErrorId    = 0x84U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.SatelliteCall.DetError</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1754</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30045</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>1430</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check if the DEM event WDGM_E_IMPROPER_CALLER is reported,
when the SetMode function is called with an invalid caller id.


Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Call WdgM_SetMode with invalid caller id (valid mode) on al cores
  02: VP (WdgM.ASR40.SWS_WdgM_00245, WdgM.ASR40.SWS_WdgM_00006, WdgM.ASR40.SWS_WdgM_00004.13)
      E_NOT_OK is returned for permutations: p0, p1, p3
      E_OK is returned for permutations: p2
  03: VP (WdgM.ASR40.SWS_WdgM_00245, WdgM.ASR40.SWS_WdgM_00006, WdgM.ASR40.SWS_WdgM_00004.13)
      Dem called with following parameters for permutations: p0
        EventId     = WDGM_E_IMPROPER_CALLER
        EventStatus = DEM_EVENT_STATUS_FAILED
      Det called with following parameters for permutations: p1
        InstanceId = 0x00U
        ApiId   = 0x03U
        ErrorId = 32
      No Det or Dem called for permutations: p2
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x03U |  ApiId      = 0x03U  |
      |ErrorId    = 32U   |  ErrorId    = 132U    |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.SatelliteCall.DetError</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1755</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30046</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>1571</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Check if Mcu_PerformReset is called within the WdgM MainFunction,
  when the SetMode function fails due to
  an internal error (WdgIf_SetMode returns E_NOT_OK) and
  the DEM event WDGM_E_SET_MODE is reported.

  Note:
  Testing the call of API Mcu_PerformReset in combination with
  test TS_WDGM_04_OptionalAPI_Unused checks that this API is optional
  (i.e., API is not used  for a different configuration).


Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  00: Prepare WdgIf_SetMode stub to return E_NOT_OK
  01: Call WdgM_SetMode with valid WdgMMode different to actual WdgMMode
      and apply request by performing a subsequent call to WdgM_MainFunction on al cores
  02: VP (WDGM.EB.TIMEPM.WDGM020400)
      E_OK is returned for WdgM_SetMode in all permutations
  03: VP (WdgM.SWS_WdgM_00142.1, WdgM.ASR40.SWS_WdgM_00006,
      WDGM.EB.TIMEPM.WDGM020438, WDGM.EB.TIMEPM.WDGM020439,
      WdgM.ASR40.SWS_WdgM_00004.12)
      for permutation: p0
         Det called with following parameters:
           InstanceId = 0x00U
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_SETMODE_REQUEST
         Dem called with following parameters:
           EventId     = WDGM_E_SET_MODE
           EventStatus = DEM_EVENT_STATUS_FAILED
      for permutation: p1
         Det called twice:
           First Det with following parameters:
             InstanceId = 0x00U
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 32
           Second Det with following parameters:
             InstanceId = 0x00U
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = WDGM_EB_E_SETMODE_REQUEST
         No Dem called
      for permutation: p2
         Det called with following parameters:
           InstanceId = 0x00U
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_SETMODE_REQUEST
         No Dem called and we can only report from the Master core here not from satellites
         since all checks are done on master.
  04 VP (WdgM.ASR40.SWS_WdgM_00162.4)
     Mcu_PerformReset is called at least once


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00142.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00162.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020438</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020439</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>709</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1756</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30109</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>1750</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the GetMode function
  is called with an invalid parameter (null pointer).

Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Call WdgM_GetMode with NULL_PTR
  02: VP (WdgM.ASR40.WDGM254)
      E_NOT_OK is returned
  03: VP (WdgM.ASR40.WDGM254, WdgM.ASR40.SWS_WdgM_00260)
      Det called with following parameters for p0, p1, p2
        InstanceId = 0x00U
        ApiId   = 0x0bU
        ErrorId = 0x14U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x0bU |  ApiId      = 0x0bU  |
      |ErrorId    = 0x14U |  ErrorId    = 0x84U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00254</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.SatelliteCall.DetError</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1757</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30043</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>1836</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the WdgM_CheckpointReached function is called
  with a wrong SEid.

Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Call WdgM_CheckpointReached with invalid Supervised Entity Id
  02: VP (WdgM.ASR40.WDGM278)
      E_NOT_OK is returned
  03: VP (WdgM.ASR40.WDGM278, WdgM.ASR40.SWS_WdgM_00260)
      Det called with following parameters for all permutations
        InstanceId = 0x00U
        ApiId   = 0x0eU
        ErrorId = 0x13U


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00278</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1758</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30055</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>1915</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if deprecated Det is called, when the WdgM_UpdateAliveCounter function is called
  with valid arguments.

Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Call WdgM_UpdateAliveCounter with invalid Supervised Entity Id
  02: VP (WdgM.ASR40.SWS_WdgM_00290)
      E_OK is returned
  03: VP (WdgM.ASR40.SWS_WdgM_00290)
      Det called with following parameters for p0, p1, p2
        InstanceId = 0x00U
        ApiId   = 0x04U
        ErrorId = 0x17U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x04U |  ApiId      = 0x04U  |
      |ErrorId    = 0x17U |  ErrorId    = 0x17U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00290</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1759</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30049</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>1998</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the WdgM_CheckpointReached function is called
  with a wrong Checkpoint Id.

Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Call WdgM_CheckpointReached with invalid Checkpoint Id
  02: VP (WdgM.SWS_WdgM_00284)
      E_NOT_OK is returned
  03: VP (WdgM.SWS_WdgM_00284, WdgM.ASR40.SWS_WdgM_00260)
      Det called with following parameters for p0, p1, p2
        InstanceId = 0x00U
        ApiId   = 0x0eU
        ErrorId = 0x16U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x0eU |  ApiId      = 0x0eU  |
      |ErrorId    = 0x16U |  ErrorId    = 0x16U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00284</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1760</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30050</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>2082</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the WdgM_CheckpointReached function is called
  with a correct Checkpoint Id of a deactivated Supervised Entity.

Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Re-init WdgM
  02: Call WdgM_CheckpointReached with valid arguments
      but passed Supervised Entity is deactivated
      in the current mode
  03: VP
      E_NOT_OK is returned
  04: VP
      Det called with following parameters for all permutations
        InstanceId = 0x00U
        ApiId   = 0x0eU
        ErrorId = 0x19U


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00319</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1761</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30051</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>2209</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the UpdateAliveCounter function is called
  with a wrong SEid.

Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Call WdgM_UpdateAliveCounter with an invalid
      Supervised Entity Id
  02: VP (WdgM.ASR40.SWS_WdgM_00027)
      E_NOT_OK is returned
  03: VP (WdgM.ASR40.SWS_WdgM_00027, WdgM.ASR40.SWS_WdgM_00260)
      Det called with following parameters for p0, p1, p2
        ApiId   = 0x04U
        ErrorId = 0x13U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x04U |  ApiId      = 0x04U  |
      |ErrorId    = 0x13U |  ErrorId    = 0x13U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1762</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30107</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>2315</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the WdgM_GetLocalStatus function is
  called with a wrong SEid.

Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Call WdgM_GetLocalStatus with an invalid
      Supervised Entity Id
  02: VP (WdgM.ASR40.SWS_WdgM_00004.4, WdgM.SWS_WdgM_00172)
      E_NOT_OK is returned
  03: VP (WdgM.ASR40.SWS_WdgM_00004.4, WdgM.SWS_WdgM_00172, WdgM.ASR40.SWS_WdgM_00260)
      Det called with following parameters for p0, p1, p2
        ApiId   = 0x0cU
        ErrorId = 0x13U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x0cU |  ApiId      = 0x0cU  |
      |ErrorId    = 0x13U |  ErrorId    = 0x13U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1763</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30047</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>2402</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
 Check if the Det is called, when GetGlobalStatus is given a NULL pointer.

Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Call WdgM_GetGlobalStatus with a null pointer
  02: VP (WdgM.SWS_WdgM_00258)
      E_NOT_OK is returned
  03: VP (WdgM.SWS_WdgM_00258, WdgM.ASR40.SWS_WdgM_00260)
      Det called with following parameters for p0, p1, p2
        ApiId   = 0x0dU
        ErrorId = 0x14U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x0dU |  ApiId      = 0x0dU  |
      |ErrorId    = 0x14U |  ErrorId    = 0x84U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00258</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.SatelliteCall.DetError</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1764</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30048</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>2486</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the WdgM_GetLocalStatus function is
  called with a null pointer.

Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Call WdgM_GetLocalStatus with a null pointer
  02: VP (WdgM.SWS_WdgM_00257)
      E_NOT_OK is returned
  03: VP (WdgM.SWS_WdgM_00257, WdgM.ASR40.SWS_WdgM_00260)
      Det called with following parameters for p0, p1, p2
        ApiId   = 0x0cU
        ErrorId = 0x14U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x0cU |  ApiId      = 0x0cU  |
      |ErrorId    = 0x14U |  ErrorId    = 0x14U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1765</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30052</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>2570</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the Det is called, when the WdgM_GetFirstExpiredSEID function is
  called with a null pointer.

Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Call WdgM_GetFirstExpiredSEID with a null pointer
  02: VP (WdgM.SWS_WdgM_00347)
      E_NOT_OK is returned
  03: VP (WdgM.SWS_WdgM_00347, WdgM.ASR40.SWS_WdgM_00260)
      Det called with following parameters for p0, p1, p2
        ApiId   = 0x10U
        ErrorId = 0x14U
      Det called with following parameters for p3
      --------master core------satellite core-----
      |InstanceId = 0x00U |  InstanceId = 0x01U  |
      |ApiId      = 0x10U |  ApiId      = 0x10U  |
      |ErrorId    = 0x14U |  ErrorId    = 0x84U  |
      --------------------------------------------


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.SatelliteCall.DetError</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1766</internalId></specobject>
    <specobject>
      <id>TS_WDGM_NullPtrAPI</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>2655</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Check if the Det is called, when the WdgM core instance returns a null pointer
  after calling a WdgM API function.

Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 
  01: Call WdgM_GetMode in a null core context
  02: VP (WdgM.ASR40.SWS_WdgM_00004.5)
      Det called with ErrorId WDGM_E_INV_POINTER (0x14U)
  03: Call WdgM_CheckpointReached in a null core context
  04: VP (WdgM.ASR40.SWS_WdgM_00004.5)
      Det called with ErrorId WDGM_E_INV_POINTER (0x14U)
  05: Call WdgM_UpdateAliveCounter in a null core context
  06: VP (WdgM.ASR40.SWS_WdgM_00004.5)
      Det called with ErrorId WDGM_E_INV_POINTER (0x14U)
  07: Call WdgM_GetLocalStatus in a null core context
  08: VP (WdgM.ASR40.SWS_WdgM_00004.5)
      Det called with ErrorId WDGM_E_INV_POINTER (0x14U)
  09: Call WdgM_GetGlobalStatus in a null core context
  10: VP (WdgM.ASR40.SWS_WdgM_00004.5)
      Det called with ErrorId WDGM_E_INV_POINTER (0x14U)
  11: Call WdgM_PerformReset in a null core context
  12: VP (WdgM.ASR40.SWS_WdgM_00004.5)
      Det called with ErrorId WDGM_E_INV_POINTER (0x14U)
  13: Call WdgM_MainFunction in a null core context
  14: VP (WdgM.ASR40.SWS_WdgM_00004.5)
      Det called with ErrorId WDGM_E_INV_POINTER (0x14U)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1767</internalId></specobject>
    <specobject>
      <id>TS_WDGM_NullPtrGetAllExpired</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_02_DetDemOnOff/source/application/WdgM_ConTest_02_DetDemOnOff.c.m4</sourcefile>
      <sourceline>2756</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 


Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1768</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ImportedTypes_DEM</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte/source/application/WdgM_ComTest_ImportedTypes_Dem.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that the following types of module DEM (listed in WdgM.ASR40.SWS_WdgM_00011.1)
  are included: Dem_EventIdType, Dem_EventStatusType


Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP: Instances of the imported types of module DEM are defined for:
             Dem_EventIdType     Dem_EventId
             Dem_EventStatusType Dem_EventStatus


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00011.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1769</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ImportedTypes_Os</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte/source/application/WdgM_ComTest_ImportedTypes_Os.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that the following types of module Os (listed in WdgM.ASR40.SWS_WdgM_00011.2)
  are included: ApplicationType


Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP: Instances of the imported types of module Os are defined for:
             ApplicationType EBTest_Application


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00011.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1770</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ImportedTypes_StdTypes</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte/source/application/WdgM_ComTest_ImportedTypes_StdTypes.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that the following types of module Std_Types (listed in WdgM.ASR40.SWS_WdgM_00011.3)
  are included: Std_ReturnType, Std_VersionInfoType


Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP: Instances of the imported types of module Std_Types are defined for:
             Std_ReturnType      Std_Return
             Std_VersionInfoType Std_VersionInfo


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00011.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1771</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ImportedTypes_WdgIf</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte/source/application/WdgM_ComTest_ImportedTypes_WdgIf.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that the following types of module WdgIf (listed in WdgM.ASR40.SWS_WdgM_00011.4)
  are included: WdgIf_ModeType


Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP: Instances of the imported types of module WdgIf are defined for:
             WdgIf_ModeType      WdgIf_Mode


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00011.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1772</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_30137</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte/source/application/WdgM_ConTest_03_Rte.c.m4</sourcefile>
      <sourceline>102</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that the generated service description is according
to the WdgM configuration.

Test Object: None.
Test Precondition: 

The following supervision entities are configured:
WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1


Test Execution: 

Ts5-Process execution steps:
  01: Ts5 build step: Generate all files
  02: Compare generated System Description files
      with golden reference files
  03: Include comparison difference of 02 in this test
  04: VP
      If no difference in 03 exists, then nothing
      will be included and the test compiles

      If a difference exists in 03, then the gnu diff
      tool generates some characters which cannot be
      compiled which will be indicated by the ts5 environment.


Test Input: 

System Description reference files (WdgM_swc_interface.arxml and
WdgM_swc_internal.arxml) are provided in directory "reference"
and contains the following definition of the
Watchdog Manager Service for the configured Supervision Entities
WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1:

Service WdgM {
  ProvidePort WdgM_AliveSupervision alive_WdgMSupervisedEntity_0;
  ProvidePort WdgM_AliveSupervision alive_WdgMSupervisedEntity_1;
  ProvidePort WdgM_IndividualMode mode_WdgMSupervisedEntity_0;
  ProvidePort WdgM_IndividualMode mode_WdgMSupervisedEntity_1;
  InternalBehavior
  {
    RunnableEntity UpdateAliveCounter
    symbol "WdgM_UpdateAliveCounter"
    canbeInvokedConcurrently = TRUE

    RunnableEntity CheckpointReached
    symbol "WdgM_CheckpointReached"
    canbeInvokedConcurrently = TRUE

    PortArgument{port=alive_WdgMSupervisedEntity_0,
                 value.type= WdgM_SupervisedEntityIdType, value.value=0};
    PortArgument{port=alive_WdgMSupervisedEntity_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=1};
    IndirectAPI{port=mode_WdgMSupervisedEntity_0};
    IndirectAPI{port=mode_WdgMSupervisedEntity_1};
  };
};


Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00333</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00334</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00336</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00338</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1773</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30138</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte/source/application/WdgM_ConTest_03_Rte.c.m4</sourcefile>
      <sourceline>203</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that the API exported to RTE can be invoked by SW-Cs.

Test Object: None.
Test Precondition: 

The WdgM has the following configuration:

WdgM modes and configured Supervision Entites for Alive supervision:
  WdgMMode_0 (= initial mode and sleep mode):
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1


Test Execution: 

  01: Initialize test case and stubs
  02: Start Rte
  03: initialize WdgM
  04: Call CheckpointReached for WdgMAliveSupervision_0 / CP0_1
      via the generated Rte function
  05: Call WdgM_MainFunction()
  06: VP (WdgM.ASR40.WDGM333)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED
  07: Call CheckpointReached for WdgMAliveSupervision_1 / CP0_1
      via the generated Rte function
  08: Call WdgM_MainFunction()
  09: VP (WdgM.ASR40.WDGM333)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_Ok
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00333</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1774</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30139</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte/source/application/WdgM_ConTest_03_Rte.c.m4</sourcefile>
      <sourceline>319</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that mode transitions are reported correctly to the RTE.
This test depends on the previous execution of TS_WDGM_30138 because it
needs an already started RTE.

Test Object: None.
Test Precondition: 

TS_WDGM_30138 (Rte started, WdgM initialized)

The WdgM has the following configuration:

WdgM modes and configured Supervision Entites for Alive supervision:
  WdgMMode_0 (= initial mode and sleep mode):
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1


Test Execution: 

This test is executed with the following permutations:
   Parameter / Permutation      |    p0   |    p1   |
------------------------------------------|----------
WdgMImmediateReset              | true    | false   |

  01: Initialize test case and stubs
  03: Re-init WdgM
  03: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198, WdgM.ASR40.WDGM199)
     Rte reads the correct modes, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      global mode: WDGM_GLOBAL_STATUS_OK
  04: Call CheckpointReached for WdgMSupervisedEntity_0
      via the WdgM Api WdgM_CheckpointReached()
  05: Call WdgM_MainFunction()
  06: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198, WdgM.ASR40.WDGM199)
     Rte reads the correct modes, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      global mode: WDGM_GLOBAL_STATUS_FAILED
  07: Call WdgM_MainFunction()
  08: VP (WdgM.SWS_WdgM_00197,WdgM.SWS_WdgM_00198, WdgM.ASR40.WDGM199)
     Rte reads the correct modes, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  09: Call CheckpointReached for WdgMSupervisedEntity_0
      via the WdgM Api WdgM_CheckpointReached()
  10: Call WdgM_MainFunction()
  11: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198, WdgM.ASR40.WDGM199)
     Rte reads the correct modes, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  12: Call WdgM_MainFunction()
  13: VP
     In permutation p0:
       Mcu_PerformReset is called once
     In permutation p1:
       Mcu_PerformReset is not called
  13: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198, WdgM.ASR40.WDGM199, WdgM.ASR40.WDGM134)
     In permutation p0:
       global mode is not indicated to Rte, thus Rte reads the following modes
        WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
        WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
        global mode: WDGM_GLOBAL_STATUS_EXPIRED
     In permutation p1:
       global mode is indicated to Rte, thus Rte reads the following modes
        WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
        WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
        global mode: WDGM_GLOBAL_STATUS_STOPPED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1775</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_RteCheckpointIDs</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte/source/application/WdgM_ConTest_03_Rte_CheckpointIds.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that the generated Rte header file of a SW-Cs that is connected to
the WdgM Service Component provides the symbolic names for all
configured CheckpointIDs as it is done in the WdgM BSw header file.

Test Object: None.
Test Precondition: 

The following CheckpointId is configured for Supervision Entity WdgMSupervisedEntity_0:
Name: WdgMConf_WdgMCheckpoint_CP0_1
Value: 0

The following CheckpointId is configured for Supervision Entity WdgMSupervisedEntity_1:
Name: WdgMConf_WdgMCheckpoint_CP1_1
Value: 0


Test Execution: 

  01: Rte header file of a SW-Cs that is connected to
      the WdgM Service Component is included and WdgM.h is never included
  02: VP (WDGM.EB.RteCheckpointIDs)
      A macro WdgMConf_WdgMCheckpoint_CP0_1 is defined and has value 0
  03: VP (WDGM.EB.RteCheckpointIDs)
      A macro WdgMConf_WdgMCheckpoint_CP1_1 is defined and has value 0


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.RteCheckpointIDs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1776</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ASR43_RTEServiceTypes</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_ASR43/source/application/WdgM_ComTest_RteTypes.c</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that the following types are generated by the service
  component of WdgM


Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP: (WdgM.SWS_WdgM_00356)
      Check that RTE generates the type WdgM_SupervisedEntityIdType as uint16
  02: VP: (WdgM.SWS_WdgM_00357)
      Check that RTE generates the type WdgM_CheckpointIdType as uint16
  03: VP: (WdgM.SWS_WdgM_00359)
      Check that RTE generates the type WdgM_LocalStatusType as uint8
  04: VP: (WdgM.SWS_WdgM_00359)
      Check that the range for WdgM_LocalStatusType is correctly defined
  05: VP: (WdgM.SWS_WdgM_00360)
      Check that RTE generates the type WdgM_GlobalStatusType as uint8
  06: VP: (WdgM.SWS_WdgM_00360)
      Check that the range for WdgM_GlobalStatusType is correctly defined
  07: VP: (WdgM.SWS_WdgM_00358)
      Check that RTE generates the type WdgM_ModeType as uint8
  08: VP: (WdgM.SWS_WdgM_00334)
       Check that the mode declaration group is correctly defined
  - SUPERVISION_OK             0U
  - SUPERVISION_FAILED         1U
  - SUPERVISION_EXPIRED        2U
  - SUPERVISION_STOPPED        3U
  - SUPERVISION_DEACTIVATED    4U

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00356</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00357</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00359</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00360</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00358</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00334</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1777</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ASR43_ServiceGeneration</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_ASR43/source/application/WdgM_ConTest_03_Rte_ASR43.c.m4</sourcefile>
      <sourceline>105</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that the generated service description is according
to the WdgM configuration.

Test Object: None.
Test Precondition: 

The following supervision entities are configured:
WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1


Test Execution: 

Ts5-Process execution steps:
  01: Ts5 build step: Generate all files
  02: Compare generated System Description files
      with golden reference files
  03: Include comparison difference of 02 in this test
  04: VP
      If no difference in 03 exists, then nothing
      will be included and the test compiles

      If a difference exists in 03, then the gnu diff
      tool generates some characters which cannot be
      compiled which will be indicated by the ts5 environment.


Test Input: 

System Description reference files (WdgM_swc_interface.arxml and
WdgM_swc_internal.arxml) are provided in directory "reference"
and contains the following definition of the
Watchdog Manager Service for the configured Supervision Entities
WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1:

Service WdgM {
  ProvidePort WdgM_GlobalMode globalMode;
  ProvidePort WdgM_GlobalSupervision globalSupervision;
  ProvidePort WdgM_LocalSupervision localSupervision_WdgMSupervisedEntity_0_CP0_1;
  ProvidePort WdgM_LocalSupervisionStatus localSupervisionStatus_WdgMSupervisedEntity_0;
  ProvidePort WdgM_LocalMode mode_WdgMSupervisedEntity_0;
  ProvidePort WdgM_LocalSupervision localSupervision_WdgMSupervisedEntity_1_CP1_1;
  ProvidePort WdgM_LocalSupervisionStatus localSupervisionStatus_WdgMSupervisedEntity_1;
  ProvidePort WdgM_LocalMode mode_WdgMSupervisedEntity_1;
  InternalBehavior
  {
    RunnableEntity CheckpointReached
    symbol "WdgM_Rte_CheckpointReached"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetFirstExpiredSEID
    symbol "WdgM_Rte_GetFirstExpiredSEID"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetGlobalStatus
    symbol "WdgM_Rte_GetGlobalStatus"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetMode
    symbol "WdgM_Rte_GetMode"
    canbeInvokedConcurrently = TRUE

    RunnableEntity PerformReset
    symbol "WdgM_Rte_PerformReset"
    canbeInvokedConcurrently = FALSE

    RunnableEntity SetMode
    symbol "WdgM_Rte_SetMode"
    canbeInvokedConcurrently = FALSE

    RunnableEntity GetLocalStatus
    symbol "WdgM_Rte_GetLocalStatus"
    canbeInvokedConcurrently = TRUE

    PortArgument{port=localSupervision_WdgMSupervisedEntity_0_CP0_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=0,
                 value.type= WdgM_CheckpointIdType, value.value=0};
    PortArgument{port=localSupervisionStatus_WdgMSupervisedEntity_0,
                 value.type= WdgM_SupervisedEntityIdType, value.value=0};
    PortArgument{port=localSupervision_WdgMSupervisedEntity_1_CP1_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=1,
                 value.type= WdgM_CheckpointIdType, value.value=0};
    PortArgument{port=localSupervisionStatus_WdgMSupervisedEntity_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=1};
    IndirectAPI{port=mode_WdgMSupervisedEntity_0};
    IndirectAPI{port=mode_WdgMSupervisedEntity_1};
    IndirectAPI{port=globalMode};
  };
};


Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00333</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00334</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1778</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ASR43_CheckpointReachedService</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_ASR43/source/application/WdgM_ConTest_03_Rte_ASR43.c.m4</sourcefile>
      <sourceline>235</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that CheckpointReached service is called via RTE.

Test Object: None.
Test Precondition: 

The WdgM has the following configuration:

WdgM modes and configured Supervision Entites for Alive supervision:
  WdgMMode_0 (= initial mode and sleep mode):
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1

  Test_Mode:
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     2
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1


Test Execution: 

  01: Initialize test case and stubs
  02: Start Rte
  03: initialize WdgM
  04: Call CheckpointReached for WdgMAliveSupervision_0 / CP0_1
      via the generated Rte function
  05: Call WdgM_MainFunction()
  06: VP (WdgM.ASR40.WDGM333)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED
  07: Call CheckpointReached for WdgMAliveSupervision_1 / CP0_1
      via the generated Rte function
  08: Call WdgM_MainFunction()
  09: VP (WdgM.ASR40.WDGM333)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_Ok
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1779</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ASR43_SupervisionStatusService</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_ASR43/source/application/WdgM_ConTest_03_Rte_ASR43.c.m4</sourcefile>
      <sourceline>370</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that mode transitions are reported correctly to the RTE.
Check that getting the local (WdgM_LocalSupervision interface)
and global status (GetGlobalStatus from WdgM_GlobalSupervision interface)
is done correctly via RTE service.
This test depends on the previous execution of TS_WDGM_ASR43_CheckpointReachedService because it
needs an already started RTE.

Test Object: None.
Test Precondition: 

TS_WDGM_ASR43_CheckpointReachedService (Rte started, WdgM initialized)

The WdgM has the following configuration:

WdgM modes and configured Supervision Entites for Alive supervision:
  WdgMMode_0 (= initial mode and sleep mode):
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1

  Test_Mode:
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     2
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1


Test Execution: 

This test is executed with the following permutations:
   Parameter / Permutation      |    p0   |    p1   |
------------------------------------------|----------
WdgMImmediateReset              | true    | false   |

  01: Initialize test case and stubs
  02: Re-init WdgM
  03: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198)
     Rte reads the correct modes via mode switch ports, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      global mode: WDGM_GLOBAL_STATUS_OK
  04: VP (WdgM.SWS_WdgM_91004, WdgM.SWS_WdgM_91001)
     Rte reads the correct modes via WdgM_LocalSupervision and WdgM_GlobalSupervision
     interfaces, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      global mode: WDGM_GLOBAL_STATUS_OK
  05: Call CheckpointReached for WdgMSupervisedEntity_0
      via the WdgM Api WdgM_CheckpointReached()
  06: Call WdgM_MainFunction()
  07: VP (WdgM.SWS_WdgM_001977, WdgM.SWS_WdgM_00198)
     Rte reads the correct modes via mode switch ports, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      global mode: WDGM_GLOBAL_STATUS_FAILED
  08: VP (WdgM.SWS_WdgM_91004, WdgM.SWS_WdgM_91001)
     Rte reads the correct modes via WdgM_LocalSupervision and WdgM_GlobalSupervision
     interfaces, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      global mode: WDGM_GLOBAL_STATUS_FAILED
  09: Call WdgM_MainFunction()
  10: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198)
     Rte reads the correct modes via mode switch ports, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  11: VP (WdgM.SWS_WdgM_91004, WdgM.SWS_WdgM_91001)
     Rte reads the correct modes via WdgM_LocalSupervision and WdgM_GlobalSupervision
     interfaces, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  12: Call CheckpointReached for WdgMSupervisedEntity_0
      via the WdgM Api WdgM_CheckpointReached()
  13: Call WdgM_MainFunction()
  14: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198)
     Rte reads the correct modes via mode switch ports, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  15: VP (WdgM.SWS_WdgM_91004, WdgM.SWS_WdgM_91001)
     Rte reads the correct modes via WdgM_LocalSupervision and WdgM_GlobalSupervision
     interfaces, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  16: Call WdgM_MainFunction()
  17: VP
     In permutation p0:
       Mcu_PerformReset is called once
     In permutation p1:
       Mcu_PerformReset is not called
  18: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198, WdgM.ASR40.WDGM199, WdgM.ASR40.WDGM134)
     In permutation p0:
       global mode is not indicated to Rte, thus Rte reads the following modes
        WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
        WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
        global mode: WDGM_GLOBAL_STATUS_EXPIRED
     In permutation p1:
       global mode is indicated to Rte, thus Rte reads the following modes
        WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
        WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
        global mode: WDGM_GLOBAL_STATUS_STOPPED
  19:  VP (WdgM.SWS_WdgM_91004, WdgM.SWS_WdgM_91001)
     Rte reads the correct modes via WdgM_LocalSupervision and WdgM_GlobalSupervision
     interfaces, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_STOPPED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1780</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ASR43_GlobalSupervisionService</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_ASR43/source/application/WdgM_ConTest_03_Rte_ASR43.c.m4</sourcefile>
      <sourceline>650</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that the following operations from WdgM_GlobalSupervision:
 - GetFirstExpiredSEID
 - GetGlobalStatus
 - GetMode
 - SetMode
 - PerformReset
are called correctly from RTE.
This test depends on the previous execution of TS_WDGM_ASR43_CheckpointReachedService because it
needs an already started RTE.

Test Object: None.
Test Precondition: 

TS_WDGM_ASR43_CheckpointReachedService (Rte started, WdgM initialized)

The WdgM has the following configuration:

WdgM modes and configured Supervision Entites for Alive supervision:
  WdgMMode_0 (= initial mode and sleep mode):
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1

  Test_Mode:
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     2
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1


Test Execution: 

This test is executed with the following permutations:
   Parameter / Permutation      |    p0   |    p1   |
------------------------------------------|----------
WdgMImmediateReset              | true    | false   |

  01: Initialize test case and stubs
  02: Re-init WdgM
  03: Call CheckpointReached for WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1
      via the WdgM Api WdgM_CheckpointReached()
  04: VP (WdgM.SWS_WdgM_91001)
     Rte reads the correct mode of WdgM via GetMode interface that is:
     WdgMMode_0
  05: VP (WdgM.SWS_WdgM_91001)
      Switch the WdgM mode via RTE, using iterface SetMode
  06: Call WdgM_MainFunction()
  07: The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_OK
  08: VP (WdgM.SWS_WdgM_91001)
     Rte reads the correct mode of WdgM via GetMode interface that is:
     WdgMMode_0
  09: Call CheckpointReached for WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1
      via the WdgM Api WdgM_CheckpointReached().
      For WdgMSupervisedEntity_0 only one of the two Alive Indications are given
  10: Call WdgM_MainFunction()
  11: The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED
  12: Call CheckpointReached for WdgMSupervisedEntity_1
      via the WdgM Api WdgM_CheckpointReached().
  13: Call WdgM_MainFunction()
  14: The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_EXPIRED
  15: VP (WdgM.SWS_WdgM_91001)
      RTE gets the first expired SE via GetFirstExpiredSEID interface
  16: VP (WdgM.SWS_WdgM_91001)
      RTE trigger a reset via PerformReset interface
      Mcu_PerformReset is called once


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1781</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ASR43_RTEServiceTypes_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_ASR43_Multicore/source/application/WdgM_ComTest_RteTypes.c</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that the following types are generated by the service
  component of WdgM


Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP: (WdgM.SWS_WdgM_00356)
      Check that RTE generates the type WdgM_SupervisedEntityIdType as uint16
  02: VP: (WdgM.SWS_WdgM_00357)
      Check that RTE generates the type WdgM_CheckpointIdType as uint16
  03: VP: (WdgM.SWS_WdgM_00359)
      Check that RTE generates the type WdgM_LocalStatusType as uint8
  04: VP: (WdgM.SWS_WdgM_00359)
      Check that the range for WdgM_LocalStatusType is correctly defined
  05: VP: (WdgM.SWS_WdgM_00360)
      Check that RTE generates the type WdgM_GlobalStatusType as uint8
  06: VP: (WdgM.SWS_WdgM_00360)
      Check that the range for WdgM_GlobalStatusType is correctly defined
  07: VP: (WdgM.SWS_WdgM_00358)
      Check that RTE generates the type WdgM_ModeType as uint8
  08: VP: (WdgM.SWS_WdgM_00334)
       Check that the mode declaration group is correctly defined
  - SUPERVISION_OK             0U
  - SUPERVISION_FAILED         1U
  - SUPERVISION_EXPIRED        2U
  - SUPERVISION_STOPPED        3U
  - SUPERVISION_DEACTIVATED    4U

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00356</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00357</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00359</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00360</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00358</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00334</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1782</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ASR43_ServiceGeneration_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_ASR43_Multicore/source/application/WdgM_ConTest_03_Rte_ASR43_Multicore.c.m4</sourcefile>
      <sourceline>127</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that the generated service description is according
to the WdgM configuration.

Test Object: None.
Test Precondition: 

The following supervision entities are configured:
WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1


Test Execution: 

Ts5-Process execution steps:
  01: Ts5 build step: Generate all files
  02: Compare generated System Description files
      with golden reference files
  03: Include comparison difference of 02 in this test
  04: VP
      If no difference in 03 exists, then nothing
      will be included and the test compiles

      If a difference exists in 03, then the gnu diff
      tool generates some characters which cannot be
      compiled which will be indicated by the ts5 environment.


Test Input: 

System Description reference files (WdgM_swc_interface.arxml and
WdgM_swc_internal.arxml) are provided in directory "reference"
and contains the following definition of the
Watchdog Manager Service for the configured Supervision Entities
WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1:

Service WdgM {
  ProvidePort WdgM_GlobalMode globalMode;
  ProvidePort WdgM_GlobalSupervision globalSupervision;
  ProvidePort WdgM_LocalSupervision localSupervision_WdgMSupervisedEntity_0_CP0_1;
  ProvidePort WdgM_LocalSupervisionStatus localSupervisionStatus_WdgMSupervisedEntity_0;
  ProvidePort WdgM_LocalMode mode_WdgMSupervisedEntity_0;
  ProvidePort WdgM_LocalSupervision localSupervision_WdgMSupervisedEntity_1_CP1_1;
  ProvidePort WdgM_LocalSupervisionStatus localSupervisionStatus_WdgMSupervisedEntity_1;
  ProvidePort WdgM_LocalMode mode_WdgMSupervisedEntity_1;
  InternalBehavior
  {
    RunnableEntity CheckpointReached
    symbol "WdgM_Rte_CheckpointReached"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetFirstExpiredSEID
    symbol "WdgM_Rte_GetFirstExpiredSEID"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetGlobalStatus
    symbol "WdgM_Rte_GetGlobalStatus"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetMode
    symbol "WdgM_Rte_GetMode"
    canbeInvokedConcurrently = TRUE

    RunnableEntity PerformReset
    symbol "WdgM_Rte_PerformReset"
    canbeInvokedConcurrently = FALSE

    RunnableEntity SetMode
    symbol "WdgM_Rte_SetMode"
    canbeInvokedConcurrently = FALSE

    RunnableEntity GetLocalStatus
    symbol "WdgM_Rte_GetLocalStatus"
    canbeInvokedConcurrently = TRUE

    PortArgument{port=localSupervision_WdgMSupervisedEntity_0_CP0_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=0,
                 value.type= WdgM_CheckpointIdType, value.value=0};
    PortArgument{port=localSupervisionStatus_WdgMSupervisedEntity_0,
                 value.type= WdgM_SupervisedEntityIdType, value.value=0};
    PortArgument{port=localSupervision_WdgMSupervisedEntity_1_CP1_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=1,
                 value.type= WdgM_CheckpointIdType, value.value=0};
    PortArgument{port=localSupervisionStatus_WdgMSupervisedEntity_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=1};
    IndirectAPI{port=mode_WdgMSupervisedEntity_0};
    IndirectAPI{port=mode_WdgMSupervisedEntity_1};
    IndirectAPI{port=globalMode};
  };
};


Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00333</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00334</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1783</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ASR43_CheckpointReachedService_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_ASR43_Multicore/source/application/WdgM_ConTest_03_Rte_ASR43_Multicore.c.m4</sourcefile>
      <sourceline>257</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that CheckpointReached service is called via RTE.

Test Object: None.
Test Precondition: 

The WdgM has the following configuration:

WdgM modes and configured Supervision Entites for Alive supervision:
  WdgMMode_0 (= initial mode and sleep mode):
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1

  Test_Mode:
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     2
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1


Test Execution: 

  01: Initialize test case and stubs
  02: Start Rte
  03: initialize WdgM
  04: Call CheckpointReached for WdgMAliveSupervision_0 / CP0_1
      via the generated Rte function
  05: Call WdgM_MainFunction()
  06: VP (WdgM.ASR40.WDGM333)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED
  07: Call CheckpointReached for WdgMAliveSupervision_1 / CP0_1
      via the generated Rte function
  08: Call WdgM_MainFunction()
  09: VP (WdgM.ASR40.WDGM333)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_Ok
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1784</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ASR43_SupervisionStatusService_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_ASR43_Multicore/source/application/WdgM_ConTest_03_Rte_ASR43_Multicore.c.m4</sourcefile>
      <sourceline>396</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that mode transitions are reported correctly to the RTE.
Check that getting the local (WdgM_LocalSupervision interface)
and global status (GetGlobalStatus from WdgM_GlobalSupervision interface)
is done correctly via RTE service.
This test depends on the previous execution of TS_WDGM_ASR43_CheckpointReachedService_Multicore because it
needs an already started RTE.

Test Object: None.
Test Precondition: 

TS_WDGM_ASR43_CheckpointReachedService_Multicore (Rte started, WdgM initialized)

The WdgM has the following configuration:

WdgM modes and configured Supervision Entites for Alive supervision:
  WdgMMode_0 (= initial mode and sleep mode):
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1

  Test_Mode:
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     2
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1


Test Execution: 

This test is executed with the following permutations:
   Parameter / Permutation      |    p0   |    p1   |
------------------------------------------|----------
WdgMImmediateReset              | true    | false   |

  01: Initialize test case and stubs
  02: Re-init WdgM
  03: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198)
     Rte reads the correct modes via mode switch ports, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      global mode: WDGM_GLOBAL_STATUS_OK
  04: VP (WdgM.SWS_WdgM_91004, WdgM.SWS_WdgM_91001)
     Rte reads the correct modes via WdgM_LocalSupervision and WdgM_GlobalSupervision
     interfaces, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      global mode: WDGM_GLOBAL_STATUS_OK
  05: Call CheckpointReached for WdgMSupervisedEntity_0
      via the WdgM Api WdgM_CheckpointReached()
  06: Call WdgM_MainFunction()
  07: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198)
     Rte reads the correct modes via mode switch ports, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      global mode: WDGM_GLOBAL_STATUS_FAILED
  08: VP (WdgM.SWS_WdgM_91004, WdgM.SWS_WdgM_91001)
     Rte reads the correct modes via WdgM_LocalSupervision and WdgM_GlobalSupervision
     interfaces, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      global mode: WDGM_GLOBAL_STATUS_FAILED
  09: Call WdgM_MainFunction()
  10: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198)
     Rte reads the correct modes via mode switch ports, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  11: VP (WdgM.SWS_WdgM_91004, WdgM.SWS_WdgM_91001)
     Rte reads the correct modes via WdgM_LocalSupervision and WdgM_GlobalSupervision
     interfaces, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  12: Call CheckpointReached for WdgMSupervisedEntity_0
      via the WdgM Api WdgM_CheckpointReached()
  13: Call WdgM_MainFunction()
  14: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198)
     Rte reads the correct modes via mode switch ports, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  15: VP (WdgM.SWS_WdgM_91004, WdgM.SWS_WdgM_91001)
     Rte reads the correct modes via WdgM_LocalSupervision and WdgM_GlobalSupervision
     interfaces, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  16: Call WdgM_MainFunction()
  17: VP
     In permutation p0:
       Mcu_PerformReset is called once
     In permutation p1:
       Mcu_PerformReset is not called
  18: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198, WdgM.ASR40.WDGM199, WdgM.ASR40.WDGM134)
     In permutation p0:
       global mode is not indicated to Rte, thus Rte reads the following modes
        WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
        WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
        global mode: WDGM_GLOBAL_STATUS_EXPIRED
     In permutation p1:
       global mode is indicated to Rte, thus Rte reads the following modes
        WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
        WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
        global mode: WDGM_GLOBAL_STATUS_STOPPED
  19:  VP (WdgM.SWS_WdgM_91004, WdgM.SWS_WdgM_91001)
     Rte reads the correct modes via WdgM_LocalSupervision and WdgM_GlobalSupervision
     interfaces, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_STOPPED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1785</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ASR43_GlobalSupervisionService_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_ASR43_Multicore/source/application/WdgM_ConTest_03_Rte_ASR43_Multicore.c.m4</sourcefile>
      <sourceline>713</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that the following operations from WdgM_GlobalSupervision:
 - GetFirstExpiredSEID
 - GetGlobalStatus
 - GetMode
 - SetMode
 - PerformReset
are called correctly from RTE.
This test depends on the previous execution of TS_WDGM_ASR43_CheckpointReachedService_Multicore because it
needs an already started RTE.

Test Object: None.
Test Precondition: 

TS_WDGM_ASR43_CheckpointReachedService_Multicore (Rte started, WdgM initialized)

The WdgM has the following configuration:

WdgM modes and configured Supervision Entites for Alive supervision:
  WdgMMode_0 (= initial mode and sleep mode):
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1

  Test_Mode:
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     2
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1


Test Execution: 

This test is executed with the following permutations:
   Parameter / Permutation      |    p0   |    p1   |
------------------------------------------|----------
WdgMImmediateReset              | true    | false   |

  01: Initialize test case and stubs
  02: Re-init WdgM
  03: Call CheckpointReached for WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1
      via the WdgM Api WdgM_CheckpointReached()
  04: VP (WdgM.SWS_WdgM_91001)
     Rte reads the correct mode of WdgM via GetMode interface that is:
     WdgMMode_0
  05: VP (WdgM.SWS_WdgM_91001)
      Switch the WdgM mode via RTE, using iterface SetMode
  06: Call WdgM_MainFunction()
  07: The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_OK
  08: VP (WdgM.SWS_WdgM_91001)
     Rte reads the correct mode of WdgM via GetMode interface that is:
     WdgMMode_0
  09: Call CheckpointReached for WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1
      via the WdgM Api WdgM_CheckpointReached().
      For WdgMSupervisedEntity_0 only one of the two Alive Indications are given
  10: Call WdgM_MainFunction()
  11: The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED
  12: Call CheckpointReached for WdgMSupervisedEntity_1
      via the WdgM Api WdgM_CheckpointReached().
  13: Call WdgM_MainFunction()
  14: The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_EXPIRED
  15: VP (WdgM.SWS_WdgM_91001)
      RTE gets the first expired SE via GetFirstExpiredSEID interface
  16: VP (WdgM.SWS_WdgM_91001)
      RTE trigger a reset via PerformReset interface
      Mcu_PerformReset is called once


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1786</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ASR43_RTEServiceTypes_Supervisor</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_ASR43_with_Supervisor/source/application/WdgM_ComTest_RteTypes.c</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that the following types are generated by the service
  component of WdgM


Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP: (WdgM.SWS_WdgM_00356)
      Check that RTE generates the type WdgM_SupervisedEntityIdType as uint16
  02: VP: (WdgM.SWS_WdgM_00357)
      Check that RTE generates the type WdgM_CheckpointIdType as uint16
  03: VP: (WdgM.SWS_WdgM_00359)
      Check that RTE generates the type WdgM_LocalStatusType as uint8
  04: VP: (WdgM.SWS_WdgM_00359)
      Check that the range for WdgM_LocalStatusType is correctly defined
  05: VP: (WdgM.SWS_WdgM_00360)
      Check that RTE generates the type WdgM_GlobalStatusType as uint8
  06: VP: (WdgM.SWS_WdgM_00360)
      Check that the range for WdgM_GlobalStatusType is correctly defined
  07: VP: (WdgM.SWS_WdgM_00358)
      Check that RTE generates the type WdgM_ModeType as uint8
  08: VP: (WdgM.SWS_WdgM_00334)
       Check that the mode declaration group is correctly defined
  - SUPERVISION_OK             0U
  - SUPERVISION_FAILED         1U
  - SUPERVISION_EXPIRED        2U
  - SUPERVISION_STOPPED        3U
  - SUPERVISION_DEACTIVATED    4U

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00356</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00357</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00359</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00360</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00358</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00334</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1787</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ASR43_ServiceGeneration_Supervisor</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_ASR43_with_Supervisor/source/application/WdgM_ConTest_03_Rte_ASR43_with_Supervisor.c.m4</sourcefile>
      <sourceline>140</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that the generated service description is according
to the WdgM configuration.

Test Object: None.
Test Precondition: 

The following supervision entities are configured:
WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1


Test Execution: 

Ts5-Process execution steps:
  01: Ts5 build step: Generate all files
  02: Compare generated System Description files
      with golden reference files
  03: Include comparison difference of 02 in this test
  04: VP
      If no difference in 03 exists, then nothing
      will be included and the test compiles

      If a difference exists in 03, then the gnu diff
      tool generates some characters which cannot be
      compiled which will be indicated by the ts5 environment.


Test Input: 

System Description reference files (WdgM_swc_interface.arxml and
WdgM_swc_internal.arxml) are provided in directory "reference"
and contains the following definition of the
Watchdog Manager Service for the configured Supervision Entities
WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1:

Service WdgM {
  ProvidePort WdgM_GlobalMode globalMode;
  ProvidePort WdgM_GlobalSupervision globalSupervision;
  ProvidePort WdgM_LocalSupervision localSupervision_WdgMSupervisedEntity_0_CP0_1;
  ProvidePort WdgM_LocalSupervisionStatus localSupervisionStatus_WdgMSupervisedEntity_0;
  ProvidePort WdgM_LocalMode mode_WdgMSupervisedEntity_0;
  ProvidePort WdgM_LocalSupervision localSupervision_WdgMSupervisedEntity_1_CP1_1;
  ProvidePort WdgM_LocalSupervisionStatus localSupervisionStatus_WdgMSupervisedEntity_1;
  ProvidePort WdgM_LocalMode mode_WdgMSupervisedEntity_1;
  InternalBehavior
  {
    RunnableEntity CheckpointReached
    symbol "WdgM_Rte_CheckpointReached"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetFirstExpiredSEID
    symbol "WdgM_Rte_GetFirstExpiredSEID"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetGlobalStatus
    symbol "WdgM_Rte_GetGlobalStatus"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetMode
    symbol "WdgM_Rte_GetMode"
    canbeInvokedConcurrently = TRUE

    RunnableEntity PerformReset
    symbol "WdgM_Rte_PerformReset"
    canbeInvokedConcurrently = FALSE

    RunnableEntity SetMode
    symbol "WdgM_Rte_SetMode"
    canbeInvokedConcurrently = FALSE

    RunnableEntity GetLocalStatus
    symbol "WdgM_Rte_GetLocalStatus"
    canbeInvokedConcurrently = TRUE

    PortArgument{port=localSupervision_WdgMSupervisedEntity_0_CP0_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=0,
                 value.type= WdgM_CheckpointIdType, value.value=0};
    PortArgument{port=localSupervisionStatus_WdgMSupervisedEntity_0,
                 value.type= WdgM_SupervisedEntityIdType, value.value=0};
    PortArgument{port=localSupervision_WdgMSupervisedEntity_1_CP1_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=1,
                 value.type= WdgM_CheckpointIdType, value.value=0};
    PortArgument{port=localSupervisionStatus_WdgMSupervisedEntity_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=1};
    IndirectAPI{port=mode_WdgMSupervisedEntity_0};
    IndirectAPI{port=mode_WdgMSupervisedEntity_1};
    IndirectAPI{port=globalMode};
  };
};


Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00333</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00334</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1788</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ASR43_CheckpointReachedService_Supervisor</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_ASR43_with_Supervisor/source/application/WdgM_ConTest_03_Rte_ASR43_with_Supervisor.c.m4</sourcefile>
      <sourceline>270</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that CheckpointReached service is called via RTE.

Test Object: None.
Test Precondition: 

The WdgM has the following configuration:

WdgM modes and configured Supervision Entites for Alive supervision:
  WdgMMode_0 (= initial mode and sleep mode):
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1

  Test_Mode:
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     2
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1


Test Execution: 

  01: Initialize test case and stubs
  02: Start Rte
  03: initialize WdgM
  04: Call CheckpointReached for WdgMAliveSupervision_0 / CP0_1
      via the generated Rte function
  05: Call WdgM_MainFunction()
  06: VP (WdgM.ASR40.WDGM333)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED
  07: Call CheckpointReached for WdgMAliveSupervision_1 / CP0_1
      via the generated Rte function
  08: Call WdgM_MainFunction()
  09: VP (WdgM.ASR40.WDGM333)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_Ok
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1789</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ASR43_SupervisionStatusService_Supervisor</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_ASR43_with_Supervisor/source/application/WdgM_ConTest_03_Rte_ASR43_with_Supervisor.c.m4</sourcefile>
      <sourceline>404</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that mode transitions are reported correctly to the Supervisor.
Check that getting the local (WdgM_LocalSupervision interface)
and global status (GetGlobalStatus from WdgM_GlobalSupervision interface)
is done correctly via RTE.
This test depends on the previous execution of TS_WDGM_ASR43_CheckpointReachedService_Supervisor because it
needs an already started RTE.

Test Object: None.
Test Precondition: 

TS_WDGM_ASR43_CheckpointReachedService_Supervisor (Rte started, WdgM initialized)

The WdgM has the following configuration:

WdgM modes and configured Supervision Entities for Alive supervision:
  WdgMMode_0 (= initial mode and sleep mode):
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1

  Test_Mode:
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     2
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1


Test Execution: 

This test is executed with the following permutations:
   Parameter / Permutation      |    p0   |    p1   |
------------------------------------------|----------
WdgMImmediateReset              | true    | false   |

  01: Initialize test case and stubs
  02: Re-init WdgM via the Supervisor GetExpectedInitState callout
  03: VP (WDGM.EB.TIMEPM.WDGM020107_Conf, WDGM.EB.TIMEPM.WDGM020108_Conf)
     SE should have initialized values. Get values via the
     Supervisor callouts WdgMIndividualModeSwitchCallout and
     WdgMGlobalModeSwitchCallout gets the correct modes, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      global mode: WDGM_GLOBAL_STATUS_OK
  04: VP (WdgM.SWS_WdgM_91004, WdgM.SWS_WdgM_91001)
     RTE reads the correct modes via WdgM_LocalSupervision and WdgM_GlobalSupervision
     interfaces, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      global mode: WDGM_GLOBAL_STATUS_OK
  05: Call CheckpointReached for WdgMSupervisedEntity_0
      via the WdgM Api WdgM_CheckpointReached()
  06: Call WdgM_MainFunction()
  07: VP (WDGM.EB.TIMEPM.WDGM020107_Conf, WDGM.EB.TIMEPM.WDGM020108_Conf)
     Supervisor callouts WdgMIndividualModeSwitchCallout and
     WdgMGlobalModeSwitchCallout gets the correct modes, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      global mode: WDGM_GLOBAL_STATUS_FAILED
  08: VP (WdgM.SWS_WdgM_91004, WdgM.SWS_WdgM_91001)
     Rte reads the correct modes via WdgM_LocalSupervision and WdgM_GlobalSupervision
     interfaces, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      global mode: WDGM_GLOBAL_STATUS_FAILED
  09: Call WdgM_MainFunction()
  10: VP (WDGM.EB.TIMEPM.WDGM020107_Conf, WDGM.EB.TIMEPM.WDGM020108_Conf)
     Supervisor callouts WdgMIndividualModeSwitchCallout and
     WdgMGlobalModeSwitchCallout gets the correct modes, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  11: VP (WdgM.SWS_WdgM_91004, WdgM.SWS_WdgM_91001)
     Rte reads the correct modes via WdgM_LocalSupervision and WdgM_GlobalSupervision
     interfaces, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  12: Call CheckpointReached for WdgMSupervisedEntity_0
      via the WdgM Api WdgM_CheckpointReached()
  13: Call WdgM_MainFunction()
  14: VP (WDGM.EB.TIMEPM.WDGM020107_Conf, WDGM.EB.TIMEPM.WDGM020108_Conf)
     Supervisor callouts WdgMIndividualModeSwitchCallout and
     WdgMGlobalModeSwitchCallout gets the correct modes, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  15: VP (WdgM.SWS_WdgM_91004, WdgM.SWS_WdgM_91001)
     Rte reads the correct modes via WdgM_LocalSupervision and WdgM_GlobalSupervision
     interfaces, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  16: Call WdgM_MainFunction()
  17: VP
     In permutation p0:
       Mcu_PerformReset is called once
     In permutation p1:
       Mcu_PerformReset is not called
  18: VP (WDGM.EB.TIMEPM.WDGM020107_Conf, WDGM.EB.TIMEPM.WDGM020108_Conf, WdgM.ASR40.WDGM199, WdgM.ASR40.WDGM134)
     In permutation p0:
       status is not indicated to due to immediate reset
     In permutation p1:
       global mode is indicated to Rte, thus Rte reads the following modes
        WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
        WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
        global mode: WDGM_GLOBAL_STATUS_STOPPED
  19:  VP (WdgM.SWS_WdgM_91004, WdgM.SWS_WdgM_91001)
     Rte reads the correct modes via WdgM_LocalSupervision and WdgM_GlobalSupervision
     interfaces, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_STOPPED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020107_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020108_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1790</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ASR43_GlobalSupervisionService_Supervisor</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_ASR43_with_Supervisor/source/application/WdgM_ConTest_03_Rte_ASR43_with_Supervisor.c.m4</sourcefile>
      <sourceline>682</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that the following operations from WdgM_GlobalSupervision:
 - GetFirstExpiredSEID
 - GetGlobalStatus
 - GetMode
are called correctly from RTE and
 - SetMode
 - PerformReset
are called correctly from RTE and authorized via Supervisor.
This test depends on the previous execution of TS_WDGM_ASR43_CheckpointReachedService_Supervisor because it
needs an already started RTE.

Test Object: None.
Test Precondition: 

TS_WDGM_ASR43_CheckpointReachedService_Supervisor (Rte started, WdgM initialized)

The WdgM has the following configuration:

WdgM modes and configured Supervision Entites for Alive supervision:
  WdgMMode_0 (= initial mode and sleep mode):
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1

  Test_Mode:
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     2
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1


Test Execution: 

This test is executed with the following permutations:
   Parameter / Permutation      |    p0   |    p1   |
------------------------------------------|----------
WdgMImmediateReset              | true    | false   |

  01: Initialize test case and stubs
  02: Re-init WdgM
  03: Call CheckpointReached for WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1
      via the WdgM Api WdgM_CheckpointReached()
  04: VP (WdgM.SWS_WdgM_91001)
     Rte reads the correct mode of WdgM via GetMode interface that is:
     WdgMMode_0
  05: VP (WDGM.EB.TIMEPM.WDGM020117_Conf)
      Switch the WdgM mode via Supervisor, using WdgMSetModeRedirectionCallout
  06: Call WdgM_MainFunction()
  07: The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_OK
  08: VP (WdgM.SWS_WdgM_91001)
     Rte reads the correct mode of WdgM via GetMode interface that is:
     WdgMMode_0
  09: Call CheckpointReached for WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1
      via the WdgM Api WdgM_CheckpointReached().
      For WdgMSupervisedEntity_0 only one of the two Alive Indications are given
  10: Call WdgM_MainFunction()
  11: The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED
  12: Call CheckpointReached for WdgMSupervisedEntity_1
      via the WdgM Api WdgM_CheckpointReached().
  13: Call WdgM_MainFunction()
  14: The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_EXPIRED
  15: VP (WdgM.SWS_WdgM_91001)
      RTE gets the first expired SE via GetFirstExpiredSEID interface
  16: VP (WdgM.SWS_WdgM_91001, WDGM.EB.TIMEPM.WDGM020105_Conf)
      RTE trigger a reset via PerformReset interface
      Supervisor authorize the reset via WdgMIsPerformResetCallout
      Mcu_PerformReset is called once


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020105_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1791</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ImportedTypes_DEM_multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_Multicore/source/application/WdgM_ComTest_ImportedTypes_Dem.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that the following types of module DEM (listed in WdgM.ASR40.SWS_WdgM_00011.1)
  are included: Dem_EventIdType, Dem_EventStatusType


Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP: Instances of the imported types of module DEM are defined for:
             Dem_EventIdType     Dem_EventId
             Dem_EventStatusType Dem_EventStatus


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00011.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1792</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ImportedTypes_Os_multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_Multicore/source/application/WdgM_ComTest_ImportedTypes_Os.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that the following types of module Os (listed in WdgM.ASR40.SWS_WdgM_00011.2)
  are included: ApplicationType


Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP: Instances of the imported types of module Os are defined for:
             ApplicationType EBTest_Application


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00011.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1793</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ImportedTypes_StdTypes_multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_Multicore/source/application/WdgM_ComTest_ImportedTypes_StdTypes.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that the following types of module Std_Types (listed in WdgM.ASR40.SWS_WdgM_00011.3)
  are included: Std_ReturnType, Std_VersionInfoType


Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP: Instances of the imported types of module Std_Types are defined for:
             Std_ReturnType      Std_Return
             Std_VersionInfoType Std_VersionInfo


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00011.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1794</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ImportedTypes_WdgIf_multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_Multicore/source/application/WdgM_ComTest_ImportedTypes_WdgIf.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that the following types of module WdgIf (listed in WdgM.ASR40.SWS_WdgM_00011.4)
  are included: WdgIf_ModeType


Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP: Instances of the imported types of module WdgIf are defined for:
             WdgIf_ModeType      WdgIf_Mode


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00011.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1795</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_30137_multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_Multicore/source/application/WdgM_ConTest_03_Rte.c.m4</sourcefile>
      <sourceline>125</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that the generated service description is according
to the WdgM configuration.

Test Object: None.
Test Precondition: 

The following supervision entities are configured:
WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1


Test Execution: 

Ts5-Process execution steps:
  01: Ts5 build step: Generate all files
  02: Compare generated System Description files
      with golden reference files
  03: Include comparison difference of 02 in this test
  04: VP
      If no difference in 03 exists, then nothing
      will be included and the test compiles

      If a difference exists in 03, then the gnu diff
      tool generates some characters which cannot be
      compiled which will be indicated by the ts5 environment.


Test Input: 

System Description reference files (WdgM_swc_interface.arxml and
WdgM_swc_internal.arxml) are provided in directory "reference"
and contains the following definition of the
Watchdog Manager Service for the configured Supervision Entities
WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1:

Service WdgM {
  ProvidePort WdgM_AliveSupervision alive_WdgMSupervisedEntity_0;
  ProvidePort WdgM_AliveSupervision alive_WdgMSupervisedEntity_1;
  ProvidePort WdgM_IndividualMode mode_WdgMSupervisedEntity_0;
  ProvidePort WdgM_IndividualMode mode_WdgMSupervisedEntity_1;
  InternalBehavior
  {
    RunnableEntity UpdateAliveCounter
    symbol "WdgM_UpdateAliveCounter"
    canbeInvokedConcurrently = TRUE

    RunnableEntity CheckpointReached
    symbol "WdgM_CheckpointReached"
    canbeInvokedConcurrently = TRUE

    PortArgument{port=alive_WdgMSupervisedEntity_0,
                 value.type= WdgM_SupervisedEntityIdType, value.value=0};
    PortArgument{port=alive_WdgMSupervisedEntity_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=1};
    IndirectAPI{port=mode_WdgMSupervisedEntity_0};
    IndirectAPI{port=mode_WdgMSupervisedEntity_1};
  };
};


Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00333</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00334</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00336</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00338</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1796</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30138_multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_Multicore/source/application/WdgM_ConTest_03_Rte.c.m4</sourcefile>
      <sourceline>226</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that the API exported to RTE can be invoked by SW-Cs.

Test Object: None.
Test Precondition: 

The WdgM has the following configuration:

WdgM modes and configured Supervision Entites for Alive supervision:
  WdgMMode_0 (= initial mode and sleep mode):
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1


Test Execution: 

  01: Initialize test case and stubs
  02: Start Rte
  03: initialize WdgM
  04: Call CheckpointReached for WdgMAliveSupervision_0 / CP0_1
      via the generated Rte function
  05: Call WdgM_MainFunction()
  06: VP (WdgM.ASR40.WDGM333)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED
  07: Call CheckpointReached for WdgMAliveSupervision_1 / CP0_1
      via the generated Rte function
  08: Call WdgM_MainFunction()
  09: VP (WdgM.ASR40.WDGM333)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_Ok
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00333</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1797</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30139_multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_Multicore/source/application/WdgM_ConTest_03_Rte.c.m4</sourcefile>
      <sourceline>347</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that mode transitions are reported correctly to the RTE.
This test depends on the previous execution of TS_WDGM_30138_multicore because it
needs an already started RTE.

Test Object: None.
Test Precondition: 

TS_WDGM_30138_multicore (Rte started, WdgM initialized)

The WdgM has the following configuration:

WdgM modes and configured Supervision Entites for Alive supervision:
  WdgMMode_0 (= initial mode and sleep mode):
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1


Test Execution: 

This test is executed with the following permutations:
   Parameter / Permutation      |    p0   |    p1   |
------------------------------------------|----------
WdgMImmediateReset              | true    | false   |

  01: Initialize test case and stubs
  03: Re-init WdgM
  03: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198, WdgM.ASR40.WDGM199)
     Rte reads the correct modes, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      global mode: WDGM_GLOBAL_STATUS_OK
  04: Call CheckpointReached for WdgMSupervisedEntity_0
      via the WdgM Api WdgM_CheckpointReached()
  05: Call WdgM_MainFunction()
  06: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198, WdgM.ASR40.WDGM199)
     Rte reads the correct modes, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      global mode: WDGM_GLOBAL_STATUS_FAILED
  07: Call WdgM_MainFunction()
  08: VP (WdgM.SWS_WdgM_00197,WdgM.SWS_WdgM_00198, WdgM.ASR40.WDGM199)
     Rte reads the correct modes, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  09: Call CheckpointReached for WdgMSupervisedEntity_0
      via the WdgM Api WdgM_CheckpointReached()
  10: Call WdgM_MainFunction()
  11: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198, WdgM.ASR40.WDGM199)
     Rte reads the correct modes, that is:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      global mode: WDGM_GLOBAL_STATUS_EXPIRED
  12: Call WdgM_MainFunction()
  13: VP
     In permutation p0:
       Mcu_PerformReset is called once
     In permutation p1:
       Mcu_PerformReset is not called
  13: VP (WdgM.SWS_WdgM_00197, WdgM.SWS_WdgM_00198, WdgM.ASR40.WDGM199, WdgM.ASR40.WDGM134)
     In permutation p0:
       global mode is not indicated to Rte, thus Rte reads the following modes
        WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
        WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
        global mode: WDGM_GLOBAL_STATUS_EXPIRED
     In permutation p1:
       global mode is indicated to Rte, thus Rte reads the following modes
        WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
        WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
        global mode: WDGM_GLOBAL_STATUS_STOPPED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1798</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_RteCheckpointIDs_multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_03_Rte_Multicore/source/application/WdgM_ConTest_03_Rte_CheckpointIds.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that the generated Rte header file of a SW-Cs that is connected to
the WdgM Service Component provides the symbolic names for all
configured CheckpointIDs as it is done in the WdgM BSw header file.

Test Object: None.
Test Precondition: 

The following CheckpointId is configured for Supervision Entity WdgMSupervisedEntity_0:
Name: WdgMConf_WdgMCheckpoint_CP0_1
Value: 0

The following CheckpointId is configured for Supervision Entity WdgMSupervisedEntity_1:
Name: WdgMConf_WdgMCheckpoint_CP1_1
Value: 0


Test Execution: 

  01: Rte header file of a SW-Cs that is connected to
      the WdgM Service Component is included and WdgM.h is never included
  02: VP (WDGM.EB.RteCheckpointIDs)
      A macro WdgMConf_WdgMCheckpoint_CP0_1 is defined and has value 0
  03: VP (WDGM.EB.RteCheckpointIDs)
      A macro WdgMConf_WdgMCheckpoint_CP1_1 is defined and has value 0


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.RteCheckpointIDs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1799</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_SatelliteInitialization_Success_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_04_SlaveTrigger_multicore/source/application/EbTest.c.m4</sourcefile>
      <sourceline>83</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
  To test if the satellite cores initialization is done successfully for satellite
  cores that are not triggering any watchdogs.

Test Object: 


Test Precondition: 
  WdgM is initialized.

  The following WdgM mode and Wdg device mode configuration
  is used for all tests:
  Wdg driver First_Watchdog  (DeviceIdx=5)
  Wdg driver Second_Watchdog (DeviceIdx=6)
  Wdg driver Third_Watchdog  (DeviceIdx=7)
  Wdg driver Fourth_Watchdog  (DeviceIdx=8)
  
  Master Core is triggering First_WatchDog, Second_Watchdog and Fourth_Watchdog
  Satellite core 1 is triggering Second_Watchdog 
  Satellite core 2 is triggering Second_Watchdog and Third_Watchdog
  
  WdgMConf_WdgMMode_WdgMMode_0 (this is the initial mode): 
  - First_Watchdog
  - Second_Watchdog
  are triggered
  
  First_Watchdog: is triggered by master core
  Second_Watchdog: is triggered by all cores
  Third_Watchdog: is triggered by satellite core 1
  Fourth_Watchdog: is triggered by master core
  
  The Alive Supervision mechanism is used for Mode_0 with the following Supervised Entities:
  - Supervised Entity 0 for master core
  - Supervised Entity 1 for satellite core 1
  - Supervised Entity 2 for satellite core 2

Test Execution: 
  01: Reset stub state variables
  02: Init WdgM (Init mode is WdgMConf_WdgMMode_WdgMMode_0)
  03: Call main function for the master core
  04: Retrive the initial mode
  05 VP: Check the current mode for master core
  06: Switch to satellite core 1
  07: Call main function for satellite core 1
  08: Switch to satellite core 2
  09: Call main function for satellite core 2
  10: Calling the main function for master and satellite cores, triggering the supervised entity for the master core and satellite core 1
  11: For satellite core 2 no Supervised Entity is triggered simulating a problem
  12: Switch to satellite core 1
  13: Retrieve the local status for WdgMSupervisedEntity_1 of satellite core 1
  14 VP: Check if the local status for WdgMSupervisedEntity_1 is WDGM_LOCAL_STATUS_OK
  15: Switch to satellite core 2
  16: Retrieve the local status for WdgMSupervisedEntity_2 of satellite core 2
  17 VP: 17 VP: Check if the local status for WdgMSupervisedEntity_2 is WDGM_LOCAL_STATUS_EXPIRED
  18: Retrieve the local status for WdgMSupervisedEntity_0 of master core
  19 VP: Check if local status for the WdgMSupervisedEntity_0 is WDGM_LOCAL_STATUS_OK
  20: Retrieve the global status
  21 VP:Check if the global status is WDGM_GLOBAL_STATUS_EXPIRED

Test Input: 


Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreSwitchMode.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1800</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SatelliteInitialization_Failure_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_04_SlaveTrigger_multicore/source/application/EbTest.c.m4</sourcefile>
      <sourceline>246</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  To test if a satellite cores that is triggering at least one watchdog is failing to initialize successfully and is
  triggering the expected DET errors.

Test Object: 


Test Precondition: 
  WdgM is initialized.

  The following WdgM mode and Wdg device mode configuration
  is used for all tests:
  Wdg driver First_Watchdog  (DeviceIdx=5)
  Wdg driver Second_Watchdog (DeviceIdx=6)
  Wdg driver Third_Watchdog  (DeviceIdx=7)
  Wdg driver Fourth_Watchdog  (DeviceIdx=8)
  
  Master Core is triggering First_Watchdog, Second_Watchdog and Fourth_Watchdog
  Satellite core 1 is triggering Second_Watchdog 
  Satellite core 2 is triggering Second_Watchdog and Third_Watchdog
  
  WdgMConf_WdgMMode_WdgMMode_0 (this is the initial mode): 
  - First_Watchdog
  - Second_Watchdog 
  are triggered
  
  First_Watchdog: is triggered by master core
  Second_Watchdog: is triggered by all cores
  Third_Watchdog: is triggered by satellite core 1
  Fourth_Watchdog: is triggered by master core
  
  The Alive Supervision mechanism is used for Mode_0 with the following Supervised Entities:
  - Supervised Entity 0 for master core
  - Supervised Entity 1 for satellite core 1
  - Supervised Entity 2 for satellite core 2

Test Execution: 
  01: Reset stub state variables
  02: Init WdgM (Init mode is WdgMConf_WdgMMode_WdgMMode_0)
  03: Call main function for the master core
  04: Retrieve the initial mode
  05 VP: Check the current mode for master core
  06: Switch to satellite core 1
  07: Simulate WdgIf_SetMode failure for satellite core 1
  07: Call main function for satellite core 1
  08 VP: Check if the satellite core main function is throwing an error if the core failed to initialize
  09 VP: Check if the satellite core main function is throwing the expected DET

Test Input: 


Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020441</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020442</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1801</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SlaveTrigger_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_04_SlaveTrigger_multicore/source/application/EbTest.c.m4</sourcefile>
      <sourceline>361</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  To test that the Wdg drivers are triggered also from all slave WdgM instances
  or from certain slave WdgM instances.

Test Object: 


Test Precondition: 
  WdgM is initialized.

  The following WdgM mode and Wdg device mode configuration
  is used for all tests:
  Wdg driver First_Watchdog  (DeviceIdx=5)
  Wdg driver Second_Watchdog (DeviceIdx=6)
  Wdg driver Third_Watchdog  (DeviceIdx=7)
  Wdg driver Fourth_Watchdog  (DeviceIdx=8)

Test Execution: 
  01: Init test case and stubs
  02: Init WdgM (Init mode is WdgMConf_WdgMMode_WdgMMode_1)
  03: Verify WdgIf_SetTriggerCondition() is called according to test configuration parameters
      WdgMMulticoreWdgEnable and WdgMMulticoreWdgCoreId.
m4_ifelse(m4_ifelse(PM_Permutation,p1,t,m4_ifelse(PM_Permutation,p4,t)),t,\-:m4_dnl
  04. Simulate WdgIf_SetMode() returns E_OK in the context of the master core.
  05. Attempt to change mode to WdgMMode_2
  06. Verify the mode has been changed to WdgMMode_2
  07. Simulate WdgIf_SetMode() fails in the context of the satellite core.
  08. Change mode back to WdgMMode_1
  09. Verify the mode has not been changed because WdgIf_SetMode() failed
  10. Check WdgM reported Det error
  11. Verify a reset has been performed at the next MainFunction() done on the master WdgM instance
:-/m4_ifelse( :elif: ),PM_Permutation,p2,\-:m4_dnl
  04. Simulate WdgIf_SetMode() fails
  05. Change mode to WdgMMode_2
  06. Verify the mode has not been changed because WdgIf_SetMode() failed
  07. Verify a reset has been performed immediately.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl

Test Input: 


Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020121_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020122_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreTriggerWatchdog</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreTriggerWatchdog2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreSetWatchdog2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreSetWatchdog4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreTriggerWatchdog3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreSetWatchdog3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreSetWatchdog</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1802</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_30111</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_04_Trigger/source/application/WdgM_ConTest_04_Trigger.c</sourcefile>
      <sourceline>150</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check correct initialization of WdgM with triggering of more than one Watchdog driver
in initial WdgM mode.


Test Object: None.
Test Precondition: 

TS_WDGM_30138 executed successful

The following configuration is used for all tests:

WdgMConf_WdgMMode_WdgMMode_0 (id=0)
WdgMConf_WdgMMode_WdgMMode_1 (id=1)
WdgMConf_WdgMMode_WdgMMode_2 (id=2)

The following WdgM mode and trigger configuration
is used for all tests:
              Trigger Condition for First_Watchdog (DeviceIdx=5)
               |   Trigger Condition for WdgMWatchdog_wdg2(DeviceIdx=7)
               |    |
WdgMConf_WdgMMode_WdgMMode_0:  {2U, 3U}
WdgMConf_WdgMMode_WdgMMode_1:  {3U, 2U}
WdgMConf_WdgMMode_WdgMMode_2:  {5U, 1U}

The following WdgM mode and Wdg device mode configuration
is used for all tests:
              WdgM mode for First_Watchdog (DeviceIdx=5)
               |                WdgM mode for WdgMWatchdog_wdg2(DeviceIdx=7)
               |                 |
WdgMConf_WdgMMode_WdgMMode_1: { WDGIF_SLOW_MODE, WDGIF_SLOW_MODE },
WdgMConf_WdgMMode_WdgMMode_2: { WDGIF_FAST_MODE, WDGIF_SLOW_MODE },
WdgMMode_3: { WDGIF_OFF_MODE,  WDGIF_FAST_MODE }


Test Execution: 

  01: Init test case and stubs
  02: Init WdgM (Init mode is WdgMConf_WdgMMode_WdgMMode_1) and call WdgM main function (applies init request)
  03: Call WdgM_GetMode
  04: VP (WWDGM.EB.TIMEPM.WDGM020432, DGM.EB.TIMEPM.WDGM020409, WdgM.ASR40.WDGM179)
      WdgM_GetMode returns initial mode: WdgMConf_WdgMMode_WdgMMode_1
  05: VP (WDGM.EB.TIMEPM.WDGM020428)
      global state equals WDGM_GLOBAL_STATUS_OK
  06: VP (WWDGM.EB.TIMEPM.WDGM020432)
    WdgIf_SetMode() is called two times with the following parameters:
    a) DeviceIndex = 5, WdgMode = WDGIF_SLOW_MODE
    b) DeviceIndex = 7, WdgMode = WDGIF_SLOW_MODE
  07: VP (WdgM.ASR40.SWS_WdgM_00223, WdgM.ASR40.SWS_WdgM_00119)
    WdgIf_SetTriggerCondition() is called two times with the following parameters:
    a) DeviceIndex = 5, Timeout = 2U
    b) DeviceIndex = 7, Timeout = 3U


Test Input: 



Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00331</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020409</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00179</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1803</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30112</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_04_Trigger/source/application/WdgM_ConTest_04_Trigger.c</sourcefile>
      <sourceline>277</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check triggering in initial mode with triggering of more than one Watchdog driver
in initial WdgM mode.


Test Object: None.
Test Precondition: TS_WDGM_30111 (WdgM is in mode: WdgMConf_WdgMMode_WdgMMode_1)
Test Execution: 

  01: Init test case and stubs

Repeat the following steps several times:
  02: Call MainFunction()
  03: VP (WdgM.SWS_WdgM_00328, WdgM.SWS_WdgM_00214, WdgM.ASR40.SWS_WdgM_00223,
          WdgM.SWS_WdgM_00119)
    WdgIf_SetTriggerCondition() is called for the
    two configured watchdogs as follows:
      a) DeviceIndex = 5, Timeout = 3
      b) DeviceIndex = 7, Timeout = 2

Note: No SEs are configured in WdgMConf_WdgMMode_WdgMMode_1


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00331</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00328</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1804</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30113</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_04_Trigger/source/application/WdgM_ConTest_04_Trigger.c</sourcefile>
      <sourceline>359</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check call of WdgIf_SetMode and correct triggering after mode change with triggering of
more than one Watchdog driver in new WdgM mode.


Test Object: None.
Test Precondition: TS_WDGM_30112
Test Execution: 

  01: Init test case and stubs

For each entry in TestConfig do:
  02: Switch to mode TestConfig.WdgMMode by a call to WdgM_SetMode
      and a subsequent MainFunction() call
  03: VP (WDGM.EB.TIMEPM.WDGM020400, WDGM.EB.TIMEPM.WDGM020417, WDGM.EB.TIMEPM.WDGM020424)
      WdgIf_SetMode() is called two times:
        a) DeviceIndex = 5, WdgMode = TestConfig.WdgMode0
        b) DeviceIndex = 7, WdgMode = TestConfig.WdgMode1
  Repeat the following steps several times:
    04: Call MainFunction()
    05: VP (WdgM.ASR40.SWS_WdgM_00223, WdgM.ASR40.WDGM181)
    If TestConfig.WdgMode0 != WDGIF_OFF_MODE:
      WdgIf_SetTriggerCondition() is called with:
        DeviceIndex = 5, Timeout = TestConfig.TriggerCond0
    If TestConfig.WdgMode1 != WDGIF_OFF_MODE:
      WdgIf_SetTriggerCondition() is called with:
        DeviceIndex = 7, Timeout = TestConfig.TriggerCond1


Test Input: 

TestConfig:
WdgMMode
   |          WdgMode0 (Wdg mode for First_Watchdog (DeviceIdx=5))
   |           |                WdgMode1 (Wdg mode for WdgMWatchdog_wdg2(DeviceIdx=7))
   |           |                 |          TriggerCond0 for First_Watchdog (DeviceIdx=5)
   |           |                 |               | TriggerCond1 for WdgMWatchdog_wdg2(DeviceIdx=7)
   |           |                 |               |   |
{ WdgMConf_WdgMMode_WdgMMode_1, WDGIF_SLOW_MODE, WDGIF_SLOW_MODE, 2U, 3U },
{ WdgMConf_WdgMMode_WdgMMode_2, WDGIF_FAST_MODE, WDGIF_SLOW_MODE, 3U, 2U },
{ WdgMMode_3, WDGIF_OFF_MODE,  WDGIF_FAST_MODE, 5U, 1U }


Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00331</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020417</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020424</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00317</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1805</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30116</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_04_Trigger/source/application/WdgM_ConTest_04_Trigger.c</sourcefile>
      <sourceline>481</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that all Watchdog trigger conditions are updated to 0 only
and a mode switch
is not possible after WdgM_PerformReset() is called with triggering of
more than one Watchdog driver.


Test Object: None.
Test Precondition: 

Initial Mode contains the following configured Watchdogs:
WdgMWatchdog_0:
  WdgMWatchdogName: First_Watchdog
  DeviceIndex: 5
WdgMWatchdog_2:
  WdgMWatchdogName: wdg2
  DeviceIndex: 7


Test Execution: 

  00: Re-Initialize WdgM (WdgM then remains in WdgMInitMode)
  01: VP (WdgM.ASR40.WDGM232)
      global state equals WDGM_GLOBAL_STATUS_OK
  02: Call WdgM_PerformReset()
  03: VP (WdgM.EB.PerformReset1)
      global state equals WDGM_GLOBAL_STATUS_STOPPED
  04: VP (WdgM.EB.PerformReset1)
    WdgIf_SetTriggerCondition is called with with timeout=0
    for all configured Watchdogs in the WdgMInitMode
  05: Call WdgM_MainFunction() several times
  06: VP (WdgM.EB.PerformReset1)
      global state equals WDGM_GLOBAL_STATUS_STOPPED
      for each main function call in step 05
  07: VP (WdgM.EB.PerformReset1)
    no DET nor DEM functions are called
    for each main function call in step 05
  08: VP (WdgM.EB.PerformReset3)
    trigger conditions are set to 0
    for all configured Watchdogs in the WdgMInitMode
    for each main function call in step 05
  09: switch to a different WdgM mode which has
     different Watchdogs configured
  10: VP (WdgM.SWS_WdgM_00145)
     Mode switch is not performed
     no DET nor DEM functions are called
  11: VP (WdgM.EB.PerformReset3)
    trigger conditions are set to 0
    for all configured Watchdogs in the WdgMInitMode
  12: Call WdgM_MainFunction
  13: VP (WdgM.EB.PerformReset1)
    no DET nor DEM functions are called
  14: VP (WdgM.EB.PerformReset3)
    trigger conditions are set to 0
    for all configured Watchdogs in the WdgMInitMode


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00331</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.PerformReset1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.PerformReset3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1806</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30132</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_04_Trigger/source/application/WdgM_ConTest_04_Trigger.c</sourcefile>
      <sourceline>674</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check WdgM_GetMode WdgM_Test_Results.

Test Object: None.
Test Precondition: Global mode of WdgM equals WDGM_GLOBAL_STATUS_OK
Test Execution: 

  01: Init test case and stubs

For all configured modes:
  02: Switch to this mode
  03: Call WdgM_GetMode()
  04: VP (WdgM.ASR40.WDGM170)
      WdgM_GetMode returns the new mode


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1807</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30114</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_04_Trigger/source/application/WdgM_ConTest_04_Trigger.c</sourcefile>
      <sourceline>748</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check error detection for WdgIf_SetMode.

Test Object: None.
Test Precondition: 

TS_WDGM_30138 executed successful
DEM reporting is enabled

WdgMImmediateReset is configured to true


Test Execution: 

  01: Prepare WdgIf_SetMode to return E_NOT_OK
  02: Switch to mode WdgMConf_WdgMMode_WdgMMode_0 by a call to WdgM_SetMode
      and a subsequent call to WdgM_MainFunction()
  03: VP (WDGM.EB.TIMEPM.WDGM020400, WDGM.EB.TIMEPM.WDGM020417, WDGM.EB.TIMEPM.WDGM020424)
      WdgM_SetMode returns E_OK
  04: VP (WdgM.SWS_WdgM_00139, WdgM.SWS_WdgM_00133.1)
      Mcu_PerformReset is called once
  05: VP (WdgM.SWS_WdgM_00139, WdgM.ASR40.SWS_WdgM_00129)
      Dem is called once with following arguments:
        EventId = WDGM_E_SET_MODE
        EventStatus = DEM_EVENT_STATUS_FAILED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020417</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020424</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00133.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1808</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30115</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_04_Trigger/source/application/WdgM_ConTest_04_Trigger.c</sourcefile>
      <sourceline>833</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that triggering is performed with TriggerCondition 0 for multiple
watchdogs if WdgM is mode STOPPED.

Test Object: None.
Test Precondition: 

TS_WDGM_30114 executed successful

WdgM global status equals WDGM_GLOBAL_STATUS_STOPPED
WdgM is in mode WdgMConf_WdgMMode_WdgMMode_0


Test Execution: 

  01: Prepare WdgM to be in global WdgM mode: WDGM_GLOBAL_STATUS_STOPPED
Execute the following steps several times:
  02: Call WdgM_MainFunction()
  03: VP (WdgM.ASR40.WDGM002, WdgM.ASR40.SWS_WdgM_00223, WdgM.SWS_WdgM_00122)
      WdgIf_SetTriggerCondition() is called twice with:
        a) DeviceIndex = 5, Timeout = 0
        b) DeviceIndex = 7, Timeout = 0


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00331</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1809</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_01_DetErrorValues</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_05_StaticFileContent/source/application/WdgM_ConTest_05_StaticFileContent.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that defined development error values are in range.


Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP (WdgM.ASR40.SWS_WdgM_00259.1,
          WdgM.ASR40.SWS_WdgM_00259.2,
          WdgM.ASR40.SWS_WdgM_00259.3,
          WdgM.ASR40.SWS_WdgM_00259.4,
          WdgM.ASR40.SWS_WdgM_00259.5,
          WdgM.ASR40.SWS_WdgM_00259.6,
          WdgM.ASR40.SWS_WdgM_00259.7,
          WdgM.ASR40.SWS_WdgM_00259.8,
          WdgM.ASR40.SWS_WdgM_00259.9,
          WdgM.ASR40.SWS_WdgM_00259.10)
      The following DET macros are defined with a value
      less than or equal to 255 (Thus they are
      within the range of an uint8):
      WDGM_E_NO_INIT, WDGM_E_PARAM_CONFIG, WDGM_E_PARAM_MODE
      WDGM_E_PARAM_SEID, WDGM_E_INV_POINTER, WDGM_E_DISABLE_NOT_ALLOWED,
      WDGM_E_CPID, WDGM_E_DEPRECATED, WDGM_E_AMBIGIOUS, WDGM_E_SEDEACTIVATED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1810</internalId></specobject>
    <specobject>
      <id>TS_WDGM_02_PublishedInformation</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_05_StaticFileContent/source/application/WdgM_ConTest_05_StaticFileContent.c</sourcefile>
      <sourceline>125</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

    This test shall check the correct definition of the common published information
    provided in the module header file as required by BSW00402 in the SRS
    General on Basic Software Modules (see also: BSW00318, BSW00441, BSW00374,
    BSW00379).


Test Object: None.
Test Precondition: None.
Test Execution: 

  01 VP (BSW00402, BSW00441, BSW00402, BSW00374)
     WDGM_VENDOR_ID is defined
     with the value globally provided by the tooling environment
  02 VP (BSW00402, BSW00441, BSW00379)
     WDGM_MODULE_ID is defined with 0x2BU
  03 VP (BSW00318, BSW00441)
     WDGM_AR_RELEASE_MAJOR_VERSION is defined
     with the value specified in config.mk
  04 VP (BSW00402, BSW00441, BSW00318)
     WDGM_AR_RELEASE_MINOR_VERSION is defined
     with the value specified in config.mk
  05 VP (BSW00402, BSW00441, BSW00318)
     WDGM_AR_RELEASE_REVISION_VERSION is defined
     with the value specified in config.mk
  06 VP (BSW00402, BSW00441, BSW00318)
     WDGM_SW_MAJOR_VERSION is defined
     with the value specified in config.mk
  07 VP (BSW00402, BSW00441, BSW00318)
     WDGM_SW_MINOR_VERSION is defined
     with the value specified in config.mk
  08 VP (BSW00402, BSW00441, BSW00318)
     WDGM_SW_PATCH_VERSION is defined
     with the value specified in config.mk


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00267.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1811</internalId></specobject>
    <specobject>
      <id>TS_WDGM_03_MandatoryAPIs</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_05_StaticFileContent/source/application/WdgM_ConTest_05_StaticFileContent.c</sourcefile>
      <sourceline>240</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify if mandatory APIs WdgIf_SetMode and WdgIf_SetTriggerCondition are available
    for minimized configuration.


Test Object: None.
Test Precondition: 
  - Minimum Configuration with general configuration parameters:
     WdgMDevErrorDetect               false
     WdgMImmediateReset               false
     WdgMOffModeEnabled               true
     WdgMVersionInfoApi               false
     WdgMRteUsage                     false
     WdgMDefensiveBehavior            false
     WdgMDemStoppedSupervisionReport  false
     WdgMCallerIds                    false
     WdgMSetModeReportToDem           DISABLE
     WdgMSupervisionReportToDem       DISABLE
     WdgMImproperCallerReportToDem    DISABLE
  - Single Wdg driver is applied.
  - Single Supervision Entity is applied
  - Single Watchdog Mode is applied with no triggering events
  - All APIs of the WdgIf stub are disabled in setting the respective
    EBSTUBS_FUNCENABLED_'API_NAME' to STD_OFF,
    except the mandatory WdgIf_SetMode and WdgIf_SetTriggerCondition.

Test Execution: 

  01 Call WdgM_Init()
  02 VP
     WdgIf_SetMode and WdgIf_SetTriggerCondition
     of WdgIf are called.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161.20</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00161.21</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1812</internalId></specobject>
    <specobject>
      <id>TS_WDGM_04_OptionalAPI_Unused</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_05_StaticFileContent/source/application/WdgM_ConTest_05_StaticFileContent.c</sourcefile>
      <sourceline>307</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that APIs Dem_ReportErrorStatus, Det_ReportError, Mcu_PerformReset
  are not used for a specific configuration and therefore are optional
  in combination with test TS_WDGM_04_OptionalAPI_Used
  that checks that these APIs are used
  for a different configuration.


Test Object: None.
Test Precondition: 
Testcase TS_WDGM_30052_OptionalAPI_Used executed successfully

  - Minimum Configuration with general configuration parameters:
     WdgMDevErrorDetect               false
     WdgMImmediateReset               false
     WdgMOffModeEnabled               true
     WdgMVersionInfoApi               false
     WdgMRteUsage                     false
     WdgMDefensiveBehavior            false
     WdgMDemStoppedSupervisionReport  false
     WdgMCallerIds                    false
     WdgMSetModeReportToDem           DISABLE
     WdgMSupervisionReportToDem       DISABLE
     WdgMImproperCallerReportToDem    DISABLE
  - Single Wdg driver is applied.
  - Single Supervision Entity is applied
  - Single Watchdog Mode is applied with no triggering events
  - All APIs of the Mcu stub are not available
  - All APIs of the Det stub are not available
  - All APIs of the Dem stub are not available

Test Execution: 

  01 VP: All mandatory WdgM APIs compile without usage of
     Det_ReportError, Mcu_PerformReset, and Dem_ReportErrorStatus APIs


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00162.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00162.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00162.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1813</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_00_DataTypes</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_05_Typedefs/source/application/WdgM_ConTest_05_Typedefs.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  Verify that data types are correctly defined.


Test Object: None.
Test Precondition: 
  Folder 'reference' provides
    - checkWDGM038.1.a.txt, checkWDGM038.0.a.txt, checkWDGM038.0.b.txt, checkWDGM038.0.c.txt:
      (showing WdgM_ConfigType is of type uint8)
    - checkWDGM038.1.a.txt, checkWDGM038.0.a.txt, checkWDGM038.0.b.txt, checkWDGM038.0.c.txt:
      (showing WdgM_SupervisedEntityIdType is of type uint16)
    - checkWDGM038.1.a.txt, checkWDGM038.0.a.txt, checkWDGM038.0.b.txt, checkWDGM038.0.c.txt:
      (showing WdgM_CheckpointIdType is of type uint16)
    - checkWDGM038.1.a.txt, checkWDGM038.0.a.txt, checkWDGM038.0.b.txt, checkWDGM038.0.c.txt:
      (showing WdgM_ModeType is of type uint8)
    - checkWDGM038.1.a.txt, checkWDGM038.0.a.txt, checkWDGM038.0.b.txt, checkWDGM038.0.c.txt:
      (showing WdgM_LocalStatusType is of type uint8)
    - checkWDGM038.1.a.txt, checkWDGM038.0.a.txt, checkWDGM038.0.b.txt, checkWDGM038.0.c.txt:
      (showing WdgM_GlobalStatusType is of type uint8)
  for comparison.

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  00: WdgM.h includes WdgM_Cfg.h which includes
      WdgM_Callouts.h which includes WdgM_Types.h
  01: Extract "WdgM_ConfigType" type definition from WdgM_Types.h
  02: VP (WdgM.ASR40.SWS_WdgM_00038.1)
      WdgM_ConfigType of step 01 is of type uint8
      (test done by comparison via reference file checkWDGM038.1.*.txt)
  03: Extract "WdgM_SupervisedEntityIdType" type definition from WdgM_Types.h
  04: VP (WdgM.ASR40.SWS_WdgM_00038.2)
      WdgM_SupervisedEntityIdType of step 03 is of type uint16
      (test done by comparison via reference file checkWDGM038.2.*.txt)
  05: Extract "WdgM_CheckpointIdType" type definition from WdgM_Types.h
  06: VP (WdgM.ASR40.SWS_WdgM_00038.3)
      WdgM_CheckpointIdType of step 05 is of type uint16
      (test done by comparison via reference file checkWDGM038.3.*.txt)
  07: Extract "WdgM_ModeType" type definition from WdgM_Types.h
  08: VP (WdgM.ASR40.SWS_WdgM_00038.4)
      WdgM_ModeType of step 07 is of type uint8
      (test done by comparison via reference file checkWDGM038.4.*.txt)
  09: Extract "WdgM_LocalStatusType" type definition from WdgM_Types.h
  10: VP (WdgM.ASR40.SWS_WdgM_00038.5)
      WdgM_LocalStatusType of step 09 is of type uint8
      (test done by comparison via reference file checkWDGM038.5.*.txt)
  11: Extract "WdgM_GlobalStatusType" type definition from WdgM_Types.h
  12: VP (WdgM.ASR40.SWS_WdgM_00038.6)
      WdgM_GlobalStatusType of step 11 is of type uint8
      (test done by comparison via reference file checkWDGM038.6.*.txt)
  13: Include the difference of the comparison of all previous steps


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00038.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00038.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00038.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00038.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00038.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00038.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1814</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_CheckLogicalGraphs</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_06_LogicalSupervision/source/application/WdgM_ConTest_06_LogicalSupervision.c</sourcefile>
      <sourceline>947</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Checks that the function WdgM_CheckpointReached() performs the Logical Supervision
for the reported Supervised Entity using the reported Checkpoint for at least the following
different Graph configurations:
a) Internal Graph with with more 1 Intermediate Checkpoint (=&gt; more than 1 transitions)
b) Internal Graph with more than 1 Final Checkpoint
c) External Graph with more than 1 Initial Checkpoint *
d) External Graph with more than 1 Intermediate Checkpoint (=&gt; more than 1 transitions) *
e) External Graph with more than 1 Final Checkpoint*
f) Internal Graph with Multiple Transitions (1 Initial and 1 Final Checkpoint)
g) External Graph with Multiple Transitions (1 Initial and 1 Final Checkpoint) *
   
*For permutation P1 all the External Graphs are optimized (WdgMExtLogicalOptimization is TRUE)

 The testing method used is a combination between "Equivalence Class Partitioning" and
 "Pair wise tests", as following:
- Equivalence Class Partitioning:
    Regarding configuration parameters with Multiplicity greater than 1
    for Supervision Graphs (External and Internal), the following classes are identified:
 I)   Graph Type = [Internal, External]
 II)  Multiplicity of Initial Checkpoints      = [1, *]
 III) Multiplicity of Intermediate Checkpoints = [1, *]
 IV)  Multiplicity of Final Checkpoints        = [1, *]

- Pair wise tests:
   Based on class definition,
    Internal Graphs are tested with following pairs
      A) 1 Initial Checkpoint (Note: Multiple Initial Checkpoints not possible by specification)
      B) 1 Intermediate Checkpoint, Multiple Intermediate Checkpoints
      C) 1 Final Checkpoint, Multiple Final Checkpoints
    External Graphs are tested with following pairs
      A) 1 Initial Checkpoint, Multiple Initial Checkpoints
      B) 1 Intermediate Checkpoint, Multiple Intermediate Checkpoints
      C) 1 Final Checkpoint, Multiple Final Checkpoints
   Additionally,

Derived permutation table:
---------------------------------------
| Graph |  I)      | II) | III) | IV) |
=======================================
|  f)   | Internal |  1  |  1   |  1  |
|  a)   | Internal |  1  |  *   |  1  |
|  b)   | Internal |  1  |  1   |  *  |
|  g)   | External |  1  |  1   |  1  |
|  c)   | External |  *  |  1   |  1  |
|  d)   | External |  1  |  *   |  1  |
|  e)   | External |  1  |  1   |  *  |
=======================================


Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, ..., CP0_9
  WdgMSupervisedEntity_1: Checkpoints: CP1_1, CP1_2, ..., CP1_12
  WdgMSupervisedEntity_2: Checkpoints: CP2_1, CP2_2, ..., CP2_4
  WdgMSupervisedEntity_3: Checkpoints: CP3_1, CP3_2, ..., CP3_5
  WdgMSupervisedEntity_4: Checkpoints: CP4_1, CP4_2, ..., CP4_5

Modes and configured Logical Supervision Graphs:

Mode 0
Internal Graph(s): -
External Graph(s): -

Mode 1
Internal Graph(s):
  IntGraph1:
   0_1 -&gt; 0_2

  External Graph(s): -

Mode 2
Internal Graph(s):
  IntGraph1:
   0_1 -&gt; 0_2

  IntGraph2:
  f) 1_1 -&gt; 1_2 -&gt; 1_3 -&gt; 1_4

  a) IntGraph3:
         3_2
  3_1 -&gt; 3_3 -&gt; 3_5 (multiple intermediate CPs)
         3_4

  b) IntGraph4:
                4_3
  4_1 -&gt; 4_2 -&gt; 4_4 (multiple final CPs)
                4_5

External Graph(s): -

Mode 3
Internal Graph(s): -
External Graph(s):
  ExtGraph1:
  g) 0_3 -&gt; 1_5 -&gt; 1_6

Mode 4
Internal Graph(s): -
External Graph(s):
  c) ExtGraph2:
  0_5
  0_6 -&gt; 1_7 -&gt; 2_1  (multiple initial CPs)
  0_7

  d) ExtGraph3:
         1_8
  0_8 -&gt; 1_9   -&gt; 1_11 (multiple intermediate CPs)
         1_10

  e) ExtGraph4:
                 2_2
  0_9 -&gt; 1_12 -&gt; 2_3 (multiple final CPs)
                 2_4


Test Execution: 

For each configured test graph:
  01: Re-initialize WdgM
  02: Switch to the WdgM Mode that has the corresponding graph configured

  Execute the following steps for each logically correct path sequence of this graph:
    03: Call WdgM_CheckpointReached()
    04: VP (WdgM.SWS_WdgM_00323):
        CheckpointReached returns E_OK

  05: Call WdgM_MainFunction()
  06: Call WdgM_GetLocalStatus()
  07: VP (WdgM.SWS_WdgM_00323):
      GetLocalStatus returns WDGM_GLOBAL_STATUS_OK

  Execute the following steps for some logically incorrect path sequences of this graph:
    08: Call WdgM_CheckpointReached()
    09: VP (WdgM.SWS_WdgM_00323):
        - CheckpointReached returns E_OK for Checkpoints in correct sequence
        - CheckpointReached returns E_NOT_OK till first violation of path sequence

  10: Call WdgM_MainFunction()
  11: Call WdgM_GetLocalStatus()
  12: VP (WdgM.SWS_WdgM_00323):
      - GetLocalStatus returns WDGM_GLOBAL_STATUS_EXPIRED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00345</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00344</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00324</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00319</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020136_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>609</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1815</internalId></specobject>
    <specobject>
      <id>TS_WDGM_InternalLogicalCheckpointReached</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_06_LogicalSupervision/source/application/WdgM_ConTest_06_LogicalSupervision.c</sourcefile>
      <sourceline>1200</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that the result of Logical Supervision for the Supervised Entity is correctly calculated
on a WdgM_CheckpointReached() call with the reported checkpoint belonging to an internal graph.

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Re-initialize WdgM
  02: Set a mode that contains an internal graph
  03: VP
     E_OK is returned.
  04: Call WdgM_CheckpointReached() with a non-initial checkpoint of an internal graph
  05: VP
     E_NOT_OK is returned
  06: Reinitialize WdgM
  07: Set a mode that contains an internal graph
  08: VP
     E_OK is returned.
  09: Call WdgM_CheckpointReached() with an initial internal checkpoint
  10: VP
     E_OK is returned
  11: Call again WdgM_CheckpointReached() with the same initial internal checkpoint
  12: VP
     E_NOT_OK is returned 
  13: Reinitialize WdgM
  14: Set a mode that contains an internal graph
  15: VP
     E_OK is returned.
  16: Call WdgM_CheckpointReached() with an initial internal checkpoint
  17: VP
     E_OK is returned
  18: Call WdgM_CheckpointReached() with a correct succesor of the previous checkpoint
  19: VP
     E_OK is returned
  20: Call WdgM_CheckpointReached() with an incorrect checkpoint (one that is not a
      succesor of the previous checkpoint)
  21: VP
     E_NOT_OK is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00345</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1816</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ExternalLogicalCheckpointReached</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_06_LogicalSupervision/source/application/WdgM_ConTest_06_LogicalSupervision.c</sourcefile>
      <sourceline>1328</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that the result of Logical Supervision for the Supervised Entity is correcty calculated
on a WdgM_CheckpointReached() call with the reported checkpoint belonging to an external graph.

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: Set a mode that contains at least one external graph
  03: VP
     E_OK is returned.
  04: Call WdgM_CheckpointReached() with a non-initial checkpoint of an external graph
  05: VP
     E_NOT_OK is returned
  06: Reinitialize WdgM
  07: Set a mode that contains at least one external graph
  08: VP
     E_OK is returned.
  09: Call WdgM_CheckpointReached() with an initial checkpoint of an external graph
  10: VP
     E_OK is returned.
  11: Call WdgM_CheckpointReached() with a correct succesor of the previous checkpoint
  12: VP
     E_OK is returned
  13: Call WdgM_CheckpointReached() with an incorrect checkpoint (one that is not a
      succesor of the previous checkpoint)
  14: VP
     E_NOT_OK is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1817</internalId></specobject>
    <specobject>
      <id>TS_WDGM_IgnoredCheckpoint</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_06_LogicalSupervision/source/application/WdgM_ConTest_06_LogicalSupervision.c</sourcefile>
      <sourceline>1426</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that a reported checkpoint that does not belong to any graph is ignored by
the function WdgM_CheckpointReached and it does not update the result of
of the Logical Supervision for the Supervised Entity.

Test Object: None.
Test Precondition: 

Test Execution: 

  01: Initialize WdgM
  02: Set the mode WdgMConf_WdgMMode_WdgMMode_1
  03: VP
     E_OK is returned.
  04: VP
     Local status of WdgMSupervisedEntity_0 is WDGM_LOCAL_STATUS_OK
  05: Call WdgM_CheckpointReached() with a checkpoint of WdgMSupervisedEntity_0
     which does not belong to any graph.
  06: VP
     WdgM_CheckpointReached() returns E_OK
  07: Call main function
  08: VP (WdgM.ASR40.WDGM297)
     Local status of WdgMSupervisedEntity_0 has remained unchanged.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1818</internalId></specobject>
    <specobject>
      <id>TS_WDGM_IdentifyGraph</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_06_LogicalSupervision/source/application/WdgM_ConTest_06_LogicalSupervision.c</sourcefile>
      <sourceline>1507</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that WdgM_CheckpointReached identifies to which one Graph a reached Checkpoint belongs.

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: Set the mode WdgMConf_WdgMMode_WdgMMode_1
  03: VP
     E_OK is returned.
  04: Call WdgM_CheckpointReached() with an initial internal checkpoint
  05: VP
     E_OK is returned
  06: Call WdgM_CheckpointReached() with the next checkpoint in the same internal graph
  07: VP
     E_OK is returned
  08: Call WdgM_CheckpointReached() with an initial external checkpoint
  09: VP
     E_OK is returned
  10: Call WdgM_CheckpointReached() with the next checkpoint in the same external graph
  11: VP
     E_OK is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1819</internalId></specobject>
    <specobject>
      <id>TS_WDGM_StoreCheckpoint</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_06_LogicalSupervision/source/application/WdgM_ConTest_06_LogicalSupervision.c</sourcefile>
      <sourceline>1571</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that WdgM_CheckpointReached stores for an internal or external graph
the Checkpoint that has been most recently reported by a Supervised Entity

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: Set the mode WdgMConf_WdgMMode_WdgMMode_2
  03: VP
     E_OK is returned.
  04: Call WdgM_CheckpointReached() with an initial internal checkpoint
  05: VP
     E_OK is returned
  06: Call WdgM_CheckpointReached() with the next checkpoint in the same internal graph
  07: VP
     E_OK is returned
  08: Call WdgM_CheckpointReached() with an initial external checkpoint
  09: VP
     E_OK is returned
  10: Call WdgM_CheckpointReached() with the next checkpoint in the same external graph
  11: VP
     E_OK is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1820</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ActivityFlagSet</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_06_LogicalSupervision/source/application/WdgM_ConTest_06_LogicalSupervision.c</sourcefile>
      <sourceline>1635</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that if the function WdgM_CheckpointReached reached the result correct, and the Checkpoint
is defined as a initial one, then the function WdgM_CheckpointReached sets the Activity Flag
of the corresponding graph to true.

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: Set the mode WdgMConf_WdgMMode_WdgMMode_2
  03: VP
     E_OK is returned.
  04: Call WdgM_CheckpointReached() with an initial internal checkpoint
  05: VP
     E_OK is returned
  06: Call WdgM_CheckpointReached() with the next checkpoint in the same internal graph
  07: VP
     E_OK is returned
  08: Call WdgM_CheckpointReached() with an initial external checkpoint
  09: VP
     E_OK is returned
  10: Call WdgM_CheckpointReached() with the next checkpoint in the same external graph
  11: VP
     E_OK is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00332</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00273</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00329</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1821</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ActivityFlagUnset</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_06_LogicalSupervision/source/application/WdgM_ConTest_06_LogicalSupervision.c</sourcefile>
      <sourceline>1702</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that if the function WdgM_CheckpointReached reached the result correct, and the Checkpoint
is defined as a final one, then the function WdgM_CheckpointReached sets the Activity Flag
of the corresponding graph to false.

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: VP
     Set a mode that contains at least one external graph and check that
     E_OK is returned.
  03: VP
     Traverse an internal graph by calling WdgM_CheckpointReached() in order for checkpoints
     from the intial to the final one and check that it returns E_OK each time
  04: VP
     Call WdgM_CheckpointReached() with the initial checkpoint in the same internal graph
     and check that it returns E_OK
  05: VP
     Traverse an external graph by calling WdgM_CheckpointReached() in order for checkpoints
     from the intial to the final one and check that it returns E_OK each time
  06: VP
     Call WdgM_CheckpointReached() with the initial checkpoint in the same external graph
     and check that it returns E_OK.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00331</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1822</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ActivityFlagWdgMInit</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_06_LogicalSupervision/source/application/WdgM_ConTest_06_LogicalSupervision.c</sourcefile>
      <sourceline>1788</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that The function WdgM_Init sets the Activity Flag for graphs to false

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: VP
     Set a mode that contains at least one external graph and check that
     E_OK is returned.
  03: VP
     Call WdgM_CheckpointReached() with the initial checkpoint of several internal and external graphs
     and check that it returns E_OK each time
  04: Reinitialize WdgM
  05: VP
     Set the same mode as before and check that  E_OK is returned.
  06: VP
     Call WdgM_CheckpointReached() with the initial checkpoint of the same graphs as before
     and check that it returns E_OK each time

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020430</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1823</internalId></specobject>
    <specobject>
      <id>TS_WDGM_InternalGraphMonitoring</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_06_LogicalSupervision/source/application/WdgM_ConTest_06_LogicalSupervision.c</sourcefile>
      <sourceline>1864</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that in order to switch on and off the Logical monitoring of an Internal Graph
depending on the mode, it is needed to reference (or respectively do not
reference) the Supervised Entity from each mode.

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: VP
     Set the mode WdgMConf_WdgMMode_WdgMMode_1 and check that
     E_OK is returned.
  03: VP
     Call WdgM_CheckpointReached() with the initial internal CP of a referenced SE
     and check that E_OK is returned
  04: VP
     Call WdgM_CheckpointReached() with the initial internal CP of a SE that is not referenced
     and check that E_NOT_OK is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00212.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1824</internalId></specobject>
    <specobject>
      <id>TS_WDGM_InternalGraphCount</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_06_LogicalSupervision/source/application/WdgM_ConTest_06_LogicalSupervision.c</sourcefile>
      <sourceline>1926</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that it is possible to have zero or one Internal Graph per Supervised Entity.

Test Object: None.
Test Precondition: 
The configuration contains at least one Supervised Entity with no Internal Graph and
at least one Supervised Entity with one Internal Graph

Test Execution: 
  01: Initialize WdgM
  02: VP
     Set the mode WdgMConf_WdgMMode_WdgMMode_4 and check that E_OK is returned.
  03: VP
     For the Supervised Entity that contains one Internal Graph call WdgM_CheckpointReached()
     with checkpoints that form a valid path from initial internal CP to the final internal CP
     and check that each time E_OK is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00212.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1825</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckpointNotMonitored</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_06_LogicalSupervision/source/application/WdgM_ConTest_06_LogicalSupervision.c</sourcefile>
      <sourceline>1984</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that not all Checkpoints of a Supervised Entity need to be monitored.

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: VP
     Set the mode WdgMConf_WdgMMode_WdgMMode_1 and check that E_OK is returned.
  03: VP
     Call WdgM_CheckpointReached() with a checkpoint of WdgMSupervisedEntity_0
     which is not monitored (does not belong to any graph) and check that
     E_OK is returned.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00212.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1826</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_0701_MultipleAliveCounters</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_07_MultipleAliveCounter/source/application/WdgM_ConTest_07_MultipleAliveCounter.c</sourcefile>
      <sourceline>599</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

In a configuration with Alive Supervision for multiple CP in a SE
check that individual supervision status is tracked correctly (transition from
WDGM_LOCAL_STATUS_OK to WDGM_LOCAL_STATUS_FAILED) for boundary values of
different configurations of SupervisionReferenceCycle and ExpectedAliveIndications
with Minimum and Maximum margins.

Used Test Strategies:
- Boundary Value Analysis


Test Object: None.
Test Precondition: 

WdgM is initialized.

The following test configuration is used:
Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3
  WdgMSupervisedEntity_1: Checkpoints: CP1_1, CP1_2, CP1_3, CP1_4, CP1_5
  WdgMSupervisedEntity_2: Checkpoints: CP2_1

Modes and configured WdgMTriggers:
                    ConfigName  TriggerCondition  TriggerMode  DeviceIndex
                       |          |                |               |
  WdgMMode_0:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_1:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_unused: WdgMTrigger_0  1     WDGIF_OFF_MODE             6
                   WdgMTrigger_0  1     WDGIF_OFF_MODE             7
  WdgMMode_2:
  WdgMMode_3:
  WdgMMode_4:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5

Modes and configured AliveSupervisions:
  WdgMMode_0 (Initial Mode): WdgMSupervisedEntity_0(CP0_1)
                             WdgMSupervisedEntity_0(CP0_2)
  WdgMMode_1: WdgMSupervisedEntity_0(CP0_1)
              WdgMSupervisedEntity_0(CP0_2)
  WdgMMode_2: WdgMSupervisedEntity_0(CP0_1)
              WdgMSupervisedEntity_0(CP0_2)
  WdgMMode_3: WdgMSupervisedEntity_0(CP0_1)
              WdgMSupervisedEntity_0(CP0_2)
  WdgMMode_4: WdgMSupervisedEntity_0(CP0_1)
              WdgMSupervisedEntity_1(CP1_1)
              WdgMSupervisedEntity_2(CP2_1)

Modes and configured parameters for WdgMSupervisedEntity_0:
  WdgMMode_0:
    WdgMModeId: 0
    CP0_1:
      WdgMSupervisionReferenceCycle          3
      WdgMExpectedAliveIndications           1
      WdgMMaxMargin                          0
      WdgMMinMargin                          0
    CP0_2:
      WdgMSupervisionReferenceCycle          3
      WdgMExpectedAliveIndications           2
      WdgMMaxMargin                          0
      WdgMMinMargin                          0
    WdgMFailedAliveSupervisionRefCycleTol  0
    WdgMExpiredSupervisionCycleTol         5
  WdgMMode_1:
    WdgMModeId: 1
    CP0_1:
      WdgMSupervisionReferenceCycle          1
      WdgMExpectedAliveIndications           3
      WdgMMaxMargin                          0
      WdgMMinMargin                          0
    CP0_2:
      WdgMSupervisionReferenceCycle          1
      WdgMExpectedAliveIndications           4
      WdgMMaxMargin                          0
      WdgMMinMargin                          0
    WdgMFailedAliveSupervisionRefCycleTol  1
    WdgMExpiredSupervisionCycleTol         2
  WdgMMode_2:
    WdgMModeId: 3
    CP0_1:
      WdgMSupervisionReferenceCycle          1
      WdgMExpectedAliveIndications           3
      WdgMMaxMargin                          1
      WdgMMinMargin                          2
    CP0_2:
      WdgMSupervisionReferenceCycle          1
      WdgMExpectedAliveIndications           16
      WdgMMaxMargin                          3
      WdgMMinMargin                          0
    WdgMFailedAliveSupervisionRefCycleTol  0
    WdgMExpiredSupervisionCycleTol         5
  WdgMMode_3:
    WdgMModeId: 4
    CP0_1:
      WdgMSupervisionReferenceCycle          3
      WdgMExpectedAliveIndications           2
      WdgMMaxMargin                          0
      WdgMMinMargin                          0
    CP0_2:
      WdgMSupervisionReferenceCycle          5
      WdgMExpectedAliveIndications           1
      WdgMMaxMargin                          0
      WdgMMinMargin                          0
    WdgMFailedAliveSupervisionRefCycleTol  0
    WdgMExpiredSupervisionCycleTol         5
  WdgMMode_4:
    WdgMModeId: 5
    CP0_1:
      WdgMSupervisionReferenceCycle          3
      WdgMExpectedAliveIndications           23
      WdgMMaxMargin                          0
      WdgMMinMargin                          0
    WdgMFailedAliveSupervisionRefCycleTol  11
    WdgMExpiredSupervisionCycleTol         5

Modes and configured parameters for WdgMSupervisedEntity_1:
  WdgMMode_4:
    WdgMModeId: 5
    CP1_1:
      WdgMSupervisionReferenceCycle          5
      WdgMExpectedAliveIndications           29
      WdgMMaxMargin                          0
      WdgMMinMargin                          0
    WdgMFailedAliveSupervisionRefCycleTol  13
    WdgMExpiredSupervisionCycleTol         5

Modes and configured parameters for WdgMSupervisedEntity_2:
  WdgMMode_4:
    WdgMModeId: 5
    CP2_1:
      WdgMSupervisionReferenceCycle          7
      WdgMExpectedAliveIndications           41
      WdgMMaxMargin                          0
      WdgMMinMargin                          0
    WdgMFailedAliveSupervisionRefCycleTol  17
    WdgMExpiredSupervisionCycleTol         5


Test Execution: 

For each entry in Tst_Config_Set:
  01(Tst_CheckSupervision): Re-initialize WdgM
  02(Tst_CheckSupervision): Switch mode to Tst_Config_Set.WdgMMode
  For each entry in Tst_Config_Set.Tst_SubConfig_Set,
  execute the following steps
    03(Tst_CheckASCycle):
        Call WdgM_MainFunction() or WdgM_CheckpointReached()
        Tst_SubConfig_Set.NumberOfCalls times
    04(Tst_CheckASCycle):
        WdgM_GetLocaStatus() is called for WdgMSupervisedEntity_0
    05: VP (WdgM.ASR40.WDGM171):
        The local status returned by WdgM_GetLocaStatus()
        equals Tst_SubConfig_Set.status.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00321</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1827</internalId></specobject>
    <specobject>
      <id>TS_WDGM_0702_DetErrorAmbigous</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_07_MultipleAliveCounter/source/application/WdgM_ConTest_07_MultipleAliveCounter.c</sourcefile>
      <sourceline>800</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that error code WDGM_TST_E_AMBIGOUS (0x18U) is reported to the Development
Error Tracer, if the API WdgM_UpdateAliveCounter is called for a Supervised Entity
having more than once checkpoint configured for alive supervision.


Test Object: None.
Test Precondition: 

 The configuration used is described at TS_WDGM_0701_MultipleAliveCounters
 test case preconditions.


Test Execution: 

  01: Re-initialize WdgM
  02: Call WdgM_UpdateAliveCounter for Supervised Entity
      WdgMSupervisedEntity_0
  03: VP (WdgM.ASR40.SWS_WdgM_00004.9, WdgM.ASR40.SWS_WdgM_00320, WdgM.ASR40.WDGM155)
      E_NOT_OK is returned
  04: VP (WdgM.ASR40.SWS_WdgM_00004.9, WdgM.ASR40.SWS_WdgM_00320)
      At least one Det is called with following parameters
        ApiId   = 0x04U
        ErrorId = 0x18U


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1828</internalId></specobject>
    <specobject>
      <id>TS_WDGM_0703_MultipleAliveReferenceCycles</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_07_MultipleAliveCounter/source/application/WdgM_ConTest_07_MultipleAliveCounter.c</sourcefile>
      <sourceline>881</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Test correct behavior of multiple Alive Supervisions over a longer period time with following
 parameter variations:
 - WdgMExpectedAliveIndications;
 - WdgMSupervisionReferenceCycle;
 - WdgMFailedAliveSupervisionRefCycleTol.

 The test method is "Stress tests".
 The following criteria are fulfilled for each configured
 alive supervisions:
 - multiple AliveSupervison counter overflows;
 - variable in length of failed alive cycle gaps combined with variable in length of OK alive
   cycle gaps.
 The following criteria are fulfilled by the Global status:
 - Status OK, when the local status of all the tested SupervisedEntities is OK;
 - Status Failed, when at least one of the tested SupervisedEntities has the local status Failed.


Test Object: None.
Test Precondition: 

 WdgM is initialized.
 The tested mode is WdgMMode_4.
 The configuration used is described at TS_WDGM_0701_MultipleAliveCounters
 test case preconditions.
 The following configuration parameters are configured as different prime numbers for each tested
 alive supervision:
 - WdgMExpectedAliveIndications;
 - WdgMSupervisionReferenceCycle;
 - WdgMFailedAliveSupervisionRefCycleTol.


Test Execution: 

 Execution diagram for any of the tested alive supervisions:
 ==================================================================================================
 TstCycleID k(EVEN CASE)
 |
 |TstCycleSize
 ||
 ||TstCycleIteration
 |||
 |||                            TstCycleID k+1(ODD CASE)
 |||                            |
 |||                            |                              TstCycleID K+2(EVEN CASE)
 |||                            |                              |
 |&lt;----------------------------&gt;|&lt;----------------------------&gt;|&lt;----------------------------&gt;|
 |   OK(k-1)        | Failed(k) |Failed(K+1)|   OK(k+1,k+2)                     | Failed(k+2) |
 |-----------------&gt;|&lt;----------|----------&gt;|&lt;---------------------------------&gt;|&lt;------------|
                    |&lt;---------&gt;|&lt;---------------------------------------------&gt;|
                    ||          ||
                    ||          |NormalAliveSupervisionGapSize*WdgMSupervisionReferenceCycle
                    ||          |
                    ||          NormalAliveSupervisionGapAbs
                    ||
                    |FailedAliveSupervisionGapSize*WdgMSupervisionReferenceCycle
                    |
                    FailedAliveSupervisionGapAbs
 ==================================================================================================
 Note: - k=2n, n=0...;
       - OK(k-1), OK(k+1,k+2): Normal Alive supervision indication;
       - Failed(k), Failed(k+2): Alive supervision failure detection state
                                 (lack of alive indication);
       - Failed(K+1): Alive supervision failure recovery state(alive indication);
       - TstCycleSize = WdgMFailedAliveSupervisionRefCycleTol*WdgMSupervisionReferenceCycle;
       - TstCycleIteration = 0..(TstCycleSize-1);
       - FailedAliveSupervisionGapSize = 0..(WdgMFailedAliveSupervisionRefCycleTol-1);
       - FailedAliveSupervisionGapAbs = FailedAliveSupervisionGapSize*WdgMSupervisionReferenceCycle
           - MIN(FailedAliveSupervisionGapAbs) = 0;
           - MAX(FailedAliveSupervisionGapAbs) = TstCycleSize.
       - NormalAliveSupervisionGapSize = (2*WdgMFailedAliveSupervisionRefCycleTol -
                                          FailedAliveSupervisionGapSize);
       - NormalAliveSupervisionGapAbs = NormalAliveSupervisionGapSize*WdgMSupervisionReferenceCycle
           - MAX(NormalAliveSupervisionGapAbs) = 2*TstCycleSize;
           - MIN(NormalAliveSupervisionGapAbs) = TstCycleSize.

  01: Initialize WdgM and test case dependences.
  02: Initialize test case variables.
  03: Check test case preconditions.
  04: Sanity check
      Change to WdgM_WdgMMode_4 mode and check that the mode change is performed.
  For each AliveSupervision, Repeat the following steps several times in parallel until it is
  guaranteed that the WdgM internal Alive Counter experiences a wrap-around:
  Note: As a base for cycle counting, the TstCycleIteration = MainFunctionCalls /
       (SupervisionCycle * FailedAliveSupervCyclTol) is used.
    During odd number of TstCycleIteration (=&gt; ODD CASE)
      05a: During odd number of TstCycleIteration:
           Checkpoints are called as expected
      06a: VP(WdgM.ASR40.WDGM325_Conf, WdgM.ASR40.WDGM098)
           Check that the SupervisedEntity is in state:
           - Failed, when the SupervisedEntity is recovering from the failed state;
           - OK, after the failure recovery is completed.
    During even number of TstCycleIteration (=&gt; EVEN CASE)
      05b: During even number of TstCycleIteration:
             Checkpoints are not called for different intervals of WdgMSupervisionReferenceCycle
             from 1 to (WdgMFailedAliveSupervisionRefCycleTol-1).
      06b: VP(WdgM.ASR40.WDGM325_Conf, WdgM.ASR40.WDGM098)
           Check that the SupervisedEntity is in state:
           - OK, before starting the simulation of alive supervision cycle;
           - Failed, when the simulation of failed alive supervision cycles is performed.
    07: VP(WdgM.ASR40.WDGM325_Conf, WdgM.ASR40.WDGM098)
        Check the global status to be:
        - OK, when the local status of all the tested SupervisedEntities is OK;
        - Failed, when at least one of the tested SupervisedEntities has the local status Failed.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1829</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_CheckDeadlineSupervision</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_08_DeadlineSupervision/source/application/WdgM_ConTest_08_DeadlineSupervision.c</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

This test checks the following three aspects of Deadline Supervision:
a) Checks that when the Deadline Start Checkpoint is reached and this Checkpoint is referenced
   in the active Mode, then the function WdgM_CheckpointReached records the current timestamp
   under the timestamp of the reached Deadline Start Checkpoint.
b) Check that when the Deadline End Checkpoint is reached and this Checkpoint is referenced
   in the active Mode, and the activity flag of the corresponding Deadline Start Checkpoint
   is set true then the function WdgM_CheckpointReached measures the difference between current
   timestamp and the corresponding Deadline Start Checkpoint timestamp.
c) Check that if this time difference is not within the minimum and the maximum limits
   (WdgMDeadlineMin and WdgMDeadlineMax), then the function WdgM_CheckpointReached shall define
   the result of Deadline Supervision for the Supervised Entity as incorrect.
   Otherwise, it shall be defined as correct.
d) Check (with gray-box testing) that the timstamp of a start Checkpoint is recorded in the
   specified internal variable.

Used Test Strategies:
- Boundary Value Analysis
- Gray Box Testing


Test Object: None.
Test Precondition: 

WdgM is configured according to the following table:

----------------------------------------------------------------------------------------------
| WdgMMode   | WdgMDeadlineSupervision   | DeadlineMax | DeadlineMin | StartRef  | EndRef    |
==============================================================================================
| WdgMMode_0 | WdgMDeadlineSupervision_0 | 2.0         | 1.0         | SE0/CP0_1 | SE0/CP0_2 |
----------------------------------------------------------------------------------------------
| WdgMMode_1 | WdgMDeadlineSupervision_0 | 2.0         | 1.0         | SE1/CP1_1 | SE1/CP1_2 |
| WdgMMode_1 | WdgMDeadlineSupervision_1 | 2.0         | 1.0         | SE1/CP1_2 | SE1/CP1_3 |
| WdgMMode_1 | WdgMDeadlineSupervision_2 | 2.0         | 1.0         | SE1/CP1_4 | SE1/CP1_5 |
----------------------------------------------------------------------------------------------

The initial WdgM mode is WdgMMode_0, Global Supervision Status equals WDGM_GLOBAL_STATUS_OK.


Test Execution: 

  Repeat test steps 01 - 07 for all items in testdata array for
  Iteration i = 1, 2, ..., 6:
    01: Initialize WdgM and testcase as stated in the pre-conditions.
    02: Set the WdgM_Mode and call WdgM_MainFunction.
    03: Call WdgM_CheckpointReached() for Start-Checkpoint.
    04: VP (WDGM.EB.ASR40.WDGM228):
        WdgM_CheckpointReached() returns E_OK.
    05: VP (WDGM.EB.DesignDecision.InternalVariable4):
        Gray-box test: Start-Time is recorded in WdgM_EB_DMData[DeadlineId].StartTimestampData.
    06: Call WdgM_CheckpointReached() for End-Checkpoint with the elapsed time stated in the
        i-th entry of the input data array.
    07: VP (WDGM.EB.ASR40.WDGM229, WDGM.EB.DesignDecision.InternalVariable9, WdgM.ASR40.WDGM294):
        WdgM_CheckpointReached() returns expected result stated in i-th entry
        of the output data array.


Test Input: 
    constant testdata:
        WdgMMode: WdgMMode_0
        SE: WdgMSupervisedEntity_0
        Start-CP: CP0_1
        End-CP: CP0_2
    variable testdata:
        elapsed time:
            I.01: WDGM_TST_DS1_MIN_TIME,
            I.02: WDGM_TST_DS1_MIN_TIME + 1,
            I.03: WDGM_TST_DS1_MAX_TIME - 1,
            I.04: WDGM_TST_DS1_MAX_TIME
            I.05: WDGM_TST_DS1_MIN_TIME - 1,
            I.06: WDGM_TST_DS1_MAX_TIME + 1

Test Output: 
    expected result from call to the WdgM_CheckpointReached API:
        O.01: E_OK (minimum time)
        O.02: E_OK (minimum time + 1)
        O.03: E_OK (maximum time - 1)
        O.04: E_OK (maximum time)
        O.05: E_NOT_OK (minimum time - 1)
        O.06: E_NOT_OK (maximum time + 1)
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1672</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00294</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1667</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1830</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SimpleDeadlineSupervision_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_08_DeadlineSupervision/source/application/WdgM_ConTest_08_DeadlineSupervision.c</sourcefile>
      <sourceline>321</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() performs the Deadline Supervision
for Checkpoints of a Deadline Supervision configuration
and the deadline limits are not exceeded.

Used Test Strategies:
- Boundary Value Analysis


Test Object: None.
Test Precondition: 
For initial state of WdgM see preconditions of testcase TS_WDGM_CheckDeadlineSupervision.
Other than that testcase, a WdgM mode with multiple Deadline Supervisions is used.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains a Deadline Supervision configuration
  03: Call WdgM_CheckpointReached for the Start Checkpoint of the Deadline configuration
      (New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time within the minimum and the maximum limits
  06: Call WdgM_CheckpointReached for the Stop Checkpoint of the Deadline configuration
  07: VP:
      WdgM_CheckpointReached returns E_OK
  08: Call WdgM_CheckpointReached for the Start Checkpoint of the Deadline configuration
      (New Deadline monitoring is started)
  09: VP:
      WdgM_CheckpointReached returns E_OK
  10: Prepare time callout to return an elapsed which equals the minimum allowed limit
  11: Call WdgM_CheckpointReached for the Stop Checkpoint of the Deadline configuration
  12: VP:
      WdgM_CheckpointReached returns E_OK
  13: Call WdgM_CheckpointReached for the Start Checkpoint of the Deadline configuration
      (New Deadline monitoring is started)
  14: VP:
      WdgM_CheckpointReached returns E_OK
  15: Prepare time callout to return an elapsed which equals the maximum allowed limit
  16: Call WdgM_CheckpointReached for the Stop Checkpoint of the Deadline configuration
  17: VP:
      WdgM_CheckpointReached returns E_OK

  Test strategy "boundary value tests" applied for lower / upper limits for testcases:
    - TS_WDGM_SimpleDeadlineSupervision_1
    - TS_WDGM_SimpleDeadlineSupervision_2
    - TS_WDGM_SimpleDeadlineSupervision_3


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1831</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SimpleDeadlineSupervision_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_08_DeadlineSupervision/source/application/WdgM_ConTest_08_DeadlineSupervision.c</sourcefile>
      <sourceline>444</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() performs the Deadline Supervision
for Checkpoints of a Deadline Supervision configuration where
the deadline limit (lower limit) is exceeded and that multiple
calls to the Stop Checkpoint do not reset the Deadline Supervision state.


Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains a Deadline Supervision configuration
  03: Call WdgM_CheckpointReached for the Start Checkpoint of the Deadline configuration
      (New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time which is 1 below the minimum limit
  06: Call WdgM_CheckpointReached for the Stop Checkpoint of the Deadline configuration
  07: VP:
      WdgM_CheckpointReached returns E_NOT_OK
  08: Call WdgM_CheckpointReached for the Stop Checkpoint of the Deadline configuration
  09: VP:
      WdgM_CheckpointReached returns E_NOT_OK

  Test strategy: see TS_WDGM_SimpleDeadlineSupervision_1


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1832</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SimpleDeadlineSupervision_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_08_DeadlineSupervision/source/application/WdgM_ConTest_08_DeadlineSupervision.c</sourcefile>
      <sourceline>527</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() performs the Deadline Supervision
for Checkpoints of a Deadline Supervision configuration
where the deadline limit (upper limit) is exceeded and that multiple
calls to the Stop Checkpoint do not reset the Deadline Supervision state.


Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains a Deadline Supervision configuration
  03: Call WdgM_CheckpointReached for the Start Checkpoint of the Deadline configuration
      (New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time which which exceeds the upper limit by 1
  06: Call WdgM_CheckpointReached for the Stop Checkpoint of the Deadline configuration
  07: VP:
      WdgM_CheckpointReached returns E_NOT_OK
  08: Call WdgM_CheckpointReached for the Stop Checkpoint of the Deadline configuration
  09: VP:
      WdgM_CheckpointReached returns E_NOT_OK

  Test strategy: see TS_WDGM_SimpleDeadlineSupervision_1


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1833</internalId></specobject>
    <specobject>
      <id>TS_WDGM_MultipleDeadlineSupervision_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_08_DeadlineSupervision/source/application/WdgM_ConTest_08_DeadlineSupervision.c</sourcefile>
      <sourceline>610</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() performs the Deadline Supervision
for Checkpoints of a multiple Deadline Supervision configuration
where the Stop Checkpoint is a Start Checkpoint of a further Deadline configuration
and the deadline limits are not exceeded.

Used Test Strategies:
- Boundary Value Analysis
- Gray Box Testing


Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains multiple Deadline Supervision configuration
      with Start / Stop Checkpoints
  03: Call WdgM_CheckpointReached for the first Start Checkpoint of a Deadline
      configuration where the Stop Checkpoint is a Start Checkpoint of a further
      Deadline configuration
      (New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time within the minimum and the maximum limits
  06: Call WdgM_CheckpointReached for the corresponding Stop Checkpoint of Step 03
      (New Deadline monitoring is started)
  07: VP:
      WdgM_CheckpointReached returns E_OK
  08: Prepare time callout to return an elapsed time within the minimum and the maximum limits
  09: Call WdgM_CheckpointReached for the corresponding Stop / Start Checkpoint of Step 06
      (New Deadline monitoring is started)
  10: VP:
      WdgM_CheckpointReached returns E_OK

  Test strategy "boundary value tests" for lower / upper limits already applied via:
    - TS_WDGM_SimpleDeadlineSupervision_1
    - TS_WDGM_SimpleDeadlineSupervision_2
    - TS_WDGM_SimpleDeadlineSupervision_3


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1834</internalId></specobject>
    <specobject>
      <id>TS_WDGM_MultipleDeadlineSupervision_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_08_DeadlineSupervision/source/application/WdgM_ConTest_08_DeadlineSupervision.c</sourcefile>
      <sourceline>708</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() performs the Deadline Supervision
for the first Start Checkpoint of a multiple Deadline Supervision configuration
where the Stop Checkpoint is a Start Checkpoint of a further Deadline configuration
and the deadline limit (lower limit) is exceeded.


Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains multiple Deadline Supervision configuration
      with Start / Stop Checkpoints
  03: Call WdgM_CheckpointReached for the first Start Checkpoint of a Deadline
      configuration where the Stop Checkpoint is a Start Checkpoint of a further
      Deadline configuration
      (New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time which is below the minimum limit
  06: Call WdgM_CheckpointReached for the corresponding Stop Checkpoint of Step 03
      (New Deadline monitoring is started)
  07: VP:
      WdgM_CheckpointReached returns E_NOT_OK
  08: Prepare time callout to return an elapsed time within the minimum and the maximum limits
  09: Call WdgM_CheckpointReached for the corresponding Stop / Start Checkpoint of Step 06
      (New Deadline monitoring is started)
  10: VP:
      WdgM_CheckpointReached returns E_OK


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1835</internalId></specobject>
    <specobject>
      <id>TS_WDGM_MultipleDeadlineSupervision_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_08_DeadlineSupervision/source/application/WdgM_ConTest_08_DeadlineSupervision.c</sourcefile>
      <sourceline>799</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() performs the Deadline Supervision
for the first Start Checkpoint of a multiple Deadline Supervision configuration
where the Stop Checkpoint is a Start Checkpoint of a further Deadline configuration
and the deadline limit (upper limit) is exceeded.


Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains multiple Deadline Supervision configuration
      with Start / Stop Checkpoints
  03: Call WdgM_CheckpointReached for the first Start Checkpoint of a Deadline
      configuration where the Stop Checkpoint is a Start Checkpoint of a further
      Deadline configuration
      (New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time which exceeds the upper limit
  06: Call WdgM_CheckpointReached for the corresponding Stop Checkpoint of Step 03
      (New Deadline monitoring is started)
  07: VP:
      WdgM_CheckpointReached returns E_NOT_OK
  08: Prepare time callout to return an elapsed time within the minimum and the maximum limits
  09: Call WdgM_CheckpointReached for the corresponding Stop / Start Checkpoint of Step 06
      (New Deadline monitoring is started)
  10: VP:
      WdgM_CheckpointReached returns E_OK


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1836</internalId></specobject>
    <specobject>
      <id>TS_WDGM_MultipleDeadlineSupervision_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_08_DeadlineSupervision/source/application/WdgM_ConTest_08_DeadlineSupervision.c</sourcefile>
      <sourceline>890</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() performs the Deadline Supervision
for a Start / Stop Checkpoint of a multiple Deadline Supervision configuration
where the deadline limit (lower limit) is exceeded.


Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains multiple Deadline Supervision configuration
      with Start / Stop Checkpoints
  03: Call WdgM_CheckpointReached for the first Start Checkpoint of a Deadline
      configuration where the Stop Checkpoint is a Start Checkpoint of a further
      Deadline configuration
      (New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time within the minimum and the maximum limits
  06: Call WdgM_CheckpointReached for the corresponding Stop Checkpoint of Step 03
      (New Deadline monitoring is started)
  07: VP:
      WdgM_CheckpointReached returns E_NOT_OK
  08: Prepare time callout to return an elapsed time which is below the minimum limit
  09: Call WdgM_CheckpointReached for the corresponding Stop / Start Checkpoint of Step 06
      (New Deadline monitoring is started)
  10: VP:
      WdgM_CheckpointReached returns E_NOT_OK


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1837</internalId></specobject>
    <specobject>
      <id>TS_WDGM_MultipleDeadlineSupervision_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_08_DeadlineSupervision/source/application/WdgM_ConTest_08_DeadlineSupervision.c</sourcefile>
      <sourceline>979</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() performs the Deadline Supervision
for the first Start Checkpoint of a multiple Deadline Supervision configuration
where the Stop Checkpoint is a Start Checkpoint of a further Deadline configuration
and the deadline limit (upper limit) is exceeded.


Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains multiple Deadline Supervision configuration
      with Start / Stop Checkpoints
  03: Call WdgM_CheckpointReached for the first Start Checkpoint of a Deadline
      configuration where the Stop Checkpoint is a Start Checkpoint of a further
      Deadline configuration
      (New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time within the minimum and the maximum limits
  06: Call WdgM_CheckpointReached for the corresponding Stop Checkpoint of Step 03
      (New Deadline monitoring is started)
  07: VP:
      WdgM_CheckpointReached returns E_NOT_OK
  08: Prepare time callout to return an elapsed time which exceeds the upper limit
  09: Call WdgM_CheckpointReached for the corresponding Stop / Start Checkpoint of Step 06
      (New Deadline monitoring is started)
  10: VP:
      WdgM_CheckpointReached returns E_NOT_OK


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1838</internalId></specobject>
    <specobject>
      <id>TS_WDGM_IgnoredCheckpointDeadlineSupervision</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_08_DeadlineSupervision/source/application/WdgM_ConTest_08_DeadlineSupervision.c</sourcefile>
      <sourceline>1069</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that a reported checkpoint that is neither a Deadline Start Checkpoint
nor a Deadline End Checkpoint is ignored by the function WdgM_CheckpointReached
and it does not update the result of the Deadline Supervision for the Supervised Entity.

Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision.

Test Execution: 

  01: Initialize WdgM
  02: Set the mode WdgMConf_WdgMMode_WdgMMode_0
  03: VP
     E_OK is returned.
  04: VP
     Local status of WdgMSupervisedEntity_0 is WDGM_LOCAL_STATUS_OK
  05: Call WdgM_CheckpointReached() with a checkpoint of WdgMSupervisedEntity_0
     that is neither a Deadline Start Checkpoint nor a Deadline End Checkpoint
  06: VP
     WdgM_CheckpointReached() returns E_OK
  07: Call main function
  08: VP (WdgM.ASR40.WDGM299)
     Local status of WdgMSupervisedEntity_0 has remained unchanged.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00299</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1839</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_MultipleCallerIds</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_10_MultipleCallerIds/source/application/WdgM_ConTest_10_MultipleCallerIds.c</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that the WdgM_SetMode() function accepts different valid caller IDs.


Test Object: None.
Test Precondition: WdgM initialized
Test Execution: 

  01: Call WdgM_SetMode with first valid caller id (valid mode),
      call WdgM_MainFunction()
  02: VP (WdgM.ASR40.WDGM358_Conf, WdgM.ASR40.SWS_WdgM_00245)
      E_OK is returned.
      Dem is not called.
  03: VP (WdgM.ASR40.WDGM358_Conf, WdgM.ASR40.SWS_WdgM_00245)
      WdgM_GetMode() returns the new mode.
  04: Call WdgM_SetMode with second valid caller id (other valid mode),
      call WdgM_MainFunction()
  05: VP (WdgM.ASR40.WDGM358_Conf, WdgM.ASR40.SWS_WdgM_00245)
      E_OK is returned.
      Dem is not called.
  06: VP (WdgM.ASR40.WDGM358_Conf, WdgM.ASR40.SWS_WdgM_00245)
      WdgM_GetMode() returns the new mode.
  07: Call WdgM_SetMode with second invalid caller id (valid mode)
  08: VP (WdgM.ASR40.WDGM358_Conf, WdgM.ASR40.SWS_WdgM_00245)
      E_NOT_OK is returned.
      Dem called with following parameters:
        EventId     = WDGM_E_IMPROPER_CALLER
        EventStatus = DEM_EVENT_STATUS_FAILED
  09: VP (WdgM.ASR40.WDGM358_Conf, WdgM.ASR40.SWS_WdgM_00245)
      WdgM_GetMode() returns the old mode.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00358</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1840</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_30142_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>451</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that WdgM_GetFirstExpiredSEID() is available before WdgM_Init.

Test Object: None.
Test Precondition: 
WdgM is not initialized

Test Execution: 

All tests are executed with the following permutations
with the following abbreviations:
ChRe ... API WdgM_CheckpointReached() is used for alive supervision
AlSu ... API WdgM_AliveSupervision() is used for alive supervision
   Parameter / Permutation      |    p0   |    p1   |    p2   |    p3   |
------------------------------------------|------------------------------
Used API for Alive Supervision  | ChRe    | ChRe    | AlSu    | AlSu    |
WdgMImmediateReset              | true    | false   | true    | false   |

  01 Call WdgM_GetFirstExpiredSEID()
  02 VP
     no DET nor a DEM function is called


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00348</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1841</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30118_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>510</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
Check that disabling and enabling of more than one Supervised Entity via mode switch is supported.

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0(core0): Checkpoints: CP0_1
  WdgMSupervisedEntity_1(core1): Checkpoints: CP1_1
  WdgMSupervisedEntity_2(core2): Checkpoints: CP2_1

Note: Each Supervision Entity has exactly one Checkpoint configured (not more)
This is to test both functions WdgM_CheckpointReached() and
WdgM_UpdateAliveCounter() by replacement strategy.

Modes and configured WdgMTriggers:
                    ConfigName  TriggerCondition  TriggerMode  DeviceIndex
                       |          |                |               |
  WdgMMode_0:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_1:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_2:
  WdgMMode_3:
  WdgMMode_4:
  WdgMMode_5:
  WdgMMode_6:
  WdgMMode_7:      WdgMTrigger_0  100   WDGIF_SLOW_MODE            5
  WdgMMode_8:
  WdgMMode_unused: WdgMTrigger_0  1     WDGIF_OFF_MODE             6
                   WdgMTrigger_1  2     WDGIF_OFF_MODE             7

Modes and configured AliveSupervisions:
  WdgMMode_0 (Initial Mode):
  WdgMMode_1: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1), WdgMSupervisedEntity_1(WdgMConf_WdgMCheckpoint_CP1_1),
  WdgMMode_2: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1)
  WdgMMode_3: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1)
  WdgMMode_4: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1)
  WdgMMode_5: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1)
  WdgMMode_6: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1)
  WdgMMode_7: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1)
  WdgMMode_8: WdgMSupervisedEntity_0(WdgMConf_WdgMCheckpoint_CP0_1)
  WdgMMode_unused:

Modes and configured parameters for WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0:
  WdgMMode_0:
    mode id: 0
  WdgMMode_1:
    mode id: 1
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 1
    WdgMExpiredSupervisionCycleTol 3
  WdgMMode_2:
    mode id: 2
    SupervisionReferenceCycle    3
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 1
    WdgMExpiredSupervisionCycleTol 0
  WdgMMode_3:
    mode id: 3
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     3
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 2
    WdgMExpiredSupervisionCycleTol 5
  WdgMMode_4:
    mode id: 5
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 1
    WdgMExpiredSupervisionCycleTol 0
  WdgMMode_5:
    mode id: 6
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 0
    WdgMExpiredSupervisionCycleTol 5
  WdgMMode_6:
    mode id: 7
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     3
    MaxMargin                    1
    MinMargin                    2
    FailedSupervisionRefCycleTol 1
    WdgMExpiredSupervisionCycleTol 0
  WdgMMode_7:
    mode id: 8
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 1
    WdgMExpiredSupervisionCycleTol 2
  WdgMMode_8:
    mode id: 9
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 0
    WdgMExpiredSupervisionCycleTol 0
  WdgMMode_unused:
    mode id: 4

Configured parameters for WdgMSupervisedEntity_1:
  WdgMMode_1:
    mode id: 1
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 1
    WdgMExpiredSupervisionCycleTol 3


Test Execution: 

  01: Initialize WdgM
  02: VP (WDGM.EB.TIMEPM.WDGM020427)
     all Supervised Entities are deactivated
  03: Call Main function on all cores several times
  04: VP (WdgM.ASR40.WDGM208, WdgM.ASR40.WDGM083)
     individual states do not change
     (examination of the Alive Counters is not performed
     in Main function)
  05: Switch mode to WdgMMode_1
  06: VP (WDGM.EB.TIMEPM.WDGM020421, WdgM.ASR40.WDGM282)
     all Supervised Entities WdgMSupervisedEntity_0 and
     WdgMSupervisedEntity_1 are activated
  07: Call Main function on all cores
  08: VP (WDGM.EB.ASR40.WDGM203, WdgM.ASR40.SWS_WdgM_00060, WdgM.SWS_WdgM_00324,
          WdgM.SWS_WdgM_00325)
     individual state of WdgMSupervisedEntity_0 and
     WdgMSupervisedEntity_1 changed to
     WDGM_LOCAL_STATUS_FAILED
  09: Call Main function on all cores
  10: VP (WDGM.EB.ASR40.WDGM206, WdgM.ASR40.SWS_WdgM_00060, WdgM.SWS_WdgM_00324,
          WdgM.SWS_WdgM_00325)
     individual state of WdgMSupervisedEntity_0 and
     WdgMSupervisedEntity_1 changed to
     WDGM_LOCAL_STATUS_EXPIRED


Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020427</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>697</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00282</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00324</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1842</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30119_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>795</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 

Check that individual supervision status is tracked correctly (transition from
WDGM_LOCAL_STATUS_OK to WDGM_LOCAL_STATUS_FAILED) for boundary values of
different configurations of SupervisionReferenceCycle and ExpectedAliveIndications
with Minimum and Maximum margins.

Used Test Strategies:
- Boundary Value Analysis


Test Object: None.
Test Precondition: WdgM is initialized (TS_WDGM_30118_Multicore)
Test Execution: 

For each entry in Tst_Config_Set:
  01(Tst_CheckSupervision): Re-initialize WdgM
  02(Tst_CheckSupervision): Switch mode to Tst_Config_Set.WdgMMode
  For each entry in Tst_Config_Set.Tst_SubConfig_Set,
  execute the following steps
    03(Tst_CheckASCycle):
        Call WdgM_MainFunction() on all cores
        Tst_SubConfig_Set.MFcalls times
    04(Tst_CheckASCycle):
        In permutations p0, p1: Call WdgM_CheckpointReached(WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0, WdgMConf_WdgMCheckpoint_CP0_1)
        In permutations p2, p3: Call WdgM_UpdateAliveCounter(WdgMSupervisedEntity_0)
        exactly n=Tst_SubConfig_Set.UAcalls times
    05(Tst_CheckASCycle): VP (WdgM.ASR40.SWS_WdgM_00318)
        Verified by Step 04 and the following steps, because
        the fact that WdgM_UpdateAliveCounter calls WdgM_CheckpointReached
        is implicitly tested by checking that the resulting behavior
        after the WdgM_CheckpointReached and the WdgM_UpdateAliveCounter call
        is the same for all requirements tested regarding WdgM_CheckpointReached
        with at most one configured Checkpoint per Supervision Entity.
    06(Tst_CheckASCycle): VP
        The local status of WdgMSupervisedEntity_0
        equals Tst_SubConfig_Set.status

Additional Descriptions for steps 02 and 03 w.r.t. IV/OV entries:
      Vector entry id of Tst_Config_Set resp. Tst_SubConfig_Set
  Step |
    |  |
    |  |
   02(01):
       Re-initialize WdgM and switch to a mode with following configuration:
          1 Supervision Entity is assigned to this mode containing 1 Checkpoint
          with following Alive Supervision:
            SupervisionReferenceCycle=3
            ExpectedAliveIndications=1
            MaxMargin=MinMargin=0
       Note: Aim of this test is to check correct behavior of the
             SupervisionReferenceCycle
   =========================================================================
   03(01.01): Do nothing
   04(01.01): Do nothing
   05(01.01): see general description of this step
   06(01.01): VP(WDGM.EB.TIMEPM.WDGM020421, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(01.02): Call WdgM Main function on all cores n-times such that
              SupervisionReferenceCycle is not reached (boundary test)
   04(01.02): Do nothing
   05(01.02): see general description of this step
   06(01.02): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(01.03): Do nothing
   04(01.03): Update Alive Counter by 1 for configured Supervision Entity
   05(01.03): see general description of this step
   06(01.03): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(01.04): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached
   04(01.04): Do nothing
   05(01.04): see general description of this step
   06(01.04): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.SWS_WdgM_00063,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(01.05): Call WdgM Main function on all cores n-times such that
              SupervisionReferenceCycle is not reached (boundary test)
   04(01.05): Update Alive Counter by 1 for configured Supervision Entity
   05(01.05): see general description of this step
   06(01.05): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(01.06): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached (boundary test)
   04(01.06): Do nothing
   05(01.06): see general description of this step
   06(01.06): VP(WdgM.ASR40.WDGM098, WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.SWS_WdgM_00063,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(01.07): Call WdgM Main function on all cores n-times such that
              SupervisionReferenceCycle is not reached (boundary test)
   04(01.07): Do nothing
   05(01.07): see general description of this step
   06(01.07): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(01.08): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached (boundary test)
              =&gt; AliveCounter = 0 less than ExpectedAliveIndications
   04(01.08): Do nothing
   05(01.08): see general description of this step
   06(01.08): VP(WDGM.EB.ASR40.WDGM203, WdgM.SWS_WdgM_00074, WdgM.SWS_WdgM_00115, WdgM.SWS_WdgM_00063,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------

   02[02]:
       Re-initialize WdgM and switch to a mode with following configuration:
         1 Supervision Entity is assigned to this mode containing 1 Checkpoint
          with following Alive Supervision:
            SupervisionReferenceCycle=3
            ExpectedAliveIndications=1
            MaxMargin=MinMargin=0
       Note: Aim of this test is to check correct behavior of the
             ExpectedAliveIndications (boundary test).
   =========================================================================
   03(02.01): Do nothing
   04(02.01): Do nothing
   05(02.01): see general description of this step
   06(02.01): VP(WDGM.EB.TIMEPM.WDGM020421, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(02.02): Call WdgM Main function on all cores n-times such that
              SupervisionReferenceCycle is not reached (boundary test)
   04(02.02): Update Alive Counter by 1 for configured Supervision Entity
   05(02.02): see general description of this step
   06(02.02): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(02.03): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached (boundary test)
   04(02.03): Do nothing
   05(02.03): see general description of this step
   06(02.03): VP(WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(02.04): Call WdgM Main function on all cores n-times such that
              SupervisionReferenceCycle is not reached (boundary test)
   04(02.04): Update Alive Counter by 2 for configured Supervision Entity (boundary test)
   05(02.04): see general description of this step
   06(02.04): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(02.05): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached (boundary test)
              =&gt; AliveCounter = 2 greater than ExpectedAliveIndications
   04(02.05): Do nothing
   05(02.05): see general description of this step
   06(02.05): VP(WDGM.EB.ASR40.WDGM203, WdgM.SWS_WdgM_00074, WdgM.SWS_WdgM_00115, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------

   02[03]:
       Re-initialize WdgM and switch to a mode with following configuration:
         1 Supervision Entity is assigned to this mode containing 1 Checkpoint
          with following Alive Supervision:
            SupervisionReferenceCycle=1
            ExpectedAliveIndications=3
            MaxMargin=MinMargin=0
       Note: Aim of this test is to check correct behavior of the
             ExpectedAliveIndications (boundary test).
   =========================================================================
   03(03.01): Do nothing
   04(03.01): Do nothing
   05(03.01): see general description of this step
   06(03.01): VP(WDGM.EB.TIMEPM.WDGM020421, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(03.02): Do nothing
   04(03.02): Update Alive Counter by 3 for configured Supervision Entity (boundary test)
   05(03.02): see general description of this step
   06(03.02): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(03.03): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached
   04(03.03): Update Alive Counter by 3 for configured Supervision Entity (boundary test)
   05(03.03): see general description of this step
   06(03.03): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(03.04): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached (boundary test)
   04(03.04): Update Alive Counter by 2 for configured Supervision Entity (boundary test)
   05(03.04): see general description of this step
   06(03.04): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(03.05): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 2 less than ExpectedAliveIndications
   04(03.05): Update Alive Counter by 2 for configured Supervision Entity (boundary test)
   05(03.05): see general description of this step
   06(03.05): VP(WDGM.EB.ASR40.WDGM203, WdgM.SWS_WdgM_00074, WdgM.SWS_WdgM_00115, WdgM.ASR40.WDGM321,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------

   02[04]:
       Re-initialize WdgM and switch to a mode with following configuration:
         1 Supervision Entity is assigned to this mode containing 1 Checkpoint
          with following Alive Supervision:
            SupervisionReferenceCycle=1
            ExpectedAliveIndications=3
            MaxMargin=MinMargin=0
       Note: Aim of this test is to check correct behavior of the
             ExpectedAliveIndications with MaxMin margins (boundary test).
   =========================================================================
   03(04.01): Do nothing
   04(04.01): Do nothing
   05(04.01): see general description of this step
   06(04.01): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.02): Do nothing
   04(04.02): Update Alive Counter by 3 for configured Supervision Entity (boundary test)
   05(04.02): see general description of this step
   06(04.02): VP(WDGM.EB.TIMEPM.WDGM020421, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.03): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 3 and inside expected range [1..4]
   04(04.03): Update Alive Counter by 1 for configured Supervision Entity (boundary test)
   05(04.03): see general description of this step
   06(04.03): VP(WdgM.ASR40.WDGM098, WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.ASR40.WDGM321,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.04): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 1 and inside expected range [1..4]
   04(04.04): Update Alive Counter by 2 for configured Supervision Entity (boundary test)
   05(04.04): see general description of this step
   06(04.04): VP(WdgM.ASR40.WDGM098, WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.ASR40.WDGM321,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.05): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 2 and inside expected range [1..4]
   04(04.05): Update Alive Counter by 3 for configured Supervision Entity (boundary test)
   05(04.05): see general description of this step
   06(04.05): VP(WdgM.ASR40.WDGM098, WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.ASR40.WDGM321,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.06): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 3 and inside expected range [1..4]
   04(04.06): Update Alive Counter by 4 for configured Supervision Entity (boundary test)
   05(04.06): see general description of this step
   06(04.06): VP(WdgM.ASR40.WDGM098, WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.ASR40.WDGM321,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.07): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 4 and inside expected range [1..4]
   04(04.07): Do nothing
   05(04.07): see general description of this step
   06(04.07): VP(WdgM.ASR40.WDGM098, WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.08): Do nothing
   04(04.08): Update Alive Counter by 5 for configured Supervision Entity (boundary test)
   05(04.08): see general description of this step
   06(04.08): VP(WdgM.ASR40.WDGM098, WdgM.SWS_WdgM_00201, WdgM.SWS_WdgM_00074, WdgM.ASR40.WDGM321,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(04.09): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 5 and outside expected range [1..4]
   04(04.09): Do nothing
   05(04.09): see general description of this step
   06(04.09): VP(WdgM.ASR40.WDGM098, WDGM.EB.ASR40.WDGM203, WdgM.SWS_WdgM_00074, WdgM.SWS_WdgM_00115,
                 WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------

   02[05]:
       Re-initialize WdgM and switch to a mode with following configuration:
         1 Supervision Entity is assigned to this mode containing 1 Checkpoint
          with following Alive Supervision:
            SupervisionReferenceCycle=1
            ExpectedAliveIndications=3
            MaxMargin=1
            MinMargin=2
       Note: Aim of this test is to check correct behavior of the
             ExpectedAliveIndications with MaxMin margins (boundary test).
   =========================================================================
   03(05.01): Do nothing
   04(05.01): Update Alive Counter by 3 for configured Supervision Entity (boundary test)
   05(05.01): see general description of this step
   06(05.01): VP(WDGM.EB.TIMEPM.WDGM020421, WdgM.ASR40.WDGM321, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(05.02): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 3 and inside expected range [1..4]
   04(05.02): Do nothing
   05(05.02): see general description of this step
   06(05.02): VP(WdgM.ASR40.WDGM098, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(05.03): Call WdgM Main function on all cores such that
              SupervisionReferenceCycle is exactly reached
              =&gt; AliveCounter = 0 and outside expected range [1..4]
   04(05.03): Do nothing
   05(05.03): see general description of this step
   06(05.03): VP(WDGM.EB.ASR40.WDGM203, WdgM.SWS_WdgM_00074, WdgM.SWS_WdgM_00115, WdgM.ASR40.WDGM171)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------


Test Input: 

Tst_Config_Set:
    WdgMMode          Tst_SubConfig_Set
       |                     |
  01: { WdgMMode_2, Tst_Config_30119_M2_1 },
  02: { WdgMMode_2, Tst_Config_30119_M2_2 },
  03: { WdgMMode_3, Tst_Config_30119_M3   },
  04: { WdgMMode_6, Tst_Config_30119_M6_1 },
  05: { WdgMMode_6, Tst_Config_30119_M6_2 },

Tst_SubConfig_Sets:

Tst_Config_30119_M2_1:
          MFcalls (Main function calls)
            |  UAcalls (CheckpointReached function calls)
            |   |          status (Expected local supervision status)
            |   |             |
  01.01: { 0U, 0U, WDGM_LOCAL_STATUS_OK}, // status must be ok after mode switch
  01.02: { 2U, 0U, WDGM_LOCAL_STATUS_OK}, // and before reference cycle is reached
  01.03: { 0U, 1U, WDGM_LOCAL_STATUS_OK}, // now we need an alive counter update
  01.04: { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // ... and state should still be ok
  01.05: { 2U, 1U, WDGM_LOCAL_STATUS_OK},
  01.06: { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // next reference cycle elapsed
  01.07: { 2U, 0U, WDGM_LOCAL_STATUS_OK}, // no counter update
  01.08: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed

Tst_Config_30119_M2_2:
  02.01: { 0U, 0U, WDGM_LOCAL_STATUS_OK}, // status must be ok after mode switch
  02.02: { 2U, 1U, WDGM_LOCAL_STATUS_OK}, // and before reference cycle is reached
  02.03: { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // state should still be ok
  02.04: { 2U, 2U, WDGM_LOCAL_STATUS_OK}, // that's one counter update too much!
  02.05: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed

Tst_Config_30119_M3:
  03.01: { 0U, 0U, WDGM_LOCAL_STATUS_OK}, // status must be ok after mode switch
  03.02: { 0U, 3U, WDGM_LOCAL_STATUS_OK}, // update counters
  03.03: { 1U, 3U, WDGM_LOCAL_STATUS_OK}, // call main and update counters for next run
  03.04: { 1U, 2U, WDGM_LOCAL_STATUS_OK}, // that's one counter update missing
  03.05: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed

Tst_Config_30119_M6_1:
  04.01: { 0U, 0U, WDGM_LOCAL_STATUS_OK}, // status must be ok after mode switch
  04.02: { 0U, 3U, WDGM_LOCAL_STATUS_OK}, // update counters
  04.03: { 1U, 1U, WDGM_LOCAL_STATUS_OK}, // call main and update counters for next run
  04.04: { 1U, 2U, WDGM_LOCAL_STATUS_OK}, // call main and update counters for next run
  04.05: { 1U, 3U, WDGM_LOCAL_STATUS_OK}, // call main and update counters for next run
  04.06: { 1U, 4U, WDGM_LOCAL_STATUS_OK}, // call main and update counters for next run
  04.07: { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // status still ok here
  04.08: { 0U, 5U, WDGM_LOCAL_STATUS_OK}, // update counters: one too much
  04.09: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed

Tst_Config_30119_M6_2:
  05.01: { 0U, 3U, WDGM_LOCAL_STATUS_OK}, // update counters
  05.02: { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // call main but no counter update for next run
  05.03: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed


Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00321</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00318</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1843</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30120_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>1216</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
Check that "healing" of individual supervision status is supported
 (transition from WDGM_LOCAL_STATUS_FAILED to WDGM_LOCAL_STATUS_OK)

Test Object: None.
Test Precondition: 

  see TS_WDGM_30118_Multicore.


Test Execution: 

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_3
  For each entry in Tst_Config_Set,
  execute the following steps
    03 (Tst_CheckASCycle):
        Call WdgM_MainFunction() on all cores Tst_Config_Set.MFcalls times
    04 (Tst_CheckASCycle):
        In permutations p0, p1: Call WdgM_CheckpointReached(WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0, WdgMConf_WdgMCheckpoint_CP0_1)
        In permutations p2, p3: Call WdgM_UpdateAliveCounter(WdgMSupervisedEntity_0)
        exactly n=Tst_Config_Set.UAcalls times
    05 (Tst_CheckASCycle): VP (WdgM.ASR40.SWS_WdgM_00318)
        Verified by Step 04 and the following steps, because
        the fact that WdgM_UpdateAliveCounter calls WdgM_CheckpointReached
        is implicitly tested by checking that the resulting behavior
        after the WdgM_CheckpointReached and the WdgM_UpdateAliveCounter call
        is the same for all requirements tested regarding WdgM_CheckpointReached
        with at most one configured Checkpoint per Supervision Entity.
    06 (Tst_CheckASCycle): VP
        The local status of WdgMSupervisedEntity_0
        equals Tst_Config_Set.status

Additional Descriptions for steps 03 - 06 w.r.t. IV/OV entries:
Aim of this test is to check the correct incrementation and decrementation
of the Failed Alive Supervision Counter.
      Vector entry id of Tst_Config_Set
  Step |
    |  |
    |  |
   03(01): Do nothing
   04(01): Update Alive Counter by 3 for configured Supervision Entity
   05(01): see general description of this step
   06(01): VP(WdgM.ASR40.WDGM200, WDGM.EB.TIMEPM.WDGM020426)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(02): Call WdgM Main function on all cores such that SupervisionReferenceCycle is exactly reached
           =&gt; AliveCounter = 3 and equals ExpectedAliveIndications (3)
   04(02): Update Alive Counter by 2 for configured Supervision Entity
   05(02): see general description of this step
   06(02): VP(WdgM.ASR40.WDGM200, WdgM.SWS_WdgM_00201)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(03): Call WdgM Main function on all cores such that SupervisionReferenceCycle is exactly reached
           =&gt; AliveCounter = 2 is less than ExpectedAliveIndications (3)
           =&gt; Failed Alive Supervision Counter = 1 (incremented)
   04(03): Do nothing
   05(03): see general description of this step
   06(03): VP(WdgM.ASR40.WDGM200, WDGM.EB.ASR40.WDGM203)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------
   03(04): Call WdgM Main function on all cores such that SupervisionReferenceCycle is exactly reached
           =&gt; AliveCounter = 0 is less than ExpectedAliveIndications (3)
           =&gt; Failed Alive Supervision Counter = 2 (incremented)
   04(04): Do nothing
   05(04): see general description of this step
   06(04): VP(WdgM.ASR40.WDGM200, WDGM.EB.ASR40.WDGM204)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------
   03(05): Do nothing
   04(05): Update Alive Counter by 3 for configured Supervision Entity
   05(05): see general description of this step
   06(05): VP(WdgM.ASR40.WDGM200)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------
   03(06): Call WdgM Main function on all cores such that SupervisionReferenceCycle is exactly reached
           =&gt; AliveCounter = 3 and equals ExpectedAliveIndications (3)
           =&gt; Failed Alive Supervision Counter = 1 (decremented)
   04(06): Do nothing
   05(06): see general description of this step
   06(06): VP(WdgM.ASR40.WDGM200, WDGM.EB.ASR40.WDGM203, WDGM.EB.ASR40.WDGM300)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------
   03(07): Do nothing
   04(07): Update Alive Counter by 3 for configured Supervision Entity
   05(07): see general description of this step
   06(07): VP(WdgM.ASR40.WDGM200)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------
   03(08): Call WdgM Main function on all cores such that SupervisionReferenceCycle is exactly reached
           =&gt; AliveCounter = 3 and equals ExpectedAliveIndications (3)
           =&gt; Failed Alive Supervision Counter = 0 (decremented)
   04(08): Do nothing
   05(08): see general description of this step
   06(08): VP(WdgM.ASR40.WDGM200, WdgM.SWS_WdgM_00205)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(09): Do nothing
   04(09): Update Alive Counter by 4 for configured Supervision Entity
   05(09): see general description of this step
   06(09): VP(WdgM.ASR40.WDGM200)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------
   03(10): Call WdgM Main function on all cores such that SupervisionReferenceCycle is exactly reached
           =&gt; AliveCounter = 4 and greater than ExpectedAliveIndications (3)
           =&gt; Failed Alive Supervision Counter = 1 (incremented)
   04(10): Do nothing
   05(10): see general description of this step
   06(10): VP(WdgM.ASR40.WDGM200, WDGM.EB.ASR40.WDGM203)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------
   03(11): Do nothing
   04(11): Update Alive Counter by 3 for configured Supervision Entity
   05(11): see general description of this step
   06(11): VP(WdgM.ASR40.WDGM200)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_FAILED
   -------------------------------------------------------------------------
   03(12): Call WdgM Main function on all cores such that SupervisionReferenceCycle is exactly reached
           =&gt; AliveCounter = 3 and equals ExpectedAliveIndications (3)
           =&gt; Failed Alive Supervision Counter = 0 (decremented)
   04(12): Do nothing
   05(12): see general description of this step
   06(12): VP(WdgM.ASR40.WDGM200, WdgM.SWS_WdgM_00205)
       local status of Supervision Entity = WDGM_LOCAL_STATUS_OK
   -------------------------------------------------------------------------


Test Input: 

Tst_Config_Set:
       MFcalls  (Main function calls)
         |  UAcalls (CheckpointReached function calls)
         |   |          status (Expected local supervision status)
         |   |             |
  01: { 0U, 3U, WDGM_LOCAL_STATUS_OK}, // update counters for first run (ok)
  02: { 1U, 2U, WDGM_LOCAL_STATUS_OK}, // that's one counter update missing
  03: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed -&gt; failed (FailedCnt=1)
  04: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed -&gt; failed (FailedCnt=2)
  05: { 0U, 3U, WDGM_LOCAL_STATUS_FAILED}, // update counters so recovery may happen (FailedCnt=2)
  06: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed -&gt; recovered (FailedCnt=1)
  07: { 0U, 3U, WDGM_LOCAL_STATUS_FAILED}, // update counters so recovery may happen (FailedCnt=1)
  08: { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // next reference cycle elapsed -&gt; recovered (FailedCnt=0)
  09: { 0U, 4U, WDGM_LOCAL_STATUS_OK}, // one counter update too much
  10: { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed -&gt; failed (FailedCnt=1)
  11: { 0U, 3U, WDGM_LOCAL_STATUS_FAILED}, // update counters so recovery may happen (FailedCnt=1)
  12: { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // next reference cycle elapsed -&gt; recovered (FailedCnt=0)


Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020426</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>696</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00318</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1844</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30122_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>1412</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
Check that after WdgMFailedSupervisionRefCycleTol, WDGM_LOCAL_STATUS_EXPIRED is
   reached.

Test Object: None.
Test Precondition: None.
Test Execution: 

For each entry in Tst_Config_Set:
  01: Re-initialize WdgM
  02: Switch mode to Tst_Config_Set.WdgMMode
  For each entry in Tst_Config_Set.Tst_SubConfig_Set,
  execute the following steps
    03 (Tst_CheckASCycle):
        Call WdgM_MainFunction() on all cores Tst_SubConfig_Set.MFcalls times
    04 (Tst_CheckASCycle):
        In permutations p0, p1: Call WdgM_CheckpointReached(WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0, WdgMConf_WdgMCheckpoint_CP0_1)
        In permutations p2, p3: Call WdgM_UpdateAliveCounter(WdgMSupervisedEntity_0)
        exactly n=Tst_SubConfig_Set.UAcalls times
    05 (Tst_CheckASCycle): VP (WdgM.ASR40.SWS_WdgM_00318)
        Verified by Step 04 and the following steps, because
        the fact that WdgM_UpdateAliveCounter calls WdgM_CheckpointReached
        is implicitly tested by checking that the resulting behavior
        after the WdgM_CheckpointReached and the WdgM_UpdateAliveCounter call
        is the same for all requirements tested regarding WdgM_CheckpointReached
        with at most one configured Checkpoint per Supervision Entity.
    06 (Tst_CheckASCycle): VP
        The local status of WdgMSupervisedEntity_0
        equals Tst_SubConfig_Set.status


Test Input: 

Tst_Config_Set:
    WdgMMode          Tst_SubConfig_Set
       |                     |
  { WdgMMode_2, Tst_Config_30122_M2 },
  { WdgMMode_3, Tst_Config_30122_M3 },
  { WdgMMode_5, Tst_Config_30122_M5 },

Tst_SubConfig_Sets:

Tst_Config_30122_M2:
  MFcalls  (Main function calls)
    |  UAcalls (CheckpointReached function calls)
    |   |          status (Expected local supervision status)
    |   |             |
  { 0U, 0U, WDGM_LOCAL_STATUS_OK}, // status must be ok after mode switch
  { 2U, 1U, WDGM_LOCAL_STATUS_OK}, // and before reference cycle is reached
  { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // state should still be ok
  { 2U, 0U, WDGM_LOCAL_STATUS_OK}, // no counter updates
  { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed -&gt; failed
  { 2U, 0U, WDGM_LOCAL_STATUS_FAILED}, // still failed (cycle not reached)
  { 1U, 0U, WDGM_LOCAL_STATUS_EXPIRED}, // next reference cycle elapsed -&gt; expired (WDGM206)
Tst_Config_30122_M3:
  { 0U, 3U, WDGM_LOCAL_STATUS_OK}, // update counter, state must be ok
  { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // call main but no counter update for next run
  { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed
  { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed
  { 1U, 0U, WDGM_LOCAL_STATUS_EXPIRED}, // limit reached -&gt; expired (WDGM206)
Tst_Config_30122_M5:
  { 0U, 0U, WDGM_LOCAL_STATUS_OK}, // status must be ok after mode switch
  { 0U, 1U, WDGM_LOCAL_STATUS_OK}, // update counter
  { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // call main and don't update counters
  { 1U, 0U, WDGM_LOCAL_STATUS_EXPIRED}, // call main -&gt; expired (WDGM202)


Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00318</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1845</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30121_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>1520</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
Check that no "healing" is done if individual supervision status is
   WDGM_LOCAL_STATUS_EXPIRED.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_3
  For each entry in Tst_Config_Set,
  execute the following steps
    03 (Tst_CheckASCycle):
        Call WdgM_MainFunction() on all cores Tst_Config_Set.MFcalls times
    04 (Tst_CheckASCycle):
        In permutations p0, p1: Call WdgM_CheckpointReached(WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0, WdgMConf_WdgMCheckpoint_CP0_1)
        In permutations p2, p3: Call WdgM_UpdateAliveCounter(WdgMSupervisedEntity_0)
        exactly n=Tst_Config_Set.UAcalls times
    05 (Tst_CheckASCycle): VP (WdgM.ASR40.SWS_WdgM_00318)
        Verified by Step 04 and the following steps, because
        the fact that WdgM_UpdateAliveCounter calls WdgM_CheckpointReached
        is implicitly tested by checking that the resulting behavior
        after the WdgM_CheckpointReached and the WdgM_UpdateAliveCounter call
        is the same for all requirements tested regarding WdgM_CheckpointReached
        with at most one configured Checkpoint per Supervision Entity.
    06 (Tst_CheckASCycle): VP
        The local status of WdgMSupervisedEntity_0
        equals Tst_Config_Set.status


Test Input: 

Tst_Config_Set:

  MFcalls  (Main function calls)
    |  UAcalls (CheckpointReached function calls)
    |   |          status (Expected local supervision status)
    |   |             |
  { 0U, 3U, WDGM_LOCAL_STATUS_OK}, // update counters for first run (ok)
  { 1U, 0U, WDGM_LOCAL_STATUS_OK}, // no counter updates any more
  { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed -&gt; failed
  { 1U, 0U, WDGM_LOCAL_STATUS_FAILED}, // next reference cycle elapsed
  { 1U, 0U, WDGM_LOCAL_STATUS_EXPIRED}, // next reference cycle elapsed -&gt; expired
  { 0U, 3U, WDGM_LOCAL_STATUS_EXPIRED}, // update counters so timing is ok again
  { 1U, 0U, WDGM_LOCAL_STATUS_EXPIRED}, // next reference cycle elapsed -&gt; no recovery
  { 0U, 3U, WDGM_LOCAL_STATUS_EXPIRED}, // update counters so timing is ok
  { 1U, 0U, WDGM_LOCAL_STATUS_EXPIRED}, // next reference cycle elapsed -&gt; no recovery


Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00318</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1846</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30125_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>1611</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that mode switch is not possible if a
SE is in status WDGM_LOCAL_STATUS_EXPIRED.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_3
  03: Call WdgM_MainFunction()  on all cores three times
  04: VP (WDGM.EB.TIMEPM.WDGM020423, WdgM.ASR40.SWS_WdgM_00145)
      local state of WdgMSupervisedEntity_0 equals
      WDGM_LOCAL_STATUS_EXPIRED
  05: Switch to mode WdgMMode_0 where
      WdgMSupervisedEntity_0 is not active
  06: VP (WDGM.EB.TIMEPM.WDGM020423, WdgM.SWS_WdgM_00145)
      E_NOT_OK is returned, and no mode
      switch was performed


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020423</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1847</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30129_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>1695</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that the Local Supervision Status is calculated correctly regarding
an activation / de-activation of a Supervised Entity in the new WdgM mode when a
mode change is done:

1) Check the successful WdgM mode switch after a call to
   WdgM_MainFunction() on all cores if the WdgM mode Switch was requested before
   by a call to WdgM_SetMode() and the following pre-conditions are fulfilled:
   - WdgM is initialized
   - the Local Supervision Status of all Supervised Entities was one of
     either WDGM_LOCAL_STATUS_OK, WDGM_LOCAL_STATUS_FAILED,
     or WDGM_LOCAL_STATUS_DEACTIVATED
   - no CallerIDs are configured

2) Check that if the Supervised Entity was in Local Supervision Status
   WDGM_LOCAL_STATUS_DEACTIVATED in the old WdgM mode and
   the Supervised Entity is active in the new WdgM mode,
   then the Local Supervision Status equals WDGM_LOCAL_STATUS_OK.

3) Check that if the Supervised Entity was in Local Supervision Status
   WDGM_LOCAL_STATUS_OK in the old WdgM mode and
   the Supervised Entity is de-activated in the new WdgM mode,
   then the Local Supervision Status equals WDGM_LOCAL_STATUS_DEACTIVATED.

4) Check that if the Supervised Entity was in Local Supervision Status
   WDGM_LOCAL_STATUS_FAILED in the old WdgM mode and
   the Supervised Entity is de-activated in the new WdgM mode,
   then the Local Supervision Status equals WDGM_LOCAL_STATUS_DEACTIVATED.

 Note: This test-case regarding test aspect 3) assumes that the
       Local Supervision Status does not change during MainFunction
       execution (due to a detected supervision failure).
       This issue is tested in test-case TS_WDGM_30127_Multicore.


Test Object: None.
Test Precondition: 

WdgM configuration: see TS_WDGM_30118_Multicore

Runtime pre-conditions:
 - WdgM is initialized
 - During complete test execution, all Supervised Entities have a Local
   Supervision Status which equals one of WDGM_LOCAL_STATUS_OK,
   WDGM_LOCAL_STATUS_FAILED, or WDGM_LOCAL_STATUS_DEACTIVATED.

Configuration pre-conditions:
- CallerIDs are not configured / used


Test Execution: 

Transition table for Local Supervision Status of WdgMSupervisedEntity_0
--------------------------------------------------------------------------------------------
Item| Transition Trigger | Initial State                 | Final State
No. | / Execution Step   |                               | / Execution Step of VP
    |                    |                               |   and requirement (optional)
============================================================================================
1   | WdgM_SetMode + MF  | WDGM_LOCAL_STATUS_DEACTIVATED | WDGM_LOCAL_STATUS_OK
    | Execution Step: 02 |                               |
--------------------------------------------------------------------------------------------
2   | MF                 | WDGM_LOCAL_STATUS_OK          | WDGM_LOCAL_STATUS_FAILED
    | Execution Step: 03 |                               |
--------------------------------------------------------------------------------------------
3   | WdgM_SetMode + MF  | WDGM_LOCAL_STATUS_FAILED      | WDGM_LOCAL_STATUS_DEACTIVATED
    | Execution Step: 05 |                               | 07: VP (WDGM.EB.TIMEPM.WDGM020423
--------------------------------------------------------------------------------------------
4   | WdgM_SetMode + MF  | WDGM_LOCAL_STATUS_DEACTIVATED | WDGM_LOCAL_STATUS_OK
    | Execution Step: 08 |                               | 10: VP (WDGM.EB.TIMEPM.WDGM020421
--------------------------------------------------------------------------------------------
5   | WdgM_SetMode + MF  | WDGM_LOCAL_STATUS_OK          | WDGM_LOCAL_STATUS_DEACTIVATED
    | Execution Step: 11 |                               | 13: VP (WDGM.EB.TIMEPM.WDGM020422
--------------------------------------------------------------------------------------------
Note: MF ... WdgM_MainFunction call

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_3 (apply request by call to MainFunction)
  03: Call WdgM_MainFunction() on all cores once
  04: VP (WDGM.EB.TIMEPM.WDGM020423)
      local state of WdgMSupervisedEntity_0 equals
      WDGM_LOCAL_STATUS_FAILED
  05: Switch to mode WdgMMode_0 where
      WdgMSupervisedEntity_0 is not active
  06: VP (WDGM.EB.TIMEPM.WDGM020425)
      E_OK is returned, and mode
      switch was performed
  07: VP (WDGM.EB.TIMEPM.WDGM020423)
      local state of WdgMSupervisedEntity_0 equals
      WDGM_LOCAL_STATUS_DEACTIVATED
  08: Switch to mode WdgMMode_3 where
      WdgMSupervisedEntity_0 is active
  09: VP (WDGM.EB.TIMEPM.WDGM020425)
      E_OK is returned, and mode
      switch was performed
  10: VP (WDGM.EB.TIMEPM.WDGM020421)
      local state of WdgMSupervisedEntity_0 equals
      WDGM_LOCAL_STATUS_OK
  11: Switch to mode WdgMMode_0 where
      WdgMSupervisedEntity_0 is not active
  12: VP (WDGM.EB.TIMEPM.WDGM020425)
      E_OK is returned, and mode
      switch was performed
  13: VP (WDGM.EB.TIMEPM.WDGM020423)
      local state of WdgMSupervisedEntity_0 equals
      WDGM_LOCAL_STATUS_DEACTIVATED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020425</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020422</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>691</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020423</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1848</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30123_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>1916</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Test that after a call to WdgM_MainFunction on all cores, the Global Supervision Status
is calculated correctly based on the new Local Supervision Status values
of all activated Supervised Entities.

This is done by testing the following aspects:
1) (WDGM.EB.TIMEPM.WDGM020428)
   Test that after a call to WdgM_Init, then, after a subsequent
   call to WdgM_MainFunction on all cores, the Global Supervision Status equals WDGM_GLOBAL_STATUS_OK.

2) (WdgM.ASR40.SWS_WdgM_00078)
   Test that if the Global Supervision Status was WDGM_GLOBAL_STATUS_OK and the Local
   Supervision Status of all Supervised Entities are either
   WDGM_LOCAL_STATUS_OK or WDGM_LOCAL_STATUS_DEACTIVATED, then
   the new Global Supervision Status is WDGM_GLOBAL_STATUS_OK.

3) (WdgM.ASR40.SWS_WdgM_00076)
   Test that if the Global Supervision Status was WDGM_GLOBAL_STATUS_OK, the Local
   Supervision Status of at least one Supervised Entity is
   WDGM_LOCAL_STATUS_FAILED, and no Supervised Entity is in Local
   Supervision Status WDGM_LOCAL_STATUS_EXPIRED, then
   the new Global Supervision Status is WDGM_GLOBAL_STATUS_FAILED.

4) (WDGM.EB.ASR40.WDGM077)
   Test that if the Global Supervision Status was WDGM_GLOBAL_STATUS_FAILED, the Local
   Supervision Status of at least one Supervised Entity is
   WDGM_LOCAL_STATUS_EXPIRED, and the Expired Supervision Tolerance is
   configured to a value larger than zero, then
   - the new Global Supervision Status is WDGM_GLOBAL_STATUS_EXPIRED, and
   - the internal Expired Cycle Counter is set to 1

5) (WdgM.SWS_WdgM_00219)
   Test that if the Global Supervision Status was WDGM_LOCAL_STATUS_EXPIRED, the Local
   Supervision Status of at least one Supervised Entity is
   WDGM_LOCAL_STATUS_EXPIRED, and the Expired Cycle Counter + 1 is less or equal
   to the configured Expired Supervision Tolerance, then
   - the new Global Supervision Status is WDGM_GLOBAL_STATUS_EXPIRED, and
   - the internal Expired Cycle Counter is incremented by 1.

6) (WdgM.SWS_WdgM_00220)
   Test that if the Global Supervision Status was WDGM_GLOBAL_STATUS_EXPIRED, the Local
   Supervision Status of at least one Supervised Entity is
   WDGM_LOCAL_STATUS_EXPIRED, and the Expired Cycle Counter + 1 is larger than
   the configured Expired Supervision Tolerance, then
   the new Global Supervision Status is WDGM_GLOBAL_STATUS_STOPPED.

7) (WdgM.SWS_WdgM_00221)
   Test that if the Global Supervision Status was WDGM_GLOBAL_STATUS_STOPPED, then
   the new Global Supervision Status does not change anymore (except after a re-initialization
   of the WdgM).


Test Object: None.
Test Precondition: 

WdgM configuration: see TS_WDGM_30118_Multicore
  Further:
    - Expired Supervision Tolerance for used WdgM Mode (WdgMMode_1) is configured to 2

Runtime pre-conditions:
 - WdgM is newly re-initialized


Test Execution: 

Transition table for Global Supervision Status:
-----------------------------------------------------------------------------------------------
Item| Transition Trigger   | Initial Global State /         | Final Global State /
 No.| Local SE State Trans.| Initial Global Status          | Final Global Status
    | / Execution Step     |                                |Execution Step of VP
===============================================================================================
1   | WdgM_Init + MF       | WDGM_NOT_INITIALIZED /         | WDGM_OK_MODE_NOT_PENDING /
    | SE0: DEACT  -&gt;DEACT  | WDGM_GLOBAL_STATUS_DEACTIVATED | WDGM_GLOBAL_STATUS_OK
    | SE1: DEACT  -&gt;DEACT  |                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 01   |                                |02: VP (WDGM.EB.TIMEPM.WDGM020428)
-----------------------------------------------------------------------------------------------
2   | WdgM_SetMode + MF    | WDGM_OK_MODE_NOT_PENDING /     | WDGM_OK_MODE_NOT_PENDING /
    | SE0: DEACT  -&gt;OK     | WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_OK
    | SE1: DEACT  -&gt;OK     |                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 03   |                                |04: VP (WdgM.SWS_WdgM_00078)
-----------------------------------------------------------------------------------------------
3   | UpdateAliveCnt + MF  | WDGM_OK_MODE_NOT_PENDING /     | WDGM_OK_MODE_NOT_PENDING /
    | SE0: OK     -&gt;OK     | WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_OK
    | SE1: OK     -&gt;OK     |                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 05,06|                                |07: VP (WdgM.SWS_WdgM_00078)
-----------------------------------------------------------------------------------------------
4   | UpdateAliveCnt + MF  | WDGM_OK_MODE_NOT_PENDING /     | WDGM_OK_MODE_NOT_PENDING /
    | SE0: DEACT  -&gt;OK     | WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_FAILED
    | SE1: DEACT  -&gt;FAILED |                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 08,09|                                |10: VP (WdgM.SWS_WdgM_00076)
-----------------------------------------------------------------------------------------------
5   | UpdateAliveCnt + MF  | WDGM_OK_MODE_NOT_PENDING /     | WDGM_OK_MODE_NOT_PENDING /
    | SE0: DEACT  -&gt;OK     | WDGM_GLOBAL_STATUS_FAILED      | WDGM_GLOBAL_STATUS_EXPIRED
    | SE1: DEACT  -&gt;EXPIRED|                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 11,12|                                |13: VP (WDGM.EB.ASR40.WDGM077)
    |                      |Note: ExpSupervCnt = 0          |Note: ExpSupervCnt = 1 &lt;= ExpSupervTol
-----------------------------------------------------------------------------------------------
6   |  MF                  | WDGM_OK_MODE_NOT_PENDING /     | WDGM_OK_MODE_NOT_PENDING /
    | SE0: DEACT  -&gt;FAILED | WDGM_GLOBAL_STATUS_EXPIRED     | WDGM_GLOBAL_STATUS_EXPIRED
    | SE1: DEACT  -&gt;EXPIRED|                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 14   |                                |15: VP (WdgM.SWS_WdgM_00219)
    |                      |Note: ExpSupervCnt = 1          |Note: ExpSupervCnt = 2 &lt;= ExpSupervTol
-----------------------------------------------------------------------------------------------
7   | UpdateAliveCnt + MF  | WDGM_OK_MODE_NOT_PENDING /     | WDGM_OK_MODE_NOT_PENDING /
    | SE0: DEACT  -&gt;OK     | WDGM_GLOBAL_STATUS_EXPIRED     | WDGM_GLOBAL_STATUS_STOPPED
    | SE1: DEACT  -&gt;EXPIRED|                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 16,17|                                |18: VP (WdgM.SWS_WdgM_00220)
    |                      |Note: ExpSupervCnt = 2          |
-----------------------------------------------------------------------------------------------
8   | UpdateAliveCnt + MF  | WDGM_OK_MODE_NOT_PENDING /     | WDGM_OK_MODE_NOT_PENDING /
    | SE0: DEACT  -&gt;OK     | WDGM_GLOBAL_STATUS_STOPPED     | WDGM_GLOBAL_STATUS_STOPPED
    | SE1: DEACT  -&gt;EXPIRED|                                |
    | SE2: DEACT  -&gt;DEACT  |                                |
    | Execution Step: 19,20|                                |21: VP (WdgM.SWS_WdgM_00221)
-----------------------------------------------------------------------------------------------
Note: MF ............... WdgM_MainFunction call,
      UpdateAliveCnt ... Update Alive Counter of the active SEs to retrieve expected local states
      SE0 .............. WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0,
      SE1 .............. WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_1,
      SE2 .............. WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_2,
      DEACT ............ WDGM_LOCAL_STATUS_DEACTIVATED,
      OK ............... WDGM_LOCAL_STATUS_OK,
      FAILED ........... WDGM_LOCAL_STATUS_FAILED,
      EXPIRED .......... WDGM_LOCAL_STATUS_EXPIRED
      ExpSupervCnt ..... Expired Supervision Counter
      ExpSupervTol ..... Expired Supervision Tolerance (configured to 2)

  01: Re-initialize WdgM
  02: VP (WDGM.EB.TIMEPM.WDGM020428)
     global status equals: WDGM_GLOBAL_STATUS_OK, because of
     following expected local status information:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  03: Switch to mode WdgMMode_1
  04: VP (WdgM.ASR40.SWS_WdgM_00326, WDGM.EB.TIMEPM.WDGM020428)
     global status equals: WDGM_GLOBAL_STATUS_OK, because of
     following expected local status information:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  05: Call checkpoints CP0_1(core0) and CP1_1(core1) for the SEs
      WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0 and WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_1,
	  respectively
  06: Call WdgM_MainFunction() on all cores to re-calculate global state
  07: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00214, WdgM.SWS_WdgM_00078)
     global status equals: WDGM_GLOBAL_STATUS_OK, because of
     following expected local status information:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  08: Call checkpoint CP0_1 for the SE WdgMSupervisedEntity_0
  09: Call WdgM_MainFunction() on all cores to re-calculate global state
  10: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00214, WdgM.SWS_WdgM_00076)
     global status equals: WDGM_GLOBAL_STATUS_FAILED, because of
     following expected local status information:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  11: Call checkpoint CP0_1 for the SE
      WdgMSupervisedEntity_0
  12: Call WdgM_MainFunction() on all cores to re-calculate global state
  13: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00214, WDGM.EB.ASR40.WDGM077)
     global status equals: WDGM_GLOBAL_STATUS_EXPIRED, because of
     following expected local status information:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  14: Call WdgM_MainFunction() on all cores to re-calculate global state
  15: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00214, WdgM.SWS_WdgM_00219)
     global status equals: WDGM_GLOBAL_STATUS_EXPIRED, because of
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
     following expected local status information:
  16: Call checkpoint CP0_1 for the SE WdgMSupervisedEntity_0
  17: Call WdgM_MainFunction() on all cores to re-calculate global state
  18: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00214, WdgM.SWS_WdgM_00220)
     global status equals: WDGM_GLOBAL_STATUS_STOPPED, because of
     following expected local status information:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  19: Call checkpoints CP0_1 and CP1_1 for the SEs
      WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0 and WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_1,
      respectively
  20: Call WdgM_MainFunction() on all cores to re-calculate global state
  21: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00214, WdgM.SWS_WdgM_00221)
     global status equals: WDGM_GLOBAL_STATUS_STOPPED, because of
     following expected local status information:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00326</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00219</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00220</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1849</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30128_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>2307</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that WdgM_SetMode only works when global supervision status is
   WDGM_GLOBAL_STATUS_OK or WDGM_GLOBAL_STATUS_FAILED.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01 Re-initialize WdgM (initial mode = WdgMMode_0 where no SE is configured)
  02 VP (WdgM.SWS_WdgM_00145)
    global state equals: WDGM_GLOBAL_STATUS_OK
  03 switch to mode WdgMMode_1
  04 VP (WdgM.SWS_WdgM_00145)
     E_OK is returned and mode switch
     was correctly performed (i.e. getMode returns WdgMMode_1 )
  05 VP (WdgM.SWS_WdgM_00145, WdgM.ASR40.WDGM182)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  06 VP WdgM.SWS_WdgM_00145)
     global state equals: WDGM_GLOBAL_STATUS_OK
  07 Switch to mode WdgMMode_2 and call WdgM_MainFunction() on all cores
  08 VP (WdgM.SWS_WdgM_00145)
     E_OK is returned (WdgM_SetMode) and mode switch
     was correctly performed (i.e. getMode returns WdgMMode_2 )
  09 VP (WdgM.SWS_WdgM_00145, WdgM.ASR40.WDGM182, WdgM.SWS_WdgM_00315)
    The following local status information is retrieved
    - before mode switch was internally performed:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
    - after mode switch was internally performed:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  10 VP (WdgM.SWS_WdgM_00145)
     global state (old mode of step 07) equals: WDGM_GLOBAL_STATUS_FAILED
  11 switch to mode WdgMMode_1 and call WdgM_MainFunction() on all cores
  12 VP (WdgM.SWS_WdgM_00145, WdgM.ASR40.WDGM217, WdgM.ASR40.WDGM182)
     global state (new mode of step 07) equals: WDGM_GLOBAL_STATUS_FAILED
  13 VP (WdgM.SWS_WdgM_00145)
     E_OK is returned and mode switch
     was correctly performed (i.e. getMode returns WdgMMode_1 )
  14 VP (WdgM.SWS_WdgM_00145, WdgM.ASR40.WDGM182)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  15 VP (WdgM.SWS_WdgM_00145, WdgM.ASR40.WDGM217)
     global state equals: WDGM_GLOBAL_STATUS_FAILED
  16 Call WdgM_MainFunction() on all cores
  17 VP (WdgM.SWS_WdgM_00145)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  18 VP (WdgM.SWS_WdgM_00145)
     global state equals: WDGM_GLOBAL_STATUS_EXPIRED
  19 switch to mode WdgMMode_2
  20 VP (WdgM.SWS_WdgM_00316)
     E_NOT_OK is returned and mode switch
     was not performed (i.e. getMode returns WdgMMode_1 )
  21 Call WdgM_MainFunction() on all cores twice
  22 VP (WdgM.SWS_WdgM_00145)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  23 VP (WdgM.SWS_WdgM_00145)
     global state equals: WDGM_GLOBAL_STATUS_STOPPED
  24 switch to mode WdgMMode_2
  25 VP (WdgM.SWS_WdgM_00316)
     E_NOT_OK is returned and mode switch
     was not performed (i.e. getMode returns WdgMMode_1 )


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00316</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1850</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30124_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>2545</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that WDGM_E_MONITORING is reported to DEM if global supervision
   status reaches WDGM_LOCAL_STATUS_EXPIRED and that an Mcu reset is performed if
   global supervision status reaches WDGM_LOCAL_STATUS_STOPPED.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_1
      (has only WdgMSupervisedEntity_0 configured with
      expected indications 1, reference cycle 1, failed tolerance 1,
     margins 0, WdgMExpiredSupervisionCycleTol 3)
  03: Call WdgM_MainFunction() on all cores 
  04: VP (WdgM.SWS_WdgM_00326, WdgM.ASR40.SWS_WdgM_00004.11)
      global status equals: WDGM_GLOBAL_STATUS_FAILED
  05: VP (WdgM.ASR40.SWS_WdgM_00004.11)
      No Dem or Det called
  06: Call WdgM_MainFunction() on all cores 
  07: VP (WdgM.SWS_WdgM_00326, WdgM.ASR40.SWS_WdgM_00004.11)
      global status equals: WDGM_GLOBAL_STATUS_EXPIRED
  08: VP (WdgM.ASR40.SWS_WdgM_00004.11, WdgM.ASR40.WDGM338_Conf)
      No Dem or Det called
  09: Call WdgM_MainFunction() on all cores 
  10: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00133.1)
      global status equals: WDGM_GLOBAL_STATUS_EXPIRED
  11: VP (WdgM.SWS_WdgM_00133.1, WdgM.SWS_WdgM_00129)
      No Dem or Det called
      No Mcu_PerformReset() called
  12: Call WdgM_MainFunction() on all cores 
  13: VP (WdgM.SWS_WdgM_00326, WdgM.SWS_WdgM_00133.1)
      global status equals: WDGM_GLOBAL_STATUS_STOPPED
  14: VP (WdgM.SWS_WdgM_00133.1, WdgM.SWS_WdgM_00327, WdgM.ASR40.SWS_WdgM_00129)
      Dem is called once with following arguments:
        EventId = WDGM_E_MONITORING
        EventStatus = DEM_EVENT_STATUS_FAILED
  15: VP (WdgM.SWS_WdgM_00133.1)
      In configuration p0, p2:  Mcu_PerformReset() is called once
      In configuration p1, p3:  Mcu_PerformReset() is not called


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00133.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00338</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00327</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00326</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1851</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30126_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>2709</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that watchdog triggering is done based on global supervision status
and on configured watchdog modes.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Re-initialize WdgM
  02: VP
      global state equals WDGM_GLOBAL_STATUS_OK
  03: VP (WdgM.ASR40.WDGM336_Conf)
      getMode() returns initial mode (i.e. WdgMMode_0)
  04: VP (WdgM.SWS_WdgM_00119)
      Trigger condition is set for:
        DeviceIndex: 5
        TimeoutValue: 1
  05: Switch to mode WdgMMode_1 and call WdgM_MainFunction on all cores 
  06: VP (WdgM.ASR40.WDGM317)
      global state equals WDGM_GLOBAL_STATUS_OK (is calculated based on old mode
      and not on new mode after internal mode switch)
  07: VP (WdgM.ASR40.WDGM317)
      Trigger condition is set according to old mode
  08: Call WdgM_MainFunction() on all cores 
  09: VP (WdgM.SWS_WdgM_00120)
      global state equals WDGM_GLOBAL_STATUS_FAILED
  10: VP (WdgM.ASR40.SWS_WdgM_00223, WdgM.SWS_WdgM_00120)
      Trigger condition is set for:
        DeviceIndex: 5
        TimeoutValue: 1
  11: Call WdgM_MainFunction() on all cores 
  12: VP (WdgM.SWS_WdgM_00121)
      global state equals WDGM_GLOBAL_STATUS_EXPIRED
  13: VP (WdgM.ASR40.SWS_WdgM_00223, WdgM.SWS_WdgM_00121)
      Trigger condition is set for:
        DeviceIndex: 5
        TimeoutValue: 1
  14: Call WdgM_MainFunction() on all cores 
  15: VP (WdgM.SWS_WdgM_00121)
      global state equals WDGM_GLOBAL_STATUS_EXPIRED
  16: VP (WdgM.ASR40.SWS_WdgM_00223, WdgM.SWS_WdgM_00121)
      Trigger condition is set for:
        DeviceIndex: 5
        TimeoutValue: 1
  17: Call WdgM_MainFunction() on all cores 
  18: VP (WdgM.SWS_WdgM_00122, WdgM.ASR40.SWS_WdgM_00223)
      global state equals WDGM_GLOBAL_STATUS_EXPIRED
  19: VP (WdgM.ASR40.SWS_WdgM_00223, WdgM.SWS_WdgM_00122, WdgM.ASR40.SWS_WdgM_00223)
      Trigger condition is set for:
        DeviceIndex: 5
        TimeoutValue: 1
  20: Call WdgM_MainFunction() on all cores 
  21: VP (WdgM.SWS_WdgM_00122, WdgM.ASR40.SWS_WdgM_00223)
      global state equals WDGM_GLOBAL_STATUS_STOPPED
  22: VP (WdgM.ASR40.SWS_WdgM_00223, WdgM.SWS_WdgM_00122, WdgM.ASR40.SWS_WdgM_00223)
      Trigger condition is set for:
        DeviceIndex: 5
        TimeoutValue: 0


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00336</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00317</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1852</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30127_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>2932</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that the Local Supervision Status is calculated correctly regarding
a de-activation of a Supervised Entity in the new WdgM mode when
a Local Supervision Status change and a mode change are performed
in the same WdgM main function cycle.

1)Test that if
  a Supervised Entity is not referenced and no Supervision Function is configured
  for this Entity in the new WdgM Mode (i.e. de-activated), AND
  the Global Supervision Status is WDGM_GLOBAL_STATUS_OK or WDGM_GLOBAL_STATUS_FAILED then,
  after the mode switch, the Local Supervision Status is WDGM_LOCAL_STATUS_DEACTIVATED.

2)Test that if
  the Supervised Entity was in Local Supervision Status WDGM_LOCAL_STATUS_FAILED AND
  the WdgM main function performs a Mode Switch to a new WdgM mode AND
  the Supervised Entity is de-activated in the new WdgM mode
  THEN the WdgM main function shall change the Local Supervision Status
  to WDGM_LOCAL_STATUS_DEACTIVATED.

Note: The difference to test aspect 4) in TS_WDGM_30129_Multicore is that in this test-case,
      the Local Supervision Status WDGM_LOCAL_STATUS_FAILED exists temporarily
      (is set to WDGM_LOCAL_STATUS_FAILED in the same WdgM main function and
       was WDGM_LOCAL_STATUS_OK before the WdgM main function call).


Test Object: None.
Test Precondition: 

General WdgM configuration: see TS_WDGM_30118_Multicore

Runtime pre-conditions:
  - successful execution of TS_WDGM_30129_Multicore
  - WdgM is initialized

Configuration pre-conditions:
- CallerIDs are not configured / used
- WdgMSupervisedEntity_1 is refenced (activated) in WdgM mode WdgMMode_1 only
  with following configured parameters:
    SupervisionReferenceCycle    1
    ExpectedAliveIndications     1
    MaxMargin                    0
    MinMargin                    0
    FailedSupervisionRefCycleTol 1
    WdgMExpiredSupervisionCycleTol 3


Test Execution: 

Transition table for Local Supervision Status of WdgMSupervisedEntity_1
--------------------------------------------------------------------------------------------
Item| Transition Trigger | Initial State                 | Final State
No. | / Execution Step   |                               | / Execution Step of VP
    |                    |                               |   and requirements (optional)
============================================================================================
1   | WdgMMode_1 + MF    | WDGM_LOCAL_STATUS_DEACTIVATED | WDGM_LOCAL_STATUS_OK
    | Execution Step: 02 |                               |
--------------------------------------------------------------------------------------------
2   | WdgMMode_2 + MF    | WDGM_LOCAL_STATUS_OK          | WDGM_LOCAL_STATUS_FAILED
    |                    |                               | Rationale: ExpectedAliveIndications
    |                    |                               |  configured to 1 and alive counter
    |                    |                               |  was not incremented.
    |                     ------------------------------------------------------------------
    |                    | WDGM_LOCAL_STATUS_FAILED      | WDGM_LOCAL_STATUS_DEACTIVATED
    |                    |                               | 04: VP (WdgM.SWS_WdgM_00315,
    |                    |                               |         WdgM.ASR40.WDGM283,
    | Execution Step: 03 |                               |         WDGM.EB.TIMEPM.WDGM020423)
--------------------------------------------------------------------------------------------
Note: WdgMMode_1 ... call WdgM_SetMode with new WdGM mode set to WdgMMode_1
      WdgMMode_2 ... call WdgM_SetMode with new WdGM mode set to WdgMMode_1
      MF ........... call WdgM_MainFunction on all cores to apply the mode

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_1 and call WdgM_MainFunction on all cores(applies new mode)
  03: Switch to mode WdgMMode_2 and call WdgM_MainFunction on all cores(applies new mode)
  04: VP (WdgM.SWS_WdgM_00315, WdgM.ASR40.WDGM283, WDGM.EB.TIMEPM.WDGM020423)
    The following local status information is retrieved:
      - before mode switch during main function execution
        WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
        WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
        WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
      - after mode switch during main function execution
        WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
        WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
        WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00283</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020423</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1853</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30135_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>3104</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that global supervision status transitions directly from WDGM_GLOBAL_STATUS_FAILED
to WDGM_GLOBAL_STATUS_STOPPED if WdgMExpiredSupervisionCycleTol is 0.

Test Object: None.
Test Precondition: None.
Test Execution: 

This test is executed with the following permutations:
   Parameter / Permutation      |    p0   |    p1   |
------------------------------------------|----------
WdgMImmediateReset              | true    | false   |

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_4 which has the following configuration:
      Only WdgMSupervisedEntity_0 is configured with
       expected indications 1, reference cycle 1, failed tolerance 1,
       margins 0, WdgMExpiredSupervisionCycleTol 0)
  03: VP
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  04: VP
      global state equals WDGM_GLOBAL_STATUS_OK
  05: Call WdgM_MainFunction() on all cores 
  06: VP (WdgM.SWS_WdgM_00117)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  07: VP (WdgM.SWS_WdgM_00117)
      global state equals WDGM_GLOBAL_STATUS_FAILED
  08: Call WdgM_MainFunction() on all cores 
  09: VP (WdgM.SWS_WdgM_00117)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  10: VP (WdgM.SWS_WdgM_00117)
      global state equals WDGM_GLOBAL_STATUS_STOPPED
  11: VP (WdgM.SWS_WdgM_00133.1, WdgM.ASR40.SWS_WdgM_00129, WdgM.SWS_WdgM_00327)
      No Det called and Dem is called once with following arguments:
        EventId = WDGM_E_MONITORING
        EventStatus = DEM_EVENT_STATUS_FAILED
  12: VP (WdgM.SWS_WdgM_00133.1)
      In configuration p0, p2:  Mcu_PerformReset() is called once
      In configuration p1, p3:  Mcu_PerformReset() is not called


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00133.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00327</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1854</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30136_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>3258</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that global supervision status transitions directly from WDGM_GLOBAL_STATUS_OK
to WDGM_GLOBAL_STATUS_STOPPED if WdgMExpiredSupervisionCycleTol and
WdgMFailedAliveSupervisionRefCycleTol are 0.

Test Object: None.
Test Precondition: None.
Test Execution: 

This test is executed with the following permutations:
   Parameter / Permutation      |    p0   |    p1   |
------------------------------------------|----------
WdgMImmediateReset              | true    | false   |

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_8 which has the following configuration:
      Only WdgMSupervisedEntity_0 is configured with
       expected indications 1, reference cycle 1, failed tolerance 0,
       margins 0, WdgMExpiredSupervisionCycleTol 0)
  03: VP (WdgM.SWS_WdgM_00216)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  04: VP (WdgM.SWS_WdgM_00216)
      global state equals WDGM_GLOBAL_STATUS_OK
  05: Call WdgM_MainFunction() on all cores 
  06: VP (WdgM.SWS_WdgM_00216)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  07: VP (WdgM.SWS_WdgM_00216)
      global state equals WDGM_GLOBAL_STATUS_STOPPED
  08: VP (WdgM.SWS_WdgM_00133.1, WdgM.ASR40.SWS_WdgM_00129, WdgM.SWS_WdgM_00327)
      No Det called and Dem is called once with following arguments:
        EventId = WDGM_E_MONITORING
        EventStatus = DEM_EVENT_STATUS_FAILED
  09: VP (WdgM.SWS_WdgM_00133.1)
      In configuration p0, p2:  Mcu_PerformReset() is called once
      In configuration p1, p3:  Mcu_PerformReset() is not called


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00133.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00327</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1855</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30140_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>3390</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that global supervision status transitions directly from WDGM_GLOBAL_STATUS_OK
to WDGM_GLOBAL_STATUS_EXPIRED.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_5 which has the following configuration:
      Only WdgMSupervisedEntity_0 is configured with:
        SupervisionReferenceCycle      1
        ExpectedAliveIndications       1
        MaxMargin                      0
        MinMargin                      0
        FailedSupervisionRefCycleTol   0
        WdgMExpiredSupervisionCycleTol 5
        WdgMSupervisedEntityCoreId     0
  03: VP (WdgM.SWS_WdgM_00216)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  04: VP (WdgM.ASR40.SWS_WdgM_00215)
      global state equals WDGM_GLOBAL_STATUS_OK
  05: Call WdgM_MainFunction() on all cores 
  06: VP (WdgM.SWS_WdgM_00215)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_EXPIRED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  07: VP (WdgM.SWS_WdgM_00215)
      global state equals WDGM_GLOBAL_STATUS_EXPIRED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1856</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30141_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>3489</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
Check that global supervision status transitions from WDGM_GLOBAL_STATUS_FAILED
to WDGM_GLOBAL_STATUS_OK.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_4 which has the following configuration:
      Only WdgMSupervisedEntity_0 is configured with:
        SupervisionReferenceCycle      1
        ExpectedAliveIndications       1
        MaxMargin                      0
        MinMargin                      0
        FailedSupervisionRefCycleTol   1
        WdgMExpiredSupervisionCycleTol 0
        WdgMSupervisedEntityCoreId     0
  03: VP (WdgM.SWS_WdgM_00218)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  04: VP (WdgM.SWS_WdgM_00215)
      global state equals WDGM_GLOBAL_STATUS_OK
  05: Call WdgM_MainFunction() on all cores 
  06: VP (WdgM.SWS_WdgM_00218)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  07: VP (WdgM.SWS_WdgM_00218)
      global state equals WDGM_GLOBAL_STATUS_FAILED
  08: In permutations p0, p1: Call WdgM_CheckpointReached(WdgMConf_WdgMSupervisedEntity_WdgMSupervisedEntity_0, WdgMConf_WdgMCheckpoint_CP0_1)
      In permutations p2, p3: Call WdgM_UpdateAliveCounter(WdgMSupervisedEntity_0)
  08b: VP (WdgM.ASR40.SWS_WdgM_00318)
      Verified by Step 08 and the following steps, because
      the fact that WdgM_UpdateAliveCounter calls WdgM_CheckpointReached
      is implicitly tested by checking that the resulting behavior
      after the WdgM_CheckpointReached and the WdgM_UpdateAliveCounter call
      is the same for all requirements tested regarding WdgM_CheckpointReached
      with at most one configured Checkpoint per Supervision Entity.
  09: Call WdgM_MainFunction() on all cores 
  10: VP (WdgM.SWS_WdgM_00218)
    The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_DEACTIVATED
      WdgMSupervisedEntity_2: WDGM_LOCAL_STATUS_DEACTIVATED
  11: VP (WdgM.SWS_WdgM_00218)
      global state equals WDGM_GLOBAL_STATUS_OK


Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00318</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1857</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30143_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>3624</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that WdgM_GetFirstExpiredSEID() correctly returns
the last expired SEID.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Initialize WdgM and switch to mode WdgMMode_1
  02: Let WdgMSupervisedEntity_0 first expire 
  03: Call WdgM_GetFirstExpiredSEID()
  04: VP
     WdgM_GetFirstExpiredSEID() returns E_OK
     and the first expired Supervision Entity
     equals WdgMSupervisedEntity_0
  05: re-initialize the WdgM and switch to mode WdgMMode_1
  06: Let WdgMSupervisedEntity_1 first expire
  07: Call WdgM_GetFirstExpiredSEID()
  08: VP
     WdgM_GetFirstExpiredSEID() returns E_OK
     and the first expired Supervision Entity
     equals WdgMSupervisedEntity_1


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00349</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00351</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1858</internalId></specobject>
    <specobject>
      <id>TS_WDGM_30144_GetFirstExpiredSEID_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>3787</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that WdgM_Init clears from the non-initialized RAM the double-inverse
value storing the SEID that first reached the EXIRED state which
is the value returned by WdgM_GetFirstExpiredSEID().

Test Object: None.
Test Precondition: 

Some SEID expired before (i.e. TS_WDGM_30143_Multicore executed successfully)


Test Execution: 

  01 Call WdgM_GetFirstExpiredSEID()
  02 VP (WDGM.EB.TIMEPM.WDGM020434, WdgM.ASR40.WDGM349)
     WdgM_GetFirstExpiredSEID() returns E_OK
  03 re-initialize WdgM
  04 Call WdgM_GetFirstExpiredSEID()
  05 VP (WDGM.EB.TIMEPM.WDGM020434, WdgM.ASR40.WDGM349)
     WdgM_GetFirstExpiredSEID() returns E_NOT_OK


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020434</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>704</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00349</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1859</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ParalellAliveSupervision_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>3855</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test will check to see if we enter WDGM_LOCAL_STATUS_EXPIRED on the satellite core
  the global status is changed to WDGM_GLOBAL_STATUS_EXPIRED too.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Re-initialize WdgM
  02: Switch to mode WdgMMode_1 which has the following configuration:
        WdgMSupervisedEntity_0 is configured with:
        SupervisionReferenceCycle               1
        ExpectedAliveIndications                1
        MaxMargin                               0
        MinMargin                               0
        WdgMFailedAliveSupervisionRefCycleTol   1
        WdgMExpiredSupervisionCycleTol          3
        WdgMSupervisedEntityCoreId              0
        WdgMSupervisedEntity_1 is configured with:
        SupervisionReferenceCycle               1
        ExpectedAliveIndications                1
        MaxMargin                               0
        MinMargin                               0
        WdgMFailedAliveSupervisionRefCycleTol   1
        WdgMExpiredSupervisionCycleTol          3
        WdgMSupervisedEntityCoreId              1
  03: VP The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
  04: VP Global state equals WDGM_GLOBAL_STATUS_OK
  05: In permutations p0, p1: Call WdgM_CheckpointReached(WdgMSupervisedEntity_0, CP0_1)
      In permutations p2, p3: Call WdgM_UpdateAliveCounter(WdgMSupervisedEntity_0)
  06: Call WdgM_MainFunction() on all cores
  07: VP The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
  08: VP global state equals WDGM_GLOBAL_STATUS_FAILED
  09: In permutations p0, p1: Call WdgM_CheckpointReached(WdgMSupervisedEntity_0, CP0_1)
      and WdgM_CheckpointReached(WdgMSupervisedEntity_1, CP1_1)
      In permutations p2, p3: Call WdgM_UpdateAliveCounter(WdgMSupervisedEntity_0)
      and WdgM_UpdateAliveCounter(WdgMSupervisedEntity_1)
  10: VP The following local status information is retrieved:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
  11: VP Global state equals WDGM_GLOBAL_STATUS_OK
  12: Call two times WdgM_MainFunction() on SATELLITE_CORE_0  so we enter WDGM_LOCAL_STATUS_EXPIRED,
      on MASTER_CORE call in permutations p0, p1: Call WdgM_CheckpointReached(WdgMSupervisedEntity_0, CP0_1)
      in permutations p2, p3: Call WdgM_UpdateAliveCounter(WdgMSupervisedEntity_0)
      so we remain in WDGM_LOCAL_STATUS_OK
  13: VP Global state equals WDGM_GLOBAL_STATUS_EXPIRED
  14: Call three times WdgM_MainFunction() on MASTER_CORE so that the Master enters
      WDGM_GLOBAL_STATUS_STOPPED
  15: VP Global state equals WDGM_GLOBAL_STATUS_STOPPED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1860</internalId></specobject>
    <specobject>
      <id>TS_WDGM_GetFirstExpiredSEID_CorruptedData_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_11_AliveSupervision_multicore/source/application/WdgM_ConTest_11_AliveSupervision_Multicore.c</sourcefile>
      <sourceline>4059</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
 Check that WdgM_GetFirstExpiredSEID() fails when the datas are corrupted.

Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP Initialize WdgM and switch to mode WdgMMode_1
  02: VP Let WdgMSupervisedEntity_0 first expire 
  03: VP Simulate corrupted data with a bit-flip
  04: VP WdgM_GetFirstExpiredSEID() returns E_NOT_OK
  05: VP Restore the correct data, revert step 2
  06: VP WdgM_GetFirstExpiredSEID() returns E_OK


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetFirstExpired1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1861</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_CheckLogicalGraphs_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_12_LogicalSupervision_multicore/source/application/WdgM_ConTest_12_LogicalSupervision_Multicore.c</sourcefile>
      <sourceline>1007</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Checks that the function WdgM_CheckpointReached() performs the Logical Supervision
for the reported Supervised Entity using the reported Checkpoint for at least the following
different Graph configurations:
a) Internal Graph with with more 1 Intermediate Checkpoint (=&gt; more than 1 transitions)
b) Internal Graph with more than 1 Final Checkpoint
c) External Graph with more than 1 Initial Checkpoint
d) External Graph with more than 1 Intermediate Checkpoint (=&gt; more than 1 transitions)
e) External Graph with more than 1 Final Checkpoint
f) Internal Graph with Multiple Transitions (1 Initial and 1 Final Checkpoint)
g) External Graph with Multiple Transitions (1 Initial and 1 Final Checkpoint)

In permutation P2, ExtGraph2 of Mode 4 is optimized, all other internal and external graphs remained unchanged

 The testing method used is a combination between "Equivalence Class Partitioning" and
 "Pair wise tests", as following:
- Equivalence Class Partitioning:
    Regarding configuration parameters with Multiplicity greater than 1
    for Supervision Graphs (External and Internal), the following classes are identified:
 I)   Graph Type = [Internal, External]
 II)  Multiplicity of Initial Checkpoints      = [1, *]
 III) Multiplicity of Intermediate Checkpoints = [1, *]
 IV)  Multiplicity of Final Checkpoints        = [1, *]

- Pair wise tests:
   Based on class definition,
    Internal Graphs are tested with following pairs
      A) 1 Initial Checkpoint (Note: Multiple Initial Checkpoints not possible by specification)
      B) 1 Intermediate Checkpoint, Multiple Intermediate Checkpoints
      C) 1 Final Checkpoint, Multiple Final Checkpoints
    External Graphs are tested with following pairs
      A) 1 Initial Checkpoint, Multiple Initial Checkpoints
      B) 1 Intermediate Checkpoint, Multiple Intermediate Checkpoints
      C) 1 Final Checkpoint, Multiple Final Checkpoints
   Additionally,

Derived permutation table:
---------------------------------------
| Graph |  I)      | II) | III) | IV) |
=======================================
|  f)   | Internal |  1  |  1   |  1  |
|  a)   | Internal |  1  |  *   |  1  |
|  b)   | Internal |  1  |  1   |  *  |
|  g)   | External |  1  |  1   |  1  |
|  c)   | External |  *  |  1   |  1  |
|  d)   | External |  1  |  *   |  1  |
|  e)   | External |  1  |  1   |  *  |
=======================================


Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, ..., CP0_9
  WdgMSupervisedEntity_1: Checkpoints: CP1_1, CP1_2, ..., CP1_12
  WdgMSupervisedEntity_2: Checkpoints: CP2_1, CP2_2, ..., CP2_4
  WdgMSupervisedEntity_3: Checkpoints: CP3_1, CP3_2, ..., CP3_5
  WdgMSupervisedEntity_4: Checkpoints: CP4_1, CP4_2, ..., CP4_5

Modes and configured Logical Supervision Graphs:

Mode 0
Internal Graph(s): -
External Graph(s): -

Mode 1
Internal Graph(s):
  IntGraph1:
   0_1 -&gt; 0_2

  External Graph(s): -

Mode 2
Internal Graph(s):
  IntGraph1:
   0_1 -&gt; 0_2

  IntGraph2:
  f) 1_1 -&gt; 1_2 -&gt; 1_3 -&gt; 1_4

  a) IntGraph3:
         3_2
  3_1 -&gt; 3_3 -&gt; 3_5 (multiple intermediate CPs)
         3_4

  b) IntGraph4:
                4_3
  4_1 -&gt; 4_2 -&gt; 4_4 (multiple final CPs)
                4_5

External Graph(s): -

Mode 3
Internal Graph(s): -
External Graph(s):
  ExtGraph1:
  g) 0_3 -&gt; 1_5 -&gt; 1_6

Mode 4
Internal Graph(s): -
External Graph(s):
  c) ExtGraph2:
  0_5
  0_6 -&gt; 1_7 -&gt; 2_1  (multiple initial CPs)
  0_7
*In permutation P2 the ExtGraph2 is optimized, all other ExtGraphs are unchanged

  d) ExtGraph3:
         1_8
  0_8 -&gt; 1_9   -&gt; 1_11 (multiple intermediate CPs)
         1_10

  e) ExtGraph4:
                 2_2
  0_9 -&gt; 1_12 -&gt; 2_3 (multiple final CPs)
                 2_4


Test Execution: 

For each configured test graph:
  01: Re-initialize WdgM
  02: Switch to the WdgM Mode that has the corresponding graph configured

  Execute the following steps for each logically correct path sequence of this graph:
    03: Call WdgM_CheckpointReached()
    04: VP (WdgM.SWS_WdgM_00323):
        CheckpointReached returns E_OK

  05: Call WDGM_TST_CALL_MAINFUNCTION()
  06: Call WdgM_GetLocalStatus()
  07: VP (WdgM.SWS_WdgM_00323):
      GetLocalStatus returns WDGM_LOCAL_STATUS_OK

  Execute the following steps for some logically incorrect path sequences of this graph:
    08: Call WdgM_CheckpointReached()
    09: VP (WdgM.SWS_WdgM_00323):
        - CheckpointReached returns E_OK for Checkpoints in correct sequence
        - CheckpointReached returns E_NOT_OK till first violation of path sequence

  10: Call WDGM_TST_CALL_MAINFUNCTION()
  11: Call WdgM_GetLocalStatus()
  12: VP (WdgM.SWS_WdgM_00323):
      - GetLocalStatus returns WDGM_LOCAL_STATUS_EXPIRED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00345</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00344</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00324</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00319</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020136_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>609</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1862</internalId></specobject>
    <specobject>
      <id>TS_WDGM_InternalLogicalCheckpointReached_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_12_LogicalSupervision_multicore/source/application/WdgM_ConTest_12_LogicalSupervision_Multicore.c</sourcefile>
      <sourceline>1261</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that the result of Logical Supervision for the Supervised Entity is correctly calculated
on a WdgM_CheckpointReached() call with the reported checkpoint belonging to an internal graph.

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Re-initialize WdgM
  02: Set a mode that contains an internal graph
  03: VP
     E_OK is returned.
  04: Call WdgM_CheckpointReached() with a non-initial checkpoint of an internal graph
  05: VP
     E_NOT_OK is returned
  06: Reinitialize WdgM
  07: Set a mode that contains an internal graph
  08: VP
     E_OK is returned.
  09: Call WdgM_CheckpointReached() with an initial internal checkpoint
  10: VP
     E_OK is returned
  11: Call WdgM_CheckpointReached() with a correct successor of the previous checkpoint
  12: VP
     E_OK is returned
  13: Call WdgM_CheckpointReached() with an incorrect checkpoint (one that is not a
      successor of the previous checkpoint)
  14: VP
     E_NOT_OK is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00345</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1863</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ExternalLogicalCheckpointReached_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_12_LogicalSupervision_multicore/source/application/WdgM_ConTest_12_LogicalSupervision_Multicore.c</sourcefile>
      <sourceline>1360</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that the result of Logical Supervision for the Supervised Entity is correcty calculated
on a WdgM_CheckpointReached() call with the reported checkpoint belonging to an external graph.

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: Set a mode that contains at least one external graph
  03: VP
     E_OK is returned.
  04: Call WdgM_CheckpointReached() with a non-initial checkpoint of an external graph
  05: VP
     E_NOT_OK is returned
  06: Reinitialize WdgM
  07: Set a mode that contains at least one external graph
  08: VP
     E_OK is returned.
  09: Call WdgM_CheckpointReached() with an initial checkpoint of an external graph
  10: VP
     E_OK is returned.
  11: Call WdgM_CheckpointReached() with a correct succesor of the previous checkpoint
  12: VP
     E_OK is returned
  13: Call WdgM_CheckpointReached() with an incorrect checkpoint (one that is not a
      succesor of the previous checkpoint)
  14: VP
     E_NOT_OK is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1864</internalId></specobject>
    <specobject>
      <id>TS_WDGM_IgnoredCheckpoint_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_12_LogicalSupervision_multicore/source/application/WdgM_ConTest_12_LogicalSupervision_Multicore.c</sourcefile>
      <sourceline>1458</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that a reported checkpoint that does not belong to any graph is ignored by
the function WdgM_CheckpointReached and it does not update the result of
of the Logical Supervision for the Supervised Entity.

Test Object: None.
Test Precondition: 

Test Execution: 

  01: Initialize WdgM
  02: Set the mode WdgMConf_WdgMMode_WdgMMode_1
  03: VP
     E_OK is returned.
  04: VP
     Local status of WdgMSupervisedEntity_0 is WDGM_LOCAL_STATUS_OK
  05: Call WdgM_CheckpointReached() with a checkpoint of WdgMSupervisedEntity_0
     which does not belong to any graph.
  06: VP
     WdgM_CheckpointReached() returns E_OK
  07: Call main function
  08: VP (WdgM.ASR40.WDGM297)
     Local status of WdgMSupervisedEntity_0 has remained unchanged.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1865</internalId></specobject>
    <specobject>
      <id>TS_WDGM_IdentifyGraph_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_12_LogicalSupervision_multicore/source/application/WdgM_ConTest_12_LogicalSupervision_Multicore.c</sourcefile>
      <sourceline>1539</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that WdgM_CheckpointReached identifies to which one Graph a reached Checkpoint belongs.

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: Set the mode WdgMConf_WdgMMode_WdgMMode_1
  03: VP
     E_OK is returned.
  04: Call WdgM_CheckpointReached() with an initial internal checkpoint
  05: VP
     E_OK is returned
  06: Call WdgM_CheckpointReached() with the next checkpoint in the same internal graph
  07: VP
     E_OK is returned
  08: Call WdgM_CheckpointReached() with an initial external checkpoint
  09: VP
     E_OK is returned
  10: Call WdgM_CheckpointReached() with the next checkpoint in the same external graph
  11: VP
     E_OK is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1866</internalId></specobject>
    <specobject>
      <id>TS_WDGM_StoreCheckpoint_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_12_LogicalSupervision_multicore/source/application/WdgM_ConTest_12_LogicalSupervision_Multicore.c</sourcefile>
      <sourceline>1603</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that WdgM_CheckpointReached stores for an internal or external graph
the Checkpoint that has been most recently reported by a Supervised Entity

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: Set the mode WdgMConf_WdgMMode_WdgMMode_2
  03: VP
     E_OK is returned.
  04: Call WdgM_CheckpointReached() with an initial internal checkpoint
  05: VP
     E_OK is returned
  06: Call WdgM_CheckpointReached() with the next checkpoint in the same internal graph
  07: VP
     E_OK is returned
  08: Call WdgM_CheckpointReached() with an initial external checkpoint
  09: VP
     E_OK is returned
  10: Call WdgM_CheckpointReached() with the next checkpoint in the same external graph
  11: VP
     E_OK is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1867</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ActivityFlagSet_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_12_LogicalSupervision_multicore/source/application/WdgM_ConTest_12_LogicalSupervision_Multicore.c</sourcefile>
      <sourceline>1667</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that if the function WdgM_CheckpointReached reached the result correct, and the Checkpoint
is defined as a initial one, then the function WdgM_CheckpointReached sets the Activity Flag
of the corresponding graph to true.

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: Set the mode WdgMConf_WdgMMode_WdgMMode_2
  03: VP
     E_OK is returned.
  04: Call WdgM_CheckpointReached() with an initial internal checkpoint
  05: VP
     E_OK is returned
  06: Call WdgM_CheckpointReached() with the next checkpoint in the same internal graph
  07: VP
     E_OK is returned
  08: Call WdgM_CheckpointReached() with an initial external checkpoint
  09: VP
     E_OK is returned
  10: Call WdgM_CheckpointReached() with the next checkpoint in the same external graph
  11: VP
     E_OK is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00332</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00273</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00329</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1868</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ActivityFlagUnset_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_12_LogicalSupervision_multicore/source/application/WdgM_ConTest_12_LogicalSupervision_Multicore.c</sourcefile>
      <sourceline>1734</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that if the function WdgM_CheckpointReached reached the result correct, and the Checkpoint
is defined as a final one, then the function WdgM_CheckpointReached sets the Activity Flag
of the corresponding graph to false.

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: VP
     Set a mode that contains at least one external graph and check that
     E_OK is returned.
  03: VP
     Traverse an internal graph by calling WdgM_CheckpointReached() in order for checkpoints
     from the initial to the final one and check that it returns E_OK each time
  04: VP
     Call WdgM_CheckpointReached() with the initial checkpoint in the same internal graph
     and check that it returns E_OK
  05: VP
     Traverse an external graph by calling WdgM_CheckpointReached() in order for checkpoints
     from the initial to the final one and check that it returns E_OK each time
  06: VP
     Call WdgM_CheckpointReached() with the initial checkpoint in the same external graph
     and check that it returns E_OK.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00331</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1869</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ActivityFlagWdgMInit_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_12_LogicalSupervision_multicore/source/application/WdgM_ConTest_12_LogicalSupervision_Multicore.c</sourcefile>
      <sourceline>1820</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that The function WdgM_Init sets the Activity Flag for graphs to false

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: VP
     Set a mode that contains at least one external graph and check that
     E_OK is returned.
  03: VP
     Call WdgM_CheckpointReached() with the initial checkpoint of several internal and external graphs
     and check that it returns E_OK each time
  04: Reinitialize WdgM
  05: VP
     Set the same mode as before and check that  E_OK is returned.
  06: VP
     Call WdgM_CheckpointReached() with the initial checkpoint of the same graphs as before
     and check that it returns E_OK each time

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020430</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1870</internalId></specobject>
    <specobject>
      <id>TS_WDGM_InternalGraphMonitoring_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_12_LogicalSupervision_multicore/source/application/WdgM_ConTest_12_LogicalSupervision_Multicore.c</sourcefile>
      <sourceline>1896</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that in order to switch on and off the Logical monitoring of an Internal Graph
depending on the mode, it is needed to reference (or respectively do not
reference) the Supervised Entity from each mode.

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: VP
     Set the mode WdgMConf_WdgMMode_WdgMMode_1 and check that
     E_OK is returned.
  03: VP
     Call WdgM_CheckpointReached() with the initial internal CP of a referenced SE
     and check that E_OK is returned
  04: VP
     Call WdgM_CheckpointReached() with the initial internal CP of a SE that is not referenced
     and check that E_NOT_OK is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00212.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1871</internalId></specobject>
    <specobject>
      <id>TS_WDGM_InternalGraphCount_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_12_LogicalSupervision_multicore/source/application/WdgM_ConTest_12_LogicalSupervision_Multicore.c</sourcefile>
      <sourceline>1958</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that it is possible to have zero or one Internal Graph per Supervised Entity.

Test Object: None.
Test Precondition: 
The configuration contains at least one Supervised Entity with no Internal Graph and
at least one Supervised Entity with one Internal Graph

Test Execution: 
  01: Initialize WdgM
  02: VP
     Set the mode WdgMConf_WdgMMode_WdgMMode_4 and check that E_OK is returned.
  03: VP
     For the Supervised Entity that contains one Internal Graph call WdgM_CheckpointReached()
     with checkpoints that form a valid path from initial internal CP to the final internal CP
     and check that each time E_OK is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00212.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1872</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckpointNotMonitored_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_12_LogicalSupervision_multicore/source/application/WdgM_ConTest_12_LogicalSupervision_Multicore.c</sourcefile>
      <sourceline>2016</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that not all Checkpoints of a Supervised Entity need to be monitored.

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Initialize WdgM
  02: VP
     Set the mode WdgMConf_WdgMMode_WdgMMode_1 and check that E_OK is returned.
  03: VP
     Call WdgM_CheckpointReached() with a checkpoint of WdgMSupervisedEntity_0
     which is not monitored (does not belong to any graph) and check that
     E_OK is returned.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00212.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1873</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ParalellLogicalSupervision_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_12_LogicalSupervision_multicore/source/application/WdgM_ConTest_12_LogicalSupervision_Multicore.c</sourcefile>
      <sourceline>2070</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that Global Status is updated correctly from all the local statuses from all the other cores.

Test Object: None.
Test Precondition: 

Test Execution: 
  01: Re-initialize WdgM
  02: Switch to the WdgM Mode that has the corresponding graph configured

  Execute the following steps for each logically correct path sequence of this graph:
    03: Call WdgM_CheckpointReached()
    04: CheckpointReached returns E_OK

  05: Call WdgM_GetGlobalStatus() and it returns WDGM_GLOBAL_STATUS_OK
  06: Call WdgM_CheckpointReached() on the satellite with an incorrect checkpoint (one that is not a
      successor of the previous checkpoint), E_NOT_OK is returned
  07: Call Main function on all cores
  08: Check local status for all cores, the global status must be in WDGM_GLOBAL_STATUS_OK
  09: Call Main function on all cores to updated master status properly
  10: Call WdgM_GetGlobalStatus() and it returns WDGM_GLOBAL_STATUS_STOPPED

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00345</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1874</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_CheckDeadlineSupervision_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_13_DeadlineSupervision_multicore/source/application/WdgM_ConTest_13_DeadlineSupervision_Multicore.c</sourcefile>
      <sourceline>121</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

This test checks the following four aspects of Deadline Supervision:
a) Checks that when the Deadline Start Checkpoint is reached and this Checkpoint is referenced
   in the active Mode and it is called from the core to which it is allocated to, then the
   function WdgM_CheckpointReached records the current timestamp under the timestamp of the
   reached Deadline Start Checkpoint.
b) Check that when the Deadline End Checkpoint is reached and this Checkpoint is referenced
   in the active Mode and it is called from the core to which it is allocated to, and the
   activity flag of the corresponding Deadline Start Checkpoint is set true then the
   function WdgM_CheckpointReached measures the difference between current timestamp and
   the corresponding Deadline Start Checkpoint timestamp.
c) Check that if this time difference is not within the minimum and the maximum limits
   (WdgMDeadlineMin and WdgMDeadlineMax), then the function WdgM_CheckpointReached shall define
   the result of Deadline Supervision for the Supervised Entity as incorrect.
   Otherwise, it shall be defined as correct.
d) Check (with gray-box testing) that the timstamp of a start Checkpoint is recorded in the
   specified internal variable.

Used Test Strategies:
- Boundary Value Analysis
- Gray Box Testing


Test Object: None.
Test Precondition: 

WdgM is configured according to the following table:

--------------------------------------------------------------------------------------------------------
|      WdgMMode        | WdgMDeadlineSupervision   | DeadlineMax | DeadlineMin | StartRef  |  EndRef   |
========================================================================================================
|      WdgMMode_0      | WdgMDeadlineSupervision_0 |     2.0     |     1.0     | SE0/CP0_1 | SE0/CP0_2 |
--------------------------------------------------------------------------------------------------------
|      WdgMMode_1      | WdgMDeadlineSupervision_0 |     2.0     |     1.0     | SE1/CP1_1 | SE1/CP1_2 |
|      WdgMMode_1      | WdgMDeadlineSupervision_1 |     2.0     |     1.0     | SE1/CP1_2 | SE1/CP1_3 |
|      WdgMMode_1      | WdgMDeadlineSupervision_2 |     2.0     |     1.0     | SE1/CP1_4 | SE1/CP1_5 |
--------------------------------------------------------------------------------------------------------
|    WdgMMode_unused   |                           |             |             |           |           |
--------------------------------------------------------------------------------------------------------
| WdgMMode_MasterSlave | WdgMDeadlineSupervision_0 |     2.0     |     1.0     | SE0/CP0_4 | SE0/CP0_5 |
| WdgMMode_MasterSlave | WdgMDeadlineSupervision_1 |     2.0     |     1.0     | SE1/CP1_6 | SE1/CP1_7 |
--------------------------------------------------------------------------------------------------------

The initial WdgM mode is WdgMMode_0, Global Supervision Status equals WDGM_GLOBAL_STATUS_OK.


Test Execution: 

  Repeat test steps 01 - 07 for all items in testdata array for
  Iteration i = 1, 2, ..., 6:
    01: Initialize WdgM and testcase as stated in the pre-conditions.
    02: Set the WdgM_Mode and call WdgM_MainFunction for all cores.
    03: Call WdgM_CheckpointReached()on the core to which it is allocated to for Start-Checkpoint.
    04: VP (WDGM.EB.ASR40.WDGM228):
        WdgM_CheckpointReached() returns E_OK.
    05: VP (WDGM.EB.DesignDecision.InternalVariable4):
        Gray-box test: Start-Time is recorded in WdgM_EB_DMData[DeadlineId].StartTimestampData.
    06: Call WdgM_CheckpointReached() on the core to which it is allocated to for End-Checkpoint
        with the elapsed time stated in the i-th entry of the input data array.
    07: VP (WDGM.EB.ASR40.WDGM229, WDGM.EB.DesignDecision.InternalVariable9, WdgM.ASR40.WDGM294):
        WdgM_CheckpointReached() on the core to which it is allocated to returns expected result
        stated in i-th entry of the output data array.


Test Input: 
    constant testdata:
        WdgMMode: WdgMMode_0
        SE: WdgMSupervisedEntity_0
        Start-CP: CP0_1
        End-CP: CP0_2
    variable testdata:
        elapsed time:
            I.01: WDGM_TST_DS1_MIN_TIME,
            I.02: WDGM_TST_DS1_MIN_TIME + 1,
            I.03: WDGM_TST_DS1_MAX_TIME - 1,
            I.04: WDGM_TST_DS1_MAX_TIME
            I.05: WDGM_TST_DS1_MIN_TIME - 1,
            I.06: WDGM_TST_DS1_MAX_TIME + 1

Test Output: 
    expected result from call to the WdgM_CheckpointReached API:
        O.01: E_OK (minimum time)
        O.02: E_OK (minimum time + 1)
        O.03: E_OK (maximum time - 1)
        O.04: E_OK (maximum time)
        O.05: E_NOT_OK (minimum time - 1)
        O.06: E_NOT_OK (maximum time + 1)
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1672</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00294</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1667</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1875</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SimpleDeadlineSupervision_Multicore1</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_13_DeadlineSupervision_multicore/source/application/WdgM_ConTest_13_DeadlineSupervision_Multicore.c</sourcefile>
      <sourceline>330</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() on the core to which it is allocated to performs
the Deadline Supervision for Checkpoints of a Deadline Supervision configuration
and the deadline limits are not exceeded.

Used Test Strategies:
- Boundary Value Analysis


Test Object: None.
Test Precondition: 
For initial state of WdgM see preconditions of testcase TS_WDGM_CheckDeadlineSupervision_Multicore.
Other than that testcase, a WdgM mode with multiple Deadline Supervisions is used.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains a Deadline Supervision configuration
  03: Call WdgM_CheckpointReached on the core to which it is allocated to for the
      Start Checkpoint of the Deadline configuration (New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time within the minimum and the maximum limits
  06: Call WdgM_CheckpointReached on the core to which it is allocated to for the
      Stop Checkpoint of the Deadline configuration
  07: VP:
      WdgM_CheckpointReached returns E_OK
  08: Call WdgM_CheckpointReached on the core to which it is allocated to for the
      Start Checkpoint of the Deadline configuration (New Deadline monitoring is started)
  09: VP:
      WdgM_CheckpointReached returns E_OK
  10: Prepare time callout to return an elapsed which equals the minimum allowed limit
  11: Call WdgM_CheckpointReached on the core to which it is allocated to for the
      Stop Checkpoint of the Deadline configuration
  12: VP:
      WdgM_CheckpointReached returns E_OK
  13: Call WdgM_CheckpointReached on the core to which it is allocated to for the
      Start Checkpoint of the Deadline configuration (New Deadline monitoring is started)
  14: VP:
      WdgM_CheckpointReached returns E_OK
  15: Prepare time callout to return an elapsed which equals the maximum allowed limit
  16: Call WdgM_CheckpointReached on the core to which it is allocated to for the
      Stop Checkpoint of the Deadline configuration
  17: VP:
      WdgM_CheckpointReached returns E_OK

  Test strategy "boundary value tests" applied for lower / upper limits for testcases:
    - TS_WDGM_SimpleDeadlineSupervision_Multicore1
    - TS_WDGM_SimpleDeadlineSupervision_Multicore2
    - TS_WDGM_SimpleDeadlineSupervision_Multicore3


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1876</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SimpleDeadlineSupervision_Multicore2</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_13_DeadlineSupervision_multicore/source/application/WdgM_ConTest_13_DeadlineSupervision_Multicore.c</sourcefile>
      <sourceline>457</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() on the core to which it is allocated to performs
the Deadline Supervision for Checkpoints of a Deadline Supervision configuration where
the deadline limit (lower limit) is exceeded and that multiple
calls to the Stop Checkpoint do not reset the Deadline Supervision state.


Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision_Multicore.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains a Deadline Supervision configuration
  03: Call WdgM_CheckpointReached on the core to which it is allocated to for the
      Start Checkpoint of the Deadline configuration(New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time which is 1 below the minimum limit
  06: Call WdgM_CheckpointReached on the core to which it is allocated to for the
      Stop Checkpoint of the Deadline configuration
  07: VP:
      WdgM_CheckpointReached returns E_NOT_OK
  08: Call WdgM_CheckpointReached on the core to which it is allocated to for the
      Stop Checkpoint of the Deadline configuration
  09: VP:
      WdgM_CheckpointReached returns E_NOT_OK

  Test strategy: see TS_WDGM_SimpleDeadlineSupervision_Multicore1


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1877</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SimpleDeadlineSupervision_Multicore3</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_13_DeadlineSupervision_multicore/source/application/WdgM_ConTest_13_DeadlineSupervision_Multicore.c</sourcefile>
      <sourceline>543</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() on the core to which it is allocated to
performs the Deadline Supervision for Checkpoints of a Deadline Supervision
configuration where the deadline limit (upper limit) is exceeded and that
multiple calls to the Stop Checkpoint do not reset the Deadline Supervision state.


Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision_Multicore.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains a Deadline Supervision configuration
  03: Call WdgM_CheckpointReached on the core to which it is allocated to for the
      Start Checkpoint of the Deadline configuration(New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time which which exceeds the upper limit by 1
  06: Call WdgM_CheckpointReached on the core to which it is allocated to for the Stop Checkpoint
      of the Deadline configuration
  07: VP:
      WdgM_CheckpointReached returns E_NOT_OK
  08: Call WdgM_CheckpointReached on the core to which it is allocated to for the Stop Checkpoint
      of the Deadline configuration
  09: VP:
      WdgM_CheckpointReached returns E_NOT_OK

  Test strategy: see TS_WDGM_SimpleDeadlineSupervision_Multicore1


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1878</internalId></specobject>
    <specobject>
      <id>TS_WDGM_MultipleDeadlineSupervision_Multicore1</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_13_DeadlineSupervision_multicore/source/application/WdgM_ConTest_13_DeadlineSupervision_Multicore.c</sourcefile>
      <sourceline>629</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() on the core to which it is allocated to performs
the Deadline Supervision for Checkpoints of a multiple Deadline Supervision configuration
where the Stop Checkpoint is a Start Checkpoint of a further Deadline configuration
and the deadline limits are not exceeded.

Used Test Strategies:
- Boundary Value Analysis
- Gray Box Testing


Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision_Multicore.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains multiple Deadline Supervision configuration
      with Start / Stop Checkpoints
  03: Call WdgM_CheckpointReached on the core to which it is allocated to for the first
      Start Checkpoint of a Deadline configuration where the Stop Checkpoint is a
      Start Checkpoint of a further Deadline configuration(New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time within the minimum and the maximum limits
  06: Call WdgM_CheckpointReached on the core to which it is allocated to for the corresponding
      Stop Checkpoint of Step 03(New Deadline monitoring is started)
  07: VP:
      WdgM_CheckpointReached returns E_OK
  08: Prepare time callout to return an elapsed time within the minimum and the maximum limits
  09: Call WdgM_CheckpointReached on the core to which it is allocated to for the corresponding
      Stop / Start Checkpoint of Step 06(New Deadline monitoring is started)
  10: VP:
      WdgM_CheckpointReached returns E_OK

  Test strategy "boundary value tests" for lower / upper limits already applied via:
    - TS_WDGM_SimpleDeadlineSupervision_Multicore1
    - TS_WDGM_SimpleDeadlineSupervision_Multicore2
    - TS_WDGM_SimpleDeadlineSupervision_Multicore3


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1879</internalId></specobject>
    <specobject>
      <id>TS_WDGM_MultipleDeadlineSupervision_Multicore2</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_13_DeadlineSupervision_multicore/source/application/WdgM_ConTest_13_DeadlineSupervision_Multicore.c</sourcefile>
      <sourceline>727</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() on the core to which it is allocated to performs
the Deadline Supervision for the first Start Checkpoint of a multiple
Deadline Supervision configuration where the Stop Checkpoint is a Start Checkpoint of
a further Deadline configuration and the deadline limit (lower limit) is exceeded.


Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision_Multicore.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains multiple Deadline Supervision configuration
      with Start / Stop Checkpoints
  03: Call WdgM_CheckpointReached on the core to which it is allocated to for the first
      Start Checkpoint of a Deadline configuration where the Stop Checkpoint is a
      Start Checkpoint of a further Deadline configuration(New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time which is below the minimum limit
  06: Call WdgM_CheckpointReached on the core to which it is allocated to for the corresponding
      Stop Checkpoint of Step 03(New Deadline monitoring is started)
  07: VP:
      WdgM_CheckpointReached returns E_NOT_OK
  08: Prepare time callout to return an elapsed time within the minimum and the maximum limits
  09: Call WdgM_CheckpointReached on the core to which it is allocated to for the corresponding
      Stop / Start Checkpoint of Step 06(New Deadline monitoring is started)
  10: VP:
      WdgM_CheckpointReached returns E_OK


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1880</internalId></specobject>
    <specobject>
      <id>TS_WDGM_MultipleDeadlineSupervision_Multicore3</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_13_DeadlineSupervision_multicore/source/application/WdgM_ConTest_13_DeadlineSupervision_Multicore.c</sourcefile>
      <sourceline>818</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() on the core to which it is allocated to performs
the Deadline Supervision for the first Start Checkpoint of a multiple Deadline Supervision
configuration where the Stop Checkpoint is a Start Checkpoint of a further Deadline configuration
and the deadline limit (upper limit) is exceeded.


Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision_Multicore.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains multiple Deadline Supervision configuration
      with Start / Stop Checkpoints
  03: Call WdgM_CheckpointReached on the core to which it is allocated to for the first
      Start Checkpoint of a Deadline configuration where the Stop Checkpoint is a
      Start Checkpoint of a further Deadline configuration(New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time which exceeds the upper limit
  06: Call WdgM_CheckpointReached on the core to which it is allocated to for the corresponding
      Stop Checkpoint of Step 03(New Deadline monitoring is started)
  07: VP:
      WdgM_CheckpointReached returns E_NOT_OK
  08: Prepare time callout to return an elapsed time within the minimum and the maximum limits
  09: Call WdgM_CheckpointReached on the core to which it is allocated to for the corresponding
      Stop / Start Checkpoint of Step 06(New Deadline monitoring is started)
  10: VP:
      WdgM_CheckpointReached returns E_OK


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1881</internalId></specobject>
    <specobject>
      <id>TS_WDGM_MultipleDeadlineSupervision_Multicore4</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_13_DeadlineSupervision_multicore/source/application/WdgM_ConTest_13_DeadlineSupervision_Multicore.c</sourcefile>
      <sourceline>909</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() on the core to which it is allocated to performs
the Deadline Supervision for a Start / Stop Checkpoint of a multiple Deadline Supervision
configuration where the deadline limit (lower limit) is exceeded.


Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision_Multicore.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains multiple Deadline Supervision configuration
      with Start / Stop Checkpoints
  03: Call WdgM_CheckpointReached on the core to which it is allocated to for the first
      Start Checkpoint of a Deadline configuration where the Stop Checkpoint is a
      Start Checkpoint of a further Deadline configuration(New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time within the minimum and the maximum limits
  06: Call WdgM_CheckpointReached on the core to which it is allocated to for the corresponding
      Stop Checkpoint of Step 03(New Deadline monitoring is started)
  07: VP:
      WdgM_CheckpointReached returns E_NOT_OK
  08: Prepare time callout to return an elapsed time which is below the minimum limit
  09: Call WdgM_CheckpointReached on the core to which it is allocated to for the corresponding
      Stop / Start Checkpoint of Step 06(New Deadline monitoring is started)
  10: VP:
      WdgM_CheckpointReached returns E_NOT_OK


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1882</internalId></specobject>
    <specobject>
      <id>TS_WDGM_MultipleDeadlineSupervision_Multicore5</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_13_DeadlineSupervision_multicore/source/application/WdgM_ConTest_13_DeadlineSupervision_Multicore.c</sourcefile>
      <sourceline>998</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() on the core to which it is allocated to performs
the Deadline Supervision for the first Start Checkpoint of a multiple Deadline Supervision
configuration where the Stop Checkpoint is a Start Checkpoint of a further Deadline configuration
and the deadline limit (upper limit) is exceeded.


Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision_Multicore.

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains multiple Deadline Supervision configuration
      with Start / Stop Checkpoints
  03: Call WdgM_CheckpointReached on the core to which it is allocated to for the first
      Start Checkpoint of a Deadline configuration where the Stop Checkpoint is a
      Start Checkpoint of a further Deadline configuration(New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time within the minimum and the maximum limits
  06: Call WdgM_CheckpointReached on the core to which it is allocated to for the corresponding
      Stop Checkpoint of Step 03(New Deadline monitoring is started)
  07: VP:
      WdgM_CheckpointReached returns E_NOT_OK
  08: Prepare time callout to return an elapsed time which exceeds the upper limit
  09: Call WdgM_CheckpointReached on the core to which it is allocated to for the corresponding
      Stop / Start Checkpoint of Step 06(New Deadline monitoring is started)
  10: VP:
      WdgM_CheckpointReached returns E_NOT_OK


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1883</internalId></specobject>
    <specobject>
      <id>TS_WDGM_IgnoredCheckpointDeadlineSupervision_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_13_DeadlineSupervision_multicore/source/application/WdgM_ConTest_13_DeadlineSupervision_Multicore.c</sourcefile>
      <sourceline>1088</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Checks that a reported checkpoint that is neither a Deadline Start Checkpoint
nor a Deadline End Checkpoint is ignored by the function WdgM_CheckpointReached
and it does not update the result of the Deadline Supervision for the Supervised Entity.

Test Object: None.
Test Precondition: 
See preconditions of testcase TS_WDGM_CheckDeadlineSupervision_Multicore.

Test Execution: 

  01: Initialize WdgM
  02: Set the mode WdgMConf_WdgMMode_WdgMMode_0
  03: VP
     E_OK is returned.
  04: VP
     Local status of WdgMSupervisedEntity_0 is WDGM_LOCAL_STATUS_OK
  05: Call WdgM_CheckpointReached() on the core to which it is allocated to with a checkpoint
      of WdgMSupervisedEntity_0 that is neither a Deadline Start Checkpoint nor a Deadline End Checkpoint
  06: VP
     WdgM_CheckpointReached() returns E_OK
  07: Call main function on all cores
  08: VP (WdgM.ASR40.WDGM299)
     Local status of WdgMSupervisedEntity_0 has remained unchanged.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00299</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1884</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ParalelDeadlineSupervision_Multicore_Master</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_13_DeadlineSupervision_multicore/source/application/WdgM_ConTest_13_DeadlineSupervision_Multicore.c</sourcefile>
      <sourceline>1172</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that on a WdgMMode (WdgMMode_MasterSlave) which has two WdgMDeadlineSupervisions
configured (one on the Master - WdgMDeadlineSupervision_0 and one on the
Satellite - WdgMDeadlineSupervision_1) if only the Master enters WDGM_LOCAL_STATUS_EXPIRED
then the Satellite will continue to remain in the WDGM_LOCAL_STATUS_OK but the
WdgM_GetGlobalStatus() will enter WDGM_GLOBAL_STATUS_EXPIRED.


Test Object: None.
Test Precondition: 
For initial state of WdgM see preconditions of testcase TS_WDGM_CheckDeadlineSupervision_Multicore.

Test Execution: 

  01: Initialize WdgM
  02: Set the mode WdgMMode_MasterSlave
  03: E_OK is returned.
  04: Call main function on all cores
  05: Call WdgM_CheckpointReached in parallel on both Master and Satellite core
  06: WdgM_CheckpointReached returns E_OK on both cores
  07: Local status of Master, Satellite core is WDGM_LOCAL_STATUS_OK and the global
      status is WDGM_GLOBAL_STATUS_OK
  08: Prepare time callout to return an elapsed time which is 1 below the minimum limit on Master
  09: Call WdgM_CheckpointReached in parallel on both the Master and Satellite core
  10: WdgM_CheckpointReached returns E_OK only on the Satellite core and E_NOT_OK on the Master core
  11: Call main function on all cores so the expiration is processed
  12: Local status of Master core is WDGM_LOCAL_STATUS_EXPIRED, local status of the Satellite core is
      WDGM_LOCAL_STATUS_OK and the global status is WDGM_GLOBAL_STATUS_EXPIRED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1885</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ParalelDeadlineSupervision_Multicore_Satellite</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_13_DeadlineSupervision_multicore/source/application/WdgM_ConTest_13_DeadlineSupervision_Multicore.c</sourcefile>
      <sourceline>1294</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that on a WdgMMode (WdgMMode_MasterSlave) which has two WdgMDeadlineSupervisions
configured (one on the Master - WdgMDeadlineSupervision_0 and one on the
Satellite - WdgMDeadlineSupervision_1) if only the Satellite enters WDGM_LOCAL_STATUS_EXPIRED
then the Master will continue to remain in the WDGM_LOCAL_STATUS_OK but the
WdgM_GetGlobalStatus() will enter WDGM_GLOBAL_STATUS_EXPIRED.


Test Object: None.
Test Precondition: 
For initial state of WdgM see preconditions of testcase TS_WDGM_CheckDeadlineSupervision_Multicore.

Test Execution: 

  01: Initialize WdgM
  02: Set the mode WdgMMode_MasterSlave
  03: E_OK is returned.
  04: Call main function on all cores
  05: Call WdgM_CheckpointReached in parallel on both Master and Satellite core
  06: WdgM_CheckpointReached returns E_OK on both cores
  07: Local status of Master Satellite core is WDGM_LOCAL_STATUS_OK and the global
      status is WDGM_GLOBAL_STATUS_OK
  08: Prepare time callout to return an elapsed time which is 1 below the minimum limit on the Satellite
  09: Call WdgM_CheckpointReached in parallel on both the Master and Satellite core
  10: WdgM_CheckpointReached returns E_OK only on the Master core and E_NOT_OK on the Satellite core
  11: Call main function on all cores so the expiration is processed
  12: Local status of Satellite core is WDGM_LOCAL_STATUS_EXPIRED, the local status of Master core is
      WDGM_LOCAL_STATUS_OK and before checking the global status we call a main function on all cores
      so that the global status is updated to the new status WDGM_GLOBAL_STATUS_EXPIRED on the Master core


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1886</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ExternalLogical_OK_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_14_LogSup_multicore/source/application/WdgM_ConTest_14_LogSup_multicore.c</sourcefile>
      <sourceline>78</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that if the Checkpoints from an External Graph are correctly called,
  the Logical Supervision of an External Graph is correct calculated.

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4, CP0_5, CP0_7 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_1, CP1_2, CP1_2, CP1_4, CP1_5, CP1_7 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_4, CP2_5, CP2_6, CP2_7               (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 2 Internal Graphs and 2 External Graph and 1 External Graph in WdgMMode_2 :
    Internal Graphs : CP0_1 -&gt; CP0_2 -&gt; CP0_3 (WdgMMode_1)
                      CP1_1 -&gt; CP1_2 -&gt; CP1_2 (WdgMMode_1)

    External Graph  : CP0_4 -&gt; CP1_4 -&gt; CP2_4 (WdgMMode_1)
                    : CP0_5 -&gt; CP1_5 or CP2_5 -&gt; CP2_6 (WdgMMode_1)
                    : CP0_7 -&gt; CP1_7 -&gt; CP2_7 (WdgMMode_2)

For this test the following External Graph is used : CP0_4 -&gt; CP1_4 -&gt; CP2_4


Test Execution: 
  01: Initialize WdgM
  02: Set a mode that contains at least one external graph
  03: VP: Check that set mode was correctly performed
  04: Call main functions on both cores
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Switch to the master core
  09: Call WdgM_CheckpointReached() with an initial checkpoint of an external graph
  10: VP: Check that E_OK is returned
  11: Switch to the satellite core
  12: Call WdgM_CheckpointReached() with the next checkpoint of the same external graph
  13 VP: Check that E_OK is returned
  14: Switch to the master core
  15: Call WdgM_CheckpointReached() with the next checkpoint of the same external graph(the final one
  16 VP: Check that E_OK is returned
  17: Call main functions on both cores
  18: Get the local status.
  19 VP: Check that E_OK is returned
  20 VP: Check that the local status is WDGM_LOCAL_STATUS_OK
  21: Get the global status
  22 VP: Check that E_OK is returned
  23 VP: Check that the global status is WDGM_GLOBAL_STATUS_OK

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1887</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ExternalLogical_NOK_missedCP_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_14_LogSup_multicore/source/application/WdgM_ConTest_14_LogSup_multicore.c</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that if one Checkpoint from an External Graph is not called(missed),
  the Logical Supervision of an External Graph is correct calculated, signaling a failure.

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4, CP0_5, CP0_7 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_1, CP1_2, CP1_2, CP1_4, CP1_5, CP1_7 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_4, CP2_5, CP2_6, CP2_7               (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 2 Internal Graphs and 2 External Graph and 1 External Graph in WdgMMode_2 :
    Internal Graphs : CP0_1 -&gt; CP0_2 -&gt; CP0_3 (WdgMMode_1)
                      CP1_1 -&gt; CP1_2 -&gt; CP1_2 (WdgMMode_1)

    External Graph  : CP0_4 -&gt; CP1_4 -&gt; CP2_4 (WdgMMode_1)
                    : CP0_5 -&gt; CP1_5 or CP2_5 -&gt; CP2_6 (WdgMMode_1)
                    : CP0_7 -&gt; CP1_7 -&gt; CP2_7 (WdgMMode_2)

For this test the following External Graph is used : CP0_4 -&gt; CP1_4 -&gt; CP2_4


Test Execution: 
  01: Initialize WdgM
  02: Set a mode that contains at least one external graph
  03 VP: Check that set mode was correctly performed
  04: Call main functions on both cores
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Switch to the master core
  09: Call WdgM_CheckpointReached() with an initial checkpoint of an external graph
  10 VP: Check that E_OK is returned
  11: Call WdgM_CheckpointReached() with the last checkpoint of the same external graph(one is missed)
  12 VP: Check that E_NOT_OK is returned
  13: Call main functions on both cores
  14: Get the local status
  15 VP: Check that E_OK is returned
  16 VP: Check that local status is WDGM_LOCAL_STATUS_EXPIRED
  17: Get the global status
  18 VP: Check that E_OK is returned
  19 VP: Check that global status is WDGM_GLOBAL_STATUS_EXPIRED

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1888</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ExternalLogicalConcurrent_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_14_LogSup_multicore/source/application/WdgM_ConTest_14_LogSup_multicore.c</sourcefile>
      <sourceline>354</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
This test checks that if WdgM_CheckpointReached function is interrupted by another WdgM_CheckpointReached
function call, before is finished, the Logical Supervision of an External Graph is correctly calculated and
the WdgM module is able to detect the concurrent calls.

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4, CP0_5, CP0_7 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_1, CP1_2, CP1_2, CP1_4, CP1_5, CP1_7 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_4, CP2_5, CP2_6, CP2_7               (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 2 Internal Graphs and 2 External Graph and 1 External Graph in WdgMMode_2 :
    Internal Graphs : CP0_1 -&gt; CP0_2 -&gt; CP0_3 (WdgMMode_1)
                      CP1_1 -&gt; CP1_2 -&gt; CP1_2 (WdgMMode_1)

    External Graph  : CP0_4 -&gt; CP1_4 -&gt; CP2_4 (WdgMMode_1)
                    : CP0_5 -&gt; CP1_5 or CP2_5 -&gt; CP2_6 (WdgMMode_1)
                    : CP0_7 -&gt; CP1_7 -&gt; CP2_7 (WdgMMode_2)

For this test the following External Graph is used : CP0_4 -&gt; CP1_4 -&gt; CP2_4


Test Execution: 
  01: Initialize WdgM
  02: Set a mode that contains at least one external graph ( CP0_4 -&gt; CP1_4 -&gt; CP2_4 )
  03 VP: Check that set mode was correctly performed
  04: Call main functions on both cores
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Switch to the master core
  09: Call WdgM_CheckpointReached() with an initial checkpoint of an external graph
  10 VP: Check that E_OK is returned
  11: Switch to the satellite core
  12: Call WdgM_CheckpointReached() with the next checkpoint of the same external graph

      In the WdgM.c file, in the WdgM_EB_CheckpointReachedExtLogical function, there is a special callout, Tst_WdgM_ConcurrentCallout
    to be more specific. This callout is available only for this test WdgM_ConTest_14_LogSup_multicore. The purpose of this callout
    is to be able to detect the interruption of the WdgM_CheckpointReached function because in the WdgM module a mechanism that detects
    the concurrent calls of the WdgM_CheckpointReached function for the External Logical Supervision is implemented.
    After calling WdgM_CheckpointReached function, the Tst_WdgM_ConcurrentCallout will be called and WdgM_CheckpointReached is called
    again with the next checkpoint(CP2_4).

  13: Switch to the master core
  14: Call WdgM_CheckpointReached() with the next checkpoint of the same external graph(the final one)
  15 VP: Check that E_NOT_OK is returned,because the previous CP is not the correct one.
  16: Call main functions on both cores
  17: Get the local status.
  18 VP: Check that E_OK is returned
  19 VP: Check that the local status is WDGM_LOCAL_STATUS_EXPIRED
  20 VP: Check that E_NOT_OK is returned because a concurrent call is detected.
  21: Call main functions on both cores
  22: Get the local status of the WdgMSupervisedEntity_0.
  23 VP: Check that E_OK is returned
  24 VP: Check that the local status is WDGM_LOCAL_STATUS_OK
  25: Get the local status of the WdgMSupervisedEntity_1.
  26 VP: Check that E_OK is returned
  27 VP: Check that the local status is WDGM_LOCAL_STATUS_EXPIRED
  28: Get the local status of the WdgMSupervisedEntity_2.
  29 VP: Check that E_OK is returned
  30 VP: Check that the local status is WDGM_LOCAL_STATUS_EXPIRED
  31: Get the global status.
  32 VP: Check that E_OK is returned
  33 VP: Check that the global status is WDGM_GLOBAL_STATUS_EXPIRED

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.ConcurrentCall1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1889</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ExternalLogicalConcurrent_Multicore_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_14_LogSup_multicore/source/application/WdgM_ConTest_14_LogSup_multicore.c</sourcefile>
      <sourceline>528</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
This test checks that if WdgM_CheckpointReached function  is interrupted by another WdgM_CheckpointReached
function call, before is finished, the Logical Supervision of an External Graph is correctly calculated and
the WdgM module is able to detect the concurrent calls.

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4, CP0_5, CP0_7 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_1, CP1_2, CP1_2, CP1_4, CP1_5, CP1_7 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_4, CP2_5, CP2_6, CP2_7               (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 2 Internal Graphs and 2 External Graph and 1 External Graph in WdgMMode_2 :
    Internal Graphs : CP0_1 -&gt; CP0_2 -&gt; CP0_3 (WdgMMode_1)
                      CP1_1 -&gt; CP1_2 -&gt; CP1_2 (WdgMMode_1)

    External Graph  : CP0_4 -&gt; CP1_4 -&gt; CP2_4 (WdgMMode_1)
                    : CP0_5 -&gt; CP1_5 or CP2_5 -&gt; CP2_6 (WdgMMode_1)
                    : CP0_7 -&gt; CP1_7 -&gt; CP2_7 (WdgMMode_2)

For this test the following External Graph is used : CP0_5 -&gt; CP1_5 or CP2_5 -&gt; CP2_6


Test Execution: 
  01: Initialize WdgM
  02: Set a mode that contains at least one external graph
  03 VP: Check that set mode was corectly performed
  04: Call main functions on both cores
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Switch to the master core
  09: Call WdgM_CheckpointReached() with an initial checkpoint of an external graph
  10 VP: Check that E_OK is returned
  11: Switch to the satellite core
  12: Call WdgM_CheckpointReached() with the next checkpoint of the same external graph

      In the WdgM.c file, in the WdgM_EB_CheckpointReachedExtLogical function, there is a special callout, Tst_WdgM_ConcurrentCallout
    This callout is available only for this test WdgM_ConTest_14_LogSup_multicore. The purpose of this callout is to be able to
    detect the interruption of the WdgM_CheckpointReached function because in the WdgM module a mechanism that detect
    the concurrent calls of the WdgM_CheckpointReached function for the External Logical Supervision is implemented.
    After calling WdgM_CheckpointReached function, the Tst_WdgM_ConcurrentCallout will be called and WdgM_CheckpointReached is called
    again with the next checkpoint(CP2_5).

  13: Switch to the master core
  14: Call WdgM_CheckpointReached() with the next checkpoint of the same external graph
  15 VP: Check that E_NOT_OK is returned,because the previous CP is not the correct one.
  16: Call main functions on both cores
  17: Get the local status.
  18 VP: Check that E_OK is returned
  19 VP: Check that the local status is WDGM_LOCAL_STATUS_EXPIRED
  20 VP: Check that E_NOT_OK is returned because a concurrent call is detected
  21: Call main functions on both cores
  22: Get the local status.
  23 VP: Check that E_OK is returned
  24 VP: Check that the local status is WDGM_LOCAL_STATUS_EXPIRED
  25: Switch to the master core
  26: Call WdgM_CheckpointReached() with the next checkpoint of the same external graph(the final one)
  27 VP: Check that E_NOT_OK is returned
  28: Call main functions on both cores
  29: Get the local status.
  30 VP: Check that E_OK is returned
  31 VP: Check that the local status is WDGM_LOCAL_STATUS_OK
  32: Get the local status of the WdgMSupervisedEntity_2.
  33 VP: Check that E_OK is returned
  34 VP: Check that the local status is WDGM_LOCAL_STATUS_EXPIRED
  35: Get the global status.
  36 VP: Check that E_OK is returned
  37 VP: Check that the global status is WDGM_GLOBAL_STATUS_EXPIRED

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.ConcurrentCall1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1890</internalId></specobject>
    <specobject>
      <id>TS_WDGM_IntLogicalNOK_ExternalLogicalOK_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_14_LogSup_multicore/source/application/WdgM_ConTest_14_LogSup_multicore.c</sourcefile>
      <sourceline>718</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that Checkpoint from External Graph are not influencing the previous computation
of Internal Graph. In this scenario the Internal Graph fails and the External Graph does not.
The final result is given by the failed graph.

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4, CP0_5, CP0_7 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_1, CP1_2, CP1_2, CP1_4, CP1_5, CP1_7 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_4, CP2_5, CP2_6, CP2_7               (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 2 Internal Graphs and 2 External Graph and 1 External Graph in WdgMMode_2 :
    Internal Graphs : CP0_1 -&gt; CP0_2 -&gt; CP0_3 (WdgMMode_1)
                      CP1_1 -&gt; CP1_2 -&gt; CP1_2 (WdgMMode_1)

    External Graph  : CP0_4 -&gt; CP1_4 -&gt; CP2_4 (WdgMMode_1)
                    : CP0_5 -&gt; CP1_5 or CP2_5 -&gt; CP2_6 (WdgMMode_1)
                    : CP0_7 -&gt; CP1_7 -&gt; CP2_7 (WdgMMode_2)

For this test the following Internal and External Graphs are used :
    Internal Graphs : CP0_1 -&gt; CP0_2 -&gt; CP0_3
    External Graph  : CP0_4 -&gt; CP1_4 -&gt; CP2_4


Test Execution: 
  01: Initialize WdgM
  02: Set a mode that contains at least one external graph
  03 VP: Check that set mode was corectly performed
  04: Call main functions on both cores
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Switch to the master core
  09: Call WdgM_CheckpointReached() with an initial checkpoint of an internal graph
  10 VP: Check that E_OK is returned
  11: Call WdgM_CheckpointReached() with the wrong checkpoint of the internal graph( CP0_2 is missed )
  12 VP: Check that E_NOT_OK is returned
  13: Call main functions on both cores
  14: Get the local status
  15 VP: Check that E_OK is returned
  16 VP: Check that local status is WDGM_LOCAL_STATUS_EXPIRED
  17: Get the global status
  18 VP: Check that E_OK is returned
  19 VP: Check that the global status is WDGM_GLOBAL_STATUS_EXPIRED
  20: Call WdgM_CheckpointReached() with an initial checkpoint of an external graph
  21 VP: Check that E_OK is returned(the above failure does not affect this one)
  22: Call main functions on both cores
  23: Get the local status
  24 VP: Check that E_OK is returned
  25 VP: Check that the global status is WDGM_LOCAL_STATUS_EXPIRED
  26: Get the global status
  27 VP: Check that E_OK is returned
  28 VP: Check that the global status is WDGM_GLOBAL_STATUS_EXPIRED
  29: Switch to the satellite core
  30: Call WdgM_CheckpointReached() with the next checkpoint of the same external graph
  31 VP: Check that E_OK is returned
  32: Call main functions on both cores
  33: Switch to the satellite core
  34: Get the local status
  35 VP: Check that E_OK is returned
  36 VP: Check that the local status is WDGM_LOCAL_STATUS_OK
  37: Get the global status
  38 VP: Check that E_OK is returned
  39 VP: Check that the global status is WDGM_GLOBAL_STATUS_EXPIRED

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1891</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ExternalLogicalNOK_IntLogicalOK_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_14_LogSup_multicore/source/application/WdgM_ConTest_14_LogSup_multicore.c</sourcefile>
      <sourceline>920</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that Checkpoint from Internal Graph are not influencing the previous computation
of External Graph. In this scenario the External Graph fails and the Internal Graph does not.
The final result is given by the failed graph.

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4, CP0_5, CP0_7 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_1, CP1_2, CP1_2, CP1_4, CP1_5, CP1_7 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_4, CP2_5, CP2_6, CP2_7               (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 2 Internal Graphs and 2 External Graph and 1 External Graph in WdgMMode_2 :
    Internal Graphs : CP0_1 -&gt; CP0_2 -&gt; CP0_3 (WdgMMode_1)
                      CP1_1 -&gt; CP1_2 -&gt; CP1_2 (WdgMMode_1)

    External Graph  : CP0_4 -&gt; CP1_4 -&gt; CP2_4 (WdgMMode_1)
                    : CP0_5 -&gt; CP1_5 or CP2_5 -&gt; CP2_6 (WdgMMode_1)
                    : CP0_7 -&gt; CP1_7 -&gt; CP2_7 (WdgMMode_2)

For this test the following External and Internal Graphs are used :
    External Graph  : CP0_4 -&gt; CP1_4 -&gt; CP2_4
    Internal Graphs : CP0_1 -&gt; CP0_2 -&gt; CP0_3


Test Execution: 
  01: Initialize WdgM
  02: Set a mode that contains at least one external graph
  03 VP: Check that set mode was corectly performed
  04: Call main functions on both cores
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Switch to the master core
  09: Call WdgM_CheckpointReached() with an initial checkpoint of an external graph
  10 VP: Check that E_OK is returned
  11: Call WdgM_CheckpointReached() with the last checkpoint of the same external graph(CP1_4 is missed)
  12 VP: Check that E_NOT_OK is returned
  13: Call main functions on both cores
  14: Get the local status
  15 VP: Check that E_OK is returned
  16 VP: Check that the local status is WDGM_LOCAL_STATUS_EXPIRED
  17: Get the global status
  18 VP: Check that E_OK is returned
  19 VP: Check that the global status is WDGM_GLOBAL_STATUS_EXPIRED
  20: Call WdgM_CheckpointReached() with an initial checkpoint of an internal graph
  21: VP: Check that E_OK is returned
  22: Call WdgM_CheckpointReached() with the next checkpoint of the internal graph
  23 VP: Check that E_OK is returned
  24: Get the local status.
  25 VP: Check that E_OK is returned
  26 VP: Check that the local status is WDGM_LOCAL_STATUS_EXPIRED
  27: Get the global status
  28 VP: Check that E_OK is returned
  29 VP: Check that the global status is WDGM_GLOBAL_STATUS_EXPIRED

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1892</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ExternalLogicalMultipleModes_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_14_LogSup_multicore/source/application/WdgM_ConTest_14_LogSup_multicore.c</sourcefile>
      <sourceline>1090</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
This test checks that if an External Graph that belongs to the first mode is interrupted by a switch mode to the second mode,
then, when the first mode returns, the Logical supervision starts from the beginning, does not continue from when was interrupted.

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4, CP0_5, CP0_7 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_1, CP1_2, CP1_2, CP1_4, CP1_5, CP1_7 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_4, CP2_5, CP2_6, CP2_7               (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
   In mode WdgMMode_1 there are 2 Internal Graphs and 2 External Graph and 1 External Graph in WdgMMode_2 :
    Internal Graphs : CP0_1 -&gt; CP0_2 -&gt; CP0_3 (WdgMMode_1)
                      CP1_1 -&gt; CP1_2 -&gt; CP1_2 (WdgMMode_1)

    External Graph  : CP0_4 -&gt; CP1_4 -&gt; CP2_4 (WdgMMode_1)
                    : CP0_5 -&gt; CP1_5 or CP2_5 -&gt; CP2_6 (WdgMMode_1)
                    : CP0_7 -&gt; CP1_7 -&gt; CP2_7 (WdgMMode_2)

For this test the following External Graphs are used :
    External Graph  : CP0_4 -&gt; CP1_4 -&gt; CP2_4
                    : CP0_7 -&gt; CP1_7 -&gt; CP2_7


Test Execution: 
  01: Initialize WdgM
  02: Set a mode that contains at least one external graph
  03 VP: Check that set mode was corectly performed
  04: Call main functions on both cores
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Switch to the master core
  09: Call WdgM_CheckpointReached() with an initial checkpoint of an external graph
  10 VP: Check that E_OK is returned
  11: Switch to the satellite core
  12: Call WdgM_CheckpointReached() with the next checkpoint of the same external graph
  13 VP: Check that E_OK is returned
  14: Set a mode that contains at least one external graph
  15 VP: Check that set mode was corectly performed
  16: Call main functions on both cores
  17: Get the active mode
  18 VP: Check that E_OK is returned
  19 VP: Check that mode switch was correctly performed
  20: Switch to the master core
  21: Call WdgM_CheckpointReached() with an initial checkpoint of an external graph
  22 VP: Check that E_OK is returned
  23: Switch to the satellite core
  24: Call WdgM_CheckpointReached() with the next checkpoint of the same external graph
  25 VP: Check that E_OK is returned
  26: Switch to the master core
  27: Call WdgM_CheckpointReached() with the next checkpoint of the same external graph(the final one)
  28 VP: Check that E_OK is returned
  29: Set a mode that contains at least one external graph
  30 VP: Check that set mode was correctly performed
  31: Call main functions on both cores
  32: Get the active mode
  33 VP: Check that E_OK is returned
  34 VP: Check that mode switch was correctly performed
  35: Switch to the master core
  36: Call WdgM_CheckpointReached() with an initial checkpoint of an external graph
  37 VP: Check that E_OK is returned
  38: Call main functions on both cores
  39: Switch to the satellite core
  40: Call WdgM_CheckpointReached() with the next checkpoint of the same external graph
  41 VP: Check that E_OK is returned
  42: Switch to the master core
  43: Call WdgM_CheckpointReached() with the next checkpoint of the same external graph(the final one)
  44 VP: Check that E_OK is returned
  45: Call main functions on both cores
  46: Get the local status.
  47 VP: Check that E_OK is returned
  48 VP: Check that the local status is WDGM_LOCAL_STATUS_OK
  49: Get the global status
  50 VP: Check that E_OK is returned
  51 VP: Check that the global status is WDGM_GLOBAL_STATUS_OK

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1893</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_GetAllExpiredSEID_NullPointer</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation/source/application/EbTest.c.m4</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that the WdgM_GetAllExpiredSEID() function returns WDGM_E_INV_POINTER if API
      is called with the NULL pointer as parameter.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    WdgMDevErrorDetect is enabled.
  
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Call WdgM_GetAllExpiredSEID with NULL pointer.
    03. VP(WDGM.EB.GetAllExpiredSEID.Params.DetReport): Should report the DET error: WDGM_E_INV_POINTER.
    04. VP(WDGM.EB.GetAllExpiredSEID.Params.NULL_PTR): Check that WdgM_GetAllExpiredSEID function returned E_NOT_OK.
    05. Call WdgM_GetAllExpiredSEID with NULL pointer.
    06. VP(WDGM.EB.GetAllExpiredSEID.Params.DetReport): Should report the DET error: WDGM_E_INV_POINTER.
    07. VP(WDGM.EB.GetAllExpiredSEID.Params.NULL_PTR): Check that WdgM_GetAllExpiredSEID function returned E_NOT_OK.
    08. Call WdgM_GetAllExpiredSEID with NULL pointer.
    09. VP(WDGM.EB.GetAllExpiredSEID.Params.DetReport): Should report the DET error: WDGM_E_INV_POINTER.
    10. VP(WDGM.EB.GetAllExpiredSEID.Params.NULL_PTR): Check that WdgM_GetAllExpiredSEID function returned E_NOT_OK.
  
Test Input: None.
Test Output: 
    DET error reported with "WDGM_E_INV_POINTER"
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.Params.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.Params.DetReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1894</internalId></specobject>
    <specobject>
      <id>TS_WDGM_GetAllExpiredSEID_SingleCore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation/source/application/EbTest.c.m4</sourcefile>
      <sourceline>209</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all expired Supervision Entities are retrieved when the WdgM_GetAllExpiredSEID function is called.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01. Call WdgM_GetAllExpiredSEID without initializing WdgM.
    02. VP: Check that no DET errors have been reported.
    03. Initialize stubs and WdgM.
    04. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
    05. Call MainFunction to switch the state from WDGM_LOCAL_STATUS_OK to
        WDGM_LOCAL_STATUS_EXPIRED for the SE that didn't reached checkpoint.
    06. VP: Verify that the local state of the SE has changed to WDGM_LOCAL_STATUS_EXPIRED or
        remained at state WDGM_LOCAL_STATUS_OK for the SEs that reached checkpoint at previous step.
    07. Call WdgM_GetAllExpiredSEID() API in order to retrieve all the expired supervised entities.
    08. VP: Verify that all expired supervised entities have been properly retrieved.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.Availability</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1895</internalId></specobject>
    <specobject>
      <id>TS_WDGM_GetAllExpiredSEID_PowerOnReset_SingleCore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation/source/application/EbTest.c.m4</sourcefile>
      <sourceline>330</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all expired Supervision Entities are retrieved when the WdgM_GetAllExpiredSEID function is called
    after a power on reset.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
    03. Call MainFunction to switch the state from WDGM_LOCAL_STATUS_OK to
        WDGM_LOCAL_STATUS_EXPIRED for tested SE.
    04. VP: Verify that the local state of the SE has changed to WDGM_LOCAL_STATUS_EXPIRED.
    05. De-initialize WdgM - in order to simulate a power on reset.
    06. Call WdgM_GetAllExpiredSEID() API in order to retrieve all the expired supervised entities.
    07. VP: Verify that all expired supervised entities have been properly retrieved.
    08. Initialize WdgM module.
    09. Call WdgM_GetAllExpiredSEID() API a second time in order to check that expired supervised entities
        has been retrieved at the first call of the WdgM_GetAllExpiredSEID() function and the array has been cleared.
    10. VP(WDGM.EB.GetAllExpiredSEID.CoreSpecific.Reset): There is no expired supervised entities to be retrieved.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.Availability</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.CoreSpecific.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1896</internalId></specobject>
    <specobject>
      <id>TS_WDGM_GetAllExpiredSEID_ExpireAgainSameSE_SingleCore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation/source/application/EbTest.c.m4</sourcefile>
      <sourceline>460</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that all expired Supervision Entities are reported when the WdgM_GetAllExpiredSEID function is called
    and there are no duplicate expired SE entries when the the state from WDGM_LOCAL_STATUS_OK to
    WDGM_LOCAL_STATUS_EXPIRED is change a second time.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
    03. Call MainFunction to switch the state from WDGM_LOCAL_STATUS_OK to
        WDGM_LOCAL_STATUS_EXPIRED for tested SE.
    04. VP: Verify that the local state of the SE has changed to WDGM_LOCAL_STATUS_EXPIRED.
    05. De-initialize WdgM - in order to simulate a power on reset.
    06. Initialize WdgM module.
    07. Call WdgM_GetAllExpiredSEID() API in order to retrieve all the expired supervised entities.
    08. VP: Verify that all expired supervised entities have been properly retrieved and there are no duplicate entries.
    09. Call MainFunction to switch a SECOND time the state from WDGM_LOCAL_STATUS_OK to
        WDGM_LOCAL_STATUS_EXPIRED for tested SE.
    10. Call WdgM_GetAllExpiredSEID() API in order to retrieve all the expired supervised entities.
    11. VP: Verify that all expired supervised entities have been properly retrieved and there are no duplicate entries.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.Availability</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1897</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_WdgMRequestPartitionReset_Callout</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_PartitionRestart/source/application/EbTest.c.m4</sourcefile>
      <sourceline>198</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that the WdgMRequestPartitionResetCallout function is
      called when a partition reset is requested.
      |------------------------------------------------------------------------------------------------------------------|
      | WdgM Supervised Entity  | Supervision type                                 | Os Application   | Multicore CoreId |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_0  | alive                                            | OsApplication_0  | 0                |
      |                         | internal transition (CP0, CP1)                   |                  |                  |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_1  | alive                                            | OsApplication_0  | 0                |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_2  | alive                                            | OsApplication_0  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_3  | alive                                            | OsApplication_1  | 1                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_4  | alive                                            | OsApplication_2  | 2                |
      |                         | alive indications of the Checkpoint (CP0): 2     |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_5  | alive                                            | OsApplication_2  | 2                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_6  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_7  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_8  | alive                                            | OsApplication_3  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_9  | alive                                            | OsApplication_3  | 0                |
      |                         | WdgMFailedAliveSupervisionRefCycleTol 3          |                  |                  |
      |------------------------------------------------------------------------------------------------------------------|
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    WdgMSupervisorCallouts           is enabled
    WdgMRequestPartitionResetCallout is enabled
    WdgMErrorRecoveryEnabled         is enabled
  
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
    03. Call WdgM_CheckpointReached with valid arguments for configured SEs EXCEPT WdgMSupervisedEntity_1 (OS Application 0).
    04. Call the main function -&gt; WdgMSupervisedEntity_1 FAILED.
    05. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    06. VP: Verify that the local state of the WdgMSupervisedEntity_1 SE has changed to WDGM_LOCAL_STATUS_FAILED.
    07. VP: Verify that the configured WdgMRequestPartitionResetCallout callout has been called.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1898</internalId></specobject>
    <specobject>
      <id>TS_WDGM_WdgMRequestPartitionReset_DifferentPartition</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_PartitionRestart/source/application/EbTest.c.m4</sourcefile>
      <sourceline>349</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that partition restart feature works properly and the other partitions
      are not affected when the current partition restarts.
      |------------------------------------------------------------------------------------------------------------------|
      | WdgM Supervised Entity  | Supervision type                                 | Os Application   | Multicore CoreId |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_0  | alive                                            | OsApplication_0  | 0                |
      |                         | internal transition (CP0, CP1)                   |                  |                  |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_1  | alive                                            | OsApplication_0  | 0                |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_2  | alive                                            | OsApplication_0  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_3  | alive                                            | OsApplication_1  | 1                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_4  | alive                                            | OsApplication_2  | 2                |
      |                         | alive indications of the Checkpoint (CP0): 2     |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_5  | alive                                            | OsApplication_2  | 2                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_6  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_7  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_8  | alive                                            | OsApplication_3  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_9  | alive                                            | OsApplication_3  | 0                |
      |                         | WdgMFailedAliveSupervisionRefCycleTol 3          |                  |                  |
      |------------------------------------------------------------------------------------------------------------------|
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    WdgMSupervisorCallouts           is enabled
    WdgMRequestPartitionResetCallout is enabled
    WdgMErrorRecoveryEnabled         is enabled
    WdgMAliveSupervision_4
      WdgMExpectedAliveIndications = 2
  
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
    03. Call WdgM_CheckpointReached with valid arguments for configured SEs EXCEPT WdgMSupervisedEntity_4 (OS Application 2).
    04. Call the main function -&gt; WdgMSupervisedEntity_4 FAILED.
    05. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    06. VP: Verify that the local state of the WdgMSupervisedEntity_4 SE has changed to WDGM_LOCAL_STATUS_FAILED.
    07. VP: Verify that the configured WdgMRequestPartitionResetCallout callout has been called.
    08. Call WdgM_CheckpointReached with valid arguments - there is no need to call WdgM_CheckpointReached for
        WdgMSupervisedEntity_5 because it shares the same Os Application with WdgMSupervisedEntity_4.
    09. Call the main function.
    10. VP: Verify that no other calls of the configured WdgMRequestPartitionResetCallout callout occur.
    11. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    12. VP: Verify that the local state of the WdgMSupervisedEntity_4 SE has not changed and remains WDGM_LOCAL_STATUS_FAILED.
    13. Change the Os Application state to APPLICATION_ACCESSIBLE.
    14. Call WdgM_CheckpointReached with valid arguments for configured SEs.
    15. Call the main function -&gt; WdgMSupervisedEntity_4 OK.
    16. Verify the local status of all tested SEs to be WDGM_LOCAL_STATUS_OK.
    17. VP: Verify that no other calls of the configured WdgMRequestPartitionResetCallout callout occur.
    18. Call WdgM_CheckpointReached with valid arguments for all SEs - with a single WdgM_CheckpointReached call for WdgMSupervisedEntity_4,
        it needs 2 calls because WdgMExpectedAliveIndications = 2.
    19. Call the main function -&gt; WdgMSupervisedEntity_4 FAILED.
    20. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    21. VP: Verify that the local state of the WdgMSupervisedEntity_4 SE has changed to WDGM_LOCAL_STATUS_FAILED.
    22. VP: Verify that the configured WdgMRequestPartitionResetCallout callout has been called.
    23. Call WdgM_CheckpointReached with valid arguments - there is no need to call WdgM_CheckpointReached for
        WdgMSupervisedEntity_5 because it shares the same Os Application with WdgMSupervisedEntity_4.
    24. Call the main function.
    25. VP: Verify that no other calls of the configured WdgMRequestPartitionResetCallout callout occur.
    26. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    27. VP: Verify that the local state of the WdgMSupervisedEntity_4 SE has not changed and remains WDGM_LOCAL_STATUS_FAILED.
    28. Change the Os Application state to APPLICATION_ACCESSIBLE.
    29. Call WdgM_CheckpointReached with valid arguments for configured SEs.
    30. Call the main function -&gt; WdgMSupervisedEntity_4 OK.
    31. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
    32. Call WdgM_CheckpointReached with valid arguments for all SEs.
    33. Call the main function.
    34. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    35. VP: Verify that no other calls of the configured WdgMRequestPartitionResetCallout callout occur.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>728</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1899</internalId></specobject>
    <specobject>
      <id>TS_WDGM_WdgMRequestPartitionReset_SupervisedEntityNotMappedToPartition</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_PartitionRestart/source/application/EbTest.c.m4</sourcefile>
      <sourceline>781</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that the WdgMRequestPartitionResetCallout function is NOT called when
      the Supervised Entities are failing and NOT mapped to any OsApplication.
      |------------------------------------------------------------------------------------------------------------------|
      | WdgM Supervised Entity  | Supervision type                                 | Os Application   | Multicore CoreId |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_0  | alive                                            | OsApplication_0  | 0                |
      |                         | internal transition (CP0, CP1)                   |                  |                  |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_1  | alive                                            | OsApplication_0  | 0                |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_2  | alive                                            | OsApplication_0  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_3  | alive                                            | OsApplication_1  | 1                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_4  | alive                                            | OsApplication_2  | 2                |
      |                         | alive indications of the Checkpoint (CP0): 2     |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_5  | alive                                            | OsApplication_2  | 2                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_6  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_7  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_8  | alive                                            | OsApplication_3  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_9  | alive                                            | OsApplication_3  | 0                |
      |                         | WdgMFailedAliveSupervisionRefCycleTol 3          |                  |                  |
      |------------------------------------------------------------------------------------------------------------------|
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    WdgMSupervisorCallouts           is enabled
    WdgMRequestPartitionResetCallout is enabled
    WdgMErrorRecoveryEnabled         is enabled
    WdgMSupervisedEntity_6
      WdgMOsApplicationRef is disabled
    WdgMSupervisedEntity_7
      WdgMOsApplicationRef is disabled
  
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
    03. Call WdgM_CheckpointReached with valid arguments for all SEs EXCEPT which are not mapped to partitions.
    04. Call the MainFunction.
    05. VP: Verify that the configured WdgMRequestPartitionResetCallout callout has NOT been called.
    06. VP: Verify that the local state of the WdgMSupervisedEntity_6 and WdgMSupervisedEntity_7 SEs have change to WDGM_LOCAL_STATUS_FAILED.
    07. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1900</internalId></specobject>
    <specobject>
      <id>TS_WDGM_WdgMRequestPartitionReset_AliveFailure</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_PartitionRestart/source/application/EbTest.c.m4</sourcefile>
      <sourceline>933</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that partition restart feature works properly when Alive Supervision fails.
      |------------------------------------------------------------------------------------------------------------------|
      | WdgM Supervised Entity  | Supervision type                                 | Os Application   | Multicore CoreId |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_0  | alive                                            | OsApplication_0  | 0                |
      |                         | internal transition (CP0, CP1)                   |                  |                  |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_1  | alive                                            | OsApplication_0  | 0                |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_2  | alive                                            | OsApplication_0  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_3  | alive                                            | OsApplication_1  | 1                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_4  | alive                                            | OsApplication_2  | 2                |
      |                         | alive indications of the Checkpoint (CP0): 2     |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_5  | alive                                            | OsApplication_2  | 2                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_6  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_7  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_8  | alive                                            | OsApplication_3  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_9  | alive                                            | OsApplication_3  | 0                |
      |                         | WdgMFailedAliveSupervisionRefCycleTol 3          |                  |                  |
      |------------------------------------------------------------------------------------------------------------------|
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    WdgMSupervisorCallouts           is enabled
    WdgMRequestPartitionResetCallout is enabled
    WdgMErrorRecoveryEnabled         is enabled
    WdgMAliveSupervision_4
      WdgMExpectedAliveIndications = 2
  
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
    03. Call WdgM_CheckpointReached with valid arguments for all SEs - with a single WdgM_CheckpointReached call for WdgMSupervisedEntity_4,
        it needs 2 calls because WdgMExpectedAliveIndications = 2.
    04. Call the main function -&gt; WdgMSupervisedEntity_4 FAILED.
    05. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    06. VP: Verify that the local state of the WdgMSupervisedEntity_1 SE has changed to WDGM_LOCAL_STATUS_FAILED.
    07. VP: Verify that the configured WdgMRequestPartitionResetCallout callout has been called.
    08. Call WdgM_CheckpointReached with valid arguments - there is no need to call WdgM_CheckpointReached for
        WdgMSupervisedEntity_5 because it shares the same Os Application with WdgMSupervisedEntity_4.
    09. Call the main function.
    10. VP: Verify that no other calls of the configured WdgMRequestPartitionResetCallout callout occur.
    11. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    12. VP: Verify that the local state of the WdgMSupervisedEntity_4 SE has not changed and remains WDGM_LOCAL_STATUS_FAILED.
    13. Change the Os Application state to APPLICATION_ACCESSIBLE.
    14. Call WdgM_CheckpointReached with valid arguments for all SEs.
    15. Call the main function.
    16. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1901</internalId></specobject>
    <specobject>
      <id>TS_WDGM_WdgMRequestPartitionReset_InternalTransition</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_PartitionRestart/source/application/EbTest.c.m4</sourcefile>
      <sourceline>1171</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that partition restart feature works properly when Internal Logical
      Supervision fails for a Supervised Entity.
      |------------------------------------------------------------------------------------------------------------------|
      | WdgM Supervised Entity  | Supervision type                                 | Os Application   | Multicore CoreId |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_0  | alive                                            | OsApplication_0  | 0                |
      |                         | internal transition (CP0, CP1)                   |                  |                  |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_1  | alive                                            | OsApplication_0  | 0                |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_2  | alive                                            | OsApplication_0  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_3  | alive                                            | OsApplication_1  | 1                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_4  | alive                                            | OsApplication_2  | 2                |
      |                         | alive indications of the Checkpoint (CP0): 2     |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_5  | alive                                            | OsApplication_2  | 2                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_6  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_7  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_8  | alive                                            | OsApplication_3  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_9  | alive                                            | OsApplication_3  | 0                |
      |                         | WdgMFailedAliveSupervisionRefCycleTol 3          |                  |                  |
      |------------------------------------------------------------------------------------------------------------------|
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    WdgMSupervisorCallouts            is enabled
    WdgMRequestPartitionResetCallout  is enabled
    WdgMErrorRecoveryEnabled          is enabled
    WdgMSupervisedEntity_0
      WdgMInternalTransitionDestRef   WdgM_SE0_CP1
      WdgMInternalTransitionSourceRef WdgM_SE0_CP0
  
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
    03. Call WdgM_CheckpointReached with valid arguments for configured SEs EXCEPT the WdgM_SE0_CP1 CheckPoint
        from WdgMSupervisedEntity_1 (OS Application 0).
    04. Call the main function -&gt; WdgMSupervisedEntity_1 FAILED.
    05. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    06. VP: Verify that the local state of the WdgMSupervisedEntity_1 SE has changed to WDGM_LOCAL_STATUS_FAILED.
    07. VP: Verify that the configured WdgMRequestPartitionResetCallout callout has been called.
    08. Call WdgM_CheckpointReached with valid arguments - there is no need to call WdgM_CheckpointReached for
        WdgMSupervisedEntity_1 and WdgMSupervisedEntity_2 because they share the same Os Application with WdgMSupervisedEntity_0.
    09. Call the main function.
    10. VP: Verify that no other calls of the configured WdgMRequestPartitionResetCallout callout occur.
    11. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    12. VP: Verify that the local state of the WdgMSupervisedEntity_0 SE has not changed and remains WDGM_LOCAL_STATUS_FAILED.
    13. Change the Os Application state to APPLICATION_ACCESSIBLE.
    14. Call WdgM_CheckpointReached with valid arguments for all SEs.
    15. Call the main function.
    16. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
    17. VP: Verify that no other calls of the configured WdgMRequestPartitionResetCallout callout occur.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1902</internalId></specobject>
    <specobject>
      <id>TS_WDGM_Two_WdgMRequestPartitionReset</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_PartitionRestart/source/application/EbTest.c.m4</sourcefile>
      <sourceline>1434</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that partition restart feature works properly when when two partition
      restart requests occur and both recover in common MainFunction cycles.
      |------------------------------------------------------------------------------------------------------------------|
      | WdgM Supervised Entity  | Supervision type                                 | Os Application   | Multicore CoreId |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_0  | alive                                            | OsApplication_0  | 0                |
      |                         | internal transition (CP0, CP1)                   |                  |                  |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_1  | alive                                            | OsApplication_0  | 0                |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_2  | alive                                            | OsApplication_0  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_3  | alive                                            | OsApplication_1  | 1                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_4  | alive                                            | OsApplication_2  | 2                |
      |                         | alive indications of the Checkpoint (CP0): 2     |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_5  | alive                                            | OsApplication_2  | 2                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_6  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_7  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_8  | alive                                            | OsApplication_3  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_9  | alive                                            | OsApplication_3  | 0                |
      |                         | WdgMFailedAliveSupervisionRefCycleTol 3          |                  |                  |
      |------------------------------------------------------------------------------------------------------------------|
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    WdgMSupervisorCallouts            is enabled
    WdgMRequestPartitionResetCallout  is enabled
    WdgMErrorRecoveryEnabled          is enabled
  
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
    03. Call WdgM_CheckpointReached with valid arguments for configured SEs EXCEPT WdgMSupervisedEntity_3 (OS Application 1)
        and with a single WdgM_CheckpointReached call for WdgMSupervisedEntity_4, it needs 2 calls because WdgMExpectedAliveIndications = 2.
    04. Call the main function -&gt; WdgMSupervisedEntity_3 and WdgMSupervisedEntity_4 FAILED.
    05. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    06. VP: Verify that the local states of the WdgMSupervisedEntity_3 and WdgMSupervisedEntity_4 SE have change to WDGM_LOCAL_STATUS_FAILED.
    07. VP: Verify that the configured WdgMRequestPartitionResetCallout callout has been called twice.
    08. Change the Os Application state to APPLICATION_ACCESSIBLE.
    09. Call WdgM_CheckpointReached with valid arguments - there is no need to call WdgM_CheckpointReached for
        WdgMSupervisedEntity_5 because it shares the same Os Application with WdgMSupervisedEntity_4.
    10. Call the main function.
    11. Call WdgM_CheckpointReached with valid arguments for all configured SEs.
    12. Call the main function.
    13. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1903</internalId></specobject>
    <specobject>
      <id>TS_WDGM_WdgMRequestPartitionReset_FailedAliveSupervisionRefCycleTol</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_PartitionRestart/source/application/EbTest.c.m4</sourcefile>
      <sourceline>1623</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Verify that no partition restart request occurs until the acceptable amount of reference cycles
      with incorrect/failed alive supervisions is reached.
      |------------------------------------------------------------------------------------------------------------------|
      | WdgM Supervised Entity  | Supervision type                                 | Os Application   | Multicore CoreId |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_0  | alive                                            | OsApplication_0  | 0                |
      |                         | internal transition (CP0, CP1)                   |                  |                  |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_1  | alive                                            | OsApplication_0  | 0                |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_2  | alive                                            | OsApplication_0  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_3  | alive                                            | OsApplication_1  | 1                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_4  | alive                                            | OsApplication_2  | 2                |
      |                         | alive indications of the Checkpoint (CP0): 2     |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_5  | alive                                            | OsApplication_2  | 2                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_6  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_7  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_8  | alive                                            | OsApplication_3  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_9  | alive                                            | OsApplication_3  | 0                |
      |                         | WdgMFailedAliveSupervisionRefCycleTol 3          |                  |                  |
      |------------------------------------------------------------------------------------------------------------------|
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    WdgMSupervisorCallouts            is enabled
    WdgMRequestPartitionResetCallout  is enabled
    WdgMErrorRecoveryEnabled          is enabled
    WdgMLocalStatusParams_9
      WdgMFailedAliveSupervisionRefCycleTol = 3
  
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
      03. Call WdgM_CheckpointReached with valid arguments for configured SEs EXCEPT WdgMSupervisedEntity_9 (OS Application 3).
      04. Call the main function -&gt; WdgMSupervisedEntity_9 FAILED.
      05. VP: Verify that the local state of the WdgMSupervisedEntity_9 SE to be WDGM_LOCAL_STATUS_FAILED.
      06. VP: Verify that the configured WdgMRequestPartitionResetCallout callout has NOT been called.
    07. Call WdgM_CheckpointReached with valid arguments for configured SEs EXCEPT WdgMSupervisedEntity_9 (OS Application 3).
    08. Call the MainFunction.
    09. VP: Verify that the configured WdgMRequestPartitionResetCallout callout has been called.
    10. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    11. VP: Verify that the local state of the WdgMSupervisedEntity_4 SE to be WDGM_LOCAL_STATUS_FAILED.
    12. Call WdgM_CheckpointReached with valid arguments - there is no need to call WdgM_CheckpointReached for
        WdgMSupervisedEntity_8 because it shares the same Os Application with WdgMSupervisedEntity_9.
    13. Call the MainFunction.
    14. VP: Verify that no other calls of the configured WdgMRequestPartitionResetCallout callout occur.
    15. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    16. VP: Verify that the local state of the WdgMSupervisedEntity_9 SE has not changed and remains WDGM_LOCAL_STATUS_FAILED.
    17. Change the Os Application state to APPLICATION_ACCESSIBLE.
    18. Call WdgM_CheckpointReached with valid arguments for all SEs.
    19. Call the MainFunction.
    20. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1904</internalId></specobject>
    <specobject>
      <id>TS_WDGM_WdgMRequestPartitionReset_ReferenceCycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_PartitionRestart/source/application/EbTest.c.m4</sourcefile>
      <sourceline>1908</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that partition restart feature works properly when the amount of supervision cycles to be used
      as reference by the alive-supervision mechanism to perform the checkup is set 2.
      |------------------------------------------------------------------------------------------------------------------|
      | WdgM Supervised Entity  | Supervision type                                 | Os Application   | Multicore CoreId |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_10 | alive                                            | OsApplication_4  | 0                |
      |                         | WdgMSupervisionReferenceCycle 2                  |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_11 | alive                                            | OsApplication_0  | 1                |
      |                         | internal transition (CP0, CP1)                   |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_12 | alive                                            | OsApplication_4  | 0                |
      |------------------------------------------------------------------------------------------------------------------|
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    WdgMSupervisorCallouts            is enabled.
    WdgMRequestPartitionResetCallout  is enabled
    WdgMErrorRecoveryEnabled          is enabled
    WdgMAliveSupervision_10
      WdgMSupervisionReferenceCycle = 2
    WdgMAliveSupervision_12
      WdgMSupervisionReferenceCycle = 2
  
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Call WdgM_CheckpointReached with valid arguments for all SEs.
    03. Verify the local status of all tested SEs to be WDGM_LOCAL_STATUS_OK.
    04. Switch to mode WdgMMode_1.
    05. VP: No Det errors were reported.
    06. Get the active mode.
    07 VP: Check that E_OK is returned.
    08 VP: Check that mode switch was correctly performed.
    09. Get the global status.
    10 VP: Check that E_OK is returned.
    11 VP: Check that the global status is WDGM_GLOBAL_STATUS_OK.
    12. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
    ----------------------------------------------------------------------------
    13. Call WdgM_CheckpointReached with valid arguments for SEs EXCEPT WdgMSupervisedEntity_10 (OS Application 4).
    14. Call FIRST MainFunction.
    15. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    16. Call WdgM_CheckpointReached with valid arguments for SEs EXCEPT WdgMSupervisedEntity_12 (OS Application 4).
    17. Call SECOND MainFunction.
    18. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    ----------------------------------------------------------------------------
    19. Call WdgM_CheckpointReached with valid arguments for SEs.
    20. Call FIRST MainFunction.
    21. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    22. Call WdgM_CheckpointReached with valid arguments for SEs EXCEPT WdgMSupervisedEntity_12 (OS Application 4).
    23. Call SECOND MainFunction.
    24. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    25. VP: Verify that the local state of the WdgMSupervisedEntity_10 SE has changed to WDGM_LOCAL_STATUS_FAILED because
        there were 2 WdgM_CheckpointReached calls for WdgMSupervisedEntity_10 between 2 MainFunction cycles.
    26. VP: Verify that the configured WdgMRequestPartitionResetCallout callout has been called.
    27. Call WdgM_CheckpointReached with valid arguments for SEs.
    28. Call FIRST MainFunction.
    29. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    30. VP: Verify that the local state of the WdgMSupervisedEntity_10 SE has not changed and remains WDGM_LOCAL_STATUS_FAILED.
    31. Change the Os Application state to APPLICATION_ACCESSIBLE.
    32. Call WdgM_CheckpointReached with valid arguments.
    33. Call SECOND MainFunction.
    34. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    ----------------------------------------------------------------------------
    35. Call WdgM_CheckpointReached with valid arguments for SEs.
    36. Call FIRST MainFunction.
    37. Call SECOND MainFunction.
    38. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1905</internalId></specobject>
    <specobject>
      <id>TS_WDGM_Two_WdgMRequestPartitionReset_ReferenceCycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_PartitionRestart/source/application/EbTest.c.m4</sourcefile>
      <sourceline>2292</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that partition restart feature works properly when the amount of supervision cycles to be used
      as reference by the alive-supervision mechanism to perform the checkup is set 2 and the OS
      partitions recover on different MainFunction cycles.
      |------------------------------------------------------------------------------------------------------------------|
      | WdgM Supervised Entity  | Supervision type                                 | Os Application   | Multicore CoreId |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_10 | alive                                            | OsApplication_4  | 0                |
      |                         | WdgMSupervisionReferenceCycle 2                  |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_11 | alive                                            | OsApplication_0  | 1                |
      |                         | internal transition (CP0, CP1)                   |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_12 | alive                                            | OsApplication_4  | 0                |
      |------------------------------------------------------------------------------------------------------------------|
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    WdgMSupervisorCallouts            is enabled.
    WdgMRequestPartitionResetCallout  is enabled
    WdgMErrorRecoveryEnabled          is enabled
    WdgMAliveSupervision_10
      WdgMSupervisionReferenceCycle = 2
    WdgMAliveSupervision_12
      WdgMSupervisionReferenceCycle = 2
  
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Call WdgM_CheckpointReached with valid arguments for all SEs.
    03. Verify the local status of all tested SEs to be WDGM_LOCAL_STATUS_OK.
    04. Switch to mode WdgMMode_1.
    05. VP: No Det errors were reported.
    06. Get the active mode.
    07 VP: Check that E_OK is returned.
    08 VP: Check that mode switch was correctly performed.
    09. Get the global status.
    10 VP: Check that E_OK is returned.
    11 VP: Check that the global status is WDGM_GLOBAL_STATUS_OK.
    12. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
    ----------------------------------------------------------------------------
    13. Call WdgM_CheckpointReached with valid arguments for SEs EXCEPT WdgMSupervisedEntity_10 (OS Application 4).
    14. Call FIRST MainFunction.
    15. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
    16. Call WdgM_CheckpointReached with valid arguments for SEs EXCEPT WdgMSupervisedEntity_12 (OS Application 4).
    17. Call SECOND MainFunction.
    18. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
    ----------------------------------------------------------------------------
    19. Call WdgM_CheckpointReached with valid arguments for tested SEs.
    20. Call FIRST MainFunction.
    21. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
    22. Call WdgM_CheckpointReached with valid arguments for tested SEs.
    23. Call SECOND MainFunction.
    24. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
    25. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_FAILED.
    26. VP: Verify that the configured WdgMRequestPartitionResetCallout callout has been called twice.
    27. Call FIRST MainFunction.
    28. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
    29. VP: Verify that the local states of the WdgMSupervisedEntity_10 and WdgMSupervisedEntity_11 SEs have
        NOT changed and remains WDGM_LOCAL_STATUS_FAILED.
    30. Set the APPLICATION_RESTARTING state for Os Application 4.
    31. Call the MainFunction.
    32. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK - the local status
        of the WdgMSupervisedEntity_11 has been changed to WDGM_LOCAL_STATUS_OK
    33. VP: Verify that the local state of the WdgMSupervisedEntity_10 SE has NOT changed and remains WDGM_LOCAL_STATUS_FAILED.
    ----------------------------------------------------------------------------
    34. Call WdgM_CheckpointReached with valid arguments for tested SEs.
    35. Change the Os Application state to APPLICATION_ACCESSIBLE.
    36. Call the main functions on all cores.
    37. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
    ----------------------------------------------------------------------------
    38. Call WdgM_CheckpointReached with valid arguments for tested SEs.
    39. Call FIRST MainFunction.
    40. Call WdgM_CheckpointReached with valid arguments for tested SEs.
    41. Call SECOND MainFunction.
    42. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1906</internalId></specobject>
    <specobject>
      <id>TS_WDGM_WdgMRequestPartitionReset_DeadlineSupervision</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_PartitionRestart/source/application/EbTest.c.m4</sourcefile>
      <sourceline>2721</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that partition restart feature works properly when an Supervised Entity changes the state
      to WDGM_LOCAL_STATUS_FAILED and has DeadlineSupervision configured.
      |------------------------------------------------------------------------------------------------------------------|
      | WdgM Supervised Entity  | Supervision type                                 | Os Application   | Multicore CoreId |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      |                         | WdgMSupervisionReferenceCycle 2                  |                  |                  |
      | WdgMSupervisedEntity_13 | deadline supervision                             | OsApplication_3  | 1                |
      |------------------------------------------------------------------------------------------------------------------|
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    WdgMSupervisorCallouts            is enabled
    WdgMRequestPartitionResetCallout  is enabled
    WdgMErrorRecoveryEnabled          is enabled
    WdgMAliveSupervision_13
      WdgMDeadlineStartRef            is WdgM_SE13_CP0
      WdgMDeadlineStopRef             is WdgM_SE13_CP0
  
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Call WdgM_CheckpointReached with valid arguments for all SEs.
    03. Verify the local status of all tested SEs to be WDGM_LOCAL_STATUS_OK.
    04. Switch to mode WdgMMode_1.
    05. VP: No Det errors were reported.
    06. Get the active mode.
    07 VP: Check that E_OK is returned.
    08 VP: Check that mode switch was correctly performed.
    09. Get the global status.
    10 VP: Check that E_OK is returned.
    11 VP: Check that the global status is WDGM_GLOBAL_STATUS_OK.
    12. Call WdgM_CheckpointReached on the core to which it is allocated for the Start Checkpoint
        of the Deadline configuration (New Deadline monitoring is started).
    13. Prepare a time callout to return an elapsed time within the minimum and the maximum limits.
    14. Call WdgM_CheckpointReached on the core to which it is allocated for the Stop Checkpoint of the Deadline configuration.
    15. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
    16. Call WdgM_CheckpointReached on the core to which it is allocated for the Start Checkpoint
        of the Deadline configuration (New Deadline monitoring is started).
    17. Prepare a time callout to return an elapsed time which is 1 below the minimum limit.
    18. Call WdgM_CheckpointReached on the core to which it is allocated for the Stop Checkpoint of the Deadline configuration.
    19. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK has NOT changed
        because the MainFunction function has not been called yet.
    20. Call the main function -&gt; WdgMSupervisedEntity_4 FAILED.
    21. VP: Verify that the local state of the WdgMSupervisedEntity_13 SE has changed to WDGM_LOCAL_STATUS_FAILED.
    22. VP: Verify that the configured WdgMRequestPartitionResetCallout callout has been called.
    23. Change the Os Application state to APPLICATION_ACCESSIBLE.
    24. Call the main function -&gt; WdgMSupervisedEntity_4 OK.
    25. Verify the local status of the tested SE has been changed to WDGM_LOCAL_STATUS_OK.
    26. Call WdgM_CheckpointReached on the core to which it is allocated for the Start Checkpoint
        of the Deadline configuration (New Deadline monitoring is started).
    27. Prepare a time callout to return an elapsed time within the minimum and the maximum limits.
    28. Call WdgM_CheckpointReached on the core to which it is allocated for the Stop Checkpoint of the Deadline configuration.
    29. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020485</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>679</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1907</internalId></specobject>
    <specobject>
      <id>TS_WDGM_WdgMRequestPartitionReset_GetApplicationState_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_PartitionRestart/source/application/EbTest.c.m4</sourcefile>
      <sourceline>2952</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that partition restart feature works properly when callout API for retrieving the
      state of an Os application returns E_NOT_OK.
      |------------------------------------------------------------------------------------------------------------------|
      | WdgM Supervised Entity  | Supervision type                                 | Os Application   | Multicore CoreId |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_0  | alive                                            | OsApplication_0  | 0                |
      |                         | internal transition (CP0, CP1)                   |                  |                  |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_1  | alive                                            | OsApplication_0  | 0                |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_2  | alive                                            | OsApplication_0  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_3  | alive                                            | OsApplication_1  | 1                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_4  | alive                                            | OsApplication_2  | 2                |
      |                         | alive indications of the Checkpoint (CP0): 2     |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_5  | alive                                            | OsApplication_2  | 2                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_6  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_7  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_8  | alive                                            | OsApplication_3  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_9  | alive                                            | OsApplication_3  | 0                |
      |                         | WdgMFailedAliveSupervisionRefCycleTol 3          |                  |                  |
      |------------------------------------------------------------------------------------------------------------------|
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    WdgMSupervisorCallouts           is enabled
    WdgMRequestPartitionResetCallout is enabled
    WdgMErrorRecoveryEnabled         is enabled
    WdgMAliveSupervision_4
      WdgMExpectedAliveIndications = 2
  
Test Execution: 

  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM225.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>728</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1908</internalId></specobject>
    <specobject>
      <id>TS_WDGM_WdgMRequestPartitionReset_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_PartitionRestart/source/application/EbTest.c.m4</sourcefile>
      <sourceline>3245</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that partition restart feature works properly when WdgMRequestPartitionReset returns E_NOT_OK.
      |------------------------------------------------------------------------------------------------------------------|
      | WdgM Supervised Entity  | Supervision type                                 | Os Application   | Multicore CoreId |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_0  | alive                                            | OsApplication_0  | 0                |
      |                         | internal transition (CP0, CP1)                   |                  |                  |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_1  | alive                                            | OsApplication_0  | 0                |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_2  | alive                                            | OsApplication_0  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_3  | alive                                            | OsApplication_1  | 1                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_4  | alive                                            | OsApplication_2  | 2                |
      |                         | alive indications of the Checkpoint (CP0): 2     |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_5  | alive                                            | OsApplication_2  | 2                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_6  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_7  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_8  | alive                                            | OsApplication_3  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_9  | alive                                            | OsApplication_3  | 0                |
      |                         | WdgMFailedAliveSupervisionRefCycleTol 3          |                  |                  |
      |------------------------------------------------------------------------------------------------------------------|
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    WdgMSupervisorCallouts           is enabled
    WdgMRequestPartitionResetCallout is enabled
    WdgMErrorRecoveryEnabled         is enabled
    WdgMAliveSupervision_4
      WdgMExpectedAliveIndications = 2
  
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
    03. Call WdgM_CheckpointReached with valid arguments for all SEs - with a single WdgM_CheckpointReached call for WdgMSupervisedEntity_4,
        it needs 2 calls because WdgMExpectedAliveIndications = 2.
    04. WdgMRequestPartitionResetCallout callout returns E_NOT_OK
    05. Call the main function -&gt; WdgMSupervisedEntity_4 FAILED.
    06. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    07. VP: Verify that the local state of the WdgMSupervisedEntity_1 SE has changed to WDGM_LOCAL_STATUS_FAILED.
    08. VP: Verify that the configured WdgMRequestPartitionResetCallout callout has been called.
    09. Call WdgM_CheckpointReached with valid arguments - there is no need to call WdgM_CheckpointReached for
        WdgMSupervisedEntity_5 because it shares the same Os Application with WdgMSupervisedEntity_4.
    10. Call the main function.
    11. WdgMRequestPartitionResetCallout callout returns E_OK
    12. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    13. VP: Verify that the local state of the WdgMSupervisedEntity_4 SE has not changed and remains WDGM_LOCAL_STATUS_FAILED.
    14. VP: Verify that the configured WdgMRequestPartitionResetCallout callout has been called.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1909</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_GetAllExpiredSEID_NullPointer_MultiCore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_multicore/source/application/EbTest.c.m4</sourcefile>
      <sourceline>125</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that the WdgM_GetAllExpiredSEID() function returns WDGM_E_INV_POINTER if API
      is called with the NULL pointer as parameter.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    WdgMDevErrorDetect is enabled.
  
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Call WdgM_GetAllExpiredSEID with NULL pointer.
    03. VP(WDGM.EB.GetAllExpiredSEID.Params.DetReport): Should report the DET error: WDGM_E_INV_POINTER.
    04. VP(WDGM.EB.GetAllExpiredSEID.Params.NULL_PTR): Check that WdgM_GetAllExpiredSEID function returned E_NOT_OK.
    05. Call WdgM_GetAllExpiredSEID with NULL pointer.
    06. VP(WDGM.EB.GetAllExpiredSEID.Params.DetReport): Should report the DET error: WDGM_E_INV_POINTER.
    07. VP(WDGM.EB.GetAllExpiredSEID.Params.NULL_PTR): Check that WdgM_GetAllExpiredSEID function returned E_NOT_OK.
    08. Call WdgM_GetAllExpiredSEID with NULL pointer.
    09. VP(WDGM.EB.GetAllExpiredSEID.Params.DetReport): Should report the DET error: WDGM_E_INV_POINTER.
    10. VP(WDGM.EB.GetAllExpiredSEID.Params.NULL_PTR): Check that WdgM_GetAllExpiredSEID function returned E_NOT_OK.
  
Test Input: None.
Test Output: 
    DET error reported with "WDGM_E_INV_POINTER"
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.Params.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.Params.DetReport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1910</internalId></specobject>
    <specobject>
      <id>TS_WDGM_GetAllExpiredSEID_MultiCore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_multicore/source/application/EbTest.c.m4</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all expired Supervision Entities are reported when the WdgM_GetAllExpiredSEID function is called
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
    03: Call main functions on all cores.
    04. VP: Verify that the local state of the SE has changed to WDGM_LOCAL_STATUS_EXPIRED.
    05. Call WdgM_GetAllExpiredSEID() API in order to retrieve all the expired supervised entities.
    06. VP(WDGM.EB.GetAllExpiredSEID.MasterInstanceOnly): Verify that all expired supervised entities
        have been properly retrieved.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.Availability</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.MasterInstanceOnly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1911</internalId></specobject>
    <specobject>
      <id>TS_WDGM_GetAllExpiredSEID_MultiCore_SatelliteCall</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_multicore/source/application/EbTest.c.m4</sourcefile>
      <sourceline>331</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that all expired Supervision Entities are retrieved only from master core instance.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
    03: Call main functions on all cores.
    04. VP: Verify that the local state of the SE has changed to WDGM_LOCAL_STATUS_EXPIRED.
    05. Set the Tst_CoreId to CORE 0.
    06. Try to call WdgM_GetAllExpiredSEID() API in order to retrieve all the expired supervised entities from a core different than the master instance.
    07. VP(WDGM.EB.GetAllExpiredSEID.SatelliteCall.Return): Verify that the function returned
        with E_NOT_OK and no expired supervised entity has been retrieved.
    08. VP(WDGM.EB.GetAllExpiredSEID.SatelliteCall.DetError): Should report the DET error: WDGM_E_PARAM_WRONG_CORE_ID.
    09. Set the Tst_CoreId to CORE 1.
    10. Try to call WdgM_GetAllExpiredSEID() API in order to retrieve all the expired supervised entities from a core different than the master instance.
    11. VP(WDGM.EB.GetAllExpiredSEID.SatelliteCall.Return): Verify that the function returned
        with E_NOT_OK and no expired supervised entity has been retrieved.
    12. VP(WDGM.EB.GetAllExpiredSEID.SatelliteCall.DetError): Should report the DET error: WDGM_E_PARAM_WRONG_CORE_ID.
    13. Set the Tst_CoreId to MASTER CORE.
    14. Call WdgM_GetAllExpiredSEID() API in order to retrieve all the expired supervised entities.
    15. VP(WDGM.EB.GetAllExpiredSEID.MasterInstanceOnly): Verify that all expired supervised entities have been properly retrieved.
    16. VP: No DET errors were reported.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.Availability</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.SatelliteCall.Return</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.MasterInstanceOnly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.SatelliteCall.DetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1912</internalId></specobject>
    <specobject>
      <id>TS_WDGM_GetAllExpiredSEID_PowerOnReset_MultiCore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_multicore/source/application/EbTest.c.m4</sourcefile>
      <sourceline>496</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that all expired Supervision Entities are retrieved when the WdgM_GetAllExpiredSEID function is called
    after a power on reset.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
    03: Call main functions on all cores.
    04. VP: Verify that the local state of the SE has changed to WDGM_LOCAL_STATUS_EXPIRED.
    05. De-initialize WdgM - in order to simulate a power on reset.
    06. Call WdgM_GetAllExpiredSEID() API in order to retrieve all the expired supervised entities.
    07. VP: Verify that all expired supervised entities have been properly retrieved.
    08. Call WdgM_GetAllExpiredSEID() API a second time in order to check that expired supervised entities has been cleared.
    09. VP(WDGM.EB.GetAllExpiredSEID.CoreSpecific.Reset): There is no expired supervised entities to be retrieved.
    10. VP: No Det errors were reported.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.Availability</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.CoreSpecific.Reset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1913</internalId></specobject>
    <specobject>
      <id>TS_WDGM_GetAllExpiredSEID_ExpireAgainSameSE_MultiCore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_15_FailOperation_multicore/source/application/EbTest.c.m4</sourcefile>
      <sourceline>622</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that all expired Supervision Entities are reported when the WdgM_GetAllExpiredSEID function is called
    and there are no duplicate expired SE entries when the the state from WDGM_LOCAL_STATUS_OK to
    WDGM_LOCAL_STATUS_EXPIRED is change a second time.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
    03: Call main functions on all cores.
    04. VP: Verify that the local state of the SE has changed to WDGM_LOCAL_STATUS_EXPIRED.
    05. De-initialize WdgM - in order to simulate a power on reset.
    06. Initialize WdgM module /Call main functions on all cores.
    07. Call WdgM_GetAllExpiredSEID() API in order to retrieve all the expired supervised entities.
    08. VP: Verify that all expired supervised entities have been properly retrieved and there are no duplicate entries.
    09. Call MainFunction a SECOND time on all cores to switch the state from WDGM_LOCAL_STATUS_OK to
      WDGM_LOCAL_STATUS_EXPIRED for tested SE.
    10. Call WdgM_GetAllExpiredSEID() API in order to retrieve all the expired supervised entities.
    11. VP: Verify that all expired supervised entities have been properly retrieved and there are no duplicate entries.
    12. VP: No DET errors were reported.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetAllExpiredSEID.Availability</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1914</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_AliveSupervisionLimit_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_AliveSupervisionLimit/source/application/WdgM_ConTest_16_AliveSuperVisionLimit.c.m4</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that if greater number of AliveSupervisions from a 3 SupervisedEntities, 
  mapped on the same core are correctly computed by the WdgM and consequently Global 
  Supervision Status is updated correctly.
  The test method is "Stress tests".

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_0, CP0_1 ... CP0_99 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_0, CP1_1 ... CP1_99 (mapped on core 0)
  WdgMSupervisedEntity_2: Checkpoints: CP2_0, CP2_1 ... CP2_99 (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2       -&gt; not used
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 300 AliveSupervisions from 3 SupervisedEntity(s)


Test Execution: 
  01: Initialize WdgM
  02: Set a mode where at least one Alive supervision is configured
  03: VP: Check that set mode was correctly performed
  04: Call main function
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Call WdgM_CheckpointReached() for all Checkpoints of SupervisedEntity_0
  09: VP: Check that E_OK is returned
  10: Call WdgM_CheckpointReached() for all CheckPoints of SupervisedEntity_1
  11 VP: Check that E_OK is returned
  12: Call WdgM_CheckpointReached() for all Checkpoints of SupervisedEntity_2
  13 VP: Check that E_OK is returned
  14: Call main function
  15: Get the local status
  16 VP: Check that E_OK is returned
  17 VP: Check that the local status is WDGM_LOCAL_STATUS_OK
  18: Get the local status of the satellite core 0.
  19 VP: Check that E_OK is returned
  20 VP: Check that the local status is WDGM_LOCAL_STATUS_OK
  21: Get the local status of the satellite core 1.
  22 VP: Check that E_OK is returned
  23 VP: Check that the local status is WDGM_LOCAL_STATUS_OK
  24: Get the global status
  25 VP: Check that E_OK is returned
  26 VP: Check that the global status is WDGM_GLOBAL_STATUS_OK

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1915</internalId></specobject>
    <specobject>
      <id>TS_WDGM_AliveSupervisionLimit_NOK_missedCP</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_AliveSupervisionLimit/source/application/WdgM_ConTest_16_AliveSuperVisionLimit.c.m4</sourcefile>
      <sourceline>238</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that if more Checkpoints (AliveSupervisions) from different SupervisedEntities are missed,
  the AliveSupervision function of WdgM is signaling a failure and consequently the Global
  Supervision Status is updated correctly.
  The test method is "Stress tests".

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_0, CP0_1 ... CP0_99 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_0, CP1_1 ... CP1_99 (mapped on core 0)
  WdgMSupervisedEntity_2: Checkpoints: CP2_0, CP2_1 ... CP2_99 (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2       -&gt; not used
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 300 AliveSupervisions from 3 SupervisedEntity(s)


Test Execution: 
  01: Initialize WdgM
  02: Set a mode where at least one Alive supervision is configured
  03 VP: Check that set mode was correctly performed
  04: Call main function
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Call WdgM_CheckpointReached() for all CheckPoints of SupervisedEntity_0
  09 VP: Check that E_OK is returned
  10: Call WdgM_CheckpointReached() for one CheckPoint of SupervisedEntity_1 (99 missed)
  11 VP: Check that E_OK is returned
  12: Call WdgM_CheckpointReached() for one CheckPoint of SupervisedEntity_2 (99 missed)
  13 VP: Check that E_OK is returned
  14: Call main function
  15: Get the local status
  16 VP: Check that E_OK is returned
  17 VP: Check that local status is WDGM_LOCAL_STATUS_OK for SupervisedEntity_0, SupervisedEntity_1 and 
         for SupervisedEntity_2the status should be WDGM_LOCAL_STATUS_FAILED.
  18: Get the global status
  19 VP: Check that E_OK is returned
  20 VP: Check that global status is WDGM_GLOBAL_STATUS_FAILED

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1916</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_AliveSupervisionLimit_OK_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_AliveSupervisionLimit_multicore/source/application/WdgM_ConTest_16_AliveSuperVisionLimit_multicore.c.m4</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that if greater number of AliveSupervisions from a 3 SupervisedEntities, 
  mapped on 3 different cores are correctly computed by the WdgM and consequently Global 
  Supervision Status is updated correctly.
  The test method is "Stress tests".

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_0, CP0_1 ... CP0_99 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_0, CP1_1 ... CP1_99 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_0, CP2_1 ... CP2_99 (mapped on core 2)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2       -&gt; not used
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 300 AliveSupervisions from 3 SupervisedEntity(s), each SupervisedEntity is assigned
  to a different core.


Test Execution: 
  01: Initialize WdgM
  02: Set a mode where at least one Alive supervision is configured
  03: VP: Check that set mode was correctly performed
  04: Call main functions on all cores
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Switch to the master core
  09: Call WdgM_CheckpointReached() for all Checkpoints of SupervisedEntity_0
  10: VP: Check that E_OK is returned
  11: Switch to the satellite core 1
  12: Call WdgM_CheckpointReached() for all CheckPoints of SupervisedEntity_1
  13 VP: Check that E_OK is returned
  14: Switch to the satellite core 2
  15: Call WdgM_CheckpointReached() for all Checkpoints of SupervisedEntity_2
  16 VP: Check that E_OK is returned
  17: Call main functions on all cores
  18: Get the local status of the Master core.
  19 VP: Check that E_OK is returned
  20 VP: Check that the local status is WDGM_LOCAL_STATUS_OK
  21: Get the local status of the satellite core 1.
  22 VP: Check that E_OK is returned
  23 VP: Check that the local status is WDGM_LOCAL_STATUS_OK
  24: Get the local status of the satellite core 2.
  25 VP: Check that E_OK is returned
  26 VP: Check that the local status is WDGM_LOCAL_STATUS_OK
  27: Get the global status
  28 VP: Check that E_OK is returned
  29 VP: Check that the global status is WDGM_GLOBAL_STATUS_OK

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1917</internalId></specobject>
    <specobject>
      <id>TS_WDGM_AliveSupervisionLimit_NOK_missedCP_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_AliveSupervisionLimit_multicore/source/application/WdgM_ConTest_16_AliveSuperVisionLimit_multicore.c.m4</sourcefile>
      <sourceline>270</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that if more Checkpoints (AliveSupervisions) from different SupervisedEntities are missed,
  the AliveSupervision function of WdgM is signaling a failure and consequently the Global
  Supervision Status is updated correctly.
  The test method is "Stress tests".

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_0, CP0_1 ... CP0_99 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_0, CP1_1 ... CP1_99 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_0, CP2_1 ... CP2_99 (mapped on core 2)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2       -&gt; not used
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 300 AliveSupervisions from 3 SupervisedEntity(s), each SupervisedEntity is assigned
  to a different core.


Test Execution: 
  01: Initialize WdgM
  02: Set a mode where at least one Alive supervision is configured
  03 VP: Check that set mode was correctly performed
  04: Call main functions on all cores
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Switch to the master core
  09: Call WdgM_CheckpointReached() for all CheckPoints of SupervisedEntity_0
  10 VP: Check that E_OK is returned
  11: Switch to satellite core 1
  12: Call WdgM_CheckpointReached() for one CheckPoint of SupervisedEntity_1 (99 missed)
  13 VP: Check that E_OK is returned
  14: Switch to satellite core 2
  15: Call WdgM_CheckpointReached() for one CheckPoint of SupervisedEntity_2 (99 missed)
  16 VP: Check that E_OK is returned
  17: Call main functions on all cores
  18: Get the local status
  19 VP: Check that E_OK is returned
  20 VP: Check that local status is WDGM_LOCAL_STATUS_OK for SupervisedEntity_0, SupervisedEntity_1 and 
         for SupervisedEntity_2 the status should be WDGM_LOCAL_STATUS_FAILED.
  21: Get the global status
  22 VP: Check that E_OK is returned
  23 VP: Check that global status is WDGM_GLOBAL_STATUS_FAILED

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1918</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_CheckPointLimit_OK_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_CheckPointLimit_multicore/source/application/WdgM_ConTest_16_CheckPointLimit_multicore.c.m4</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that if the maximum number of Checkpoints from a SupervisedEntity are
  called correctly and the WdgM computes correctly the Global Supervision Status.
  The test method is "Stress tests".

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_0, CP0_1 ... CP0_254 (255 CheckPoints mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_0                    (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_0                    (mapped on core 2)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 257 AliveSupervisions from 3 SupervisedEntity(s), each SupervisedEntity is assigned
  to a different core.


Test Execution: 
  01: Initialize WdgM
  02: Set a mode where at least one Alive supervision is configured
  03: VP: Check that set mode was correctly performed
  04: Call main functions on all cores
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Switch to the master core
  09: Call WdgM_CheckpointReached() for all Checkpoints of SupervisedEntity_0
  10: VP: Check that E_OK is returned
  11: Switch to the satellite core 0
  12: Call WdgM_CheckpointReached() for all CheckPoints of SupervisedEntity_1
  13 VP: Check that E_OK is returned
  14: Switch to the satellite core 1
  15: Call WdgM_CheckpointReached() for all Checkpoints of SupervisedEntity_2
  16 VP: Check that E_OK is returned
  17: Call main functions on all cores
  18: Get the local status.
  19 VP: Check that E_OK is returned
  20 VP: Check that the local status is WDGM_LOCAL_STATUS_OK
  21: Get the global status
  22 VP: Check that E_OK is returned
  23 VP: Check that the global status is WDGM_GLOBAL_STATUS_OK

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1919</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckPointLimit_NOK_missedCP_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_CheckPointLimit_multicore/source/application/WdgM_ConTest_16_CheckPointLimit_multicore.c.m4</sourcefile>
      <sourceline>249</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that if one Checkpoint from a SupervisedEntity is not called(missed),
  the AliveSupervision function of WdgM is signaling a failure and consequently the Global
  Supervision Status is updated correctly.
  The test method is "Stress tests".

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_0, CP0_1 ... CP0_254 (255 CheckPoints mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_0                    (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_0                    (mapped on core 2)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 257 AliveSupervisions from 3 SupervisedEntity(s), each SupervisedEntity is assigned
  to a different core.


Test Execution: 
  01: Initialize WdgM
  02: Set a mode where at least one Alive supervision is configured
  03 VP: Check that set mode was correctly performed
  04: Call main functions on all cores
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Switch to the master core
  09: Call WdgM_CheckpointReached() for all CheckPoints but one of SupervisedEntity_0 (one is missed)
  10 VP: Check that E_OK is returned
  11: Switch to satellite core 0
  12: Call WdgM_CheckpointReached() for all CheckPoints of SupervisedEntity_1
  13 VP: Check that E_OK is returned
  14: Switch to satellite core 1
  15: Call WdgM_CheckpointReached() for all CheckPoints of SupervisedEntity_2
  16 VP: Check that E_OK is returned
  17: Call main functions on all cores
  18: Get the local status
  19 VP: Check that E_OK is returned
  20 VP: Check that local status is WDGM_LOCAL_STATUS_OK for SupervisedEntity_1 and SupervisedEntity_2 and 
         for SupervisedEntity_0 the status should be WDGM_LOCAL_STATUS_FAILED.
  21: Get the global status
  22 VP: Check that E_OK is returned
  23 VP: Check that global status is WDGM_GLOBAL_STATUS_FAILED

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1920</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_DeadlineSupervisionLimit</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_DeadlineSupervisionLimit/source/application/WdgM_ConTest_16_DeadlineSupervisionLimit.c.m4</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() performs the Deadline Supervision
for 300 Checkpoints of a multiple Deadline Supervision configuration
where the Stop Checkpoint is a Start Checkpoint of a further Deadline configuration
and the deadline limits are not exceeded.

Used Test Strategies:
- Boundary Value Analysis
- Gray Box Testing

The test method is "Stress tests".


Test Object: None.
Test Precondition: 

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains multiple Deadline Supervision configuration
      with Start / Stop Checkpoints
  03: Call WdgM_CheckpointReached for the first Start Checkpoint of a Deadline
      configuration where the Stop Checkpoint is a Start Checkpoint of a further
      Deadline configuration
      (New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time within the minimum and the maximum limits
      Call WdgM_CheckpointReached for the corresponding Stop Checkpoint of Step 03
      (New Deadline monitoring is started)


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1921</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_DeadlineSupervisionLimit_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_DeadlineSupervisionLimit_multicore/source/application/WdgM_ConTest_16_DeadlineSupervisionLimit_Multicore.c.m4</sourcefile>
      <sourceline>128</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that WdgM_CheckpointReached() on the core to which it is allocated to performs
the Deadline Supervision for Checkpoints of a multiple Deadline Supervision configuration
where the Stop Checkpoint is a Start Checkpoint of a further Deadline configuration
and the deadline limits are not exceeded.

Used Test Strategies:
- Boundary Value Analysis
- Gray Box Testing

The test method is "Stress tests".


Test Object: None.
Test Precondition: 

Test Execution: 

  01: Initialize WdgM
  02: Switch to a WdgM mode which contains multiple Deadline Supervision configuration
      with Start / Stop Checkpoints
  03: Call WdgM_CheckpointReached on the core to which it is allocated to for the first
      Start Checkpoint of a Deadline configuration where the Stop Checkpoint is a
      Start Checkpoint of a further Deadline configuration(New Deadline monitoring is started)
  04: VP:
      WdgM_CheckpointReached returns E_OK
  05: Prepare time callout to return an elapsed time within the minimum and the maximum limits


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1922</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ExternalLogicalLimit_OK_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_ExtLogSupLimit_multicore/source/application/WdgM_ConTest_16_ExtLogSupLimit_multicore.c.m4</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks for a graph with maximum external transitions configured
  that if all checkpoints are coming in the correct order the WdgM will compute
  the graph correctly.
  The test method is "Stress tests".

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_0, CP0_1, CP0_2, CP0_3, ... , CP0_84 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_0, CP1_1, CP1_2, CP1_3, ... , CP1_84 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_0, CP2_1, CP2_12 CP2_3, ... , CP2_84 (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_3_DeInit
  
  In mode WdgMMode_1 there are 254 External Graphs :

    External Graph  : CP0_0 -&gt; CP1_0, CP0_1 -&gt; CP1_1, CP0_2 -&gt; CP1_2, ... , CP0_84 -&gt; CP1_84 (WdgMMode_1)
                    : CP1_0 -&gt; CP2_0, CP1_1 -&gt; CP2_1, CP1_2 -&gt; CP2_2, ... , CP1_84 -&gt; CP2_84 (WdgMMode_1)
                    : CP2_0 -&gt; CP0_1, CP2_1 -&gt; CP0_2, CP2_2 -&gt; CP0_3, ... , CP2_83 -&gt; CP0_84 (WdgMMode_1)

For this test the following External Graph is used : CP0_0 -&gt; CP1_0 -&gt; CP2_0 -&gt; CP0_1 -&gt; CP1_1 -&gt; CP2_1 -&gt; CP0_2 ...
...  CP2_83 -&gt; CP0_84 -&gt; CP1_84 -&gt; CP2_84


Test Execution: 
  01   : Initialize WdgM
  02   : Set a mode that contains at least one external graph
  03 VP: Check that set mode was correctly performed
  04   : Call main functions on both cores
  05 VP: Check that mode switch was correctly performed
  06 VP: Check that all checkpoints in the external graph are executed in the correct order
  07   : Call main functions on both cores
  08 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_0
  09 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_1
  10 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_2
  11 VP: Check that the global status is WDGM_GLOBAL_STATUS_OK

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ExtLogSupLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1923</internalId></specobject>
    <specobject>
      <id>TS_WDGM_ExternalLogicalLimit_NOK_missedCP_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_ExtLogSupLimit_multicore/source/application/WdgM_ConTest_16_ExtLogSupLimit_multicore.c.m4</sourcefile>
      <sourceline>225</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
  This test checks for a graph with maximum external transitions configured
  that if checkpoints are not coming in the correct order the WdgM will detect the error.
  The test method is "Stress tests".

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_0, CP0_1, CP0_2, CP0_3, ... , CP0_84 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_0, CP1_1, CP1_2, CP1_3, ... , CP1_84 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_0, CP2_1, CP2_12 CP2_3, ... , CP2_84 (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_3_DeInit
  
  In mode WdgMMode_1 there are 254 External Graphs :

    External Graph  : CP0_0 -&gt; CP1_0, CP0_1 -&gt; CP1_1, CP0_2 -&gt; CP1_2, ... , CP0_84 -&gt; CP1_84 (WdgMMode_1)
                    : CP1_0 -&gt; CP2_0, CP1_1 -&gt; CP2_1, CP1_2 -&gt; CP2_2, ... , CP1_84 -&gt; CP2_84 (WdgMMode_1)
                    : CP2_0 -&gt; CP0_1, CP2_1 -&gt; CP0_2, CP2_2 -&gt; CP0_3, ... , CP2_83 -&gt; CP0_84 (WdgMMode_1)

For this test the following External Graph is used : CP0_0 -&gt; CP1_0 -&gt; CP2_0 -&gt; CP0_1 -&gt; CP1_1 -&gt; CP2_1 -&gt; CP0_2 ...
...  CP2_83 -&gt; CP0_84 -&gt; CP1_84 -&gt; CP2_84


Test Execution: 
  01   : Initialize WdgM
  02   : Set a mode that contains at least one external graph
  03   : Check that set mode was correctly performed
  04   : Call main functions on both cores
  05 VP: Check that mode switch was correctly performed
  06 VP: Check that all checkpoints in the external graph are executed in the correct order
  07   : Call main functions on both cores
  08 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_0
  09 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_1
  10 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_2
  11 VP: Check that the global status is WDGM_GLOBAL_STATUS_OK
  12   : Switch to the master core
  13 VP: Check that E_NOT_OK is returned for WdgM_CheckpointReached() called for WdgMSupervisedEntity_2 with an initial checkpoint of an external graph
  14   : Call main functions on both cores
  15 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_0
  16 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_1
  17 VP: Check that the local status is WDGM_LOCAL_STATUS_EXPIRED for WdgMSupervisedEntity_2
  18 VP: Check that the global status is WDGM_GLOBAL_STATUS_EXPIRED

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ExtLogSupLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1924</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_InternalLogicalLimit_OK_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_IntLogSupLimit_multicore/source/application/WdgM_ConTest_16_IntLogSupLimit_multicore.c.m4</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks for a graph with a greater number of internal transitions (608 internal transitions)
  configured that if all checkpoints are coming in the correct order the WdgM will compute
  the graph correctly.
  The test method is "Stress tests".

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4, ... , CP0_101 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_1, CP1_2, CP1_3, CP1_4, ... , CP1_255 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_1, CP2_2, CP2_3, CP2_4, ... , CP2_255 (mapped on core 0)

Configured Modes:
  WdgMMode_0        -&gt; not used
  WdgMMode_1
  WdgMMode_3_DeInit -&gt; not used
  
  In mode WdgMMode_1 there are 608 internal Graphs :

    Internal transitions  : CP0_1 -&gt; CP0_2, CP0_2 -&gt; CP0_3, CP0_3 -&gt; CP0_4, ... , CP0_100 -&gt; CP0_101 (WdgMMode_1)
                          : CP1_1 -&gt; CP1_2, CP1_2 -&gt; CP1_3, CP1_3 -&gt; CP1_4, ... , CP1_254 -&gt; CP1_255 (WdgMMode_1)
                          : CP2_1 -&gt; CP2_2, CP2_2 -&gt; CP2_3, CP2_3 -&gt; CP2_4, ... , CP2_254 -&gt; CP2_255 (WdgMMode_1)


Test Execution: 
  01   : Initialize WdgM
  02   : Set a mode that contains at least one internal graph
  03 VP: Check that set mode was correctly performed
  04   : Call main functions on both cores
  05 VP: Check that mode switch was correctly performed
  06 VP: Check that all checkpoints in the internal graph are executed in the correct order
  07   : Call main functions on both cores
  08 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_0
  09 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_1
  10 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_2
  11 VP: Check that the global status is WDGM_GLOBAL_STATUS_OK

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.InternalSupervision1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1925</internalId></specobject>
    <specobject>
      <id>TS_WDGM_InternalLogicalLimit_NOK_missedCP_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_IntLogSupLimit_multicore/source/application/WdgM_ConTest_16_IntLogSupLimit_multicore.c.m4</sourcefile>
      <sourceline>225</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
  This test checks for a graph with a greater number of internal transitions (606 internal transitions)
  configured that if checkpoints are not coming in the correct order the WdgM will detect the error.
  The test method is "Stress tests".

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4, ... , CP0_101 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_1, CP1_2, CP1_3, CP1_4, ... , CP1_255 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_1, CP2_2, CP2_3, CP2_4, ... , CP2_255 (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_3_DeInit
  
  In mode WdgMMode_1 there are 608 Internal Graphs :

    Internal transitions  : CP0_1 -&gt; CP0_2, CP0_2 -&gt; CP0_3, CP0_3 -&gt; CP0_4, ... , CP0_100 -&gt; CP0_101 (WdgMMode_1)
                          : CP1_1 -&gt; CP1_2, CP1_2 -&gt; CP1_3, CP1_3 -&gt; CP1_4, ... , CP1_254 -&gt; CP1_255 (WdgMMode_1)
                          : CP2_1 -&gt; CP2_2, CP2_2 -&gt; CP2_3, CP2_3 -&gt; CP2_4, ... , CP2_254 -&gt; CP2_255 (WdgMMode_1)


Test Execution: 
  01   : Initialize WdgM
  02   : Set a mode that contains at least one internal graph
  03   : Check that set mode was correctly performed
  04   : Call main functions on both cores
  05 VP: Check that mode switch was correctly performed
  06 VP: Check that all checkpoints in the internal graph are executed in the correct order
  07   : Call main functions on both cores
  08 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_0
  09 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_1
  10 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_2
  11 VP: Check that the global status is WDGM_GLOBAL_STATUS_OK
  12   : Switch to the master core
  13 VP: Check that E_NOT_OK is returned for WdgM_CheckpointReached() called for WdgMSupervisedEntity_2 with an initial checkpoint of an internal graph
  14   : Call main functions on both cores
  15 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_0
  16 VP: Check that the local status is WDGM_LOCAL_STATUS_OK for WdgMSupervisedEntity_1
  17 VP: Check that the local status is WDGM_LOCAL_STATUS_EXPIRED for WdgMSupervisedEntity_2
  18 VP: Check that the global status is WDGM_GLOBAL_STATUS_EXPIRED

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.InternalSupervision1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1926</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_SupervisedEntityLimit_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_SELimit/source/application/WdgM_ConTest_16_SupervisedEntityLimit.c.m4</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that if 255 AliveSupervisions allocated to the maximum number of 
  SupervisedEntities (255), one AliveSupervisions per SupervisedEntity,mapped on 
  one core are correctly computed by the WdgM and consequently Global Supervision 
  Status is updated correctly.
  The test method is "Stress tests".

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0 ... WdgMSupervisedEntity_254: Checkpoints: CP0_0, CP1_0 ... CP254_0 (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2       -&gt; not used
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 255 AliveSupervisions from 255 SupervisedEntity(s)


Test Execution: 
  01: Initialize WdgM
  02: Set a mode where at least one Alive supervision is configured
  03: VP: Check that set mode was correctly performed
  04: Call main function
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Call WdgM_CheckpointReached() for all Checkpoints of all SupervisedEntities
  09: VP: Check that E_OK is returned
  14: Call main function
  15: Get the local status
  16 VP: Check that E_OK is returned
  17 VP: Check that the local status is WDGM_LOCAL_STATUS_OK
  18: Get the global status
  19 VP: Check that E_OK is returned
  20 VP: Check that the global status is WDGM_GLOBAL_STATUS_OK

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.NumberOfSEs</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1927</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SupervisedEntityLimit_NOK_missedCP</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_SELimit/source/application/WdgM_ConTest_16_SupervisedEntityLimit.c.m4</sourcefile>
      <sourceline>204</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that if one Checkpoint (AliveSupervision) of a SupervisedEntity from the
  maximum (255) number of SupervisedEntities is missed, the AliveSupervision function of WdgM is
  signaling a failure and consequently the Global Supervision Status is updated correctly.
  The test method is "Stress tests".

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0 ... WdgMSupervisedEntity_254: Checkpoints: CP0_0, CP1_0 ... CP254_0 (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2       -&gt; not used
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 255 AliveSupervisions from 255 SupervisedEntity(s)


Test Execution: 
  01: Initialize WdgM
  02: Set a mode where at least one Alive supervision is configured
  03 VP: Check that set mode was correctly performed
  04: Call main function
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Call WdgM_CheckpointReached() for all CheckPoints besides one (only 254 out of 255) of all SupervisedEntities
  09 VP: Check that E_OK is returned
  10: Call main function
  11: Get the local status
  12 VP: Check that E_OK is returned
  13 VP: Check that local status is WDGM_LOCAL_STATUS_OK for all but one SupervisedEntities,
         for SupervisedEntity_254 the status should be WDGM_LOCAL_STATUS_FAILED.
  14: Get the global status
  15 VP: Check that E_OK is returned
  16 VP: Check that global status is WDGM_GLOBAL_STATUS_FAILED

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.NumberOfSEs</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1928</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SupervisedEntityLimit_ExpiredSupervisionCycleTol</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_SELimit/source/application/WdgM_ConTest_16_SupervisedEntityLimit.c.m4</sourcefile>
      <sourceline>330</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that WgdM resets when a supervised entity expires and the
  maximum Expired Supervision Tolerance is configured.

Test Object: None.
Test Precondition: 

The following configuration is used for this test:

Configured SEs:
  WdgMSupervisedEntity_0
  Checkpoints: CP0_0

Configured Modes:
  WdgMMode_0
  WdgMMode_1       -&gt; not used
  WdgMMode_2       -&gt; not used
  WdgMMode_3_DeInit-&gt; not used
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_0 there is only one AliveSupervision from one SupervisedEntity. WdgMExpiredSupervisionCycleTol is
  set to 65535.


Test Execution: 
  01: Initialize WdgM
  02: Set a mode where WdgMExpiredSupervisionCycleTol is set to the maximum value
  03: Check that set mode was correctly performed
  04: Get the active mode
  05: Check that E_OK is returned
  06: Check that mode switch was correctly performed
  07: Check that the global status is WDGM_GLOBAL_STATUS_OK
  08: Call main function
  09: Check that the global status is WDGM_LOCAL_STATUS_FAILED
  10: Call main function
  11: Check that the global status is WDGM_GLOBAL_STATUS_EXPIRED
  12: Call main function for 65535 times to reach WdgMExpiredSupervisionCycleTol.
  13: Check that global status is WDGM_GLOBAL_STATUS_STOPPED

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00220</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1929</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_SupervisedEntityLimit_OK_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_SELimit_multicore/source/application/WdgM_ConTest_16_SupervisedEntityLimit_multicore.c.m4</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that if 255 AliveSupervisions allocated to the maximum number of SupervisedEntities (255),
  one AliveSupervision per SupervisedEntity, mapped on 3 different cores are correctly computed by the WdgM 
  and consequently Global Supervision Status is updated correctly.
  The test method is "Stress tests".

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0   ... WdgMSupervisedEntity_99  : Checkpoints: CP0_0,   CP1_0   ... CP99_0  (mapped on core 0)
  WdgMSupervisedEntity_100 ... WdgMSupervisedEntity_199 : Checkpoints: CP100_0, CP101_0 ... CP199_0 (mapped on core 1)
  WdgMSupervisedEntity_200 ... WdgMSupervisedEntity_254 : Checkpoints: CP200_0, CP201_0 ... CP254_0 (mapped on core 2)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2       -&gt; not used
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 255 AliveSupervisions allocated to 255 SupervisedEntity(s).


Test Execution: 
  01: Initialize WdgM
  02: Set a mode where at least one Alive supervision is configured
  03: VP: Check that set mode was correctly performed
  04: Call main functions on all cores
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Switch to the master core
  09: Call WdgM_CheckpointReached() for all Checkpoints of all SupervisedEntities of master core
  10: VP: Check that E_OK is returned
  11: Switch to the satellite core 1
  12: Call WdgM_CheckpointReached() for all CheckPoints of all SupervisedEntities of satellite core 1
  13 VP: Check that E_OK is returned
  14: Switch to the satellite core 2
  15: Call WdgM_CheckpointReached() for all Checkpoints of all SupervisedEntities of satellite core 2
  16 VP: Check that E_OK is returned
  17: Call main functions on all cores
  18: Get the local status of all cores.
  19 VP: Check that E_OK is returned
  20 VP: Check that the local status is WDGM_LOCAL_STATUS_OK
  21: Get the global status
  22 VP: Check that E_OK is returned
  23 VP: Check that the global status is WDGM_GLOBAL_STATUS_OK

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.NumberOfSEs</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1930</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SupervisedEntityLimit_NOK_missedCP_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_SELimit_multicore/source/application/WdgM_ConTest_16_SupervisedEntityLimit_multicore.c.m4</sourcefile>
      <sourceline>255</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that if one Checkpoint (AliveSupervision) of a SupervisedEntity from the
  maximum (255) number of SupervisedEntities is missed, the AliveSupervision function of WdgM is
  signaling a failure and consequently the Global Supervision Status is updated correctly.
  The test method is "Stress tests".

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0   ... WdgMSupervisedEntity_99  : Checkpoints: CP0_0,   CP1_0   ... CP99_0  (mapped on core 0)
  WdgMSupervisedEntity_100 ... WdgMSupervisedEntity_199 : Checkpoints: CP100_0, CP101_0 ... CP199_0 (mapped on core 1)
  WdgMSupervisedEntity_200 ... WdgMSupervisedEntity_254 : Checkpoints: CP200_0, CP201_0 ... CP254_0 (mapped on core 2)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2       -&gt; not used
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 255 AliveSupervisions from 255 SupervisedEntity(s).


Test Execution: 
  01: Initialize WdgM
  02: Set a mode where at least one Alive supervision is configured
  03 VP: Check that set mode was correctly performed
  04: Call main functions on all cores
  05: Get the active mode
  06 VP: Check that E_OK is returned
  07 VP: Check that mode switch was correctly performed
  08: Switch to the master core
  09: Call WdgM_CheckpointReached() for all CheckPoints of all SupervisedEntities of master core
  10 VP: Check that E_OK is returned
  11: Switch to satellite core 1
  12: Call WdgM_CheckpointReached() for all CheckPoint of all SupervisedEntities of satellite core 1
  13 VP: Check that E_OK is returned
  14: Switch to satellite core 2
  15: Call WdgM_CheckpointReached() for all CheckPoint besides one, of all SupervisedEntities of satellite core 2
  16 VP: Check that E_OK is returned
  17: Call main functions on all cores
  18: Get the local status
  19 VP: Check that E_OK is returned
  20 VP: Check that local status is WDGM_LOCAL_STATUS_OK for all but one SupervisedEntities, 
         for SupervisedEntity_254 the status should be WDGM_LOCAL_STATUS_FAILED.
  21: Get the global status
  22 VP: Check that E_OK is returned
  23 VP: Check that global status is WDGM_GLOBAL_STATUS_FAILED

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.NumberOfSEs</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1931</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SupervisedEntityLimit_ExpiredSupervisionCycleTol_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Conformance/IN/WdgM_ConTest_16_SELimit_multicore/source/application/WdgM_ConTest_16_SupervisedEntityLimit_multicore.c.m4</sourcefile>
      <sourceline>417</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that WgdM resets when a supervised entity expires and the
  maximum Expired Supervision Tolerance is configured.

Test Object: None.
Test Precondition: 

The following configuration is used for this test:

Configured SEs:
  WdgMSupervisedEntity_0
  Checkpoints: CP0_0

Configured Modes:
  WdgMMode_0
  WdgMMode_1       -&gt; not used
  WdgMMode_2       -&gt; not used
  WdgMMode_3_DeInit-&gt; not used
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_0 there is only one AliveSupervision from one SupervisedEntity. WdgMExpiredSupervisionCycleTol is
  set to 65535.


Test Execution: 
  01: Initialize WdgM
  02: Set a mode where WdgMExpiredSupervisionCycleTol is set to the maximum value
  03: Check that set mode was correctly performed
  04: Get the active mode
  05: Check that E_OK is returned
  06: Check that mode switch was correctly performed
  07: Check that the global status is WDGM_GLOBAL_STATUS_OK
  08: Call main functions on all cores
  09: Check that the global status is WDGM_LOCAL_STATUS_FAILED
  10: Call main functions on all cores
  11: Check that the global status is WDGM_GLOBAL_STATUS_EXPIRED
  12: Call main function for 65535 times to reach WdgMExpiredSupervisionCycleTol.
  13: Check that global status is WDGM_GLOBAL_STATUS_STOPPED

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00220</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1932</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_GENTEST_01_NegativeTestsPart1</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Generic/IN/WdgM_GenTest_01_NegativeTestsPart1/source/application/test_config.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

      This test shall check that the generator reports and error message
      for the violation of all specified xdm checks.

  
Test Object: None.
Test Precondition: 

The following invalid configuration
exists for the sub-tests:

TS_WDGM_GENTEST_01_McuReset:
  * Parameter WdgMImmediateReset set to TRUE,
    but McuPerformResetApi of Mcu Driver is set to FALSE.

TS_WDGM_GENTEST_02_UniqueSEIDs:
  * At least two Supervision Entities have the same IDs

TS_WDGM_GENTEST_03:
  * WdgMSupervisionDemDetErrId is configured to DET and the corresponding
    DET error value is less than 30

TS_WDGM_GENTEST_04:
  * WdgMSetModeDemDetErrId is configured to DET and the corresponding
    DET error value is less than 30

TS_WDGM_GENTEST_05:
  * WdgMImproperCallerDemDetErrId is configured to DET and the corresponding
    DET error value is less than 30

TS_WDGM_GENTEST_06:
  * One mode configures a WdgMTrigger with WdgMWatchdogMode set to WDGIF_OFF_MODE
  * The parameter WdgMOffModeEnabled is set to false

TS_WDGM_GENTEST_07:
  * At least two different Watchdog modes have the same id value configured.

TS_WDGM_GENTEST_08:
  * At least two Supervision Entities have the same name for a CheckpointID configured

TS_WDGM_GENTEST_09:
  * One Supervised Entity contains an Internat Transition connecting Checkpoints that
    do not both belong to the same Supervised Entity

TS_WDGM_GENTEST_10:
  * There is a Checkpoint that belongs to an External Graph and to an Internal Graph

TS_WDGM_GENTEST_11:
  * In the same mode a Checkpoint belongs to more than one External Graph.

TS_WDGM_GENTEST_12:
  * There is a source checkpoint of an External Transition that references a final checkpoint
    in an External Logical Supervision graph .

  
Test Execution: 

For all sub-tests, execute the following TS5 environment steps:

    01: Call the WdgM MCG with a valid configuration.
    02: VP
        The MCG must not issue an error.
    03: Call the WdgM MCG with the merged invalid configuration
        of the corresponding sub-test
For test TS_WDGM_GENTEST_01_McuReset:
    04: VP (WdgM.SWS_WdgM_00133.2)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_01.txt
       The error message is something like:
         The MCU Driver module must be
         configured with parameter McuPerformResetApi set to TRUE in order
         to set McuPerformResetApi to TRUE.
For test TS_WDGM_GENTEST_02_UniqueSEIDs:
    05: VP (WdgM.SWS_WdgM_CONSTR_6502.1, WdgM.ASR40.SWS_WdgM_00307.1)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_02.txt
       The error message is something like:
         IDs must be unique. This value is used more than once.
For test TS_WDGM_GENTEST_03:
    06: VP (WdgM.EB.ReportToDem.Supervision.2)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_03.txt
       The error message is something like:
         Value out of range: is "10" but must be "&amp;gt;= 30" and "&amp;lt;= 255"
For test TS_WDGM_GENTEST_04:
    07: VP (WdgM.EB.ReportToDem.SetMode.2)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_04.txt
       The error message is something like:
         Value out of range: is "10" but must be "&amp;gt;= 30" and "&amp;lt;= 255"
For test TS_WDGM_GENTEST_05:
    08: VP (WdgM.EB.ReportToDem.ImproperCaller.2)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_05.txt
       The error message is something like:
         Value out of range: is "10" but must be "&amp;gt;= 30" and "&amp;lt;= 255"
For test TS_WDGM_GENTEST_06:
    09: VP (WDGM.EB.WdgMOffModeEnabled)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_06.txt
       The error message is something like:
         The parameter WdgMOffModeEnabled is set to 'false', thus modes with
         WdgMWatchdogMode set to WDGM_OFF_MODE are not allowed.
For test TS_WDGM_GENTEST_07:
    10: VP (WDGM.EB.WdgMModeId)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_07.txt
       The error message is something like:
         IDs must be zero-based and consecutive. This value is not unique.
For test TS_WDGM_GENTEST_08:
    11: VP (WDGM.EB.WdgMCheckpointID)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_08.txt
       The error message is something like:
         Symbolic names for all CheckpoinIDs in the scope of WdgM must be unique
For test TS_WDGM_GENTEST_09:
    12: VP (WdgM.SWS_WdgM_CONSTR_6506)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_09.txt
       The error message is something like:
         The referenced checkpoint is not part of this Supervised Entity.
For test TS_WDGM_GENTEST_10:
    13: VP (WdgM.SWS_WdgM_CONSTR_6509, WdgM.ASR40.SWS_WdgM_00309)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_10.txt
       The error message is something like:
         This checkpoint belongs to more than one graph.
For test TS_WDGM_GENTEST_11:
    14: VP (WdgM.SWS_WdgM_CONSTR_6508, WdgM.ASR40.SWS_WdgM_00310)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_11.txt
       The error message is something like:
         This checkpoint belongs to more than one graph.
For test TS_WDGM_GENTEST_12:
    15: VP (WDGM.EB.ExternalSupervision1)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_12.txt
       The error message is something like:
         This referenced checkpoint is a final checkpoint and can never be
         a source checkpoint of a transition.
Note: Invalid configurations are created by a merge of the valid configuration
      with the provided invalid configuration.

  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00133.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6502</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00307.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.Supervision.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.ImproperCaller.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WdgMOffModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WdgMModeId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WdgMCheckpointID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00212.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6509</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00309</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6508</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00310</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ExternalSupervision1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1933</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_GENTEST_02_NegativeTestsPart2</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Generic/IN/WdgM_GenTest_02_NegativeTestsPart2/source/application/test_config.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

      This test shall check that the generator reports and error message
      for the violation of all specified xdm checks.

  
Test Object: None.
Test Precondition: 

The following invalid configuration
exists for the sub-tests:

TS_WDGM_GENTEST_13:
  * The External Transitions of an External Logical Supervision graph
    do not create a connected graph.

TS_WDGM_GENTEST_14:
  * An External Transition in an External Graph is duplicated

TS_WDGM_GENTEST_15:
  * There is a source checkpoint of an Internal Transition that references a final checkpoint
    in an Internal Logical Supervision graph .

TS_WDGM_GENTEST_16:
  * The Internal Transitions in a Supervised Entity
    do not create a connected graph.

TS_WDGM_GENTEST_17:
  * An Internal Transition in an Internal Graph of a Supervised Entity is duplicated

TS_WDGM_GENTEST_18:
  * The referenced start and stop checkpoints in a Deadline Supervision do not belong to the
    same Supervised Entity.

TS_WDGM_GENTEST_19:
  * There is more than one Deadline Supervision configured for an ordered set of two Checkpoints
    in same WdgM Mode.

TS_WDGM_GENTEST_20:
  * There are more than 256 Checkpoints configured for a Supervised Entity

TS_WDGM_GENTEST_21:
  * There are more then 256 Supervised Entities configured

TS_WDGM_GENTEST_23:
  * Parameter WdgMASRCompatibilityMode is set to AUTOSAR_43 and container WdgMCallerIds is enabled

  
Test Execution: 

For all sub-tests, execute the following TS5 environment steps:

    01: Call the WdgM MCG with a valid configuration.
    02: VP
        The MCG must not issue an error.
    03: Call the WdgM MCG with the merged invalid configuration
        of the corresponding sub-test
For test TS_WDGM_GENTEST_13:
    04: VP (WDGM.EB.ExternalSupervision2)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_13.txt
       The error message is something like:
         Either this checkpoint should be an initial checkpoint or this graph is not connected.
For test TS_WDGM_GENTEST_14:
    05: VP (WDGM.EB.ExternalSupervision3)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_14.txt
       The error message is something like:
         This transition is duplicated.
For test TS_WDGM_GENTEST_15:
    06: VP (WDGM.EB.InternalSupervision1)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_15.txt
       The error message is something like:
         This referenced checkpoint is a final checkpoint and can never be
         a source checkpoint of a transition.
For test TS_WDGM_GENTEST_16:
    07: VP (WDGM.EB.InternalSupervision2)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_16.txt
       The error message is something like:
         Either this checkpoint should be an initial checkpoint or this graph is not connected
For test TS_WDGM_GENTEST_17:
    08: VP (WDGM.EB.InternalSupervision3)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_17.txt
       The error message is something like:
         This transition is duplicated.
For test TS_WDGM_GENTEST_18:
    09: VP (WdgM.SWS_WdgM_CONSTR_6505, WdgM.ASR40.SWS_WdgM_00313)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_18.txt
       The error message is something like:
         The referenced start and stop checkpoints do not belong to the same Supervised Entity.
For test TS_WDGM_GENTEST_19:
    10: VP (WdgM.ASR40.SWS_WdgM_00314)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_19.txt
       The error message is something like:
         There is more than one Deadline Supervision configured for the referenced checkpoints.
For test TS_WDGM_GENTEST_20:
    11: VP (WDGM.EB.NumberOfCheckpoints)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_20.txt
       The error message is something like:
         At most 256 checkpoints are allowed per supervised entity.
For test TS_WDGM_GENTEST_21:
    12: VP (WDGM.EB.NumberOfSEs)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_21.txt
       The error message is something like:
         At most 256 supervised entities are allowed.
For test TS_WDGM_GENTEST_23:
    14: VP (WDGM.EB.ASR43.WDGM405)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_23.txt
       The error message is something like:
         The support for the configuration of CallerIDs is not possible in BSW compatibility mode
         AUTOSAR_43.
Note: Invalid configurations are created by a merge of the valid configuration
      with the provided invalid configuration.

  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ExternalSupervision2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ExternalSupervision3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.InternalSupervision1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.InternalSupervision2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.InternalSupervision3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6505</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.NumberOfCheckpoints</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.NumberOfSEs</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM405</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1934</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_GENTEST_03_NegativeTestsPart3</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Generic/IN/WdgM_GenTest_03_NegativeTestsPart3/source/application/test_config.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

      This test shall check that the generator reports and error message
      for the violation of all specified xdm checks.

  
Test Object: None.
Test Precondition: 

The following invalid configuration
exists for the sub-tests:

TS_WDGM_GENTEST_24:
  * Deadline Monitoring is configured, but container WdgMSupervisorCallouts and
  * WdgMGetElapsedTimeCallout are disabled

TS_WDGM_GENTEST_25:
  * Deadline Monitoring is configured, container WdgMSupervisorCallouts is enabled and
  * WdgMGetElapsedTimeCallout is enabled too but has an empty value.

TS_WDGM_GENTEST_26:
  * There are at least two WdgM Modes which have configured different schedule periods
  * via parameter WdgMSupervisionCycle.

TS_WDGM_GENTEST_27:
  * Deadline Monitoring is configured and WdgMDeadlineMin is equal to -1.

TS_WDGM_GENTEST_28:
  * Deadline Monitoring is configured and WdgMDeadlineMin is lower than WdgMTimeGranularity.

TS_WDGM_GENTEST_29:
  * Deadline Monitoring is configured and WdgMDeadlineMin is not a multiple of WdgMTimeGranularity.

TS_WDGM_GENTEST_30:
  * Deadline Monitoring is configured and WdgMDeadlineMin is greater than WdgMDeadlineMax.

TS_WDGM_GENTEST_31:
  * Deadline Monitoring is configured and WdgMDeadlineMax is lower than WdgMTimeGranularity.

TS_WDGM_GENTEST_32:
  * Deadline Monitoring is configured and WdgMDeadlineMax is not a multiple of WdgMTimeGranularity.

TS_WDGM_GENTEST_33:
  * Deadline Monitoring is configured and WdgMDeadlineMax/WdgMTimeGranularity is equal to 2^32.

TS_WDGM_GENTEST_34:
  * MainFunction Monitoring is activated and WdgMSupervisionCycle/WdgMTimeGranularity is equal to
  * 2^31.

  
Test Execution: 

For all sub-tests, execute the following TS5 environment steps:

    01: Call the WdgM MCG with a valid configuration.
    02: VP
        The MCG must not issue an error.
    03: Call the WdgM MCG with the merged invalid configuration
        of the corresponding sub-test
For test TS_WDGM_GENTEST_24:
    04: VP (WDGM.EB.TIMEPM.WDGM020119)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_24.txt
       The error message is something like:
         "The configuration of Deadline Supervision requires the configuration of the WdgMGetElapsedTimeCallout API."
For test TS_WDGM_GENTEST_25:
    05: VP (WDGM.EB.TIMEPM.WDGM020119)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_25.txt
       The error message is something like:
         "API name must be a valid C identifier."
For test TS_WDGM_GENTEST_26:
    06: VP (WDGM.EB.TIMEPM.WDGM020120)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_26.txt
       The error message is something like:
         "All WdgM Modes must have the same schedule periods of the main function. This value
          differs from the schedule periods of the previously configured WdgM Mode."
For test TS_WDGM_GENTEST_27:
    07: VP (WDGM.EB.TIMEPM.WDGM020121)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_27.txt
       The error message is something like:
         "The deadline must be a positive value."
For test TS_WDGM_GENTEST_28:
    08: VP (WDGM.EB.TIMEPM.WDGM020121)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_28.txt
       The error message is something like:
         "The configured value must be greater than or equal to the time granularity provided
          via parameter WdgMTimeGranularity."
For test TS_WDGM_GENTEST_29:
    09: VP (WDGM.EB.TIMEPM.WDGM020121)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_29.txt
       The error message is something like:
         "The configured value must be a multiple of the time granularity provided via parameter
          WdgMTimeGranularity."
For test TS_WDGM_GENTEST_30:
    10: VP (WDGM.EB.TIMEPM.WDGM020121)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_30.txt
       The error message is something like:
         "The WdgMDeadlineMax must be greater or equal WdgMDeadlineMin."
For test TS_WDGM_GENTEST_31:
    11: VP (WDGM.EB.TIMEPM.WDGM020121)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_31.txt
       The error message is something like:
         "The configured value must be greater than or equal to the time granularity provided via
          parameter WdgMTimeGranularity."
For test TS_WDGM_GENTEST_32:
    12: VP (WDGM.EB.TIMEPM.WDGM020121)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_32.txt
       The error message is something like:
         "The configured value must be a multiple of the time granularity provided via parameter
          WdgMTimeGranularity."
For test TS_WDGM_GENTEST_33:
    13: VP (WDGM.EB.TIMEPM.WDGM020121)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_33.txt
       The error message is something like:
         "The configured value divided by the WdgMTimeGranularity parameter exceeds the maximum
          value which can be represented by 32 bit which is due to an implementation constraint."
For test TS_WDGM_GENTEST_34:
    14: VP (WDGM.EB.TIMEPM.WDGM020122)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_34.txt
       The error message is something like:
         "The configured value is too fine-grained with respect to the configured schedule periods
          of the main function. Please use a more coarse-grained value."

Note: Invalid configurations are created by a merge of the valid configuration
      with the provided invalid configuration.

  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1935</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_GENTEST_04_NegativeTestsPart4</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Generic/IN/WdgM_GenTest_04_NegativeTestsPart4/source/application/test_config.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

      This test shall check that the generator reports and error message
      for the violation of all specified xdm checks.

  
Test Object: None.
Test Precondition: 

The following invalid configuration
exists for the sub-tests:

TS_WDGM_GENTEST_35:
  * There is a Logical Supervision configured for which the WdgMErrorRecoveryEnabled is not
  * consistently set to either enabled or disabled for all Supervised Entities belonging to the
  * configured supervision graph.
TS_WDGM_GENTEST_36:
  * MainFunction Monitoring is enabled and the WdgMMainFunctionPeriodTolerance is lower than
  * WdgMTimeGranularity.
TS_WDGM_GENTEST_37:
  * MainFunction Monitoring is enabled and the WdgMMainFunctionPeriodTolerance is not a multiple
  * of WdgMTimeGranularity.
TS_WDGM_GENTEST_38:
  * MainFunction Monitoring is enabled and WdgMMainFunctionPeriodTolerance/WdgMTimeGranularity
  * is equal to 2^15.
TS_WDGM_GENTEST_39:
  * MainFunction Monitoring is enabled and WdgMMainFunctionPeriodTolerance is equal to
  * WdgMSupervisionCycle/2.
TS_WDGM_GENTEST_40:
  * WdgMSupervisorCallouts is enabled, WdgMGetExpectedInitStateCallout is enabled and not empty
  * but WdgMGetExpectedWdgMModeCallout is disabled.
TS_WDGM_GENTEST_41:
  * WdgMSupervisorCallouts is enabled, WdgMGetExpectedWdgMModeCallout is enabled and not empty
  * but WdgMGetExpectedInitStateCallout is disabled.
TS_WDGM_GENTEST_42:
  * Deadline Supervision is enabled for some Mode where WdgMDeadlineMax divided by
    the main function cycle time (WdgMSupervisionCycle) exceeds the maximum allowed value by 1
TS_WDGM_GENTEST_43:
  * There is more than one Deadline Supervision configured for an order set of two Checkpoints
    among different WdgM Modes
TS_WDGM_GENTEST_44:
  * WdgMMfTimingViolationDemDetErrId is configured to DET and the corresponding
    DET error value is less than 30
TS_WDGM_GENTEST_45:
  * WdgMDataCorruptionDemDetErrId is configured to DET and the corresponding
    DET error value is less than 30

  
Test Execution: 

For all sub-tests, execute the following TS5 environment steps:

    01: Call the WdgM MCG with a valid configuration.
    02: VP
        The MCG must not issue an error.
    03: Call the WdgM MCG with the merged invalid configuration
        of the corresponding sub-test
For test TS_WDGM_GENTEST_35:
    04: VP (WDGM.EB.TIMEPM.WDGM020127)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_35.txt
       The error message is something like:
         "The parameter WdgMErrorRecoveryEnabled is not consistently set to the same value for the
          Supervised Entities of this Supervision Graph."
For test TS_WDGM_GENTEST_36:
    05: VP (WDGM.EB.TIMEPM.WDGM020124)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_36.txt
       The error message is something like:
         "The configured value must be greater than or equal to the configured time granularity
          of parameter WdgMTimeGranularity."
For test TS_WDGM_GENTEST_37:
    06: VP (WDGM.EB.TIMEPM.WDGM020124)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_37.txt
       The error message is something like:
         "The configured value must be a multiple of the time granularity provided via parameter
          WdgMTimeGranularity."
For test TS_WDGM_GENTEST_38:
    07: VP (WDGM.EB.TIMEPM.WDGM020124)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_38.txt
       The error message is something like:
         "The configured value is too large with respect to the configured granularity of
          parameter WdgMTimeGranularity."
For test TS_WDGM_GENTEST_39:
    08: VP (WDGM.EB.TIMEPM.WDGM020124)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_39.txt
       The error message is something like:
         "The configured value must be smaller than half the MainFunction period."
For test TS_WDGM_GENTEST_40:
    09: VP (WDGM.EB.TIMEPM.WDGM020126)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_40.txt
       The error message is something like:
         "If this parameter is enabled, then parameter WdgMGetExpectedWdgMModeCallout
          must be enabled too."
For test TS_WDGM_GENTEST_41:
    10: VP (WDGM.EB.TIMEPM.WDGM020126)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_41.txt
       The error message is something like:
         "If this parameter is enabled, then parameter WdgMGetExpectedInitStateCallout
          must be enabled too."
For test TS_WDGM_GENTEST_42:
    11: VP (WDGM.EB.TIMEPM.WDGM020128)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_42.txt
       The error message is something like:
         "The configured value corresponds to a number of main function cycles
         until detection of a deadline violation which exceeds the maximum value
         which can be represented by 16 bit which is due to an implementation constraint."
For test TS_WDGM_GENTEST_43:
    12: VP (WDGM.EB.TIMEPM.WDGM314)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_43.txt
       The error message is something like:
         "There is more than one Deadline Supervision configured for the referenced checkpoints."
For test TS_WDGM_GENTEST_44:
    13: VP (WdgM.EB.ReportToDem.MfTimingViolation.2)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_44.txt
       The error message is something like:
         Value out of range: is "10" but must be "&amp;gt;= 30" and "&amp;lt;= 255"
For test TS_WDGM_GENTEST_45:
    14: VP (WdgM.EB.ReportToDem.DataCorruption.2)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_45.txt
       The error message is something like:
         Value out of range: is "10" but must be "&amp;gt;= 30" and "&amp;lt;= 255"

Note: Invalid configurations are created by a merge of the valid configuration
      with the provided invalid configuration.

  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>626</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>624</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfTimingViolation.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1936</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_GENTEST_05_NegativeTestsPart5</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Generic/IN/WdgM_GenTest_05_NegativeTestsPart5/source/application/test_config.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

      This test shall check that the generator reports an error message
      for the violation of all specified xdm checks.

  
Test Object: None.
Test Precondition: 

The following invalid configuration
exists for the sub-tests:

TS_WDGM_GENTEST_46:
  * The External Transitions of an External Logical Supervision container instance
    create two independent graphs (based on the configuration of several
    Initial and Final Checkpoints)

TS_WDGM_GENTEST_47:
  * At least two different Checkpoint IDs have the same id value configured.

TS_WDGM_GENTEST_48:
  * There is a gap between two Checkpoint IDs

TS_WDGM_GENTEST_49:
  * The first Checkpoint does not start with 0

  
Test Execution: 

For all sub-tests, execute the following TS5 environment steps:

    01: Call the WdgM MCG with a valid configuration.
    02: VP
        The MCG must not issue an error.
    03: Call the WdgM MCG with the merged invalid configuration
        of the corresponding sub-test

For test TS_WDGM_GENTEST_46:
    04: VP (WDGM.EB.ExternalSupervision2)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_46.txt
       The error message is something like:
         The External Logical Supervision configuration with name
         'WdgMExternalLogicalSupervision_0' in WdgM mode 'WdgMMode_0'
         contains at least two independent graphs starting with
         Initial Checkpoints 'CP0_2' and 'CP0_1', but only
         one connected graph is allowed per instance of the
         WdgMExternalLogicalSupervision container.
For test TS_WDGM_GENTEST_47:
    05: VP (WDGM.EB.WdgMCheckpointIDValues)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_47.txt
       The error message is something like:
         IDs must be zero-based and consecutive. The value one less than this value is missing.
For test TS_WDGM_GENTEST_48:
    06: VP (WDGM.EB.WdgMCheckpointIDValues)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_48.txt
       The error message is something like:
         IDs must be zero-based and consecutive. The value one less than this value is missing.
For test TS_WDGM_GENTEST_49:
    07: VP (WDGM.EB.WdgMCheckpointIDValues)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_49.txt
       The error message is something like:
         IDs must be zero-based and consecutive. The value one less than this value is missing.

Note: Invalid configurations are created by a merge of the valid configuration
      with the provided invalid configuration.

  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ExternalSupervision2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WdgMCheckpointIDValues</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1937</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_GENTEST_05_NegativeTestsPart6</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Generic/IN/WdgM_GenTest_05_NegativeTestsPart6/source/application/EbTest_Config.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

      This test shall check that the generator reports and error message
      for the violation of all specified xdm checks.

  
Test Object: None.
Test Precondition: 

The following invalid configuration
exists for the sub-tests:

TS_WDGM_GENTEST_50:
  * There are more then 254 external transitions per graph are configured

  
Test Execution: 

For all sub-tests, execute the following TS5 environment steps:

    01: Call the WdgM MCG with a valid configuration.
    02: VP
        The MCG must not issue an error.
    03: Call the WdgM MCG with the merged invalid configuration
        of the corresponding sub-test
For test TS_WDGM_GENTEST_50:
    04: VP (WDGM.EB.ExtLogSupLimit)
       The MCG reports the error stated in reference file TS_WDGM_GENTEST_50.txt
       The error message is something like:
         At most 254 external transitions per graph are allowed.
Note: Invalid configurations are created by a merge of the valid configuration
      with the provided invalid configuration.

  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ExtLogSupLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1938</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_GEN_WdgMOsApplicationRef_TrustedOSApplication</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Generic/IN/WdgM_GenTest_05_TrustedOSApplication/source/application/EbTest_Config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check the following code generator error: "Only non-trusted OS-Applications can be restarted."
      when the configured WdgMOsApplicationRef points to a trusted OS-Application.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    VP: Check if an error is trown if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_CONSTR_6501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00311</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1939</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_SleepMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_01_SleepMode/source/application/WdgM_ImpTest_01_SleepMode.c</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that watchdog triggering is done based on global supervision status
and on configured watchdog modes.

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1
  WdgMSupervisedEntity_1: Checkpoints: CP1_1
  WdgMSupervisedEntity_2: Checkpoints: CP2_1

Note: Each Supervision Entity has exactly one Checkpoint configured (not more)
This is to test both functions WdgM_CheckpointReached() and
WdgM_UpdateAliveCounter() by replacement strategy.

Modes and configured WdgMTriggers:
                    ConfigName  TriggerCondition  TriggerMode  DeviceIndex
                       |          |                |               |
  WdgMMode_0:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  ...
  WdgMMode_7:      WdgMTrigger_0  100   WDGIF_SLOW_MODE            5

Initial Mode: WdgMMode_0
Sleep Mode: WdgMMode_7


Test Execution: 

  01: Init WdgM
  02: VP (WDGM.EB.WdgM_DeInit.1, WDGM.EB.WdgM_DeInit.2)
      Check that initial mode is configured
  03: DeInit WdgM -&gt; WDGM_GLOBAL_STATUS_DEACTIVATED
      (switch to sleep mode WdgMMode_7)
  04: VP (WDGM.EB.WdgM_DeInit.1, WDGM.EB.WdgM_DeInit.2)
      Mode switch is performed to WdgMMode_7
      That is: Trigger condition is set for:
        DeviceIndex: 5
        TimeoutValue: 100


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WdgM_DeInit.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WdgM_DeInit.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1940</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_SetMode_DetDem_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_02_ReportToDem/source/application/WdgM_ImpTest_02_ReportToDem.c.m4</sourcefile>
      <sourceline>207</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check if the EB specific feature for choosing between
Det/Dem reporting works, when the SetMode function
is called with an invalid caller id.

This test and all sub-sequent tests are
executed with the following configuration permutations:

   Parameter / Permutation      |    p0   |    p1   |    p2   |    p3   |    p4   |    p5   |
=============================================================================================
WdgMDevErrorDetect              | true    | true    | true    | true    | true    | true    |
WdgMSupervisionReportToDem      | DEM     | DET     | DISABLE | DEM     | DET     | DEM     |
WdgMSetModeReportToDem          | DEM     | DET     | DISABLE | DEM     | DET     | DEM     |
WdgMImproperCallerReportToDem   | DEM     | DET     | DISABLE | DEM     | DET     | DEM     |
WdgMDefensiveBehavior           | true    | true    | false   | true    | true    | true    |
WdgMSupervisorCalloutsEnable    | false   | false   | false   | true    | true    | true    |
WdgMDetCalloutEnable            | false   | false   | false   | false   | true    | false   |
WdgMImmediateReset              | true    | false   | true    | false   | true    | true    |
--------------------------- The following parameters are constant ---------------------------
WdgMVersionInfoApi              | true    | true    | true    | true    | true    | true    |
WdgMDemStoppedSupervisionReport | true    | true    | true    | true    | true    | true    |
WdgMOffModeEnabled              | true    | true    | true    | true    | true    | true    |
WdgMRteUsage                    | false   | false   | false   | false   | false   | false   |
WdgMCallerIds                   | true    | true    | true    | true    | true    | true    |
WdgMSleepMode                   | true    | true    | true    | true    | true    | true    |
WdgMSupervisionDemDetErrId      |  -      | 30      |  -      |  -      | 30      | 30      |
WdgMSetModeDemDetErrId          |  -      | 31      |  -      |  -      | 31      | 31      |
WdgMImproperCallerDemDetErrId   |  -      | 32      |  -      |  -      | 32      | 32      |


Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Call WdgM_SetMode with invalid caller id (valid mode)
  02: VP
      E_NOT_OK is returned for permutations: p0, p1
      E_OK is returned for permutations: p2
  03: VP
      Dem called with following parameters for permutations: p0,p3,p5
        EventId     = WDGM_E_IMPROPER_CALLER
        EventStatus = DEM_EVENT_STATUS_FAILED
      Det called with following parameters for permutations: p1
        ApiId   = 0x03U
        ErrorId = 32
      Det callout called with following parameters for permutations: p4
        ApiId   = 0x03U
        ErrorId = 32
      No Det or Dem called for permutations: p2


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.ImproperCaller.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1941</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SetMode_DetDem_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_02_ReportToDem/source/application/WdgM_ImpTest_02_ReportToDem.c.m4</sourcefile>
      <sourceline>357</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the EB specific feature for choosing between
Det/Dem reporting works, when the SetMode function
is called and an internal error occurs (WdgIf_SetMode returns E_NOT_OK).

Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Prepare WdgIf_SetMode stub to return E_NOT_OK
  02: Call WdgM_SetMode with valid arguments
  03: VP (WDGM.EB.TIMEPM.WDGM020400)
      E_OK is returned for all permutations (mode switch is stored for next
      invocation of WdgM_MainFunction).
  04: WdgM_MainFunction is called.
  05: VP (WdgM.EB.ReportToDem.SetMode.1, WDGM.EB.TIMEPM.WDGM020109_Conf,
          WDGM.EB.TIMEPM.WDGM020135_Conf, WDGM.EB.TIMEPM.WDGM020438,
          WDGM.EB.TIMEPM.WDGM020439, WDGM.EB.TIMEPM.WDGM020440)
      for permutation: p0,p3,p5
         Dem called with following parameters (WdgM.EB.ReportToDem.SetMode.1):
           EventId     = WDGM_E_SET_MODE
           EventStatus = DEM_EVENT_STATUS_FAILED
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020438,
         WDGM.EB.TIMEPM.WDGM020439):
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_SETMODE_REQUEST
      for permutation: p1
         Det called twice:
           First Det with following parameters(WdgM.EB.ReportToDem.SetMode.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 32
           Second Det with following parameters (WDGM.EB.TIMEPM.WDGM020438,
         WDGM.EB.TIMEPM.WDGM020439):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = WDGM_EB_E_SETMODE_REQUEST
         No Dem called
      for permutation: p2
         Det called with following parameters(WDGM.EB.TIMEPM.WDGM020438,
         WDGM.EB.TIMEPM.WDGM020439):
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_SETMODE_REQUEST
         No Dem called
      for permutation: p4
         WdgMDetCallout called twice:
           First WdgMDetCallout with following parameters (WdgM.EB.ReportToDem.SetMode.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 32
           Second WdgMDetCallout with following parameters (WDGM.EB.TIMEPM.WDGM020438,
           WDGM.EB.TIMEPM.WDGM020440):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = WDGM_EB_E_SETMODE_REQUEST
         No Dem called


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020135_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020438</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020439</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>709</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020440</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1942</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SetMode_DetDem_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_02_ReportToDem/source/application/WdgM_ImpTest_02_ReportToDem.c.m4</sourcefile>
      <sourceline>531</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check if the EB specific feature for choosing between
Det/Dem reporting works, when the WdgM initialization fails
(WdgIf_SetMode returns E_NOT_OK on init).


Test Object: None.
Test Precondition: WdgM not initialized
Test Execution: 

  01: Prepare WdgIf_SetMode stub to return E_NOT_OK.
  02: Call WdgM_Init and WdgM_MainFunction (WdgIf_SetMode gets called for initial mode).
  03: VP (WdgM.EB.ReportToDem.SetMode.1, WDGM.EB.TIMEPM.WDGM020109_Conf,
          WDGM.EB.TIMEPM.WDGM020135_Conf, WDGM.EB.TIMEPM.WDGM020438,
          WDGM.EB.TIMEPM.WDGM020439, WDGM.EB.TIMEPM.WDGM020440)
      for permutation: p0,p3,p5
         Dem called with following parameters (WdgM.EB.ReportToDem.SetMode.1):
           EventId     = WDGM_E_SET_MODE
           EventStatus = DEM_EVENT_STATUS_FAILED
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020441,
         WDGM.EB.TIMEPM.WDGM020442):
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_INIT_REQUEST
      for permutation: p1
         Det called twice:
           First Det with following parameters(WdgM.EB.ReportToDem.SetMode.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 32
           Second Det with following parameters (WDGM.EB.TIMEPM.WDGM020441,
         WDGM.EB.TIMEPM.WDGM020442):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = WDGM_EB_E_INIT_REQUEST
         No Dem called
      for permutation: p2
         Det called with following parameters(WDGM.EB.TIMEPM.WDGM020441,
         WDGM.EB.TIMEPM.WDGM020442):
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_INIT_REQUEST
         No Dem called
      for permutation: p4
         WdgMDetCallout called twice:
           First WdgMDetCallout with following parameters (WdgM.EB.ReportToDem.SetMode.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 32
           Second WdgMDetCallout with following parameters (WDGM.EB.TIMEPM.WDGM020441,
           WDGM.EB.TIMEPM.WDGM020443):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = WDGM_EB_E_INIT_REQUEST
         No Dem called
  04: VP (WdgM.ASR40.WDGM339_Conf, WdgM.SWS_WdgM_00133.1):
      for permutations p0, p2, p4, p5:
         Mcu_PerformReset() is called.
      for permutations p1, p3:
         Mcu_PerformReset() is not called.
  05: VP (WDGM.EB.TIMEPM.WDGM020450, WdgM.SWS_WdgM_00139):
      WdgM module is initialized with Global Supervision Status WDGM_GLOBAL_STATUS_STOPPED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020135_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020441</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020442</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020443</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020450</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00339</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00133.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1943</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SetMode_DetDem_04</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_02_ReportToDem/source/application/WdgM_ImpTest_02_ReportToDem.c.m4</sourcefile>
      <sourceline>729</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check if the EB specific feature for choosing between
Det/Dem reporting works, when the WdgM de-initialization fails
(WdgIf_SetMode returns E_NOT_OK on de-init).


Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Prepare WdgIf_SetMode stub to return E_NOT_OK
  02: Call WdgM_DeInit and WdgM_MainFunction (WdgIf_SetMode for sleep mode gets called).
  03: VP (WdgM.EB.ReportToDem.SetMode.1, WDGM.EB.TIMEPM.WDGM020109_Conf,
          WDGM.EB.TIMEPM.WDGM020135_Conf, WDGM.EB.TIMEPM.WDGM020438,
          WDGM.EB.TIMEPM.WDGM020439, WDGM.EB.TIMEPM.WDGM020440)
      for permutation: p0
         Dem called with following parameters (WdgM.EB.ReportToDem.SetMode.1):
           EventId     = WDGM_E_SET_MODE
           EventStatus = DEM_EVENT_STATUS_FAILED
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020438,
         WDGM.EB.TIMEPM.WDGM020439):
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_DEINIT_REQUEST
      for permutation: p1
         Det called twice:
           First Det with following parameters(WdgM.EB.ReportToDem.SetMode.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 32
           Second Det with following parameters (WDGM.EB.TIMEPM.WDGM020438,
         WDGM.EB.TIMEPM.WDGM020439):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = WDGM_EB_E_DEINIT_REQUEST
         No Dem called
      for permutation: p2
         Det called with following parameters(WDGM.EB.TIMEPM.WDGM020438,
         WDGM.EB.TIMEPM.WDGM020439):
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_DEINIT_REQUEST
         No Dem called
      for permutation: p3
         WdgMDemCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020109_Conf,
         WdgM.EB.ReportToDem.SetMode.1):
           EventId     = WDGM_E_SET_MODE
           EventStatus = DEM_EVENT_STATUS_FAILED
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020438,
         WDGM.EB.TIMEPM.WDGM020439):
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_DEINIT_REQUEST
      for permutation: p4
         WdgMDetCallout called twice:
           First WdgMDetCallout with following parameters (WdgM.EB.ReportToDem.SetMode.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 32
           Second WdgMDetCallout with following parameters (WDGM.EB.TIMEPM.WDGM020438,
           WDGM.EB.TIMEPM.WDGM020440):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = WDGM_EB_E_DEINIT_REQUEST
         No Dem called
      for permutation: p5
         WdgMDemCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020135_Conf,
         WdgM.EB.ReportToDem.SetMode.1):
           EventId     = WDGM_E_SET_MODE
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called  


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020135_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020444</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>714</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020445</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>715</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020446</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>716</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1944</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_00_FileStructure</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that header file structure is given according to
    'Figure 1: File include structure for the Watchdog Manager' of the underlying SWS
    with the deviations and enhancements specified by EB.


Test Object: None.
Test Precondition: 
  Folder 'reference' provides
    - includesOf_WdgM.c.txt (showing includes of WdgM.c)
    - includesOf_WdgM.h.txt (showing includes of WdgM.h)
  for comparison.

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Extract includes of WdgM.c
  02: VP (WDGM.EB.Design.IncludeFileStructure12,WDGM.EB.Dbg3)
      Includes of WdgM.c of step 01 ( includesOf_WdgM.c.txt ) are according to
      reference file includesOf_WdgM.c.txt
      (test done by comparison via reference file includesOf_WdgM.c.txt)
  03: Extract includes of WdgM.h
  04: VP (WDGM.EB.Design.IncludeFileStructure04)
      Includes of WdgM.h of step 03 are according to
      reference file includesOf_WdgM.h.txt
      (test done by comparison via reference file includesOf_WdgM.h.txt)
  05: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 09 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1650</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure04</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1642</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Dbg3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1945</internalId></specobject>
    <specobject>
      <id>TS_WDGM_01_FileStructure_EB</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that file structure of WdgM module contains
    EB specific extensions additionally to the files specified by AUTOSAR.


Test Object: None.
Test Precondition: 
  Folder 'reference' provides
    - WdgM_SourceFiles.txt and WdgM_HeaderFiles.txt is showing the following static files of WdgM.
      That is, for WDGM.EB.Design.FileStructure:
        WdgM.h, WdgM_BSW_Lcfg.h, WdgM_Int.h, WdgM_Version.h,
        WdgM.c.
      That is, for WDGM.EB.Dbg2,a additionally:
        WdgM_Trace_Stc.h
  for comparison.
  File WdgM_GeneratedHedearFiles.txt and WdgM_GeneratedSourceFiles.txt is showing the following
  generated files of WdgM.
      That is, for WDGM.EB.Design.FileStructure:
        WdgM_Types.h, WdgM_Trace.h, WdgM_Lcfg.h, WdgM_Cfg.h,
        WdgM_Callouts.h and WdgM_Rte_Lcfg.h
        WdgM_BSW_Lcfg.c, WdgM_Rte.c and WdgM_Rte_Lcfg.c.

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Grep all static files of installed WdgM plugin
  02: VP (WDGM.EB.Dbg2)
      File list of step 01 is according to
      reference file WdgM_SourceFiles.txt and WdgM_HeaderFiles.txt
      (test done by comparison via reference file WdgM_SourceFiles.txt and WdgM_HeaderFiles.txt)
  03: Grep all generated files of installed WdgM plugin
  04: VP (WDGM.EB.Dbg2)
      File list of step 01 is according to
      reference file WdgM_GeneratedSourceFiles.txt and WdgM_GeneratedHeaderFiles.txt
      (test done by comparison via reference file WdgM_GeneratedSourceFiles.txt and 
      WdgM_GeneratedHedearFiles.txt)
  05: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 09 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.FileStructure</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1657</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Dbg2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1946</internalId></specobject>
    <specobject>
      <id>TS_WDGM_02_FileIncludes_EB</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>170</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that the file includes of static and generated WdgM files is compliant
    to EB specific extensions.


Test Object: None.
Test Precondition: 
  Folder 'reference' provides
    - includesOf_WdgM_Rte.c.txt        (showing includes of WdgM_Rte.c)
    - includesOf_WdgM_Rte_Lcfg.c.txt   (showing includes of WdgM_Rte_Lcfg.c)
    - includesOf_WdgM_Rte_Lcfg.h.txt   (showing includes of WdgM_Rte_Lcfg.h)
    - includesOf_WdgM_BSW_Lcfg.c.txt   (showing includes of WdgM_BSW_Lcfg.c)
    - includesOf_WdgM.c.txt            (showing includes of WdgM.c)
    - includesOf_WdgM.h.txt            (showing includes of WdgM.h)
    - includesOf_WdgM_Lcfg.h.txt       (showing includes of WdgM_Lcfg.h)
    - includesOf_WdgM_BSW_Lcfg.h.txt   (showing includes of WdgM_BSW_Lcfg.h)
    - includesOf_WdgM_Cfg.h.txt        (showing includes of WdgM_Cfg.h)
    - includesOf_WdgM_Callouts.h.txt   (showing includes of WdgM_Callouts.h)
    - includesOf_WdgM_Int.h.txt        (showing includes of WdgM_Int.h)
    - includesOf_WdgM_Types.h.txt      (showing includes of WdgM_Types.h)
    - includesOf_WdgM_Trace_Stc.h.txt  (showing includes of WdgM_Trace_Stc.h)
    - includesOf_WdgM_Trace.h.txt      (showing includes of WdgM_Trace.h)
  for comparison.

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Extract includes of WdgM_Rte.c
  02: VP (WDGM.EB.Design.IncludeFileStructure15)
      Includes of previous step are according to
      reference file includesOf_WdgM_Rte.c.txt
  03: Extract includes of WdgM_Rte_Lcfg.c
  04: VP (WDGM.EB.Design.IncludeFileStructure16)
      Includes of previous step are according to
      reference file includesOf_WdgM_Rte_Lcfg.c.txt
  05: Extract includes of WdgM_Rte_Lcfg.h
  06: VP (WDGM.EB.Design.IncludeFileStructure11)
      Includes of previous step are according to
      reference file includesOf_WdgM_Rte_Lcfg.h.txt
  07: Extract includes of WdgM_BSW_Lcfg.c
  08: VP (WDGM.EB.Design.IncludeFileStructure17)
      Includes of previous step are according to
      reference file includesOf_WdgM_BSW_Lcfg.c
  09: Extract includes of WdgM.c
  10: VP (WDGM.EB.Design.IncludeFileStructure12)
      Includes of previous step are according to
      reference file includesOf_WdgM.c.txt
  11: Extract includes of WdgM.h
  12: VP (WDGM.EB.Design.IncludeFileStructure04)
      Includes of previous step are according to
      reference file includesOf_WdgM.h.txt
  13: Extract includes of WdgM_Lcfg.h
  14: VP (WDGM.EB.Design.IncludeFileStructure05)
      Includes of previous step are according to
      reference file includesOf_WdgM_Lcfg.h.txt
  15: Extract includes of WdgM_BSW_Lcfg.h
  16: VP (WDGM.EB.Design.IncludeFileStructure10)
      Includes of previous step are according to
      reference file includesOf_WdgM_BSW_Lcfg.h.txt
  17: Extract includes of WdgM_Cfg.h
  18: VP (WDGM.EB.Design.IncludeFileStructure01)
      Includes of previous step are according to
      reference file includesOf_WdgM_Cfg.h.txt
  19: Extract includes of WdgM_Callouts.h
  20: VP (WDGM.EB.Design.IncludeFileStructure09)
      Includes of previous step are according to
      reference file includesOf_WdgM_Callouts.h.txt
  21: Extract includes of WdgM_Int.h
  22: VP (WDGM.EB.Design.IncludeFileStructure06)
      Includes of previous step are according to
      reference file includesOf_WdgM_Int.h.txt
  23: Extract includes of WdgM_Types.h
  24: VP (WDGM.EB.Design.IncludeFileStructure08)
      Includes of previous step are according to
      reference file includesOf_WdgM_Types.h.txt
  25: Extract includes of WdgM_Trace_Stc.h
  26: VP (WDGM.EB.Design.IncludeFileStructure03)
      Includes of previous step are according to
      reference file includesOf_WdgM_Trace_Stc.h.txt
  27: Extract includes of WdgM_Trace.h
  28: VP (WDGM.EB.Design.IncludeFileStructure18)
      Includes of previous step are according to
      reference file includesOf_WdgM_Trace.h.txt
  29: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 31 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure15</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1653</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure16</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1654</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1649</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure17</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1655</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1650</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure04</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1642</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1643</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1648</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1639</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure09</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1647</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure06</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1644</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure08</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1646</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure03</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1641</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure18</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1656</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1947</internalId></specobject>
    <specobject>
      <id>TS_WDGM_03_FileIncludes_Dbg1</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>310</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that the generated file WdgM_Trace.h does not include anything
    if no Dbg module is available.


Test Object: None.
Test Precondition: 
  Folder 'reference' provides
    - checkDbg1WdgM_Trace.h.txt  (empty file)
  for comparison.

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Extract all inclusions from WdgM_Trace.h
  02: VP (WDGM.EB.Dbg1)
      Inclusion of previous step is according to
      reference file includesOf_WdgM_Trace.h.txt
  03: Extract the inverse of all empty macro definitions with prefix DBG_WDGM_
      from WdgM_Trace.h
  04: VP (WDGM.EB.Dbg2)
      Inclusion of previous step is according to
      reference file checkDbg1WdgM_Trace.h
  05: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 05 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1948</internalId></specobject>
    <specobject>
      <id>TS_WDGM_04_FileIncludes_Dbg2</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>364</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that the static file WdgM_Trace_Stc.h contains only empty
  macro definitions with prefix "DBG_WDGM_"


Test Object: None.
Test Precondition: 
  Folder 'reference' provides
    - checkDbg2WdgM_Trace_Stc.h
        contains only comments and following c-code:
          #if (!defined WDGM_TRACE_STC_H)
          #define WDGM_TRACE_STC_H
          #endif
        for comparison.

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Extract the inverse of all empty macro definitions with prefix DBG_WDGM_
      from WdgM_Trace_Stc.h
  02: VP (WDGM.EB.Dbg2)
      Inclusion of previous step is according to
      reference file checkDbg2WdgM_Trace_Stc.h
  03: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 15 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1949</internalId></specobject>
    <specobject>
      <id>TS_WDGM_05_FileIncludes_Dbg3</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>417</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that all WdgM source files that contain function definitions
  (i.e. WdgM.c, WdgM_Rte_Lcfg.c, WdgM_Rte.c )
  include the file WdgM_Trace_Stc.h


Test Object: None.
Test Precondition: 
  Folder 'reference' provides
    - checkDbg3WdgM.c.txt  (showing that WdgM_Trace_Stc.h is included)
    - checkDbg3WdgM_Rte.c.txt  (showing that WdgM_Trace_Stc.h is included)
    - checkDbg3WdgM_Rte_Lcfg.c.txt  (showing that WdgM_Trace_Stc.h is included)
  for comparison.

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Extract inclusion of WdgM_Trace_Stc.h from WdgM.c
  02: VP (WDGM.EB.Dbg3)
      Inclusion of previous step is according to
      reference file checkDbg3WdgM.c.txt
  03: Extract inclusion of WdgM_Trace_Stc.h from WdgM_Rte.c
  04: VP (WDGM.EB.Dbg3)
      Inclusion of previous step is according to
      reference file checkDbg3WdgM_Rte.c.txt
  05: Extract inclusion of WdgM_Trace_Stc.h from WdgM_Rte_Lcfg.c
  06: VP (WDGM.EB.Dbg3)
      Inclusion of previous step is according to
      reference file checkDbg3WdgM_Rte_Lcfg.c.txt
  09: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 15 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1950</internalId></specobject>
    <specobject>
      <id>TS_WDGM_06_FileStructure_TIME</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>478</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that file structure of WdgM module contains
    EB specific extensions for TIME.


Test Object: None.
Test Precondition: 
  All TimE specific callout functions are configured, that is:
    WdgM_Tst_GetExpectedInitState_Callout,
    WdgM_Tst_InitRedirection_Callout,
    WdgM_Tst_DeInitRedirection_Callout,
    WdgM_Tst_GetExpectedWdgMMode_Callout,
    WdgM_Tst_SetModeRedirection_Callout,
    WdgM_Tst_GetElapsedTime_Callout,
    WdgM_Tst_MainFunctionViolation_Callout,
    WdgM_Tst_IsPerformReset_Callout,
    WdgM_Tst_SupervisionExpired_Callout,
    WdgM_Tst_IndividualModeSwitch_Callout,
    WdgM_Tst_GlobalModeSwitch_Callout,
    WdgM_Tst_Det_Callout,
    WdgM_Tst_Dem_Callout
    WdgM_Tst_GetCoreId_Callout (only for P1 -&gt; WdgMGetCoreIdCallout is enabled)

  Folder 'reference' provides
    - checkTimEWDGM020200.txt (provides all expected function declarations for the
    callouts expected in WdgM_Callouts.h).

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Grep all function declarations from the generated file WdgM_Callouts.h
  02: VP (WDGM.EB.TIMEPM.WDGM020200)
      File list of step 01 is according to
      reference file checkTimEWDGM020200.txt
      (test done by comparison via reference file)
  03: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 03 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1951</internalId></specobject>
    <specobject>
      <id>TS_WDGM_07_VersionCheck1</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>543</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

    This test shall check the correct definition of the static interface
    version macros and the check macro.


Test Object: None.
Test Precondition: None.
Test Execution: 

  00: include WdgM_Cfg.h
  01: VP (WDGM.EB.TIMEPM.WDGM020202):
      check WDGM_EB_STATICIF_VERSION is defined
  02: VP (WDGM.EB.TIMEPM.WDGM020202):
      check WDGM_EB_STATICIF_VERSION has the correct value
  03: VP (WDGM.EB.TIMEPM.WDGM020203):
      check WDGM_EB_GENIF_VERSION_REQ is defined
  04: VP (WDGM.EB.TIMEPM.WDGM020203):
      check WDGM_EB_GENIF_VERSION_REQ has the correct value
  05: VP (WDGM.EB.TIMEPM.WDGM020204):
         check WDGM_EB_GENIF_VERSION_CHECK is defined
  06: VP (WDGM.EB.TIMEPM.WDGM020204):
         check if macro WDGM_EB_GENIF_VERSION_CHECK
         returns no error in case
         staticif_req == WDGM_EB_STATICIF_VERSION and
         generatedif == WDGM_EB_GENIF_VERSION_REQ
  07: VP (WDGM.EB.TIMEPM.WDGM020204):
         check if macro WDGM_EB_GENIF_VERSION_CHECK
         returns no error in case
         staticif_req less than WDGM_EB_STATICIF_VERSION and
         generatedif == WDGM_EB_GENIF_VERSION_REQ
  08: VP (WDGM.EB.TIMEPM.WDGM020204):
         check if macro WDGM_EB_GENIF_VERSION_CHECK
         returns no error in case
         staticif_req == WDGM_EB_STATICIF_VERSION and
         generatedif greater than WDGM_EB_GENIF_VERSION_REQ
  09: VP (WDGM.EB.TIMEPM.WDGM020204):
         check if macro WDGM_EB_GENIF_VERSION_CHECK
         returns an error in case
         staticif_req greater than WDGM_EB_STATICIF_VERSION and
         generatedif == WDGM_EB_GENIF_VERSION_REQ
  10: VP (WDGM.EB.TIMEPM.WDGM020204):
         check if macro WDGM_EB_GENIF_VERSION_CHECK
         returns an error in case
         staticif_req == WDGM_EB_STATICIF_VERSION and
         generatedif less than WDGM_EB_GENIF_VERSION_REQ


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1952</internalId></specobject>
    <specobject>
      <id>TS_WDGM_08_VersionCheck2</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>701</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that the file WdgM.h
  uses the macro WDGM_EB_GENIF_VERSION_CHECK
  for checking the compatibility between
  the components WdgM Static and WdgM Generated.

Test Object: None.
Test Precondition: 

  Folder 'reference' provides
    - checkWDGM020205.txt:  contains correct expected usage of the macro
         WDGM_EB_GENIF_VERSION_CHECK (as preprocessor check) within WdgM.h


Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Extract the macro WDGM_EB_GENIF_VERSION_CHECK from WdgM.h
      and additional two lines in order to check the usage
  02: VP (WDGM.EB.TIMEPM.WDGM020205)
      Extracted lines of previous step is according to
      reference file checkWDGM020205.txt
      (test done by comparison via reference file)
  03: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 03 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1953</internalId></specobject>
    <specobject>
      <id>TS_WDGM_09_OsIncludes</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>756</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that the generated file WdgM_Types.h includes Os.h,
  only if on multicore is enabled and WdgMGetCoreIdCallout is disabled (partition P1).


Test Object: None.
Test Precondition: 
  Folder 'reference' provides
    - includesOf_WdgM_Type.h.txt include of Os.h only when multicore is enabled.

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Extract inclusion of Os.h in WdgM_Types.h
  02: VP (WDGM.EB.WdgMMulticoreInclude.2)
      Inclusion of "Os.h" in WdgM_Types.h of step 01 is according to
      reference file checkWdgMOs.txt  (empty for single core and partition P1)
  03: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 03 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WdgMMulticoreInclude.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1954</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_00_FileStructure_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure_Multicore/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that header file structure is given according to
    'Figure 1: File include structure for the Watchdog Manager' of the underlying SWS
    with the deviations and enhancements specified by EB.


Test Object: None.
Test Precondition: 
  Folder 'reference' provides
    - includesOf_WdgM.c.txt (showing includes of WdgM.c)
    - includesOf_WdgM.h.txt (showing includes of WdgM.h)
  for comparison.

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Extract includes of WdgM.c
  02: VP (WDGM.EB.Design.IncludeFileStructure12,WDGM.EB.Dbg3)
      Includes of WdgM.c of step 01 ( includesOf_WdgM.c.txt ) are according to
      reference file includesOf_WdgM.c.txt
      (test done by comparison via reference file includesOf_WdgM.c.txt)
  03: Extract includes of WdgM.h
  04: VP (WDGM.EB.Design.IncludeFileStructure04)
      Includes of WdgM.h of step 03 are according to
      reference file includesOf_WdgM.h.txt
      (test done by comparison via reference file includesOf_WdgM.h.txt)
  05: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 09 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1650</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure04</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1642</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Dbg3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1955</internalId></specobject>
    <specobject>
      <id>TS_WDGM_01_FileStructure_EB_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure_Multicore/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that file structure of WdgM module contains
    EB specific extensions additionally to the files specified by AUTOSAR.


Test Object: None.
Test Precondition: 
  Folder 'reference' provides
    - WdgM_SourceFiles.txt and WdgM_HeaderFiles.txt is showing the following static files of WdgM.
      That is, for WDGM.EB.Design.FileStructure:
        WdgM.h, WdgM_BSW_Lcfg.h, WdgM_Int.h, WdgM_Version.h,
        WdgM.c.
      That is, for WDGM.EB.Dbg2,a additionally:
        WdgM_Trace_Stc.h
  for comparison.
  File WdgM_GeneratedHedearFiles.txt and WdgM_GeneratedSourceFiles.txt is showing the following
  generated files of WdgM.
      That is, for WDGM.EB.Design.FileStructure:
        WdgM_Types.h, WdgM_Trace.h, WdgM_Lcfg.h, WdgM_Cfg.h,
        WdgM_Callouts.h and WdgM_Rte_Lcfg.h
        WdgM_BSW_Lcfg.c, WdgM_Rte.c, WdgM_Rte_Core_0_Lcfg.c and WdgM_Rte_Core_1_Lcfg.c.

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Grep all static files of installed WdgM plugin
  02: VP (WDGM.EB.Dbg2)
      File list of step 01 is according to
      reference file WdgM_SourceFiles.txt and WdgM_HeaderFiles.txt
      (test done by comparison via reference file WdgM_SourceFiles.txt and WdgM_HeaderFiles.txt)
  03: Grep all generated files of installed WdgM plugin
  04: VP (WDGM.EB.Dbg2)
      File list of step 01 is according to
      reference file WdgM_GeneratedSourceFiles.txt and WdgM_GeneratedHeaderFiles.txt
      (test done by comparison via reference file WdgM_GeneratedSourceFiles.txt and 
      WdgM_GeneratedHedearFiles.txt)
  05: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 09 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Design.FileStructure</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1657</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Dbg2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1956</internalId></specobject>
    <specobject>
      <id>TS_WDGM_02_FileIncludes_EB_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure_Multicore/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>169</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that the file includes of static and generated WdgM files is compliant
    to EB specific extensions.


Test Object: None.
Test Precondition: 
  Folder 'reference' provides
    - includesOf_WdgM_Rte.c.txt 							(showing includes of WdgM_Rte.c)
    - includesOf_WdgM_Rte_Core_0_Lcfg.c.txt and includesOf_WdgM_Rte_Core_1_Lcfg.c	(showing includes of WdgM_Rte_Lcfg.c)
    - includesOf_WdgM_Rte_Lcfg.h.txt   							(showing includes of WdgM_Rte_Lcfg.h)
    - includesOf_WdgM_BSW_Lcfg.c.txt 							(showing includes of WdgM_BSW_Lcfg.c)
    - includesOf_WdgM.c.txt            							(showing includes of WdgM.c)
    - includesOf_WdgM.h.txt            							(showing includes of WdgM.h)
    - includesOf_WdgM_Lcfg.h.txt       							(showing includes of WdgM_Lcfg.h)
    - includesOf_WdgM_BSW_Lcfg.h.txt   							(showing includes of WdgM_BSW_Lcfg.h)
    - includesOf_WdgM_Cfg.h.txt        							(showing includes of WdgM_Cfg.h)
    - includesOf_WdgM_Callouts.h.txt   							(showing includes of WdgM_Callouts.h)
    - includesOf_WdgM_Int.h.txt        							(showing includes of WdgM_Int.h)
    - includesOf_WdgM_Types.h.txt      							(showing includes of WdgM_Types.h)
    - includesOf_WdgM_Trace_Stc.h.txt  							(showing includes of WdgM_Trace_Stc.h)
    - includesOf_WdgM_Trace.h.txt      							(showing includes of WdgM_Trace.h)
  for comparison.

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Extract includes of WdgM_Rte.c
  02: VP (WDGM.EB.Design.IncludeFileStructure15)
      Includes of previous step are according to
      reference file includesOf_WdgM_Rte.c.txt
  03: Extract includes of WdgM_Rte_Core_0_Lcfg.c and WdgM_Rte_Core_1_Lcfg.c
  04: VP (WDGM.EB.Design.IncludeFileStructure16)
      Includes of previous step are according to
      reference file includesOf_WdgM_Rte_Lcfg.c.txt
  05: Extract includes of WdgM_Rte_Lcfg.h
  06: VP (WDGM.EB.Design.IncludeFileStructure11)
      Includes of previous step are according to
      reference file includesOf_WdgM_Rte_Lcfg.h.txt
  07: Extract includes of WdgM_BSW_Lcfg.c
  08: VP (WDGM.EB.Design.IncludeFileStructure17)
      Includes of previous step are according to
      reference file includesOf_WdgM_BSW_Lcfg.c
  09: Extract includes of WdgM.c
  10: VP (WDGM.EB.Design.IncludeFileStructure12)
      Includes of previous step are according to
      reference file includesOf_WdgM.c.txt
  11: Extract includes of WdgM.h
  12: VP (WDGM.EB.Design.IncludeFileStructure04)
      Includes of previous step are according to
      reference file includesOf_WdgM.h.txt
  13: Extract includes of WdgM_Lcfg.h
  14: VP (WDGM.EB.Design.IncludeFileStructure05)
      Includes of previous step are according to
      reference file includesOf_WdgM_Lcfg.h.txt
  15: Extract includes of WdgM_BSW_Lcfg.h
  16: VP (WDGM.EB.Design.IncludeFileStructure10)
      Includes of previous step are according to
      reference file includesOf_WdgM_BSW_Lcfg.h.txt
  17: Extract includes of WdgM_Cfg.h
  18: VP (WDGM.EB.Design.IncludeFileStructure01)
      Includes of previous step are according to
      reference file includesOf_WdgM_Cfg.h.txt
  19: Extract includes of WdgM_Callouts.h
  20: VP (WDGM.EB.Design.IncludeFileStructure09)
      Includes of previous step are according to
      reference file includesOf_WdgM_Callouts.h.txt
  21: Extract includes of WdgM_Int.h
  22: VP (WDGM.EB.Design.IncludeFileStructure06)
      Includes of previous step are according to
      reference file includesOf_WdgM_Int.h.txt
  23: Extract includes of WdgM_Types.h
  24: VP (WDGM.EB.Design.IncludeFileStructure08)
      Includes of previous step are according to
      reference file includesOf_WdgM_Types.h.txt
  25: Extract includes of WdgM_Trace_Stc.h
  26: VP (WDGM.EB.Design.IncludeFileStructure03)
      Includes of previous step are according to
      reference file includesOf_WdgM_Trace_Stc.h.txt
  27: Extract includes of WdgM_Trace.h
  28: VP (WDGM.EB.Design.IncludeFileStructure18)
      Includes of previous step are according to
      reference file includesOf_WdgM_Trace.h.txt
  29: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 31 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure15</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1653</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure16</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1654</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1649</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure17</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1655</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1650</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure04</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1642</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1643</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1648</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure01</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1639</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure09</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1647</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure06</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1644</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure08</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1646</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure03</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1641</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.Design.IncludeFileStructure18</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1656</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1957</internalId></specobject>
    <specobject>
      <id>TS_WDGM_03_FileIncludes_Dbg1_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure_Multicore/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>310</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that the generated file WdgM_Trace.h does not include anything
    if no Dbg module is available.


Test Object: None.
Test Precondition: 
  Folder 'reference' provides
    - checkDbg1WdgM_Trace.h.txt  (empty file)
  for comparison.

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Extract all inclusions from WdgM_Trace.h
  02: VP (WDGM.EB.Dbg1)
      Inclusion of previous step is according to
      reference file includesOf_WdgM_Trace.h.txt
  03: Extract the inverse of all empty macro definitions with prefix DBG_WDGM_
      from WdgM_Trace.h
  04: VP (WDGM.EB.Dbg2)
      Inclusion of previous step is according to
      reference file checkDbg1WdgM_Trace.h
  05: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 05 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1958</internalId></specobject>
    <specobject>
      <id>TS_WDGM_04_FileIncludes_Dbg2_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure_Multicore/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>364</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that the static file WdgM_Trace_Stc.h contains only empty
  macro definitions with prefix "DBG_WDGM_"


Test Object: None.
Test Precondition: 
  Folder 'reference' provides
    - checkDbg2WdgM_Trace_Stc.h
        contains only comments and following c-code:
          #if (!defined WDGM_TRACE_STC_H)
          #define WDGM_TRACE_STC_H
          #endif
        for comparison.

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Extract the inverse of all empty macro definitions with prefix DBG_WDGM_
      from WdgM_Trace_Stc.h
  02: VP (WDGM.EB.Dbg2)
      Inclusion of previous step is according to
      reference file checkDbg2WdgM_Trace_Stc.h
  03: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 15 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1959</internalId></specobject>
    <specobject>
      <id>TS_WDGM_05_FileIncludes_Dbg3_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure_Multicore/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>417</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that all WdgM source files that contain function definitions
  (i.e. WdgM.c, WdgM_Rte_Core_0_Lcfg.c, WdgM_Rte_Core_1_Lcfg.c, WdgM_Rte.c )
  include the file WdgM_Trace_Stc.h


Test Object: None.
Test Precondition: 
  Folder 'reference' provides
    - checkDbg3WdgM.c.txt  (showing that WdgM_Trace_Stc.h is included)
    - checkDbg3WdgM_Rte.c.txt  (showing that WdgM_Trace_Stc.h is included)
    - checkDbg3WdgM_Rte_Core_0_Lcfg.c.txt  (showing that WdgM_Trace_Stc.h is included)
    - checkDbg3WdgM_Rte_Core_1_Lcfg.c.txt  (showing that WdgM_Trace_Stc.h is included)
  for comparison.

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Extract inclusion of WdgM_Trace_Stc.h from WdgM.c
  02: VP (WDGM.EB.Dbg3)
      Inclusion of previous step is according to
      reference file checkDbg3WdgM.c.txt
  03: Extract inclusion of WdgM_Trace_Stc.h from WdgM_Rte.c
  04: VP (WDGM.EB.Dbg3)
      Inclusion of previous step is according to
      reference file checkDbg3WdgM_Rte.c.txt
  05: Extract inclusion of WdgM_Trace_Stc.h from WdgM_Rte_Core_0_Lcfg.c and WdgM_Rte_Core_1_Lcfg.c
  06: VP (WDGM.EB.Dbg3)
      Inclusion of previous step is according to
      reference file checkDbg3WdgM_Rte_Lcfg.c.txt
  09: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 15 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.Dbg3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1960</internalId></specobject>
    <specobject>
      <id>TS_WDGM_06_FileStructure_TIME_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure_Multicore/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>479</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that file structure of WdgM module contains
    EB specific extensions for TIME.


Test Object: None.
Test Precondition: 
  All TimE specific callout functions are configured, that is:
    WdgM_Tst_GetExpectedInitState_Callout,
    WdgM_Tst_InitRedirection_Callout,
    WdgM_Tst_DeInitRedirection_Callout,
    WdgM_Tst_GetExpectedWdgMMode_Callout,
    WdgM_Tst_SetModeRedirection_Callout,
    WdgM_Tst_GetElapsedTime_Callout,
    WdgM_Tst_MainFunctionViolation_Callout,
    WdgM_Tst_IsPerformReset_Callout,
    WdgM_Tst_SupervisionExpired_Callout,
    WdgM_Tst_IndividualModeSwitch_Callout,
    WdgM_Tst_GlobalModeSwitch_Callout,
    WdgM_Tst_Det_Callout,
    WdgM_Tst_Dem_Callout
    WdgM_Tst_GetCoreId_Callout
    WdgN_Tst_SatelliteAliveness_Callout

  Folder 'reference' provides
    - checkTimEWDGM020200.txt (provides all expected function declarations for the
    callouts expected in WdgM_Callouts.h).

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Grep all function declarations from the generated file WdgM_Callouts.h
  02: VP (WDGM.EB.TIMEPM.WDGM020200)
      File list of step 01 is according to
      reference file checkTimEWDGM020200.txt
      (test done by comparison via reference file)
  03: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 03 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1961</internalId></specobject>
    <specobject>
      <id>TS_WDGM_07_VersionCheck1_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure_Multicore/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>545</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

    This test shall check the correct definition of the static interface
    version macros and the check macro.


Test Object: None.
Test Precondition: None.
Test Execution: 

  00: include WdgM_Cfg.h
  01: VP (WDGM.EB.TIMEPM.WDGM020202):
      check WDGM_EB_STATICIF_VERSION is defined
  02: VP (WDGM.EB.TIMEPM.WDGM020202):
      check WDGM_EB_STATICIF_VERSION has the correct value
  03: VP (WDGM.EB.TIMEPM.WDGM020203):
      check WDGM_EB_GENIF_VERSION_REQ is defined
  04: VP (WDGM.EB.TIMEPM.WDGM020203):
      check WDGM_EB_GENIF_VERSION_REQ has the correct value
  05: VP (WDGM.EB.TIMEPM.WDGM020204):
         check WDGM_EB_GENIF_VERSION_CHECK is defined
  06: VP (WDGM.EB.TIMEPM.WDGM020204):
         check if macro WDGM_EB_GENIF_VERSION_CHECK
         returns no error in case
         staticif_req == WDGM_EB_STATICIF_VERSION and
         generatedif == WDGM_EB_GENIF_VERSION_REQ
  07: VP (WDGM.EB.TIMEPM.WDGM020204):
         check if macro WDGM_EB_GENIF_VERSION_CHECK
         returns no error in case
         staticif_req less than WDGM_EB_STATICIF_VERSION and
         generatedif == WDGM_EB_GENIF_VERSION_REQ
  08: VP (WDGM.EB.TIMEPM.WDGM020204):
         check if macro WDGM_EB_GENIF_VERSION_CHECK
         returns no error in case
         staticif_req == WDGM_EB_STATICIF_VERSION and
         generatedif greater than WDGM_EB_GENIF_VERSION_REQ
  09: VP (WDGM.EB.TIMEPM.WDGM020204):
         check if macro WDGM_EB_GENIF_VERSION_CHECK
         returns an error in case
         staticif_req greater than WDGM_EB_STATICIF_VERSION and
         generatedif == WDGM_EB_GENIF_VERSION_REQ
  10: VP (WDGM.EB.TIMEPM.WDGM020204):
         check if macro WDGM_EB_GENIF_VERSION_CHECK
         returns an error in case
         staticif_req == WDGM_EB_STATICIF_VERSION and
         generatedif less than WDGM_EB_GENIF_VERSION_REQ


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1962</internalId></specobject>
    <specobject>
      <id>TS_WDGM_08_VersionCheck2_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure_Multicore/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>703</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that the file WdgM.h
  uses the macro WDGM_EB_GENIF_VERSION_CHECK
  for checking the compatibility between
  the components WdgM Static and WdgM Generated.

Test Object: None.
Test Precondition: 

  Folder 'reference' provides
    - checkWDGM020205.txt:  contains correct expected usage of the macro
         WDGM_EB_GENIF_VERSION_CHECK (as preprocessor check) within WdgM.h


Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Extract the macro WDGM_EB_GENIF_VERSION_CHECK from WdgM.h
      and additional two lines in order to check the usage
  02: VP (WDGM.EB.TIMEPM.WDGM020205)
      Extracted lines of previous step is according to
      reference file checkWDGM020205.txt
      (test done by comparison via reference file)
  03: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 03 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1963</internalId></specobject>
    <specobject>
      <id>TS_WDGM_09_OsIncludes_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_03_FileStructure_Multicore/source/application/WdgM_ImpTest_03_FileStructure.c</sourcefile>
      <sourceline>758</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  - Verify that the generated file WdgM_Types.h includes Os.h,
  only if on multicore is enabled.


Test Object: None.
Test Precondition: 
  Folder 'reference' provides
    - includesOf_WdgM_Type.h.txt include of Os.h only when multicore is enabled.

Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Extract inclusion of Os.h in WdgM_Types.h
  02: VP (WDGM.EB.WdgMMulticoreInclude.2)
      Inclusion of "Os.h" in WdgM_Types.h of step 01 is according to
      reference file checkWdgMOs.txt
  03: Include the difference of the comparison of all previous steps

Note: If there are differences, then due to Step 03 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WdgMMulticoreInclude.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1964</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WdgM_ImpTest_04_01_SvcCompDescr</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_04_Services/source/application/WdgM_ImpTest_04_Services.c</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that the generated service description is according
to the WdgM configuration.

Test Object: None.
Test Precondition: 

The following supervision entities are configured:
WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1


Test Execution: 

This test is executed with the following permutations:
   Parameter / Permutation      |    p0    |    p1    |    p2    |
-------------------------------------------|----------|----------|
WdgMEnableASR40ServiceAPI       |  false   |  false   |  true    |
WdgMEnableASR43ServiceAPI       |  false   |  false   |  false   |
WdgMDefaultASRServiceAPI        |AUTOSAR_40|AUTOSAR_43|  NONE    |
WdgMBSWCompatibilityMode        |AUTOSAR_40|AUTOSAR_40|AUTOSAR_40|

   Parameter / Permutation      |    p3    |    p4    |    p5    |
--------------------------------|----------|----------|----------|
WdgMEnableASR40ServiceAPI       |  false   |  false   |  false   |
WdgMEnableASR43ServiceAPI       |  false   |  true    |  true    |
WdgMDefaultASRServiceAPI        |AUTOSAR_43|  NONE    |  NONE    |
WdgMBSWCompatibilityMode        |AUTOSAR_43|AUTOSAR_43|AUTOSAR_40|

Ts5-Process execution steps:
  01: Ts5 build step: Generate all files
  02: Compare generated System Description files
      with golden reference files
  03: Include comparison difference of 02 in this test
  04: VP
      If no difference in 03 exists, then nothing
      will be included and the test compiles

      If a difference exists in 03, then the gnu diff
      tool generates some characters which cannot be
      compiled which will be indicated by the ts5 environment.


Test Input: 

System Description reference files (WdgM_swc_interface.arxml and
WdgM_swc_internal.arxml) are provided in directory "reference"
and contains the following definition of the Watchdog Manager Service for the configured 
Supervision Entities WdgMSupervisedEntity_0 and WdgMSupervisedEntity_1:

For Permutations: p0
Service WdgM {
  ProvidePort WdgM_AliveSupervision alive_WdgMSupervisedEntity_0;
  ProvidePort WdgM_AliveSupervision alive_WdgMSupervisedEntity_1;
  ProvidePort WdgM_IndividualMode mode_WdgMSupervisedEntity_0;
  ProvidePort WdgM_IndividualMode mode_WdgMSupervisedEntity_1;
  ProvidePort WdgM_GlobalMode globalMode
  InternalBehavior
  {
    RunnableEntity UpdateAliveCounter
    symbol "WdgM_Rte_UpdateAliveCounter"
    canbeInvokedConcurrently = TRUE

    RunnableEntity CheckpointReached
    symbol "WdgM_Rte_CheckpointReached"
    canbeInvokedConcurrently = TRUE

    PortArgument{port=globalMode};
    PortArgument{port=alive_WdgMSupervisedEntity_0,
                 value.type= WdgM_SupervisedEntityIdType, value.value=0};
    PortArgument{port=alive_WdgMSupervisedEntity_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=1};
    IndirectAPI{port=mode_WdgMSupervisedEntity_0};
    IndirectAPI{port=mode_WdgMSupervisedEntity_1};
  };
};

For Permutations: p1
Service WdgM {
  ProvidePort WdgM_LocalSupervision localSupervision_WdgMSupervisedEntity_0_CP0_1;
  ProvidePort WdgM_LocalSupervision localSupervision_WdgMSupervisedEntity_1_CP1_1;
  ProvidePort WdgM_LocalSupervisionStatus localSupervisionStatus_WdgMSupervisedEntity_0;
  ProvidePort WdgM_LocalSupervisionStatus localSupervisionStatus_WdgMSupervisedEntity_1;
  ProvidePort WdgM_LocalMode mode_WdgMSupervisedEntity_0;
  ProvidePort WdgM_LocalMode mode_WdgMSupervisedEntity_1;
  ProvidePort WdgM_GlobalMode globalMode
  ProvidePort WdgM_GlobalSupervision globalSupervision
  
  InternalBehavior
  {
    RunnableEntity CheckpointReached
    symbol "WdgM_Rte_CheckpointReached"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetFirstExpiredSEID
    symbol "WdgM_Rte_GetFirstExpiredSEID"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetGlobalStatus
    symbol "WdgM_Rte_GetGlobalStatus"
    canbeInvokedConcurrently = TRUE
    
    RunnableEntity GetMode
    symbol "WdgM_Rte_GetMode"
    canbeInvokedConcurrently = TRUE
    
    RunnableEntity PerformReset
    symbol "WdgM_Rte_PerformReset"
    canbeInvokedConcurrently = FALSE
    
    RunnableEntity SetMode
    symbol "WdgM_Rte_SetMode"
    canbeInvokedConcurrently = FALSE
    
    RunnableEntity GetLocalStatus
    symbol "WdgM_Rte_GetLocalStatus"
    canbeInvokedConcurrently = TRUE

    PortArgument{port=globalMode};
    PortArgument{port=localSupervision_WdgMSupervisedEntity_0_CP0_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=0,
                 value.type= WdgM_CheckpointIdType, value.value=0};
    PortArgument{port=localSupervision_WdgMSupervisedEntity_1_CP1_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=1,
                 value.type= WdgM_CheckpointIdType, value.value=0};
    PortArgument{port=localSupervisionStatus_WdgMSupervisedEntity_0,
                 value.type= WdgM_SupervisedEntityIdType, value.value=0};
    PortArgument{port=localSupervisionStatus_WdgMSupervisedEntity_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=1};
    IndirectAPI{port=mode_WdgMSupervisedEntity_0};
    IndirectAPI{port=mode_WdgMSupervisedEntity_1};
  };
};

For Permutations: p2
Service WdgM {
  ProvidePort WdgM_ASR40_AliveSupervision alive_ASR40_WdgMSupervisedEntity_0;
  ProvidePort WdgM_ASR40_AliveSupervision alive_ASR40_WdgMSupervisedEntity_1;
  ProvidePort WdgM_ASR40_IndividualMode mode_ASR40_WdgMSupervisedEntity_0;
  ProvidePort WdgM_ASR40_IndividualMode mode_ASR40_WdgMSupervisedEntity_1;
  ProvidePort WdgM_ASR40_GlobalMode WdgM_ASR40_globalMode
  
  InternalBehavior
  {
    RunnableEntity CheckpointReached
    symbol "WdgM_ASR40_Rte_CheckpointReached"
    canbeInvokedConcurrently = TRUE

    RunnableEntity UpdateAliveCounter
    symbol "WdgM_ASR40_Rte_UpdateAliveCounter"
    canbeInvokedConcurrently = TRUE

    PortArgument{port=WdgM_ASR40_globalMode};
    PortArgument{port=alive_ASR40_WdgMSupervisedEntity_0,
                 value.type= WdgM_ASR40_SupervisedEntityIdType, value.value=0};
    PortArgument{port=alive_ASR40_WdgMSupervisedEntity_1,
                 value.type= WdgM_ASR40_SupervisedEntityIdType, value.value=1};
    IndirectAPI{port=mode_ASR40_WdgMSupervisedEntity_0};
    IndirectAPI{port=mode_ASR40_WdgMSupervisedEntity_1};
  };
};

For Permutations: p3
Service WdgM {
  ProvidePort WdgM_LocalSupervision localSupervision_WdgMSupervisedEntity_0_CP0_1;
  ProvidePort WdgM_LocalSupervision localSupervision_WdgMSupervisedEntity_1_CP1_1;
  ProvidePort WdgM_LocalSupervisionStatus localSupervisionStatus_WdgMSupervisedEntity_0;
  ProvidePort WdgM_LocalSupervisionStatus localSupervisionStatus_WdgMSupervisedEntity_1;
  ProvidePort WdgM_LocalMode mode_WdgMSupervisedEntity_0;
  ProvidePort WdgM_LocalMode mode_WdgMSupervisedEntity_1;
  ProvidePort WdgM_GlobalMode globalMode
  ProvidePort WdgM_GlobalSupervision globalSupervision
  
  InternalBehavior
  {
    RunnableEntity CheckpointReached
    symbol "WdgM_Rte_CheckpointReached"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetFirstExpiredSEID
    symbol "WdgM_Rte_GetFirstExpiredSEID"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetGlobalStatus
    symbol "WdgM_Rte_GetGlobalStatus"
    canbeInvokedConcurrently = TRUE
    
    RunnableEntity GetMode
    symbol "WdgM_Rte_GetMode"
    canbeInvokedConcurrently = TRUE
    
    RunnableEntity PerformReset
    symbol "WdgM_Rte_PerformReset"
    canbeInvokedConcurrently = FALSE
    
    RunnableEntity SetMode
    symbol "WdgM_Rte_SetMode"
    canbeInvokedConcurrently = FALSE
    
    RunnableEntity GetLocalStatus
    symbol "WdgM_Rte_GetLocalStatus"
    canbeInvokedConcurrently = TRUE

    PortArgument{port=globalMode};
    PortArgument{port=localSupervision_WdgMSupervisedEntity_0_CP0_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=0,
                 value.type= WdgM_CheckpointIdType, value.value=0};
    PortArgument{port=localSupervision_WdgMSupervisedEntity_1_CP1_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=1,
                 value.type= WdgM_CheckpointIdType, value.value=0};
    PortArgument{port=localSupervisionStatus_WdgMSupervisedEntity_0,
                 value.type= WdgM_SupervisedEntityIdType, value.value=0};
    PortArgument{port=localSupervisionStatus_WdgMSupervisedEntity_1,
                 value.type= WdgM_SupervisedEntityIdType, value.value=1};
    IndirectAPI{port=mode_WdgMSupervisedEntity_0};
    IndirectAPI{port=mode_WdgMSupervisedEntity_1};
  };
};

For Permutations: p4
Service WdgM {
  ProvidePort WdgM_ASR43_LocalSupervision localSupervision_ASR43_WdgMSupervisedEntity_0_CP0_1
  ProvidePort WdgM_ASR43_LocalSupervision localSupervision_ASR43_WdgMSupervisedEntity_1_CP1_1
  ProvidePort WdgM_ASR43_LocalSupervisionStatus localSupervisionStatus_ASR43_WdgMSupervisedEntity_0
  ProvidePort WdgM_ASR43_LocalSupervisionStatus localSupervisionStatus_ASR43_WdgMSupervisedEntity_1
  ProvidePort WdgM_ASR43_LocalMode mode_ASR43_WdgMSupervisedEntity_0
  ProvidePort WdgM_ASR43_LocalMode mode_ASR43_WdgMSupervisedEntity_1
  ProvidePort WdgM_ASR43_GlobalMode WdgM_ASR43_globalMode
  ProvidePort WdgM_ASR43_GlobalSupervision WdgM_ASR43_GlobalSupervision
  
  InternalBehavior
  {
    RunnableEntity CheckpointReached
    symbol "WdgM_ASR43_Rte_CheckpointReached"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetFirstExpiredSEID
    symbol "WdgM_ASR43_Rte_GetFirstExpiredSEID"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetGlobalStatus
    symbol "WdgM_ASR43_Rte_GetGlobalStatus"
    canbeInvokedConcurrently = TRUE
    
    RunnableEntity GetMode
    symbol "WdgM_ASR43_Rte_GetMode"
    canbeInvokedConcurrently = TRUE
    
    RunnableEntity PerformReset
    symbol "WdgM_ASR43_Rte_PerformReset"
    canbeInvokedConcurrently = FALSE
    
    RunnableEntity SetMode
    symbol "WdgM_ASR43_Rte_SetMode"
    canbeInvokedConcurrently = FALSE
    
    RunnableEntity GetLocalStatus
    symbol "WdgM_ASR43_Rte_GetLocalStatus"
    canbeInvokedConcurrently = TRUE

    PortArgument{port=WdgM_ASR43_globalMode};
    PortArgument{port=localSupervision_ASR43_WdgMSupervisedEntity_0_CP0_1,
                 value.type= WdgM_ASR43_SupervisedEntityIdType, value.value=0,
                 value.type= WdgM_ASR43_CheckpointIdType, value.value=0};
    PortArgument{port=localSupervision_ASR43_WdgMSupervisedEntity_1_CP1_1,
                 value.type= WdgM_ASR43_SupervisedEntityIdType, value.value=1,
                 value.type= WdgM_ASR43_CheckpointIdType, value.value=0};
    PortArgument{port=localSupervisionStatus_ASR43_WdgMSupervisedEntity_0,
                 value.type= WdgM_ASR43_SupervisedEntityIdType, value.value=0};
    PortArgument{port=localSupervisionStatus_ASR43_WdgMSupervisedEntity_1,
                 value.type= WdgM_ASR43_SupervisedEntityIdType, value.value=1};
    IndirectAPI{port=mode_ASR43_WdgMSupervisedEntity_0};
    IndirectAPI{port=mode_ASR43_WdgMSupervisedEntity_1};
  };
};

For Permutations: p5
Service WdgM {
  ProvidePort WdgM_ASR43_LocalSupervision localSupervision_ASR43_WdgMSupervisedEntity_0_CP0_1
  ProvidePort WdgM_ASR43_LocalSupervision localSupervision_ASR43_WdgMSupervisedEntity_1_CP1_1
  ProvidePort WdgM_ASR43_LocalSupervisionStatus localSupervisionStatus_ASR43_WdgMSupervisedEntity_0
  ProvidePort WdgM_ASR43_LocalSupervisionStatus localSupervisionStatus_ASR43_WdgMSupervisedEntity_1
  ProvidePort WdgM_ASR43_LocalMode mode_ASR43_WdgMSupervisedEntity_0
  ProvidePort WdgM_ASR43_LocalMode mode_ASR43_WdgMSupervisedEntity_1
  ProvidePort WdgM_ASR43_GlobalMode WdgM_ASR43_globalMode
  ProvidePort WdgM_ASR43_GlobalSupervision WdgM_ASR43_GlobalSupervision
  InternalBehavior
  {
    RunnableEntity CheckpointReached
    symbol "WdgM_ASR43_Rte_CheckpointReached"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetFirstExpiredSEID
    symbol "WdgM_ASR43_Rte_GetFirstExpiredSEID"
    canbeInvokedConcurrently = TRUE

    RunnableEntity GetGlobalStatus
    symbol "WdgM_ASR43_Rte_GetGlobalStatus"
    canbeInvokedConcurrently = TRUE
    
    RunnableEntity GetMode
    symbol "WdgM_ASR43_Rte_GetMode"
    canbeInvokedConcurrently = TRUE
    
    RunnableEntity PerformReset
    symbol "WdgM_ASR43_Rte_PerformReset"
    canbeInvokedConcurrently = FALSE
    
    RunnableEntity SetMode
    symbol "WdgM_ASR43_Rte_SetMode"
    canbeInvokedConcurrently = FALSE
    
    RunnableEntity GetLocalStatus
    symbol "WdgM_ASR43_Rte_GetLocalStatus"
    canbeInvokedConcurrently = TRUE

    PortArgument{port=WdgM_ASR43_globalMode};
    PortArgument{port=localSupervision_ASR43_WdgMSupervisedEntity_0_CP0_1,
                 value.type= WdgM_ASR43_SupervisedEntityIdType, value.value=0,
                 value.type= WdgM_ASR43_CheckpointIdType, value.value=0};
    PortArgument{port=localSupervision_ASR43_WdgMSupervisedEntity_1_CP1_1,
                 value.type= WdgM_ASR43_SupervisedEntityIdType, value.value=1,
                 value.type= WdgM_ASR43_CheckpointIdType, value.value=0};
    PortArgument{port=localSupervisionStatus_ASR43_WdgMSupervisedEntity_0,
                 value.type= WdgM_ASR43_SupervisedEntityIdType, value.value=0};
    PortArgument{port=localSupervisionStatus_ASR43_WdgMSupervisedEntity_1,
                 value.type= WdgM_ASR43_SupervisedEntityIdType, value.value=1};
    IndirectAPI{port=mode_ASR43_WdgMSupervisedEntity_0};
    IndirectAPI{port=mode_ASR43_WdgMSupervisedEntity_1};
  };
};


Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WDGM003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1965</internalId></specobject>
    <specobject>
      <id>TS_WdgM_ImpTest_04_02_Types</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_04_Services/source/application/WdgM_ImpTest_04_Services.c</sourcefile>
      <sourceline>433</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  1) Test that the Watchdog Manager service  description provides the AUTOSAR 4.0
     type definition with the infix _ASR40_.

  2) Test that the Watchdog Manager service  description provides the AUTOSAR 4.3
     type definition with the infix _ASR43_.

  3) Test that WdgM_SupervisedEntityIdType is of type uint16.


Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP (WDGM.EB.WDGM009)
      For permutation p2
      A variable with type WdgM_ASR40_SupervisedEntityIdType can be instantiated
      and equals type "uint16"
      and equals type uint16
  02: VP (WDGM.EB.ASR43.WDGM123)
      For permutations: p4, p5
      A variable with type WdgM_ASR43_SupervisedEntityIdType can be instantiated
      and equals type uint16
  03: VP (WDGM.EB.WDGM200)
      For permutations: p0, p1, p3
      A variable with type WdgM_SupervisedEntityIdType can be instantiated
      and equals type uint16


Test Input: 

Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.WDGM200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1966</internalId></specobject>
    <specobject>
      <id>TS_WdgM_ImpTest_04_03_RteAPIs</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_04_Services/source/application/WdgM_ImpTest_04_Services.c</sourcefile>
      <sourceline>534</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  1) Test that the correct behavior of WdgM Service Component with respect to
     the APIs WdgM_UpdateAliveCounter() and WdgM_CheckpointReached().

  2) Test that if parameter WdgMEnableASR43ServiceAPI is enabled, then the WdgM Service Component
     redirects a call to the corresponding API in the implementation of the Rte/SWC API
     to this AUTOSASR 4.3 WdgM BSW API.

  3) Test that if parameter WdgMEnableASR40ServiceAPI is enabled, then the WdgM Service Component
     redirects a call to the corresponding API in the implementation of the Rte/SWC API
     to this AUTOSASR 4.0 WdgM BSW API.

  4) Test that if parameter DefaultASRServiceAPI is set to AUTOSAR_40, then the WdgM Service Component
     redirects a call to the corresponding API in the implementation of the Rte/SWC API
     to this AUTOSASR 4.0 WdgM BSW API.

  5) Test that if parameter DefaultASRServiceAPI is set to AUTOSAR_43, then the WdgM Service Component
     redirects a call to the corresponding API in the implementation of the Rte/SWC API
     to this AUTOSASR 4.3 WdgM BSW API.
  

Test Object: None.
Test Precondition: 

Testable preconditions:
A) WdgM is initialized and all local supervision states are ok (including global state)

Configuration:
The WdgM has the following configuration:

WdgM modes and configured Supervision Entities for Alive supervision:
  WdgMMode_0 (= initial mode and sleep mode):
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1 (used in WdgMTestSwc0)
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1 (used in WdgMTestSwc1)


Test Execution: 

For permutation: p0
  01: Include file "WdgM_Rte.h" and
      call WdgM_Rte_UpdateAliveCounter() for some Supervision Entity
  02: The local supervision status of this Supervision Entity is updated accordingly
  03: Include file "Rte_WdgM.h" and
      call WdgM_Rte_CheckpointReached() for some Supervision Entity

For permutations: p1, p3
  03: Include file "Rte_WdgM.h" and
      call WdgM_Rte_CheckpointReached() for some Supervision Entity

For permutation: p2
  04: Include file "WdgM_Rte.h" and
      call WdgM_ASR40_Rte_UpdateAliveCounter() for some Supervision Entity
  05: The local supervision status of this Supervision Entity is updated accordingly
  06: Include file "WdgM_Rte.h" and
      call WdgM_ASR40_Rte_UpdateAliveCounter() for some Supervision Entity
  07:  The local supervision status of this Supervision Entity is updated accordingly
  08: Include file "Rte_WdgM.h" and
      call WdgM_ASR40_Rte_CheckpointReached() for some Supervision Entity
      Include file "WdgM_Rte.h" and
      call WdgM_ASR40_Rte_UpdateAliveCounter() for some Supervision Entity

For permutations: p4, p5
  09: Include file "Rte_WdgM.h" and
      call WdgM_ASR43_Rte_CheckpointReached() for some Supervision Entity

For all permutations:
  10: The local supervision status of this Supervision Entity is updated accordingly


Test Input: 

Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR40.WDGM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1967</internalId></specobject>
    <specobject>
      <id>TS_WdgM_ImpTest_04_04_RteIntegration</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_04_Services/source/application/WdgM_ImpTest_04_Services.c</sourcefile>
      <sourceline>762</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that the API exported to RTE can be invoked by SW-Cs.

Test Object: None.
Test Precondition: 

Testable preconditions:
A) WdgM is initialized and all local supervision states are ok (including global state)

The WdgM has the following configuration:
WdgM modes and configured Supervision Entities for Alive supervision:
  WdgMMode_0 (= initial mode and sleep mode):
    WdgMAliveSupervision_0:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP0_1 (used in WdgMTestSwc0)
    WdgMAliveSupervision_1:
      SupervisionReferenceCycle    1
      ExpectedAliveIndications     1
      MaxMargin                    0
      MinMargin                    0
      FailedSupervisionRefCycleTol 1
      WdgMExpiredSupervisionCycleTol 2
      Checkpoints: CP1_1 (used in WdgMTestSwc1)

Test Components "WdgMTestSwc0" and "WdgMTestSwc1" are connected to the WdgM Service Component
as follows:

  For permutation: p0
   "WdgMTestSwc0" ports are connected as follows:
     WdgM_IndividualMode (SysD)   =&gt; Rte_Mode_R_indSEMode0_currentMode (C-Code)
     WdgM_GlobalMode (SysD)       =&gt; Rte_Mode_R_globalMode_currentMode (C-Code)
     WdgM_AliveSupervision (SysD) =&gt; Rte_Call_R_alivesuperSE0_UpdateAliveCounter (C-Code) or
                                     Rte_Call_R_alivesuperSE0_CheckpointReached (C-Code)
    "WdgMTestSwc1" ports are connected as follows:
      WdgM_IndividualMode (SysD)   =&gt; Rte_Mode_R_indSEMode1_currentMode (C-Code)
      WdgM_AliveSupervision (SysD) =&gt; Rte_Call_R_alivesuperSE1_UpdateAliveCounter (C-Code) or
                                      Rte_Call_R_alivesuperSE1_CheckpointReached (C-Code)
  For permutations: p1
    "WdgMTestSwc0" ports are connected as follows:
      WdgM_IndividualMode (SysD)   =&gt; Rte_Mode_R_indSEMode0_currentMode (C-Code)
      WdgM_GlobalMode (SysD)       =&gt; Rte_Mode_R_globalMode_currentMode (C-Code)
      WdgM_AliveSupervision (SysD) =&gt; Rte_Call_R_alivesuperSE0_CheckpointReached (C-Code)
    "WdgMTestSwc1" ports are connected as follows:
      WdgM_IndividualMode (SysD)   =&gt; Rte_Mode_R_indSEMode1_currentMode (C-Code)
      WdgM_AliveSupervision (SysD) =&gt; Rte_Call_R_alivesuperSE1_CheckpointReached (C-Code)
 For permutations: p2
    "WdgMTestSwc0" ports are connected as follows:
      WdgM_IndividualMode (SysD)   =&gt; Rte_Mode_R_indSEMode0_ASR40_currentMode (C-Code)
      WdgM_GlobalMode (SysD)       =&gt; Rte_Mode_R_globalMode_ASR40_currentMode (C-Code)
      WdgM_AliveSupervision (SysD) =&gt; Rte_Call_R_alivesuperSE0_ASR40_UpdateAliveCounter (C-Code) or
                                      Rte_Call_R_alivesuperSE0_ASR40_CheckpointReached (C-Code)
    "WdgMTestSwc1" ports are connected as follows:
      WdgM_IndividualMode (SysD)   =&gt; Rte_Mode_R_indSEMode1_ASR40_currentMode (C-Code)
      WdgM_AliveSupervision (SysD) =&gt; Rte_Call_R_alivesuperSE1_ASR40_UpdateAliveCounter (C-Code) or
                                      Rte_Call_R_alivesuperSE1_ASR40_CheckpointReached (C-Code)
  For permutation: p3
   "WdgMTestSwc0" ports are connected as follows:
     WdgM_IndividualMode (SysD)   =&gt; Rte_Mode_R_indSEMode0_currentMode (C-Code)
     WdgM_GlobalMode (SysD)       =&gt; Rte_Mode_R_globalMode_currentMode (C-Code)
     WdgM_AliveSupervision (SysD) =&gt; Rte_Call_R_alivesuperSE0_CheckpointReached (C-Code)
    "WdgMTestSwc1" ports are connected as follows:
      WdgM_IndividualMode (SysD)   =&gt; Rte_Mode_R_indSEMode1_currentMode (C-Code)
      WdgM_AliveSupervision (SysD) =&gt; Rte_Call_R_alivesuperSE1_CheckpointReached (C-Code)
  For permutation: p4
   "WdgMTestSwc0" ports are connected as follows:
     WdgM_IndividualMode (SysD)   =&gt; Rte_Mode_R_indSEMode0_ASR43_currentMode (C-Code)
     WdgM_GlobalMode (SysD)       =&gt; Rte_Mode_R_globalMode_ASR43_currentMode (C-Code)
     WdgM_AliveSupervision (SysD) =&gt; Rte_Call_R_alivesuperSE0_ASR43_CheckpointReached (C-Code) 
    "WdgMTestSwc1" ports are connected as follows:
      WdgM_IndividualMode (SysD)   =&gt; Rte_Mode_R_indSEMode1_ASR43_currentMode (C-Code)
      WdgM_AliveSupervision (SysD) =&gt; Rte_Call_R_alivesuperSE1_ASR43_CheckpointReached (C-Code)
  For permutation: p5
   "WdgMTestSwc0" ports are connected as follows:
     WdgM_IndividualMode (SysD)   =&gt; Rte_Mode_R_indSEMode0_ASR43_currentMode (C-Code)
     WdgM_GlobalMode (SysD)       =&gt; Rte_Mode_R_globalMode_ASR43_currentMode (C-Code)
     WdgM_AliveSupervision (SysD) =&gt; Rte_Call_R_alivesuperSE0_ASR43_CheckpointReached (C-Code) 
    "WdgMTestSwc1" ports are connected as follows:
      WdgM_IndividualMode (SysD)   =&gt; Rte_Mode_R_indSEMode1_ASR43_currentMode (C-Code)
      WdgM_AliveSupervision (SysD) =&gt; Rte_Call_R_alivesuperSE1_ASR43_CheckpointReached (C-Code)

Test Execution: 

  01: Initialize test case and stubs
  02: Start Rte
  03: initialize WdgM

For permutations: p0, p1, p3, p4, p5
  04: Call CheckpointReached for WdgMAliveSupervision_1 / CP1_1
      via the provided Port API
For permutation: p2
  04: Call UpdateAliveCounter for WdgMAliveSupervision_1 / CP1_1
      via the provided Port API

  05: Call WdgM_MainFunction()
  06: The following local status information is retrieved within the SW-C
      via the provided Mode Indication APIs:
       WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
       WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
     The following global status information is retrieved:
       WDGM_GLOBAL_STATUS_FAILED

For permutations: p0, p1, p3, p4, p5
  07: Call CheckpointReached for WdgMAliveSupervision_0 / CP0_1
      via the provided Port API
For permutation: p2
  07: Call UpdateAliveCounter for WdgMAliveSupervision_0 / CP0_1
      via the provided Port API

  08: Call WdgM_MainFunction()
  09: The following local status information is retrieved within the SW-C
    via the provided Mode Indication APIs:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED

For permutation: p2
  10: Call UpdateAliveCounter for WdgMAliveSupervision_1 / CP1_1
      via the provided Port API
For permutations: p0, p1, p3, p4, p5
  10: Call CheckpointReached for WdgMAliveSupervision_1 / CP1_1
      via the provided Port API

  11: Call WdgM_MainFunction()
  12: The following local status information is retrieved within the SW-C
    via the provided Mode Indication APIs:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_FAILED
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_OK
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED

For permutation:  p2
  13: Call UpdateAliveCounter for WdgMAliveSupervision_0 / CP0_1
      via the provided Port API
For permutations: p0, p1, p3, p4, p5
  13: Call CheckpointReached for WdgMAliveSupervision_0 / CP0_1
      via the provided Port API

  14: Call WdgM_MainFunction()
  15: The following local status information is retrieved within the SW-C
    via the provided Mode Indication APIs:
      WdgMSupervisedEntity_0: WDGM_LOCAL_STATUS_OK
      WdgMSupervisedEntity_1: WDGM_LOCAL_STATUS_FAILED
    The following global status information is retrieved:
      WDGM_GLOBAL_STATUS_FAILED

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00333</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1968</internalId></specobject>
    <specobject>
      <id>TS_WdgM_ImpTest_04_05_ASR43RteAPIs</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_04_Services/source/application/WdgM_ImpTest_04_Services.c</sourcefile>
      <sourceline>1089</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  1) Test that if parameter WdgMEnableASR43ServiceAPI is enabled, then the WdgM Service Component
     redirects a call to the corresponding API in the implementation of the Rte/SWC API
     to this AUTOSASR 4.3 WdgM BSW API.

  2) Test that if parameter DefaultASRServiceAPI is set to AUTOSAR_43, then the WdgM Service Component
     redirects a call to the corresponding API in the implementation of the Rte/SWC API
     to this AUTOSASR 4.3 WdgM BSW API.


Test Object: None.
Test Precondition: 

 Testable preconditions:
  A) WdgM is initialized and all local supervision states are ok (including global state)

  The WdgM has the following configuration:

  WdgM modes and configured Supervision Entities for Alive supervision:
    WdgMMode_0 (= initial mode and sleep mode):
      WdgMAliveSupervision_0:
        SupervisionReferenceCycle    1
        ExpectedAliveIndications     1
        MaxMargin                    0
        MinMargin                    0
        FailedSupervisionRefCycleTol 1
        WdgMExpiredSupervisionCycleTol 2
        Checkpoints: CP0_1 (used in WdgMTestSwc0)
      WdgMAliveSupervision_1:
        SupervisionReferenceCycle    1
        ExpectedAliveIndications     1
        MaxMargin                    0
        MinMargin                    0
        FailedSupervisionRefCycleTol 1
        WdgMExpiredSupervisionCycleTol 2
        Checkpoints: CP1_1 (used in WdgMTestSwc1)


Test Execution: 

  For permutations: p1, p3, p4, p5
    01: VP (GetMode service)
        The global mode of WdgM is the correct one
    02: VP (Set service)
        The global mode of WdgM is changed to a new one
    03: VP (GetLocalStatus service)
        The local status of the Supervised Entities are correct
    04: VP (GetGlobalStatus service)
        The overall global status is correct
    05: VP (GetMode service)
        The global mode of WdgM is the correct one
    06: VP (GetLocalStatus service)
        The local status of the Supervised Entities are correct
    07: VP (GetGlobalStatus service)
        The overall global status is correct
    08: VP (CheckpointReached service)
        A checkpoint is reported via RTE
    09: VP (GetLocalStatus service)
        The local status of the Supervised Entities are correct
    10: VP (GetGlobalStatus service)
        The overall global status is correct
    11: VP (GetFirstExpiredSEID service)
        The expired Supervised Entity is correct
    12: VP (PerformReset service)
        A Mcu_Reset()


Test Input: 

Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ASR43.WDGM126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.WDGM029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1969</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_CheckInternalVariable_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>180</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 This test case tests the following aspects regarding WdgM_EB_CPData_[SEName].AliveCounterData
 internal data:
 - data accessibility;
 - data consistency:
   - WdgM_CheckpointReached() return E_OK when stored data is OK;
   - WdgM_CheckpointReached() return E_NOT_OK when stored data is corrupted.

 The used testing method is: "Cause-Effect Graphing".
 The cause and the effect are self described above.

This test and all sub-sequent tests are
executed with the following configuration permutations in order
to test the behavior of EB specific Det / Dem reporting
(only relevant for tests TS_WDGM_CheckDataProtection_*):

Permutation table:
----------------------------------------------------------
Parameter / Permutation       | p0  | p1  | p2     | p3  | p4     |
==========================================================
WdgMDevErrorDetect            |true |true |true    |true |true    |
..........................................................
WdgMDataCorruptionReportToDem |DEM  |DET  |DISABLE |DET  |DISABLE |
..........................................................
WdgMDataCorruptionDemDetErrId | 34  | 34  | 34     | 34  | 34     |
..........................................................
WdgMDetCallout                |false|false|false   |true |false   |
..........................................................
WdgMDemCallout                |false|false|false   |false|false   |
..........................................................
WdgMExtLogicalOptimization    |false|false|false   |false|true    |
----------------------------------------------------------

 
Test Object: None.
Test Precondition: 


 The following configuration is used for all subsequent test cases in this file:

 SE used configuration:
 WdgMSupervisedEntity_0:
 Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4
 Number of Internal Logical Supervision: 1 (CP0_1, CP0_2, CP0_3)
 WdgMSupervisedEntity_1:
 Checkpoints: CP1_1
 WdgMSupervisedEntity_2:
 Checkpoints: CP2_1

 Modes:
 WdgMMode_0:
 Number of:
 Alive supervisions: 5 (CP0_1; CP0_2; CP0_3; CP0_4; CP1_1)
 Deadline supervisions: 2 (CP0_1, CP0_2; CP0_3, CP0_4)
 External Logical Supervisions: 1 (CP0_4, CP1_1, CP2_1)

 Total number of:
 Supervised Entities: 3
 CheckPoints: 6
 Deadline supervisions: 2
 Logical supervisions: 2
 Triggered watchdogs: 1(not used in tests)

 
Test Execution: 

 01. Init test case
 02. Init WdgM module
 03. Sanity check
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 04. Sanity check
     Check the number of configured CPs for each SE to be equal with the predefined
     expected value.
 05. VP (WDGM.EB.DesignDecision.InternalVariable3, WDGM.EB.TIMEPM.WDGM020432,
            WDGM.EB.TIMEPM.WDGM020470)
     Check WdgM_EB_CPData_[SEName].AliveCounterData to be correctly initialized
     (the data is accessible and bitwise stored).
     Note: In case this test case is called first by the test run, then the expected value
     is 0xFFFE0001UL.
 06. VP (WDGM.EB.TIMEPM.WDGM020471)
     Check that WdgM_CheckpointReached returns E_OK for the case when
     WdgM_EB_CPData_[SEName].AliveCounterData data is correctly stored(bitwise stored).
 07. Set invalid value for the WdgM_EB_CPData_[SEName].AliveCounterData.
 08. VP (WDGM.EB.TIMEPM.WDGM020471)
     Check that WdgM_CheckpointReached returns E_NOT_OK for the case when
     WdgM_EB_CPData_[SEName].AliveCounterData data is corrupted(not bitwise stored).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1666</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020470</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1970</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckInternalVariable_01b</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>354</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  This test case tests the following aspects regarding WdgM_CoreInstance-&gt;WdgM_EB_IntRAMData[].AliveCounterData
  internal data:
  - data accessibility;
  - data consistency.

  The used testing method is: "Cause-Effect Graphing".
  The cause and the effect are self described above.

  
Test Object: None.
Test Precondition: 

  Same as described for TS_WDGM_CheckInternalVariable_01 test case.

  Execution of TS_WDGM_CheckInternalVariable_01
Test Execution: 

  01. Reverse data corruption from TS_WDGM_CheckInternalVariable_01
  02. Init test case
  03. Init WdgM module
  04. Check that WdgM_CoreInstance-&gt;WdgM_EB_IntRAMData[].AliveCounterData are
  updated from WdgM_EB_CPData_[SEName].AliveCounterData after initialization
  05. Call Checkpoint Reached
  06. Call Mainfunction
  07. Check WdgM_CoreInstance-&gt;WdgM_EB_IntRAMData[].AliveCounterData are updated

  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable25</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1971</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckInternalVariable_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>481</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 This test case tests the following aspects regarding WdgM_GetCoreInstance()-&gt;WdgM_EB_SELocalStatus[IntSEId]
 internal data:
 - data accessibility;
 - data consistency.

 The used testing method is: "Cause-Effect Graphing".
 The cause and the effect are self described above.

 
Test Object: None.
Test Precondition: 

 Same as described for TS_WDGM_CheckInternalVariable_01 test case.

 
Test Execution: 

 01. Init test case
 02. Init WdgM module
 03. Sanity check
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 04. VP (WDGM.EB.DesignDecision.InternalVariable1)
     Check WdgM_GetCoreInstance()-&gt;WdgM_EB_SELocalStatus[IntSEId] data to be accessible and equal with the output value
     returned by the WdgM_GetLocalStatus() function call.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable1</linksto>
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1972</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckInternalVariable_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>551</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 This test case tests the following aspects regarding
 WdgM_GetCoreInstance()-&gt;WdgM_EB_FailedAliveSupervisionRefCycleCnt[IntSEId] internal data:
 - data accessibility;
 - data consistency.

 The used testing method is: "Cause-Effect Graphing".
 The cause and the effect are self described above.

 
Test Object: None.
Test Precondition: 

 Same as described for TS_WDGM_CheckInternalVariable_01 test case.

 
Test Execution: 

 01. Init test case
 02. Init WdgM module
 03. Sanity check
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 04. VP (WDGM.EB.TIMEPM.WDGM020432,WDGM.EB.DesignDecision.InternalVariable10)
     Check WdgM_GetCoreInstance()-&gt;WdgM_EB_FailedAliveSupervisionRefCycleCnt[IntSEId] to be accessible and
     correctly initialized.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable10</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1673</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1973</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckInternalVariable_04</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>618</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 This test case tests the following aspects regarding WdgM_EB_GlobalStatus internal data:
 - data accessibility;
 - data consistency.

 The used testing method is: "Cause-Effect Graphing".
 The cause and the effect are self described above.

 
Test Object: None.
Test Precondition: 

 Same as described for TS_WDGM_CheckInternalVariable_01 test case.

 
Test Execution: 

 01. Init test case
 02. Init WdgM module
 03. Sanity check
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 04. VP (WDGM.EB.DesignDecision.InternalVariable2)
     Check WdgM_EB_GlobalStatus to be accessible and equal with the output value returned by the
     WdgM_GetGlobalStatus() function call.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1665</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1974</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckInternalVariable_05</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>683</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 This test case tests the following aspects regarding WdgM_EB_DMData[DeadlineId].StartTimestampData
 internal data:
 - data accessibility;
 - data consistency:
   - WdgM_CheckpointReached() return E_OK when stored data is OK;
   - WdgM_CheckpointReached() return E_NOT_OK when stored data is corrupted.

 The used testing method is: "Cause-Effect Graphing".
 The cause and the effect are self described above.

 
Test Object: None.
Test Precondition: 

 Same as described for TS_WDGM_CheckInternalVariable_01 test case.

 
Test Execution: 

 01. Init test case
 02. Init WdgM module
 03. Sanity check
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 04. Sanity check
     Check the number of configured CPs for the WdgM_WdgMSupervisedEntity_0 to be equal with
     the predefined expected value.
 05. VP (WDGM.EB.DesignDecision.InternalVariable4, WDGM.EB.TIMEPM.WDGM020432,
            WDGM.EB.TIMEPM.WDGM020470)
     Check WdgM_EB_DMData[DeadlineId].StartTimestampData to be accessible and correctly
     initialized, for each configured deadline supervision.
 06. VP (WDGM.EB.TIMEPM.WDGM020471)
     Check that WdgM_CheckpointReached returns E_OK for the case when
     WdgM_EB_DMData[DeadlineId].StartTimestampData data is correctly stored(bitwise stored).
 07. Set invalid data value for the WdgM_EB_DMData[DMID].StartTimestampData.
 08. VP (WDGM.EB.TIMEPM.WDGM020471)
     Check that WdgM_CheckpointReached returns E_NOT_OK for the case when
     WdgM_EB_DMData[DeadlineId].StartTimestampData data is corrupted(not bitwise stored).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1667</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020470</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1975</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckInternalVariable_06</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>784</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 This test case tests the following aspects regarding
 WdgM_EB_DMData[DeadlineId].StartTimestampDataInv internal data:
 - data accessibility;
 - data consistency.

 Tests data accessibility and data consistency for WdgM_EB_DMData[DeadlineId].StartTimestampDataInv
 internal variables when WdgM is initialized.

 The used testing method is: "Cause-Effect Graphing".
 The cause and the effect are self described above.

 
Test Object: None.
Test Precondition: 

 Same as described for TS_WDGM_CheckInternalVariable_01 test case.

 
Test Execution: 

 01. Init test case
 02. Init WdgM module
 03. Sanity check
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 04. VP (WDGM.EB.TIMEPM.WDGM020432, WDGM.EB.DesignDecision.InternalVariable24)
     Check WdgM_EB_DMData[DeadlineId].StartTimestampDataInv to be accessible and correctly
     initialized, for each configured Deadline.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable24</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1976</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckInternalVariable_07</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>855</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 This test case tests the following aspects regarding WdgM_EB_CPData_[SEName].DeadlineData
 internal data:
 - data accessibility;
 - data consistency:
   - WdgM_CheckpointReached() return E_OK when stored data is OK;
   - WdgM_CheckpointReached() return E_NOT_OK when stored data is corrupted.

 The used testing method is: "Cause-Effect Graphing".
 The cause and the effect are self described above.

 
Test Object: None.
Test Precondition: 

 Same as described for TS_WDGM_CheckInternalVariable_01 test case.

 
Test Execution: 

 01. Init test case
 02. Init WdgM module
 03. Sanity check
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 04. Sanity check
     Check the number of configured CPs for the WdgM_WdgMSupervisedEntity_0 to be equal with
     the predefined expected value.
 05. VP (WDGM.EB.DesignDecision.InternalVariable5, WDGM.EB.TIMEPM.WDGM020432,
            WDGM.EB.TIMEPM.WDGM020470)
     Check WdgM_EB_CPData_[SEName].DeadlineData to be accessible and correctly initialized,
     for each configured Check Point.
 06. VP (WDGM.EB.TIMEPM.WDGM020471)
     Check the WdgM_CheckpointReached return value to be E_OK after the call of
     WdgM_CheckpointReached function for the case when WdgM_EB_CPData_[SEName].DeadlineData
     data is correctly stored(bitwise stored).
 07. Set invalid WdgM_EB_CPData_[SEName].DeadlineData initialization value for all configured
     Check Points of the WdgM_WdgMSupervisedEntity_0.
 08. VP (WDGM.EB.TIMEPM.WDGM020471)
     Check the WdgM_CheckpointReached return value to be E_NOT_OK after the call of
     WdgM_CheckpointReached function for the case when WdgM_EB_CPData_[SEName].DeadlineData
     data is corrupted(not bitwise stored).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1668</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020470</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1977</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckInternalVariable_08</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>961</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 This test case tests the following aspects regarding WdgM_EB_DMData[DeadlineId].MaxCyclesData
 internal data:
 - data accessibility;
 - data consistency.

 The used testing method is: "Cause-Effect Graphing".
 The cause and the effect are self described above.

 
Test Object: None.
Test Precondition: 

 Same as described for TS_WDGM_CheckInternalVariable_01 test case.

 
Test Execution: 

 01. Init test case
 02. Init WdgM module
 03. Sanity check
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 04. VP (WDGM.EB.TIMEPM.WDGM020432,WDGM.EB.DesignDecision.InternalVariable11)
     Check WdgM_EB_DMData[DeadlineId].MaxCyclesData to be accessible and correctly initialized
     for each configured Deadline Supervision.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1674</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1978</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckInternalVariable_09</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>1029</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 This test case tests the following aspects regarding WdgM_EB_InternalGraphData[GraphId].LastCPData
 and WdgM_EB_ExternalGraphData[GraphId].LastCPData internal data:
 - data accessibility;
 - data consistency:
   - WdgM_CheckpointReached() return E_OK when stored data is OK;
   - WdgM_CheckpointReached() return E_NOT_OK when stored data is corrupted.

 The used testing method is: "Cause-Effect Graphing".
 The cause and the effect are self described above.

 
Test Object: None.
Test Precondition: 

 Same as described for TS_WDGM_CheckInternalVariable_01 test case.

 
Test Execution: 

 01. Init test case
 02. Init WdgM module
 03. Sanity check
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 04. Sanity check
     Check the number of configured CPs for each SE to be equal with the predefined
     expected value.
 05. VP (WDGM.EB.DesignDecision.InternalVariable6, WDGM.EB.TIMEPM.WDGM020432,
            WDGM.EB.TIMEPM.WDGM020470)
     Check WdgM_EB_InternalGraphData[GraphId].LastCPData to be accessible and correctly
     initialized for each configured Logical Supervision.
     Check WdgM_EB_ExternalGraphData[GraphId].LastCPData to be accessible and correctly
     initialized for each configured Logical Supervision.
 06. VP (WDGM.EB.TIMEPM.WDGM020471)
     Check the WdgM_CheckpointReached return value to be E_OK after the call of
     WdgM_CheckpointReached function for the case when
     WdgM_EB_InternalGraphData[GraphId].LastCPData is correctly stored(bitwise stored).
     Check the WdgM_CheckpointReached return value to be E_OK after the call of
     WdgM_CheckpointReached function for the case when
     WdgM_EB_ExternalGraphData[GraphId].LastCPData is correctly stored(bitwise stored).
 07. Set invalid WdgM_EB_InternalGraphData[GraphId].LastCPData initialization value for all
     configured Check Points.
     Set invalid WdgM_EB_ExternalGraphData[GraphId].LastCPData initialization value for all
     configured Check Points.
 08. VP (WDGM.EB.TIMEPM.WDGM020471)
     Check the WdgM_CheckpointReached return value to be E_NOT_OK after the call of
     WdgM_CheckpointReached function for the case when
     WdgM_EB_InternalGraphData[GraphId].LastCPData is corrupted(not bitwise stored).
     Check the WdgM_CheckpointReached return value to be E_NOT_OK after the call of
     WdgM_CheckpointReached function for the case when
     WdgM_EB_ExternalGraphData[GraphId].LastCPData is corrupted(not bitwise stored).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable6</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1669</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020470</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1979</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckInternalVariable_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>1154</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 This test case tests the following aspects regarding WdgM_EB_InternalGraphData[GraphId].IsActiveData
 and  WdgM_EB_ExternalGraphData[GraphId].IsActiveData internal data:
 - data accessibility;
 - data consistency:
   - WdgM_CheckpointReached() return E_OK when stored data is OK;
   - WdgM_CheckpointReached() return E_NOT_OK when stored data is corrupted.

 The used testing method is: "Cause-Effect Graphing".
 The cause and the effect are self described above.

 
Test Object: None.
Test Precondition: 

 Same as described for TS_WDGM_CheckInternalVariable_01 test case.

 
Test Execution: 

 01. Init test case
 02. Init WdgM module
 03. Sanity check
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 04. Sanity check
     Check the number of configured CPs for each SE to be equal with the predefined
     expected value.
 05. VP (WDGM.EB.DesignDecision.InternalVariable7, WDGM.EB.TIMEPM.WDGM020432,
            WDGM.EB.TIMEPM.WDGM020470)
     Check WdgM_EB_InternalGraphData[GraphId].IsActiveData to be accessible and correctly
     initialized for each configured Logical Supervision.
     Check WdgM_EB_ExternalGraphData[GraphId].IsActiveData to be accessible and correctly
     initialized for each configured Logical Supervision.
 06. VP (WDGM.EB.TIMEPM.WDGM020471)
     Check the WdgM_CheckpointReached return value to be E_OK after the call of
     WdgM_CheckpointReached function for the case when WdgM_EB_InternalGraphData[GraphId].IsActiveData
     is correctly stored(bitwise stored).
     Check the WdgM_CheckpointReached return value to be E_OK after the call of
     WdgM_CheckpointReached function for the case when WdgM_EB_ExternalGraphData[GraphId].IsActiveData
     is correctly stored(bitwise stored).
 07. Set invalid WdgM_EB_InternalGraphData[GraphId].IsActiveData initialization value for all
     configured Logical Supervisions.
     Set invalid WdgM_EB_ExternalGraphData[GraphId].IsActiveData initialization value for all
     configured Logical Supervisions.
 08. VP (WDGM.EB.TIMEPM.WDGM020471)
     Check the WdgM_CheckpointReached return value to be E_NOT_OK after the call of
     WdgM_CheckpointReached function for the case when WdgM_EB_InternalGraphData[GraphId].IsActiveData
     is corrupted(not bitwise stored).
     Check the WdgM_CheckpointReached return value to be E_NOT_OK after the call of
     WdgM_CheckpointReached function for the case when WdgM_EB_ExternalGraphData[GraphId].IsActiveData
     is corrupted(not bitwise stored).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable7</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1670</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020470</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1980</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckInternalVariable_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>1281</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 This test case tests the following aspects regarding WdgM_EB_InternalGraphData[GraphId].LogicalData
 and WdgM_EB_ExternalGraphData[GraphId].LogicalData internal data:
 - data accessibility;
 - data consistency:
   - WdgM_CheckpointReached() return E_OK when stored data is OK;
   - WdgM_CheckpointReached() return E_NOT_OK when stored data is corrupted.

 The used testing method is: "Cause-Effect Graphing".
 The cause and the effect are self described above.

 
Test Object: None.
Test Precondition: 

 Same as described for TS_WDGM_CheckInternalVariable_01 test case.

 
Test Execution: 

 01. Init test case
 02. Init WdgM module
 03. Sanity Check
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 04. Sanity check
     Check the number of configured CPs for each SE to be equal with the predefined
     expected value.
 05. VP (WDGM.EB.DesignDecision.InternalVariable8, WDGM.EB.TIMEPM.WDGM020432,
            WDGM.EB.TIMEPM.WDGM020470)
     Check WdgM_EB_CPData_[SEName].LogicalData to be accessible and correctly initialized
     for each configured Check Point.
 06. VP (WDGM.EB.TIMEPM.WDGM020471)
     Check the WdgM_CheckpointReached return value to be E_OK after the call of
     WdgM_CheckpointReached function for the case when WdgM_EB_CPData_[SEName].LogicalData
     is correctly stored(bitwise stored).
 07. Set invalid WdgM_EB_CPData_[SEName].LogicalData initialization value for all
     configured Check Points.
 08. VP (WDGM.EB.TIMEPM.WDGM020471)
     Check the WdgM_CheckpointReached return value to be E_NOT_OK after the call of
     WdgM_CheckpointReached function for the case when WdgM_EB_CPData_[SEName].LogicalData
     is corrupted(not bitwise stored).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1671</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020470</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1981</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckInternalVariable_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>1404</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 This test case tests the following aspects regarding WdgM_EB_DMData[DMID].IsActiveData
 internal data:
 - data accessibility;
 - data consistency.

 The used testing method is: "Cause-Effect Graphing".
 The cause and the effect are self described above.

 
Test Object: None.
Test Precondition: 

 Same as described for TS_WDGM_CheckInternalVariable_01 test case.

 
Test Execution: 

 01. Init test case
 02. Init WdgM module
 03. Sanity check
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 04. VP 02 (WDGM.EB.TIMEPM.WDGM020432, WDGM.EB.TIMEPM.WDGM020429,
            WDGM.EB.DesignDecision.InternalVariable9)
     Check WdgM_EB_DMData[DeadlineId].IsActiveData to be accessible and correctly initialized
     for each configured Deadline Supervision.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1672</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020429</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1982</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckInternalVariable_13</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>1474</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 This test case tests the following aspects regarding WdgM_EB_ExtGraphDataSeqPtr[GraphID].GraphDataPtr
  internal data:
 - data accessibility;
 - data consistency:
   - WdgM_CheckpointReached() return E_OK when stored data is OK;
   - WdgM_CheckpointReached() return E_NOT_OK when stored data is corrupted.

 The used testing method is: "Cause-Effect Graphing".
 The cause and the effect are self described above.

 
Test Object: None.
Test Precondition: 

 Same as described for TS_WDGM_CheckInternalVariable_01 test case.

 
Test Execution: 

 01. Init test case
 02. Init WdgM module
 03. Sanity check
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 04. Sanity check
     Check the number of configured CPs for each SE to be equal with the predefined
     expected value.
 05. VP (WDGM.EB.DesignDecision.InternalVariable16, WDGM.EB.TIMEPM.WDGM020432,
            WDGM.EB.TIMEPM.WDGM020470)
     Check WdgM_EB_ExtGraphDataSeqPtr[GraphID]-&gt;GraphDataPtr to be accessible and correctly
     initialized for each configured Logical Supervision.
 06. VP (WDGM.EB.TIMEPM.WDGM020471)
     Check the WdgM_CheckpointReached return value to be E_OK after the call of
     WdgM_CheckpointReached function for the case when
     WdgM_EB_ExtGraphDataSeqPtr[GraphID]-&gt;GraphDataPtr is correctly stored(bitwise stored).
 07. VP (WDGM.EB.TIMEPM.WDGM020471)
     Check the WdgM_CheckpointReached return value to be E_OK for the initial CP.
     When the external graph is activated all the elements in WdgM_EB_ExtGraphDataSeqPtr[GraphID].GraphDataPtr
     are stored to the initial value 0xFF00 (bitwise stored).
 08. Set invalid WdgM_EB_ExtGraphDataSeqPtr[GraphID].GraphDataPtr initialization value for all
     configured Check Points.
 09. VP (WDGM.EB.TIMEPM.WDGM020471)
     Check the WdgM_CheckpointReached return value to be E_NOT_OK after the call of
     WdgM_CheckpointReached function for the case when
     WdgM_EB_ExtGraphDataSeqPtr[GraphID].GraphDataPtr is corrupted(not bitwise stored).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable16</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1679</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020432</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020470</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1983</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>1594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the Checkpoint call
 detects an Alive Supervision error if data corruption occurs for the internal variable
 WdgM_EB_CPData_[SEName].AliveCounterData even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable3)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable3)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the WdgM_CheckpointReached API detects a data corruption --

  07: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_CPData_[SEName].AliveCounterData for a single Supervised Entity / Checkpoint
      that is active with Alive Supervision in the actual WdgM mode.
  08: Call the Checkpoints as specified in the configuration
  09: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable3)
      The Checkpoint call returns E_NOT_OK
  10: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020468,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020468, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
  11: Call the WdgM MainFunction
  12: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable3)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1666</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1984</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>1801</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the MainFunction call
 detects an Alive Supervision error if data corruption occurs for the internal variable
 WdgM_EB_CPData_[SEName].AliveCounterData even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020472, WDGM.EB.DesignDecision.InternalVariable3)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020472, WDGM.EB.DesignDecision.InternalVariable3)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the MainFunction API detects a data corruption --

  07: Call the Checkpoints as specified in the configuration
  08: VP (WDGM.EB.TIMEPM.WDGM020472, WDGM.EB.DesignDecision.InternalVariable3)
      The Checkpoint call returns E_OK
  09: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_CPData_[SEName].AliveCounterData for a single Supervised Entity / Checkpoint
      that is active with Alive Supervision in the actual WdgM mode.
  10: Call the WdgM MainFunction
  11: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020467,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020467, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020467, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020467, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020467, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 34
  12: VP (WDGM.EB.TIMEPM.WDGM020472, WDGM.EB.DesignDecision.InternalVariable3)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020472</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1666</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020467</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1985</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_03a</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>2008</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the Start Checkpoint call
 detects a Deadline Supervision error if data corruption occurs for the internal variable
 WdgM_EB_CPData_[SEName].DeadlineData even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable5)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable5)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the WdgM_CheckpointReached API detects a data corruption --

  07: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_CPData_[SEName].DeadlineData for a single Supervised Entity / Checkpoint
      that is not yet active with Deadline Supervision in the actual WdgM mode before.
  08: Call the Checkpoints as specified in the configuration
  09: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable5)
      The Checkpoint call returns E_NOT_OK
  10: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020468,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020468, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
  11: Call the WdgM MainFunction
  12: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable5)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1668</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1986</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_03b</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>2230</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the Stop Checkpoint call
 detects a Deadline Supervision error if data corruption occurs for the internal variable
 WdgM_EB_CPData_[SEName].DeadlineData even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable5)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable5)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the WdgM_CheckpointReached API detects a data corruption --

  07: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_CPData_[SEName].DeadlineData for a single Supervised Entity / Checkpoint
      that is active with Deadline Supervision in the actual WdgM mode before.
  08: Call the Checkpoints as specified in the configuration
  09: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable5)
      The Checkpoint call returns E_NOT_OK
  10: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020468,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020468, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
  11: Call the WdgM MainFunction
  12: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable5)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1668</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1987</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_04</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>2454</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the MainFunction call
 detects a Deadline Supervision error if data corruption occurs for the internal variable
 WdgM_EB_CPData_[SEName].DeadlineData even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020472, WDGM.EB.DesignDecision.InternalVariable5)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020472, WDGM.EB.DesignDecision.InternalVariable5)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the MainFunction API detects a data corruption --

  07: Call the Checkpoints as specified in the configuration
  08: VP (WDGM.EB.TIMEPM.WDGM020472, WDGM.EB.DesignDecision.InternalVariable5)
      The Checkpoint call returns E_OK
  09: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_CPData_[SEName].DeadlineData for a single Supervised Entity / Checkpoint
      that is active with Deadline Supervision in the actual WdgM mode.
  10: Call the WdgM MainFunction
  11: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020467,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020467, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020467, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020467, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020467, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 34
  12: VP (WDGM.EB.TIMEPM.WDGM020472, WDGM.EB.DesignDecision.InternalVariable5)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020472</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1668</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020467</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1988</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_05a</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>2661</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the Checkpoint call
 detects a Deadline Supervision error if data corruption occurs for the internal variable
 WdgM_EB_CPData_[SEName].LogicalData of the actual Checkpoint even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable8)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable8)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the WdgM_CheckpointReached API detects a data corruption --

  07: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_CPData_[SEName].LogicalData for a single Supervised Entity / Checkpoint
      that is active with Logical Supervision in the actual WdgM mode.
  08: Call the Checkpoints as specified in the configuration
  09: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable8)
      The Checkpoint call returns E_NOT_OK
  10: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020468,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020468, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
  11: Call the WdgM MainFunction
  12: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable8)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1671</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1989</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_05b</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>2868</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the Checkpoint call
 detects a Deadline Supervision error if data corruption occurs for the internal variable
 WdgM_EB_CPData_[SEName].LogicalData of a different Checkpoint of the same graph
 even for the correct call sequence of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable8)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable8)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the WdgM_CheckpointReached API detects a data corruption --

  07: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_CPData_[SEName].LogicalData for a single Supervised Entity / Checkpoint
      of a pre-decessor Checkpoint
      that is active with Logical Supervision in the actual WdgM mode.
  08: Call the Checkpoints as specified in the configuration
  09: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable8)
      The Checkpoint call returns E_NOT_OK
  10: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020468,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020468, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
  11: Call the WdgM MainFunction
  12: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable8)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1671</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1990</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_06</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>3078</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the MainFunction call
 detects a Deadline Supervision error if data corruption occurs for the internal variable
 WdgM_EB_CPData_[SEName].LogicalData even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020472, WDGM.EB.DesignDecision.InternalVariable8)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020472, WDGM.EB.DesignDecision.InternalVariable8)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the MainFunction API detects a data corruption --

  07: Call the Checkpoints as specified in the configuration
  08: VP (WDGM.EB.TIMEPM.WDGM020472, WDGM.EB.DesignDecision.InternalVariable8)
      The Checkpoint call returns E_OK
  09: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_CPData_[SEName].LogicalData for a single Supervised Entity / Checkpoint
      that is active with Logical Supervision in the actual WdgM mode.
  10: Call the WdgM MainFunction
  11: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020467,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020467, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020467, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020467, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020467, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 34
  12: VP (WDGM.EB.TIMEPM.WDGM020472, WDGM.EB.DesignDecision.InternalVariable8)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020472</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1671</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020467</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1991</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_07</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>3286</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the Checkpoint call
 detects a Deadline Supervision error if data corruption occurs for the internal variable
 WdgM_EB_DMData[DeadlineId].StartTimestampData even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable4,
  WDGM.EB.DesignDecision.InternalVariable4)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable4,
  WDGM.EB.DesignDecision.InternalVariable24)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the WdgM_CheckpointReached API detects a data corruption --

  07: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_DMData[DeadlineId].StartTimestampData for a single Supervised Entity / Checkpoint
      that is active with Deadline Supervision in the actual WdgM mode.
  08: Call the Checkpoints as specified in the configuration
  09: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable4,
  WDGM.EB.DesignDecision.InternalVariable24)
      The Checkpoint call returns E_NOT_OK
  10: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020468,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020468, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
  11: Call the WdgM MainFunction
  12: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable4,
  WDGM.EB.DesignDecision.InternalVariable24)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1667</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable24</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1992</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_08</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>3529</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the Checkpoint call
 detects a Deadline Supervision error if data corruption occurs for the internal variable
 WdgM_EB_DMData[DeadlineId].MaxCyclesData even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020471)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020471)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the WdgM_CheckpointReached API detects a data corruption --

  07: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_DMData[DeadlineId].MaxCyclesData for a single Supervised Entity / Checkpoint
      that is active with Deadline Supervision in the actual WdgM mode.
  08: Call the Checkpoints as specified in the configuration
  09: VP (WDGM.EB.TIMEPM.WDGM020471)
      The Checkpoint call returns E_NOT_OK
  10: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020468,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020468, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
  11: Call the WdgM MainFunction
  12: VP (WDGM.EB.TIMEPM.WDGM020471)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1993</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_09</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>3757</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the MainFunction call
 detects a Deadline Supervision error if data corruption occurs for the internal variable
 WdgM_EB_DMData[DeadlineId].MaxCyclesData even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020472)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020472)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the MainFunction API detects a data corruption --

  07: Call the Checkpoints as specified in the configuration
  08: VP (WDGM.EB.TIMEPM.WDGM020472)
      The Checkpoint call returns E_OK
  09: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_DMData[DeadlineId].MaxCyclesData for a single Supervised Entity / Checkpoint
      that is active with Deadline Supervision in the actual WdgM mode.
  10: Call the WdgM MainFunction
  11: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020467,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020467, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020467, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020467, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020467, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 34
  12: VP (WDGM.EB.TIMEPM.WDGM020472)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020472</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020467</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1994</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>3971</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the Checkpoint call
 detects a Deadline Supervision error if data corruption occurs for the internal variable
 WdgM_EB_DMData[DeadlineId].IsActiveData even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020471)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020471)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the WdgM_CheckpointReached API detects a data corruption --

  07: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_DMData[DeadlineId].IsActiveData for a single Supervised Entity / Checkpoint
      that is active with Deadline Supervision in the actual WdgM mode.
  08: Call the Checkpoints as specified in the configuration
  09: VP (WDGM.EB.TIMEPM.WDGM020471)
      The Checkpoint call returns E_NOT_OK
  10: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020468,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020468, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
  11: Call the WdgM MainFunction
  12: VP (WDGM.EB.TIMEPM.WDGM020471)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1995</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>4198</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the MainFunction call
 detects a Deadline Supervision error if data corruption occurs for the internal variable
 WdgM_EB_DMData[DeadlineId].IsActiveData even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020472)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020472)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the MainFunction API detects a data corruption --

  07: Call the Checkpoints as specified in the configuration
  08: VP (WDGM.EB.TIMEPM.WDGM020472)
      The Checkpoint call returns E_OK
  09: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_DMData[DeadlineId].IsActiveData for a single Supervised Entity / Checkpoint
      that is active with Deadline Supervision in the actual WdgM mode.
  10: Call the WdgM MainFunction
  11: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020467,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020467, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020467, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020467, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020467, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 34
  12: VP (WDGM.EB.TIMEPM.WDGM020472)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020472</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020467</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1996</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_12_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>4411</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the Checkpoint call
 detects a Logical Supervision error if data corruption occurs for the internal variable
 WdgM_EB_ExternalGraphData[GraphId].IsActiveData even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable7)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable7)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the WdgM_CheckpointReached API detects a data corruption --

  07: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_ExternalGraphData[GraphId].IsActiveData for a single Supervised Entity / Checkpoint
      that is active with Logical Supervision in the actual WdgM mode.
  08: Call the Checkpoints as specified in the configuration
  09: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable7)
      The Checkpoint call returns E_NOT_OK
  10: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020468,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020468, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
  11: Call the WdgM MainFunction
  12: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable7)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1676</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1997</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_12_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>4638</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the Checkpoint call
 detects a Logical Supervision error if data corruption occurs for the internal variable
 WdgM_EB_InternalGraphData[GraphId].IsActiveData even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable7)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable7)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the WdgM_CheckpointReached API detects a data corruption --

  07: Call the Checkpoints as specified in the configuration
  08: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_InternalGraphData[GraphId].IsActiveData for a single Supervised Entity / Checkpoint
      that is active with Logical Supervision in the actual WdgM mode.
  09: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable7)
      The Checkpoint call returns E_NOT_OK
  10: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020468,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020468, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
  11: Call the WdgM MainFunction
  12: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable7)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable7</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1670</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1998</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_13_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>4867</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the Checkpoint call
 detects a Logical Supervision error if data corruption occurs for the internal variable
 WdgM_EB_ExternalGraphData[GraphId].LastCPData even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable6)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable6)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the WdgM_CheckpointReached API detects a data corruption --

  07: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_ExternalGraphData[GraphId].LastCPData for a single Supervised Entity / Checkpoint
      that is active with Logical Supervision in the actual WdgM mode.
  08: Call the Checkpoints as specified in the configuration
  09: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable6)
      The Checkpoint call returns E_NOT_OK
  10: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020468,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020468, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
  11: Call the WdgM MainFunction
  12: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable6)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1675</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1999</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_13_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>5094</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the Checkpoint call
 detects a Logical Supervision error if data corruption occurs for the internal variable
 WdgM_EB_InternalGraphData[GraphId].LastCPData even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable6)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable6)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the WdgM_CheckpointReached API detects a data corruption --

  07: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_InternalGraphData[GraphId].LastCPData for a single Supervised Entity / Checkpoint
      that is active with Logical Supervision in the actual WdgM mode.
  08: Call the Checkpoints as specified in the configuration
  09: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable6)
      The Checkpoint call returns E_NOT_OK
  10: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020468,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020468, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
  11: Call the WdgM MainFunction
  12: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable6)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable6</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1669</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2000</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtection_14</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariables/source/application/WdgM_ImpTest_05_InternalVariables.c</sourcefile>
      <sourceline>5323</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the Checkpoint call
 detects a Logical Supervision error if data corruption occurs for the internal variable
 WdgM_EB_ExtGraphDataSeqPtr[GraphID].GraphDataPtr even for the correct call sequence
 of the Checkpoints.

 The used testing method is: not applicable here (only fault-injection)

 
Test Object: None.
Test Precondition: 

  Configuration: see testcase TS_WDGM_CheckInternalVariable_01

  - WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

 
Test Execution: 

  01: Init test case / WdgM to ensure pre-conditions
      pre-configure GetElapsedTime callout stub to always return
      correct expected elapsed time values
  02: Sanity Check: Check pre-conditions
      - Global Supervision Status equals WDGM_GLOBAL_STATUS_OK
      - WdgM mode equals

  -- First check good case for several MainFunction calls --

Repeat the following steps 03 - 05 several times to ensure good case:
  03: Call the Checkpoints as specified in the configuration
  04: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable13)
      The Checkpoint call returns E_OK
  05: Call the WdgM MainFunction
  06: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable6)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_OK

  -- Now check that the WdgM_CheckpointReached API detects a data corruption --

  07: fault-injection: Simulate a bit-flip within the internal variable
      WdgM_EB_ExtGraphDataSeqPtr[GraphID].GraphDataPtr for a single Supervised Entity / Checkpoint
      that is active with Logical Supervision in the actual WdgM mode.
  08: Call the Checkpoints as specified in the configuration
  09: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable16)
      The Checkpoint call returns E_NOT_OK
  10: VP (WDGM.EB.TIMEPM.WDGM020129_Conf,WDGM.EB.TIMEPM.WDGM020466,WDGM.EB.TIMEPM.WDGM020468,
          WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p0
         Dem called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
          WDGM.EB.TIMEPM.WDGM020468, WDGM.EB.TIMEPM.WDGM020129_Conf):
           EventId     = WDGM_E_DATA_CORRUPTION
           EventStatus = DEM_EVENT_STATUS_FAILED
         No Det called
      for permutation: p1
         No Dem called (WDGM.EB.TIMEPM.WDGM020466,
                        WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1)
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
      for permutation: p2, p4
         No Dem called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
         No Det called (WDGM.EB.TIMEPM.WDGM020466, WdgM.EB.ReportToDem.DataCorruption.1)
      for permutation: p3
         No Dem called
         WdgMDetCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020466,
           WDGM.EB.TIMEPM.WDGM020468, WdgM.EB.ReportToDem.DataCorruption.1,
           WDGM.EB.TIMEPM.WDGM020109_Conf):
             ApiId   = WDGM_SID_CHECKPOINT_REACHED
             ErrorId = 34
  11: Call the WdgM MainFunction
  12: VP (WDGM.EB.TIMEPM.WDGM020471, WDGM.EB.DesignDecision.InternalVariable6)
      The Global Supervision Status equals WDGM_GLOBAL_STATUS_EXPIRED
  13: Sanity Check:
      WdgM_GetFirstExpiredSEID() returns the SEId from step 07

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable16</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1679</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020129_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2001</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_CheckDataProtectionRedundant_09</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariablesRedundant/source/application/WdgM_ImpTest_05_InternalVariablesRedundant.c.m4</sourcefile>
      <sourceline>121</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test-case verifies the WdgM behavior when internal data WdgM_EB_SatelliteWdgIfSetModeFailed
  is simulated as being corrupted.

Test Object: None.
Test Precondition: 
  WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)

Test Execution: 
  01. Initialize test case
  02. Initialize WdgM module
  03. Reset stub variables
  04. Change mode to WdgMMode_1
  05. Call MainFunction on master core to switch the mode
  06. Simulate WdgIf_SetMode() fails in the context of the satellite core.
  07. Call MainFunction on master core to detect the failed mode switch.
  08. Check reported error because of data corruption
  09. Reset flag for corrupted data

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020130_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020307</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2002</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtectionRedundant_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariablesRedundant/source/application/WdgM_ImpTest_05_InternalVariablesRedundant.c.m4</sourcefile>
      <sourceline>203</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
  This test-case verifies the WdgM behavior when internal data WdgM_EB_SELocalStatus_Core0[0U]
  is simulated as being corrupted.

Test Object: None.
Test Precondition: 
  WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)

Test Execution: 
  01. Initialize test case
  02. Initialize WdgM module
  03. Reset stub variables
  04. Call CheckpointReached for SE_0
  05. Set a new mode
  06. Simulate corrupted data with a bit-flip
  07. Check 4 Dem/Det errors for corrupted Core1-&gt;WdgM_EB_CoreSwitchMode
      Error1 call stack: MainFunction -&gt; WdgM_EB_SetLocalStatus() -&gt; store error for different SELocalStatus
      Error2 call stack: MainFunction -&gt; WdgM_EB_SetLocalStatus() -&gt; WdgM_EB_SetSELocalStatus() -&gt; store error for different SELocalStatus
      Error3 call stack: MainFunction -&gt; WdgM_EB_SetGlobalStatus() -&gt; WdgM_EB_GetNewGlobalStatus() -&gt; store error for different SELocalStatus
      Error4 call stack: MainFunction -&gt; WdgM_EB_CheckModeSwitchRequest() -&gt; WdgM_EB_SetMode() -&gt; store error for different SELocalStatus
  08. Reset corrupted data

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020130_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020307</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2003</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtectionRedundant_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariablesRedundant/source/application/WdgM_ImpTest_05_InternalVariablesRedundant.c.m4</sourcefile>
      <sourceline>285</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test-case verifies the WdgM performs a reset after WdgM_EB_SatelliteWdgIfSetModeFailed is set to true
  in the context of a satellite core.

Test Object: None.
Test Precondition: 
  WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)

Test Execution: 
  01. Initialize test case
  02. Initialize WdgM module
  03. Reset stub variables
  04. Change mode to WdgMMode_1
  05. Call MainFunction on master core to switch the mode
  06. Simulate WdgIf_SetMode() fails in the context of the satellite cores (Core 1 and Core 2)
  07. Verify if reset was performed after mode switch failed on both Core 1 and Core 2
  08. Try to set another mode after previous attempt failed on satellite cores
  09. Verify reset is performed because WdgM_EB_SatelliteWdgIfSetModeFailed is true

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020130_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020307</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2004</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtectionRedundant_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariablesRedundant/source/application/WdgM_ImpTest_05_InternalVariablesRedundant.c.m4</sourcefile>
      <sourceline>372</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
  This test-case verifies the WdgM behavior when internal data WdgM_EB_Satellite_Core[!"num:i($index_i)"!]_AliveCounter
  is simulated as being corrupted.

Test Object: None.
Test Precondition: 
  WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)

Test Execution: 
  01. Initialize test case
  02. Initialize WdgM module
  03. Reset stub variables
  04. Reset the callout data
  05. Call MainFunction on all cores to synchronize the counters
  06. Simulate corrupted data with a bit-flip
  VP 07. Check 4 Dem/Det errors for corrupted Core1-&gt;WdgM_EB_CoreSwitchMode
      Error1 call stack: WdgM_1_CORE_1_MainFunction() -&gt; Read error for WdgM_EB_Satellite_Core1_AliveCounter value
      Error2 call stack: WdgM_1_CORE_2_MainFunction() -&gt; Read error for WdgM_EB_Satellite_Core2_AliveCounter value
      Error3 call stack: MainFunction -&gt; WdgM_EB_CheckSatelliteAliveCounter() -&gt; Read error for WdgM_EB_Satellite_Core1_AliveCounter value
      Error4 call stack: MainFunction -&gt; WdgM_EB_CheckSatelliteAliveCounter() -&gt; Read error for WdgM_EB_Satellite_Core2_AliveCounter value
  VP 08. For permutation p4: Check if the callout was sent. Due to the testing Callout function design only the last callout CoreId is stored, but the number of
      calls is stored properly.
      For permutation p5: Check if the callout was sent.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020130_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020469</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>687</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020307</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020455</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>688</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>683</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable36</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1699</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable37</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2005</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtectionRedundant_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariablesRedundant/source/application/WdgM_ImpTest_05_InternalVariablesRedundant.c.m4</sourcefile>
      <sourceline>483</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test-case verifies the WdgM behavior when internal data WdgM_EB_CoreSwitchMode_Core0
  is simulated as being corrupted.

Test Object: None.
Test Precondition: 
  WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)

Test Execution: 
  01. Initialize test case
  02. Initialize WdgM module
  03. Reset Det and Dem variables
  04. Get the active mode
  05. Check no error is reported
  06. Simulate corrupted data
  07. Try to get the current active mode
  08. Check reported error because of corrupted data
  09. Reset corrupted WdgM data

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020130_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020307</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020486</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>722</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable35</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2006</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtectionRedundant_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariablesRedundant/source/application/WdgM_ImpTest_05_InternalVariablesRedundant.c.m4</sourcefile>
      <sourceline>597</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
  This test-case verifies the WdgM behavior when internal data WdgM_EB_ExpiredSEIDsCounter_Core0
  is simulated as being corrupted.

Test Object: None.
Test Precondition: 
  WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)

Test Execution: 
  01. Initialize test case
  02. Initialize WdgM module
  03. Reset Det and Dem variables
  04. Get total number of expired supervised entities
  05. Check no error is reported
  06. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK
  07. Call MainFunction on all cores to switch the state from WDGM_LOCAL_STATUS_OK to
      WDGM_LOCAL_STATUS_EXPIRED for tested SE.
  08. Verify that the local state of the SE has changed to WDGM_LOCAL_STATUS_EXPIRED
  09. Simulate () returns E_NOT_OK because of corrupted WdgM_EB_ExpiredSEIDsCounter_Core0 in WdgM_EB_ResetAllExpiredSEIDs()
  10. Call WdgM_GetAllExpiredSEID() API in order to retrieve all the expired supervised entities
  12. Verify that all expired supervised entities have been properly retrieved
  13. Simulate a bit-flip for WdgM_EB_ExpiredSEIDsCounter
  14. Retrieve all expired SEs
  15. Check reported error because of corrupted data
  16. Reset corrupted WdgM data

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020130_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020307</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020475</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable35</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2007</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtectionRedundant_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariablesRedundant/source/application/WdgM_ImpTest_05_InternalVariablesRedundant.c.m4</sourcefile>
      <sourceline>754</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test-case verifies the WdgM behavior when internal data WdgM_EB_ExpiredSEIDs_Core0[0U]
  is simulated as being corrupted.

Test Object: None.
Test Precondition: 
  WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)

Test Execution: 
  01. Initialize test case
  02. Initialize WdgM module
  03. Reset Det/Dem variables
  04. Get total number of expired supervised entities
  05. Check no error is reported
  06. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK
  07. Call MainFunction on all cores to switch the state from WDGM_LOCAL_STATUS_OK to
      WDGM_LOCAL_STATUS_EXPIRED for tested SE.
  08. Verify that the local state of the SE has changed to WDGM_LOCAL_STATUS_EXPIRED
  09. Simulate a bit-flip for WdgM_EB_ExpiredSEIDs
  10. Call WdgM_GetAllExpiredSEID() API in order to retrieve all the expired supervised entities
  11. Check reported error because of corrupted data.
  12. Reset corrupted data

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020130_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020307</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable35</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2008</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtectionRedundant_04</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariablesRedundant/source/application/WdgM_ImpTest_05_InternalVariablesRedundant.c.m4</sourcefile>
      <sourceline>890</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test-case verifies the WdgM behavior when internal data WdgM_EB_SELocalStatus_Core1[0U]
  is simulated as being corrupted.

Test Object: None.
Test Precondition: 
  WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)

Test Execution: 
  01. Simulate execution context on core 1
  02. Initialize test case
  03. Initialize WdgM module
  04. Reset Det/Dem variables
  05. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK
  06. Call WdgM_CheckpointReached with valid arguments only for SE_1
  07. Call the main function to switch SE_0 local status to EXPIRED
  08. Verify the local status of SE_1 is WDGM_LOCAL_STATUS_OK
  09. Check no error is reported
  10. Simulate corrupted data by bit-flip on Core1
  11. Call WdgM_CheckpointReached with valid arguments only for SE_1
  12. Check Dem/Det error because of corrupted data.
  13. Call the main function on the Master WdgM instance to switch SE_1 local status to EXPIRED
  14. Verify the local status of SE_1 is EXPIRED
  15. Check Dem/Det error for corrupted Core1-&gt;WdgM_EB_SELocalStatus (corresponding to WdgMSupervisedEntity_1).
      Error call stack: MainFunction -&gt; WdgM_EB_SetGlobalStatus -&gt; WdgM_EB_GetNewGlobalStatus -&gt; store error
  16. Call MainFunction on satellite cores only
  17. Check 2 Dem/Det errors for corrupted Core1-&gt;WdgM_EB_SELocalStatus (corresponding to WdgMSupervisedEntity_1).
      Error 1 call stack: MainFunction -&gt; WdgM_EB_SetLocalStatus -&gt; store error
      Error 2 call stack: MainFunction -&gt; WdgM_EB_SetLocalStatus -&gt; WdgM_EB_SetSELocalStatus -&gt; store error
  18. Reset corrupted data by bit-flip

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020130_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020307</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable35</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2009</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtectionRedundant_05</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariablesRedundant/source/application/WdgM_ImpTest_05_InternalVariablesRedundant.c.m4</sourcefile>
      <sourceline>1102</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
  This test-case verifies the WdgM behavior when internal data WdgM_EB_CoreSwitchMode_Core0
  and WdgM_EB_InitStatus_Core0 are simulated as being corrupted.

Test Object: None.
Test Precondition: 
  WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)

Test Execution: 
  01. Simulate execution context on core 1
  02. Initialize test case
  03. Reset Stub variables
  04. Initialize WdgM module
  05. Trigger one more MainFunction to wait for the slave cores to switch mode (WdgMMasterWaitSlaveModeSwitch = 1)
  06. Simulate corrupted data by bit-flip
  07. Call main function on all cores
  08. Verify that Reset is triggered 2 times because a slave WdgM instance has a different mode and then a different init status
  09. Check 2 Dem/Det errors for corrupted Core1-&gt;WdgM_EB_CoreSwitchMode
      Error call stack: MainFunction -&gt; WdgM_EB_ModeSwitchHandling -&gt; store error for different satellite mode and different satellite init status
  10. Reset corrupted data

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020130_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020307</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020476</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020477</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020478</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>725</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020479</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>726</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable35</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2010</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtectionRedundant_06</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariablesRedundant/source/application/WdgM_ImpTest_05_InternalVariablesRedundant.c.m4</sourcefile>
      <sourceline>1212</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test-case verifies the WdgM behavior when internal data WdgM_EB_ExpiredSEIDsCounter_Core0
  is simulated as being corrupted.

Test Object: None.
Test Precondition: 
  WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)

Test Execution: 
  01. Initialize test case
  02. Initialize WdgM module
  03. Reset Det/Dem variables
  04. Get total number of expired supervised entities
  05. Check no error is reported
  06. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK
  07. Simulate corrupted data
  08. Call MainFunction on all cores to switch the state from WDGM_LOCAL_STATUS_OK to
      WDGM_LOCAL_STATUS_EXPIRED for tested SE
  09. Check reported errors by corrupted data
  10. Reset corrupted data

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020130_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020307</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable35</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2011</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtectionRedundant_07</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariablesRedundant/source/application/WdgM_ImpTest_05_InternalVariablesRedundant.c.m4</sourcefile>
      <sourceline>1334</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
  This test-case verifies the WdgM behavior when internal data WdgM_EB_IsExpiredSEIdSet
  is simulated as being corrupted.

Test Object: None.
Test Precondition: 
  WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)

Test Execution: 
  01. Initialize test case
  02. Initialize WdgM module
  03. Reset Det/Dem stub variables
  04. Get total number of expired supervised entities
  05. Check no error is reported
  06. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK
  07. Simulate corrupted data
  08. Call MainFunction on all cores to switch the state from WDGM_LOCAL_STATUS_OK to
      WDGM_LOCAL_STATUS_EXPIRED for tested SE
  09. Check reported errors corresponding to the following call stacks:
      Error call stack: Core0 and Core1 MainFunction() -&gt; WdgM_EB_SetLocalStatus() -&gt; WdgM_EB_SetSELocalStatus() -&gt; WdgM_EB_StoreExpiredSEID()
  10. Reset corrupted data

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020130_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020307</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable35</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2012</internalId></specobject>
    <specobject>
      <id>TS_WDGM_CheckDataProtectionRedundant_08</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_05_InternalVariablesRedundant/source/application/WdgM_ImpTest_05_InternalVariablesRedundant.c.m4</sourcefile>
      <sourceline>1457</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test-case verifies the WdgM behavior when internal data WdgM_EB_ExpiredSEIDsCounter_Core0
  is simulated as being corrupted.

Test Object: None.
Test Precondition: 
  WdgM is initialized in mode WdgMMode_0 (initial WdgM mode)
  SE0 and SE3 mapped to Core0
  SE1 mapped to Core1

Test Execution: 
  01. Initialize test case
  02. Initialize WdgM module
  03. Reset Det and Dem variables
  04. Get total number of expired supervised entities
  05. Check no error is reported
  06. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK
  07. Call MainFunction on all cores to switch the state from WDGM_LOCAL_STATUS_OK to
      WDGM_LOCAL_STATUS_EXPIRED for tested SE.
  08. Verify that the local state of the SE0 (Core0) and SE1 (Core1) has changed to WDGM_LOCAL_STATUS_EXPIRED.
      SE3 (Core0) expires only after 2 cycles.
  09. Simulate bit-flip for corrupted WdgMSupervisedEntity_0
  10. Call MF on Core0 only
  11. Check that SE3 (mapped to Core0) also expired after another MF cycle
  12. Call WdgM_GetAllExpiredSEID() API in order to retrieve all the expired supervised entities
  13. Check that SE3 is the first expired SE mapped to Core0, because SE0 was corrupted and not stored as expired
  14. Check reported error because of corrupted data
  15. Reset corrupted WdgM data

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.DataCorruption.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020130_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020307</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020473</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020475</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable35</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2013</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_ImpTest_0601_TimE_DetDem</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_06_TimE01/source/application/WdgM_ImpTest_06_TimE01.c.m4</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check that if the callouts for Det reporting is configured, then
instead of reporting to Det these callouts are executed.

This test and all sub-sequent tests are
executed with the following configuration permutations:

   Parameter / Permutation      |    p0   |    p1   |
=====================================================
WdgMDevErrorDetect              | true    | true    |
WdgMSupervisionReportToDem      | DEM     | DET     |
WdgMSetModeReportToDem          | DEM     | DET     |
WdgMImproperCallerReportToDem   | DEM     | DET     |
WdgMDefensiveBehavior           | true    | true    |
------- The following parameters are constant ------
WdgMImproperCallerDemDetErrId   |  -      | 32      |


Test Object: None.
Test Precondition: 
 WdgM initialized
 Parameter WdgMDetCallout is enabled and configured (WDGM020109_Conf).
 Parameter WdgMDemCallout is enabled and configured (WDGM020110_Conf).

Test Execution: 

  01: Call WdgM_SetMode with invalid caller id (valid mode) and check that
      E_NOT_OK is returned
  02: VP
      For permutation p0:
        DEM stub is called with the following parameters:
          EventId     = WDGM_E_IMPROPER_CALLER
          EventStatus = DEM_EVENT_STATUS_FAILED
      For permutation p1 (WDGM.EB.TIMEPM.WDGM020109_Conf, WDGM.EB.TIMEPM.WDGM020302):
        Configured DET callout was called instead of DET with the following parameters:
          ApiId   = 0x03U
          ErrorId = 32
  03: VP (WDGM.EB.TIMEPM.WDGM020302)
      For permutation p0: Check that DET is not notified of any error.
      For permutation p1: Check that DET and DEM are not notified of any error.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020302</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>637</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2014</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE02/source/application/WdgM_ImpTest_07_TimE02.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests if an initialization request is correctly applied together with a mode switch request
 during the next MainFunction call in case the configuration parameter
 WdgMGetExpectedInitStateCallout is disabled.

 Global state transition table:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   | Initial Global state / status | Final Global state / status   |
 =================================================================================================
 1        | WdgM Init request    | WDGM_NOT_INITIALIZED /        | WDGM_INIT_PENDING/            |
          | (execution step 04)  | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_DEACTIVATED|
 -------------------------------------------------------------------------------------------------
 2        | WdgM Mode Switch req | WDGM_INIT_PENDING /           | WDGM_PRE_MODE_CHANGE_PENDING /|
          | (execution step 05)  | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_DEACTIVATED|
 -------------------------------------------------------------------------------------------------
 3        |WdgM_MainFunction call| WDGM_PRE_MODE_CHANGE_PENDING /| WDGM_OK_MODE_NOT_PENDING /    |
          | (execution step 07)  |WDGM_GLOBAL_STATUS_DEACTIVATED | WDGM_GLOBAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------

 Note: Only the WdgM Global status is available to debug. Therefore in case the Global status is
      WDGM_GLOBAL_STATUS_DEACTIVATED a call to the enumerated function is equivalent with the
      one of the enumerated pending state, as follow:
       - a call to WdgM_Init function is equivalent with the WDGM_INIT_PENDING Global state.
       - a successful call to WdgM_SetMode function with a mode different than the mode configured
       within the WdgMInitialMode configuration parameter is equivalent with the
       WDGM_PRE_MODE_CHANGE_PENDING Global state if the Global state is WDGM_INIT_PENDING.

 The testing method used is: "State based tests".
 The following global state transition graph is used: 1-&gt;2-&gt;3.

 This test and all sub-sequent tests are executed with the following configuration permutations:

 Permutation table:
 Parameter / Permutation             | p0      | p1      |
 =========================================================
 WdgMDevErrorDetect                  | true    | false   |

 Parameter / Permutation Independent | px      |
 ===============================================
 WdgMSupervisorCallouts              | false   |
 WdgMOffModeEnabled                  | true    |

 Note: all the other permutation parameters which are not mentioned are set to false/DISABLE.
 Reason: Those parameters are not relevant for this test case.

 
Test Object: None.
Test Precondition: 

 WdgM is Deactivated.
 The new requested mode at initialization is different than the configured initialization mode.
 As described into the Permutation table.
 The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4
  WdgMSupervisedEntity_1: Checkpoints: CP1_1

Modes and configured WdgMTriggers:
                    ConfigName  TriggerCondition  TriggerMode  DeviceIndex
                    |             |                |               |
  WdgMMode_0:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_1:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5

Modes and configured parameters for WdgMSupervisedEntity_0:
  WdgMMode_0:
    WdgMModeId: 0
    WdgMExpiredSupervisionCycleTol        5
    WdgMAliveSupervision_0/1/2/3:
      WdgMExpectedAliveIndications:  1
      WdgMMaxMargin:                 0
      WdgMMinMargin:                 0
      WdgMSupervisionReferenceCycle: 2
  WdgMMode_1:
    unused.

Modes and configured parameters for WdgMSupervisedEntity_1:
  WdgMMode_0:
    unused.
  WdgMMode_1:
    WdgMModeId: 1
    WdgMExpiredSupervisionCycleTol        1
    WdgMAliveSupervision_0/1/2/3:
      WdgMExpectedAliveIndications:  65535
      WdgMMaxMargin:                 0
      WdgMMinMargin:                 0
      WdgMSupervisionReferenceCycle: 1

 
Test Execution: 

 01: Initialize test case.
 02: De-Initialize WdgM module.
 03: Sanity check
     Check preconditions:
     - the requested new mode is different then the configured initialization mode;
     - WdgM global state is Deactivated.
 04: Send WdgM initialization request. This action corresponds to changing WdgM state
     to WDGM_INIT_PENDING.
 05: VP (WDGM.EB.TIMEPM.WDGM020400)
     Send WdgM Mode Switch request with correct caller ID and check WdgM_SetMode return value
     to be E_OK. This action corresponds to changing WdgM state to WDGM_PRE_MODE_CHANGE_PENDING.
 06: VP (WDGM.EB.TIMEPM.WDGM020400, WDGM.EB.TIMEPM.WDGM020403)
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_DEACTIVATED.
 07: Call WdgM_MainFunction.
 08: VP (WDGM.EB.TIMEPM.WDGM020403, WDGM.EB.TIMEPM.WDGM020410, WDGM.EB.TIMEPM.WDGM020428,
         WDGM.EB.TIMEPM.WDGM020400)
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 09  VP (WDGM.EB.TIMEPM.WDGM020400, WDGM.EB.TIMEPM.WDGM020410)
     Check that WdgM mode switch is performed by the MainFunction call.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020410</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2015</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckModeSwitch_SupervisorDisabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE02/source/application/WdgM_ImpTest_07_TimE02.c</sourcefile>
      <sourceline>239</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests if the WdgM_SetMode returns E_NOT_OK and NO Mode Switch Request is set and
 no Mode Switch is processed by the next main function call in case the configuration parameter
 WdgMGetExpectedWdgMModeCallout is not used and the Global state is WDGM_NOT_INITIALIZED,
 the WdgM is de-initialized AND NO Initialization Request is active.

 The testing method used is: "Cause-Effect Graphing".
 The cause and effect are self described above.

 
Test Object: None.
Test Precondition: 

 As described into the Permutation table from the 
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.
 WdgM is Deactivated.

 
Test Execution: 

 01: Initialize test case.
 02: De-Initialize WdgM module.
 03: Sanity check.
     Check preconditions:
     - Check WdgM Global status to be DEACTIVATED.
     - Get and store the mode before sending mode switch request.
 04: VP (WDGM.EB.TIMEPM.WDGM020457)
     Send WdgM Mode Switch request with correct caller ID and check WdgM_SetMode return value
     to be E_NOT_OK. This correspond to Transition 21:
     WDGM_GLOBAL_STATUS_DEACTIVATED -&gt; WDGM_GLOBAL_STATUS_DEACTIVATED.
 05: Call WdgM_MainFunction.
 06: VP (WDGM.EB.TIMEPM.WDGM020457)
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_DEACTIVATED.
 07  VP (WDGM.EB.TIMEPM.WDGM020457)
     Check that no WdgM mode switch is performed by the MainFunction call.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020457</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>643</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2016</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckModeSwitch_SupervisorDisabled_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE02/source/application/WdgM_ImpTest_07_TimE02.c</sourcefile>
      <sourceline>348</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests the following aspects:
 1. Tests if an initialization request is correctly applied without an additional mode switch
 request during the next Mainfunction call in case the configuration parameter
 WdgMGetExpectedInitStateCallout is disabled.
 2. Tests if a mode switch requests returns E_NOT_OK and is not applied during next MainFunction
 in case the WdgM Global Supervision Status is EXPIRED or STOPPED and the configuration parameter
 WdgMGetExpectedInitStateCallout is disabled.

 The testing method is a combination between the "State based tests" method and
 the "Cause-Effect Graphing" method.
 The result is that the test is executed in the following sequence: 1-&gt;2-&gt;3-&gt;4(see
 the sequence table bellow) for each permutation(see the permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.).

 Sequence table:
 --------------------------------------------------------------------------------------------------
 Seq. ID| Transition Trigger    | Initial Global state /status   | Final Global state / status    |
 ==================================================================================================
 1      |WdgM Initialization    | WDGM_NOT_INITIALIZED /         | WDGM_INIT_PENDING /            |
        |(execution step 03)    | WDGM_GLOBAL_STATUS_DEACTIVATED | WDGM_GLOBAL_STATUS_DEACTIVATED |
 --------------------------------------------------------------------------------------------------
 2      |WdgM_MainFunction call | WDGM_INIT_PENDING /            | WDGM_OK_MODE_NOT_PENDING /     |
        |(execution step 04)    | WDGM_GLOBAL_STATUS_DEACTIVATED | WDGM_GLOBAL_STATUS_OK          |
 --------------------------------------------------------------------------------------------------
 3      |WdgM_MainFunction calls| WDGM_OK_MODE_NOT_PENDING /     | WDGM_GLOBAL_STATUS_EXPIRED /   |
        |(execution step 07)    | WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_EXPIRED     |
 --------------------------------------------------------------------------------------------------
 4      |WdgM_MainFunction calls| WDGM_GLOBAL_STATUS_EXPIRED /   | WDGM_GLOBAL_STATUS_STOPPED /   |
        |(execution step 12)    | WDGM_GLOBAL_STATUS_EXPIRED     | WDGM_GLOBAL_STATUS_STOPPED     |
 --------------------------------------------------------------------------------------------------

 Note: Over the test sequence the WdgM mode doesn't change and is equal to
       WdgMInitialMode  configured mode and is set at initialization step.

 
Test Object: None.
Test Precondition: 

 As described into the Sequence table above and into the Permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.
 WdgM is Deactivated.

 
Test Execution: 

 01: Initialize test case.
 02: De-Initialize WdgM.
 03: Send Initialization request.
 04: Consume initialization request.
 05: VP (WDGM.EB.TIMEPM.WDGM020403, WDGM.EB.TIMEPM.WDGM020409, WDGM.EB.TIMEPM.WDGM020428)
     Check that the initialization request is performed(global status is changed to
     WDGM_GLOBAL_STATUS_OK).
 06: VP (WDGM.EB.TIMEPM.WDGM020409)
     Check that initialization was performed to WdgMInitialMode.
 07: Sanity check
     Change WdgM Global status to WDGM_GLOBAL_STATUS_EXPIRED and check that the global status
     is changed to WDGM_GLOBAL_STATUS_EXPIRED.
 08: VP (WDGM.EB.TIMEPM.WDGM020458)
     Send WdgM Mode Switch request with correct caller ID and check WdgM_SetMode return value
     to be E_NOT_OK.
 09: Consume the invalid mode switch request.
 10: Sanity check
     Gets and store current mode as new mode.
 11: VP (WDGM.EB.TIMEPM.WDGM020458)
     Check that the invalid mode switch request was not applied by the WdgM_MainFunction call
     and the global status remained WDGM_GLOBAL_STATUS_EXPIRED.
 12: Sanity check
     Change WdgM Global status to WDGM_GLOBAL_STATUS_STOPPED and check that the global status
     is changed to WDGM_GLOBAL_STATUS_STOPPED.
 13: VP (WDGM.EB.TIMEPM.WDGM020458)
     Send WdgM Mode Switch request with correct caller ID and check WdgM_SetMode return value
     to be E_NOT_OK.
 14: Consume the invalid mode switch request.
 15: Sanity check
     Gets and store current mode as new mode.
 16: VP (WDGM.EB.TIMEPM.WDGM020458)
     Check that the invalid mode switch request was not applied by the WdgM_MainFunction call
     and the global status remained WDGM_GLOBAL_STATUS_STOPPED.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020409</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020458</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>644</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2017</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE02/source/application/WdgM_ImpTest_07_TimE02.c</sourcefile>
      <sourceline>534</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests the following aspects:
 1. Tests if an initialization request is correctly applied without an additional mode switch
 request during the next Mainfunction call in case the configuration parameter
 WdgMGetExpectedInitStateCallout is disabled.
 2. Tests if a de-initialization request is correctly applied when WdgM global status is in
 one of the following states:
    - WDGM_OK_MODE_NOT_PENDING -&gt; this test case is treated by the current test;
    - WDGM_OK_MODE_PENDING -&gt; this test case is treated by the
      TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_02;
    - WDGM_FAILED_MODE_NOT_PENDING -&gt; this test case is treated by the
      TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_03;
    - WDGM_FAILED_MODE_PENDING -&gt; this test case is treated by the
      TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_04.

 The testing method is a combination between the "State based tests" method and
 the "Cause-Effect Graphing" method.
 The result is that the test is executed in the following sequence: 1-&gt;2-&gt;3-&gt;4(see
 the sequence table bellow) for each permutation(see the permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.).

 Sequence table:
 -----------------------------------------------------------------------------------------------
 Seq. ID| Transition Trigger   | Initial Global state /status  | Final Global state / status   |
 ===============================================================================================
 1      | WdgM Init request    | WDGM_NOT_INITIALIZED /        | WDGM_INIT_PENDING /           |
        |(execution step 03)   | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------
 2      |WdgM_MainFunction call| WDGM_INIT_PENDING /           | WDGM_OK_MODE_NOT_PENDING /    |
        |(execution step 04)   | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_OK         |
 -----------------------------------------------------------------------------------------------
 3      | WdgM De-Init request | WDGM_OK_MODE_NOT_PENDING /    | WDGM_DEINIT_PENDING /         |
        |(execution step 08)   | WDGM_GLOBAL_STATUS_OK         | WDGM_GLOBAL_STATUS_OK         |
 -----------------------------------------------------------------------------------------------
 4      |WdgM_MainFunction call| WDGM_DEINIT_PENDING /         | WDGM_NOT_INITIALIZED /        |
        |(execution step 09)   | WDGM_GLOBAL_STATUS_OK         | WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------

 Note: Over the test sequence the WdgM mode doesn't change and is equal to
 WdgMInitialMode  configured mode and is set at initialization step.

 
Test Object: None.
Test Precondition: 

 As described into the Sequence table above and into the Permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.
 WdgM is Deactivated.

 
Test Execution: 

 01: Initialize test case.
 02: De-Initialize WdgM.
 03: Send Initialization request.
 04: Consume initialization request.
 05: VP (WDGM.EB.TIMEPM.WDGM020403, WDGM.EB.TIMEPM.WDGM020409, WDGM.EB.TIMEPM.WDGM020428)
     Check that the initialization request is performed(global status is changed to
     WDGM_GLOBAL_STATUS_OK).
 06: VP (WDGM.EB.TIMEPM.WDGM020409)
     Check that initialization was performed to WdgMInitialMode.
 07: Initializes WdgIf_SetTriggerCondition stub to 0U.
 08: Send De-Initialization request.
 Repeat for several times:
   09: Consume de-initialization request(at first run).
   10: VP (WDGM.EB.TIMEPM.WDGM020404, WDGM.EB.TIMEPM.WDGM020414, WDGM.EB.TIMEPM.WDGM020435,
           WDGM.EB.TIMEPM.WDGM020420)
       Check that the de-initialization request is performed (at first run).
       The global status is changed and remains WDGM_GLOBAL_STATUS_DEACTIVATED.
   11: VP (WDGM.EB.TIMEPM.WDGM020414, WDGM.EB.TIMEPM.WDGM020420)
       Check that the watchdog is not triggered anymore by the WdgM_MainFunction when
       the de-initialization request is processed or the global status is
       WDGM_GLOBAL_STATUS_DEACTIVATED.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020409</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020414</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2018</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE02/source/application/WdgM_ImpTest_07_TimE02.c</sourcefile>
      <sourceline>687</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests the following aspects:
 1. Tests if an initialization request is correctly applied without an additional mode switch
 request during the next Mainfunction call in case the configuration parameter
 WdgMGetExpectedInitStateCallout is disabled.
 2. Tests if a de-initialization request is correctly applied when WdgM global status is in
 the following state: WDGM_OK_MODE_PENDING.

 The testing method is a combination between the "State based tests" method and
 the "Cause-Effect Graphing" method.
 The result is that the test is executed in the following sequence: 1-&gt;2-&gt;3-&gt;4-&gt;5(see
 the sequence table bellow) for each permutation(see the permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.).

 Sequence table:
 -----------------------------------------------------------------------------------------------
 Seq. ID| Transition Trigger   | Initial Global state /status  | Final Global state / status   |
 ===============================================================================================
 1      | WdgM Init request    | WDGM_NOT_INITIALIZED /        | WDGM_INIT_PENDING /           |
        |(execution step 04)   | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------
 2      |WdgM_MainFunction call| WDGM_INIT_PENDING /           | WDGM_OK_MODE_NOT_PENDING /    |
        |(execution step 05)   | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_OK         |
 -----------------------------------------------------------------------------------------------
 3      | WdgM Mode Switch req | WDGM_OK_MODE_NOT_PENDING /    | WDGM_OK_MODE_PENDING /        |
        | (correct caller ID)  | WDGM_GLOBAL_STATUS_OK         | WDGM_GLOBAL_STATUS_OK         |
        |(execution step 09)   |                               |                               |
 -----------------------------------------------------------------------------------------------
 4      | WdgM De-Init request | WDGM_OK_MODE_PENDING /        | WDGM_DEINIT_PENDING /         |
        |(execution step 10)   | WDGM_GLOBAL_STATUS_OK         | WDGM_GLOBAL_STATUS_OK         |
 -----------------------------------------------------------------------------------------------
 5      |WdgM_MainFunction call| WDGM_DEINIT_PENDING /         | WDGM_NOT_INITIALIZED /        |
        |(execution step 11)   | WDGM_GLOBAL_STATUS_OK         | WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------

 Note: Over the test sequence the WdgM mode doesn't change and is equal to
 WdgMInitialMode  configured mode and is set at initialization step.

 
Test Object: None.
Test Precondition: 

 As described into the Sequence table above and into the Permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.
 WdgM is Deactivated.

 
Test Execution: 

 01: Initialize test case.
 02: Sanity check.
     Check preconditions: Check that the mode switch request will be to a mode different
     than the WdgMInitialMode.
 03: De-Initialize WdgM.
 04: Send Initialization request.
 05: Consume initialization request.
 06: VP (WDGM.EB.TIMEPM.WDGM020403, WDGM.EB.TIMEPM.WDGM020409, WDGM.EB.TIMEPM.WDGM020428)
     Check that the initialization request is performed(global status is changed to
     WDGM_GLOBAL_STATUS_OK).
 07: VP (WDGM.EB.TIMEPM.WDGM020409)
     Check that initialization was performed to WdgMInitialMode.
 08: Initializes WdgIf_SetTriggerCondition stub to 0U.
 09: Send mode switch request with correct caller ID to to a mode different
     than the WdgMInitialMode.
 10: Send De-Initialization request.
 Repeat for several times:
   11: Consume de-initialization request(at first run).
   12: VP (WDGM.EB.TIMEPM.WDGM020404, WDGM.EB.TIMEPM.WDGM020414, WDGM.EB.TIMEPM.WDGM020435,
           WDGM.EB.TIMEPM.WDGM020420)
       Check that the de-initialization request is performed (at first run).
       The global status is changed and remains WDGM_GLOBAL_STATUS_DEACTIVATED.
   13: VP (WDGM.EB.TIMEPM.WDGM020414, WDGM.EB.TIMEPM.WDGM020420)
       Check that the watchdog is not triggered anymore by the WdgM_MainFunction when
       the de-initialization request is processed or the global status is
       WDGM_GLOBAL_STATUS_DEACTIVATED.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020409</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020414</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2019</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE02/source/application/WdgM_ImpTest_07_TimE02.c</sourcefile>
      <sourceline>848</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests the following aspects:
 1. Tests if an initialization request is correctly applied without an additional mode switch
 request during the next Mainfunction call in case the configuration parameter
 WdgMGetExpectedInitStateCallout is disabled.
 2. Tests if a de-initialization request is correctly applied when WdgM global status is in
 the following state: WDGM_FAILED_MODE_NOT_PENDING.

 The testing method is a combination between the "State based tests" method and
 the "Cause-Effect Graphing" method.
 The result is that the test is executed in the following sequence: 1-&gt;2-&gt;3-&gt;4-&gt;5(see
 the sequence table bellow) for each permutation(see the permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.).

 Sequence table:
 -----------------------------------------------------------------------------------------------
 Seq. ID| Transition Trigger    |Initial Global state /status  | Final Global state / status   |
 ===============================================================================================
 1      | WdgM Init request     |WDGM_NOT_INITIALIZED /        | WDGM_INIT_PENDING /           |
        |(execution step 03)    |WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------
 2      |WdgM_MainFunction call |WDGM_INIT_PENDING /           | WDGM_OK_MODE_NOT_PENDING /    |
        |(execution step 04)    |WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_OK         |
 -----------------------------------------------------------------------------------------------
 3      |WdgM_MainFunction calls|WDGM_OK_MODE_NOT_PENDING /    | WDGM_FAILED_MODE_NOT_PENDING /|
        |(execution step 07)    |WDGM_GLOBAL_STATUS_OK         | WDGM_GLOBAL_STATUS_FAILED     |
 -----------------------------------------------------------------------------------------------
 4      | WdgM De-Init request  |WDGM_FAILED_MODE_NOT_PENDING /| WDGM_DEINIT_PENDING /         |
        |(execution step 09)    |WDGM_GLOBAL_STATUS_FAILED     | WDGM_GLOBAL_STATUS_FAILED     |
 -----------------------------------------------------------------------------------------------
 5      |WdgM_MainFunction call |WDGM_DEINIT_PENDING /         | WDGM_NOT_INITIALIZED /        |
        |(execution step 10)    |WDGM_GLOBAL_STATUS_FAILED     | WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------

 Note: Over the test sequence the WdgM mode doesn't change, is equal to
 WdgMInitialMode  configured mode and is set at initialization step.

 
Test Object: None.
Test Precondition: 

 As described into the Sequence table above and into the Permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.
 WdgM is Deactivated.

 
Test Execution: 

 01: Initialize test case.
 02: De-Initialize WdgM.
 03: Send Initialization request.
 04: Consume initialization request.
 05: VP (WDGM.EB.TIMEPM.WDGM020403, WDGM.EB.TIMEPM.WDGM020409, WDGM.EB.TIMEPM.WDGM020428)
     Check that the initialization request is performed(global status is changed to
     WDGM_GLOBAL_STATUS_OK).
 06: VP (WDGM.EB.TIMEPM.WDGM020409)
     Check that initialization was performed to WdgMInitialMode.
 07: Sanity check
     Change WdgM Global status to WDGM_GLOBAL_STATUS_FAILED and check that the global status
     is changed to WDGM_GLOBAL_STATUS_FAILED.
 08: Initializes WdgIf_SetTriggerCondition stub to 0U.
 09: Send De-Initialization request.
 Repeat for several times:
   10: Consume de-initialization request(at first run).
   11: VP (WDGM.EB.TIMEPM.WDGM020404, WDGM.EB.TIMEPM.WDGM020414, WDGM.EB.TIMEPM.WDGM020435,
           WDGM.EB.TIMEPM.WDGM020420)
       Check that the de-initialization request is performed (at first run).
       The global status is changed and remains WDGM_GLOBAL_STATUS_DEACTIVATED.
   12: VP (WDGM.EB.TIMEPM.WDGM020414, WDGM.EB.TIMEPM.WDGM020420)
       Check that the watchdog is not triggered anymore by the WdgM_MainFunction when
       the de-initialization request is processed or the global status is
       WDGM_GLOBAL_STATUS_DEACTIVATED.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020409</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020414</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2020</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_04</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE02/source/application/WdgM_ImpTest_07_TimE02.c</sourcefile>
      <sourceline>1006</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests the following aspects:
 1. Tests if an initialization request is correctly applied without an additional mode switch
 request during the next Mainfunction call in case the configuration parameter
 WdgMGetExpectedInitStateCallout is disabled.
 2. Tests if a de-initialization request is correctly applied when WdgM global status is in
 the following state: WDGM_FAILED_MODE_PENDING.

 The testing method is a combination between the "State based tests" method and
 the "Cause-Effect Graphing" method.
 The result is that the test is executed in the following sequence: 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;6(see
 the sequence table bellow) for each permutation(see the permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.).

 Sequence table:
 -----------------------------------------------------------------------------------------------
 Seq. ID| Transition Trigger    | Initial Global state /status  | Final Global state / status   |
 ===============================================================================================
 1      | WdgM Init request     | WDGM_NOT_INITIALIZED /        | WDGM_INIT_PENDING /           |
        |(execution step 04)    | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------
 2      |WdgM_MainFunction call | WDGM_INIT_PENDING /           | WDGM_OK_MODE_NOT_PENDING /    |
        |(execution step 05)    | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_OK         |
 -----------------------------------------------------------------------------------------------
 3      |WdgM_MainFunction calls| WDGM_OK_MODE_NOT_PENDING /    | WDGM_FAILED_MODE_NOT_PENDING /|
        |(execution step 08)    | WDGM_GLOBAL_STATUS_OK         | WDGM_GLOBAL_STATUS_FAILED     |
 -----------------------------------------------------------------------------------------------
 4      | WdgM Mode Switch req  | WDGM_FAILED_MODE_NOT_PENDING /| WDGM_FAILED_MODE_PENDING /    |
        |(execution step 10)    | WDGM_GLOBAL_STATUS_FAILED     | WDGM_GLOBAL_STATUS_FAILED     |
 -----------------------------------------------------------------------------------------------
 5      | WdgM De-Init request  | WDGM_FAILED_MODE_PENDING /    | WDGM_DEINIT_PENDING /         |
        |(execution step 11)    | WDGM_GLOBAL_STATUS_FAILED     | WDGM_GLOBAL_STATUS_FAILED     |
 -----------------------------------------------------------------------------------------------
 6      |WdgM_MainFunction call | WDGM_DEINIT_PENDING /         | WDGM_NOT_INITIALIZED /        |
        |(execution step 12)    | WDGM_GLOBAL_STATUS_FAILED     | WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------

 Note: Over the test sequence the WdgM mode doesn't change and is equal to
 WdgMInitialMode  configured mode and is set at initialization step.

 
Test Object: None.
Test Precondition: 

 As described into the Sequence table above and into the Permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.
 WdgM is Deactivated.

 
Test Execution: 

 01: Initialize test case.
 02: Sanity check.
     Check preconditions: Check that the mode switch request will be to a mode different
     than the WdgMInitialMode.
 03: De-Initialize WdgM.
 04: Send Initialization request.
 05: Consume initialization request.
 06: VP (WDGM.EB.TIMEPM.WDGM020403, WDGM.EB.TIMEPM.WDGM020409, WDGM.EB.TIMEPM.WDGM020428)
     Check that the initialization request is performed(global status is changed to
     WDGM_GLOBAL_STATUS_OK).
 07: VP (WDGM.EB.TIMEPM.WDGM020409)
     Check that initialization was performed to WdgMInitialMode.
 08: Sanity check
     Change WdgM Global status to WDGM_GLOBAL_STATUS_FAILED and check that the global status
     is changed to WDGM_GLOBAL_STATUS_FAILED.
 09: Initializes WdgIf_SetTriggerCondition stub to 0U.
 10: Send mode switch request with correct caller ID to to a mode different
     than the WdgMInitialMode.
 11: Send De-Initialization request.
 Repeat for several times:
   12: Consume de-initialization request(at first run).
   13: VP (WDGM.EB.TIMEPM.WDGM020404, WDGM.EB.TIMEPM.WDGM020414, WDGM.EB.TIMEPM.WDGM020435,
           WDGM.EB.TIMEPM.WDGM020420)
       Check that the de-initialization request is performed (at first run).
       The global status is changed and remains WDGM_GLOBAL_STATUS_DEACTIVATED.
   14: VP (WDGM.EB.TIMEPM.WDGM020414, WDGM.EB.TIMEPM.WDGM020420)
       Check that the watchdog is not triggered anymore by the WdgM_MainFunction when
       the de-initialization request is processed or the global status is
       WDGM_GLOBAL_STATUS_DEACTIVATED.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020409</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020414</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2021</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE02/source/application/WdgM_ImpTest_07_TimE02.c</sourcefile>
      <sourceline>1178</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests the following aspects:
 1. Tests if an initialization request is correctly applied without an additional mode switch
 request during the next Mainfunction call in case the configuration parameter
 WdgMGetExpectedInitStateCallout is disabled.
 2. Tests if a de-initialization request is correctly applied when WdgM global status is in
 one of the following states:
    - WDGM_GLOBAL_STATUS_EXPIRED -&gt; this test case is treated by the current test;
    - WDGM_GLOBAL_STATUS_STOPPED -&gt; this test case is treated by the
      TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_12.

 The testing method is a combination between the "State based tests" method and
 the "Cause-Effect Graphing" method.
 The result is that the test is executed in the following sequence: 1-&gt;2-&gt;3-&gt;4-&gt;5(see
 the sequence table bellow) for each permutation(see the permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.).

 Sequence table:
 -----------------------------------------------------------------------------------------------
 Seq. ID| Transition Trigger    | Initial Global state /status  | Final Global state / status   |
 ===============================================================================================
 1      | WdgM Init request     | WDGM_NOT_INITIALIZED /        | WDGM_INIT_PENDING /           |
        |(execution step 03)    | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------
 2      |WdgM_MainFunction call | WDGM_INIT_PENDING /           | WDGM_OK_MODE_NOT_PENDING /    |
        |(execution step 04)    | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_OK         |
 -----------------------------------------------------------------------------------------------
 3      |WdgM_MainFunction calls| WDGM_OK_MODE_NOT_PENDING /    | WDGM_GLOBAL_STATUS_EXPIRED /  |
        |(execution step 07)    | WDGM_GLOBAL_STATUS_OK         | WDGM_GLOBAL_STATUS_EXPIRED    |
 -----------------------------------------------------------------------------------------------
 4      | WdgM De-Init request  | WDGM_GLOBAL_STATUS_EXPIRED /  | WDGM_DEINIT_PENDING /         |
        |(execution step 09)    | WDGM_GLOBAL_STATUS_EXPIRED    | WDGM_GLOBAL_STATUS_EXPIRED    |
 -----------------------------------------------------------------------------------------------
 5      |WdgM_MainFunction call | WDGM_DEINIT_PENDING /         | WDGM_NOT_INITIALIZED /        |
        |(execution step 10)    | WDGM_GLOBAL_STATUS_EXPIRED    | WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------

 Note: Over the test sequence the WdgM mode doesn't change and is equal to
 WdgMInitialMode  configured mode and is set at initialization step.

 
Test Object: None.
Test Precondition: 

 As described into the Sequence table above and into the Permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.
 WdgM is Deactivated.

 
Test Execution: 

 01: Initialize test case.
 02: De-Initialize WdgM.
 03: Send Initialization request.
 04: Consume initialization request.
 05: VP (WDGM.EB.TIMEPM.WDGM020403, WDGM.EB.TIMEPM.WDGM020409, WDGM.EB.TIMEPM.WDGM020428)
     Check that the initialization request is performed(global status is changed to
     WDGM_GLOBAL_STATUS_OK).
 06: VP (WDGM.EB.TIMEPM.WDGM020409)
     Check that initialization was performed to WdgMInitialMode.
 07: Sanity check
     Change WdgM Global status to WDGM_GLOBAL_STATUS_EXPIRED and check that the global status
     is changed to WDGM_GLOBAL_STATUS_EXPIRED.
 08: Initializes WdgIf_SetTriggerCondition stub to 0U.
 09: Send De-Initialization request.
 Repeat for several times:
   10: Consume de-initialization request(at first run).
   11: VP (WDGM.EB.TIMEPM.WDGM020464, WDGM.EB.TIMEPM.WDGM020414, WDGM.EB.TIMEPM.WDGM020435,
           WDGM.EB.TIMEPM.WDGM020420)
       Check that the de-initialization request is performed (at first run).
       The global status is changed and remains WDGM_GLOBAL_STATUS_DEACTIVATED.
   12: VP (WDGM.EB.TIMEPM.WDGM020414, WDGM.EB.TIMEPM.WDGM020420)
       Check that the watchdog is not triggered anymore by the WdgM_MainFunction when
       the de-initialization request is processed or the global status is
       WDGM_GLOBAL_STATUS_DEACTIVATED.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020409</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020464</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>650</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020414</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2022</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInit_SupervisorDisabled_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE02/source/application/WdgM_ImpTest_07_TimE02.c</sourcefile>
      <sourceline>1339</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests the following aspects:
 1. Tests if an initialization request is correctly applied without an additional mode switch
 request during the next Mainfunction call in case the configuration parameter
 WdgMGetExpectedInitStateCallout is disabled.
 2. Tests if a de-initialization request is correctly applied when WdgM global status is in
 the following state: WDGM_GLOBAL_STATUS_STOPPED.

 The testing method is a combination between the "State based tests" method and
 the "Cause-Effect Graphing" method.
 The result is that the test is executed in the following sequence: 1-&gt;2-&gt;3-&gt;4-&gt;5(see
 the sequence table bellow) for each permutation(see the permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.).

 Sequence table:
 -----------------------------------------------------------------------------------------------
 Seq. ID| Transition Trigger    | Initial Global state /status  | Final Global state / status   |
 ===============================================================================================
 1      | WdgM Init request     | WDGM_NOT_INITIALIZED /        | WDGM_INIT_PENDING /           |
        |(execution step 03)    | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------
 2      |WdgM_MainFunction call | WDGM_INIT_PENDING /           | WDGM_OK_MODE_NOT_PENDING /    |
        |(execution step 04)    | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_OK         |
 -----------------------------------------------------------------------------------------------
 3      |WdgM_MainFunction calls| WDGM_OK_MODE_NOT_PENDING /    | WDGM_GLOBAL_STATUS_STOPPED /  |
        |(execution step 07)    | WDGM_GLOBAL_STATUS_OK         | WDGM_GLOBAL_STATUS_STOPPED    |
 -----------------------------------------------------------------------------------------------
 4      | WdgM De-Init request  | WDGM_GLOBAL_STATUS_STOPPED /  | WDGM_DEINIT_PENDING /         |
        |(execution step 09)    | WDGM_GLOBAL_STATUS_STOPPED    | WDGM_GLOBAL_STATUS_STOPPED    |
 -----------------------------------------------------------------------------------------------
 5      |WdgM_MainFunction call | WDGM_DEINIT_PENDING /         | WDGM_NOT_INITIALIZED /        |
        |(execution step 10)    | WDGM_GLOBAL_STATUS_STOPPED    | WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------

 Note: Over the test sequence the WdgM mode doesn't change and is equal to
 WdgMInitialMode  configured mode and is set at initialization step.

 
Test Object: None.
Test Precondition: 

 As described into the Sequence table above and into the Permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.
 WdgM is Deactivated.

 
Test Execution: 

 01: Initialize test case.
 02: De-Initialize WdgM.
 03: Send Initialization request.
 04: Consume initialization request.
 05: VP (WDGM.EB.TIMEPM.WDGM020403, WDGM.EB.TIMEPM.WDGM020409, WDGM.EB.TIMEPM.WDGM020428)
     Check that the initialization request is performed(global status is changed to
     WDGM_GLOBAL_STATUS_OK).
 06: VP (WDGM.EB.TIMEPM.WDGM020409)
     Check that initialization was performed to WdgMInitialMode.
 07: Sanity check
     Change WdgM Global status to WDGM_GLOBAL_STATUS_STOPPED and check that the global status
     is changed to WDGM_GLOBAL_STATUS_STOPPED.
 08: Initializes WdgIf_SetTriggerCondition stub to 0U.
 09: Send De-Initialization request.
 Repeat for several times:
   10: Consume de-initialization request(at first run).
   11: VP (WDGM.EB.TIMEPM.WDGM020464, WDGM.EB.TIMEPM.WDGM020414, WDGM.EB.TIMEPM.WDGM020435,
           WDGM.EB.TIMEPM.WDGM020420)
       Check that the de-initialization request is performed (at first run).
       The global status is changed and remains WDGM_GLOBAL_STATUS_DEACTIVATED.
   12: VP (WDGM.EB.TIMEPM.WDGM020414, WDGM.EB.TIMEPM.WDGM020420)
       Check that the watchdog is not triggered anymore by the WdgM_MainFunction when
       the de-initialization request is processed or the global status is
       WDGM_GLOBAL_STATUS_DEACTIVATED.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020409</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020464</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>650</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020414</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2023</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckDeInit_SupervisorDisabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE02/source/application/WdgM_ImpTest_07_TimE02.c</sourcefile>
      <sourceline>1497</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that an initialization request without a sub-sequent mode-switch request can be
 overwritten by a de-initialization request without a WdgM_MainFunction call in between.

 The testing method is a combination between the "State based tests" method and
 the "Cause-Effect Graphing" method.
 The result is that the test is executed in the following sequence: 1-&gt;2(see
 the sequence table bellow) for each permutation(see the permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.).

 Sequence table:
 -----------------------------------------------------------------------------------------------
 Seq. ID| Transition Trigger   | Initial Global state /status  | Final Global state / status   |
 ===============================================================================================
 1      | WdgM Init request    | WDGM_NOT_INITIALIZED /        | WDGM_INIT_PENDING /           |
        |(execution step 05)   | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------
 2      | WdgM De-Init request | WDGM_INIT_PENDING /           | WDGM_NOT_INITIALIZED /        |
        |(execution step 06)   | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------

 Note: During test execution the WdgM Global status remains WDGM_GLOBAL_STATUS_DEACTIVATED.

 
Test Object: None.
Test Precondition: 

 As described into the Sequence table above and into the Permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.
 WdgM is Deactivated.

 
Test Execution: 

 01: Initialize test case.
 02: De-Initialize WdgM module.
 03: Sanity checks
     Check preconditions: Check WdgM Global status to be WDGM_GLOBAL_STATUS_DEACTIVATED.
 04: Initializes WdgIf_SetTriggerCondition stub to 0U.
 05: Send WdgM Initialize request.
 06: Send WdgM De-Initialize request.
 Repeat for several times:
   07: Call WdgM_MainFunction.
   08: VP WDGM.EB.TIMEPM.WDGM020418, WDGM.EB.TIMEPM.WDGM020420)
       Check the global status to be WDGM_GLOBAL_STATUS_DEACTIVATED.
   09: VP (WDGM.EB.TIMEPM.WDGM020420)
       Check that the watchdog is not triggered by the WdgM_MainFunction call if the Globals
       status is WDGM_GLOBAL_STATUS_DEACTIVATED.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020418</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>666</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2024</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckDeInit_SupervisorDisabled_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE02/source/application/WdgM_ImpTest_07_TimE02.c</sourcefile>
      <sourceline>1606</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that an initialization request with a sub-sequent mode-switch request can be overwritten
 by a de-initialization request without a WdgM_MainFunction call in between.

 The testing method is a combination between the "State based tests" method and
 the "Cause-Effect Graphing" method.
 The result is that the test is executed in the following sequence: 1-&gt;2-&gt;3(see
 the sequence table bellow) for each permutation(see the permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case).

 Sequence table:
 -----------------------------------------------------------------------------------------------
 Seq. ID| Transition Trigger   | Initial Global state /status  | Final Global state / status   |
 ===============================================================================================
 1      | WdgM Init request    | WDGM_NOT_INITIALIZED /        | WDGM_INIT_PENDING /           |
        |(execution step 05)   | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------
 2      | WdgM Mode Change req | WDGM_INIT_PENDING /           | WDGM_PRE_MODE_CHANGE_PENDING /|
        | (correct caller ID)  | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_DEACTIVATED|
        |(execution step 06)   |                               |                               |
 -----------------------------------------------------------------------------------------------
 3      | WdgM De-Init request | WDGM_PRE_MODE_CHANGE_PENDING /| WDGM_NOT_INITIALIZED /        |
        |(execution step 07)   | WDGM_GLOBAL_STATUS_DEACTIVATED| WDGM_GLOBAL_STATUS_DEACTIVATED|
 -----------------------------------------------------------------------------------------------

 Note: During test execution the WdgM Global status remains WDGM_GLOBAL_STATUS_DEACTIVATED.

 
Test Object: None.
Test Precondition: 

 As described into the Sequence table above and into the Permutation table from the
 TS_WDGM_TimE_CheckInitModeSwitch_SupervisorDisabled_01 test case.
 WdgM is Deactivated.

 
Test Execution: 

 01: Initialize test case.
 02: De-Initialize WdgM module.
 03: Sanity check
     Check preconditions: Check WdgM Global status to be WDGM_GLOBAL_STATUS_DEACTIVATED.
 04: Initializes WdgIf_SetTriggerCondition stub variables to 0U.
 05: Send WdgM Initialize request.
 06: Send WdgM Mode Change request with correct caller ID.
 07: Send WdgM De-Initialize request.
 Repeat for several times:
   08: Call WdgM_MainFunction.
   09: VP (WDGM.EB.TIMEPM.WDGM020416, WDGM.EB.TIMEPM.WDGM020420)
       Check the global status to be WDGM_GLOBAL_STATUS_DEACTIVATED.
   10: VP (WDGM.EB.TIMEPM.WDGM020420)
       Check that the watchdog is not triggered by the WdgM_MainFunction call if the Globals
       status is WDGM_GLOBAL_STATUS_DEACTIVATED.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020416</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>665</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2025</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE03/source/application/WdgM_ImpTest_07_TimE03.c</sourcefile>
      <sourceline>70</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Test the WdgM behavior in case the supervisor is present and the WdgM callouts
 from the "WdgM Callouts Configuration Table" are provided.

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table";
 - "Cause-Effect Graphing", as described in the "Abstract Global state transition table".

 The testing aspects derived from the above "Pair wise table" for this particular test case are:
 - the initialization is not performed due to authorization prohibition(
   WdgMGetExpectedInitStateCallout returns E_NOT_OK error code);
 - the WdgM_MainFunction doesn't execute the Supervision Algorithms which includes
   calculation of the local / global supervision status and triggering of the watchdogs
   when the WdgM is not initialized(WdgM Global status in Deactivated);

 Pair wise table:
 =================================================================================================
 Tcs|WdgMGetExpectedInitStateCallout|WdgMGetExpectedWdgMModeCallout|  WdgM Global status(mode)   |
 ID |Requested status| Return Value |Requested mode  | Return Value| Initial      | Final        |
 =================================================================================================
 01 | INIT           | E_NOT_OK     |WdgMInitialMode | E_OK        | Deactivated  | Deactivated  |
    |                |              |(WdgMMode_0)    |             | (NA)         | (NA)         |
 -------------------------------------------------------------------------------------------------
 02 | DEINIT         | E_OK         | WdgMMode_1     | E_OK        | Deactivated  | Deactivated  |
    |                |              |                |             | (NA)         | (NA)         |
 -------------------------------------------------------------------------------------------------
 03 | INIT           | E_OK         | WdgMMode_1     | E_NOT_OK    | Deactivated  | OK           |
    |                |              |                |             | (NA)         |(WdgMMode_0)  |
 -------------------------------------------------------------------------------------------------
 04 | INIT           | E_OK         | WdgMMode_1     | E_OK        | Deactivated  | OK           |
    |                |              |                |             | (NA)         |(WdgMMode_1)  |
 -------------------------------------------------------------------------------------------------
 05 | INIT           | E_OK         | WdgMMode_1     | E_OK        | OK           | OK           |
    |                |              |                |             |(WdgMMode_0)  |(WdgMMode_1)  |
 -------------------------------------------------------------------------------------------------
 06 | DEINIT         | E_NOT_OK     | WdgMMode_1     | E_NOT_OK    | OK           | OK           |
    |                |              |                |             |(WdgMMode_0)  |(WdgMMode_0)  |
 -------------------------------------------------------------------------------------------------
 07 | DEINIT         | E_OK         | WdgMMode_1     | E_OK        | OK           | Deactivated  |
    |                |              |                |             |(WdgMMode_0)  | (NA)         |
 -------------------------------------------------------------------------------------------------
 08 | DEINIT         | E_NOT_OK     | WdgMMode_1     | E_OK        | Failed       | Failed       |
    |                |              |                |             |(WdgMMode_0)  |(WdgMMode_1)  |
 -------------------------------------------------------------------------------------------------
 09 | DEINIT         | E_NOT_OK     |WdgMInitialMode | E_OK        | Failed       | Failed       |
    |                |              |(WdgMMode_0)    |             |(WdgMMode_0)  |(WdgMMode_0)  |
 -------------------------------------------------------------------------------------------------
 10 | DEINIT         | E_OK         |WdgMInitialMode | E_OK        | Failed       | Deactivated  |
    |                |              |(WdgMMode_0)    |             |(WdgMMode_0)  | (NA)         |
 -------------------------------------------------------------------------------------------------
 11 | DEINIT         | E_OK         | WdgMMode_1     | E_OK        | Expired      | Deactivated  |
    |                |              |                |             |(WdgMMode_0)  | (NA)         |
 -------------------------------------------------------------------------------------------------
 12 | DEINIT         | E_OK         |WdgMInitialMode | E_OK        | Stopped      | Deactivated  |
    |                |              |(WdgMMode_0)    |             |(WdgMMode_0)  | (NA)         |
 =================================================================================================
 Note: the "Tcs ID" represents the ID of the test case with the following name:
       TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_&amp;lt;Tcs ID&amp;gt;.

 
Test Object: None.
Test Precondition: 

 WdgM Callouts Configuration Table:
 =======================================================
 WdgMCallout Name                | Configuration value |
 =======================================================
 WdgMGetExpectedInitStateCallout | Enabled             |
 WdgMInitRedirectionCallout      | Not empty           |
 WdgMDeInitRedirectionCallout    | Not empty           |
 WdgMGetExpectedWdgMModeCallout  | Enabled             |
 WdgMSetModeRedirectionCallout   | Not empty           |
 =======================================================

 The WdgM is de-initialized.
 The WdgMGetExpectedInitStateCallout is set to behave in the following way:
 - the value of param[out](InitStatus) is WDGM_EB_INIT_STATUS_INIT;
 - the return value is E_NOT_OK.
 The WdgMGetExpectedWdgMModeCallout is set to behave in the following way:
 - the value of param[out](WdgMMode) is WdgMInitialMode(WdgMMode_0);
 - the return value is E_OK.

 The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4
  WdgMSupervisedEntity_1: Checkpoints: CP1_1

Modes and configured WdgMTriggers:
                    ConfigName  TriggerCondition  TriggerMode  DeviceIndex
                       |          |                |               |
  WdgMMode_0:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_1:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5

Modes and configured AliveSupervisions:
  WdgMMode_0 (Initial Mode): WdgMSupervisedEntity_0(CP0_1)
                             WdgMSupervisedEntity_0(CP0_2)
                             WdgMSupervisedEntity_0(CP0_3)
                             WdgMSupervisedEntity_0(CP0_4)
  WdgMMode_1: WdgMSupervisedEntity_1(CP1_1)

Modes and configured parameters for WdgMSupervisedEntity_0:
  WdgMMode_0:
    WdgMModeId: 0
    WdgMSupervisionReferenceCycle          2
    WdgMExpectedAliveIndications           1
    WdgMMaxMargin                          0
    WdgMMinMargin                          0
    WdgMFailedAliveSupervisionRefCycleTol  2
    WdgMExpiredSupervisionCycleTol         5
    Note: This configuration is identical for all configured CPs for this mode.
  WdgMMode_1:
    unused.

Modes and configured parameters for WdgMSupervisedEntity_1:
  WdgMMode_0:
     unused.
  WdgMMode_1:
    WdgMModeId: 1
    WdgMSupervisionReferenceCycle          1
    WdgMExpectedAliveIndications           65535
    WdgMMaxMargin                          0
    WdgMMinMargin                          0
    WdgMFailedAliveSupervisionRefCycleTol  2
    WdgMExpiredSupervisionCycleTol         1

 
Test Execution: 

 Abstract Global state transition table:
 ==================================================================================================
 Item No.| Transition Trigger   | Initial Global  status         | Final  Global  status          |
 ==================================================================================================
 1       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED | WDGM_GLOBAL_STATUS_DEACTIVATED |
         | (execution step 03)  |                                |                                |
 ==================================================================================================

 01: Initialize test case dependences.
 02: Sanity check: Set and check preconditions
     - De-initialize WdgM and check the global status to be Deactivated;
     - Set and check the WdgMGetExpectedInitStateCallout behavior to be as described in
       precondition section;
     - Set and check the WdgMGetExpectedWdgMModeCallout behavior to be as described in
       precondition section;
 03: Call the WdgM_MainFunction.
 04: VP (WDGM.EB.TIMEPM.WDGM020101_Conf)
     Check that the WdgMGetExpectedInitStateCallout is called by each WdgM_MainFunction call.
 05: VP (WDGM.EB.TIMEPM.WDGM020406)
     Check that the WdgMInitRedirectionCallout is redirected by using the WdgM_Init function name.
 06: VP (WDGM.EB.TIMEPM.WDGM020103_Conf)
     Check that the WdgMGetExpectedWdgMModeCallout is called by each WdgM_MainFunction call.
 07: VP (WDGM.EB.TIMEPM.WDGM020402)
     Check that the WdgMSetModeRedirectionCallout is redirected by using the WdgM_SetMode
     function name.
 08: VP (WDGM.EB.TIMEPM.WDGM020412, WDGM.EB.TIMEPM.WDGM020420)
     Check that the WdgM_MainFunction is not performing the following algorithm aspects
     when WdgM Global status is Deactivated:
     - calculation of the local / global supervision status;
     - triggering of the watchdogs.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020115_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020406</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020412</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2026</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE03/source/application/WdgM_ImpTest_07_TimE03.c</sourcefile>
      <sourceline>326</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Test the WdgM behavior in case the supervisor is present and the WdgM callouts
 from the "WdgM Callouts Configuration Table" are provided as described in the
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table" from
   TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case description;
 - "Cause-Effect Graphing", as described in the "Abstract Global state transition table".

 The testing aspects derived from the above "Pair wise table" for this particular test case are:
 - the initialization is not performed due to wrong initialization request:
   "WDGM_EB_INIT_STATUS_DEINIT".
 - the WdgM_MainFunction doesn't execute the Supervision Algorithms which includes
   calculation of the local / global supervision status and triggering of the watchdogs
   when the WdgM is not initialized(WdgM Global status in Deactivated);

 
Test Object: None.
Test Precondition: 

 The WdgM is de-initialized.
 The WdgMGetExpectedInitStateCallout is set to behave in the following way:
 - the value of param[out](InitStatus) is WDGM_EB_INIT_STATUS_DEINIT;
 - the return value is E_OK.
 The WdgMGetExpectedWdgMModeCallout is set to behave in the following way:
 - the value of param[out](WdgMMode) is WdgMMode_1;
 - the return value is E_OK.

 For detailed description regarding the used configuration please see
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 
Test Execution: 

 Abstract Global state transition table:
 ==================================================================================================
 Item No.| Transition Trigger   | Initial Global  status         | Final  Global  status          |
 ==================================================================================================
 1       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED | WDGM_GLOBAL_STATUS_DEACTIVATED |
         | (execution step 03)  |                                |                                |
 ==================================================================================================

 01: Initialize test case dependences.
 02: Sanity check: Set and check preconditions
     - De-initialize WdgM and check the global status to be Deactivated;
     - Set and check the WdgMGetExpectedInitStateCallout behavior to be as described in
       precondition section;
     - Set and check the WdgMGetExpectedWdgMModeCallout behavior to be as described in
       precondition section;
 03: Call the WdgM_MainFunction.
 04: VP (WDGM.EB.TIMEPM.WDGM020101_Conf)
     Check that the WdgMGetExpectedInitStateCallout is called by each WdgM_MainFunction call.
 05: VP (WDGM.EB.TIMEPM.WDGM020408)
     Check that the WdgMDeInitRedirectionCallout is redirected by using the WdgM_DeInit
     function name.
 06: VP (WDGM.EB.TIMEPM.WDGM020103_Conf)
     Check that the WdgMGetExpectedWdgMModeCallout is called by each WdgM_MainFunction call.
 07: VP (WDGM.EB.TIMEPM.WDGM020402)
     Check that the WdgMSetModeRedirectionCallout is redirected by using the WdgM_SetMode
     function name.
 08: VP (WDGM.EB.TIMEPM.WDGM020420)
     Check that the WdgM_MainFunction is not performing the following algorithm aspects
     when WdgM Global status is Deactivated:
     - calculation of the local / global supervision status;
     - triggering of the watchdogs.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020116_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020408</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2027</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE03/source/application/WdgM_ImpTest_07_TimE03.c</sourcefile>
      <sourceline>486</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Test the WdgM behavior in case the supervisor is present and the WdgM callouts
 from the "WdgM Callouts Configuration Table" are provided as described in the
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table" from
   TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case description;
 - "Cause-Effect Graphing", as described in the "Abstract Global state transition table".

 The testing aspects derived from the above "Pair wise table" for this particular test case are:
 - the initialization is performed and WdgM is initialized to WdgMInitialMode(WdgMMode_0) in the
   following use case:
   - the WdgMGetExpectedInitStateCallout returns E_OK with "WDGM_EB_INIT_STATUS_INIT"
     initialization request;
   - the WdgMGetExpectedWdgMModeCallout return E_NOT_OK(mode switch authorization prohibition).
 - the WdgM_MainFunction execute the initialization(Global status is changed to OK).

 
Test Object: None.
Test Precondition: 

 The WdgM is de-initialized.
 The WdgMGetExpectedInitStateCallout is set to behave in the following way:
 - the value of param[out](InitStatus) is WDGM_EB_INIT_STATUS_INIT;
 - the return value is E_OK.
 The WdgMGetExpectedWdgMModeCallout is set to behave in the following way:
 - the value of param[out](WdgMMode) is WdgMMode_1;
 - the return value is E_NOT_OK.

 For detailed description regarding the used configuration please see
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 
Test Execution: 

 Abstract Global state transition table:
 ==================================================================================================
 Item No.| Transition Trigger   | Initial Global  status\mode    | Final  Global  status          |
 ==================================================================================================
 1       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED\| WDGM_GLOBAL_STATUS_OK          |
         | (execution step 03)  | NA                             | WdgMInitialMode(WdgMMode_0)    |
 ==================================================================================================

 01: Initialize test case dependences.
 02: Sanity check: Set and check preconditions
     - De-initialize WdgM and check the global status to be Deactivated;
     - Set and check the WdgMGetExpectedInitStateCallout behavior to be as described in
       precondition section;
     - Set and check the WdgMGetExpectedWdgMModeCallout behavior to be as described in
       precondition section;
 03: Call the WdgM_MainFunction.
 04: VP (WDGM.EB.TIMEPM.WDGM020101_Conf)
     Check that the WdgMGetExpectedInitStateCallout is called by each WdgM_MainFunction call.
 05: VP (WDGM.EB.TIMEPM.WDGM020406)
     Check that the WdgMInitRedirectionCallout is redirected by using the WdgM_DeInit
     function name.
 06: VP (WDGM.EB.TIMEPM.WDGM020103_Conf)
     Check that the WdgMGetExpectedWdgMModeCallout is called by each WdgM_MainFunction call.
 07: VP (WDGM.EB.TIMEPM.WDGM020402)
     Check that the WdgMSetModeRedirectionCallout is redirected by using the WdgM_SetMode
     function name.
 08: VP (WDGM.EB.TIMEPM.WDGM020412, WDGM.EB.TIMEPM.WDGM020428)
     Check that the WdgM_MainFunction execute the initialization to WdgMInitialMode(Global status
     is changed to OK, and the current mode isWdgMInitialMode).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020115_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020406</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020412</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2028</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_04</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE03/source/application/WdgM_ImpTest_07_TimE03.c</sourcefile>
      <sourceline>655</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Test the WdgM behavior in case the supervisor is present and the WdgM callouts
 from the "WdgM Callouts Configuration Table" are provided as described in the
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table" from
   TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case description;
 - "Cause-Effect Graphing", as described in the "Abstract Global state transition table".

 The testing aspects derived from the above "Pair wise table" for this particular test case are:
 - the initialization is performed and WdgM is initialized to WdgMMode_1 in the
   following use case(this is initialization to a mode different than WdgMInitialMode):
   - the WdgMGetExpectedInitStateCallout returns E_OK with "WDGM_EB_INIT_STATUS_INIT"
     initialization request;
   - the WdgMGetExpectedWdgMModeCallout return E_OK with WdgMMode_1 mode.
 - the WdgM_MainFunction execute the initialization(Global status is changed to OK).

 
Test Object: None.
Test Precondition: 

 The WdgM is de-initialized.
 The WdgMGetExpectedInitStateCallout is set to behave in the following way:
 - the value of param[out](InitStatus) is WDGM_EB_INIT_STATUS_INIT;
 - the return value is E_OK.
 The WdgMGetExpectedWdgMModeCallout is set to behave in the following way:
 - the value of param[out](WdgMMode) is WdgMMode_1;
 - the return value is E_OK.

 For detailed description regarding the used configuration please see
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 
Test Execution: 

 Abstract Global state transition table:
 ==================================================================================================
 Item No.| Transition Trigger   | Initial Global  status\mode    | Final  Global  status          |
 ==================================================================================================
 1       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED\| WDGM_GLOBAL_STATUS_OK          |
         | (execution step 03)  | NA                             | WdgMMode_1                     |
 ==================================================================================================

 01: Initialize test case dependences.
 02: Sanity check: Set and check preconditions
     - De-initialize WdgM and check the global status to be Deactivated;
     - Set and check the WdgMGetExpectedInitStateCallout behavior to be as described in
       precondition section;
     - Set and check the WdgMGetExpectedWdgMModeCallout behavior to be as described in
       precondition section;
 03: Call the WdgM_MainFunction.
 04: VP (WDGM.EB.TIMEPM.WDGM020101_Conf)
     Check that the WdgMGetExpectedInitStateCallout is called by each WdgM_MainFunction call.
 05: VP (WDGM.EB.TIMEPM.WDGM020406)
     Check that the WdgMInitRedirectionCallout is redirected by using the WdgM_DeInit
     function name.
 06: VP (WDGM.EB.TIMEPM.WDGM020103_Conf)
     Check that the WdgMGetExpectedWdgMModeCallout is called by each WdgM_MainFunction call.
 07: VP (WDGM.EB.TIMEPM.WDGM020402)
     Check that the WdgMSetModeRedirectionCallout is redirected by using the WdgM_SetMode
     function name.
 08: VP (WDGM.EB.TIMEPM.WDGM020412, WDGM.EB.TIMEPM.WDGM020428)
     Check that the WdgM_MainFunction execute the initialization to WdgMMode_1(Global status
     is changed to OK, and the current mode WdgMMode_1).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020115_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020406</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020412</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020428</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2029</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_05</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE03/source/application/WdgM_ImpTest_07_TimE03.c</sourcefile>
      <sourceline>824</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Test the WdgM behavior in case the supervisor is present and the WdgM callouts
 from the "WdgM Callouts Configuration Table" are provided as described in the
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table" from
   TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case description;
 - "Cause-Effect Graphing", as described in the "Abstract Global state transition table".

 The testing aspects derived from the above "Pair wise table" for this particular test case are:
 - the initial mode is WdgMInitialMode;
 - the mode switch is not performed to WdgMMode_1 when the Global status is OK and the following
   use case is provided:
   - the WdgMGetExpectedInitStateCallout returns E_OK with initialization request;
   - the WdgMGetExpectedWdgMModeCallout return E_OK with WdgMMode_1 mode.
 - the WdgM_MainFunction desn't execute the mode switch to WdgMMode_1 mode(global status remains
   OK and the mode is changed to WdgMMode_1).

 
Test Object: None.
Test Precondition: 

 The WdgM is initialized.
 The WdgMGetExpectedInitStateCallout is set to behave in the following way:
 - the value of param[out](InitStatus) is WDGM_EB_INIT_STATUS_INIT;
 - the return value is E_OK.
 The WdgMGetExpectedWdgMModeCallout is set to behave in the following way:
 - the value of param[out](WdgMMode) is WdgMMode_1;
 - the return value is E_OK.

 For detailed description regarding the used configuration please see
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 
Test Execution: 

 Abstract Global state transition table:
 ==================================================================================================
 Item No.| Transition Trigger   | Initial Global  status\ mode   | Final  Global  status          |
 ==================================================================================================
 1       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED\| WDGM_GLOBAL_STATUS_OK          |
         | (execution step 02)  | NA                             | WdgMInitialMode(WdgMMode_0)    |
 --------------------------------------------------------------------------------------------------
 2       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_OK          |
         | (execution step 03)  | WdgMInitialMode(WdgMMode_0)    | WdgMMode_1                     |
 ==================================================================================================

 01: Initialize test case dependences.
 02: Sanity check: Set and check preconditions
     - Initialize WdgM and to WdgMInitialMode and check global status to be OK and the current mode
       to be WdgMInitialMode;
     - Set and check the WdgMGetExpectedInitStateCallout behavior to be as described in
       precondition section;
     - Set and check the WdgMGetExpectedWdgMModeCallout behavior to be as described in
       precondition section;
 03: Call the WdgM_MainFunction.
 04: VP (WDGM.EB.TIMEPM.WDGM020101_Conf)
     Check that the WdgMGetExpectedInitStateCallout is called by each WdgM_MainFunction call.
 05: VP (WDGM.EB.TIMEPM.WDGM020406)
     Check that the WdgMInitRedirectionCallout is redirected by using the WdgM_DeInit
     function name.
 06: VP (WDGM.EB.TIMEPM.WDGM020103_Conf)
     Check that the WdgMGetExpectedWdgMModeCallout is called by each WdgM_MainFunction call.
 07: VP (WDGM.EB.TIMEPM.WDGM020402)
     Check that the WdgMSetModeRedirectionCallout is redirected by using the WdgM_SetMode
     function name.
 08: VP (WDGM.EB.TIMEPM.WDGM020419)
     Check that the WdgM_MainFunction execute the mode switch to WdgMMode_1(Global status
     remainso OK, and the current mode in changed to WdgMMode_1).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020115_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020406</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020419</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2030</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_06</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE03/source/application/WdgM_ImpTest_07_TimE03.c</sourcefile>
      <sourceline>1007</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Test the WdgM behavior in case the supervisor is present and the WdgM callouts
 from the "WdgM Callouts Configuration Table" are provided as described in the
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table" from
   TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case description;
 - "Cause-Effect Graphing", as described in the "Abstract Global state transition table".

 The testing aspects derived from the above "Pair wise table" for this particular test case are:
 - the initial mode is WdgMInitialMode;
 - the two requests: de-initialization and the mode switch to WdgMMode_1 are not performed when
   the Global status is OK and the following use case is provided:
   - the WdgMGetExpectedInitStateCallout returns E_NOT_OK with de-initialization request;
   - the WdgMGetExpectedWdgMModeCallout return E_NOT_OK with WdgMMode_1 mode.
 - the WdgM_MainFunction desn't execute the mode switch to WdgMMode_1 mode(global status remains
   OK and the mode remains WdgMInitialMode).

 
Test Object: None.
Test Precondition: 

 The WdgM is initialized with WdgMInitialMode.
 The WdgMGetExpectedInitStateCallout is set to behave in the following way:
 - the value of param[out](InitStatus) is WDGM_EB_INIT_STATUS_DEINIT;
 - the return value is E_NOT_OK.
 The WdgMGetExpectedWdgMModeCallout is set to behave in the following way:
 - the value of param[out](WdgMMode) is WdgMMode_1;
 - the return value is E_NOT_OK.

 For detailed description regarding the used configuration please see
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 
Test Execution: 

 Abstract Global state transition table:
 ==================================================================================================
 Item No.| Transition Trigger   | Initial Global  status\ mode   | Final  Global  status          |
 ==================================================================================================
 1       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED\| WDGM_GLOBAL_STATUS_OK          |
         | (execution step 02)  | NA                             | WdgMInitialMode(WdgMMode_0)    |
 --------------------------------------------------------------------------------------------------
 2       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_OK          |
         | (execution step 03)  | WdgMInitialMode(WdgMMode_0)    | WdgMMode_0                     |
 ==================================================================================================

 01: Initialize test case dependences.
 02: Sanity check: Set and check preconditions
     - Initialize WdgM and to WdgMInitialMode and check global status to be OK and the current mode
       to be WdgMInitialMode;
     - Set and check the WdgMGetExpectedInitStateCallout behavior to be as described in
       precondition section;
     - Set and check the WdgMGetExpectedWdgMModeCallout behavior to be as described in
       precondition section;
 03: Call the WdgM_MainFunction.
 04: VP (WDGM.EB.TIMEPM.WDGM020101_Conf)
     Check that the WdgMGetExpectedInitStateCallout is called by each WdgM_MainFunction call.
 05: VP (WDGM.EB.TIMEPM.WDGM020408)
     Check that the WdgMDeInitRedirectionCallout is redirected by using the WdgM_DeInit
     function name.
 06: VP (WDGM.EB.TIMEPM.WDGM020103_Conf)
     Check that the WdgMGetExpectedWdgMModeCallout is called by each WdgM_MainFunction call.
 07: VP (WDGM.EB.TIMEPM.WDGM020402)
     Check that the WdgMSetModeRedirectionCallout is redirected by using the WdgM_SetMode
     function name.
 08: VP (WDGM.EB.TIMEPM.WDGM020415, WDGM.EB.TIMEPM.WDGM020419)
     Check that the WdgM_MainFunction doesn't execute the de-initialization and the mode switch
     to WdgMMode_1(Global status remains OK, and the current mode remains WdgMInitialMode).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020116_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020408</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020415</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020419</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2031</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_07</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE03/source/application/WdgM_ImpTest_07_TimE03.c</sourcefile>
      <sourceline>1191</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Test the WdgM behavior in case the supervisor is present and the WdgM callouts
 from the "WdgM Callouts Configuration Table" are provided as described in the
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table" from
   TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case description;
 - "Cause-Effect Graphing", as described in the "Abstract Global state transition table".

 The testing aspects derived from the above "Pair wise table" for this particular test case are:
 - the initial mode is WdgMInitialMode;
 - the de-initialization request is performed by the WdgM_MainFunction when the Global status
   is OK and the following use case is provided:
   - the WdgMGetExpectedInitStateCallout returns E_OK with de-initialization request;
   - the WdgMGetExpectedWdgMModeCallout return E_OK with WdgMMode_1 mode.
 - the WdgM_MainFunction execute the de-initialization and the Supervision Algorithms which
   includes calculation of the local / global supervision status and triggering of the watchdogs
   when the WdgM is not initialized(WdgM Global status changes to Deactivated);


 
Test Object: None.
Test Precondition: 

 The WdgM is initialized with WdgMInitialMode.
 The WdgMGetExpectedInitStateCallout is set to behave in the following way:
 - the value of param[out](InitStatus) is WDGM_EB_INIT_STATUS_DEINIT;
 - the return value is E_OK.
 The WdgMGetExpectedWdgMModeCallout is set to behave in the following way:
 - the value of param[out](WdgMMode) is WdgMMode_1;
 - the return value is E_OK.

 For detailed description regarding the used configuration please see
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 
Test Execution: 

 Abstract Global state transition table:
 ==================================================================================================
 Item No.| Transition Trigger   | Initial Global  status\ mode   | Final  Global  status          |
 ==================================================================================================
 1       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED\| WDGM_GLOBAL_STATUS_OK          |
         | (execution step 02)  | NA                             | WdgMInitialMode(WdgMMode_0)    |
 --------------------------------------------------------------------------------------------------
 2       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_DEACTIVATED\|
         | (execution step 03)  | WdgMInitialMode(WdgMMode_0)    | NA                             |
 ==================================================================================================

 01: Initialize test case dependences.
 02: Sanity check: Set and check preconditions
     - Initialize WdgM and to WdgMInitialMode and check global status to be OK and the current mode
       to be WdgMInitialMode;
     - Set and check the WdgMGetExpectedInitStateCallout behavior to be as described in
       precondition section;
     - Set and check the WdgMGetExpectedWdgMModeCallout behavior to be as described in
       precondition section;
     - Reset WdgIf_SetTriggerCondition stub.
 03: Call the WdgM_MainFunction.
 04: VP (WDGM.EB.TIMEPM.WDGM020101_Conf)
     Check that the WdgMGetExpectedInitStateCallout is called by each WdgM_MainFunction call.
 05: VP (WDGM.EB.TIMEPM.WDGM020408)
     Check that the WdgMDeInitRedirectionCallout is redirected by using the WdgM_DeInit
     function name.
 06: VP (WDGM.EB.TIMEPM.WDGM020103_Conf)
     Check that the WdgMGetExpectedWdgMModeCallout is called by each WdgM_MainFunction call.
 07: VP (WDGM.EB.TIMEPM.WDGM020402)
     Check that the WdgMSetModeRedirectionCallout is redirected by using the WdgM_SetMode
     function name.
 08: VP (WDGM.EB.TIMEPM.WDGM020415, WDGM.EB.TIMEPM.WDGM020435, WDGM.EB.TIMEPM.WDGM020420)
     Check that the WdgM_MainFunction execute the de-initialization and the Supervision Algorithms
     which includes calculation of the local / global supervision status and triggering of the
     watchdogs when the WdgM is not initialized(WdgM Global status changes to Deactivated);

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020116_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020408</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020415</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2032</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_08</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE03/source/application/WdgM_ImpTest_07_TimE03.c</sourcefile>
      <sourceline>1376</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Test the WdgM behavior in case the supervisor is present and the WdgM callouts
 from the "WdgM Callouts Configuration Table" are provided as described in the
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table" from
   TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case description;
 - "Cause-Effect Graphing", as described in the "Abstract Global state transition table".

 The testing aspects derived from the above "Pair wise table" for this particular test case are:
 - the initial mode is WdgMInitialMode;
 - the mode switch is performed to WdgMMode_1 when the Global status is Failed and the following
   use case is provided:
   - the WdgMGetExpectedInitStateCallout returns E_NOT_OK with de-initialization request;
   - the WdgMGetExpectedWdgMModeCallout return E_OK with WdgMMode_1 mode.
 - the WdgM_MainFunction desn't execute the mode switch to WdgMMode_1 mode(global status remains
   Failed and the mode is changed to WdgMMode_1).

 
Test Object: None.
Test Precondition: 

 The WdgM is initialized.
 The WdgMGetExpectedInitStateCallout is set to behave in the following way:
 - the value of param[out](InitStatus) is WDGM_EB_INIT_STATUS_DEINIT;
 - the return value is E_NOT_OK.
 The WdgMGetExpectedWdgMModeCallout is set to behave in the following way:
 - the value of param[out](WdgMMode) is WdgMMode_1;
 - the return value is E_OK.

 For detailed description regarding the used configuration please see
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 
Test Execution: 

 Abstract Global state transition table:
 ==================================================================================================
 Item No.| Transition Trigger   | Initial Global  status\ mode   | Final  Global  status          |
 ==================================================================================================
 1       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED\| WDGM_GLOBAL_STATUS_OK          |
         | (execution step 02a) | NA                             | WdgMInitialMode(WdgMMode_0)    |
 --------------------------------------------------------------------------------------------------
 2       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_FAILED      |
         | (execution step 02b) | WdgMInitialMode(WdgMMode_0)    | WdgMInitialMode(WdgMMode_0)    |
 --------------------------------------------------------------------------------------------------
 3       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_FAILED      | WDGM_GLOBAL_STATUS_FAILED      |
         | (execution step 03)  | WdgMInitialMode(WdgMMode_0)    | WdgMMode_1                     |
 ==================================================================================================

 01: Initialize test case dependences.
 Sanity check: Set and check preconditions
   02a) Initialize WdgM and to WdgMInitialMode and check global status to be OK and the current mode
        to be WdgMInitialMode;
   02b) Change the WdgM Global status to Failed;
   02c) Set and check the WdgMGetExpectedInitStateCallout behavior to be as described in
        precondition section;
   02d) Set and check the WdgMGetExpectedWdgMModeCallout behavior to be as described in
        precondition section;
 03: Call the WdgM_MainFunction.
 04: VP (WDGM.EB.TIMEPM.WDGM020101_Conf)
     Check that the WdgMGetExpectedInitStateCallout is called by each WdgM_MainFunction call.
 05: VP (WDGM.EB.TIMEPM.WDGM020408)
     Check that the WdgMInitRedirectionCallout is redirected by using the WdgM_DeInit
     function name.
 06: VP (WDGM.EB.TIMEPM.WDGM020103_Conf)
     Check that the WdgMGetExpectedWdgMModeCallout is called by each WdgM_MainFunction call.
 07: VP (WDGM.EB.TIMEPM.WDGM020402)
     Check that the WdgMSetModeRedirectionCallout is redirected by using the WdgM_SetMode
     function name.
 08: VP (WDGM.EB.TIMEPM.WDGM020419)
     Check that the WdgM_MainFunction execute the mode switch to WdgMMode_1(Global status
     remainso OK, and the current mode in changed to WdgMMode_1).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020116_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020408</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020419</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2033</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_09</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE03/source/application/WdgM_ImpTest_07_TimE03.c</sourcefile>
      <sourceline>1573</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Test the WdgM behavior in case the supervisor is present and the WdgM callouts
 from the "WdgM Callouts Configuration Table" are provided as described in the
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table" from
   TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case description;
 - "Cause-Effect Graphing", as described in the "Abstract Global state transition table".

 The testing aspects derived from the above "Pair wise table" for this particular test case are:
 - the initial mode is WdgMInitialMode;
 - no mode switch is not performed when the Global status is Failed for the following
   use case is provided:
   - the WdgMGetExpectedInitStateCallout returns E_NOT_OK with de-initialization request;
   - the WdgMGetExpectedWdgMModeCallout return E_OK with WdgMInitialMode mode.
 - the WdgM_MainFunction desn't execute any mode because the requested mode is the current mode
   (global status remains Failed and the mode remains to WdgMInitialMode).

 
Test Object: None.
Test Precondition: 

 The WdgM is initialized with WdgMInitialMode.
 The WdgMGetExpectedInitStateCallout is set to behave in the following way:
 - the value of param[out](InitStatus) is WDGM_EB_INIT_STATUS_DEINIT;
 - the return value is E_NOT_OK.
 The WdgMGetExpectedWdgMModeCallout is set to behave in the following way:
 - the value of param[out](WdgMMode) is WdgMInitialMode(WdgMMode_0);
 - the return value is E_OK.

 For detailed description regarding the used configuration please see
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 
Test Execution: 

 Abstract Global state transition table:
 ==================================================================================================
 Item No.| Transition Trigger   | Initial Global  status\ mode   | Final  Global  status          |
 ==================================================================================================
 1       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED\| WDGM_GLOBAL_STATUS_OK          |
         | (execution step 02a) | NA                             | WdgMInitialMode(WdgMMode_0)    |
 --------------------------------------------------------------------------------------------------
 2       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_FAILED      |
         | (execution step 02b) | WdgMInitialMode(WdgMMode_0)    | WdgMInitialMode(WdgMMode_0)    |
 --------------------------------------------------------------------------------------------------
 3       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_FAILED      | WDGM_GLOBAL_STATUS_FAILED      |
         | (execution step 03)  | WdgMInitialMode(WdgMMode_0)    | WdgMInitialMode(WdgMMode_0)    |
 ==================================================================================================

 01: Initialize test case dependences.
 Sanity check: Set and check preconditions
   02a) Initialize WdgM and to WdgMInitialMode and check global status to be OK and the current mode
        to be WdgMInitialMode;
   02b) Change the WdgM Global status to Failed;
   02c) Set and check the WdgMGetExpectedInitStateCallout behavior to be as described in
        precondition section;
   02d) Set and check the WdgMGetExpectedWdgMModeCallout behavior to be as described in
        precondition section;
 03: Call the WdgM_MainFunction.
 04: VP (WDGM.EB.TIMEPM.WDGM020101_Conf)
     Check that the WdgMGetExpectedInitStateCallout is called by each WdgM_MainFunction call.
 05: VP (WDGM.EB.TIMEPM.WDGM020408)
     Check that the WdgMDeInitRedirectionCallout is redirected by using the WdgM_DeInit
     function name.
 06: VP (WDGM.EB.TIMEPM.WDGM020103_Conf)
     Check that the WdgMGetExpectedWdgMModeCallout is called by each WdgM_MainFunction call.
 07: VP (WDGM.EB.TIMEPM.WDGM020402)
     Check that the WdgMSetModeRedirectionCallout is redirected by using the WdgM_SetMode
     function name.
 08: VP (WDGM.EB.TIMEPM.WDGM020415, WDGM.EB.TIMEPM.WDGM020419)
     Check that the WdgM_MainFunction doesn't execute the de-initialization and the mode switch
     to WdgMMode_1(Global status remains OK, and the current mode remains WdgMInitialMode).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020116_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020408</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020415</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020419</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2034</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE03/source/application/WdgM_ImpTest_07_TimE03.c</sourcefile>
      <sourceline>1769</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Test the WdgM behavior in case the supervisor is present and the WdgM callouts
 from the "WdgM Callouts Configuration Table" are provided as described in the
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table" from
   TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case description;
 - "Cause-Effect Graphing", as described in the "Abstract Global state transition table".

 The testing aspects derived from the above "Pair wise table" for this particular test case are:
 - the initial mode is WdgMInitialMode;
 - the de-initialization request is performed by the WdgM_MainFunction when the Global status
   is Failed and the following use case is provided:
   - the WdgMGetExpectedInitStateCallout returns E_OK with de-initialization request;
   - the WdgMGetExpectedWdgMModeCallout return E_OK with WdgMInitialMode mode.
 - the WdgM_MainFunction execute the de-initialization and the Supervision Algorithms which
   includes calculation of the local / global supervision status and triggering of the watchdogs
   when the WdgM is not initialized(WdgM Global status changes to Deactivated);


 
Test Object: None.
Test Precondition: 

 The WdgM is initialized with WdgMInitialMode.
 The WdgMGetExpectedInitStateCallout is set to behave in the following way:
 - the value of param[out](InitStatus) is WDGM_EB_INIT_STATUS_DEINIT;
 - the return value is E_OK.
 The WdgMGetExpectedWdgMModeCallout is set to behave in the following way:
 - the value of param[out](WdgMMode) is WdgMInitialMode(WdgMMode_0);
 - the return value is E_OK.

 For detailed description regarding the used configuration please see
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 
Test Execution: 

 Abstract Global state transition table:
 ==================================================================================================
 Item No.| Transition Trigger   | Initial Global  status\ mode   | Final  Global  status          |
 ==================================================================================================
 1       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED\| WDGM_GLOBAL_STATUS_OK          |
         | (execution step 02a) | NA                             | WdgMInitialMode(WdgMMode_0)    |
 --------------------------------------------------------------------------------------------------
 2       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_FAILED      |
         | (execution step 02b) | WdgMInitialMode(WdgMMode_0)    | WdgMInitialMode(WdgMMode_0)    |
 --------------------------------------------------------------------------------------------------
 2       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_DEACTIVATED\|
         | (execution step 03)  | WdgMInitialMode(WdgMMode_0)    | NA                             |
 ==================================================================================================

 01: Initialize test case dependences.
 Sanity check: Set and check preconditions
   02a) Initialize WdgM and to WdgMInitialMode and check global status to be OK and the current mode
        to be WdgMInitialMode;
   02b) Change the WdgM Global status to Failed;
   02c) Set and check the WdgMGetExpectedInitStateCallout behavior to be as described in
        precondition section;
   02d) Set and check the WdgMGetExpectedWdgMModeCallout behavior to be as described in
        precondition section;
 03: Call the WdgM_MainFunction.
 04: VP (WDGM.EB.TIMEPM.WDGM020101_Conf)
     Check that the WdgMGetExpectedInitStateCallout is called by each WdgM_MainFunction call.
 05: VP (WDGM.EB.TIMEPM.WDGM020408)
     Check that the WdgMDeInitRedirectionCallout is redirected by using the WdgM_DeInit
     function name.
 06: VP (WDGM.EB.TIMEPM.WDGM020103_Conf)
     Check that the WdgMGetExpectedWdgMModeCallout is called by each WdgM_MainFunction call.
 07: VP (WDGM.EB.TIMEPM.WDGM020402)
     Check that the WdgMSetModeRedirectionCallout is redirected by using the WdgM_SetMode
     function name.
 08: VP (WDGM.EB.TIMEPM.WDGM020415, WDGM.EB.TIMEPM.WDGM020435, WDGM.EB.TIMEPM.WDGM020420)
     Check that the WdgM_MainFunction execute the de-initialization and the Supervision Algorithms
     which includes calculation of the local / global supervision status and triggering of the
     watchdogs when the WdgM is not initialized(WdgM Global status changes to Deactivated);

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020116_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020408</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020415</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2035</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE03/source/application/WdgM_ImpTest_07_TimE03.c</sourcefile>
      <sourceline>1965</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Test the WdgM behavior in case the supervisor is present and the WdgM callouts
 from the "WdgM Callouts Configuration Table" are provided as described in the
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table" from
   TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case description;
 - "Cause-Effect Graphing", as described in the "Abstract Global state transition table".

 The testing aspects derived from the above "Pair wise table" for this particular test case are:
 - the initial mode is WdgMInitialMode;
 - the de-initialization request is performed by the WdgM_MainFunction when the Global status
   is Expired and the following use case is provided:
   - the WdgMGetExpectedInitStateCallout returns E_OK with de-initialization request;
   - the WdgMGetExpectedWdgMModeCallout return E_OK with WdgMMode_1 mode.
 - the WdgM_MainFunction execute the de-initialization and the Supervision Algorithms which
   includes calculation of the local / global supervision status and triggering of the watchdogs
   when the WdgM is not initialized(WdgM Global status changes to Deactivated);


 
Test Object: None.
Test Precondition: 

 The WdgM is initialized with WdgMInitialMode.
 The WdgMGetExpectedInitStateCallout is set to behave in the following way:
 - the value of param[out](InitStatus) is WDGM_EB_INIT_STATUS_DEINIT;
 - the return value is E_OK.
 The WdgMGetExpectedWdgMModeCallout is set to behave in the following way:
 - the value of param[out](WdgMMode) is WdgMMode_1;
 - the return value is E_OK.

 For detailed description regarding the used configuration please see
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 
Test Execution: 

 Abstract Global state transition table:
 ==================================================================================================
 Item No.| Transition Trigger   | Initial Global  status\ mode   | Final  Global  status          |
 ==================================================================================================
 1       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED\| WDGM_GLOBAL_STATUS_OK          |
         | (execution step 02a) | NA                             | WdgMInitialMode(WdgMMode_0)    |
 --------------------------------------------------------------------------------------------------
 2       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_EXPIRED     |
         | (execution step 02b) | WdgMInitialMode(WdgMMode_0)    | WdgMInitialMode(WdgMMode_0)    |
 --------------------------------------------------------------------------------------------------
 2       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_EXPIRED     | WDGM_GLOBAL_STATUS_DEACTIVATED\|
         | (execution step 03)  | WdgMInitialMode(WdgMMode_0)    | NA                             |
 ==================================================================================================

 01: Initialize test case dependences.
 Sanity check: Set and check preconditions
   02a) Initialize WdgM and to WdgMInitialMode and check global status to be OK and the current mode
        to be WdgMInitialMode;
   02b) Change the WdgM Global status to Expired;
   02c) Set and check the WdgMGetExpectedInitStateCallout behavior to be as described in
        precondition section;
   02d) Set and check the WdgMGetExpectedWdgMModeCallout behavior to be as described in
        precondition section;
 03: Call the WdgM_MainFunction.
 04: VP (WDGM.EB.TIMEPM.WDGM020101_Conf)
     Check that the WdgMGetExpectedInitStateCallout is called by each WdgM_MainFunction call.
 05: VP (WDGM.EB.TIMEPM.WDGM020408)
     Check that the WdgMDeInitRedirectionCallout is redirected by using the WdgM_DeInit
     function name.
 06: VP (WDGM.EB.TIMEPM.WDGM020103_Conf)
     Check that the WdgMGetExpectedWdgMModeCallout is called by each WdgM_MainFunction call.
 07: VP (WDGM.EB.TIMEPM.WDGM020402)
     Check that the WdgMSetModeRedirectionCallout is redirected by using the WdgM_SetMode
     function name.
 08: VP (WDGM.EB.TIMEPM.WDGM020465, WDGM.EB.TIMEPM.WDGM020435, WDGM.EB.TIMEPM.WDGM020420)
     Check that the WdgM_MainFunction execute the de-initialization and the Supervision Algorithms
     which includes calculation of the local / global supervision status and triggering of the
     watchdogs when the WdgM is not initialized(WdgM Global status changes to Deactivated);

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020116_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020408</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020465</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2036</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE03/source/application/WdgM_ImpTest_07_TimE03.c</sourcefile>
      <sourceline>2161</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Test the WdgM behavior in case the supervisor is present and the WdgM callouts
 from the "WdgM Callouts Configuration Table" are provided as described in the
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table" from
   TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case description;
 - "Cause-Effect Graphing", as described in the "Abstract Global state transition table".

 The testing aspects derived from the above "Pair wise table" for this particular test case are:
 - the initial mode is WdgMInitialMode;
 - the de-initialization request is performed by the WdgM_MainFunction when the Global status
   is Stopped and the following use case is provided:
   - the WdgMGetExpectedInitStateCallout returns E_OK with de-initialization request;
   - the WdgMGetExpectedWdgMModeCallout return E_OK with WdgMInitialMode mode.
 - the WdgM_MainFunction execute the de-initialization and the Supervision Algorithms which
   includes calculation of the local / global supervision status and triggering of the watchdogs
   when the WdgM is not initialized(WdgM Global status changes to Deactivated);


 
Test Object: None.
Test Precondition: 

 The WdgM is initialized with WdgMInitialMode.
 The WdgMGetExpectedInitStateCallout is set to behave in the following way:
 - the value of param[out](InitStatus) is WDGM_EB_INIT_STATUS_DEINIT;
 - the return value is E_OK.
 The WdgMGetExpectedWdgMModeCallout is set to behave in the following way:
 - the value of param[out](WdgMMode) is WdgMInitialMode(WdgMMode_0);
 - the return value is E_OK.

 For detailed description regarding the used configuration please see
 TS_WDGM_TimE_CheckInitDeInitModeSwitchBehavior_SupervisorEnabled_01 test case preconditions.

 
Test Execution: 

 Abstract Global state transition table:
 ==================================================================================================
 Item No.| Transition Trigger   | Initial Global  status\ mode   | Final  Global  status          |
 ==================================================================================================
 1       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED\| WDGM_GLOBAL_STATUS_OK          |
         | (execution step 02a) | NA                             | WdgMInitialMode(WdgMMode_0)    |
 --------------------------------------------------------------------------------------------------
 2       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK          | WDGM_GLOBAL_STATUS_STOPPED     |
         | (execution step 02b) | WdgMInitialMode(WdgMMode_0)    | WdgMInitialMode(WdgMMode_0)    |
 --------------------------------------------------------------------------------------------------
 2       |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_STOPPED     | WDGM_GLOBAL_STATUS_DEACTIVATED\|
         | (execution step 03)  | WdgMInitialMode(WdgMMode_0)    | NA                             |
 ==================================================================================================

 01: Initialize test case dependences.
 Sanity check: Set and check preconditions
   02a) Initialize WdgM and to WdgMInitialMode and check global status to be OK and the current mode
        to be WdgMInitialMode;
   02b) Change the WdgM Global status to Stopped;
   02c) Set and check the WdgMGetExpectedInitStateCallout behavior to be as described in
        precondition section;
   02d) Set and check the WdgMGetExpectedWdgMModeCallout behavior to be as described in
        precondition section;
 03: Call the WdgM_MainFunction.
 04: VP (WDGM.EB.TIMEPM.WDGM020101_Conf)
     Check that the WdgMGetExpectedInitStateCallout is called by each WdgM_MainFunction call.
 05: VP (WDGM.EB.TIMEPM.WDGM020408)
     Check that the WdgMDeInitRedirectionCallout is redirected by using the WdgM_DeInit
     function name.
 06: VP (WDGM.EB.TIMEPM.WDGM020103_Conf)
     Check that the WdgMGetExpectedWdgMModeCallout is called by each WdgM_MainFunction call.
 07: VP (WDGM.EB.TIMEPM.WDGM020402)
     Check that the WdgMSetModeRedirectionCallout is redirected by using the WdgM_SetMode
     function name.
 08: VP (WDGM.EB.TIMEPM.WDGM020465, WDGM.EB.TIMEPM.WDGM020435, WDGM.EB.TIMEPM.WDGM020420)
     Check that the WdgM_MainFunction execute the de-initialization and the Supervision Algorithms
     which includes calculation of the local / global supervision status and triggering of the
     watchdogs when the WdgM is not initialized(WdgM Global status changes to Deactivated);

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020116_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020408</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020465</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020435</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020420</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2037</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckWdgMExpiredNotification</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE03/source/application/WdgM_ImpTest_07_TimE03.c</sourcefile>
      <sourceline>2357</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the WdgM notifies the Supervisor that the Supervised Entity with the passed ID
 has changed the Local Status to WDGM_LOCAL_STATUS_EXPIRED.

 The testing method is "Cause-Effect Graphing".
 The cause and effects are self explained by the test case description.

 
Test Object: None.
Test Precondition: 

 WdgMSupervisionExpiredCallout is enabled and not empty.
 The WdgM is initialized and the Global status is WDGM_GLOBAL_STATUS_OK.
 The tested mode is WdgM_WdgMMode_0.
 The configuration used is the same as for the TS_WDGM_TimE_CheckInit_SupervisorEnabled_01
 test cases.

 
Test Execution: 

 01: Initialize test case dependences.
 02: Initialize WdgM and variables to ensure preconditions for this test-case.
 03: Sanity check: Check preconditions
     - Change the current mode to the tested mode and check the request is performed.
     - Get and Check Global Status to be WDGM_GLOBAL_STATUS_OK.
     - Get and Check Local Status for the tested Supervised Entity to be WDGM_LOCAL_STATUS_OK.
     - Changes WdgM status to the last failed alive supervision cycle by calling several time
       the WdgM_MainFunction without any alive indication.
     - Get and Check Global Status to be WDGM_GLOBAL_STATUS_FAILED.
     - Get and Check Local Status for the tested Supervised Entity to be WDGM_LOCAL_STATUS_FAILED.
 04: VP (WDGM.EB.TIMEPM.WDGM020106_Conf)
     Check that the SupervisionExpiredCallout was not previously called.
 05: Changes WdgM status to expired alive supervision by calling once the WdgM_MainFunction
     without any previous Supervision CheckPoint reached notification.
 06: VP (WDGM.EB.TIMEPM.WDGM020106_Conf)
     Get and Check Global Status to be WDGM_GLOBAL_STATUS_EXPIRED.
 07: VP (WDGM.EB.TIMEPM.WDGM020106_Conf)
     Get and Check Local Status for the tested Supervised Entity to be WDGM_LOCAL_STATUS_EXPIRED.
 08: VP (WDGM.EB.TIMEPM.WDGM020106_Conf)
     Check the SupervisionExpiredCallout to be called by WdgM with the expected expired ID.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020106_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2038</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckAliveDataOverflow</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE03/source/application/WdgM_ImpTest_07_TimE03.c</sourcefile>
      <sourceline>2494</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests WdgM behavior for the case when AliveCounter overflow occurs.

 No testing method applies for this test case.

 
Test Object: None.
Test Precondition: 

 The WdgM is initialized and the Global status is WDGM_GLOBAL_STATUS_OK.
 The tested mode is WdgM_WdgMMode_1
 The configuration used is the same as for the TS_WDGM_TimE_CheckInit_SupervisorEnabled_01
 test cases.

 
Test Execution: 

 01: Initialize test case dependences.
 02: Initialize WdgM and variables to ensure preconditions for this test-case.
 03: Sanity check: Check preconditions
     - Get and Check WdgM current Mode to be as required.
     - Get and Check Global Status to be WDGM_GLOBAL_STATUS_OK.
     - Get and Check Local Status for the tested Supervised Entity to be WDGM_LOCAL_STATUS_OK.
     - Check ExpectedAliveIndication for the tested CP to be equal to maximum margin value of
       the type definition.
 04: Send the right amount of Alive Indication for the tested Alive Supervision in order to
     generate several Alive Counter overflows and Check the status of the WdgM to be as
     following:
 05: VP (WdgM.ASR40.WDGM098)
     - The Global status equals WDGM_GLOBAL_STATUS_OK.
 06: VP (WdgM.ASR40.WDGM098)
     - The Local status for the tested Supervised Entity equals WDGM_LOCAL_STATUS_OK.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2039</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE04/source/application/WdgM_ImpTest_07_TimE04.c</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests TimE Local and Global state machines behavior depending on the WdgMErrorRecoveryEnabled
 parameter in case there is only WdgM Alive Supervision configured for the tested mode.
 There following aspects are tested:
 1) The first part tests the Alive Supervision failure detection due to simulated Alive Check Point
    reached omission for enough cycles to change state to Stopped:
    - p0: WdgMErrorRecoveryEnabled is enabled =&gt; the Stopped state is never reached(the state
          is changed to Failed and remains in this state until the WdgM recovers from error);
    - p1: WdgMErrorRecoveryEnabled is disabled =&gt; the Stopped state is reached.
 2) The second part tests the Alive Supervision failure recovery:
    - p0: WdgMErrorRecoveryEnabled is enabled =&gt; the recovery from Failed state is performed by
          changing state from Failed to OK;
    - p1: WdgMErrorRecoveryEnabled is disabled =&gt; the recovery from Failed state is possible
          only by reset;
 3) As an intermediate state, the WdgM Alive failure counter is tested to perform as following:
    - For the first part( the Alive failure is simulated): the Alive failure counter is incremented
      until reaches FailedAliveSupervisionRefCycleTol value( at this moment the state is changed to
      Expired, only for the p1 case);
    - For the first part( the Alive failure recovery is performed): the Alive failure counter is
      decremented until reaches 0 value( at this moment the state is changed to
      OK, only for the p0 case).

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table";
 - "Cause-Effect Graphing", as described in the "Abstract Global\Local state transition table".

 Pair wise table:
 ================================================================================================
 Tcs_ID|WdgMError      |Supervision   |FailedAliveSupervision|      WdgM Local status(SEn)      |
       |RecoveryEnabled|ReferenceCycle|RefCycleTol           | Initial  |      Failure          |
       |               |              |                      |          | Detection | Recovery  |
 ================================================================================================
 01(p0)| ENABLED       | 2            | 2                    |  OK      | Failed    |  OK       |

 01(p1)| DISABLED      | 2            | 2                    |  OK      | Failed    | Expired   |
       |               |              |                      |          |           |(Wdg reset)|
 -----------------------------------------------------------------------------------------------
 02(p0)| ENABLED       | 1            | 0                    |  OK      | Failed    |  OK       |

 02(p1)| DISABLED      | 1            | 0                    |  OK      | Expired   | Expired   |
       |               |              |                      |          |           |(Wdg reset)|
 ================================================================================================
 Note: the "Tcs_ID" represents the ID of the test case with the following name:
       TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_&amp;gt;Tcs_ID&amp;lt;.
       SEn, n=0..1: Represent the tested Supervised Entities:
       - SE0, for Tcs_ID=01;
       - SE1, for Tcs_ID=02.


 
Test Object: None.
Test Precondition: 

 WdgM is initialized and is in WdgM_WdgMMode_0 mode which has only Alive Supervision configured.
 The Global\Local status is OK.
 The following configuration is used for all tests:

 Permutation table:
 --------------------------------------------------------
 Parameter / Permutation             | p0      | p1      |
 ========================================================
 WdgMErrorRecoveryEnabled            | true    | false   |
 --------------------------------------------------------
 Note: This test and all sub-sequent tests are executed with the configuration permutations
 described in the above "Permutation table".

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4
  WdgMSupervisedEntity_1: Checkpoints: CP1_1

Modes and configured WdgMTriggers:
                    ConfigName  TriggerCondition  TriggerMode  DeviceIndex
                       |          |                |               |
  WdgMMode_0:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_1:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_2:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_3:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5

Modes and configured AliveSupervisions:
  WdgMMode_0 (Initial Mode): WdgMSupervisedEntity_0(CP0_1)
                             WdgMSupervisedEntity_0(CP0_2)
                             WdgMSupervisedEntity_0(CP0_3)
                             WdgMSupervisedEntity_0(CP0_4)
  WdgMMode_1: WdgMSupervisedEntity_1(CP1_1)

Modes and configured DeadlineSupervisions:
  WdgMMode_2: WdgMSupervisedEntity_0(CP0_1-&gt;CP0_2)

Modes and configured ExternalLogicalSupervisions:
                     |-&gt;CP0_2-&gt;CP0_3-&gt;|
  WdgMMode_3: CP0_1-&gt;|                |-&gt;CP1_1
                     |----&gt;CP0_4-----&gt;|

Modes and configured parameters for WdgMSupervisedEntity_0:
  WdgMMode_0:
    WdgMModeId: 0
    WdgMSupervisionReferenceCycle          2
    WdgMExpectedAliveIndications           1
    WdgMMaxMargin                          0
    WdgMMinMargin                          0
    WdgMFailedAliveSupervisionRefCycleTol  2
    WdgMExpiredSupervisionCycleTol         5
    Note: This configuration is identical for all configured CPs for this mode.
  WdgMMode_1:
    unused.
  WdgMMode_2:
    WdgMModeId: 2
    WdgMExpiredSupervisionCycleTol         5
    WdgMDeadlineSupervision_0:
      WdgMDeadlineMax:  0.01
      WdgMDeadlineMin:  0.01
  WdgMMode_3:
    WdgMModeId: 3
    WdgMExpiredSupervisionCycleTol         5

Modes and configured parameters for WdgMSupervisedEntity_1:
  WdgMMode_0:
     unused.
  WdgMMode_1:
    WdgMModeId: 1
    WdgMSupervisionReferenceCycle          1
    WdgMExpectedAliveIndications           1
    WdgMMaxMargin                          0
    WdgMMinMargin                          0
    WdgMFailedAliveSupervisionRefCycleTol  0
    WdgMExpiredSupervisionCycleTol         1
  WdgMMode_2:
     unused.
  WdgMMode_3:
    WdgMModeId: 3
    WdgMExpiredSupervisionCycleTol         5

 
Test Execution: 

 Abstract Global/Local Supervision Status transition table used in the test execution:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   |Initial Global/Local status(SE0)|Final  Global/Local status(SE0)|
 =================================================================================================
 1        |WdgM_MainFunction call|WDGM_GLOBAL_STATUS_DEACTIVATED/ | WDGM_GLOBAL_STATUS_OK /       |
          | (execution step 02)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_OK          |
 -------------------------------------------------------------------------------------------------
 2        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_FAILED /   |
          | (execution step 03)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_FAILED      |
          |  the FailedAliveSupervisionRefCycleCnt is incremented until it reaches                |
          |  the WdgMFailedAliveSupervisionRefCycleTol configured value                           |
 -------------------------------------------------------------------------------------------------
 3(p0)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_FAILED /    | WDGM_GLOBAL_STATUS_FAILED /   |
          | (execution step 05)  | WDGM_LOCAL_STATUS_FAILED       | WDGM_LOCAL_STATUS_FAILED      |
          |  the FailedAliveSupervisionRefCycleCnt was incremented and has reached                |
          |  WdgMFailedAliveSupervisionRefCycleTol configured value                               |

 3(p1)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_FAILED /    | WDGM_GLOBAL_STATUS_STOPPED /  |
          | (execution step 05)  | WDGM_LOCAL_STATUS_FAILED       | WDGM_LOCAL_STATUS_EXPIRED     |
          |  the FailedAliveSupervisionRefCycleCnt was incremented and has reached                |
          |  WdgMFailedAliveSupervisionRefCycleTol configured value                               |
 -------------------------------------------------------------------------------------------------
 4(p0)    |WdgM failure recovery | WDGM_GLOBAL_STATUS_FAILED /    | WDGM_GLOBAL_STATUS_OK /       |
          | (execution step 07)  | WDGM_LOCAL_STATUS_FAILED       | WDGM_LOCAL_STATUS_OK          |
          |  the FailedAliveSupervisionRefCycleCnt was decremented and reached 0                  |

 4(p1)    |WdgM failure recovery | WDGM_GLOBAL_STATUS_STOPPED /   | WDGM_GLOBAL_STATUS_STOPPED /  |
          | (execution step 07)  | WDGM_LOCAL_STATUS_EXPIRED      | WDGM_LOCAL_STATUS_EXPIRED     |
          |  the FailedAliveSupervisionRefCycleCnt remained equal to the                          |
          |  WdgMFailedAliveSupervisionRefCycleTol configured value                               |
 -------------------------------------------------------------------------------------------------
 Note: SE0 is the tested Supervised Entity.

 01: Initialize test case.
 02: Sanity check: Check preconditions
     Initialize WdgM module and set preconditions for the test case:
     - Retrieve the WdgM initial mode.
     - Change the WdgM Mode to the requested mode.
     - Check configuration data consistency for the tested mode.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
 03: Change WdgM status to alive supervision failure mode by calling WdgM_MainFunction() several
     times until the WdgMSupervisionReferenceCycle is reached without any alive indications.
 04: VP (WDGM.EB.TIMEPM.WDGM020482, WDGM.EB.TIMEPM.WDGM020483)
     Check the following aspects:
     - the FailedAliveSupervisionRefCycleCnt is incremented by 1 until reaches
       the WdgMFailedAliveSupervisionRefCycleTol configured value;
     - the Local state of the tested SE is changed from OK to Failed.
 05: Try to change WdgM global status to STOPPED. This step is performed by the WdgM_MainFunction
     only for the case with WdgMErrorRecoveryEnabled parameter is disabled(p1).
 06: VP (WDGM.EB.TIMEPM.WDGM020448)
     Check the following aspects:
     - the global status remains Failed, for permutation p0 and reaches Stopped, for
       permutation p1;
     - the local status for the tested Supervised Entity remains Failed, for permutation p0 and
       reaches Expired, for permutation p1;
 07: Recover from error state by performing normal Alive indication algorithm for several times.
 08: VP (WDGM.EB.TIMEPM.WDGM020484):
     Check the following aspects:
     p0: the FailedAliveSupervisionRefCycleCnt is decremented by 1 until reaches 0 for the case
         when WdgMErrorRecoveryEnabled parameter set true and the Global/Local status is Failed;
     p1: the FailedAliveSupervisionRefCycleCnt remains equal to the
         WdgMFailedAliveSupervisionRefCycleTol configured value and the Global/Local status remains
         Stopped(Global status)/Expired(Local status).
 09: VP (WDGM.EB.TIMEPM.WDGM020448):
     Check the following aspects:
     p0: the error recovery is done by the WdgM by changing the Global/Local
         status from Failed to OK when FailedAliveSupervisionRefCycleCnt reaches 0;
     p1: the error recovery is triggered by the external watchdog device( the WdgM triggers the
         watchdog is with 0, when reaching the Stopped global status).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020112_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020448</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020482</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020483</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>672</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020484</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>673</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2040</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE04/source/application/WdgM_ImpTest_07_TimE04.c</sourcefile>
      <sourceline>547</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests TimE Local and Global state machines behavior depending on the WdgMErrorRecoveryEnabled
 parameter in case there is only WdgM Alive Supervision configured for the tested mode.
 There following aspects are tested:
 1) The first part tests the Alive Supervision failure detection due to simulated Alive Check Point
    reached omission for enough cycles to change state to Stopped:
    - p0: WdgMErrorRecoveryEnabled is enabled =&gt; the Stopped state is never reached(the state
          is changed to Failed and remains in this state until the WdgM recovers from error);
    - p1: WdgMErrorRecoveryEnabled is disabled =&gt; the Stopped state is reached(but by doing that
          the state changes from OK to Expired and this is because the configured value for
          WdgMFailedAliveSupervisionRefCycleTol parameter is 0).
 2) The second part tests the Alive Supervision failure recovery:
    - p0: WdgMErrorRecoveryEnabled is enabled =&gt; the recovery from Failed state is performed by
          changing state from Failed to OK;
    - p1: WdgMErrorRecoveryEnabled is disabled =&gt; the recovery from Failed state is possible
          only by reset;
 3) As an intermediate state, the WdgM Alive failure counter is never incremented/decremented.
    This is due to configured value 0 for the WdgMFailedAliveSupervisionRefCycleTol parameter.

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table" from
   TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_01 test case description;
 - "Cause-Effect Graphing", as described in the "Abstract Global\Local state transition table".

 
Test Object: None.
Test Precondition: 

 WdgM is initialized and is in WdgM_WdgMMode_1 mode which has only Alive Supervision configured.
 The Global\Local status is OK.
 The following configuration is used for all tests:

 
Test Execution: 

 Abstract Global/Local Supervision Status transition table used in the test execution:
 --------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   |Initial Global/Local status(SE1)|Final  Global/Local status(SE1)|
 ==================================================================================================
 1        |WdgM_MainFunction call|WDGM_GLOBAL_STATUS_DEACTIVATED/ | WDGM_GLOBAL_STATUS_OK /       |
          | (execution step 02)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_OK          |
 --------------------------------------------------------------------------------------------------
 2(p0)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_FAILED /   |
          | (execution step 03)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_FAILED      |
          |  the FailedAliveSupervisionRefCycleCnt is not incremented nor decremented             |

 2(p1)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_EXPIRED /  |
          | (execution step 03)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_EXPIRED     |
          |  the FailedAliveSupervisionRefCycleCnt is not incremented nor decremented             |
 --------------------------------------------------------------------------------------------------
 3(p0)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_FAILED /    | WDGM_GLOBAL_STATUS_FAILED /   |
          | (execution step 05)  | WDGM_LOCAL_STATUS_FAILED       | WDGM_LOCAL_STATUS_FAILED      |
          |  the FailedAliveSupervisionRefCycleCnt is not incremented nor decremented             |

 3(p1)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_EXPIRED /   | WDGM_GLOBAL_STATUS_STOPPED /  |
          | (execution step 05)  | WDGM_LOCAL_STATUS_EXPIRED      | WDGM_LOCAL_STATUS_STOPPED     |
          |  the FailedAliveSupervisionRefCycleCnt is not incremented nor decremented             |
 --------------------------------------------------------------------------------------------------
 4(p0)    |WdgM failure recovery | WDGM_GLOBAL_STATUS_FAILED /    | WDGM_GLOBAL_STATUS_OK /       |
          | (execution step 07)  | WDGM_LOCAL_STATUS_FAILED       | WDGM_LOCAL_STATUS_OK          |
          |  the FailedAliveSupervisionRefCycleCnt is not incremented nor decremented             |

 4(p1)    |WdgM failure recovery | WDGM_GLOBAL_STATUS_STOPPED /   | WDGM_GLOBAL_STATUS_STOPPED /  |
          | (execution step 07)  | WDGM_LOCAL_STATUS_EXPIRED      | WDGM_LOCAL_STATUS_EXPIRED     |
          |  the FailedAliveSupervisionRefCycleCnt is not incremented nor decremented             |
 --------------------------------------------------------------------------------------------------
 Note: SE1 is the tested Supervised Entity.

 01: Initialize test case.
 02: Sanity check: Check preconditions
     Initialize WdgM module and set preconditions for the test case:
     - Retrieve the WdgM initial mode.
     - Change the WdgM Mode to the requested mode.
     - Check configuration data consistency for the tested mode.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
 03: Change WdgM status to alive supervision failure mode by calling WdgM_MainFunction() several
     times until the WdgMSupervisionReferenceCycle is reached without any alive indications.
 04: VP (WDGM.EB.TIMEPM.WDGM020482, WDGM.EB.TIMEPM.WDGM020483, WDGM.EB.TIMEPM.WDGM020448)
     Check the following aspects:
     - the FailedAliveSupervisionRefCycleCnt is not incremented nor decremented due to 0 value
       configured for the WdgMFailedAliveSupervisionRefCycleTol;
     - the Local state of the tested SE is changed:
       p0: from OK to Failed;
       p1: from OK to Expired.
 05: Try to change WdgM global status to STOPPED. This step is performed by the WdgM_MainFunction
     only for the case with WdgMErrorRecoveryEnabled parameter is disabled(p1).
 06: VP (WDGM.EB.TIMEPM.WDGM020448)
     Check the following aspects:
     - the global status remains Failed, for permutation p0 and reaches Stopped, for
       permutation p1;
     - the local status for the tested Supervised Entity remains Failed, for permutation p0 and
       remains Expired, for permutation p1;
 07: Recover from error state by performing normal Alive indication algorithm for several times.
 08: VP (WDGM.EB.TIMEPM.WDGM020484, WDGM.EB.TIMEPM.WDGM020448):
     Check that the FailedAliveSupervisionRefCycleCnt remains equal 0. This behavior is because:
     - the WdgMFailedAliveSupervisionRefCycleTol is configured to 0, for p0;
     - the global/local status is Stopped(global status)/Expired(local status), for p1.
 09: VP (WDGM.EB.TIMEPM.WDGM020448):
     Check the following aspects:
     p0: the error recovery is done by the WdgM by changing the Global/Local
         status from Failed to OK when FailedAliveSupervisionRefCycleCnt reaches 0;
     p1: the error recovery is triggered by the external watchdog device( the WdgM triggers the
         watchdog is with 0, when reaching the Stopped global status).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020112_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020448</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020482</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020483</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>672</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020484</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>673</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2041</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE04/source/application/WdgM_ImpTest_07_TimE04.c</sourcefile>
      <sourceline>861</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests TimE Local and Global state machines behavior depending on the WdgMErrorRecoveryEnabled
 parameter in case there is only WdgM Deadline Supervision configured for the tested mode.
 There following aspects are tested:
 1) The first part tests the Deadline Supervision failure detection due to simulated
    WdgMDeadlineMin time violation(caused by STOP_CP multiple occurrences before WdgMDeadlineMin
    is reached), in the following use-cases:
    - p0: WdgMErrorRecoveryEnabled is enabled =&gt; the Stopped state is never reached(the state
          is changed to Failed and remains in this state until the WdgM recovers from error);
    - p1: WdgMErrorRecoveryEnabled is disabled =&gt; the Stopped state is reached.
 2) The second part tests the Deadline Supervision failure recovery:
    - p0: WdgMErrorRecoveryEnabled is enabled =&gt; the recovery from Failed state is performed by
          changing state from Failed to OK;
    - p1: WdgMErrorRecoveryEnabled is disabled =&gt; the recovery from Failed state is possible
          only by reset;

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table";
 - "Cause-Effect Graphing", as described in the "Abstract Global\Local state transition table".

 Pair wise table:
 ================================================================================================
 Tcs_ID|WdgMError      |    Deadline Error type               |      WdgM Local status(SEn)     |
       |RecoveryEnabled|                                      | Initial  |        Failure       |
       |               |                                      |          | Detection| Recovery  |
 ================================================================================================
 01(p0)| ENABLED       |WdgMDeadlineMin time violation due to | OK       | Failed   | OK        |
       |               |STOP_CP multiple occurrence violation |          |          |           |

 01(p1)| DISABLED      |WdgMDeadlineMin time violation due to | OK       | Expired  | Expired   |
       |               |STOP_CP multiple occurrence violation |          |          |(Wdg reset)|
 ------------------------------------------------------------------------------------------------
 02(p0)| ENABLED       |WdgMDeadlineMax time violation due to | OK       | Failed   | OK        |
       |               |STOP_CP omission violation            |          |          |           |

 02(p1)| DISABLED      |WdgMDeadlineMax time violation due to | OK       | Expired  | Expired   |
       |               |STOP_CP omission violation            |          |          |(Wdg reset)|
 ------------------------------------------------------------------------------------------------
 03(p0)| ENABLED       |START_CP multiple occurrence violation| OK       | Failed   | OK        |

 03(p1)| DISABLED      |START_CP multiple occurrence violation| OK       | Expired  | Expired   |
       |               |                                      |          |          |(Wdg reset)|
 ================================================================================================
 Note: the "Tcs_ID" represents the ID of the test case with the following name:
       TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_&amp;gt;Tcs_ID&amp;lt;.

 
Test Object: None.
Test Precondition: 

 WdgM is initialized and is in WdgM_WdgMMode_2 mode which has only Deadline Supervision configured.
 For more details see the configuration described in the
 preconditions section from the "TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_01" test case.
 The Global\Local status is OK.
 The tested failure detection is WdgMDeadlineMin time violation.
 The configured Deadline Supervision has the following elements:
 START_CP -&gt; STOP_CP.

 
Test Execution: 

 Abstract Global/Local Supervision Status transition table used in the test execution:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   |Initial Global/Local status(SE0)|Final  Global/Local status(SE0)|
 =================================================================================================
 1        |WdgM_MainFunction call|WDGM_GLOBAL_STATUS_DEACTIVATED/ | WDGM_GLOBAL_STATUS_OK /       |
          | (execution step 02)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_OK          |
 -------------------------------------------------------------------------------------------------
 2(p0)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_FAILED /   |
          | (execution step 03)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_FAILED      |

 2(p1)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_EXPIRED /  |
          | (execution step 03)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_EXPIRED     |
 -------------------------------------------------------------------------------------------------
 3(p0)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_FAILED /    | WDGM_GLOBAL_STATUS_FAILED /   |
          | (execution step 05)  | WDGM_LOCAL_STATUS_FAILED       | WDGM_LOCAL_STATUS_FAILED      |

 3(p1)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_EXPIRED /   | WDGM_GLOBAL_STATUS_STOPPED /  |
          | (execution step 05)  | WDGM_LOCAL_STATUS_EXPIRED      | WDGM_LOCAL_STATUS_EXPIRED     |
 -------------------------------------------------------------------------------------------------
 4(p0)    |WdgM failure recovery | WDGM_GLOBAL_STATUS_FAILED /    | WDGM_GLOBAL_STATUS_OK /       |
          | (execution step 07)  | WDGM_LOCAL_STATUS_FAILED       | WDGM_LOCAL_STATUS_OK          |

 4(p1)    |WdgM failure recovery | WDGM_GLOBAL_STATUS_STOPPED /   | WDGM_GLOBAL_STATUS_STOPPED /  |
          | (execution step 07)  | WDGM_LOCAL_STATUS_EXPIRED      | WDGM_LOCAL_STATUS_EXPIRED     |
 -------------------------------------------------------------------------------------------------
 Note: SE0 is the tested Supervised Entity.

 The following Deadline Supervision CPs reached sequence is used to check the Error recovery feature
 in this case:
  ---------------------------------------------------------------------
 Step No.| CP name  | Elapsed time           | WdgM SE local state    |
 ======================================================================
 1       | START_CP | 0(cycle origin point)  | OK                     |
 ----------------------------------------------------------------------
 2       | STOP_CP  | WdgMDeadlineMin/2      | FAILED(p0)/EXPIRED(p1) |
 ----------------------------------------------------------------------
 3       | STOP_CP  | NA                     | FAILED(p0)/EXPIRED(p1) |
 ----------------------------------------------------------------------
 4       | START_CP | 0(cycle origin point)  | FAILED(p0)/EXPIRED(p1) |
 ----------------------------------------------------------------------
 5       | STOP_CP  | WdgMDeadlineMin        | OK                     |
 ----------------------------------------------------------------------

 01: Initialize test case and
     change the WdgM Mode to the requested mode.
 02: Change WdgM status to deadline supervision failure mode by simulating the WdgMDeadlineMin
     time violation failure due to STOP_CP multiple occurrences before WdgMDeadlineMin is reached.
     Call the WdgM_MainFunction.
 03: VP (WDGM.EB.TIMEPM.WDGM020448, WDGM.EB.TIMEPM.WDGM020480, WDGM.EB.TIMEPM.Safety020705)
     Check that the simulated failure is detected by the WdgM. The failure detection changes WdgM
     global/local status to:
       - Failed, for permutation p0
       - Expired, for permutation p1;
 04: Try to change WdgM global status to STOPPED. This step is performed by the WdgM_MainFunction
     only for the case with WdgMErrorRecoveryEnabled parameter is disabled(p1).
 05: VP (WDGM.EB.TIMEPM.WDGM020448)
     Check that the simulated error is detected by the WdgM:
     - the global/local status is changed to Failed.
 06: Recover from error state by performing once the normal Deadline Supervision algorithm.
 07: VP (WDGM.EB.TIMEPM.WDGM020104_Conf)
     Check that the WdgMGetElapsedTimeCallout is called by WdgM_CheckPointReached function
     for each CheckPoint which is part of the Deadline supervision(the exception for this rule
     is the case when STOP_CP is called for the second time before START_CP. In this case the
     WdgM_CheckPointReached is not requiring anymore the time stamp data).
 08: Call the WdgM_MainFunction.
 09: VP (WDGM.EB.TIMEPM.WDGM020448, WDGM.EB.TIMEPM.Safety020701)
     Check the following aspects:
     p0: the error recovery is done by the WdgM by changing the Global/Local status from Failed to OK
         when the first correct Deadline Supervision algorithm is detected;
     p1: the error recovery is triggered by the external watchdog device( the WdgM triggers the
         watchdog is with 0, when reaching the Stopped global status).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020112_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020104_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020448</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020480</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>669</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020701</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>729</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020705</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>733</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2042</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE04/source/application/WdgM_ImpTest_07_TimE04.c</sourcefile>
      <sourceline>1240</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests TimE Local and Global state machines behavior depending on the WdgMErrorRecoveryEnabled
 parameter in case there is only WdgM Deadline Supervision configured for the tested mode.
 There following aspects are tested:
 1) The first part tests the Deadline Supervision failure detection due to simulated
    WdgMDeadlineMax time violation(caused by STOP_CP omission violation after the WdgMDeadlineMax
    is reached), in the following use-cases:
    - p0: WdgMErrorRecoveryEnabled is enabled =&gt; the Stopped state is never reached(the state
          is changed to Failed and remains in this state until the WdgM recovers from error);
    - p1: WdgMErrorRecoveryEnabled is disabled =&gt; the Stopped state is reached.
 2) The second part tests the Deadline Supervision failure recovery:
    - p0: WdgMErrorRecoveryEnabled is enabled =&gt; the recovery from Failed state is performed by
          changing state from Failed to OK;
    - p1: WdgMErrorRecoveryEnabled is disabled =&gt; the recovery from Failed state is possible
          only by reset;

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table" from
   TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_01 test case description;
 - "Cause-Effect Graphing", as described in the "Abstract Global\Local state transition table".

 
Test Object: None.
Test Precondition: 

 WdgM is initialized and is in WdgM_WdgMMode_2 mode which has only Deadline Supervision configured.
 For more details see the configuration described in the
 preconditions section from the "TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_01" test case.
 The Global\Local status is OK.
 The tested failure detection is WdgMDeadlineMax time violation.
 The configured Deadline Supervision has the following elements:
 START_CP -&gt; STOP_CP.

 
Test Execution: 

 Abstract Global/Local Supervision Status transition table used in the test execution:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   |Initial Global/Local status(SE0)|Final  Global/Local status(SE0)|
 =================================================================================================
 1        |WdgM_MainFunction call|WDGM_GLOBAL_STATUS_DEACTIVATED/ | WDGM_GLOBAL_STATUS_OK /       |
          | (execution step 02)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_OK          |
 -------------------------------------------------------------------------------------------------
 2(p0)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_FAILED /   |
          | (execution step 03)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_FAILED      |

 2(p1)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_EXPIRED /  |
          | (execution step 03)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_EXPIRED     |
 -------------------------------------------------------------------------------------------------
 3(p0)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_FAILED /    | WDGM_GLOBAL_STATUS_FAILED /   |
          | (execution step 05)  | WDGM_LOCAL_STATUS_FAILED       | WDGM_LOCAL_STATUS_FAILED      |

 3(p1)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_EXPIRED /   | WDGM_GLOBAL_STATUS_STOPPED /  |
          | (execution step 05)  | WDGM_LOCAL_STATUS_EXPIRED      | WDGM_LOCAL_STATUS_EXPIRED     |
 -------------------------------------------------------------------------------------------------
 4(p0)    |WdgM failure recovery | WDGM_GLOBAL_STATUS_FAILED /    | WDGM_GLOBAL_STATUS_OK /       |
          | (execution step 07)  | WDGM_LOCAL_STATUS_FAILED       | WDGM_LOCAL_STATUS_OK          |

 4(p1)    |WdgM failure recovery | WDGM_GLOBAL_STATUS_STOPPED /   | WDGM_GLOBAL_STATUS_STOPPED /  |
          | (execution step 07)  | WDGM_LOCAL_STATUS_EXPIRED      | WDGM_LOCAL_STATUS_EXPIRED     |
 -------------------------------------------------------------------------------------------------
 Note: SE0 is the tested Supervised Entity.

 The following Deadline Supervision CPs reached sequence is used to check the Error recovery feature
 in this case:
  ---------------------------------------------------------------------
 Step No.| CP name  | Elapsed time           | WdgM SE local state    |
 ======================================================================
 1       | START_CP | 0(cycle origin point)  | OK                     |
 ----------------------------------------------------------------------
 2       | STOP_CP  | N * WdgMDeadlineMax    | FAILED(p0)/EXPIRED(p1) |
 ----------------------------------------------------------------------
 3       | START_CP | 0(cycle origin point)  | FAILED(p0)/EXPIRED(p1) |
 ----------------------------------------------------------------------
 4       | STOP_CP  | WdgMDeadlineMax        | OK                     |
 ----------------------------------------------------------------------
 Note: N = WdgMExpiredSupervisionCycleTol + WdgMDeadlineMax / WdgMSupervisionCycle.

 01: Initialize test case.
 02: Sanity check: Check preconditions
     Initialize WdgM module and set preconditions for the test case:
     - Retrieve the WdgM initial mode.
     - Change the WdgM Mode to the requested mode.
     - Check configuration data consistency for the tested mode.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
 03: Change WdgM status to deadline supervision failure mode by simulating the WdgMDeadlineMax
     time violation failure due to STOP_CP omission violation after the WdgMDeadlineMax is reached.
 04: VP (WDGM.EB.TIMEPM.WDGM020448, WDGM.EB.TIMEPM.WDGM020480, WdgM.SWS_WdgM_00404,
         WDGM.EB.TIMEPM.WDGM020456, WDGM.EB.TIMEPM.Safety020704)
     Check that the simulated failure is detected by the WdgM. The failure detection changes WdgM
     global/local status to:
       - Failed, for permutation p0;
       - Stopped(global status)/Expired(local status), for permutation p1;
 05: Recover from error state by performing once the normal Deadline Supervision algorithm.
 06: VP (WDGM.EB.TIMEPM.WDGM020104_Conf)
     Check that the WdgMGetElapsedTimeCallout is called by WdgM_CheckPointReached function
     for each CheckPoint which is part of the Deadline supervision.
 07: VP (WDGM.EB.TIMEPM.WDGM020448, WDGM.EB.TIMEPM.Safety020701)
     Check the following aspects:
     p0: the error recovery is done by the WdgM by changing the Global/Local status from Failed to OK
         when the first correct Deadline Supervision algorithm is detected;
     p1: the error recovery is triggered by the external watchdog device( the WdgM triggers the
         watchdog is with 0, when reaching the Stopped global status).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020112_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020104_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020448</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020480</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>669</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020456</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>689</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020701</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>729</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020704</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>732</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2043</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE04/source/application/WdgM_ImpTest_07_TimE04.c</sourcefile>
      <sourceline>1554</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests TimE Local and Global state machines behavior depending on the WdgMErrorRecoveryEnabled
 parameter in case there is only WdgM Deadline Supervision configured for the tested mode.
 There following aspects are tested:
 1) The first part tests the Deadline Supervision failure detection due to simulated
    START_CP multiple occurrence violation(caused by START_CP multiple occurrences before the
    STOP_CP is reached in WdgMDeadlineMax time from the first START_CP call), in the following
    use-cases:
    - p0: WdgMErrorRecoveryEnabled is enabled =&gt; the Stopped state is never reached(the state
          is changed to Failed and remains in this state until the WdgM recovers from error);
    - p1: WdgMErrorRecoveryEnabled is disabled =&gt; the Stopped state is reached.
 2) The second part tests the Deadline Supervision failure recovery:
    - p0: WdgMErrorRecoveryEnabled is enabled =&gt; the recovery from Failed state is performed by
          changing state from Failed to OK;
    - p1: WdgMErrorRecoveryEnabled is disabled =&gt; the recovery from Failed state is possible
          only by reset;

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table" from
   TS_WDGM_TimE_CheckRecoveryFromDeadlineFailureDetection_01 test case description;
 - "Cause-Effect Graphing", as described in the "Abstract Global\Local state transition table".

 
Test Object: None.
Test Precondition: 

 The configured Deadline Supervision has the following elements:
 START_CP -&gt; STOP_CP.
 WdgM is initialized and is in WdgM_WdgMMode_2 mode which has only Deadline Supervision configured.
 For more details see the configuration described in the
 preconditions section from the "TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_01" test case.
 The Global\Local status is OK.

 
Test Execution: 

 Abstract Global/Local Supervision Status transition table used in the test execution:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   |Initial Global/Local status(SE0)|Final  Global/Local status(SE0)|
 =================================================================================================
 1        |WdgM_MainFunction call|WDGM_GLOBAL_STATUS_DEACTIVATED/ | WDGM_GLOBAL_STATUS_OK /       |
          | (execution step 02)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_OK          |
 -------------------------------------------------------------------------------------------------
 2(p0)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_FAILED /   |
          | (execution step 03)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_FAILED      |

 2(p1)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_EXPIRED /  |
          | (execution step 03)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_EXPIRED     |
 -------------------------------------------------------------------------------------------------
 3(p0)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_FAILED /    | WDGM_GLOBAL_STATUS_FAILED /   |
          | (execution step 05)  | WDGM_LOCAL_STATUS_FAILED       | WDGM_LOCAL_STATUS_FAILED      |

 3(p1)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_EXPIRED /   | WDGM_GLOBAL_STATUS_STOPPED /  |
          | (execution step 05)  | WDGM_LOCAL_STATUS_EXPIRED      | WDGM_LOCAL_STATUS_EXPIRED     |
 -------------------------------------------------------------------------------------------------
 4(p0)    |WdgM failure recovery | WDGM_GLOBAL_STATUS_FAILED /    | WDGM_GLOBAL_STATUS_OK /       |
          | (execution step 07)  | WDGM_LOCAL_STATUS_FAILED       | WDGM_LOCAL_STATUS_OK          |

 4(p1)    |WdgM failure recovery | WDGM_GLOBAL_STATUS_STOPPED /   | WDGM_GLOBAL_STATUS_STOPPED /  |
          | (execution step 07)  | WDGM_LOCAL_STATUS_EXPIRED      | WDGM_LOCAL_STATUS_EXPIRED     |
 -------------------------------------------------------------------------------------------------
 Note: SE0 is the tested Supervised Entity.

 The following Deadline Supervision CPs reached sequence is used to check the Error recovery feature
 in this case:
  ---------------------------------------------------------------------
 Step No.| CP name  | Elapsed time           | WdgM SE local state    |
  =====================================================================
 1       | START_CP | 0(cycle origin point)  | OK                     |
 ----------------------------------------------------------------------
 2       | START_CP | NA                     | FAILED(p0)/EXPIRED(p1) |
 ----------------------------------------------------------------------
 3       | STOP_CP  | WdgMDeadlineMax        | FAILED(p0)/EXPIRED(p1) |
 ----------------------------------------------------------------------
 4       | START_CP | 0(cycle origin point)  | FAILED(p0)/EXPIRED(p1) |
 ----------------------------------------------------------------------
 5       | STOP_CP  | WdgMDeadlineMax        | OK                     |
 ----------------------------------------------------------------------

 01: Initialize test case.
 02: Sanity check: Check preconditions
     Initialize WdgM module and set preconditions for the test case:
     - Retrieve the WdgM initial mode.
     - Change the WdgM Mode to the requested mode.
     - Check configuration data consistency for the tested mode.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
 03: Change WdgM status to deadline supervision failure mode by simulating the START_CP multiple
     occurrence violation due to START_CP multiple occurrences before the STOP_CP is reached in

 04: VP (WDGM.EB.TIMEPM.WDGM020448, WDGM.EB.TIMEPM.Safety020706)
     Check that the simulated failure is detected by the WdgM. The failure detection changes WdgM
     global/local status to:
       - Failed, for permutation p0
       - Expired, for permutation p1;
 05: Try to change WdgM global status to STOPPED. This step is performed by the WdgM_MainFunction
     only for the case with WdgMErrorRecoveryEnabled parameter is disabled(p1).
 06: VP (WDGM.EB.TIMEPM.WDGM020448)
     Check that the simulated error is detected by the WdgM:
     - the global/local status is changed to Failed.
 07: Recover from error state by performing once the normal Deadline Supervision algorithm.
 08: VP (WDGM.EB.TIMEPM.WDGM020104_Conf)
     Check that the WdgMGetElapsedTimeCallout is called by WdgM_CheckPointReached function
     for each CheckPoint which is part of the Deadline supervision(the exception for this rule
     is the case when START_CP is called again before STOP_CP. In this case the
     WdgM_CheckPointReached is not requiring anymore the time stamp data).
 09: VP (WDGM.EB.TIMEPM.WDGM020448, WDGM.EB.TIMEPM.Safety020701)
     Check the following aspects:
     p0: the error recovery is done by the WdgM by changing the Global/Local status from Failed to OK
         when the first correct Deadline Supervision algorithm is detected;
     p1: the error recovery is triggered by the external watchdog device( the WdgM triggers the
         watchdog is with 0, when reaching the Stopped global status).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020112_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020104_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020448</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020701</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>729</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020706</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>734</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2044</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckRecoveryFromLogicalFailureDetection_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE04/source/application/WdgM_ImpTest_07_TimE04.c</sourcefile>
      <sourceline>1908</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests TimE Local and Global state machines behavior depending on the WdgMErrorRecoveryEnabled
 parameter in case there is only WdgM Logical Supervision configured for the tested mode.
 There following aspects are tested:
 1) The first part tests the Logical Supervision failure detection due to simulated
    CP omission violation for the case when the next reached CP belongs to different
    SupervisedEntity than the Supervised Entity which has configured the omitted CP.
    In this case, the failure is detected by all the Supervised Entities which has configured
    Check Points belonging to the failing logical graph placed on the failing path( this is the
    case when the Supervised Entity which has configured the omitted CheckPoint doesn't detect
    the failure).
    The following situations are tested which are relates to the configured value for
    WdgMErrorRecoveryEnabled parameter:
    - p0: enabled =&gt; the Stopped global state is never reached(the global state is changed to
                     Failed and remains in this state until the WdgM recovers from error;
    - p1: disabled =&gt; the Stopped state is reached.
 2) The second part tests the Error recovery behavior which is related to the configured value for
    WdgMErrorRecoveryEnabled parameter:
    - p0: enabled:
      Note: The recovery from Failed state is applied only for the SEs which met the
            following condition: all the CPs which previously detected the failure are now called
            in the correct order on a path belonging to the failed graph.
      The recovery is tested to be done in two phases:
       -&gt; Failure recovery phase I(partial recovery), the recovery from failure is done by
          simulating correct logical behavior on an alternative path than the failed one;
       -&gt; Failure recovery phase II(total recovery),  the recovery from failure is done by
          simulating correct logical behavior on the failed path: Not Applicable for this test case
          (the "Failure recovery phase I" is sufficient in the tested case - the recovery from error
           condition stated in the note is fully achieved by the "Failure recovery phase I").
    - p1: disabled: for this situation, the error recovery is done by hardware reset when the
      global status reaches Stopped state.

 Note: the omitted CheckPoint in this case is MIDDLE2_CP, please see the "Graph transition table"
       described inside the precondition section.

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table";
 - "Cause-Effect Graphing", as described in the "Abstract Global\Local state transition table".

 Pair wise table:
 ========================================================================================
 Tcs_ID|WdgMError      |                        WdgM Local status                       |
       |RecoveryEnabled| Initial    |                   Failure                         |
       |               |            | Detection     |Recovery phase I |Recovery phase II|
 ========================================================================================
 01(p0)| ENABLED       | OK(SEf)    | OK(SEf)       | OK(SEf)         | NA              |
       |               | OK(SEnf)   | Failed(SEnf)  | OK(SEnf)        | NA              |

 01(p1)| DISABLED      | OK(SEf)    | OK(SEf)       | OK(SEf)         | NA              |
       |               | OK(SEnf)   | Expired(SEnf) | Expired(SEnf)   | NA              |
       |               |            |               |(Wdg reset)      |                 |
 ----------------------------------------------------------------------------------------
 02(p0)| ENABLED       | OK(SEf)    | Failed(SEf)   | Failed(SEf)     | OK(SEf)         |
       |               | OK(SEnf)   | Failed(SEnf)  | OK(SEnf)        | OK(SEnf)        |

 02(p1)| DISABLED      | OK(SEf)    | Expired(SEf)  | Expired(SEf)    | Expired(SEf)    |
       |               | OK(SEnf)   | Expired(SEnf) | Expired(SEnf)   | Expired(SEnf)   |
       |               |            |               |                 |(Wdg reset)      |
 ========================================================================================
 Note: the "Tcs_ID" represents the ID of the test case with the following name:
       TS_WDGM_TimE_CheckRecoveryFromLogicalFailureDetection_&amp;gt;Tcs_ID&amp;lt;;
       the SEf represents the Supervised Entity which has configured the omitted CP from the
       failed graph;
       the SEnf represents all the Supervised Entities which has configured CPs belonging to the
       failed graph.

 The testing method used is: "State based tests", please see the "Abstract Global/Local
 Supervision Status transition table used in the test execution".

 
Test Object: None.
Test Precondition: 

 WdgM is initialized and is in WdgM_WdgMMode_3 mode which has only ExternalLogical Supervision
 configured.
 The tested mode is WdgM_WdgMMode_3. For more details see the configuration described in the
 preconditions section from the "TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_01" test case.
 The configured Logical Supervision has the following graph:

 Graph transition table:
 -------------------------------------------------------------
 .&amp;lt;---------------INITIAL_SE----------------&gt;.&amp;lt;---FINAL_SE--&gt;.
 .            |-&gt; MIDDLE1_CP -&gt; MIDDLE2_CP -&gt;|               .
 .INITIAL_CP-&gt;|                              |-&gt; FINAL_CP    .
 .            |--------&gt; MIDDLE3_CP --------&gt;|               .
 -------------------------------------------------------------

 
Test Execution: 

 Abstract Global/Local Supervision Status transition table used in the test execution:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   | Initial Global/Local          | Final  Global/Local(FINAL_SE) |
          |                      | status                        | status                        |
 =================================================================================================
 1        |WdgM_MainFunction call|WDGM_GLOBAL_STATUS_DEACTIVATED/| WDGM_GLOBAL_STATUS_OK /       |
          | (execution step 02)  | WDGM_LOCAL_STATUS_DEACTIVATED | WDGM_LOCAL_STATUS_OK          |
 -------------------------------------------------------------------------------------------------
 2(p0)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /       | WDGM_GLOBAL_STATUS_FAILED /   |
          | (execution step 03)  | WDGM_LOCAL_STATUS_OK(SE0)     | WDGM_LOCAL_STATUS_OK(SE0)     |
          |                      | WDGM_LOCAL_STATUS_OK(SE1)     | WDGM_LOCAL_STATUS_FAILED(SE1) |

 2(p1)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /       | WDGM_GLOBAL_STATUS_EXPIRED /  |
          | (execution step 03)  | WDGM_LOCAL_STATUS_OK(SE0)     | WDGM_LOCAL_STATUS_OK(SE0)     |
          |                      | WDGM_LOCAL_STATUS_OK(SE1)     | WDGM_LOCAL_STATUS_EXPIRED(SE1)|
 -------------------------------------------------------------------------------------------------
 3(p0)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_FAILED /   | WDGM_GLOBAL_STATUS_FAILED /   |
          | (execution step 06)  | WDGM_LOCAL_STATUS_OK(SE0)     | WDGM_LOCAL_STATUS_OK(SE0)     |
          |                      | WDGM_GLOBAL_STATUS_FAILED(SE1)| WDGM_LOCAL_STATUS_FAILED(SE1) |

 3(p1)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_EXPIRED /  | WDGM_GLOBAL_STATUS_STOPPED /  |
          | (execution step 06)  | WDGM_LOCAL_STATUS_OK(SE0)     | WDGM_LOCAL_STATUS_OK(SE0)     |
          |                      | WDGM_LOCAL_STATUS_EXPIRED(SE1)| WDGM_LOCAL_STATUS_EXPIRED(SE1)|
 -------------------------------------------------------------------------------------------------
 4(p0)    | WdgM "Failure        | WDGM_GLOBAL_STATUS_FAILED /   | WDGM_GLOBAL_STATUS_OK /       |
          | recovery phase I"    | WDGM_LOCAL_STATUS_OK(SE0)     | WDGM_LOCAL_STATUS_OK(SE0)     |
          | (execution step 08)  | WDGM_LOCAL_STATUS_FAILED(SE1) | WDGM_LOCAL_STATUS_OK(SE1)     |

 4(p1)    | WdgM "Failure        | WDGM_GLOBAL_STATUS_STOPPED /  | WDGM_GLOBAL_STATUS_STOPPED /  |
          | recovery phase I"    | WDGM_LOCAL_STATUS_OK(SE0)     | WDGM_LOCAL_STATUS_OK(SE0)     |
          | (execution step 08)  | WDGM_LOCAL_STATUS_EXPIRED(SE1)| WDGM_LOCAL_STATUS_EXPIRED(SE1)|
 -------------------------------------------------------------------------------------------------
 Note: SE0 is the INITIAL_SE( this SE has configured the omitted CP);
       SE1 is the FINAL_SE( this SE detects the omitted CP failure).

 The following Logical sequence is used to check the Error recovery feature
 for the tested use case:
  ----------------------------------------------
 Step No.| Reached CP | FINAL_SE local state   |
 ===============================================
 1       | INITIAL_CP | OK                     |
 -----------------------------------------------
 2       | MIDDLE1_CP | OK                     |
 -----------------------------------------------
 3       | FINAL_CP   | FAILED(p0)/EXPIRED(p1) |
 -----------------------------------------------
 4       | INITIAL_CP | FAILED(p0)/EXPIRED(p1) |
 -----------------------------------------------
 5       | MIDDLE3_CP | FAILED(p0)/EXPIRED(p1) |
 -----------------------------------------------
 6       | FINAL_CP   | OK(p0)    /EXPIRED(p1) |
 -----------------------------------------------

 01: Initialize test case.
 02: Sanity check: Check preconditions
     Initialize WdgM module and set preconditions for the test case:
     - Retrieve the WdgM initial mode.
     - Change the WdgM Mode to the requested mode.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
 03: Change WdgM status to logical supervision failure mode by simulating the MIDDLE2_CP omission
     failure(please see the description section of this test case).
 04: VP (WDGM.EB.LogicalSupervision.ErrorTracking)
     WdgM_CheckpointReached returned value equals E_NOT_OK after calling this function with the
     FINAL_CP ID.
 05: VP (WDGM.EB.TIMEPM.WDGM020448, WDGM.EB.TIMEPM.WDGM020481)
     Check that the simulated error is detected by the WdgM:
     - the global status is changed to Failed, for permutation p0 and to Expired, for
       permutation p1;
     - the local status is changed to:
       -&gt; Permutation p0: Failed only for the FINAL_SE(the local status for INITIAL_SE remains OK);
       -&gt; Permutation p1: Expired only for the FINAL_SE(the local status for INITIAL_SE remains OK).
 06: Try to change WdgM status to STOPPED. This step is performed only for the case with
     WdgMErrorRecoveryEnabled parameter set false(p1).
 07: VP (WDGM.EB.TIMEPM.WDGM020448)
     Check the following aspects:
     - the global status: is changed to Stopped, for permutation p1 and remains Failed, for
       permutation p0;
     - the local status remains:
       -&gt; Permutation p0: Failed only for the FINAL_SE(the local status for INITIAL_SE remains OK);
       -&gt; Permutation p1: Expired only for the FINAL_SE(the local status for INITIAL_SE remains OK).
 08: Perform the "Failure recovery phase I" as described inside the test description section on
     the alternate path which includes the MIDDLE3_CP.
 09: VP (WDGM.EB.LogicalSupervision.ErrorTracking)
     Check the WdgM_CheckpointReached returned value to be E_OK after calling this function with the
     FINAL_CP ID only for the case with WdgMErrorRecoveryEnabled parameter set true(p0).
 10: VP(WDGM.EB.TIMEPM.WDGM020448, WDGM.EB.TIMEPM.WDGM020481)
     Check the following aspects:
     - p0: the error recovery is completely done by the WdgM by changing the Global/Local status from
           Failed to OK after the "Failure recovery phase I" is finished;
     - p1: the error recovery is triggered by the external watchdog device(the WdgM triggers the
           watchdog is with 0, when reaching the Stopped global status).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020112_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020448</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020481</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.LogicalSupervision.ErrorTracking</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2045</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckRecoveryFromLogicalFailureDetection_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE04/source/application/WdgM_ImpTest_07_TimE04.c</sourcefile>
      <sourceline>2339</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests TimE Local and Global state machines behavior depending on the WdgMErrorRecoveryEnabled
 parameter in case there is only WdgM Logical Supervision configured for the tested mode.
 There following aspects are tested:
 1) The first part tests the Logical Supervision failure detection due to simulated
    CP omission violation for the case when the next reached CP belongs to different
    SupervisedEntity than the Supervised Entity which has configured the omitted CP.
    In this case, the failure is detected by all the Supervised Entities which has configured
    Check Points belonging to the failing logical graph placed on the failing path( this is the
    case when the Supervised Entity which has configured the omitted CheckPoint doesn't detect
    the failure).
    The following situations are tested which are relates to the configured value for
    WdgMErrorRecoveryEnabled parameter:
    - p0: enabled =&gt; the Stopped global state is never reached(the global state is changed to
                     Failed and remains in this state until the WdgM recovers from error;
    - p1: disabled =&gt; the Stopped state is reached.
 2) The second part tests the Error recovery behavior which is related to the configured value for
    WdgMErrorRecoveryEnabled parameter:
    - p0: enabled:
      Note: The recovery from Failed state is applied only for the SEs which met the
            following condition: all the CPs which previously detected the failure are now called
            in the correct order on a path belonging to the failed graph.
      The recovery is tested to be done in two phases:
       -&gt; Failure recovery phase I(partial recovery), the recovery from failure is done by
          simulating correct logical behavior on an alternative path than the failed one;
       -&gt; Failure recovery phase II(total recovery),  the recovery from failure is done by
          simulating correct logical behavior on the failed path.
    - p1: disabled: for this situation, the error recovery is done by hardware reset when the
      global status reaches Stopped state.

 Note: the omitted CheckPoint in this case is MIDDLE1_CP, please see the "Graph transition table"
       described inside the precondition section.

 The testing methods is a combination of the following methods:
 - "Pair wise", as described in the "Pair wise table" from
   TS_WDGM_TimE_CheckRecoveryFromLogicalFailureDetection_01 test case description;
 - "Cause-Effect Graphing", as described in the "Abstract Global\Local state transition table".

 
Test Object: None.
Test Precondition: 

 WdgM is initialized and is in WdgM_WdgMMode_3 mode which has only ExternalLogical Supervision
 configured. For more details see the configuration described in the
 preconditions section from the "TS_WDGM_TimE_CheckRecoveryFromAliveFailureDetection_01" test case.
 The Global\Local status is OK.
 The configured Logical Supervision has the following graph:

 Graph transition table:
 -------------------------------------------------------------
 .&amp;lt;---------------INITIAL_SE----------------&gt;.&amp;lt;---FINAL_SE--&gt;.
 .            |-&gt; MIDDLE1_CP -&gt; MIDDLE2_CP -&gt;|               .
 .INITIAL_CP-&gt;|                              |-&gt; FINAL_CP    .
 .            |--------&gt; MIDDLE3_CP --------&gt;|               .
 -------------------------------------------------------------

 
Test Execution: 

 Abstract Global/Local Supervision Status transition table used in the test execution:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   | Initial Global/Local status   | Final  Global/Local status    |
 =================================================================================================
 1        |WdgM_MainFunction call|WDGM_GLOBAL_STATUS_DEACTIVATED/| WDGM_GLOBAL_STATUS_OK /       |
          | (execution step 03)  | WDGM_LOCAL_STATUS_DEACTIVATED | WDGM_LOCAL_STATUS_OK(SE0)     |
          |                      | WDGM_LOCAL_STATUS_DEACTIVATED | WDGM_LOCAL_STATUS_OK(SE1)     |
 -------------------------------------------------------------------------------------------------
 2(p0)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /       | WDGM_GLOBAL_STATUS_FAILED /   |
          | (execution step 03)  | WDGM_LOCAL_STATUS_OK(SE0)     | WDGM_LOCAL_STATUS_OK(SE0)     |
          |                      | WDGM_LOCAL_STATUS_OK(SE1)     | WDGM_LOCAL_STATUS_FAILED(SE1) |

 2(p1)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /       | WDGM_GLOBAL_STATUS_EXPIRED /  |
          | (execution step 03)  | WDGM_LOCAL_STATUS_OK(SE0)     | WDGM_LOCAL_STATUS_OK(SE0)     |
          |                      | WDGM_LOCAL_STATUS_OK(SE1)     | WDGM_LOCAL_STATUS_EXPIRED(SE1)|
 -------------------------------------------------------------------------------------------------
 3(p0)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_FAILED /   | WDGM_GLOBAL_STATUS_FAILED /   |
          | (execution step 06)  | WDGM_LOCAL_STATUS_OK(SE0)     | WDGM_LOCAL_STATUS_OK(SE0)     |
          |                      | WDGM_GLOBAL_STATUS_FAILED(SE1)| WDGM_LOCAL_STATUS_FAILED(SE1) |

 3(p1)    |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_EXPIRED /  | WDGM_GLOBAL_STATUS_STOPPED /  |
          | (execution step 06)  | WDGM_LOCAL_STATUS_OK(SE0)     | WDGM_LOCAL_STATUS_OK(SE0)     |
          |                      | WDGM_LOCAL_STATUS_EXPIRED(SE1)| WDGM_LOCAL_STATUS_EXPIRED(SE1)|
 -------------------------------------------------------------------------------------------------
 4(p0)    | WdgM "Failure        | WDGM_GLOBAL_STATUS_FAILED /   | WDGM_GLOBAL_STATUS_FAILED /   |
          | recovery phase I"    | WDGM_LOCAL_STATUS_FAILED(SE0) | WDGM_LOCAL_STATUS_FAILED(SE0) |
          | (execution step 08)  | WDGM_LOCAL_STATUS_FAILED(SE1) | WDGM_LOCAL_STATUS_OK(SE1)     |

 4(p1)    | WdgM "Failure        | WDGM_GLOBAL_STATUS_STOPPED /  | WDGM_GLOBAL_STATUS_STOPPED /  |
          | recovery phase I"    | WDGM_LOCAL_STATUS_EXPIRED(SE0)| WDGM_LOCAL_STATUS_EXPIRED(SE0)|
          | (execution step 08)  | WDGM_LOCAL_STATUS_EXPIRED(SE1)| WDGM_LOCAL_STATUS_EXPIRED(SE1)|
 -------------------------------------------------------------------------------------------------
 5(p0)    | WdgM "Failure        | WDGM_GLOBAL_STATUS_FAILED /   | WDGM_GLOBAL_STATUS_OK /       |
          | recovery phase II"   | WDGM_LOCAL_STATUS_FAILED(SE0) | WDGM_LOCAL_STATUS_OK(SE0)     |
          | (execution step 11)  | WDGM_LOCAL_STATUS_OK(SE1)     | WDGM_LOCAL_STATUS_OK(SE1)     |

 5(p1)    | WdgM "Failure        | WDGM_GLOBAL_STATUS_STOPPED /  | WDGM_GLOBAL_STATUS_STOPPED /  |
          | recovery phase II"   | WDGM_LOCAL_STATUS_EXPIRED(SE0)| WDGM_LOCAL_STATUS_EXPIRED(SE0)|
          | (execution step 11)  | WDGM_LOCAL_STATUS_EXPIRED(SE1)| WDGM_LOCAL_STATUS_EXPIRED(SE1)|
 -------------------------------------------------------------------------------------------------
Note: - SE0 = MIDDLE2_SE;
      - SE1 = FINAL_SE.

 The following Logical sequence is used to check the Error recovery feature
 for the tested use case:
  -----------------------------------------------------------------------
 Step No.| Reached CP | MIDDLE2_CP local state | FINAL_CP local state   |
 ========================================================================
 1       | INITIAL_CP | OK                     | OK                     |
 ------------------------------------------------------------------------
 2       | MIDDLE2_CP | FAILED(p0)/EXPIRED(p1) | OK                     |
 ------------------------------------------------------------------------
 3       | FINAL_CP   | FAILED(p0)/EXPIRED(p1) | FAILED(p0)/EXPIRED(p1) |
 ------------------------------------------------------------------------
 4       | INITIAL_CP | FAILED(p0)/EXPIRED(p1) | FAILED(p0)/EXPIRED(p1) |
 ------------------------------------------------------------------------
 5       | MIDDLE3_CP | FAILED(p0)/EXPIRED(p1) | FAILED(p0)/EXPIRED(p1) |
 ------------------------------------------------------------------------
 6       | FINAL_CP   | FAILED(p0)/EXPIRED(p1) | OK(p0)    /EXPIRED(p1) |
 ------------------------------------------------------------------------
 7       | INITIAL_CP | FAILED(p0)/EXPIRED(p1) | OK(p0)    /EXPIRED(p1) |
 ------------------------------------------------------------------------
 8       | MIDDLE1_CP | FAILED(p0)/EXPIRED(p1) | OK(p0)    /EXPIRED(p1) |
 ------------------------------------------------------------------------
 9       | MIDDLE2_CP | OK(p0)    /EXPIRED(p1) | OK(p0)    /EXPIRED(p1) |
 ------------------------------------------------------------------------
 10      | FINAL_CP   | OK(p0)    /EXPIRED(p1) | OK(p0)    /EXPIRED(p1) |
 ------------------------------------------------------------------------


 01: Initialize test case.
 02: Sanity check: Check preconditions
     Initialize WdgM module and set preconditions for the test case:
     - Retrieve the WdgM initial mode.
     - Change the WdgM Mode to the requested mode.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
 03: Change WdgM status to logical supervision failure mode by simulating the MIDDLE2_CP omission
     failure(please see the description section of this test case).
 04: VP (WDGM.EB.LogicalSupervision.ErrorTracking)
     Check the WdgM_CheckpointReached returned value to be E_NOT_OK after calling this function
     for both INITIAL_CP ID and FINAL_CP ID, only for the case with WdgMErrorRecoveryEnabled
     parameter set true(p0).
 05: VP (WDGM.EB.TIMEPM.WDGM020448, WDGM.EB.TIMEPM.WDGM020481)
     Check that the simulated error is detected by the WdgM:
     - the global status is changed to Failed, for permutation p0 and to Expired, for
       permutation p1;
     - the local status is changed to:
       -&gt; Permutation p0: Failed only for both the FINAL_SE and the INITIAL_SE;
       -&gt; Permutation p1: Expired only for for both the FINAL_SE and the INITIAL_SE.
 06: Try to change WdgM status to STOPPED. This step is performed only for the case with
     WdgMErrorRecoveryEnabled parameter set false(p1).
 07: VP (WDGM.EB.TIMEPM.WDGM020448)
     Check the following aspects:
     - the global status: is changed to Stopped, for permutation p1 and remains Failed, for
       permutation p0;
     - the local status remains:
       -&gt; Permutation p0: Failed for both the FINAL_SE and the INITIAL_SE;
       -&gt; Permutation p1: Expired for both the FINAL_SE and the INITIAL_SE.
 08: Perform the "Failure recovery phase I" as described inside the test description section on
     the alternate path which includes the MIDDLE3_CP.
 09: VP (WDGM.EB.LogicalSupervision.ErrorTracking)
     Check the WdgM_CheckpointReached returned value to be E_OK after calling this function with the
     FINAL_CP ID only for the case with WdgMErrorRecoveryEnabled parameter set true(p0).
 10: VP (WDGM.EB.TIMEPM.WDGM020448, WDGM.EB.TIMEPM.WDGM020481)
     Check the following aspects:
     - the global status: is changed to Stopped, for permutation p1 and remains Failed, for
       permutation p0;
     - the local status remains:
       -&gt; Permutation p0: Failed only for the INITIAL_SE(the local status for FINAL_SE is changed
          to OK);
       -&gt; Permutation p1: Expired only for for both the FINAL_SE and the INITIAL_SE.
 11: Perform the "Failure recovery phase II" as described inside the test description section on
     the alternate path which includes the MIDDLE1_CP.
 12: VP (WDGM.EB.LogicalSupervision.ErrorTracking)
     Check the WdgM_CheckpointReached returned value to be E_OK after calling this function with the
     MIDDLE2_CP ID.
 13: VP(WDGM.EB.TIMEPM.WDGM020448, WDGM.EB.TIMEPM.WDGM020481)
     Check the following aspects:
     - p0: the error recovery is completely done by the WdgM by changing the Global/Local status from
           Failed to OK after the "Failure recovery phase II" is finished;
     - p1: the error recovery is triggered by the external watchdog device(the WdgM triggers the
           watchdog is with 0, when reaching the Stopped global status).

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020112_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020448</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020481</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.LogicalSupervision.ErrorTracking</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2046</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_TimE_CheckPerformReset_SupervisorEnabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE05/source/application/WdgM_ImpTest_07_TimE05.c</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Test the following aspects related to the WdgM behavior when the Reset request is performed:
 - the reset request is performed by the WdgM due to authorization allowance, and no DET error
   is reported via WdgMDetCallout(p0)/Dem_ReportErrorStatus(p1);
 - the reset request isn't performed by the WdgM due to authorization prohibition, and .
   WDGM_E_NOT_AUTHORIZED DET error is reported via WdgMDetCallout(p2)/Dem_ReportErrorStatus(p3).

 The testing method used is a combination between: "State based tests" and "Cause effect tests",
 please see the "Global state transition table".

 
Test Object: None.
Test Precondition: 

 Permutation table:
 -----------------------------------------------------------------------------
 Parameter / Permutation             | p0      | p1      | p2      | p3      |
 =============================================================================
 WdgMDetCallout                      | true    | false   | true    | false   |
 -----------------------------------------------------------------------------
 Note: This test and all sub-sequent tests are executed with the configuration permutations
 described in the above "Permutation table".

 The following parameters has the same value for all permutations:
 ...............................................
 WdgMDevErrorDetect                  | true    |
 WdgMDefensiveBehavior               | true    |
 WdgMImmediateReset                  | true    |
 WdgMSupervisorCallouts              | true    |
 WdgMGetExpectedInitStateCallout     | true    |
 WdgMGetExpectedWdgMModeCallout      | true    |
 WdgMGetElapsedTimeCallout           | true    |
 WdgMIsPerformResetCallout           | true    |
 ...............................................

 Configured SEs:
 WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2

 Modes and configured WdgMTriggers:
                    ConfigName  TriggerCondition  TriggerMode  DeviceIndex
                    |             |                |               |
  WdgMMode_0:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5

 Modes and configured DeadlineSupervisions:
  WdgMMode_0: CP0_1(Start CP) -&gt; CP0_2(Stop CP)

 Modes and configured parameters for WdgMSupervisedEntity_0:
  WdgMMode_0:
    WdgMModeId: 0
      WdgMDeadlineMax                        0.0055
      WdgMDeadlineMin                        0.0045
    WdgMSupervisionCycle                   0.0050

 
Test Execution: 

 Global state transition table:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   | Initial Global status         | Final  Global status           |
 =================================================================================================
 1        |WdgM_MainFunction call|WDGM_GLOBAL_STATUS_DEACTIVATED | WDGM_GLOBAL_STATUS_OK          |
          | (execution step 02)  |                               |                                |
 -------------------------------------------------------------------------------------------------
 2(p0)    |WdgM_PerformReset call| WDGM_GLOBAL_STATUS_OK         | WDGM_GLOBAL_STATUS_STOPPED     |
          | (execution step 04)  |                               |                                |
          |(the Reset is authorized =&gt; no error reported to WdgMDetCallout/Det_ReportError        |
 .................................................................................................
 2(p1)    |WdgM_PerformReset call| WDGM_GLOBAL_STATUS_OK         | WDGM_GLOBAL_STATUS_STOPPED     |
          | (execution step 04)  |                               |                                |
          |         (the Reset is authorized =&gt; no error reported to Det_ReportError              |
 .................................................................................................
 2(p2)    |WdgM_PerformReset call| WDGM_GLOBAL_STATUS_OK         | WDGM_GLOBAL_STATUS_OK          |
          | (execution step 04)  |                               |                                |
          | (the Reset is not authorized =&gt; WDGM_E_NOT_AUTHORIZED is reported via WdgMDetCallout  |
 .................................................................................................
 2(p3)    |WdgM_PerformReset call| WDGM_GLOBAL_STATUS_OK         | WDGM_GLOBAL_STATUS_OK          |
          | (execution step 04)  |                               |                                |
          | (the Reset is not authorized =&gt; WDGM_E_NOT_AUTHORIZED is reported via Det_ReportError |
 -------------------------------------------------------------------------------------------------

 01: Initializes test case.
 02: Sanity check: Check preconditions:
     - Initialize WdgM and check that the initialization is done correctly: the WdgM current
       mode is the one set via WdgMInitialMode and the global status is OK;
     - Check that no error has been reported after initialization to one of the following
       error hooks: DET or DEM by using one of the following methods:
       - Det_ReportError(), for all permutations;
       - WdgMDetCallout(), for permutations: p0, p2;
       - Dem_ReportErrorStatus(), for all permutations;
       - WdgMDemCallout(), for permutations: p1, p3.
     - Check that WdgMIsPerformResetCallout hasn't been previously called.
     - Checks that Mcu_PerformReset hasn't been previously called.
     - Check that the watchdog has been correctly triggered.
 03: Set the return value for the WdgMIsPerformResetCallout function:
     - E_OK(the reset is allowed), for permutation p0;
     - E_NOT_OK(the reset isn't allowed), for permutations p1 and p2.
 04: Perform WdgM software reset.
 05: VP (WDGM.EB.TIMEPM.WDGM020105_Conf, WDGM.EB.TIMEPM.WDGM020451, WDGM.EB.TIMEPM.WDGM020452)
     Checks that the WdgMIsPerformResetCallout is called by WdgM_PerformReset.
 06: VP Check if the Reset request is correctly performed by the WdgM:
     - p0,p1(WDGM.EB.TIMEPM.WDGM020451):
          the Mcu_PerformReset() is called due to authorization allowance;
     - p2,p3(WDGM.EB.TIMEPM.WDGM020452):
          the Mcu_PerformReset() isn't called due to authorization prohibition.
 07: VP Check if the Reset request is correctly performed by the WdgM:
     - p0,p1(WdgM.EB.PerformReset1, WDGM.EB.TIMEPM.WDGM020451):
          the reset is performed due to authorization allowance and the global status
          is changed to Stopped;
     - p2,p3(WdgM.EB.PerformReset1, WDGM.EB.TIMEPM.WDGM020452):
           the reset isn't performed due to authorization prohibition and the global
           status remains unchanged(OK).
 08: VP Check WdgM DET error notification behavior for the following use cases:
     - p0(WDGM.EB.TIMEPM.WDGM020451):
          the reset request is performed and no DET error is detected nor is notified via
          WdgMDetCallout/Det_ReportError;
     - p1(WDGM.EB.TIMEPM.WDGM020451):
          the reset request is performed and no DET error is detected nor is notified via
          Det_ReportError;
     - p2(WDGM.EB.TIMEPM.WDGM020109_Conf, WDGM.EB.TIMEPM.WDGM020449, WDGM.EB.TIMEPM.WDGM020452,
          WDGM.EB.TIMEPM.WDGM020302):
          the reset request isn't performed and the WDGM_E_NOT_AUTHORIZED DET error ID
          is notified via WdgMDetCallout.
     - p3(WDGM.EB.TIMEPM.WDGM020449, WDGM.EB.TIMEPM.WDGM020452):
          the reset request isn't performed and the WDGM_E_NOT_AUTHORIZED DET error ID
          is notified via Det_ReportError.
 09: VP Check that the watchdog is correctly triggered by the WdgM:
     - p0,p1(WdgM.EB.PerformReset3, WDGM.EB.TIMEPM.WDGM020451):
          WdgIf_SetTriggerCondition() is called two times (WdgM_MainFunction() + WdgM_PerformReset())
          with 0U, when the software reset is performed by the WdgM due to authorization allowance;
     - p2,p3(WdgM.EB.PerformReset3, WDGM.EB.TIMEPM.WDGM020452):
          WdgIf_SetTriggerCondition() is called one time (WdgM_MainFunction() only)
          with configured triggering condition, when the software reset isn't performed by WdgM
          due to authorization prohibition.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020105_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.PerformReset1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.PerformReset3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020302</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>637</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020449</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>674</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020451</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>675</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020452</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>676</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2047</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_TimE_CheckMFTimingBehavior_SupervisorEnabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE06/source/application/WdgM_ImpTest_07_TimE06.c</sourcefile>
      <sourceline>78</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 This test checks that the Watchdog Manager module detects a violation of the main function
 schedule time and indicates this violation to the DET / DEM resp. calls the related Callout
 APIs depending on the configuration.

 The testing method used is a combination of "Boundary Value Analysis" and "Pair wise tests".
 The pairs are:
 - "WdgMTimeGranularity" values, see permutation table.
 - "Boundary timing values", see Testing table.

 Resulting Decision Table of pair wise testing please see the Execution table.

 
Test Object: None.
Test Precondition: 

 The WdgM mode used for this test case is the mode configured within the WdgMInitialMode.

 Permutation table:
 ------------------------------------------------------------------------------------------------
 Parameter / Permutation             | p0      | p1      | p2      | p3      | p4      | p5      |
 ================================================================================================
 WdgMMFTimingViolationReportToDem    | DEM     | DET     | DEM     | DEM     | DET     | DET     |
 .................................................................................................
 WdgMDetCallout                      | true    | false   | true    | false   | true    | false   |
 .................................................................................................
 WdgMDemCallout                      | false   | true    | false   | true    | false   | true    |
 .................................................................................................
 WdgMTimeGranularity                 |0.000001 |0.000002 |0.000010 |0.000020 |0.000050 |0.000100 |
                                     | (1us)   | (2us)   | (10us)  | (20us)  | (50us)  | (100us) |
 ------------------------------------------------------------------------------------------------

 The following parameters has the same value for all permutations:
 ...............................................
 WdgMMFTimingViolationDemDetErrId    | 33U     |
 WdgMDevErrorDetect                  | true    |
 WdgMDefensiveBehavior               | true    |
 WdgMSupervisorCallouts              | true    |
 WdgMGetExpectedInitStateCallout     | true    |
 WdgMGetExpectedWdgMModeCallout      | true    |
 WdgMGetElapsedTimeCallout           | true    |
 WdgMMainFunctionViolationCallout    | true    |
 ...............................................

 Note: This test and all sub-sequent tests are executed with the configuration permutations
 described in the above "Permutation table".

 Configured SEs:
 WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2

 Modes and configured WdgMTriggers:
                    ConfigName  TriggerCondition  TriggerMode  DeviceIndex
                    |             |                |               |
  WdgMMode_0:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5

 Modes and configured DeadlineSupervisions:
  WdgMMode_0: CP0_1(Start CP) -&gt; CP0_2(Stop CP)

 Modes and configured parameters for WdgMSupervisedEntity_0:
  WdgMMode_0:
    WdgMModeId: 0
      WdgMDeadlineMax                        0.0055
      WdgMDeadlineMin                        0.0045
    WdgMSupervisionCycle                   0.0050

 
Test Execution: 

 Execution table:
 --------------------------------------------------------------------------------------------------
 Test | Boundary timing value  | WdgMTime    |                    Error report                    |
      |                        | Granularity | Error ID                        | Reported towards |
 ==================================================================================================
 1(p0)| WdgMSupervisionCycle - | 1us         | NA                              | NA               |
      | WdgMMainFunctionPeriod |             |                                 |                  |
      | Tolerance              |             |                                 |                  |
 --------------------------------------------------------------------------------------------------
 2(p1)| WdgMSupervisionCycle + | 2us         | NA                              | NA               |
      | WdgMMainFunctionPeriod |             |                                 |                  |
      | Tolerance              |             |                                 |                  |
 --------------------------------------------------------------------------------------------------
 3(p2)| WdgMSupervisionCycle - | 10us        | WDGM_E_MF_TIMINGVIOLATION       | DEM              |
      | WdgMMainFunctionPeriod |             |                                 |                  |
      | Tolerance - 1          |             |                                 |                  |
 -------------------------------------------------------------------------------------------------
 4(p3)| WdgMSupervisionCycle - | 20us        | WDGM_E_MF_TIMINGVIOLATION       | DEM              |
      | WdgMMainFunctionPeriod |             |                                 |                  |
      | Tolerance - 1          |             |                                 |                  |
 -------------------------------------------------------------------------------------------------
 5(p4)| WdgMSupervisionCycle + | 50us        | WdgMMFTimingViolationDemDetErrId| WdgMDetCallout   |
      | WdgMMainFunctionPeriod |             |                                 |                  |
      | Tolerance + 1          |             |                                 |                  |
 --------------------------------------------------------------------------------------------------
 6(p5)| WdgMSupervisionCycle + | 100us       | WdgMMFTimingViolationDemDetErrId| DET              |
      | WdgMMainFunctionPeriod |             |                                 |                  |
      | Tolerance + 1          |             |                                 |                  |
 --------------------------------------------------------------------------------------------------

 01: Initialize test case.
 02: Sanity check: Check preconditions:
     - Check the correctness of WdgMSupervisionCycle definition inside WdgM source code;
     - Initialize WdgM and check that the initialization is done correctly: the WdgM current
       mode is the one set via WdgMInitialMode and the global status is OK;
     - Check that no error has been reported after initialization to one of the following
       error hooks: DET or DEM by using one of the following methods:
       - Det_ReportError(), for all permutations;
       - WdgMDetCallout(), for permutations: p0,p2 and p4;
       - Dem_ReportErrorStatus(), for all permutations;
       - WdgMDemCallout(), for permutations: p1,p3 and p5.
 03: VP(WDGM.EB.TIMEPM.WDGM020114_Conf)
     Check that WdgMTimeGranularity is correctly defined inside WdgM source code.
 04: VP(WDGM.EB.TIMEPM.WDGM020123_Conf)
     Check that WdgMMainFunctionPeriodTolerance is correctly defined inside WdgM source code.
 05: Set Elapsed time returned by WdgMGetElapsedTimeCallout to:
     - p0: the lowest configured timing boundary value for WdgM_MainFunction
           (WdgMSupervisionCycle - WdgMMainFunctionPeriodTolerance).
     - p1: the highest configured timing boundary value for WdgM_MainFunction
           (WdgMSupervisionCycle + WdgMMainFunctionPeriodTolerance).
     - p2: a lower value than the lowest configured timing boundary value for WdgM_MainFunction
           (WdgMSupervisionCycle - WdgMMainFunctionPeriodTolerance - 1).
     - p3: a lower value than the lowest configured timing boundary value for WdgM_MainFunction
           (WdgMSupervisionCycle - WdgMMainFunctionPeriodTolerance - 1).
     - p4: a higher value than the highest configured timing boundary value for WdgM_MainFunction
           (WdgMSupervisionCycle + WdgMMainFunctionPeriodTolerance + 1).
     - p5: a higher value than the highest configured timing boundary value for WdgM_MainFunction
           (WdgMSupervisionCycle + WdgMMainFunctionPeriodTolerance + 1).
 06: Process the algorithm of MainFunction timing violation detection with the Elapsed time
     parameters set at execution step 05, by calling the WdgM_MainFunction.
 07a: VP (WDGM.EB.TIMEPM.WDGM020104_Conf)
     Check that the WdgMGetElapsedTimeCallout is called with each WdgM_MainFunction call.
 07b: VP (WDGM.EB.TIMEPM.WDGM020124_Conf)
     Check that the WdgMMainFunctionViolationCallout is called with each WdgM_MainFunction schedule violation.
 08: VP
     - p0(WDGM.EB.TIMEPM.WDGM020123_Conf, WDGM.EB.TIMEPM.WDGM020453):
           Check that the WDGM_E_MF_TIMINGVIOLATION is not reported for the case when
           the elapsed time value between two WdgM_MainFunction calls is equal to the lowest
           configured boundary value.
     - p1(WDGM.EB.TIMEPM.WDGM020123_Conf, WDGM.EB.TIMEPM.WDGM020453):
           Check that the WDGM_E_MF_TIMINGVIOLATION is not reported for the case when
           the elapsed time value between two WdgM_MainFunction calls is equal to the highest
           configured boundary value.
     - p2(WDGM.EB.TIMEPM.WDGM020125_Conf, WDGM.EB.TIMEPM.WDGM020454,
          WDGM.EB.TIMEPM.WDGM020123_Conf, WDGM.EB.TIMEPM.WDGM020453):
           Check that the WDGM_E_MF_TIMINGVIOLATION is reported to DEM for the case when the
           elapsed time value between two WdgM_MainFunction calls is lower than the lowest
           configured boundary value.
     - p3(WDGM.EB.TIMEPM.WDGM020123_Conf, WDGM.EB.TIMEPM.WDGM020453):
           Check that the WDGM_E_MF_TIMINGVIOLATION is reported to DEM stub for the case
           when the elapsed time value between two WdgM_MainFunction calls is lower than the lowest
           configured boundary value.
     - p4(WDGM.EB.TIMEPM.WDGM020302, WDGM.EB.TIMEPM.WDGM020109_Conf,
          WDGM.EB.TIMEPM.WDGM020123_Conf, WDGM.EB.TIMEPM.WDGM020453):
           Check that the WDGM_E_MF_TIMINGVIOLATION is reported to WdgMDetCallout for the case
           when the elapsed time value between two WdgM_MainFunction calls is higher than the
           highest configured boundary value.
     - p5(WDGM.EB.TIMEPM.WDGM020123_Conf, WDGM.EB.TIMEPM.WDGM020453):
           Check that the WDGM_E_MF_TIMINGVIOLATION is reported to DET for the case
           when the elapsed time value between two WdgM_MainFunction calls is higher than the
           highest configured boundary value.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020101_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020104_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020124_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020302</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>637</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020125_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020453</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>677</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020454</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>678</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020114_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020123_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>596</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020485</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>679</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable23</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2048</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_TimE_CheckWdgMModeSwitchNotification_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE07/source/application/WdgM_ImpTest_07_TimE07.c</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the WdgM notifies the Supervisor when the Global/Local mode change occurs.
 The use cases which are tested are described in the "Global/Local state transition table", below:

 Global/Local state transition table:
 -----------------------------------------------------------------------------------------------
 Transition| Initial Global/Local status   | Final  Global/Local status    | Expected Global/  |
 No.       |                               |                               | Individual mode   |
           |                               |                               |switch notification|
 ===============================================================================================
 1         |WDGM_GLOBAL_STATUS_DEACTIVATED/| WDGM_GLOBAL_STATUS_OK/        | YES/              |
           | WDGM_LOCAL_STATUS_DEACTIVATED | WDGM_LOCAL_STATUS_OK          | YES               |
 -----------------------------------------------------------------------------------------------
 2         | WDGM_GLOBAL_STATUS_OK/        | WDGM_GLOBAL_STATUS_FAILED/    | YES/              |
           | WDGM_LOCAL_STATUS_OK(SE0)     | WDGM_LOCAL_STATUS_FAILED(SE0) | YES               |
 -----------------------------------------------------------------------------------------------
 3         | WDGM_GLOBAL_STATUS_FAILED/    | WDGM_GLOBAL_STATUS_EXPIRED/   | YES/              |
           | WDGM_LOCAL_STATUS_FAILED(SE0) | WDGM_LOCAL_STATUS_EXPIRED(SE0)| YES               |
 -----------------------------------------------------------------------------------------------
 4         | WDGM_GLOBAL_STATUS_EXPIRED/   | WDGM_GLOBAL_STATUS_STOPPED/   | Yes/              |
           | WDGM_LOCAL_STATUS_EXPIRED(SE0)| WDGM_LOCAL_STATUS_EXPIRED(SE0)| NO                |
 -----------------------------------------------------------------------------------------------
 5         | WDGM_GLOBAL_STATUS_STOPPED/   |WDGM_GLOBAL_STATUS_DEACTIVATED/| YES/              |
           | WDGM_LOCAL_STATUS_EXPIRED(SE0)| WDGM_LOCAL_STATUS_EXPIRED(SE0)| NO                |
 -----------------------------------------------------------------------------------------------
 Note: SE0 = The tested SupervisedEntity.

 The testing method is "State based tests" as described above.

 
Test Object: None.
Test Precondition: 

 WdgMSupervisionExpiredCallout is enabled and not empty.

 Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4

Modes and configured WdgMTriggers:
                    ConfigName  TriggerCondition  TriggerMode  DeviceIndex
                    |             |                |               |
  WdgMMode_0:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5

Modes and configured AliveSupervisions:
  WdgMMode_0: CP0_1
              CP0_2
              CP0_3
              CP0_4

Modes and configured parameters for WdgMSupervisedEntity_0:
  WdgMMode_0:
    WdgMModeId: 0
    WdgMSupervisionReferenceCycle          2
    WdgMExpectedAliveIndications           1
    WdgMMaxMargin                          0
    WdgMMinMargin                          0
    WdgMFailedAliveSupervisionRefCycleTol  2
    WdgMExpiredSupervisionCycleTol         5
    Note: This configuration is identical for all configured CPs for this mode.

 
Test Execution: 

    01: Initialize WdgM and check that the correct mode is applied (WdgM status changes from
        Deactivated to OK).
    02: VP (WDGM.EB.TIMEPM.WDGM020108_Conf):
        Check that the global mode switch notification is performed correctly for the Init step.
    03: VP (WDGM.EB.TIMEPM.WDGM020107_Conf):
        Check that the individual mode switch notification is performed correctly for the Init step.
    04: Change WdgM status from OK to Failed.
    05: VP (WDGM.EB.TIMEPM.WDGM020108_Conf):
        Check that the global mode switch notification is performed correctly for the status
        change to Failed.
    06: VP (WDGM.EB.TIMEPM.WDGM020107_Conf)
        Check that the individual mode switch notification is performed correctly for the status
        change to Failed.
    07: Change WdgM status from Failed to Expired.
    08: VP (WDGM.EB.TIMEPM.WDGM020108_Conf):
        Check that the global mode switch notification is performed correctly for the status
        change to Expired.
    09: VP (WDGM.EB.TIMEPM.WDGM020107_Conf):
        Check that the individual mode switch notification is performed correctly for the status
        change to Expired.
    10: Change WdgM status from Expired to Stopped.
    11: VP (WDGM.EB.TIMEPM.WDGM020108_Conf):
        Check that the global mode switch notification is performed correctly for the status
        change to Stopped.
    12: VP (WDGM.EB.TIMEPM.WDGM020107_Conf):
        Check that no notification is done via WdgMIndividualModeSwitchCallout when the status
        change to Stopped is performed due to the fact that the local status isn't changed.
    13: De-initialize WdgM (WdgM status changes from Stopped to Deactivated).
    14: VP (WDGM.EB.TIMEPM.WDGM020108_Conf):
        Check that the global mode switch notification is performed correctly for the status
        change to Deactivated.
    15: VP (WDGM.EB.TIMEPM.WDGM020107_Conf):
        Check that no notification is done via WdgMIndividualModeSwitchCallout when the 
        De-initialize step is performed due to the fact that the local status isn't changed.
 
 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020107_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020108_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2049</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckMainFunctionReentrancy_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE07/source/application/WdgM_ImpTest_07_TimE07.c</sourcefile>
      <sourceline>405</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the WdgM_MainFunction returns without any action if a previous
 WdgM_MainFunction execution is actually active.

 No specific testing method is applicable here.

 
Test Object: None.
Test Precondition: 

  - Initial Mode has at least one Alive Supervision configured.
  - WdgM is de-initialized.
  - At least the callout API for GetExpectedInitState is configured

 
Test Execution: 

 01: Prepare callout API for GetExpectedInitState such that
     it calls the MainFunction several times.
     Note: this forces MainFunction calls during execution of the MainFunction
 02: Initialize WdgM module.
 03: Sanity check
     Callout API for GetExpectedInitState is executed
 04: VP (WDGM.EB.TIMEPM.WDGM020447, WDGM.EB.DesignDecision.InternalVariable22)
     WdgM_EB[_Core_CoreId]_Context.WdgM_EB_MainFunctionActive is indirectly tested
     The Global Supervision Status of the WdgM equals WDGM_GLOBAL_STATUS_OK
 05: Execut MainFunction several times.
     Note: Since no MainFunction execution is currently active,
     these calls shall affect the Global Supervision Status.
 06: VP (WDGM.EB.TIMEPM.WDGM020447, WDGM.EB.DesignDecision.InternalVariable22)
     WdgM_EB[_Core_CoreId]_Context.WdgM_EB_MainFunctionActive is indirectly tested
     The Global Supervision Status of the WdgM equals WDGM_GLOBAL_STATUS_STOPPED

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020447</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>667</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable22</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2050</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_TimE_CheckMixedAliveInternalLogicalDeadlineSupervision_SupervisorEnabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE08/source/application/WdgM_ImpTest_07_TimE08.c</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the use-case examples stated in the traced requirements are configurable and applicable.
 That is, WdgM normal behavior without fault-injection for the case when DET/DEM error reporting is
 fully activated, the Supervisor is fully activated too and the following supervision types:
 Alive, Internal Logical and Deadline are configured for the same Supervised Entity for the tested
 WdgM mode.

 The testing method used is a combination between "State based tests", "Boundary value tests" and
 "Pair wise tests", as following:
 - "State based tests": as described below in the 'Global/Local state transition table'.
 - "Boundary value tests": by using different values for the WdgMTimeGranularity parameter, as
   described in the 'Permutation table' below;
 - "Pair wise tests": for the mixed supervisions used in this test, as described below in the
   'Sequence view' and in the 'Test sequence table'.

 
Test Object: None.
Test Precondition: 

 Permutation table:
 -----------------------------------------------------------------------------
 Parameter / Permutation             | p0      | p1      | p2      | p3      |
 =============================================================================
 WdgMTimeGranularity                 |0.000001 |0.000002 |0.000010 |0.000050 |
                                     | (1us)   | (2us)   | (10us)  | (50us)  |
 -----------------------------------------------------------------------------
 Note: This test and all sub-sequent tests are executed with the configuration permutations
 described in the above "Permutation table".

 The tested mode isWdgMMode_ALiD.

 Sequence view:
 -----------------------------------------------------------------
    Alive_1
    |                                               |-&gt;Final1_CP;
    Initial_CP-&gt;Middle1_CP-&gt;Middle2_CP-&gt;Middle3_CP-&gt;|
                |           |           |           |-&gt;Final2_CP;
                |Deadline_1:|Deadline_2:|
                |&lt;----T1---&gt;|&lt;----T2---&gt;|
                |           |           |
                Start_CP    |           Stop_CP
                            StopStart_CP
 -----------------------------------------------------------------

 Configured SEs:
  ALiD_SE_ID: Checkpoints: ALiD_ALi_InitialCP_ID, ALiD_LiD_StartCP_ID, ALiD_LiD_StopStartCP_ID,
                           ALiD_LiD_StopCP_ID, ALiD_Li_Final1CP_ID, ALiD_Li_Final2CP_ID
  LiD_SE_ID: Checkpoints: LiD_Start1CP_ID, LiD_Start2CP_ID, LiD_Start3CP_ID,
                          LiD_Stop1CP_ID,  LiD_Stop2CP_ID,  LiD_Stop3CP_ID
  ALi_SE_ID: Checkpoints: ALi_Li_InitialCP_ID, ALi_Li_Middle1CP_ID, ALi_ALi_Middle2CP_ID,
                          ALi_Li_Middle3CP_ID, ALi_Li_FinalCP_ID
  Le_Initial1SE_ID: Checkpoints: Le_Initial1CP_ID
  Le_Initial2SE_ID: Checkpoints: Le_Initial2CP_ID
  Le_Middle1SE_ID: Checkpoints:  Le_Middle1CP_ID
  Le_Middle2SE_ID: Checkpoints:  Le_Middle2CP_ID
  Le_Middle3SE_ID: Checkpoints:  Le_Middle3CP_ID
  Le_Final1SE_ID: Checkpoints:   Le_Final1CP_ID
  Le_Final2SE_ID: Checkpoints:   Le_Final2CP_ID

 Modes and configured WdgMTriggers:
                    ConfigName  TriggerCondition  TriggerMode  DeviceIndex
                    |             |                |               |
  WdgMMode_unused  None           NA               NA              NA
  WdgMMode_ALiD:   WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_LiD:    WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_ALi:    WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_Le:     WdgMTrigger_0  1     WDGIF_FAST_MODE            5

 Modes and configured AliveSupervisions:
  WdgMMode_unused (WdgMInitialMode): unused.
  WdgMMode_ALiD: ALiD_ALi_InitialCP_ID
  WdgMMode_LiD:  unused.
  WdgMMode_ALi:  ALi_ALi_Middle2CP_ID
  WdgMMode_Le:   unused.

 Modes and configured DeadlineSupervisions for ALiD_SE_ID:
  WdgMMode_unused: unused.
  WdgMMode_ALiD:
    WdgMDeadlineSupervision_0: ALiD_LiD_StartCP_ID -&gt; ALiD_LiD_StopStartCP_ID
    WdgMDeadlineSupervision_1: ALiD_LiD_StopStartCP_ID -&gt; ALiD_LiD_StopCP_ID
  WdgMMode_LiD:  unused
  WdgMMode_ALi:  unused
  WdgMMode_Le:   unused.

 Modes and configured DeadlineSupervisions for LiD_SE_ID:
  WdgMMode_unused: unused.
  WdgMMode_ALiD: unused.
  WdgMMode_LiD:
    WdgMDeadlineSupervision_0: LiD_Start1CP_ID -&gt; LiD_Stop1CP_ID
    WdgMDeadlineSupervision_1: LiD_Start2CP_ID -&gt; LiD_Stop2CP_ID
    WdgMDeadlineSupervision_2: LiD_Start3CP_ID -&gt; LiD_Stop3CP_ID
  WdgMMode_ALi:  unused
  WdgMMode_Le:   unused.

 Modes and configured InternalLogicalSupervisions for ALiD_SE_ID:
  WdgMMode_unused: unused.
  WdgMMode_ALiD: ALiD_ALi_InitialCP_ID -&gt; ALiD_LiD_StartCP_ID -&gt; ALiD_LiD_StopStartCP_ID -&gt;|
                                                                                           |
                                            ALiD_Li_Final1CP_ID &amp;lt;-|                        |
                                                                  |&amp;lt;- ALiD_LiD_StopCP_ID &amp;lt;-|
                                            ALiD_Li_Final2CP_ID &amp;lt;-|
  WdgMMode_LiD:  unused
  WdgMMode_ALi:  unused
  WdgMMode_Le:   unused.

 Modes and configured InternalLogicalSupervisions for LiD_SE_ID:
  WdgMMode_unused: unused.
  WdgMMode_ALiD: unused
  WdgMMode_LiD:  LiD_Start1CP_ID -&gt; LiD_Start2CP_ID -&gt; LiD_Start3CP_ID -&gt;|
                                                                         |
                    LiD_Stop3CP_ID &amp;lt;- LiD_Stop1CP_ID &amp;lt;- LiD_Stop2CP_ID &amp;lt;-|

                                                        For (WdgMExpectedAliveIndications-1) times
                                                               |
  WdgMMode_ALi:  unused
  WdgMMode_Le:   unused.

 Modes and configured InternalLogicalSupervisions for ALi_SE_ID:
  WdgMMode_unused: unused.
  WdgMMode_ALiD: unused
  WdgMMode_LiD:  unused
                                                         For (WdgMExpectedAliveIndications-1) times
                                                                |
                                                               |&lt;-------------------------|
  WdgMMode_ALi:   ALi_Li_InitialCP_ID -&gt; ALi_Li_Middle1CP_ID -&gt;|-&gt; ALi_ALi_Middle2CP_ID -&gt;|
                                                                                          |
                                               ALi_Li_FinalCP_ID &amp;lt;- ALi_Li_Middle3CP_ID &amp;lt;-|
  WdgMMode_Le:   unused.

 Modes and configured ExternalLogicalSupervisions for:
  WdgMMode_unused: unused.
  WdgMMode_ALiD:   unused.
  WdgMMode_LiD:    unused.
  WdgMMode_ALi:    unused.

               Le_Initial1CP_ID -&gt;|
  WdgMMode_Le:                    |-&gt; Le_Middle1CP_ID -&gt; Le_Middle2CP_ID -&gt; Le_Middle3CP_ID -&gt;|
               Le_Initial2CP_ID -&gt;|                                                           |
                                                                             Le_Final1CP_ID &amp;lt;-|
                                                                                              |
                                                                             Le_Final2CP_ID &amp;lt;-|

 Modes and configured parameters for ALiD_SE_ID:
  WdgMMode_unused: unused.
  WdgMMode_ALiD:
    WdgMModeId: 1
    WdgMAliveSupervision_0:
      WdgMSupervisionReferenceCycle          1
      WdgMExpectedAliveIndications           1
      WdgMMaxMargin                          0
      WdgMMinMargin                          0
      WdgMFailedAliveSupervisionRefCycleTol  1
    WdgMDeadlineSupervision_0:
      WdgMDeadlineMax                       0.002
      WdgMDeadlineMin                       0.002
    WdgMDeadlineSupervision_1:
      WdgMDeadlineMax                       0.003
      WdgMDeadlineMin                       0.003
    WdgMExpiredSupervisionCycleTol         5
  WdgMMode_LiD: unused.
  WdgMMode_ALi: unused.
  WdgMMode_Le:  unused.

 Modes and configured parameters for LiD_SE_ID:
  WdgMMode_unused: unused.
  WdgMMode_ALiD: unused
  WdgMMode_LiD:
    WdgMModeId: 2
    WdgMDeadlineSupervision_0:
      WdgMDeadlineMax                       0.004
      WdgMDeadlineMin                       0.004
    WdgMDeadlineSupervision_1:
      WdgMDeadlineMax                       0.002
      WdgMDeadlineMin                       0.002
    WdgMDeadlineSupervision_2:
      WdgMDeadlineMax                       0.003
      WdgMDeadlineMin                       0.003
    WdgMExpiredSupervisionCycleTol         5
  WdgMMode_ALi: unused.
  WdgMMode_Le:  unused.

 Modes and configured parameters for ALi_SE_ID:
  WdgMMode_unused: unused.
  WdgMMode_ALiD: unused.
  WdgMMode_LiD: unused.
  WdgMMode_ALi:
    WdgMModeId: 3
    WdgMSupervisionReferenceCycle          1
    WdgMExpectedAliveIndications         | 1(p0) | 2(p1) | 10(p2) | 100(p3)|
    WdgMMaxMargin                          0
    WdgMMinMargin                          0
    WdgMFailedAliveSupervisionRefCycleTol  1
    WdgMExpiredSupervisionCycleTol         5
  WdgMMode_Le:  unused.

 Modes and configured parameters for Le_Initial1SE_ID, Le_Initial2SE_ID, Le_Middle1SE_ID,
                     Le_Middle2SE_ID, Le_Middle3SE_ID, Le_Final1SE_ID and Le_Final2SE_ID:
  WdgMMode_unused: unused.
  WdgMMode_ALiD: unused.
  WdgMMode_LiD: unused.
  WdgMMode_ALi: unused
  WdgMMode_Le:
    WdgMModeId: 4
    WdgMExpiredSupervisionCycleTol         5

 
Test Execution: 

 Test sequence table:
  ------------------------------------------------------------------------------------------
 Step No.| Execution | Trigger Event:          | Elapsed time        | WdgM SE local state |
         | step      |WdgM_CheckPointReached \ |                     |                     |
         |           |WdgM_MainFunction call   |                     |                     |
  ==========================================================================================
 1       | 03a)      | Initial_CP              | Not evaluated       | OK                  |
         |           | (Alive_1)               |                     |                     |
 -------------------------------------------------------------------------------------------
 2       | 03b)      | Middle1_CP              | 0                   | OK                  |
         |           | (Start_CP)              | (cycle origin point |                     |
         |           |                         |  for Deadline_1)|   |                     |
 -------------------------------------------------------------------------------------------
 3       | 03d)      | Middle2_CP              | Deadline_T1_Max     | OK                  |
         |           | (StopStart_CP)          | (cycle origin point |                     |
         |           |                         |  for Deadline_2)|   |                     |
 -------------------------------------------------------------------------------------------
 4       | 03f)      | Middle3_CP              | Deadline_T2_Max     | OK                  |
         |           | (Stop_CP)               |                     |                     |
 -------------------------------------------------------------------------------------------
 5(p0,p1)| 03g)      | Final1_CP               | Not evaluated       | OK                  |
 5(p2,p3)|           | Final2_CP               | Not evaluated       | OK                  |
 -------------------------------------------------------------------------------------------
 6       | 03i)      | WdgM_MainFunction       | Deadline_T1_Max +   | OK                  |
         |           | call                    | Deadline_T2_Max     |                     |
 -------------------------------------------------------------------------------------------
 Note: Deadline_T1_Max + Deadline_T2_Max = WdgMSupervisionCycle.

 Global/Local state transition table:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   |Initial Global/Local status(SE0)| Final  Global/Local status   |
 =================================================================================================
 1        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED/| WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 02a) | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_DEACTIVATED|
 -------------------------------------------------------------------------------------------------
 2        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 02b) | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 3        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 03i) | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 Note: SE0 is the tested SE.

 01: Initialize test case.
 02: Initialize WdgM to WdgMInitialMode and check the following aspects
 03: Change WdgM mode to the tested one
 04: VP (WDGM.EB.TIMEPM.WDGM020104_Conf):
     Check that WdgMGetElapsedTimeCallout is called by WdgM
     (even if the CP is part of more Deadline Supervisions configured for the tested mode).
 Perform Check Point reached operation as described in the requirement use case example:
 05: Call the WdgM_CheckpointReached with the Initial_CP(Alive_1) Check Points
 06: VP (WDGM.EB.TIMEPM.Safety020751):
     Verify the return value to be E_OK.
 07: Call the WdgM_CheckpointReached with the Middle1_CP(Start_CP) Check Points
     (which represent the Deadline_1 Supervision start CP)
 08: VP (WDGM.EB.TIMEPM.Safety020702, WDGM.EB.TIMEPM.Safety020751):
     Verify the return value to be E_OK.
 09: VP (WDGM.EB.TIMEPM.WDGM020104_Conf):
     Check that WdgMGetElapsedTimeCallout is called by WdgM
     (even if the CP is part of more Deadline Supervisions configured for the tested mode).
 10: Set the ElapsedTime parameter returned by the GetElapsedTimeCallout to Deadline_T1_Max.
 11: Call the WdgM_CheckpointReached with the Middle2_CP(StopStart_CP) Check Points (which represent
     the Deadline_1 Supervision stop CP and also the Deadline_2 Supervision start CP).
 12: VP (WDGM.EB.TIMEPM.Safety020702, WDGM.EB.TIMEPM.Safety020751):
     Verify the return value to be E_OK.
 13: VP (WDGM.EB.TIMEPM.WDGM020104_Conf):
     Check that WdgMGetElapsedTimeCallout is called by WdgM
     (even if the CP is part of more Deadline Supervisions configured for the tested mode).
 14: Set the ElapsedTime parameter returned by the GetElapsedTimeCallout to Deadline_T2_Max.
 15: Call the WdgM_CheckpointReached with the Middle3_CP(Stop_CP) Check Points (which
     represent the Deadline_2 Supervision stop CP).
 16: VP (WDGM.EB.TIMEPM.Safety020702, WDGM.EB.TIMEPM.Safety020751)
     Verify the return value to be E_OK.
 17: VP (WDGM.EB.TIMEPM.WDGM020104_Conf):
     Check that WdgMGetElapsedTimeCallout is called by WdgM
     (even if the CP is part of more Deadline Supervisions configured for the tested mode).
 18: Depending on the permutation call the WdgM_CheckpointReached with the following Check Point:
     - p0,p1: Final1_CP;
     - p2,p3: Final2_CP.
 19: VP (WDGM.EB.TIMEPM.Safety020751)
     Verify the return value to be E_OK:
 20: Set the ElapsedTime parameter returned by the GetElapsedTimeCallout to
     the value configured into WdgMSupervisionCycle.
 21: Call the WdgM_MainFunction to verify the correctness of the use-case operation flow.
 22: VP (WDGM.EB.TIMEPM.WDGM020104_Conf)
     Checks WdgMGetElapsedTimeCallout to be called by WdgM for each WdgM_MainFunction call;
 23: VP (WDGM.EB.TIMEPM.Safety020702, WDGM.EB.TIMEPM.Safety020751)
     Check that the normal operation flow described in the use-case is performed correctly.
     This step is done by checking the following aspects:
     - check the Global status to be OK;
     - check the Local status to be OK, for the tested Supervised Entity;
     - check that the watchdog is correctly triggered by WdgM;
     - check that no DET/DEM error is reported via WdgMDetCallout/Dem stub.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020104_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00344</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020702</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>730</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020751</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>736</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2051</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckMixedInternalLogicalDeadlineSupervision_SupervisorEnabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE08/source/application/WdgM_ImpTest_07_TimE08.c</sourcefile>
      <sourceline>525</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the use-case examples stated in the traced requirements are configurable and applicable.
 That is, WdgM normal behavior without fault-injection for the case when DET/DEM error reporting is
 fully activated, the Supervisor is fully activated too and the following supervision types:
 Internal Logical and Deadline are configured for the same Supervised Entity for the tested
 WdgM mode.

 The testing method used is a combination between "State based tests", "Boundary value tests" and
 "Pair wise tests", as following:
 - "State based tests": as described below in the 'Global/Local state transition table'.
 - "Boundary value tests": by using different values for the WdgMTimeGranularity parameter, as
   described below in the 'Permutation table' inside the
   "TS_WDGM_TimE_CheckMixedAliveInternalLogicalDeadlineSupervision_SupervisorEnabled_01" test case
   description;
 - "Pair wise tests": for the mixed supervisions used in this test, as described below in the
   'Sequence view' and in the 'Test sequence table'.

 
Test Object: None.
Test Precondition: 

 The WdgM mode configured for this test case contains the following supervisions configured for
 the tested SE: Internal Logical Supervision and Deadline Supervision, as described below in
 the 'Sequence view'.

 Sequence view:
 ------------------------------------------------------------------------
                            Start3_CP                           Stop3_CP
                            |            Deadline_3:            |
                            |&lt;---------------T3----------------&gt;|
                            |                                   |
    Initial_CP-&gt;Middle1_CP-&gt;Middle2_CP-&gt;Middle3_CP-&gt;Middle4_CP-&gt;Final_CP
    |           |                       |           |
    |           |      Deadline_2:      |           |
    |           |&lt;----------T2---------&gt;|           |
    |           Start2_CP               Stop2_CP    |
    |                                               |
    |                  Deadline_1:                  |
    |&lt;--------------------T1-----------------------&gt;|
    Start1_CP                                       Stop1_CP
 ------------------------------------------------------------------------

 
Test Execution: 

 Test sequence table:
  ------------------------------------------------------------------------------------------
 Step No.| Execution | Trigger Event:          | Elapsed time        | WdgM SE local state |
         | step      |WdgM_CheckPointReached \ |                     |                     |
         |           |WdgM_MainFunction call   |                     |                     |
  ==========================================================================================
 1       | 03a)      | Initial_CP              | 0                   | OK                  |
         |           | (Start1_CP)             | (cycle origin point |                     |
         |           |                         |  for Deadline_1)|   |                     |
 -------------------------------------------------------------------------------------------
 2       | 03b)      | Middle1_CP              | 0                   | OK                  |
         |           | (Start2_CP)             | (cycle origin point |                     |
         |           |                         |  for Deadline_2)|   |                     |
 -------------------------------------------------------------------------------------------
 3       | 03c)      | Middle2_CP              | 0                   | OK                  |
         |           | (Start3_CP)             | (cycle origin point |                     |
         |           |                         |  for Deadline_3)|   |                     |
 -------------------------------------------------------------------------------------------
 4       | 03e)      | Middle3_CP              | Deadline_T2_Max     | OK                  |
         |           | (Stop2_CP)              |                     |                     |
 -------------------------------------------------------------------------------------------
 5       | 03g)      | Middle4_CP              | Deadline_T1_Max     | OK                  |
         |           | (Stop1_CP)              |                     |                     |
 -------------------------------------------------------------------------------------------
 6       | 03i)      | Final_CP                | Deadline_T3_Max     | OK                  |
         |           | (Stop3_CP)              |                     |                     |
 -------------------------------------------------------------------------------------------
 7       | 03k)      | WdgM_MainFunction       | Deadline_T1_Max +   | OK                  |
         |           | call                    | Deadline_T2_Max +   |                     |
         |           |                         | Deadline_T3_Max     |                     |
 -------------------------------------------------------------------------------------------
 Note: Deadline_T1_Max + Deadline_T2_Max + Deadline_T3_Max= WdgMSupervisionCycle.

 Global/Local state transition table:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   |Initial Global/Local status(SE1)| Final  Global/Local status   |
 =================================================================================================
 1        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED/| WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 02a) | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_DEACTIVATED|
 -------------------------------------------------------------------------------------------------
 2        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 02b) | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 3        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 03k) | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 Note: SE1 is the tested SE.

 01: Initialize test case.
 Sanity check. Set and check preconditions:
    02a) Initialize WdgM to WdgMInitialMode and check the following aspects:
         - check that the mode is applied;
         - check WdgM Global status to be OK;
         - check the Local status for the tested Supervised Entity to be Deactivated(the
            initialization mode is unused).
    02b) Change WdgM mode to the tested one and check the following aspects:
         - check that the mode is applied;
         - check WdgM Global status to be OK;
         - check the Local status for the tested Supervised Entity to be OK.
 Perform Check Point reached operation as described in the requirement use case example:
    03a) VP(WDGM.EB.TIMEPM.Safety020703, WDGM.EB.TIMEPM.Safety020750)
         Call the WdgM_CheckpointReached with the Initial_CP(Start1_CP) Check Points (which
         represent the Deadline_1 Supervision start CP) and verify the return value to be E_OK.
    03b) VP (WDGM.EB.TIMEPM.Safety020703, WDGM.EB.TIMEPM.Safety020750)
         Call the WdgM_CheckpointReached with the Middle1_CP(Start2_CP) Check Points (which
         represent the Deadline_2 Supervision start CP) and verify the return value to be E_OK.
    03c) VP (WDGM.EB.TIMEPM.Safety020703, WDGM.EB.TIMEPM.Safety020750)
         Call the WdgM_CheckpointReached with the Middle2_CP(Start3_CP) Check Points (which
         represent the Deadline_3 Supervision start CP) and verify the return value to be E_OK.
    03d) Set the ElapsedTime parameter returned by the GetElapsedTimeCallout to Deadline_T2_Max.
    03f) VP (WDGM.EB.TIMEPM.Safety020703, WDGM.EB.TIMEPM.Safety020750)
         Call the WdgM_CheckpointReached with the Middle3_CP(Stop2_CP) Check Points (which
         represent the Deadline_2 Supervision stop CP) and verify the return value to be E_OK.
    03e) Set the ElapsedTime parameter returned by the GetElapsedTimeCallout to Deadline_T1_Max.
    03g) VP (WDGM.EB.TIMEPM.Safety020703, WDGM.EB.TIMEPM.Safety020750)
         Call the WdgM_CheckpointReached with the Middle4_CP(Stop1_CP) Check Points (which
         represent the Deadline_1 Supervision stop CP) and verify the return value to be E_OK.
    03h) Set the ElapsedTime parameter returned by the GetElapsedTimeCallout to Deadline_T3_Max.
    03i) VP (WDGM.EB.TIMEPM.Safety020703, WDGM.EB.TIMEPM.Safety020750)
         Call the WdgM_CheckpointReached with the Final_CP(Stop3_CP) Check Points (which
         represent the Deadline_3 Supervision stop CP) and verify the return value to be E_OK.
    03j) Set the ElapsedTime parameter returned by the GetElapsedTimeCallout to
         the value configured into WdgMSupervisionCycle.
    03k) Call the WdgM_MainFunction to verify the correctness of the use-case operation flow.
 04: VP (WDGM.EB.TIMEPM.WDGM020104_Conf)
     Checks WdgMGetElapsedTimeCallout to be called by WdgM in the following situations:
     - called once by each WdgM_MainFunction call;
     - called once by each WdgM_CheckpointReached call if the Check Point is part of a
       Deadline Supervision.
 05: VP (WDGM.EB.TIMEPM.Safety020703, WDGM.EB.TIMEPM.Safety020750)
     Check that the normal operation flow described in the use-case is performed correctly.
     This step is done by checking the following aspects:
     - check the Global status to be OK;
     - check the Local status to be OK, for the tested Supervised Entity;
     - check that the watchdog is correctly triggered by WdgM;
     - check that no DET/DEM error is reported via WdgMDetCallout/DEM stub.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020104_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020703</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>731</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020750</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>735</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2052</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckMixedAliveInternalLogicalSupervision_SupervisorEnabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE08/source/application/WdgM_ImpTest_07_TimE08.c</sourcefile>
      <sourceline>824</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the use-case examples stated in the traced requirements are configurable and applicable.
 That is, WdgM normal behavior without fault-injection for the case when DET/DEM error reporting is
 fully activated, the Supervisor is fully activated too and the following supervision types:
 Alive and Internal Logical are configured for the same Supervised Entity for the tested WdgM mode.

 The testing method used is a combination between "State based tests", "Boundary value tests" and
 "Pair wise tests", as following:
 - "State based tests": as described below in the 'Global/Local state transition table'.
 - "Boundary value tests": by using different values for the WdgMTimeGranularity parameter and for
   the WdgMSupervisionReferenceCycle parameter, as described in the 'Permutation table' below;
 - "Pair wise tests": for the mixed supervisions used in this test, as described below in the
   'Sequence view' and in the 'Test sequence table'.

 
Test Object: None.
Test Precondition: 

 The tested mode isWdgMMode_ALi. For more details regarding the used configuration, please see
 the TS_WDGM_TimE_CheckMixedAliveInternalLogicalDeadlineSupervision_SupervisorEnabled_01
 precondition section.

 Permutation table:
 -----------------------------------------------------------------------------
 Parameter / Permutation             | p0      | p1      | p2      | p3      |
 =============================================================================
 WdgMTimeGranularity                 |0.000001 |0.000002 |0.000010 |0.000050 |
                                     | (1us)   | (2us)   | (10us)  | (50us)  |
 -----------------------------------------------------------------------------
 WdgMSupervisionReferenceCycle       | 1       | 2       | 10      | 100     |
 -----------------------------------------------------------------------------

 Sequence view:
 ------------------------------------------------------------------------
                            Alive_1
                            |
 Initial_CP-&gt;Middle1_CP-&gt;|-&gt;Middle2_CP-&gt;|-&gt;Middle3_CP-&gt;|-&gt;Final_CP;
                         |&lt;-------------|
                          |
                          Loops-back for (WdgMSupervisionReferenceCycle-1) times
 ------------------------------------------------------------------------

 
Test Execution: 

 Test sequence table:
  ------------------------------------------------------------------------------------------
 Step No.| Execution | Trigger Event:          | Elapsed time        | WdgM SE local state |
         | step      |WdgM_CheckPointReached \ |                     |                     |
         |           |WdgM_MainFunction call   |                     |                     |
  ==========================================================================================
 1       | 03a)      | Initial_CP              | Not evaluated       | OK                  |
 -------------------------------------------------------------------------------------------
 2       | 03b)      | Middle1_CP              | Not evaluated       | OK                  |
 -------------------------------------------------------------------------------------------
 3       | 03c)      | Middle2_CP              | Not evaluated       | OK                  |
         |           | (Alive_1)               |                     |                     |
--------------------------------------------------------------------------------------------
 5       | 03d)      | Middle3_CP              | Not evaluated       | OK                  |
 -------------------------------------------------------------------------------------------
 5       | 03e)      | Final_CP                | Not evaluated       | OK                  |
 -------------------------------------------------------------------------------------------
 6       | 03f)      | WdgM_MainFunction       | WdgMSupervisionCycle| OK                  |
         |           | call                    |                     |                     |
 -------------------------------------------------------------------------------------------

 Global/Local state transition table:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   |Initial Global/Local status(SE2)| Final  Global/Local status   |
 =================================================================================================
 1        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED/| WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 02a) | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_DEACTIVATED|
 -------------------------------------------------------------------------------------------------
 2        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 02b) | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 3        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 03g) | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 Note: SE2 is the tested SE.

 01: Initialize test case.
 Sanity check. Set and check preconditions:
    02a) Initialize WdgM to WdgMInitialMode and check the following aspects:
         - check that the mode is applied;
         - check WdgM Global status to be OK;
         - check the Local status for the tested Supervised Entity to be Deactivated(the
            initialization mode is unused).
    02b) Change WdgM mode to the tested one and check the following aspects:
         - check that the mode is applied;
         - check WdgM Global status to be OK;
         - check the Local status for the tested Supervised Entity to be OK.
 Perform Check Point reached operation as described in the requirement use case example:
    03a) VP (WDGM.EB.TIMEPM.Safety020752)
         Call the WdgM_CheckpointReached with the Initial_CP Check Points and verify the return
         value to be E_OK.
    03b) VP (WDGM.EB.TIMEPM.Safety020752)
         Call the WdgM_CheckpointReached with the Middle1_CP Check Points and verify the return
         value to be E_OK.
    03c) VP (WDGM.EB.TIMEPM.Safety020752)
         Repeat for several times the following algorithm:
           Call the WdgM_CheckpointReached with the Middle2_CP(Alive_1) Check Points and verify
           the return value to be E_OK.
    03d) VP (WDGM.EB.TIMEPM.Safety020752)
         Call the WdgM_CheckpointReached with the Middle3_CP Check Points and verify the return
         value to be E_OK.
    03e) VP (WDGM.EB.TIMEPM.Safety020752)
         Call the WdgM_CheckpointReached with the Final_CP Check Points and verify the return
         value to be E_OK.
    03f) Set the ElapsedTime parameter returned by the GetElapsedTimeCallout to
         the value configured into WdgMSupervisionCycle.
    03g) Call the WdgM_MainFunction to verify the correctness of the use-case operation flow.
 04: VP (WDGM.EB.TIMEPM.WDGM020104_Conf)
     Checks WdgMGetElapsedTimeCallout to be called by WdgM by each WdgM_MainFunction call.
 05: VP (WDGM.EB.TIMEPM.Safety020752)
     Check that the normal operation flow described in the use-case is performed correctly.
     This step is done by checking the following aspects:
     - check the Global status to be OK;
     - check the Local status to be OK, for the tested Supervised Entity;
     - check that the watchdog is correctly triggered by WdgM;
     - check that no DET/DEM error is reported via WdgMDetCallout/DEM stub.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020104_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020752</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>737</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2053</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckExternalLogicalSupervision_SupervisorEnabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE08/source/application/WdgM_ImpTest_07_TimE08.c</sourcefile>
      <sourceline>1091</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the use-case examples stated in the traced requirements are configurable and applicable.
 That is, WdgM normal behavior without fault-injection for the case when DET/DEM error reporting is
 fully activated, the Supervisor is fully activated too and only the External Logical supervision
 is configured for the tested WdgM mode.

 The testing method used is a combination between "State based tests", "Boundary value tests" and
 "Pair wise tests", as following:
 - "State based tests": as described below in the 'Global/Local state transition table'.
 - "Boundary value tests": by using different values for the WdgMTimeGranularity parameter, as
   described below in the 'Permutation table' inside the
   "TS_WDGM_TimE_CheckMixedAliveInternalLogicalDeadlineSupervision_SupervisorEnabled_01" test case
   description;
 - "Pair wise tests": for the mixed supervisions used in this test, as described below in the
   'Sequence view' and in the 'Test sequence table'.

 
Test Object: None.
Test Precondition: 

 The tested mode isWdgMMode_ALi. For more details regarding the used configuration, please see
 the TS_WDGM_TimE_CheckMixedAliveInternalLogicalDeadlineSupervision_SupervisorEnabled_01
 precondition section.

 Sequence view:
 -----------------------------------------------------------------------------------------------
 Initial1_CP(SE1)-&gt;|                                                           |-&gt;Final1_CP(SE6)
                   |-&gt;Middle1_CP(SE3)-&gt;|-&gt;Middle2_CP(SE4)-&gt;|-&gt;Middle3_CP(SE5)-&gt;|
 Initial2_CP(SE2)-&gt;|                                                           |-&gt;Final2_CP(SE7)
 -----------------------------------------------------------------------------------------------

 
Test Execution: 

 Test sequence table:
  ------------------------------------------------------------------------------------------
 Step No.| Execution | Trigger Event:          | Elapsed time        | WdgM SE local state |
         | step      |WdgM_CheckPointReached \ |                     |                     |
         |           |WdgM_MainFunction call   |                     |                     |
  ==========================================================================================
 1(p0,p1)| 03a)      | Initial1_CP(SE1)        | Not evaluated       | OK                  |
 1(p2,p3)|           | Initial2_CP(SE2)        | Not evaluated       | OK                  |
 -------------------------------------------------------------------------------------------
 2       | 03b)      | Middle1_CP(SE3)         | Not evaluated       | OK                  |
 -------------------------------------------------------------------------------------------
 3       | 03c)      | Middle2_CP(SE4)         | Not evaluated       | OK                  |
--------------------------------------------------------------------------------------------
 4       | 03d)      | Middle3_CP(SE5)         | Not evaluated       | OK                  |
 -------------------------------------------------------------------------------------------
 5(p0,p2)| 03e)      | Final1_CP(SE6)          | Not evaluated       | OK                  |
 5(p1,p3)|           | Final2_CP(SE7)          | Not evaluated       | OK                  |
 -------------------------------------------------------------------------------------------
 6       | 03f)      | WdgM_MainFunction       | WdgMSupervisionCycle| OK                  |
         |           | call                    |                     |                     |
 -------------------------------------------------------------------------------------------
 Note: SEn, with n=1-7, are the tested supervised entities for this graph.

 Global/Local state transition table:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   |Initial Global/Local status(SEn)| Final  Global/Local status   |
 =================================================================================================
 1        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED/| WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 02a) | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_DEACTIVATED|
 -------------------------------------------------------------------------------------------------
 2        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 02b) | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 3        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 03g) | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------

 01: Initialize test case.
 Sanity check. Set and check preconditions:
    02a) Initialize WdgM to WdgMInitialMode and check the following aspects:
         - check that the mode is applied;
         - check WdgM Global status to be OK;
         - check the Local status for all the tested Supervised Entity to be Deactivated(the
            initialization mode is unused).
    02b) Change WdgM mode to the tested one and check the following aspects:
         - check that the mode is applied;
         - check WdgM Global status to be OK;
         - check the Local status for all the tested Supervised Entity to be OK.
 Perform Check Point reached operation as described in the requirement use case example:
    03a) VP(WDGM.EB.TIMEPM.Safety020755, WDGM.EB.TIMEPM.Safety020756)
         Call the WdgM_CheckpointReached with the following Check Point and verify the return
         value to be E_OK:
         - p0,p1: Initial1_CP(SE1);
         - p2,p3: Initial2_CP(SE2).
    03b) VP (WDGM.EB.TIMEPM.Safety020755, WDGM.EB.TIMEPM.Safety020756)
         Call the WdgM_CheckpointReached with the Middle1_CP(SE3) Check Points and verify the
         return value to be E_OK.
    03c) VP (WDGM.EB.TIMEPM.Safety020755, WDGM.EB.TIMEPM.Safety020756)
         Call the WdgM_CheckpointReached with the Middle2_CP(SE4) Check Points and verify the
         return value to be E_OK.
    03d) VP (WDGM.EB.TIMEPM.Safety020755, WDGM.EB.TIMEPM.Safety020756)
         Call the WdgM_CheckpointReached with the Middle3_CP(SE5) Check Points and verify the
         return value to be E_OK.
    03e) VP (WDGM.EB.TIMEPM.Safety020755, WDGM.EB.TIMEPM.Safety020756)
         Call the WdgM_CheckpointReached with the following Check Points and verify the return
         value to be E_OK:
         - p0,p2: Final1_CP(SE6);
         - p1,p3: Final2_CP(SE7).
    03f) Set the ElapsedTime parameter returned by the GetElapsedTimeCallout to
         the value configured into WdgMSupervisionCycle.
    03g) Call the WdgM_MainFunction to verify the correctness of the use-case operation flow.
 04: VP (WDGM.EB.TIMEPM.WDGM020104_Conf)
     Checks WdgMGetElapsedTimeCallout to be called by WdgM with each WdgM_MainFunction call.
 05: VP (WDGM.EB.TIMEPM.Safety020755, WDGM.EB.TIMEPM.Safety020756)
     Check that the normal operation flow described in the use-case is performed correctly.
     This step is done by checking the following aspects:
     - check the Global status to be OK;
     - check the Local status to be OK,  for all the Supervised Entities which participate on
       the External graph;
     - check that the watchdog is correctly triggered by WdgM;
     - check that no DET/DEM error is reported via WdgMDetCallout/Dem stub.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020104_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020755</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>740</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020756</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>741</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2054</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_TimE_CheckMixedAliveExternalLogicalSupervision_SupervisorDisabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE09/source/application/WdgM_ImpTest_07_TimE09.c</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 

 Tests that the use-case examples stated in the traced requirements are configurable and applicable.
 That is, WdgM normal behavior without fault-injection for the case when DET/DEM error reporting is fully activated, the
 Supervisor is diabled and Alive Supervision and External Logical Supervision are configured.

 Permutation table:
 ---------------------------------------------------
 Parameter / Permutation             | p0   | p1   |
 ===================================================
 WdgMDevErrorDetect                  | true |false |
 ---------------------------------------------------
 Note: This test and all sub-sequent tests are executed with the configuration permutations
 described into the above "Permutation table". The permutations are relevant only for the 
 TS_WDGM_TimE_CheckUpdateAliveCounterReturnError test case.

 The testing method used is a combination between "State based tests" and
 "Pair wise tests", as following:
 - "State based tests": as described below into the 'Abstract Global/Local state transition table'.
 - "Pair wise tests": for the mixed supervisions used in this test, as described below into the
   'Sequence view' and into the 'Test sequence table'.

 The WdgM mode configured for this test case contains only an External Logical Supervision
 for the tested SE: Alive Supervision and External Logical Supervision,
 as described below into the 'Sequence view'.

 Sequence view:
 ----------------------------------------------------------------------------------
 Alive1           Alive2           Alive3           Alive4           Alive5
 |                |                |                |                |
 Initial_CP(SE1)-&gt;Middle1_CP(SE2)-&gt;Middle2_CP(SE3)-&gt;Middle3_CP(SE4)-&gt;Final_CP(SE5)
 ----------------------------------------------------------------------------------

 
Test Object: None.
Test Precondition: 

 Configured SEs:
  SE_1: Checkpoints: CP1_1
  SE_2: Checkpoints: CP2_1
  SE_3: Checkpoints: CP3_1
  SE_4: Checkpoints: CP4_1
  SE_5: Checkpoints: CP5_1
  SE_6: Checkpoints: CP6_1, CP6_2
  SE_7: Checkpoints: CP7_1, CP7_2
  SE_8: Checkpoints: CP8_1, CP9_2
  SE_9: Checkpoints: CP0_1, CP0_2
  SE_10: Checkpoints: CP10_1, CP10_2
  SE_11: Checkpoints: CP11_1
  SE_12: Checkpoints: CP12_1
  SE_13: Checkpoints: CP13_1
  SE_14: Checkpoints: CP14_1
  SE_15: Checkpoints: CP15_1
  SE_16: Checkpoints: CP16_1
  SE_17: Checkpoints: CP17_1
  SE_18: Checkpoints: CP18_1
  SE_19: Checkpoints: CP19_1, CP19_2
  SE_20: Checkpoints: CP20_1

 Modes and configured WdgMTriggers:
                    ConfigName  TriggerCondition  TriggerMode  DeviceIndex
                    |             |                |               |
  WdgMMode_0:      None           NA               NA              NA
  WdgMMode_1:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_2:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_3:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_4:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5

Modes and configured AliveSupervisions:
  WdgMMode_0 (Initial Mode): unused.
  WdgMMode_1: CP1_1
              CP2_1
              CP3_1
              CP4_1
              CP5_1
  WdgMMode_2: unused.
  WdgMMode_3: unused.
  WdgMMode_4: unused.

 Modes and configured ExtenalLogicalSupervisions:
  WdgMMode_0 (Initial Mode): unused.
  WdgMMode_1: CP1_1-&gt;CP2_1-&gt;CP3_1-&gt;CP4_1-&gt;CP5_1
  WdgMMode_2: CP6_1-&gt;CP7_1-&gt;CP8_1-&gt;CP9_1-&gt;CP10_1
              CP6_2-&gt;CP7_2-&gt;CP8_2-&gt;CP9_2-&gt;CP10_2
  WdgMMode_3:                 |-&gt;CP13_1-&gt;|
              CP6_11-&gt;CP12_1-&gt;|          |-&gt;CP15_1-&gt;CP16_1
                              |-&gt;CP14_1-&gt;|
  WdgMMode_4: CP17_1-&gt;CP18_1-&gt;CP19_1-&gt;CP19_2-&gt;CP20_1

 Modes and configured parameters for SE_1, SE_2, SE_3, SE_4, SE_5:
  WdgMMode_0:
    unused.
  WdgMMode_1:
    WdgMModeId: 1
    WdgMSupervisionReferenceCycle          1
    WdgMExpectedAliveIndications           1
    WdgMMaxMargin                          0
    WdgMMinMargin                          0
    WdgMFailedAliveSupervisionRefCycleTol  0
    WdgMExpiredSupervisionCycleTol         5
    Note: This configuration is identical for all configured CPs for this mode.
  WdgMMode_2:
    unused.
  WdgMMode_3:
    unused.
  WdgMMode_4:
    unused.

 Modes and configured parameters for SE_6, SE_7, SE_8, SE_9, SE_10:
  WdgMMode_0:
    unused.
  WdgMMode_1:
    unused.
  WdgMMode_2:
    WdgMModeId: 2
    WdgMExpiredSupervisionCycleTol         5
  WdgMMode_3:
    unused.
  WdgMMode_4:
    unused.

 Modes and configured parameters for SE_11, SE_12, SE_13, SE_14, SE_15, SE_16:
  WdgMMode_0:
    unused.
  WdgMMode_1:
    unused.
  WdgMMode_2:
    unused.
  WdgMMode_3:
    WdgMModeId: 3
    WdgMExpiredSupervisionCycleTol         5
  WdgMMode_4:
    unused.

 Modes and configured parameters for SE_17, SE_18, SE_19, SE_20:
  WdgMMode_0:
    unused.
  WdgMMode_1:
    unused.
  WdgMMode_2:
    unused.
  WdgMMode_3:
    unused.
  WdgMMode_4:
    WdgMModeId: 4
    WdgMExpiredSupervisionCycleTol         5

 The WdgM is de-initialized.
 The tested mode is WdgM_WdgMMode_1.
 The following configuration is used for all tests:

 
Test Execution: 

 Abstract Global/Local state transition table:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   |Initial Global/Local status(SEn)| Final  Global/Local status   |
 =================================================================================================
 1        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED/| WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 02)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_DEACTIVATED|
 -------------------------------------------------------------------------------------------------
 2        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 03)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 3        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 04)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------

 Test sequence table:
  ---------------------------------------------------
 Step No.| CP name            | WdgM SEn local state|
  ===================================================
 1       | Initial_CP(SE1)    | OK                  |
         | (Alive1)           |                     |
 ----------------------------------------------------
 2       | Middle1_CP(SE2)    | OK                  |
         | (Alive2)           |                     |
 ----------------------------------------------------
 3       | Middle2_CP(SE3)    | OK                  |
         | (Alive3)           |                     |
-----------------------------------------------------
 4       | Middle3_CP(SE4)    | OK                  |
         | (Alive4)           |                     |
 ----------------------------------------------------
 5       | Final_CP(SE5)      | OK                  |
         | (Alive5)           |                     |
 ----------------------------------------------------
 6       | WdgM_MainFunction  | OK                  |
         | call               |                     |
 ----------------------------------------------------
 Note: SEn, with n=1-5, are the tested supervised entities for this graph.

 01: Initializes test case.
 02: Initializes WdgM module.
 03: Sanity check: Check preconditions
     - Check WdgM current Mode to be WdgM_EB_InitialModeId.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of all SE which participate on the Alive and External graph
       configuration for the tested mode to be WDGM_LOCAL_STATUS_DEACTIVATED.
     - Change WdgM Mode to the required WdgMMode for this test case and test that the request was
       processed.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of all SE which participate on the Alive and External graph
       configuration for the tested mode to be WDGM_LOCAL_STATUS_OK.
 04: VP (WDGM.EB.TIMEPM.Safety020753)
     Execute the steps described in the "Test sequence table" and check the WdgM_CheckpointReached
     return value after each called CP to be E_OK.
 05: VP (WDGM.EB.TIMEPM.Safety020753)
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 06: VP (WDGM.EB.TIMEPM.Safety020753)
     Check the Local status of all SE which participate on the Alive and External graph
     configuration for the tested mode to be WDGM_GLOBAL_STATUS_OK.
 07: VP (WDGM.EB.TIMEPM.Safety020753)
     Check the watchdog to be correctly triggered by WdgM.
 08: VP (WDGM.EB.TIMEPM.Safety020753)
     Check that no error is reported to DET.
 09: VP (WDGM.EB.TIMEPM.Safety020753)
     Check that no error is reported to DEM.

 
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020753</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>738</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2055</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckExternalLogicalSupervision_SupervisorDisabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE09/source/application/WdgM_ImpTest_07_TimE09.c</sourcefile>
      <sourceline>467</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 

 Tests that the use-case examples stated in the traced requirements are configurable and applicable.
 That is, WdgM normal behavior without fault-injection for the case when DET/DEM error reporting is fully activated, the
 Supervisor is diabled and External Logical Supervision are configured.

 The testing method used is a combination between "State based tests" and
 "Pair wise tests", as following:
 - "State based tests": as described below into the 'Abstract Global/Local state transition table'.
 - "Pair wise tests": for the mixed supervisions used in this test, as described below into the
   'Sequence view' and into the 'Test sequence table'.

 The WdgM mode configured for this test case contains only an External Logical Supervision
 for the tested SE, as described below into the 'Sequence view'.

 Sequence view:
 --------------------------------------------------------------------------------------
 Initial1_CP(SE1)-&gt;Middle11_CP(SE2)-&gt;Middle21_CP(SE3)-&gt;Middle31_CP(SE4)-&gt;Final1_CP(SE5)

 Initial2_CP(SE1)-&gt;Middle12_CP(SE2)-&gt;Middle22_CP(SE3)-&gt;Middle32_CP(SE4)-&gt;Final2_CP(SE5)
 --------------------------------------------------------------------------------------

 
Test Object: None.
Test Precondition: 

 The WdgM is initialized and the global status is WDGM_GLOBAL_STATUS_OK.
 The tested mode is WdgM_WdgMMode_2.
 The configuration used is described in the
 TS_WDGM_TimE_CheckMixedAliveExternalLogicalSupervision_SupervisorDisabled_01.

 
Test Execution: 

 Abstract Global/Local state transition table:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   |Initial Global/Local status(SEn)| Final  Global/Local status   |
 =================================================================================================
 1        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED/| WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 02)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_DEACTIVATED|
 -------------------------------------------------------------------------------------------------
 2        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 03)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 3        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 04)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------

 Test sequence table:
  ---------------------------------------------------
 Step No.| CP name            | WdgM SEn local state|
  ===================================================
 1       | Initial1_CP(SE1)   | OK                  |
 ----------------------------------------------------
 2       | Initial2_CP(SE1)   | OK                  |
 ----------------------------------------------------
 3       | Middle11_CP(SE2)   | OK                  |
 ----------------------------------------------------
 4       | Middle12_CP(SE2)   | OK                  |
 ----------------------------------------------------
 5       | Middle21_CP(SE3)   | OK                  |
-----------------------------------------------------
 6       | Middle22_CP(SE3)   | OK                  |
-----------------------------------------------------
 7       | Middle31_CP(SE4)   | OK                  |
 ----------------------------------------------------
 8       | Middle32_CP(SE4)   | OK                  |
 ----------------------------------------------------
 9       | Final1_CP(SE5)     | OK                  |
 ----------------------------------------------------
 10      | Final2_CP(SE5)     | OK                  |
 ----------------------------------------------------
 11      | WdgM_MainFunction  | OK                  |
         | call               |                     |
 ----------------------------------------------------
 Note: SEn, with n=1-5, are the tested supervised entities for this graph.

 01: Initializes test case.
 02: Initializes WdgM module.
 03: Sanity check: Check preconditions
     - Check WdgM current Mode to be WdgM_EB_InitialModeId.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of all SE which participate on the External graph
       configuration for the tested mode to be WDGM_LOCAL_STATUS_DEACTIVATED.
     - Change WdgM Mode to the required WdgMMode for this test case and test that the request was
       processed.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of all SE which participate on the External graph
       configuration for the tested mode to be WDGM_LOCAL_STATUS_OK.
 04: VP (WDGM.EB.TIMEPM.Safety020754)
     Execute the steps described in the "Test sequence table" and check the WdgM_CheckpointReached
     return value after each called CP to be E_OK.
 05: VP (WDGM.EB.TIMEPM.Safety020754)
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 06: VP (WDGM.EB.TIMEPM.Safety020754)
     Check the Local status of all SE which participate on the Alive and External graph
     configuration for the tested mode to be WDGM_GLOBAL_STATUS_OK.
 07: VP (WDGM.EB.TIMEPM.Safety020754)
     Check the watchdog to be correctly triggered by WdgM.
 08: VP (WDGM.EB.TIMEPM.Safety020754)
     Check that no error is reported to DET.
 09: VP (WDGM.EB.TIMEPM.Safety020754)
     Check that no error is reported to DEM.

 
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020754</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>739</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2056</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckExternalLogicalSupervision_SupervisorDisabled_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE09/source/application/WdgM_ImpTest_07_TimE09.c</sourcefile>
      <sourceline>774</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 

 Tests that the use-case examples stated in the traced requirements are configurable and applicable.
 That is, WdgM normal behavior without fault-injection for the case when DET/DEM error reporting is fully activated, the
 Supervisor is diabled and External Logical Supervision are configured.

 The testing method used is a combination between "State based tests" and
 "Pair wise tests", as following:
 - "State based tests": as described below into the 'Abstract Global/Local state transition table'.
 - "Pair wise tests": for the mixed supervisions used in this test, as described below into the
   'Sequence view' and into the 'Test sequence table'.

 The WdgM mode configured for this test case contains only an External Logical Supervision
 for the tested SE, as described below into the 'Sequence view'.

 Sequence view:
 ---------------------------------------------------------------------------------------
                                   |-&gt;Middle2_CP(SE3)-&gt;|
 Initial_CP(SE1)-&gt;Middle1_CP(SE2)-&gt;|                   |-&gt;Middle4_CP(SE4)-&gt;Final_CP(SE5)
                                   |-&gt;Middle3_CP(SE6)-&gt;|
 ---------------------------------------------------------------------------------------

 
Test Object: None.
Test Precondition: 

 The WdgM is initialized and the global status is WDGM_GLOBAL_STATUS_OK.
 The tested mode is WdgM_WdgMMode_3.
 The configuration used is described in the
 TS_WDGM_TimE_CheckMixedAliveExternalLogicalSupervision_SupervisorDisabled_01.

 
Test Execution: 

 Abstract Global/Local state transition table:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   |Initial Global/Local status(SEn)| Final  Global/Local status   |
 =================================================================================================
 1        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED/| WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 02)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_DEACTIVATED|
 -------------------------------------------------------------------------------------------------
 2        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 03)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 3        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 04)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 4        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 13)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------

 Test sequence table:
  ---------------------------------------------------
 Step No.| CP name            | WdgM SEn local state|
  ===================================================
 1       | Initial_CP(SE1)    | OK                  |
 ----------------------------------------------------
 2       | Middle1_CP(SE2)    | OK                  |
 ----------------------------------------------------
 3       | Middle2_CP(SE3)    | OK                  |
-----------------------------------------------------
 4       | Middle4_CP(SE5)    | OK                  |
 ----------------------------------------------------
 5       | Final_CP(SE6)      | OK                  |
 ----------------------------------------------------
 6       | WdgM_MainFunction  | OK                  |
         | call               |                     |
 ----------------------------------------------------
 7       | Initial_CP(SE1)    | OK                  |
 ----------------------------------------------------
 8       | Middle1_CP(SE2)    | OK                  |
 ----------------------------------------------------
 9       | Middle3_CP(SE4)    | OK                  |
-----------------------------------------------------
 10      | Middle4_CP(SE5)    | OK                  |
 ----------------------------------------------------
 11      | Final_CP(SE6)      | OK                  |
 ----------------------------------------------------
 12      | WdgM_MainFunction  | OK                  |
         | call               |                     |
 ----------------------------------------------------
 Note: SEn, with n=1-6, are the tested supervised entities for this graph.

 01: Initializes test case.
 02: Initializes WdgM module.
 03: Sanity check: Check preconditions
     - Check WdgM current Mode to be WdgM_EB_InitialModeId.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of all SE which participate on the External graph
       configuration for the tested mode to be WDGM_LOCAL_STATUS_DEACTIVATED.
     - Change WdgM Mode to the required WdgMMode for this test case and test that the request was
       processed.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of all SE which participate on the External graph
       configuration for the tested mode to be WDGM_LOCAL_STATUS_OK.
 04: VP (WDGM.EB.TIMEPM.Safety020757)
     Execute the steps described in the "Test sequence table" and check the WdgM_CheckpointReached
     return value after each called CP to be E_OK.
 05: VP (WDGM.EB.TIMEPM.Safety020757)
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 06: VP (WDGM.EB.TIMEPM.Safety020757)
     Check the Local status of all SE which participate on the Alive and External graph
     configuration for the tested mode to be WDGM_GLOBAL_STATUS_OK.
 07: VP (WDGM.EB.TIMEPM.Safety020757)
     Check the watchdog to be correctly triggered by WdgM.
 08: VP (WDGM.EB.TIMEPM.Safety020757)
     Check that no error is reported to DET.
 09: VP (WDGM.EB.TIMEPM.Safety020757)
     Check that no error is reported to DEM.

 
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020757</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2057</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckExternalLogicalSupervision_SupervisorDisabled_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE09/source/application/WdgM_ImpTest_07_TimE09.c</sourcefile>
      <sourceline>1143</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 

 Tests that the use-case examples stated in the traced requirements are configurable and applicable.
 That is, WdgM normal behavior without fault-injection for the case when DET/DEM error reporting is fully activated, the
 Supervisor is diabled and External Logical Supervision are configured.

 The testing method used is a combination between "State based tests" and
 "Pair wise tests", as following:
 - "State based tests": as described below into the 'Abstract Global/Local state transition table'.
 - "Pair wise tests": for the mixed supervisions used in this test, as described below into the
   'Sequence view' and into the 'Test sequence table'.

 The WdgM mode configured for this test case contains only an External Logical Supervision
 for the tested SE, as described below into the 'Sequence view'.

 Sequence view:
 ----------------------------------------------------------------------------------
 Initial_CP(SE1)-&gt;Middle1_CP(SE2)-&gt;Middle2_CP(SE3)-&gt;Middle3_CP(SE3)-&gt;Final_CP(SE4)
 ----------------------------------------------------------------------------------

 
Test Object: None.
Test Precondition: 

 The WdgM is initialized and the global status is WDGM_GLOBAL_STATUS_OK.
 The tested mode is WdgM_WdgMMode_4.
 The configuration used is described in the
 TS_WDGM_TimE_CheckMixedAliveExternalLogicalSupervision_SupervisorDisabled_01.

 
Test Execution: 

 Abstract Global/Local state transition table:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   |Initial Global/Local status(SEn)| Final  Global/Local status   |
 =================================================================================================
 1        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED/| WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 02)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_DEACTIVATED|
 -------------------------------------------------------------------------------------------------
 2        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 03)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 3        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 04)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------

 Test sequence table:
  ---------------------------------------------------
 Step No.| CP name            | WdgM SEn local state|
  ===================================================
 1       | Initial_CP(SE1)    | OK                  |
 ----------------------------------------------------
 2       | Middle1_CP(SE2)    | OK                  |
 ----------------------------------------------------
 3       | Middle2_CP(SE3)    | OK                  |
-----------------------------------------------------
 4       | Middle3_CP(SE3)    | OK                  |
 ----------------------------------------------------
 5       | Final_CP(SE4)      | OK                  |
 ----------------------------------------------------
 6       | WdgM_MainFunction  | OK                  |
         | call               |                     |
 ----------------------------------------------------
 Note: SEn, with n=1-4, are the tested supervised entities for this graph.

 01: Initializes test case.
 02: Initializes WdgM module.
 03: Sanity check: Check preconditions
     - Check WdgM current Mode to be WdgM_EB_InitialModeId.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of all SE which participate on the External graph
       configuration for the tested mode to be WDGM_LOCAL_STATUS_DEACTIVATED.
     - Change WdgM Mode to the required WdgMMode for this test case and test that the request was
       processed.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of all SE which participate on the External graph
       configuration for the tested mode to be WDGM_LOCAL_STATUS_OK.
 04: VP (WDGM.EB.TIMEPM.Safety020758)
     Execute the steps described in the "Test sequence table" and check the WdgM_CheckpointReached
     return value after each called CP to be E_OK.
 05: VP (WDGM.EB.TIMEPM.Safety020758)
     Check WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
 06: VP (WDGM.EB.TIMEPM.Safety020758)
     Check the Local status of all SE which participate on the Alive and External graph
     configuration for the tested mode to be WDGM_GLOBAL_STATUS_OK.
 07: VP (WDGM.EB.TIMEPM.Safety020758)
     Check the watchdog to be correctly triggered by WdgM.
 08: VP (WDGM.EB.TIMEPM.Safety020758)
     Check that no error is reported to DET.
 09: VP (WDGM.EB.TIMEPM.Safety020758)
     Check that no error is reported to DEM.

 
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.Safety020758</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>743</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2058</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckUpdateAliveCounterReturnError</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE09/source/application/WdgM_ImpTest_07_TimE09.c</sourcefile>
      <sourceline>1408</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the WdgM_UpdateAliveCounter function returns E_NOT_OK in case the SE with the tested
 ID is not used by the tested mode. Therefore the Local status for the tested SE is
 WDGM_GLOBAL_STATUS_DEACTIVATED.

 No test method is applicable in this case.

 
Test Object: None.
Test Precondition: 

 The WdgM is initialized and the global status is WDGM_GLOBAL_STATUS_OK.
 The tested mode is WdgM_WdgMMode_0.
 The configuration used is described in the
 TS_WDGM_TimE_CheckMixedAliveExternalLogicalSupervision_SupervisorDisabled_01.

 
Test Execution: 

 01: Initializes test case.
 02: Initializes WdgM module.
 03: Sanity check: Check preconditions
     - Change mode to a mode which has other supervisions configured then Alive supervision
       and check that the WdgM mode changes to the required mode.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of the tested SE to be WDGM_GLOBAL_STATUS_OK.
     - Check that no DET error is called at initialization.
 04: Performs WdgM_UpdateAliveCounter call with the tested SE ID.
 05: VP 
     Permutation p0(WdgM.ASR40.SWS_WdgM_00004.8, WdgM.ASR40.SWS_WdgM_00290, WdgM.ASR40.SWS_WdgM_00259.8):
       The WdgM_UpdateAliveCounter() call returns E_NOT_OK and exactly 1 error is reported
       to the DET with error code: WDGM_E_DEPRECATED.
     Permutation p1(WDGM.EB.UpdateAliveCounter):
       The WdgM_UpdateAliveCounter() call returns E_NOT_OK and no DET error is reported.
 

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.UpdateAliveCounter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00004.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00290</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.SWS_WdgM_00259.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2059</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_TimE_CheckDeadlineInternalLogicalResetFlag_SupervisorEnabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE10/source/application/WdgM_ImpTest_07_TimE10.c</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests WdgM Mode Switch behavior for the case when the
 Supervisor is fully activated and deadline + internal logical supervision is activated for
 the tested mode, and no error is simulated.

 The testing method used is the "State based tests" as described in the 'Abstract
 Global/Local Supervision Status transition table used in the test execution'.

 
Test Object: None.
Test Precondition: 

 WdgM is initialized and is in WdgM_WdgMMode_1.
 The Global\Local status is OK.
 The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4
  WdgMSupervisedEntity_1: Checkpoints: CP1_1

Modes and configured WdgMTriggers:
                    ConfigName  TriggerCondition  TriggerMode  DeviceIndex
                    |             |                |               |
  WdgMMode_0:      None           NA               NA              NA
  WdgMMode_1:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_2:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5
  WdgMMode_3:      WdgMTrigger_0  1     WDGIF_FAST_MODE            5

Modes and configured DeadlineSupervisions:
  WdgMMode_1: SE_0(CP0_2-&gt;CP0_3)

Modes and configured InternalLogicalSupervisions:
  WdgMMode_1: WdgMMode_3: SE_0(CP0_1-&gt;CP0_2-&gt;CP0_3-&gt;CP0_4)

Modes and configured ExternalLogicalSupervisions:
  WdgMMode_2: CP1_1(SE_1)-&gt;CP2_1(SE_1)-&gt;CP3_1(SE_1)

Modes and configured parameters for SE_0:
  WdgMMode_0:
    unused.
  WdgMMode_1 / WdgMMode_3:
    WdgMModeId: 1(WdgMMode_1) / 3(WdgMMode_3)
    WdgMExpiredSupervisionCycleTol        5
    WdgMDeadlineSupervision_0:
      WdgMDeadlineMax:  0.005
      WdgMDeadlineMin:  0.005
  WdgMMode_2:
    unused.

Modes and configured parameters for SE_1 / SE_2 / SE_3:
  WdgMMode_0:
     unused.
  WdgMMode_1:
     unused.
  WdgMMode_2:
    WdgMModeId: 3
    WdgMExpiredSupervisionCycleTol        5
  WdgMMode_3:
     unused.

 
Test Execution: 

 Abstract Global/Local Supervision Status transition table used in the test execution:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   |Initial Global/Local status(SE0)| Final  Global/Local status   |
 =================================================================================================
 1        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED/| WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 02)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_DEACTIVATED|
 -------------------------------------------------------------------------------------------------
 2        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 03)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 3        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 07)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 Note: SE0 is the tested SE.

 Mode Switch transition table:
 -------------------------------------------------------------------
 Item No. | Transition Trigger           | Old Mode   | New Mode   |
 ===================================================================
 1        | WdgM Initialization          | WdgMMode_0 | WdgMMode_1 |
          | (execution step 02)          |            |            |
 -------------------------------------------------------------------
 n%2=0    | Mode Switch, second iteration| WdgMMode_1 | WdgMMode_3 |
          | (execution step 07)          |            |            |
 -------------------------------------------------------------------
 n%2=1    | Mode Switch, third iteration | WdgMMode_3 | WdgMMode_1 |
          | (execution step 07)          |            |            |
 -------------------------------------------------------------------
 Note: n&gt;=2.

 01: Initializes test case.
 02: Initializes WdgM module.
 03: Sanity check: Check preconditions
     - Checks WdgM Mode to be the configured initialization mode.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of tested SE to be WDGM_GLOBAL_STATUS_DEACTIVATED.
     - Change WdgM Mode Switch to the mode which has configured both Deadline and InternalLogical
       supervision and check that the request is processed.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of tested SE to be WDGM_GLOBAL_STATUS_OK.
 04: VP (WDGM.EB.ResetActiveFlags1)
     Check that the Deadline active flag is set inactive by the WdgM.
 05: VP (WDGM.EB.ResetActiveFlags3)
     Check that the active flag of the Internal Logical Supervision Graph is set inactive by the
     WdgM.
 Repeat the following steps for several times:
   06: Start a normal operation flow for the tested internal logical supervision.
   07: Change the mode to a new mode after the Deadline START_CP is reached.
   08: VP (WDGM.EB.ResetActiveFlags1)
       Check that the Deadline active flag is set inactive by the WdgM with each Mode Switch to
       the mode which has configured the tested Deadline supervision.
   09: VP (WDGM.EB.ActiveFlags4)
       Check that the active flag of the Internal Logical Supervision Graph remains active for each
       Supervised Entity which has an Internal Logical Supervision configured in the old WdgM Mode
       and has the same Internal Logical Supervision configured in the new WdgM Mode.
   10: Resume the normal operation flow for the tested internal logical supervision.
   11: Sanity check
       Check that no error is either detected nor reported to DEM/DET and that the WdgM normal
       execution flow is performed correctly by performing the following steps:
       - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
       - Check the Local status of the tested SE to be WDGM_GLOBAL_STATUS_OK.
       - Check the watchdog to be correctly triggered by the WdgM.
   12: VP (WDGM.EB.TIMEPM.WDGM020104_Conf)
       After call to CheckPointReached or to MainFunction:
       Check WdgMGetElapsedTimeCallout to be correctly called by WdgM.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020100_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020104_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ResetActiveFlags1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ResetActiveFlags3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ActiveFlags4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2060</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckInternalLogicalResetFlag_SupervisorEnabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE10/source/application/WdgM_ImpTest_07_TimE10.c</sourcefile>
      <sourceline>440</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests WdgM Mode Switch behavior for the case when the
 Supervisor is fully activated and internal logical supervision is activated for
 the tested mode, and a graph error is simulated for the internal logical which is propagated with
 each mode change.

 The testing method used is the "State based tests" as described in the 'Abstract
 Global/Local Supervision Status transition table used in the test execution'.

 
Test Object: None.
Test Precondition: 

 WdgM is initialized and is in WdgM_WdgMMode_1.
 The Global\Local status is OK.
 For more details regarding the WdgM configuration please see the preconditions from the
 TS_WDGM_TimE_CheckDeadlineInternalLogicalResetFlag_SupervisorEnabled_01 test case.

 
Test Execution: 

 Abstract Global/Local Supervision Status transition table used in the test execution:
 -------------------------------------------------------------------------------------------------
 Item No. | Transition Trigger   |Initial Global/Local status(SE0)| Final  Global/Local status   |
 =================================================================================================
 1        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED/| WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 02)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_DEACTIVATED|
 -------------------------------------------------------------------------------------------------
 2        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 03)  | WDGM_LOCAL_STATUS_DEACTIVATED  | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 3        |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /        | WDGM_GLOBAL_STATUS_OK /      |
          | (execution step 07)  | WDGM_LOCAL_STATUS_OK           | WDGM_LOCAL_STATUS_OK         |
 -------------------------------------------------------------------------------------------------
 Note: SE0 is the tested SE.

 Mode Switch transition table:
 -------------------------------------------------------------------
 Item No. | Transition Trigger           | Old Mode   | New Mode   |
 ===================================================================
 1        | WdgM Initialization          | WdgMMode_0 | WdgMMode_1 |
          | (execution step 02)          |            |            |
 -------------------------------------------------------------------
 n%2=0    | Mode Switch, second iteration| WdgMMode_1 | WdgMMode_3 |
          | (execution step 07)          |            |            |
 -------------------------------------------------------------------
 n%2=1    | Mode Switch, third iteration | WdgMMode_3 | WdgMMode_1 |
          | (execution step 07)          |            |            |
 -------------------------------------------------------------------
 Note n&gt;=2.

 01: Initializes test case.
 02: Initializes WdgM module.
 03: Sanity check: Check preconditions
     - Checks WdgM Mode to be the configured initialization mode.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of tested SE to be WDGM_GLOBAL_STATUS_DEACTIVATED.
     - Change WdgM Mode Switch to the mode which has configured the InternalLogical
       supervision and check that the request is processed.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of tested SE to be WDGM_GLOBAL_STATUS_OK.
 04: VP (WDGM.EB.ResetActiveFlags3)
     Check that the active flag of the Internal Logical Supervision Graph is set inactive by the
     WdgM.
 Repeat the following steps for several times:
   05: Start a normal operation flow for the tested internal logical supervision.
   06: Sanity check
       Simulate the error recovery behavior by inserting Middle1_CP omission failure for the cases
       when even algorithm iteration and check that the error is detected by the WdgM.
   07: Change the mode to a new mode after the InternalLogical Middle2_CP is reached.
   08: VP (WDGM.EB.ActiveFlags4)
       Check that the active flag of the Internal Logical Supervision Graph remains active for
       each Supervised Entity which has an Internal Logical Supervision configured in the old WdgM
       Mode and has the same InternalLogical Supervision configured in the new WdgM Mode.
   09: Sanity check
       Resume the InternalLogical operation flow for the tested internal logical supervision and
       check that the detected error before changing the mode is still detected.
   10: Sanity check
       Check that the simulated failure is registered by WdgM after the WdgM_MainFunction() call
       and more as described bellow:
       - Check the WdgM Global status to be as expected.
       - Check the Local status of the tested SE to be as expected.
       - Check the watchdog to be correctly triggered by the WdgM.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ResetActiveFlags3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ActiveFlags4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2061</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckExternalLogicalResetFlag_SupervisorEnabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE10/source/application/WdgM_ImpTest_07_TimE10.c</sourcefile>
      <sourceline>723</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests that the active flag of the External Logical Supervision Graph (of the new WdgM Mode) is
 always reset after a mode switch.

 The testing method used is the "State based tests" as described in the 'Abstract
 Global/Local Supervision Status transition table used in the test execution'.

 
Test Object: None.
Test Precondition: 

 WdgM is initialized and is in WdgM_WdgMMode_2.
 The Global\Local status is OK.
 For more details regarding the WdgM configuration please see the preconditions from the
 TS_WDGM_TimE_CheckDeadlineInternalLogicalResetFlag_SupervisorEnabled_01 test case.

 
Test Execution: 

 Abstract Global/Local Supervision Status transition table used in the test execution:
 --------------------------------------------------------------------------------------------------
 Item| Transition Trigger   |Initial Global/Local status       | Final  Global/Local status       |
 No. |                      |                                  | Final  Global/Local status       |
 ==================================================================================================
 1   |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_DEACTIVATED/  | WDGM_GLOBAL_STATUS_OK /          |
     | (execution step 03)  |WDGM_LOCAL_STATUS_DEACTIVATED(SEm)|WDGM_LOCAL_STATUS_DEACTIVATED(SEm)|
     |                      |WDGM_LOCAL_STATUS_DEACTIVATED(SEn)|WDGM_LOCAL_STATUS_DEACTIVATED(SEn)|
 -------------------------------------------------------------------------------------------------
 2   |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /          | WDGM_GLOBAL_STATUS_OK /          |
     | (execution step 03)  |WDGM_LOCAL_STATUS_DEACTIVATED(SEm)| WDGM_LOCAL_STATUS_OK(SEm)        |
     |                      |WDGM_LOCAL_STATUS_DEACTIVATED(SEn)| WDGM_LOCAL_STATUS_OK(SEn)        |
 -------------------------------------------------------------------------------------------------
 3   |WdgM_MainFunction call| WDGM_GLOBAL_STATUS_OK /          | WDGM_GLOBAL_STATUS_EXPIRED /     |
     | (execution step 09)  | WDGM_LOCAL_STATUS_OK(SEm)        | WDGM_LOCAL_STATUS_OK(SEm)        |
     |                      | WDGM_LOCAL_STATUS_OK(SEn)        | WDGM_LOCAL_STATUS_EXPIRED(SEn)   |
 -------------------------------------------------------------------------------------------------
 Note: SEm, with m=n-1, represents all previews Supervised Entities.
       SEn is the failing Supervised Entity.

 Mode Switch transition table:
 -------------------------------------------------------------------
 Item No. | Transition Trigger           | Old Mode   | New Mode   |
 ===================================================================
 1        | WdgM Initialization          | WdgMMode_0 | WdgMMode_2 |
          | (execution step 02)          |            |            |
 -------------------------------------------------------------------
 n%2=1    | Mode Switch, first iteration | WdgMMode_2 | WdgMMode_0 |
          | (execution step 06)          |            |            |
 -------------------------------------------------------------------
 n%2=0    | Mode Switch, second iteration| WdgMMode_0 | WdgMMode_2 |
          | (execution step 07)          |            |            |
 -------------------------------------------------------------------
 Note n&gt;=2.

 01: Initializes test case.
 02: Initializes WdgM module.
 03: Sanity check: Check preconditions
     - Checks WdgM Mode to be the configured initialization mode.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of tested SE to be WDGM_GLOBAL_STATUS_DEACTIVATED.
     - Change WdgM Mode Switch to the mode which has configured the InternalLogical
       supervision and check that the request is processed.
     - Check the WdgM Global status to be WDGM_GLOBAL_STATUS_OK.
     - Check the Local status of tested SE to be WDGM_GLOBAL_STATUS_OK.
 04: VP (WDGM.EB.ResetActiveFlags2)
     Check that the ExternalLogical active flag is set inactive by the WdgM.
 Repeat the following steps for several times:
   05: Start a normal operation flow for the tested external logical supervision.
   06: Change the mode to a new mode after the ExternalLogical Middle_CP is reached
           and back to the old mode where the external logical supervision is configured.
   07: VP (WDGM.EB.ResetActiveFlags2)
       Check that the active flag of the External Logical Supervision Graph is set inactive
       when the mode is switch to the mode which has configured the External Logical Supervision
       Graph.
   08: Sanity check
       Resume the ExternalLogical operation flow for the tested external logical supervision and
       check that the WdgM detects operation flow error due to the fact the WdgM mode was
       previously changed.
   09: Sanity check
       Check that the simulated failure is registered by WdgM after the WdgM_MainFunction() call
       and more as described bellow:
       - Check the WdgM Global status to be be as expected.
       - Check the Local status of all the tested SEs to be as expected.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.ResetActiveFlags2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2062</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckWdgMGetCoreIdCallout_SupervisorEnabled_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE10/source/application/WdgM_ImpTest_07_TimE10.c</sourcefile>
      <sourceline>1057</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

 Tests how many times the WdgM_Tst_GetCoreId_Callout function is called.

 
Test Object: None.
Test Precondition: 

 
Test Execution: 

  01: Initializes test case.
  02: Initializes WdgM module.
  03: Call main functions on both cores.
  04 VP: Check the number of calls of the WdgM_Tst_GetCoreId_Callout function.
  05: Set a mode that contains at least one external graph.
  06 VP: Check that set mode was correctly performed.
  07 VP: Check the number of calls of the WdgM_Tst_GetCoreId_Callout function.
  08: Call main functions on both cores.
  09 VP: Check the number of calls of the WdgM_Tst_GetCoreId_Callout function.
  10: Switch to the master core.
  11: Call WdgM_CheckpointReached() with an initial checkpoint of an external graph.
  12 VP: Check that E_OK is returned.
  13 VP: Check the number of calls of the WdgM_Tst_GetCoreId_Callout function.
  14: Call main functions on both cores.
  15 VP: Check the number of calls of the WdgM_Tst_GetCoreId_Callout function.
  16: Switch to the satellite core.
  17: Call WdgM_CheckpointReached() with the next checkpoint from the same external graph.
  18 VP: Check that E_OK is returned.
  19 VP: Check the number of calls of the WdgM_Tst_GetCoreId_Callout function.
  20: Call main functions on both cores.
  21 VP: Check the number of calls of the WdgM_Tst_GetCoreId_Callout function.
  22: Call WdgM_CheckpointReached() with the final checkpoint of the same external graph.
  24 VP: Check the number of calls of the WdgM_Tst_GetCoreId_Callout function.
  25: Set a mode that contains at least one internal graph.
  26 VP: Check that set mode was correctly performed.
  27 VP: Check the number of calls of the WdgM_Tst_GetCoreId_Callout function.
  28: Call main functions on both cores.
  29 VP: Check the number of calls of the WdgM_Tst_GetCoreId_Callout function.
  30: Switch to the master core.
  31: Call WdgM_CheckpointReached() with an initial checkpoint of an internal graph.
  32 VP: Check that E_OK is returned.
  33 VP: Check the number of calls of the WdgM_Tst_GetCoreId_Callout function.
  34: Call main functions on both cores.
  35 VP: Check the number of calls of the WdgM_Tst_GetCoreId_Callout function.
  36: Switch to the master core.
  37: Call WdgM_CheckpointReached() with the next checkpoint of the same internal graph.
  38 VP: Check that E_OK is returned.
  39 VP: Check the number of calls of the WdgM_Tst_GetCoreId_Callout function.
  40: Call main functions on both cores.
  41 VP: Check the number of calls of the WdgM_Tst_GetCoreId_Callout function.
  42: Switch to the master core.
  43: Call WdgM_CheckpointReached() with the final checkpoint of the same internal graph.
  44 VP: Check that E_OK is returned.
  45 VP: Check the number of calls of the WdgM_Tst_GetCoreId_Callout function.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020110_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2063</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_SatelliteAliveness_DetDem_01_MC</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE11/source/application/WdgM_ImpTest_07_SatelliteAliveness_multicore.c.m4</sourcefile>
      <sourceline>219</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

This test checks that the Watchdog Manager module detects the aliveness of the 
satellite core/cores main function and indicates this violation to the 
DET / DEM resp. calls the related Callout
APIs depending on the configuration.
Both satellites are not alive.

Note: Multicore configuration is used for this test.

This test and all sub-sequent tests are
executed with the following configuration permutations:

   Parameter / Permutation            |    p0   |    p1   |    p2   |    p3   |    p4   |    p5    |    p6    |
==============================================================================================================|
WdgMDevErrorDetect                    | true    | true    | true    | true    | true    | true     | true     |
WdgMSupervisionReportToDem            | DEM     | DET     | DISABLE | DEM     | DET     | DEM      | DET      |
WdgMSetModeReportToDem                | DEM     | DET     | DISABLE | DEM     | DET     | DEM      | DET      |
WdgMImproperCallerReportToDem         | DEM     | DET     | DISABLE | DEM     | DET     | DEM      | DET      |
WdgMSatelliteAlivenessReportToDem     | DEM     | DET     | DISABLE | DEM     | DET     | DEM      | DET      |
WdgMDefensiveBehavior                 | true    | true    | false   | true    | true    | true     | true     |
WdgMSupervisorCalloutsEnable          | false   | false   | false   | true    | true    | false    | false    |
WdgMDetCalloutEnable                  | false   | false   | false   | false   | true    | false    | false    |
WdgMImmediateReset                    | true    | false   | true    | false   | true    | true     | false    |
WdgMMixedCriticalityEnabled           | false   | false   | false   | true    | true    | false    | false    |
WdgMSatelliteAlivenessCallout         | true    | true    | false   | true    | true    | true     | true     |
WdgMSatelliteAlivenessCoreIdDisable   | true    | false   | false   | false   | true    | false    | false    |
WdgMSatelliteAlivenessPeriodCheck     | 2       | 2       | 2       | 2       | 2       | 1        | 1        |
------------------ The following parameters are constant -----------------------------------------------------|
WdgMVersionInfoApi                    | true    | true    | true    | true    | true    | true     | true     |
WdgMDemStoppedSupervisionReport       | true    | true    | true    | true    | true    | true     | true     |
WdgMOffModeEnabled                    | true    | true    | true    | true    | true    | true     | true     |
WdgMRteUsage                          | false   | false   | false   | false   | false   | false    | false    |
WdgMCallerIds                         | true    | true    | true    | true    | true    | true     | true     |
WdgMSleepMode                         | true    | true    | true    | true    | true    | true     | true     |
WdgMSupervisionDemDetErrId            |  -      | 30      |  -      |  -      | 30      |  -       | 30       |
WdgMSetModeDemDetErrId                |  -      | 31      |  -      |  -      | 31      |  -       | 31       |
WdgMImproperCallerDemDetErrId         |  -      | 32      |  -      |  -      | 32      |  -       | 32       |
WdgMSatelliteAlivenessDemDetErrId     |  -      | 33      |  -      |  -      | 33      |  -       | 33       |


Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: WdgM_MainFunction is called twice(for p0,p1,p2,p3,p4) and a single time for p5 and p6, first 
      call is for synchronizing the master core counter with satellite cores counter. The second call 
      is for detecting the aliveness of the satellite core main function.
  02: VP
      Dem called with following parameters for permutations: p0,p3,p5
        EventId     = EBTEST_WDGM_E_MF_SATELLITE_ERROR
        EventStatus = DEM_EVENT_STATUS_FAILED
      Det called with following parameters for permutations: p1,p6
        ApiId   = WDGM_TST_SID_MAIN_FUNCTION
        ErrorId = WDGM_EB_E_DEMTODET_SATELLITE_ALIVENESS_FAILURE
      Det callout called with following parameters for permutations: p4
        ApiId   = WDGM_TST_SID_MAIN_FUNCTION
        ErrorId = WDGM_EB_E_DEMTODET_SATELLITE_ALIVENESS_FAILURE
      No Det or Dem called for permutations: p2
      SatelliteAlivenessCallout is called with the CoreId 
      (when multiple satellites are failling, both CoreId's
      are provided)
      Check made just for the last failed satellite


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfSatelliteFailure.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020132_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>598</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020487</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>680</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>681</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020489</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>682</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>683</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020469</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>687</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable36</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1699</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable37</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1700</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020133_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2064</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SatelliteAliveness_DetDem_02_MC</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_07_TimE11/source/application/WdgM_ImpTest_07_SatelliteAliveness_multicore.c.m4</sourcefile>
      <sourceline>407</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

This test checks that the Watchdog Manager module detects the aliveness of the 
satellite core/cores main function and indicates this violation to the 
DET / DEM resp. calls the related Callout
APIs depending on the configuration.
Only one satellite is not alive.

Note: Multicore configuration is used for this test.

This test and all sub-sequent tests are
executed with the following configuration permutations:

   Parameter / Permutation            |    p0   |    p1   |    p2   |    p3   |    p4   |    p5    |    p6    |
==============================================================================================================|
WdgMDevErrorDetect                    | true    | true    | true    | true    | true    | true     | true     |
WdgMSupervisionReportToDem            | DEM     | DET     | DISABLE | DEM     | DET     | DEM      | DET      |
WdgMSetModeReportToDem                | DEM     | DET     | DISABLE | DEM     | DET     | DEM      | DET      |
WdgMImproperCallerReportToDem         | DEM     | DET     | DISABLE | DEM     | DET     | DEM      | DET      |
WdgMSatelliteAlivenessReportToDem     | DEM     | DET     | DISABLE | DEM     | DET     | DEM      | DET      |
WdgMDefensiveBehavior                 | true    | true    | false   | true    | true    | true     | true     |
WdgMSupervisorCalloutsEnable          | false   | false   | false   | true    | true    | false    | false    |
WdgMDetCalloutEnable                  | false   | false   | false   | false   | true    | false    | false    |
WdgMImmediateReset                    | true    | false   | true    | false   | true    | true     | false    |
WdgMMixedCriticalityEnabled           | false   | false   | false   | true    | true    | false    | false    |
WdgMSatelliteAlivenessCallout         | true    | true    | false   | true    | true    | true     | true     |
WdgMSatelliteAlivenessCoreIdDisable   | true    | false   | false   | false   | true    | false    | false    |
WdgMSatelliteAlivenessPeriodCheck     | 2       | 2       | 2       | 2       | 2       | 1        | 1        |
------------------ The following parameters are constant -----------------------------------------------------|
WdgMVersionInfoApi                    | true    | true    | true    | true    | true    | true     | true     |
WdgMDemStoppedSupervisionReport       | true    | true    | true    | true    | true    | true     | true     |
WdgMOffModeEnabled                    | true    | true    | true    | true    | true    | true     | true     |
WdgMRteUsage                          | false   | false   | false   | false   | false   | false    | false    |
WdgMCallerIds                         | true    | true    | true    | true    | true    | true     | true     |
WdgMSleepMode                         | true    | true    | true    | true    | true    | true     | true     |
WdgMSupervisionDemDetErrId            |  -      | 30      |  -      |  -      | 30      |  -       | 30       |
WdgMSetModeDemDetErrId                |  -      | 31      |  -      |  -      | 31      |  -       | 31       |
WdgMImproperCallerDemDetErrId         |  -      | 32      |  -      |  -      | 32      |  -       | 32       |
WdgMSatelliteAlivenessDemDetErrId     |  -      | 33      |  -      |  -      | 33      |  -       | 33       |


Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: WdgM_MainFunction is called twice(for p0,p1,p2,p3,p4) and a single time for p5 and p6, first 
      call is for synchronizing the master core counter with satellite cores counter. The second call 
      is for detecting the aliveness of the satellite core main function.
  02: VP
      Dem called with following parameters for permutations: p0,p3,p5
        EventId     = EBTEST_WDGM_E_MF_SATELLITE_ERROR
        EventStatus = DEM_EVENT_STATUS_FAILED
      Det called with following parameters for permutations: p1,p6
        ApiId   = WDGM_TST_SID_MAIN_FUNCTION
        ErrorId = WDGM_EB_E_DEMTODET_SATELLITE_ALIVENESS_FAILURE
      Det callout called with following parameters for permutations: p4
        ApiId   = WDGM_TST_SID_MAIN_FUNCTION
        ErrorId = WDGM_EB_E_DEMTODET_SATELLITE_ALIVENESS_FAILURE
      No Det or Dem called for permutations: p2
        SatelliteAlivenessCallout is called for one failed satellite
        CoreId = SATELLITE_CORE_1


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.MfSatelliteFailure.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020132_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>598</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020487</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>680</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>681</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020489</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>682</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>683</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020469</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>687</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable36</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1699</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable37</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1700</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020133_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2065</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_TimE_CheckTransition_35_36</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_08_TimE04/source/application/WdgM_ImpTest_08_TimE04.c</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

   Test WdgM_SetMode() with supervisor callouts enabled for global status WDGM_GLOBAL_STATUS_OK /
   WDGM_GLOBAL_STATUS_FAILED. SetModeRedirection callout is called by WdgM_MainFunction() and
   performs transition (35) (WDGM_GLOBAL_STATUS_OK) / transition (36) (WDGM_GLOBAL_STATUS_FAILED).

   Permutation table:
   Parameter / Permutation        |          p0           |            p1             |
   ====================================================================================
   WdgM Global status             | WDGM_GLOBAL_STATUS_OK | WDGM_GLOBAL_STATUS_FAILED |

 
Test Object: None.
Test Precondition: 

 As described into the test case description.

 
Test Execution: 

   01: Init test case.
   02: Init WdgM module.
   03: go to global state WDGM_GLOBAL_STATUS_OK (p0) / WDGM_GLOBAL_STATUS_FAILED (p1).
   04: Sanity Check:
       Global Supervision changed from WDGM_GLOBAL_STATUS_OK (p0) to WDGM_GLOBAL_STATUS_FAILED (p1)
   05: Sanity Check:
       Checks the InitStatus for the GetExpectedInitStateCallout to be set to
       WDGM_EB_INIT_STATUS_INIT.
   06: Set callout stubs for new WdgM mode.
   07: Call test candidate WdgM_SetMode() with new mode WdgMConf_WdgMMode_WdgMMode_1
   08: VP (WDGM.EB.TIMEPM.WDGM020402):
       SetModeRedirection callout is called once with the correct mode and caller ID
       and returns E_OK.
   09: Call test candidate WdgM_MainFunction().
   10: VP (WDGM.EB.TIMEPM.WDGM020419):
       GetExpectedWdgMMode Callout is called once with the correct parameters.
   11: Sanity Check:
       Global state is not changed.


 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020117_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020419</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2066</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_TimE_CheckTransition_29_15</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_09_TimE05/source/application/WdgM_ImpTest_09_TimE05.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

    Test WdgM_SetMode() with supervisor callouts disabled for global status WDGM_GLOBAL_STATUS_OK.
    The Mode Switch Request is done with the next main function call and transition (29) is
    executed.

 
Test Object: None.
Test Precondition: 

    The modes used in this testcase are configured in the following way:

    ---------------------------------------------------------------------
    | Mode | Supervised Entity SE0 | Supervised Entity SE1 | WgmIf Mode |
    =====================================================================
    |  0   | deactivated           | deactivated           | fast       |
    ---------------------------------------------------------------------
    |  1   | active                | active                | fast       |
    ---------------------------------------------------------------------

 
Test Execution: 

    01: Init test case.
    02: Init WdgM module.
    03: Call test candidate WdgM_MainFunction().
    04: VP (WDGM.EB.TIMEPM.WDGM020424):
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    05: VP (WdgM.ASR40.SWS_WdgM_00119):
        WdgIf_SetTriggerCondition is called with the correct parameters.
    06: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_OK.
    07: Call test candidate WdgM_GetMode().
    08: Sanity Check: WdgM_GetMode() returns E_OK, new mode is WdgMMode_0.
    09: Sanity Check: WdgM_GetLocalStatus() for SE0 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    10: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    --- transition (29) -&gt; (15) to mode WdgMMode_1 ---
    11: Call test candidate WdgM_SetMode() with new mode WdgMMode_1.
        (transition 29, internal state is WDGM_OK_MODE_PENDING).
    12: VP (WDGM.EB.TIMEPM.WDGM020425): WdgM_SetMode() returns E_OK.
    13: Call test candidate WdgM_MainFunction().
        (transition 15, internal state is WDGM_OK_MODE_NOT_PENDING).
    14: VP (WdgM.ASR40.SWS_WdgM_00119):
        WdgIf_SetTriggerCondition is called with the correct parameters.
    15: VP (WDGM.EB.TIMEPM.WDGM020424):
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    16: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_OK.
    17: Call test candidate WdgM_GetMode().
    18: VP (WDGM.EB.TIMEPM.WDGM020461):
        WdgM_GetMode() returns E_OK, new mode is WdgMMode_1.
    19: VP (WDGM.EB.TIMEPM.WDGM020421):
        WdgM_GetLocalStatus() for SE0 returns E_OK, local status WDGM_LOCAL_STATUS_OK.
    20: VP (WDGM.EB.TIMEPM.WDGM020421):
        WdgM_GetLocalStatus() for SE1 returns E_OK, local status WDGM_LOCAL_STATUS_OK.
    ---  transition (29) -&gt; (15) to mode WdgMMode_0 ---
    21: Call WdgM_CheckpointReached() for SE0 and SE1
    22: Call test candidate WdgM_SetMode() with new mode WdgMMode_0.
        (transition 29, internal state is WDGM_OK_MODE_PENDING).
    23: VP (WDGM.EB.TIMEPM.WDGM020425): WdgM_SetMode() returns E_OK.
    24: Call test candidate WdgM_MainFunction().
        (transition 15, internal state is WDGM_OK_MODE_NOT_PENDING).
    25: VP (WdgM.SWS_WdgM_00119):
        WdgIf_SetTriggerCondition is called with the correct parameters.
    26: VP (WDGM.EB.TIMEPM.WDGM020424):
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    27: VP (WDGM.EB.TIMEPM.WDGM020461, WDGM.EB.TIMEPM.WDGM020417):
        Check global status to be WDGM_GLOBAL_STATUS_OK.
    28: Call test candidate WdgM_GetMode().
    29: VP (WDGM.EB.TIMEPM.WDGM020461, WDGM.EB.TIMEPM.WDGM020417):
        WdgM_GetMode() returns E_OK, new mode is WdgMMode_1.
    30: VP (WDGM.EB.TIMEPM.WDGM020422):
        WdgM_GetLocalStatus() for SE0 returns E_OK, local status WDGM_LOCAL_STATUS_DEACTIVATED.
    31: VP (WDGM.EB.TIMEPM.WDGM020422):
        WdgM_GetLocalStatus() for SE1 returns E_OK, local status WDGM_LOCAL_STATUS_DEACTIVATED.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020461</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020417</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020422</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>691</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020424</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020425</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2067</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckTransition_30_32</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_09_TimE05/source/application/WdgM_ImpTest_09_TimE05.c</sourcefile>
      <sourceline>334</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

   Test WdgM_SetMode() with supervisor callouts disabled for global status WDGM_GLOBAL_STATUS_FAILED.
   The Mode Switch Request is done with the next main function call and transition (30) is
   executed.

 
Test Object: None.
Test Precondition: 

    The modes used in this testcase are configured in the following way:

    ---------------------------------------------------------------------
    | Mode | Supervised Entity SE0 | Supervised Entity SE1 | WgmIf Mode |
    =====================================================================
    |  0   | deactivated           | deactivated           | fast       |
    ---------------------------------------------------------------------
    |  3   | active                | deactivated           | -          |
    ---------------------------------------------------------------------
    |  7   | active                | deactivated           | slow       |
    ---------------------------------------------------------------------

 
Test Execution: 

    01: Init test case.
    02: Init WdgM module.
    03: Call test candidate WdgM_MainFunction().
    04: VP (WDGM.EB.TIMEPM.WDGM020424):
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    05: VP (WdgM.SWS_WdgM_00119):
        WdgIf_SetTriggerCondition is called with the correct parameters.
    06: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_OK.
    07: Call test candidate WdgM_GetMode().
    08: Sanity Check: WdgM_GetMode() returns E_OK, new mode is WdgMMode_0.
    09: Sanity Check: WdgM_GetLocalStatus() for SE0 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    10: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    --- transition (29) to mode WdgMMode_3 ---
    11: Call test candidate WdgM_SetMode() with new mode WdgMMode_3.
    12: VP (WDGM.EB.TIMEPM.WDGM020425): WdgM_SetMode() returns E_OK.
    13: Call test candidate WdgM_MainFunction().
    14: Sanity Check: WdgIf_SetTriggerCondition is called with the correct parameters.
    15: Sanity Check: WdgIf_SetMode() is not called (no trigger defined for WdgMMode_3)
    16: VP (WDGM.EB.TIMEPM.WDGM020461): Check global status to be WDGM_GLOBAL_STATUS_OK.
    17: Call test candidate WdgM_GetMode().
    18: VP (WDGM.EB.TIMEPM.WDGM020461):
        WdgM_GetMode() returns E_OK, new mode is WdgMMode_3.
    19: VP (WDGM.EB.TIMEPM.WDGM020421):
        WdgM_GetLocalStatus() for SE0 returns E_OK, local status WDGM_LOCAL_STATUS_OK.
    20: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    ---  go to global status WDGM_GLOBAL_STATUS_FAILED ---
    21: WdgM_CheckpointReached() is not called for SE0
    22: Call test candidate WdgM_MainFunction().
    23: Sanity Check: WdgIf_SetTriggerCondition and WdgIf_SetMode() is not called.
    24: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_FAILED.
    25: Sanity Check: WdgM_GetLocalStatus() for SE0 returns E_OK,
        local status WDGM_LOCAL_STATUS_FAILED.
    26: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    ---  transition (30) -&gt; (32) to mode WdgMMode_7 ---
    27: WdgM_CheckpointReached() is not called for SE0
    28: Call test candidate WdgM_SetMode() with new mode WdgMMode_7.
        (transition 30, internal state is WDGM_FAILED_MODE_PENDING).
    29: VP (WDGM.EB.TIMEPM.WDGM020425): WdgM_SetMode() returns E_OK.
    30: Call test candidate WdgM_MainFunction().
        (transition 32, internal state is WDGM_FAILED_MODE_NOT_PENDING).
    31: VP (WDGM.EB.TIMEPM.WDGM020424):
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    32: VP (WDGM.EB.TIMEPM.WDGM020462, WDGM.EB.TIMEPM.WDGM020460):
        Check global status to be WDGM_GLOBAL_STATUS_FAILED.
    33: Call test candidate WdgM_GetMode().
    34: VP (WDGM.EB.TIMEPM.WDGM020462, WDGM.EB.TIMEPM.WDGM020460):
        WdgM_GetMode() returns E_OK, new mode is WdgMMode_7.
    35: Sanity Check: WdgM_GetLocalStatus() for SE0 returns E_OK,
        local status WDGM_LOCAL_STATUS_FAILED.
    36: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020461</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020462</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>641</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020460</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020424</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020425</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2068</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckTransition_30_31</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_09_TimE05/source/application/WdgM_ImpTest_09_TimE05.c</sourcefile>
      <sourceline>630</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

   Test WdgM_SetMode() with supervisor callouts disabled for global status
   WDGM_GLOBAL_STATUS_FAILED.
   The Mode Switch Request is done with the next main function call with the failed SE is
   changed to WDGM_LOCAL_STATUS_OK, transition (31) is executed and global status is
   changed to WDGM_GLOBAL_STATUS_OK.

 
Test Object: None.
Test Precondition: 

    The modes used in this testcase are configured in the following way:

    ---------------------------------------------------------------------
    | Mode | Supervised Entity SE0 | Supervised Entity SE1 | WgmIf Mode |
    =====================================================================
    |  0   | deactivated           | deactivated           | fast       |
    ---------------------------------------------------------------------
    |  3   | active                | deactivated           | -          |
    ---------------------------------------------------------------------

 
Test Execution: 

    01: Init test case.
    02: Init WdgM module.
    03: Call test candidate WdgM_MainFunction().
    04: VP (WDGM.EB.TIMEPM.WDGM020424):
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    05: VP (WdgM.SWS_WdgM_00119):
        WdgIf_SetTriggerCondition is called with the correct parameters.
    06: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_OK.
    07: Call test candidate WdgM_GetMode().
    08: Sanity Check: WdgM_GetMode() returns E_OK, new mode is WdgMMode_0.
    09: Sanity Check: WdgM_GetLocalStatus() for SE0 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    10: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    --- transition (29) to mode WdgMMode_3 ---
    11: Call test candidate WdgM_SetMode() with new mode WdgMMode_3.
    12: VP (WDGM.EB.TIMEPM.WDGM020425): WdgM_SetMode() returns E_OK.
    13: Call test candidate WdgM_MainFunction().
    14: Sanity Check: WdgIf_SetTriggerCondition is called with the correct parameters.
    15: Sanity Check: WdgIf_SetMode() is not called (no trigger defined for WdgMMode_3)
    16: VP (WDGM.EB.TIMEPM.WDGM020461): Check global status to be WDGM_GLOBAL_STATUS_OK.
    17: Call test candidate WdgM_GetMode().
    18: VP (WDGM.EB.TIMEPM.WDGM020461):
        WdgM_GetMode() returns E_OK, new mode is WdgMMode_3.
    19: VP (WDGM.EB.TIMEPM.WDGM020421):
        WdgM_GetLocalStatus() for SE0 returns E_OK, local status WDGM_LOCAL_STATUS_OK.
    20: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    ---  go to global status WDGM_GLOBAL_STATUS_FAILED ---
    21: WdgM_CheckpointReached() is not called for SE0
    22: Call test candidate WdgM_MainFunction().
    23: Sanity Check: WdgIf_SetTriggerCondition and WdgIf_SetMode() is not called.
    24: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_FAILED.
    25: Sanity Check: WdgM_GetLocalStatus() for SE0 returns E_OK,
        local status WDGM_LOCAL_STATUS_FAILED.
    26: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    ---  set local status for SE0 to OK, transition (30) -&gt; (31) to mode WdgMMode_0 ---
    27: Call WdgM_CheckpointReached() for SE0 (three times)
    28: Call test candidate WdgM_SetMode() with new mode WdgMMode_0
        (transition 30, internal state is WDGM_FAILED_MODE_PENDING).
    29: VP (WDGM.EB.TIMEPM.WDGM020425): WdgM_SetMode() returns E_OK.
    30: Call test candidate WdgM_MainFunction()
        (transition 31, internal state is WDGM_OK_MODE_NOT_PENDING).
    31: VP (WDGM.EB.TIMEPM.WDGM020424):
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    32: VP (WDGM.EB.TIMEPM.WDGM020462, WDGM.EB.TIMEPM.WDGM020463):
        Check global status to be WDGM_GLOBAL_STATUS_OK.
    33: Call test candidate WdgM_GetMode().
    34: VP (WDGM.EB.TIMEPM.WDGM020462, WDGM.EB.TIMEPM.WDGM020463):
        WdgM_GetMode() returns E_OK, new mode is WdgMMode_0.
    35: VP (WDGM.EB.TIMEPM.WDGM020422):
        WdgM_GetLocalStatus() for SE0 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    36: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020461</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020463</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>642</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020423</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020424</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020425</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2069</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckTransition_23</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_09_TimE05/source/application/WdgM_ImpTest_09_TimE05.c</sourcefile>
      <sourceline>936</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

    Test WdgM_SetMode() with supervisor callouts disabled for global state WDGM_DEINIT_PENDING.
    WdgM_SetMode() returns E_NOT_OK and error code WDGM_E_NO_INIT is reported to DET.

 
Test Object: None.
Test Precondition: 

    WdgMDevErrorDetect is enabled.
    WdgMGetExpectedWdgMModeCallout is disabled.

 
Test Execution: 

    01: Execute steps 02 - 24 four times with different global status:
    02: Init test case.
    03: Init WdgM module.
    04: Call test candidate WdgM_MainFunction().
    05: Sanity Check:
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    06: Sanity Check:
        WdgIf_SetTriggerCondition is called with the correct parameters.
    07: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_OK.
    08: Call test candidate WdgM_GetMode().
    09: Sanity Check: WdgM_GetMode() returns E_OK, new mode is WdgMMode_0.
    10: Call test candidate WdgM_SetMode() with new mode WdgMMode_1.
    11: Sanity Check: WdgM_SetMode() returns E_OK.
    12: Call test candidate WdgM_MainFunction().
    13: Sanity Check: WdgIf_SetTriggerCondition is called with the correct parameters.
    14: Sanity Check: WdgIf_SetMode() is called with the correct watchdog mode parameter.
    15: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_OK.
    16: Call test candidate WdgM_GetMode().
    17: Sanity Check: WdgM_GetMode() returns E_OK, new mode is WdgMMode_1.
    18: Go to desired global status.
    19: Sanity Check: Check global status against expected status.
    20: Clear the trace buffer.
    21: Send De-Initialisation request.
    22: Call test candidate WdgM_SetMode() with new mode WdgMMode_0.
    23: VP (WDGM.EB.TIMEPM.WDGM020459):
        WdgM_SetMode() returns E_NOT_OK.
    24: VP (WDGM.EB.TIMEPM.WDGM020459):
        WDGM_E_NO_INIT is reported to DET .

 
Test Input: 
    No. of WdgM_MainFunction() calls:
        {0U, 1U, 2U, 4U}
    Expected global status:
        {WDGM_GLOBAL_STATUS_OK, WDGM_GLOBAL_STATUS_FAILED,
        WDGM_GLOBAL_STATUS_EXPIRED, WDGM_GLOBAL_STATUS_STOPPED}
 
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020459</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2070</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_TimE_CheckTransition_29_15_MC</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_09_TimE05_Multicore/source/application/WdgM_ImpTest_09_TimE05_Multicore.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

    Test WdgM_SetMode() with supervisor callouts disabled for global status WDGM_GLOBAL_STATUS_OK.
    The Mode Switch Request is done with the next main function call and transition (29) is
    executed.

 
Test Object: None.
Test Precondition: 

    The modes used in this testcase are configured in the following way:

    ---------------------------------------------------------------------
    | Mode | Supervised Entity SE0 | Supervised Entity SE1 | WgmIf Mode |
    =====================================================================
    |  0   | deactivated           | deactivated           | fast       |
    ---------------------------------------------------------------------
    |  1   | active                | active                | fast       |
    ---------------------------------------------------------------------

 
Test Execution: 

    01: Init test case.
    02: Init WdgM module.
    03: Call test candidate WdgM_MainFunction().
    04: VP (WDGM.EB.TIMEPM.WDGM020424):
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    05: VP (WdgM.ASR40.SWS_WdgM_00119):
        WdgIf_SetTriggerCondition is called with the correct parameters.
    06: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_OK.
    07: Call test candidate WdgM_GetMode().
    08: Sanity Check: WdgM_GetMode() returns E_OK, new mode is WdgMMode_0.
    09: Sanity Check: WdgM_GetLocalStatus() for SE0 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    10: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    --- transition (29) -&gt; (15) to mode WdgMMode_1 ---
    11: Call test candidate WdgM_SetMode() with new mode WdgMMode_1.
        (transition 29, internal state is WDGM_OK_MODE_PENDING).
    12: VP (WDGM.EB.TIMEPM.WDGM020425): WdgM_SetMode() returns E_OK.
    13: Call test candidate WdgM_MainFunction().
        (transition 15, internal state is WDGM_OK_MODE_NOT_PENDING).
    14: VP (WdgM.ASR40.SWS_WdgM_00119):
        WdgIf_SetTriggerCondition is called with the correct parameters.
    15: VP (WDGM.EB.TIMEPM.WDGM020424):
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    16: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_OK.
    17: Call test candidate WdgM_GetMode().
    18: VP (WDGM.EB.TIMEPM.WDGM020461):
        WdgM_GetMode() returns E_OK, new mode is WdgMMode_1.
    19: VP (WDGM.EB.TIMEPM.WDGM020421):
        WdgM_GetLocalStatus() for SE0 returns E_OK, local status WDGM_LOCAL_STATUS_OK.
    20: VP (WDGM.EB.TIMEPM.WDGM020421):
        WdgM_GetLocalStatus() for SE1 returns E_OK, local status WDGM_LOCAL_STATUS_OK.
    ---  transition (29) -&gt; (15) to mode WdgMMode_0 ---
    21: Call WdgM_CheckpointReached() for SE0 and SE1
    22: Call test candidate WdgM_SetMode() with new mode WdgMMode_0.
        (transition 29, internal state is WDGM_OK_MODE_PENDING).
    23: VP (WDGM.EB.TIMEPM.WDGM020425): WdgM_SetMode() returns E_OK.
    24: Call test candidate WdgM_MainFunction().
        (transition 15, internal state is WDGM_OK_MODE_NOT_PENDING).
    25: VP (WdgM.SWS_WdgM_00119):
        WdgIf_SetTriggerCondition is called with the correct parameters.
    26: VP (WDGM.EB.TIMEPM.WDGM020424):
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    27: VP (WDGM.EB.TIMEPM.WDGM020461, WDGM.EB.TIMEPM.WDGM020417):
        Check global status to be WDGM_GLOBAL_STATUS_OK.
    28: Call test candidate WdgM_GetMode().
    29: VP (WDGM.EB.TIMEPM.WDGM020461, WDGM.EB.TIMEPM.WDGM020417):
        WdgM_GetMode() returns E_OK, new mode is WdgMMode_1.
    30: VP (WDGM.EB.TIMEPM.WDGM020422):
        WdgM_GetLocalStatus() for SE0 returns E_OK, local status WDGM_LOCAL_STATUS_DEACTIVATED.
    31: VP (WDGM.EB.TIMEPM.WDGM020422):
        WdgM_GetLocalStatus() for SE1 returns E_OK, local status WDGM_LOCAL_STATUS_DEACTIVATED.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020461</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020417</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020422</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>691</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020424</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020425</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2071</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckTransition_30_32_MC</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_09_TimE05_Multicore/source/application/WdgM_ImpTest_09_TimE05_Multicore.c</sourcefile>
      <sourceline>334</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

   Test WdgM_SetMode() with supervisor callouts disabled for global status WDGM_GLOBAL_STATUS_FAILED.
   The Mode Switch Request is done with the next main function call and transition (30) is
   executed.

 
Test Object: None.
Test Precondition: 

    The modes used in this testcase are configured in the following way:

    ---------------------------------------------------------------------
    | Mode | Supervised Entity SE0 | Supervised Entity SE1 | WgmIf Mode |
    =====================================================================
    |  0   | deactivated           | deactivated           | fast       |
    ---------------------------------------------------------------------
    |  3   | active                | deactivated           | -          |
    ---------------------------------------------------------------------
    |  7   | active                | deactivated           | slow       |
    ---------------------------------------------------------------------

 
Test Execution: 

    01: Init test case.
    02: Init WdgM module.
    03: Call test candidate WdgM_MainFunction().
    04: VP (WDGM.EB.TIMEPM.WDGM020424):
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    05: VP (WdgM.SWS_WdgM_00119):
        WdgIf_SetTriggerCondition is called with the correct parameters.
    06: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_OK.
    07: Call test candidate WdgM_GetMode().
    08: Sanity Check: WdgM_GetMode() returns E_OK, new mode is WdgMMode_0.
    09: Sanity Check: WdgM_GetLocalStatus() for SE0 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    10: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    --- transition (29) to mode WdgMMode_3 ---
    11: Call test candidate WdgM_SetMode() with new mode WdgMMode_3.
    12: VP (WDGM.EB.TIMEPM.WDGM020425): WdgM_SetMode() returns E_OK.
    13: Call test candidate WdgM_MainFunction().
    14: Sanity Check: WdgIf_SetTriggerCondition is called with the correct parameters.
    15: Sanity Check: WdgIf_SetMode() is not called (no trigger defined for WdgMMode_3)
    16: VP (WDGM.EB.TIMEPM.WDGM020461): Check global status to be WDGM_GLOBAL_STATUS_OK.
    17: Call test candidate WdgM_GetMode().
    18: VP (WDGM.EB.TIMEPM.WDGM020461):
        WdgM_GetMode() returns E_OK, new mode is WdgMMode_3.
    19: VP (WDGM.EB.TIMEPM.WDGM020421):
        WdgM_GetLocalStatus() for SE0 returns E_OK, local status WDGM_LOCAL_STATUS_OK.
    20: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    ---  go to global status WDGM_GLOBAL_STATUS_FAILED ---
    21: WdgM_CheckpointReached() is not called for SE0
    22: Call test candidate WdgM_MainFunction().
    23: Sanity Check: WdgIf_SetTriggerCondition and WdgIf_SetMode() is not called.
    24: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_FAILED.
    25: Sanity Check: WdgM_GetLocalStatus() for SE0 returns E_OK,
        local status WDGM_LOCAL_STATUS_FAILED.
    26: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    ---  transition (30) -&gt; (32) to mode WdgMMode_7 ---
    27: WdgM_CheckpointReached() is not called for SE0
    28: Call test candidate WdgM_SetMode() with new mode WdgMMode_7.
        (transition 30, internal state is WDGM_FAILED_MODE_PENDING).
    29: VP (WDGM.EB.TIMEPM.WDGM020425): WdgM_SetMode() returns E_OK.
    30: Call test candidate WdgM_MainFunction().
        (transition 32, internal state is WDGM_FAILED_MODE_NOT_PENDING).
    31: VP (WDGM.EB.TIMEPM.WDGM020424):
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    32: VP (WDGM.EB.TIMEPM.WDGM020462, WDGM.EB.TIMEPM.WDGM020460):
        Check global status to be WDGM_GLOBAL_STATUS_FAILED.
    33: Call test candidate WdgM_GetMode().
    34: VP (WDGM.EB.TIMEPM.WDGM020462, WDGM.EB.TIMEPM.WDGM020460):
        WdgM_GetMode() returns E_OK, new mode is WdgMMode_7.
    35: Sanity Check: WdgM_GetLocalStatus() for SE0 returns E_OK,
        local status WDGM_LOCAL_STATUS_FAILED.
    36: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020461</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020462</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>641</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020460</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020424</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020425</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2072</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckTransition_30_31_MC</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_09_TimE05_Multicore/source/application/WdgM_ImpTest_09_TimE05_Multicore.c</sourcefile>
      <sourceline>630</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

   Test WdgM_SetMode() with supervisor callouts disabled for global status
   WDGM_GLOBAL_STATUS_FAILED.
   The Mode Switch Request is done with the next main function call with the failed SE is
   changed to WDGM_LOCAL_STATUS_OK, transition (31) is executed and global status is
   changed to WDGM_GLOBAL_STATUS_OK.

 
Test Object: None.
Test Precondition: 

    The modes used in this testcase are configured in the following way:

    ---------------------------------------------------------------------
    | Mode | Supervised Entity SE0 | Supervised Entity SE1 | WgmIf Mode |
    =====================================================================
    |  0   | deactivated           | deactivated           | fast       |
    ---------------------------------------------------------------------
    |  3   | active                | deactivated           | -          |
    ---------------------------------------------------------------------

 
Test Execution: 

    01: Init test case.
    02: Init WdgM module.
    03: Call test candidate WdgM_MainFunction().
    04: VP (WDGM.EB.TIMEPM.WDGM020424):
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    05: VP (WdgM.SWS_WdgM_00119):
        WdgIf_SetTriggerCondition is called with the correct parameters.
    06: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_OK.
    07: Call test candidate WdgM_GetMode().
    08: Sanity Check: WdgM_GetMode() returns E_OK, new mode is WdgMMode_0.
    09: Sanity Check: WdgM_GetLocalStatus() for SE0 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    10: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    --- transition (29) to mode WdgMMode_3 ---
    11: Call test candidate WdgM_SetMode() with new mode WdgMMode_3.
    12: VP (WDGM.EB.TIMEPM.WDGM020425): WdgM_SetMode() returns E_OK.
    13: Call test candidate WdgM_MainFunction().
    14: Sanity Check: WdgIf_SetTriggerCondition is called with the correct parameters.
    15: Sanity Check: WdgIf_SetMode() is not called (no trigger defined for WdgMMode_3)
    16: VP (WDGM.EB.TIMEPM.WDGM020461): Check global status to be WDGM_GLOBAL_STATUS_OK.
    17: Call test candidate WdgM_GetMode().
    18: VP (WDGM.EB.TIMEPM.WDGM020461):
        WdgM_GetMode() returns E_OK, new mode is WdgMMode_3.
    19: VP (WDGM.EB.TIMEPM.WDGM020421):
        WdgM_GetLocalStatus() for SE0 returns E_OK, local status WDGM_LOCAL_STATUS_OK.
    20: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    ---  go to global status WDGM_GLOBAL_STATUS_FAILED ---
    21: WdgM_CheckpointReached() is not called for SE0
    22: Call test candidate WdgM_MainFunction().
    23: Sanity Check: WdgIf_SetTriggerCondition and WdgIf_SetMode() is not called.
    24: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_FAILED.
    25: Sanity Check: WdgM_GetLocalStatus() for SE0 returns E_OK,
        local status WDGM_LOCAL_STATUS_FAILED.
    26: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    ---  set local status for SE0 to OK, transition (30) -&gt; (31) to mode WdgMMode_0 ---
    27: Call WdgM_CheckpointReached() for SE0 (three times)
    28: Call test candidate WdgM_SetMode() with new mode WdgMMode_0
        (transition 30, internal state is WDGM_FAILED_MODE_PENDING).
    29: VP (WDGM.EB.TIMEPM.WDGM020425): WdgM_SetMode() returns E_OK.
    30: Call test candidate WdgM_MainFunction()
        (transition 31, internal state is WDGM_OK_MODE_NOT_PENDING).
    31: VP (WDGM.EB.TIMEPM.WDGM020424):
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    32: VP (WDGM.EB.TIMEPM.WDGM020462, WDGM.EB.TIMEPM.WDGM020463):
        Check global status to be WDGM_GLOBAL_STATUS_OK.
    33: Call test candidate WdgM_GetMode().
    34: VP (WDGM.EB.TIMEPM.WDGM020462, WDGM.EB.TIMEPM.WDGM020463):
        WdgM_GetMode() returns E_OK, new mode is WdgMMode_0.
    35: VP (WDGM.EB.TIMEPM.WDGM020422):
        WdgM_GetLocalStatus() for SE0 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.
    36: Sanity Check: WdgM_GetLocalStatus() for SE1 returns E_OK,
        local status WDGM_LOCAL_STATUS_DEACTIVATED.

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020103_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020461</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020463</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>642</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020421</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020423</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020424</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020425</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2073</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_CheckTransition_23_MC</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_09_TimE05_Multicore/source/application/WdgM_ImpTest_09_TimE05_Multicore.c</sourcefile>
      <sourceline>936</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

    Test WdgM_SetMode() with supervisor callouts disabled for global state WDGM_DEINIT_PENDING.
    WdgM_SetMode() returns E_NOT_OK and error code WDGM_E_NO_INIT is reported to DET.

 
Test Object: None.
Test Precondition: 

    WdgMDevErrorDetect is enabled.
    WdgMGetExpectedWdgMModeCallout is disabled.

 
Test Execution: 

    01: Execute steps 02 - 24 four times with different global status:
    02: Init test case.
    03: Init WdgM module.
    04: Call test candidate WdgM_MainFunction().
    05: Sanity Check:
        WdgIf_SetMode() is called with the correct watchdog mode parameter.
    06: Sanity Check:
        WdgIf_SetTriggerCondition is called with the correct parameters.
    07: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_OK.
    08: Call test candidate WdgM_GetMode().
    09: Sanity Check: WdgM_GetMode() returns E_OK, new mode is WdgMMode_0.
    10: Call test candidate WdgM_SetMode() with new mode WdgMMode_1.
    11: Sanity Check: WdgM_SetMode() returns E_OK.
    12: Call test candidate WdgM_MainFunction().
    13: Sanity Check: WdgIf_SetTriggerCondition is called with the correct parameters.
    14: Sanity Check: WdgIf_SetMode() is called with the correct watchdog mode parameter.
    15: Sanity Check: Check global status to be WDGM_GLOBAL_STATUS_OK.
    16: Call test candidate WdgM_GetMode().
    17: Sanity Check: WdgM_GetMode() returns E_OK, new mode is WdgMMode_1.
    18: Go to desired global status.
    19: Sanity Check: Check global status against expected status.
    20: Clear the trace buffer.
    21: Send De-Initialisation request.
    22: Call test candidate WdgM_SetMode() with new mode WdgMMode_0.
    23: VP (WDGM.EB.TIMEPM.WDGM020459):
        WdgM_SetMode() returns E_NOT_OK.
    24: VP (WDGM.EB.TIMEPM.WDGM020459):
        WDGM_E_NO_INIT is reported to DET .

 
Test Input: 
    No. of WdgM_MainFunction() calls:
        {0U, 1U, 2U, 4U}
    Expected global status:
        {WDGM_GLOBAL_STATUS_OK, WDGM_GLOBAL_STATUS_FAILED,
        WDGM_GLOBAL_STATUS_EXPIRED, WDGM_GLOBAL_STATUS_STOPPED}
 
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020459</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2074</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_GlobalLocalStatus_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_10_Multicore/source/application/WdgM_ImpTest_10_Multicore.c</sourcefile>
      <sourceline>268</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test will check to see if multicore is enabled, the WdgM master
  instance shall compute the Global Supervision Status and the Local Supervision
  Status for all the Supervised Entities configured on that core.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Initialise WdgM
  02: Set to new mode WdgMConf_WdgMMode_WdgMMode_1
  03: Call the main function on all cores
  04: Check that local status is WDGM_LOCAL_STATUS_OK on all cores
  05: Check global status is WDGM_GLOBAL_STATUS_OK
  06: Call the main function on the Satellite core only
  07: Check that local status is WDGM_LOCAL_STATUS_OK on Master core and
      WDGM_LOCAL_STATUS_FAILED on Satellite core
  08: Check global status is WDGM_GLOBAL_STATUS_OK since no main function called on Master core
  09: Call main function on Master core only
  10: Check that local status is WDGM_LOCAL_STATUS_FAILED on all cores
  11: Check global status is WDGM_GLOBAL_STATUS_FAILED
  12: Call WdgM_CheckpointReached() for the Master so we enter WDGM_LOCAL_STATUS_OK
  13: Call main function on Master core only
  14: Check that the local status for Master core is WDGM_LOCAL_STATUS_OK
      and for Satellite core is WDGM_LOCAL_STATUS_FAILED
  15: Check global status is WDGM_GLOBAL_STATUS_FAILED
  16: Call WdgM_CheckpointReached() for the Master so we stay in WDGM_LOCAL_STATUS_OK
  17: Call main function on Satellite core only
  18: Check that the local status for Master core is WDGM_LOCAL_STATUS_OK
      and for Satellite core is WDGM_LOCAL_STATUS_EXPIRED
  19: Call main function Master core only and check that it remained in WDGM_LOCAL_STATUS_OK
  20: Check global status is WDGM_GLOBAL_STATUS_EXPIRED
  21: Check that WdgMSupervisedEntity_1 expired for
   p0: GetElapsedTimeCallout activated
   p1: GetElapsedTimeCallout deactivated


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreGlobalStatus</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreGlobalStatus2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreLocalStatus1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreLocalStatus2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020120_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable19</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1682</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable26</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1689</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.GetFirstExpired2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2075</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SEId_Wrong_Core_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_10_Multicore/source/application/WdgM_ImpTest_10_Multicore.c</sourcefile>
      <sourceline>477</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test will check to see if when multicore is enabled a DET error is
  reported when CheckpointReached is called from a core with a SEId which
  is not mapped to that core.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Initialise WdgM
  02: Set to new mode WdgMConf_WdgMMode_WdgMMode_1
  03: Call WdgM_CheckpointReached() for the Master with the SE not belonging to that core
  04: Check to see if DET is reported with ApiId = WDGM_SID_CHECKPOINT_REACHED,
      ErrorId = WDGM_E_PARAM_WRONG_CORE_ID and counter is increased by one


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020120_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2076</internalId></specobject>
    <specobject>
      <id>TS_WDGM_NotAllSatellitesInitialised_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_10_Multicore/source/application/WdgM_ImpTest_10_Multicore.c</sourcefile>
      <sourceline>540</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test will check to see if multicore is enabled the master instance
  shall report a DET if any of the satellite instances failed to initialise
  in the time number of WdgM_MainFunction equal to WdgMMasterWaitSlaveModeSwitch.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: De-initialise WdgM
  02: Initialise WdgM on MASTER_CORE
  03: Call the main function on the Master core three times, so that the
      configured parameter WdgMMasterWaitSlaveModeSwitch
      ( which is configured to 3 ) will expire, we only need three calls
      from the time the master changed to the new mode.
  04: DET reported reported since no satellite cores are initialised
  05: Initialise WdgM on SATELLITE_CORE_1 and call main function on
      MASTER_CORE three times, so that the configured parameter
      WdgMMasterWaitSlaveModeSwitch ( which is configured to 3 )
      will expire
  06: Check to see and extra DET is reported due to not initialising
      all satellite cores
  07: Initialise WdgM on SATELLITE_CORE_0 and call main function on
      MASTER_CORE three times, so that the configured parameter
      WdgMMasterWaitSlaveModeSwitch ( which is configured to 3 )
      will expire and no new DET is reported


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreInit.3</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2077</internalId></specobject>
    <specobject>
      <id>TS_WDGM_GlobalInitializationStatus_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_10_Multicore/source/application/WdgM_ImpTest_10_Multicore.c</sourcefile>
      <sourceline>649</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test will check to see if multicore is enabled the WdgM master instance
  has access to the initialisation status from all the other core instances
  and if a successful de-init was done the satellite instance of the WdgM shall
  announce the Master instance.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: De-initialise WdgM
  02: Initialise the Master core only
  03: Check that only MASTER_CORE is active
  04: Check that only MASTER_CORE and SATELLITE_CORE_1 are active
  05: Check that all cores are active
  06: De-initialise WdgM on MASTER_CORE only
  07: Check that only SATELLITE_CORE_0 and SATELLITE_CORE_1 are active
  08: Check that only SATELLITE_CORE_0 is active
  09: Check all cores are de-initialised
  10: Check that only MASTER_CORE and SATELLITE_CORE_0 are active
  11: Check all cores are initialised
  12: Check that only SATELLITE_CORE_1 is active


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreInit.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreDeInit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable15</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1678</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2078</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SatellitesNotSwitchedToNewMode_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_10_Multicore/source/application/WdgM_ImpTest_10_Multicore.c</sourcefile>
      <sourceline>845</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test will check to see if multicore is enabled and WdgM_SetMode was
  called with a new mode then WdgM master instance shall report a DET if any of
  the satellite instances failed to switch to the new mode in the time given
  by parameter WdgMMasterWaitSlaveModeSwitch.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Initialise WdgM
  02: Set to new mode WdgMConf_WdgMMode_WdgMMode_1
  03: Call the main function on the Master core 3 times, with one more then
      the configured parameter WdgMMasterWaitSlaveModeSwitch ( which is configured to 3 )
  04: Check to see if DET is reported with ApiId = WDGM_SID_MAIN_FUNCTION,
      ErrorId = WDGM_EB_E_SETMODE_REQUEST and counter is increased by one

PART 2: All pre-compile time macros are correctly generated into WdgM_Cfg.h
  05 (WDGM.EB.TIMEPM.WDGM020111_Conf):
     The pre-compile time configuration parameter
     WdgMNumberOfCores is correctly generated
  06 (WDGM.EB.TIMEPM.WDGM020113_Conf):
     The pre-compile time configuration parameter
     WdgMMasterCoreId is correctly generated
  07 (WDGM.EB.TIMEPM.WDGM020119_Conf):
     The pre-compile time configuration parameter
     WdgMMasterWaitSlaveModeSwitch is correctly generated


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreSwitchMode.2</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020111_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020113_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020119_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2079</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SatellitesSwitchedToNewMode_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_10_Multicore/source/application/WdgM_ImpTest_10_Multicore.c</sourcefile>
      <sourceline>926</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
  This test will check, when multicore is enabled and WdgM_SetMode was called with
  a new valid mode, that all satellite instances changed to the new mode in the time
  given by WdgMMasterWaitSlaveModeSwitch. Also the satellite instances will announce
  to the master the change to the new mode.
  During mode switch the current satellite mode is provided until mode change was
  succesfully done.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Initialise WdgM to the initial mode which has no
      AliveSupervisions or DeadlineMonitors configured
  02: Set to new mode WdgMConf_WdgMMode_WdgMMode_1 without
      triggering the switch to the new mode
  03: Call main function on the SATELLITE_CORE_0 nothing should
      happen since MASTER_CORE was not switched to the new mode
  04: Check that all local status are on WDGM_LOCAL_STATUS_DEACTIVATED since the
      called main function on SATELLITE_CORE_0 has no effect and the initial mode has
      no Supervision mechanism configured
  05: Global status must be WDGM_GLOBAL_STATUS_OK
  06: Call WdgM_GetMode() which should return the previous mode
      ( WdgMConf_WdgMMode_WdgMMode_0 ) since no main function was called on the
      MASTER_CORE to process the request
  07: Call main function on the MASTER_CORE so the new mode is set
  08: Check that the local status is WDGM_LOCAL_STATUS_OK for the MASTER_CORE
  09: Call main function on the SATELLITE_CORE_0 so the new mode is set
  10: Check that the local status is WDGM_LOCAL_STATUS_OK for the SATELLITE_CORE_0
  11: Global status must be WDGM_GLOBAL_STATUS_OK
  12: Call WdgM_GetMode() which should return the new mode
      ( WdgMConf_WdgMMode_WdgMMode_1 ) since a main
      function was called on the MASTER_CORE to process the request
  13: Set to new mode WdgMConf_WdgMMode_WdgMMode_2
  14: Call main function only on MASTER_CORE so the new mode is set
  15: Call WdgM_GetMode() which returns the new mode WdgMConf_WdgMMode_WdgMMode_2
      since a main function was called on the MASTER_CORE
  16: Switch to SATELLITE_CORE_1 and call WdgM_GetMode() which returns the mode
      of the SATELLITE_CORE_1 WdgMConf_WdgMMode_WdgMMode_1
  17: Check that only the MASTER_CORE switched to the new mode WdgMConf_WdgMMode_WdgMMode_2,
      SATELLITE_CORE_0 is in mode WdgMConf_WdgMMode_WdgMMode_1 and SATELLITE_CORE_1 is in mode WdgMConf_WdgMMode_WdgMMode_0
  18: Call main function only on SATELLITE_CORE_1 so we switch to the new mode
  19: Call WdgM_GetMode() on the SATELLITE_CORE_1 which now switched to the new mode
      WdgMConf_WdgMMode_WdgMMode_2
  20: Check that all the associated cores to this mode switched to the new mode WdgMConf_WdgMMode_WdgMMode_2
  21: Call main function only on SATELLITE_CORE_0 so the new mode is set
  22: Check that all cores switched to the new mode WdgMConf_WdgMMode_WdgMMode_2


Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreSwitchMode.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreSwitchMode.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable14</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1677</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable21</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable17</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1680</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2080</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TriggerWatchdogSatelliteMaster_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_10_Multicore/source/application/WdgM_ImpTest_10_Multicore.c</sourcefile>
      <sourceline>1144</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test will check to see if multicore is enabled, the WdgM master
  instance shall trigger watchdog drivers and shall change the watchdog mode.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Initialise WdgM
  02: Set to new mode WdgMConf_WdgMMode_WdgMMode_1
  03: Call the main function on the Satellite core
  04: Check that WdgIf_SetTriggerCondition_Stub.Count and WdgIf_SetMode_Stub.Count are
      not incremented and it equals 0
  05: Call the main function on the Master core
  06: Check that WdgIf_SetTriggerCondition_Stub.Count and WdgIf_SetMode_Stub.Count are
      incremented and equal 1
  07: Call the main function on the Satellite core
  08: Check that WdgIf_SetTriggerCondition_Stub.Count and WdgIf_SetMode_Stub.Count are
      not incremented and equal 1


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreTriggerWatchdog</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.MulticoreSetWatchdog</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2081</internalId></specobject>
    <specobject>
      <id>TS_WDGM_OnlyMasterDeinitialised_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_10_Multicore/source/application/WdgM_ImpTest_10_Multicore.c</sourcefile>
      <sourceline>1224</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test will check to see if multicore is enabled, the WdgM_GetGlobalStatus
  is not re-computed from WDGM_GLOBAL_STATUS_DEACTIVATED after MASTER_CORE
  is de-initialised and DET is given when we call WdgM_GetGlobalStatus
  and WdgM_GetLocalStatus on de-initialised cores.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Initialise WdgM
  02: Set mode WdgMMode_1 on all cores
  03: Check that local statuses of SATELLITE_CORE_0 and MASTER_CORE are
      WDGM_LOCAL_STATUS_OK and SATELLITE_CORE_1 is WDGM_LOCAL_STATUS_DEACTIVATED
      because SATELLITE_CORE_1 has no Supervised Entity configured for this mode
  04: Check global status of MASTER_CORE to be WDGM_GLOBAL_STATUS_OK
  05: De-initialise MASTER_CORE
  06: Call WdgM_GetLocalStatus on MASTER_CORE which will return E_NOT_OK
  07: Check to see if DET is reported due to MASTER_CORE being de-initialised
  08: WdgM_GetLocalStatus for SATELLITE_CORE_0 is WDGM_LOCAL_STATUS_OK and SATELLITE_CORE_1
      is WDGM_LOCAL_STATUS_DEACTIVATED
  09: Check DET is reported for WdgM_GetGlobalStatus since the master core is de-initialized.
  10: De-initialise SATELLITE_CORE_1
  11: Local status must remain WDGM_LOCAL_STATUS_OK for SATELLITE_CORE_1  and WdgM_GetLocalStatus
      from SATELLITE_CORE_1 returns E_NOT_OK
  12: Check to see if DET is reported due to SATELLITE_CORE_1 being de-initialised
  13: WdgM_GetGlobalStatus returns E_NOT_OK and a DET is reported
  14: De-initialise SATELLITE_CORE_0
  15: WdgM_GetLocalStatus for SATELLITE_CORE_0 and SATELLITE_CORE_1 returns E_NOT_OK and 2 DET
      errors are reported
  16: WdgM_GetGlobalStatus returns E_NOT_OK and a DET is reported


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreDeInit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2082</internalId></specobject>
    <specobject>
      <id>TS_WDGM_MasterSwitchedNewModeNotSatellites_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_10_Multicore/source/application/WdgM_ImpTest_10_Multicore.c</sourcefile>
      <sourceline>1415</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  If multicore is enabled and a mode switch is performed, WdgM master instance shall
  ignore the Local Supervision Status of the satellite instances until the satellites successfully
  switched to the new mode.

Test Object: None.
Test Precondition: None.
Test Execution: 

  01: Initialise WdgM
  02: Set to new mode WdgMConf_WdgMMode_WdgMMode_2 all cores
  03: Set to new mode WdgMConf_WdgMMode_WdgMMode_1
  04: Switch MASTER_CORE to the new mode
  05: Call WdgM_CheckpointReached on MASTER_CORE which return E_OK
  06: Local status of MASTER_CORE is WDGM_LOCAL_STATUS_OK and the global
      status is WDGM_GLOBAL_STATUS_OK
  07: Call WdgM_CheckpointReached on SATELLITE_CORE_1 which return E_OK
  08: Prepare time callout to return an elapsed time which is 1 below the minimum limit on the Satellite
  09: Call WdgM_CheckpointReached on SATELLITE_CORE_1 which return E_NOT_OK
  10: Local status of SATELLITE_CORE_1 is WDGM_LOCAL_STATUS_OK
  11: Call WdgM_CheckpointReached on MASTER_CORE which return E_OK and a MainFunction so that
      WdgM_GetGlobalStatus remains to the same value WDGM_GLOBAL_STATUS_OK after computation
  12: Local status of SATELLITE_CORE_1 is WDGM_LOCAL_STATUS_EXPIRED
  13: Call WdgM_CheckpointReached on both MASTER_CORE and SATELLITE_CORE_0 so we remain in local
      status WDGM_LOCAL_STATUS_OK
  14: Call MainFunction on all cores and check MASTER_CORE local status to be WDGM_LOCAL_STATUS_OK
      and global status to be WDGM_GLOBAL_STATUS_EXPIRED due to SATELLITE_CORE_1 being in WDGM_LOCAL_STATUS_EXPIRED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreSwitchMode.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>565</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2083</internalId></specobject>
    <specobject>
      <id>TS_WDGM_TimE_DeInit_NotInit_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_10_Multicore/source/application/WdgM_ImpTest_10_Multicore.c</sourcefile>
      <sourceline>1574</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests if a de-initialization request is correctly applied when WdgM global status is
    WDGM_EB_GLOBAL_STATUS_DEINIT and Expected initialization is WDGM_EB_INIT_STATUS_INIT,
    but initialization did not finished.

 
Test Object: None.
Test Precondition: 
 
Test Execution: 

 01: Initialize test case.
 02: Call WdgM_Init to signal a initialization on the next main function.
 03: De-Initialize WdgM.
 04: Check to see the module is de-initialized

 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable18</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1681</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2084</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_DeInitSatelliteBeforeMaster_Multicore1</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_11_multicore/source/application/WdgM_ImpTest_11_multicore.c</sourcefile>
      <sourceline>63</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that if the WdgM_DeInit function is called, the WdgM module is completely uninitialized 
  only after the master main function is called. Satellites will uninitialized after master had been uninitialized.

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4, CP0_5, CP0_7 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_1, CP1_2, CP1_2, CP1_4, CP1_5, CP1_7 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_4, CP2_5, CP2_6, CP2_7               (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 2 Internal Graphs and 2 External Graph and 1 External Graph in WdgMMode_2 :
    Internal Graphs : CP0_1 -&gt; CP0_2 -&gt; CP0_3 (WdgMMode_1)
                      CP1_1 -&gt; CP1_2 -&gt; CP1_2 (WdgMMode_1)

    External Graph  : CP0_4 -&gt; CP1_4 -&gt; CP2_4 (WdgMMode_1)
                    : CP0_5 -&gt; CP1_5 or CP2_5 -&gt; CP2_6 (WdgMMode_1)
                    : CP0_7 -&gt; CP1_7 -&gt; CP2_7 (WdgMMode_2)


Test Execution: 
  01: Initialize WdgM
  02: Call main funtions on both cores
  03 VP: Check that the WdgM_EB_GetGlobalInitStatus() returns WDGM_EB_INIT_STATUS_INIT since we just
         initialised the WdgM module
  04: De-Initialize WdgM
  05: Switch to the satellite core
  06: Call main functions on satellite core
  07 VP: Check that the WdgM_EB_GetGlobalInitStatus() returns WDGM_EB_INIT_STATUS_INIT since Master
         core is not yet uninitialized and the satellite cores are waiting for the master to be uninitialized.
  08: Switch to the master core
  09: Call main functions on master core
  10 VP: Check that only the satellite core is initialized since
         we just de-initialised the WdgM on MASTER_CORE only
  11: Switch to the satellite core
  12: Call main functions on satellite core
  13 VP: Check that the WdgM_EB_GetGlobalInitStatus() returns WDGM_EB_INIT_STATUS_DEINIT since we just
         de-initialised also the WdgM satellite core

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreDeInit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2085</internalId></specobject>
    <specobject>
      <id>TS_WDGM_InitSatelliteBeforeMaster_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_11_multicore/source/application/WdgM_ImpTest_11_multicore.c</sourcefile>
      <sourceline>183</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
This test checks that the Satellites are initialized only after Master finished initialization. In case that satellite Mainfunction
is called before the Master had initialized, then the satellite it will not initialize.

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4, CP0_5, CP0_7 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_1, CP1_2, CP1_2, CP1_4, CP1_5, CP1_7 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_4, CP2_5, CP2_6, CP2_7               (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 2 Internal Graphs and 2 External Graph and 1 External Graph in WdgMMode_2 :
    Internal Graphs : CP0_1 -&gt; CP0_2 -&gt; CP0_3 (WdgMMode_1)
                      CP1_1 -&gt; CP1_2 -&gt; CP1_2 (WdgMMode_1)

    External Graph  : CP0_4 -&gt; CP1_4 -&gt; CP2_4 (WdgMMode_1)
                    : CP0_5 -&gt; CP1_5 or CP2_5 -&gt; CP2_6 (WdgMMode_1)
                    : CP0_7 -&gt; CP1_7 -&gt; CP2_7 (WdgMMode_2)


Test Execution: 

  01: Initialize WdgM 
  02: Switch to the satellite core
  03: Call main functions on satellite core
  04 CP: Check that the WdgM_EB_GetGlobalInitStatus() returns WDGM_EB_INIT_STATUS_DEINIT
         since we just try to initialised the WdgM satellite core before master had been initialized.
  05: Switch to the master core
  06: Call main functions on master core
  07 VP: Check that only the master core is initialized
  08: Switch to the satellite core
  09: Call main functions on satellite core
  10 VP: Check that the WdgM_EB_GetGlobalInitStatus() returns WDGM_EB_INIT_STATUS_INIT,
         the WdgM is initialized


Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreInit.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2086</internalId></specobject>
    <specobject>
      <id>TS_WDGM_DeInitSatelliteBeforeMaster_Multicore2</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_11_multicore/source/application/WdgM_ImpTest_11_multicore.c</sourcefile>
      <sourceline>287</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test checks that if the WdgM_DeInit function is called, the WdgM module is completly de-initialized
  only if the master main function is called before satellite main funtion. If salve main function is called
  before it will not be uninitialized until the master had been uninitialized.

Test Object: None.
Test Precondition: 

The following configuration is used for all tests:

Configured SEs:
  WdgMSupervisedEntity_0: Checkpoints: CP0_1, CP0_2, CP0_3, CP0_4, CP0_5, CP0_7 (mapped on core 0)
  WdgMSupervisedEntity_1: Checkpoints: CP1_1, CP1_2, CP1_2, CP1_4, CP1_5, CP1_7 (mapped on core 1)
  WdgMSupervisedEntity_2: Checkpoints: CP2_4, CP2_5, CP2_6, CP2_7               (mapped on core 0)

Configured Modes:
  WdgMMode_0       -&gt; not used
  WdgMMode_1
  WdgMMode_2
  WdgMMode_3_DeInit
  WdgMMode_unused  -&gt; not used
  
  In mode WdgMMode_1 there are 2 Internal Graphs and 2 External Graph and 1 External Graph in WdgMMode_2 :
    Internal Graphs : CP0_1 -&gt; CP0_2 -&gt; CP0_3 (WdgMMode_1)
                      CP1_1 -&gt; CP1_2 -&gt; CP1_2 (WdgMMode_1)

    External Graph  : CP0_4 -&gt; CP1_4 -&gt; CP2_4 (WdgMMode_1)
                    : CP0_5 -&gt; CP1_5 or CP2_5 -&gt; CP2_6 (WdgMMode_1)
                    : CP0_7 -&gt; CP1_7 -&gt; CP2_7 (WdgMMode_2)


Test Execution: 
  01: Initialize WdgM
  02: Call main funtions on both cores
  03 VP: Check that the WdgM_EB_GetGlobalInitStatus() returns WDGM_EB_INIT_STATUS_INIT since
         we just initialised the WdgM module
  04: De-Initialize WdgM
  05: Switch to the satellite core
  06: Call main functions on satellite core
  07 VP: Check that the WdgM_EB_GetGlobalInitStatus() returns WDGM_EB_INIT_STATUS_INIT since Master
         core is not yet uninitialized and the satellite cores are waiting for the master to be uninitialized.
  08: Switch to the master core
  09: Call main functions on master core
  10 VP: Check that only the satellite core is initialized
         since we just de-initialised the WdgM on MASTER_CORE only
  11: Switch to the satellite core
  12: Call main functions on satellite core
  13 VP: Check that the WdgM_EB_GetGlobalInitStatus() returns WDGM_EB_INIT_STATUS_DEINIT since
         we just de-initialised also the WdgM satellite core

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.MulticoreDeInit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2087</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_SetMode_DetDem_01_MC</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_12_Multicore/source/application/WdgM_ImpTest_12_ReportToDem_multicore.c.m4</sourcefile>
      <sourceline>200</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check if the EB specific feature for choosing between
Det/Dem reporting works, when the SetMode function
is called with an invalid caller id.

Note: Multicore configuration is used for this test.

This test and all sub-sequent tests are
executed with the following configuration permutations:

   Parameter / Permutation      |    p0   |    p1   |    p2   |    p3   |    p4   |
===================================================================================
WdgMDevErrorDetect              | true    | true    | true    | true    | true    |
WdgMSupervisionReportToDem      | DEM     | DET     | DISABLE | DEM     | DET     |
WdgMSetModeReportToDem          | DEM     | DET     | DISABLE | DEM     | DET     |
WdgMImproperCallerReportToDem   | DEM     | DET     | DISABLE | DEM     | DET     |
WdgMDefensiveBehavior           | true    | true    | false   | true    | true    |
WdgMSupervisorCalloutsEnable    | false   | false   | false   | true    | true    |
WdgMDetCalloutEnable            | false   | false   | false   | false   | true    |
WdgMImmediateReset              | true    | false   | true    | false   | true    |
------------------ The following parameters are constant --------------------------
WdgMVersionInfoApi              | true    | true    | true    | true    | true    |
WdgMDemStoppedSupervisionReport | true    | true    | true    | true    | true    |
WdgMOffModeEnabled              | true    | true    | true    | true    | true    |
WdgMRteUsage                    | false   | false   | false   | false   | false   |
WdgMCallerIds                   | true    | true    | true    | true    | true    |
WdgMSleepMode                   | true    | true    | true    | true    | true    |
WdgMSupervisionDemDetErrId      |  -      | 30      |  -      |  -      | 30      |
WdgMSetModeDemDetErrId          |  -      | 31      |  -      |  -      | 31      |
WdgMImproperCallerDemDetErrId   |  -      | 32      |  -      |  -      | 32      |


Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Call WdgM_SetMode with invalid caller id (valid mode)
  02: VP
      E_NOT_OK is returned for permutations: p0, p1
      E_OK is returned for permutations: p2
  03: VP
      Dem called with following parameters for permutations: p0,p3
        EventId     = WDGM_E_IMPROPER_CALLER
        EventStatus = DEM_EVENT_STATUS_FAILED
      Det called with following parameters for permutations: p1
        ApiId   = 0x03U
        ErrorId = 32
      Det callout called with following parameters for permutations: p4
        ApiId   = 0x03U
        ErrorId = 32
      No Det or Dem called for permutations: p2


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.ImproperCaller.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2088</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SetMode_DetDem_02_MC</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_12_Multicore/source/application/WdgM_ImpTest_12_ReportToDem_multicore.c.m4</sourcefile>
      <sourceline>344</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check if the EB specific feature for choosing between
Det/Dem reporting works, when the SetMode function
is called and an internal error occurs (WdgIf_SetMode returns E_NOT_OK).
Note: Multicore configuration is used for this test.

Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Prepare WdgIf_SetMode stub to return E_NOT_OK
  02: Call WdgM_SetMode with valid arguments
  03: VP (WDGM.EB.TIMEPM.WDGM020400)
      E_OK is returned for all permutations (mode switch is stored for next
      invocation of WdgM_MainFunction).
  04: WdgM_MainFunction is called.
  05: VP (WdgM.EB.ReportToDem.SetMode.1, WDGM.EB.TIMEPM.WDGM020109_Conf,
          WDGM.EB.TIMEPM.WDGM020438,
          WDGM.EB.TIMEPM.WDGM020439, WDGM.EB.TIMEPM.WDGM020440)
      for permutation: p0,p3
         Dem called with following parameters (WdgM.EB.ReportToDem.SetMode.1):
           EventId     = WDGM_E_SET_MODE
           EventStatus = DEM_EVENT_STATUS_FAILED
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020438,
         WDGM.EB.TIMEPM.WDGM020439):
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_SETMODE_REQUEST
      for permutation: p1
         Det called twice:
           First Det with following parameters(WdgM.EB.ReportToDem.SetMode.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 32
           Second Det with following parameters (WDGM.EB.TIMEPM.WDGM020438,
         WDGM.EB.TIMEPM.WDGM020439):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = WDGM_EB_E_SETMODE_REQUEST
         No Dem called
      for permutation: p2
         Det called with following parameters(WDGM.EB.TIMEPM.WDGM020438,
         WDGM.EB.TIMEPM.WDGM020439):
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_SETMODE_REQUEST
         No Dem called
      for permutation: p4
         WdgMDetCallout called twice:
           First WdgMDetCallout with following parameters (WdgM.EB.ReportToDem.SetMode.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 32
           Second WdgMDetCallout with following parameters (WDGM.EB.TIMEPM.WDGM020438,
           WDGM.EB.TIMEPM.WDGM020440):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = WDGM_EB_E_SETMODE_REQUEST
         No Dem called


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020438</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020439</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>709</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020440</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2089</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SetMode_DetDem_03_MC</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_12_Multicore/source/application/WdgM_ImpTest_12_ReportToDem_multicore.c.m4</sourcefile>
      <sourceline>511</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check if the EB specific feature for choosing between
Det/Dem reporting works, when the WdgM initialization fails
(WdgIf_SetMode returns E_NOT_OK on init).

Note: Multicore configuration is used for this test.


Test Object: None.
Test Precondition: WdgM not initialized
Test Execution: 

  01: Prepare WdgIf_SetMode stub to return E_NOT_OK.
  02: Call WdgM_Init and WdgM_MainFunction (WdgIf_SetMode gets called for initial mode).
  03: VP (WdgM.EB.ReportToDem.SetMode.1, WDGM.EB.TIMEPM.WDGM020109_Conf,
          WDGM.EB.TIMEPM.WDGM020438,
          WDGM.EB.TIMEPM.WDGM020439, WDGM.EB.TIMEPM.WDGM020440)
      for permutation: p0,p3
         Dem called with following parameters (WdgM.EB.ReportToDem.SetMode.1):
           EventId     = WDGM_E_SET_MODE
           EventStatus = DEM_EVENT_STATUS_FAILED
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020441,
         WDGM.EB.TIMEPM.WDGM020442):
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_INIT_REQUEST
      for permutation: p1
         Det called twice:
           First Det with following parameters(WdgM.EB.ReportToDem.SetMode.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 32
           Second Det with following parameters (WDGM.EB.TIMEPM.WDGM020441,
         WDGM.EB.TIMEPM.WDGM020442):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = WDGM_EB_E_INIT_REQUEST
         No Dem called
      for permutation: p2
         Det called with following parameters(WDGM.EB.TIMEPM.WDGM020441,
         WDGM.EB.TIMEPM.WDGM020442):
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_INIT_REQUEST
         No Dem called
      for permutation: p4
         WdgMDetCallout called twice:
           First WdgMDetCallout with following parameters (WdgM.EB.ReportToDem.SetMode.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 32
           Second WdgMDetCallout with following parameters (WDGM.EB.TIMEPM.WDGM020441,
           WDGM.EB.TIMEPM.WDGM020443):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = WDGM_EB_E_INIT_REQUEST
         No Dem called
  04: VP (WdgM.ASR40.WDGM339_Conf, WdgM.SWS_WdgM_00133.1):
      for permutations p0, p2, p4:
         Mcu_PerformReset() is called.
      for permutations p1, p3:
         Mcu_PerformReset() is not called.
  05: VP (WDGM.EB.TIMEPM.WDGM020450, WdgM.SWS_WdgM_00139):
      WdgM module is initialized with Global Supervision Status WDGM_GLOBAL_STATUS_STOPPED


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020441</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020442</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020443</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020450</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
        <provcov>
          <linksto>WdgM.ECUC_WdgM_00339</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>WdgM.SWS_WdgM_00133.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2090</internalId></specobject>
    <specobject>
      <id>TS_WDGM_SetMode_DetDem_04_MC</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_12_Multicore/source/application/WdgM_ImpTest_12_ReportToDem_multicore.c.m4</sourcefile>
      <sourceline>701</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Check if the EB specific feature for choosing between
Det/Dem reporting works, when the WdgM de-initialization fails
(WdgIf_SetMode returns E_NOT_OK on de-init).

Note: Multicore configuration is used for this test.

Test Object: None.
Test Precondition: WdgM initialized (TS_WDGM_30027)
Test Execution: 

  01: Prepare WdgIf_SetMode stub to return E_NOT_OK
  02: Call WdgM_DeInit and WdgM_MainFunction (WdgIf_SetMode for sleep mode gets called).
  03: VP (WdgM.EB.ReportToDem.SetMode.1, WDGM.EB.TIMEPM.WDGM020109_Conf,
          WDGM.EB.TIMEPM.WDGM020438,
          WDGM.EB.TIMEPM.WDGM020439, WDGM.EB.TIMEPM.WDGM020440)
      for permutation: p0
         Dem called with following parameters (WdgM.EB.ReportToDem.SetMode.1):
           EventId     = WDGM_E_SET_MODE
           EventStatus = DEM_EVENT_STATUS_FAILED
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020438,
         WDGM.EB.TIMEPM.WDGM020439):
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_DEINIT_REQUEST
      for permutation: p1
         Det called twice:
           First Det with following parameters(WdgM.EB.ReportToDem.SetMode.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 32
           Second Det with following parameters (WDGM.EB.TIMEPM.WDGM020438,
         WDGM.EB.TIMEPM.WDGM020439):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = WDGM_EB_E_DEINIT_REQUEST
         No Dem called
      for permutation: p2
         Det called with following parameters(WDGM.EB.TIMEPM.WDGM020438,
         WDGM.EB.TIMEPM.WDGM020439):
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_DEINIT_REQUEST
         No Dem called
      for permutation: p3
         WdgMDemCallout called with following parameters (WDGM.EB.TIMEPM.WDGM020109_Conf,
         WdgM.EB.ReportToDem.SetMode.1):
           EventId     = WDGM_E_SET_MODE
           EventStatus = DEM_EVENT_STATUS_FAILED
         Det called with following parameters (WDGM.EB.TIMEPM.WDGM020438,
         WDGM.EB.TIMEPM.WDGM020439):
           ApiId   = WDGM_SID_MAIN_FUNCTION
           ErrorId = WDGM_EB_E_DEINIT_REQUEST
      for permutation: p4
         WdgMDetCallout called twice:
           First WdgMDetCallout with following parameters (WdgM.EB.ReportToDem.SetMode.1):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = 32
           Second WdgMDetCallout with following parameters (WDGM.EB.TIMEPM.WDGM020438,
           WDGM.EB.TIMEPM.WDGM020440):
             ApiId   = WDGM_SID_MAIN_FUNCTION
             ErrorId = WDGM_EB_E_DEINIT_REQUEST
         No Dem called


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020109_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
        <provcov>
          <linksto>WdgM.EB.ReportToDem.SetMode.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020444</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>714</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020445</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>715</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020446</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>716</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2091</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_GetAllExpiredInternalVariables</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_13_FailOperation_GetAllExpired/source/application/EbTest.c.m4</sourcefile>
      <sourceline>128</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all expired Supervision Entities are reported when the WdgM_GetAllExpiredSEID function is called
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01. Initialize stubs and WdgM.
    02. Verify the local status of the tested SE to be WDGM_LOCAL_STATUS_OK.
    03: Call main functions on all cores.
    04. VP: Verify that the local state of the SE has changed to WDGM_LOCAL_STATUS_EXPIRED.
    05. VP(WDGM.EB.DesignDecision.InternalVariable27, WDGM.EB.DesignDecision.InternalVariable28):
    Verify that all expired supervised entities variables are update correctly
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable27</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1690</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable28</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1691</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2092</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_WDGM_WdgMRequestPartitionReset_PartitionState</id>
      <status>approved</status>
      <source>EB test case specification (asc_WdgM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_WdgM/test/ts5/Implementation/IN/WdgM_ImpTest_13_FailOperation_PartitionRestart/source/application/EbTest.c.m4</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;

      |------------------------------------------------------------------------------------------------------------------|
      | WdgM Supervised Entity  | Supervision type                                 | Os Application   | Multicore CoreId |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_0  | alive                                            | OsApplication_0  | 0                |
      |                         | internal transition (CP0, CP1)                   |                  |                  |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_1  | alive                                            | OsApplication_0  | 0                |
      |                         | external logical supervison (SE1 CP0 -&gt; SE2 CP0) |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_2  | alive                                            | OsApplication_0  | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_3  | alive                                            | OsApplication_1  | 1                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_4  | alive                                            | OsApplication_2  | 2                |
      |                         | alive indications of the Checkpoint (CP0): 2  |  |                  |                  |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_5  | alive                                            | OsApplication_2  | 2                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_6  | alive                                            | No OsApplication | 0                |
      |-------------------------|--------------------------------------------------|------------------|------------------|
      | WdgMSupervisedEntity_7  | alive                                            | No OsApplication | 0                |
      |------------------------------------------------------------------------------------------------------------------|
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    WdgMSupervisorCallouts           is enabled
    WdgMRequestPartitionResetCallout is enabled
    WdgMErrorRecoveryEnabled         is enabled
  
Test Execution: 
    01. Initialize all referenced Os Application to a partition state machine different than WDGM_EB_PARTITION_ACTIVE.
    02. Verify that all partition state machine are all different than WDGM_EB_PARTITION_ACTIVE.
    03. Initialize stubs and WdgM.
    04. VP(WDGM.EB.DesignDecision.PartitionInitial): Verify that WdgM initialized all referenced Os Application to WDGM_EB_PARTITION_ACTIVE.
    04b. VP(WDGM.EB.DesignDecision.InternalVariable30, WDGM.EB.DesignDecision.InternalVariable31): Verify supervision cycles are correct
    05. Verify the local status of the tested SEs to be WDGM_LOCAL_STATUS_OK.
    06. Call WdgM_CheckpointReached with valid arguments for configured SEs EXCEPT WdgMSupervisedEntity_1 (OS Application 0).
    07. Call the main function -&gt; WdgMSupervisedEntity_1 FAILED.
    07b. VP(WDGM.EB.DesignDecision.InternalVariable30, WDGM.EB.DesignDecision.InternalVariable31): Verify supervision cycles are correct
    08. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    09. VP: Verify that the local state of the WdgMSupervisedEntity_1 SE has changed to WDGM_LOCAL_STATUS_FAILED.
    10. VP: Verify that the configured WdgMRequestPartitionResetCallout callout has been called.
    11. VP(WDGM.EB.DesignDecision.PartitionRestart): Verify that all partition state machines corresponding to OS Application 0 have changed the status to WDGM_EB_PARTITION_RESTARTING.
    12. Verify that all partition state machines not related to OS Application 0 have not changed their status.
    13. Call WdgM_CheckpointReached with valid arguments - there is no need to call WdgM_CheckpointReached for
        WdgMSupervisedEntity_0/2 because it shares the same Os Application with WdgMSupervisedEntity_1.
    14. Call the main function -&gt; WdgMSupervisedEntity_1 FAILED.
    14b. VP(WDGM.EB.DesignDecision.InternalVariable30, WDGM.EB.DesignDecision.InternalVariable31): Verify supervision cycles are correct
    15. VP: Verify that no other calls of the configured WdgMRequestPartitionResetCallout callout occur.
    16. VP: Verify that the local state of the SEs to be WDGM_LOCAL_STATUS_OK.
    17. VP: Verify that the local state of the WdgMSupervisedEntity_1 SE has changed to WDGM_LOCAL_STATUS_FAILED.
    18. Change the Os Application state to APPLICATION_ACCESSIBLE.
    19. Call WdgM_CheckpointReached with valid arguments for all SEs.
    20. Call the main function -&gt; WdgMSupervisedEntity_1 OK.
    20b. VP(WDGM.EB.DesignDecision.InternalVariable30, WDGM.EB.DesignDecision.InternalVariable31): Verify supervision cycles are correct
    21. Verify the local status of all tested SEs to be WDGM_LOCAL_STATUS_OK.
    22. VP: Verify that no other calls of the configured WdgMRequestPartitionResetCallout callout occur.
    23. VP(WDGM.EB.DesignDecision.PartitionPost): Verify that all partition state machines that have been in WDGM_EB_PARTITION_RESTARTING state, have
        changed the status to WDGM_EB_PARTITION_POST_RESTARTED in WdgM_MainFunction call - this check is performed
        using the Tst_WdgM_IndividualModeSwitch_Callout callout function.
    24. VP(WDGM.EB.DesignDecision.PartitionActive): Verify that all partition state machines that have been in WDGM_EB_PARTITION_POST_RESTARTED have changed
        the status to WDGM_EB_PARTITION_ACTIVE.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020126_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020127_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.TIMEPM.WDGM020225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>WdgM.ASR40.ECUC_WdgM_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionInitial</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1704</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionRestart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1703</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionPost</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1702</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionActive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1701</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionSupervisionActive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1660</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionSupervisionRestart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1662</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionSupervisionPost</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1661</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.PartitionResetData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1658</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable30</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1693</internalId></provcov>
        <provcov>
          <linksto>WDGM.EB.DesignDecision.InternalVariable31</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2093</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
