<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_DevAuth_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_Native/asc_DevAuth_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_Native/asc_DevAuth_requirements_DevAuth_LH_10833648_ECU_Authentication.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_Native/asc_DevAuth_requirements_DevAuth_RFC3748_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/common_req/DevAuth_PostBuildSelectable_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/common_req/DevAuth_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 21:28:55 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_DevAuth_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_Native/asc_DevAuth_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_Native/asc_DevAuth_requirements_DevAuth_LH_10833648_ECU_Authentication.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_Native/asc_DevAuth_requirements_DevAuth_RFC3748_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/common_req/DevAuth_PostBuildSelectable_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/common_req/DevAuth_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/2018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>feavc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swpad</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swts</regex>
      <regex>pdoc</regex>       <!-- since 10/2018: introduced for updated tracing model-->
      <regex>dev</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swadvc</regex>     <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swuvc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/2020: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>
      <regex>doc</regex>

      <!-- legacy items -->
      <regex>req</regex>        <!-- deprecated 10/2017: old swrs type -->
      <regex>dsn</regex>        <!-- deprecated 10/2017: old swdd -->
      <regex>src</regex>        <!-- deprecated 10/2017: old impl type -->
      <regex>tcs</regex>        <!-- deprecated 10/2017: replaced by swintts and swuts -->
      <regex>dsn_arch</regex>   <!-- deprecated 10/2017: old swad type -->
      <regex>man</regex>
      <regex>tso</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='req') and (../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.rejected</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.count</name>
      <description>Requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.req.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='req') or (../@doctype='swrs')) and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='swdd') or (../@doctype='dsn')) and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.doctypes</name>
      <description>Requirements can be covered only by req, dsn_arch, dev, lim, dsn, src, tcs, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req')]</applyto>
          <condition>(./needscoverage/needsobj="req" or ./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swad, dev, lim, swurs, swdd, src, swuts, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.doctypes</name>
      <description>Design elements can only be covered by dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn')]</applyto>
          <condition>(./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.src.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='src')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="tsc" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes") )</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="dsn_arch" or ./fulfilledby/ffbObj/ffbType="dsn_arch" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>



    <rule>
      <name>ERR.dsn_arch.needscoverage.doctypes</name>
      <description>Architectural design objects can only be covered by dsn_arch, dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn_arch')]</applyto>
          <condition>(./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, req, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
         </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
  </rules>
    <oreqmRules>
          <rule>
            <name>WRN.tsc.needscoverage.count</name>
            <description>Violated if there are more than 10 tsc specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='tcs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='tsc'])) &gt; 10]/furtherinfo</applyto>
                    <regex>tsc.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.req.needscoverage.count</name>
            <description>Violated if there are more than 10 req specobjects covering one specobject and no appropriate information is provided in furtherinfo, refinement on req to req are excluded. Refinements of requirements Req to Req and Req to Fea are excluded from this rule since this is tracing on the same level. The justification in furtherinfo must contain the rule name.</description>
           <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(../@doctype != 'req') and (../@doctype != 'fea') and ((count(./needscoverage/needscov[needsobj='req']/coveredby/linkedfrom)) &gt; 10)]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='req'])) &gt; 10]/furtherinfo</applyto>
                    <regex>req.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
     </rule>

        <rule>
            <name>WRN.src.needscoverage.count</name>
            <description>Violated if there are more than 10 src specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='src']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn_arch.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn_arch specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn_arch']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn_arch'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn_arch.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">
    <specobject>
      <id>lim.DevAuth.EB_INTREQ_DevAuth_0001</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        The reinitialization process shall not interrupt other module functions.
        If reinitialization of the module is required, the call of
        <function>DevAuth_Init()</function> shall not interrupt other module functions.
      </description>
      <rationale>
        The reinitialization process resets all internal variables. Continuing an interrupted
        module function after reinitialization can lead to undefined module behavior.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

    <specobject>
      <id>lim.DevAuth.EB_INTREQ_DevAuth_0002</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        The integrator must assure that neither <code>EthIf_MainFunctionRx()</code> or
        <code>EthSM_MainFunction()</code> or <code>EthTSyn_MainFunction()</code> can preempt
        <code>DevAuth_MainFunction()</code>.
        The integrator also must assure that <code>DevAuth_MainFunction()</code> does not preempt
        <code>EthIf_MainFunctionRx()</code> or <code>EthSM_MainFunction()</code> or
        <code>EthTSyn_MainFunction()</code>.
      </description>
      <rationale>
        This limitation reduces code size and execution time by eliminating the need for extensive
        use of exclusive areas.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

    <specobject>
      <id>lim.DevAuth.EB_INTREQ_DevAuth_0003</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        Eth and EthIf must not use receive or transmit interrupts.
        The Integrator must assure that neither Eth nor EthIf use interrupts. That is,
        <code>EthIfEnableRxInterrupt</code>, <code>EthCtrlEnableRxInterrupt</code>,
        <code>EthIfEnableTxInterrupt</code> and <code>EthCtrlEnableTxInterrupt</code> shall be set
        to false.
        This prevents <code>Devauth_RxIndication()</code>, <code>DevAuth_TxConfirmation()</code>,
        from interrupting <code>DevAuth_MainFunction()</code>.
      </description>
      <rationale>
        This limitation reduces code size and execution time by eliminating the need for extensive
        use of exclusive areas.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

    <specobject>
      <id>lim.DevAuth.EB_INTREQ_DevAuth_0004</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        User callback function configured with <function>DevAuthGetNvramCallbackName</function> shall
        be ready for use before <function>DevAuth_Init()</function> is called.
      </description>
      <rationale>
        <function>DevAuth_Init()</function> calls the function <function>DevAuthGetNvramCallbackName
        </function> in order to retrieve the saved state of Client state machine. If the function
        returns an error, the default state is set - authentication unlocked and enabled.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>lim.DevAuth.EB_INTREQ_DevAuth_0005</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        DCM routine calls to <function>DevAuth_EcuAuthStart()</function>, 
        <function>DevAuth_EcuAuthStop()</function>, <function>DevAuth_EcuAuthLock()</function>
        and <function>DevAuth_EcuAuthUnlock()</function> shall not interrupt each other.
      </description>
      <rationale>
        Preemption of aforementioned functions would result in undefined behavior.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

  </specobjects>
    <specobjects doctype="swrs">

    <specobject>
      <id>DevAuth_NET_SEC_80</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        Every Ethernet ECU shall support IEEE 802.1X and the Extended Authentication Protocol
        (EAP) for authentication on all its Ethernet ports.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.dsn.Func0105.EapIdentity</srcid><srcstatus/><internalId>394</internalId></linkedfrom><linkedfrom><srcid>DevAuth.dsn.Func0106.EapolLogoff</srcid><srcstatus/><internalId>395</internalId></linkedfrom><linkedfrom><srcid>DevAuth.dsn.Func0108.EapSuccess</srcid><srcstatus/><internalId>397</internalId></linkedfrom><linkedfrom><srcid>DevAuth.dsn.Func0109.EapFailure</srcid><srcstatus/><internalId>398</internalId></linkedfrom><linkedfrom><srcid>DevAuth.dsn.Func0111.EapolStart</srcid><srcstatus/><internalId>399</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_100</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        Every Ethernet ECU shall support the BMW EAP-Module Secure Timing.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_666</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        ID Certificates supplied by the Key and Certificate Management shall be used for ECU
        Authentication.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_96</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        Ethernet ports towards the OBD connector are considered as "uplink ports", on which the ECU
        shall support the supplicant role.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_97</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        Ethernet ports away from the OBD connector are considered as "downlink ports", which shall
        support the authenticator role.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_132</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        Unauthenticated ECUs shall be able to communicate with 802.1X, EAP, and related messages
        with the Switch ECUs internal micro-controller.
      </description>
      <comment/>
      <verifycrit>
        Test that sample 802.1X, EAP, and Expanded EAP messages can be received / transmitted
        while port is not authenticated, in detail:
        - TX of EAPoL Start
        - EAP-Request/Response(Identity)
        - EAP-Request/Response(Secure Timing: Authenticate ECU).
      </verifycrit>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01002_RepeatEapolStartTx</srcid><srcstatus/><internalId>575</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01003_EapIdentity</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01004_AuthenticateEcu</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_129</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        Unauthenticated ECUs shall have filtered access to the external VLAN (currently untagged):
          - Allowing DHCP messages
          - Allowing ARP messages
          - Allowing communications to the ECUs diagnostics port (currently TCP port 6801).
          - Denying communications to other ECUs diagnostics port even when coming from the the
            ECUs diagnostics port. This means the port number of communication partner shall not
            be the diagnostics port number.
          - Everything else shall be denied.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1206</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        When the Authenticator enables diagnostics, it needs to allow in addition:
        - Allowing internal diagnostics opened towards the supplicant (currently TCP port 6801).
        - Allowing NM messages towards the supplicant (currently UDP port 30500).
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_131</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        Besides the diagnostics VLAN (currently untagged), the switch shall only permit
        communications between the unauthenticated client and the implementations of the
        protocols described in this chapter (i.e. IEEE 802.1X, EAP, and PTPv2).
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_116</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The supplicant shall sent an EAPoL-Start message as specified in the IEEE 802.1X-2004
        specification.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01000_FirstEapolStartTx</srcid><srcstatus/><internalId>573</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01027_ProvideTxBuffer_BUFREQ_E_NOT_OK</srcid><srcstatus/><internalId>600</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_744</srcid><srcstatus/><internalId>226</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4263</srcid><srcstatus/><internalId>297</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4510</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0111.EapolStart</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1138</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1139</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1140</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1141</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1146</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1149</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1152</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        Based on the "EAPOL protocol version handling" in IEEE 802.1X-2004 and IEEE 802.1X-2010,
        an 2010 implementation supports 2004 messages and an 2004 implementation supports 2010
        messages. The difference is the Version field as well as the added payload on EAP-Start and
        EAP-Logoff messages.
        So while this specification uses the IEEE 802.1X-2004 version number and layout, all
        implementations are supporting 2010 anyhow, if they are implement IEEE 802.1X correctly.
      </description>
      <comment/>
      <verifycrit>
        Test use case for undermentioned incoming message with the following:
        - Value of Protocol version is &gt;2 and
        - Packet has extra bytes compared to the packet structure according to IEEE 802.1X-2004.
        Use the following messages:
        1) EAP-Request(Identity)
        2) EAP-Success and
        3) EAP-Request(Authenticate Ecu).
      </verifycrit>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01059_EapMessage_IgnorePadding</srcid><srcstatus/><internalId>632</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_117</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The authenticator shall start the authentication process on receiving an EAPoL-Start
        message on an Ethernet port.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1142</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        When the supplicant receives EAP messages by the authenticator, the supplicant shall start
        the exchanges, even when ECU Authentication is not activated or the supplicant did not
        sent out the EAPoL-Start message.
      </description>
      <comment>
        A part of the requirement "...the supplicant did not sent out the EAPoL-Start message"
        cannot be tested because DevAuth sends out EAPoL-Start message as soon as link state goes
        active.
      </comment>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01050_READY_OFF_RxIdentityReq</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01052_AuthenticateEcu_NotActivated</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01063_Ready_OFF_2_Ready_OFF_EnableDiag</srcid><srcstatus/><internalId>636</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5025</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_119</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        As response to the EAPoL-Start message the authenticator shall send out an EAP-Request for
        Identity on the same port.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_120</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The EAP-Request (Identity) shall be filled as follows:
        - IEEE 802.1X
          - Version: 2 (=IEEE 802.1X-2004)
          - Type: 0 (EAP)
          - Length
        - EAP
          - Code: 1 (Request)
          - ID: (determined by authenticator)
          - Length
          - Type: 1 (Identity)
          - Type-Data: (empty)
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01152_ReadEcuUid_NoCallbackConfigured</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0105.EapIdentity</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1138</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1139</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1140</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1141</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1146</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_121</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        On receiving the EAP Request (Identity), the supplicant shall answer with an
        EAP-Response (Identity).
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01003_EapIdentity</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01026_MessageReTransmission</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01031_EapRespIdentity_BufferNotProvided</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01152_ReadEcuUid_NoCallbackConfigured</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0105.EapIdentity</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_122</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        The EAP Response (Identity) shall be filled as follows:
        - IEEE 802.1X
          - Version: 2 (=IEEE 802.1X-2004)
          - Type: 0 (EAP)
          - Length
        - EAP
          - Code: 2 (Response)
          - ID: (copied over from EAP Request (Identity))
          - Length
          - Type: 1 (Identity)
          - Type-Data: (configured ECU-UID of ECU)
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01003_EapIdentity</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01031_EapRespIdentity_BufferNotProvided</srcid><srcstatus/><internalId>604</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0105.EapIdentity</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1138</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1139</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1140</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1141</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1146</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_158</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        On receiving the EAP Response (Identity), the authenticator shall determine the key
        material for this supplicant but shall not stop operation, if no key material is
        present or the supplicant is unknown.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_127</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        If all the following conditions are met, the authenticator shall sent an EAP Success
        to the supplicant, else an EAP Failure shall be sent:
          - Authentication succeeded.
          - Time measurement succeeded.
          - Measured time is below threshold (threshold is to be agreed upon with the Security
            Architect as it depends on the ECU implementation).
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1154</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The supplicants shall send an EAPoL Logoff as specified in IEEE 802.1X-2004, when
        shutting down and before changing the link state to down.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_789</srcid><srcstatus/><internalId>229</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01038_Ready_ON_2_WAIT_LOGOFF_CONF_Shutdown</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01040_WAIT_LOGOFF_CONF_2_LINK_INACTIVE_RxLogoffConf</srcid><srcstatus/><internalId>613</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0106.EapolLogoff</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_98</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        Every Ethernet ECU shall support the Secure Timing EAP Module.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_1137</srcid><srcstatus/><internalId>28</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_137</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        If not noted otherwise, numbers are represented in network byte order (big endian).
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/DevAuth_Int.h_7</srcid><srcstatus/><internalId>196</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/DevAuth_Lib.h_14</srcid><srcstatus/><internalId>198</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/DevAuth_Lib.h_25</srcid><srcstatus/><internalId>199</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/DevAuth_Lib.h_36</srcid><srcstatus/><internalId>200</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/DevAuth_Lib.h_48</srcid><srcstatus/><internalId>201</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/DevAuth_Lib.h_61</srcid><srcstatus/><internalId>202</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1204</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        Bit 0 is always the most significant bit of a Byte.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_532</srcid><srcstatus/><internalId>246</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1137</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The EAP Module "Secure Timing" supports the following messages:
        - Authenticate ECU is used to authenticate the Supplicant using a symmetric key.
        - Key Exchange is used exchange the symmetric key for the authentication between
          Authenticator and Supplicant and is being used, when the authentication does not work
          (authentication returned status code "no session key"). The Key Exchange is based on the
          ECUs ID certificates.
        - Enable Diagnostics is being used to allow flash update, coding, installation of
          certificates, etc. This needs to be run, if the authentication fails (status code
          "no certificate", the Key Exchange ended because the certificate of the supplicant was
          not trusted).
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_147</srcid><srcstatus/><internalId>57</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_148</srcid><srcstatus/><internalId>59</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_163</srcid><srcstatus/><internalId>60</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_164</srcid><srcstatus/><internalId>62</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_162</srcid><srcstatus/><internalId>63</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_98</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_878</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The EAP-Module Secure Timing shall support fragmentation.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.dsn.Func0107.Fragmentation</srcid><srcstatus/><internalId>396</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_880</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        For fragmentation a more_fragments flag and an optional length shall be used:
        - IEEE 802.1X:
          - Version: 2 (=IEEE 802.1X-2004)
          - Type: 0 (EAP)
          - Length
        - EAP
          - Code: 1 (Request) or 2 (Response)
          - ID: (determined by authenticator)
          - Length
          - Type: 0xfe (expanded)
          - Type-Date/Expanded Type:
            - Vendor ID [3 Bytes]: 0x000201 (BMW)
            - Vendor Type [4 Bytes]: depends on the message
            - Flags [1 Byte]: [ L | M | 6x res ]:
              - Bit 0: L - Length field present.
              - Bit 1: M - More fragments exist. Set 0, if this is the last fragment or message is
                not fragmented.
              - Bit 2 - 7: reserved (set to 0 and ignore on receiving).
            - Length field [2 Bytes]: length of original message in bytes (counting Vendor Data
              only), only present, if L-Flag is 1.
            - Vendor Data:
              - ...
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01098_DiscardMsg_UnsuportedFlags</srcid><srcstatus/><internalId>671</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_531</srcid><srcstatus/><internalId>245</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5380</srcid><srcstatus/><internalId>337</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0107.Fragmentation</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_881</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The length field present bit shall be set for the first and only the first fragment.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01068_FragmentedTx</srcid><srcstatus/><internalId>641</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5203</srcid><srcstatus/><internalId>334</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0107.Fragmentation</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_882</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        Only when the length field present bit is set to one, the length field is present.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01068_FragmentedTx</srcid><srcstatus/><internalId>641</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5204</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0107.Fragmentation</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_883</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The length field shall contain the length in bytes of the original unfragmented message
        (Vendor Data counted only).
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01068_FragmentedTx</srcid><srcstatus/><internalId>641</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5205</srcid><srcstatus/><internalId>336</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0107.Fragmentation</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_884</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        Upon receipt of a packet with the M bit set, the receiver shall transmit an Acknowledgment
        packet. The receiver is responsible for reassembly of fragmented packets.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01061_AuthenticateEcu_FragmentedRx</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01064_FragmentedRx_DiscardRxOnNewMessage</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01077_FragmentedRx_TxAck_Retry</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0107.Fragmentation</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1135</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        Acknowledgment Packets are defined as EAP packets without vendor data and the flags set
        to 0:
        - IEEE 802.1X:
          - Version: 2 (=IEEE 802.1X-2004)
          - Type: 0 (EAP)
          - Length
        - EAP
          - Code: 1 (Request) or 2 (Response)
          - ID: (determined by authenticator)
          - Length
          - Type: 0xfe (expanded)
          - Type-Date/Expanded Type:
            - Vendor ID [3 Bytes]: 0x000201 (BMW)
            - Vendor Type [4 Bytes]: depends on the message
            - Flags [1 Byte]: [ L | M | 6x res ]:
              - With L, M, and res set to 0.
            - Length field [2 Bytes]: not present
            - Vendor Data: empty
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01061_AuthenticateEcu_FragmentedRx</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01064_FragmentedRx_DiscardRxOnNewMessage</srcid><srcstatus/><internalId>637</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0107.Fragmentation</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_136</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        The EAP Request (Secure Timing) shall be filled as follows:
        - IEEE 802.1X:
          - Version: 2 (=IEEE 802.1X-2004)
          - Type: 0 (EAP)
          - Length
        - EAP
          - Code: 1 (Request)
          - ID: (determined by authenticator)
          - Length
          - Type: 0xfe (expanded)
          - Type-Data/Expanded Type:
            - Vendor ID [3 Bytes]: 0x000201 (BMW)
            - Vendor Type [4 Bytes]: 0x3e00 0001 (Authenticate ECU)
            - Flags [1 Byte]: 0x00 (see NET_SEC_880)
            - Length field [2 Bytes]: (not present) (see NET_SEC_880)
            - Vendor Data:
              - Crypto Suite [1 Byte]: (e.g. 0x0a)
              - Nonce1 [4 Bytes]: (strong random number generated by authenticator).
      </description>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_296</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01004_AuthenticateEcu</srcid><srcstatus/><internalId>577</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01030_AuthenticateEcu_BufferNotProvided</srcid><srcstatus/><internalId>603</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0101.AuthenticateEcu</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_138</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        The EAP Response (Secure Timing) shall be filled as follows:
        - IEEE 802.1X:
          - Version: 2 (=IEEE 802.1X-2004)
          - Type: 0 (EAP)
          - Length
        - EAP
          - Code: 2 (Response)
          - ID: (copied over from EAP Request (Secure Timing))
          - Length
          - Type: 0xfe (expanded)
          - Type Data/Expanded Type:
            - Vendor ID [3 Bytes]: 0x000201 (BMW)
            - Vendor Type [4 Bytes]: 0x3e00 0001 (Authenticate ECU)
            - Flags [1 Byte]: (see NET_SEC_880)
            - Length field [2 Bytes]: (see NET_SEC_880)
            - Vendor Data:
              - Status Code [1 Byte]: 0 (0: OK, 1: No Session Key, 2: No Certificate,
                3: Not Activated)
              - Crypto Suite [1 Byte]: (copied from request, e.g. 0x0a)
              - Nonce1 [4 Bytes]: (as determined before by the Authenticator)
              - Nonce2 [4 Bytes]: (as determined before by the Supplicant)
              - Timestamp_Pdelay_Req_received_secs [6 Bytes]
              - Timestamp_Pdelay_Req_received_ns [4 Bytes]
              - Timestamp_Pdelay_Res_sent_secs [6 Bytes]
              - Timestamp_Pdelay_Res_sent_ns [4 Bytes]
              - Configuration Length [4 Bytes]
              - Configuration Data [n Bytes depending on the Configuration Length]
              - Integrity Check Value [depends on the CryptoSuite]
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2607</srcid><srcstatus/><internalId>271</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01004_AuthenticateEcu</srcid><srcstatus/><internalId>577</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01064_FragmentedRx_DiscardRxOnNewMessage</srcid><srcstatus/><internalId>637</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0101.AuthenticateEcu</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1151</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        When the Status Code of the EAP Response: Secure Timing: Authenticate ECU is not 0 (OK),
        the rest of the message shall be skipped.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01074_AuthenticateEcu_NoSessionKey</srcid><srcstatus/><internalId>647</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2683</srcid><srcstatus/><internalId>278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0101.AuthenticateEcu</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_165</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        The Integrity Check Value is calculated over the complete and unfragmented IEEE 802.1X and
        EAP message starting with the 802.1X Version field and ending on the Integrity Check Value.
        This does not include the Ethernet header or trailer.
        Flags is set to 0x00 and Length Field is not present therefore. The 802.1X and EAP length
        are adjusted to fit the completed and unfragmented message.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2609</srcid><srcstatus/><internalId>273</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0101.AuthenticateEcu</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1143</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        If EAP fragmentation is being used, the headers of the first message shall be used for
        determining and checking the ICV.
      </description>
      <comment>
        This requirement is not applicable because is contradicting to the requirement NET_SEC_165.
        If the headers of the first message are to be used, flags would be set to L = 1 and M = 1,
        and 802.1X and EAP length fields would be set to the size of the first fragment.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_166</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The Integrity Check Value field shall be filled with zeros during calculation of itself.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2603</srcid><srcstatus/><internalId>270</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0101.AuthenticateEcu</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_159</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        The following crypto suites shall be supported:
        - 01 - HMAC-SHA1-96 (deprecated)
        - 02 - HMAC-SHA256-96 (default)
      </description>
      <comment>
        According to BMW statement only option 2 shall be supported.
        Crypto suite is configured in Csm job / primitive, which is then referenced by
        DevAuthIcvMacGenerateJobRef.
      </comment>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2666</srcid><srcstatus/><internalId>277</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/DevAuth.xgen_419</srcid><srcstatus/><internalId>388</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/DevAuth.xgen_444</srcid><srcstatus/><internalId>389</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0101.AuthenticateEcu</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_193</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The Configuration Data of the EAP Response (Secure Timing) shall be sent by the supplicant,
        if present.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth.ConfigurationData</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_194</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The Configuration Data of the EAP Response (Secure Timing) shall be used by the
        authenticator to configure its switch, if the complete authentication process
        was a success.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_195</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The Configuration Data is a XML payload that may include:
          - Allowed VLANs - used for VLAN configuration with "untagged" for untagged.
          - PTP configuration ("none", "802.1AS", "DMCS") - used for PTP configuration.
          - Filtering domain (e.g. "Infotainment", "ADAS", ...) - used for Switch
            Firewalling.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth.ConfigurationData</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_394</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The signed Configuration Data artifact is being supplied by BMW.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth.ConfigurationData</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_387</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        The Configuration Data shall be serialized as follows:
          <SecureSwitchPortConfig>
            <ecu-name>...</ecu-name>
            <config-data>
              <vlans>
                <vlan>...</vlan>
                ...
              </vlans>
              <ptp>...</ptp>
              <domains>
                <domain>...</domain>
                ...
              </domains>
            </config-data>
            <SignerCertificate>...</SignerCertificate>
            <SignatureDate>...</SignatureDate>
            <SignatureAlgo>...</SignatureAlgo>
            <Signature>...</Signature>
          </SecureSwitchPortConfig>
        with:
        - ... denoting additional information.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth.ConfigurationData</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_405</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>3</version>
      <description>
        The ecu-name shall be matched against the Location attribute (L) of the partner ECUs
        certificate (see CERT_26 and CERT_27) by the Authenticator, to limit the usage of the
        signed configuration data to the original ECU.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth.ConfigurationData</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_388</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The signature of the Configuration Data shall strip the xml-Element, the xml
        namespaces (xmlns), and line feed (0x0A) as well as carriage return (0x0D) before
        calculating the signature.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth.ConfigurationData</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_389</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The signature of the Configuration Data shall be calculated with an empty Signature-tag
        and shall be put in the Signature-tag as base64 encoded data.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth.ConfigurationData</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_390</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The signature algorithm used shall be of the table in CERT_428.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth.ConfigurationData</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_196</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        Configuration Data example:
          <SecureSwitchPortConfig>
            <ecu-name>HU-MGU_01</ecu-name>
            <config-data>
              <vlans>
                <vlan>untagged</vlan>
                <vlan>73</vlan>
                <vlan>81</vlan>
              </vlans>
              <ptp>802.1AS</ptp>
              <domains>
                <domain>Infotainment</domain>
                <domain>Connectivity</domain>
              </domains>
            </config-data>
            <SignerCertificate>...</SignerCertificate>
            <SignatureDate>...</SignatureDate>
            <SignatureAlgo>...</SignatureAlgo>
            <Signature>...</Signature>
          </SecureSwitchPortConfig>
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth.ConfigurationData</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_145</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        To enable diagnostics and flash updates the authenticator ECU (i.e. the ECU with
        the Switch) shall allow the unauthenticated ECU diagnostics and flash update.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_167</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        The authenticator shall send the EAP Request (Secure Timing: Enable Diagnostics) to the
        supplicant, if the authentication did not succeed (e.g. because the Supplicant sets the
        status code something else than 0 (OK) or 1 (No Key)) and external diagnostics is currently
        available in the vehicle.
        Note:
        Currently external communication is being signaled by the SOME/IP Service for OBD
        Activation Line Status 0x1001).
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_146</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The supplicant shall support external diagnostics and flash update after receiving the
        request for it by the authenticator by:
          - Starting external communication (including but not limited to getting an IP address
            using AutoIP and/or DHCP).
          - Sending the assigned IP address and TCP port number of the diagnostics protocol
            (i.e. HSFZ or DoIP) to the Authenticator.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_148</srcid><srcstatus/><internalId>59</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_1207</srcid><srcstatus/><internalId>87</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0102.EnableDiagnostic</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1182</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_149</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        The authenticator shall implement a minimal Diagnostics Gateway to enable the diagnostics
        and the flash update of its supplicants. This includes but is not limited to adjust filters
        and run SOME/IP-SD for the supplicants HSFZ instance (see NET_SEC_1201 et al.).
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_147</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        The EAP Request (Secure Timing: Enable Diagnostics) shall be filled as follows:
        - IEEE 802.1X:
          - Version: 2 (=IEEE 802.1X-2004)
          - Type: 0 (EAP)
          - Length
        - EAP
          - Code: 1 (Request)
          - ID: (determined by authenticator)
          - Length
          - Type: 0xfe (expanded)
          - Type Data/Expanded Type:
            - Vendor ID [3 Bytes]: 0x000201 (BMW)
            - Vendor Type [4 Bytes]: 0x3e00 0002 (Start Diag)
            - Flags [1 Byte]: 0x00 (see NET_SEC_880)
            - Length field [2 Bytes]: (not present) (see NET_SEC_880)
            - Vendor Data:
              - Reserved [1 Byte]: 0x00
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01062_Ready_ON_2_Ready_ON_EnableDiag</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01151_EnableDiag_NoCallbackConfigured</srcid><srcstatus/><internalId>724</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0102.EnableDiagnostic</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1137</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1141</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1146</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_168</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The supplicant shall answer to an EAP Request (Secure Timing: Enable Diagnostics) after
        obtaining its IP address with an EAP Response (Secure Timing: Enable Diagnostics).
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01062_Ready_ON_2_Ready_ON_EnableDiag</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01063_Ready_OFF_2_Ready_OFF_EnableDiag</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01151_EnableDiag_NoCallbackConfigured</srcid><srcstatus/><internalId>724</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0102.EnableDiagnostic</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1182</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_148</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>3</version>
      <description>
        The EAP Response (Secure Timing: Enable Diagnostics) shall be filled as follows:
        - IEEE 802.1X:
          - Version: 2 (=IEEE 802.1X-2004)
          - Type: 0 (EAP)
          - Length
        - EAP
          - Code: 2 (Response)
          - ID: (copied over from EAP Request (Secure Timing))
          - Length
          - Type: 0xfe (expanded)
          - Type Data/Expanded Type:
            - Vendor ID [3 Bytes]: 0x000201 (BMW)
            - Vendor Type [4 Bytes]: 0x3e00 0002 (Start Diag)
            - Flags [1 Byte]: 0x00 (see NET_SEC_880)
            - Length field [2 Bytes]: (not present) (see NET_SEC_880)
            - Vendor Data:
              - Internal IP Address [4x 1 Byte]: as defined by ECU
              - Internal Diagnostics Port Number [2 Bytes]: as defined for ECU
              - Diagnostics Address [2 Bytes]: as defined for ECU
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01062_Ready_ON_2_Ready_ON_EnableDiag</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01063_Ready_OFF_2_Ready_OFF_EnableDiag</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01151_EnableDiag_NoCallbackConfigured</srcid><srcstatus/><internalId>724</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0102.EnableDiagnostic</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_146</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1137</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1141</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1146</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_163</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The EAP-Module Secure Timing shall able to tunnel a key transport protocol as defined
        by the LH Basic Security Requirements (see CERT_950).
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_164</srcid><srcstatus/><internalId>62</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_162</srcid><srcstatus/><internalId>63</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.SymmetricalKey</srcid><srcstatus/><internalId>546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_169</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        Secure Timing: Key Exchange shall be used after the supplicant responded with an EAP
        Response with status code 1 (no session key) and if a certificate for the supplicant
        is known by the authenticator.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_164</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>3</version>
      <description>
        For tunneling the key exchange for authenticator to supplicant the messages shall be as
        follows:
        - IEEE 802.1X:
          - Version: 2 (=IEEE 802.1X-2004)
          - Type: 0 (EAP)
          - Length
        - EAP
          - Code: 1 (Request)
          - ID: (determined by authenticator)
          - Length
          - Type: 0xfe (expanded)
          - Type Data/Expanded Type:
            - Vendor ID [3 Bytes]: 0x000201 (BMW)
            - Vendor Type [4 Bytes]: 0x3e00 0003 (Key Exchange Tunnel)
            - Flags [1 Byte]: (see NET_SEC_880)
            - Length field [2 Bytes]: (see NET_SEC_880)
            - Vendor Data:
              - Sequence Number [4 Bytes]: a number the authenticator increments to make it unique
              - Length [4 Bytes]
              - Data [dynamic length based on Length field and defined by key transport protocol]
                - ID [4 Byte]: ECU Diagnostic Address of Authenticator in BE format
                - NonceA [4 Bytes, BE]: random number generated by Authenticator
                - KeyRequested [4 Bytes]: 0x01 0x00 0x00 0x00
                - LengthCert [4 Bytes]: number of bytes of the CertA
                - CertA [n Bytes]: Authenticator ID Certificate and Issuer Certificate of it in
                  DER encoding
                - SignatureAlgo [1 Byte]: based in CERT_1192. E.g. 0x71 for ECDSA with SHA-256.
                - Signature [n Bytes]: Signature of message based on CertA.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01079_KeyExchange</srcid><srcstatus/><internalId>652</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01084_KeyExReq_SuppCert_NotValid</srcid><srcstatus/><internalId>657</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01085_KeyExReq_AuthCert_LoadFailed</srcid><srcstatus/><internalId>658</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01086_KeyExReq_AuthCert_VerifyFailed</srcid><srcstatus/><internalId>659</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01087_KeyExReq_AuthSignature_VerifyFailed</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01091_KeyEx_NonceA_Repeated</srcid><srcstatus/><internalId>664</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01099_KeyEx_GenSecret_GetPublicKeyFailed</srcid><srcstatus/><internalId>672</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01100_KeyEx_GenSecret_SecretCalcFailed</srcid><srcstatus/><internalId>673</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01101_KeyEx_GenSecret_GetSecretValueFailed</srcid><srcstatus/><internalId>674</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01102_KeyEx_GenSymKey_RandomNumberGenFailed</srcid><srcstatus/><internalId>675</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01103_KeyEx_GenSymKey_LoadSymetricalKeyFailed</srcid><srcstatus/><internalId>676</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01104_KeyEx_GenEpheKeyPair_GetEphePubKeyFailed</srcid><srcstatus/><internalId>677</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01105_KeyEx_GenEpheKeyPair_LoadEphePubKeyFailed</srcid><srcstatus/><internalId>678</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01106_KeyEx_GenEpheKeyPair_GetEphePrivKeyFailed</srcid><srcstatus/><internalId>679</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01107_KeyEx_GenEpheKeyPair_LoadEphePrivKeyFailed</srcid><srcstatus/><internalId>680</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01108_KeyEx_DeriveKmacKenc_Failed</srcid><srcstatus/><internalId>681</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01109_KeyEx_EncryptSymKey_EncryptFailed</srcid><srcstatus/><internalId>682</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01110_KeyEx_EncryptSymKey_InvalidLengthReturned</srcid><srcstatus/><internalId>683</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01111_KeyEx_GenerateTMac_MacGenerateFailed</srcid><srcstatus/><internalId>684</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01112_KeyEx_GenerateTMac_MacGenerateInvalidLength</srcid><srcstatus/><internalId>685</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01113_KeyEx_VerifySignature_UnsupportedSignatureAlgo</srcid><srcstatus/><internalId>686</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01114_KeyEx_CertLengthInvalid_4ByteLength</srcid><srcstatus/><internalId>687</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01115_KeyEx_MissingSequenceTag</srcid><srcstatus/><internalId>688</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01116_KeyEx_LoadAuthCertFailed</srcid><srcstatus/><internalId>689</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01117_KeyEx_LoadAuthCert_AuthCert1ParseFailed</srcid><srcstatus/><internalId>690</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01118_KeyEx_VerifyAuthCert_L3L2Failed</srcid><srcstatus/><internalId>691</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01119_KeyEx_VerifyAuthCert_GetAuthPubKeyFailed</srcid><srcstatus/><internalId>692</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01120_KeyEx_SuppL3Cert_ParseFailed</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01121_KeyEx_FillCertB_GetSuppL4Failed</srcid><srcstatus/><internalId>694</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01122_KeyEx_AcceptableSender_GetAuthCertSubjectFailed</srcid><srcstatus/><internalId>695</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01123_KeyEx_AcceptableSender_GetSuppCertSubjectFailed</srcid><srcstatus/><internalId>696</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01145_KeyEx_ParseCertSubject_FieldMismatch</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01147_KeyEx_ReqMsgLengthSmallerThanMinimum</srcid><srcstatus/><internalId>720</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01156_KeyEx_CertLengthBytes</srcid><srcstatus/><internalId>729</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1137</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_163</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1139</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1140</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_162</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>3</version>
      <description>
        For tunneling the key exchange for supplicant to authenticator the messages shall be as
        follows:
        - IEEE 802.1X:
          - Version: 2 (=IEEE 802.1X-2004)
          - Type: 0 (EAP)
          - Length
        - EAP
          - Code: 2 (Response)
          - ID: (copied over from EAP Request)
          - Length
          - Type: 0xfe (expanded)
          - Type Data/Expanded Type:
            - Vendor ID [3 Bytes]: 0x000201 (BMW)
            - Vendor Type [4 Bytes]: 0x3e00 0003 (Key Exchange Tunnel)
            - Flags [1 Byte]: (see NET_SEC_880)
            - Length field [2 Bytes]: (see NET_SEC_880)
            - Vendor Data:
              - Sequence Number [4 Bytes] (copied over from EAP Request)
              - Length [4 Bytes]
              - Data [dynamic length based on Length field and defined by the key transport protocol]
                - ID [4 Byte]: ECU Diagnostic Address of Supplicant in BE format
                - NonceA [4 Bytes, BE]: random number generated by Authenticator, copied over from
                  request.
                - NonceB [4 Bytes, BE]: random number generated by Supplicant
                - LengthEncryptedData [4 Bytes, BE]: length of next field
                - EncryptedData [n Bytes]:
                  - KeyID [1 Byte]: 0x01
                  - Key [n Bytes]: symmetric key
                - LengthCert [4 Bytes]: number of bytes of the CertB
                - CertB [n Bytes]: Supplicant ID Certificate and Issuer Certificate of it in DER
                  encoding
                - SignatureAlgo [1 Byte]: based in CERT_1192. e.g. 0x71 for ECDSA with SHA-256.
                - Signature [n Bytes]: Signature of message based on CertB.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01079_KeyExchange</srcid><srcstatus/><internalId>652</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01091_KeyEx_NonceA_Repeated</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1137</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_163</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1139</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1140</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1144</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        For the Key Exchange messages all checks specified in CERT_950 shall be fulfilled. The
        checks shall include checking the peers certificate.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.EB.DevAuthAcceptableAuthenticators_Conf</srcid><srcstatus/><internalId>539</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.CERT_958.CheckAcceptableAuthenticator</srcid><srcstatus/><internalId>540</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.CERT_958.CheckNonceA</srcid><srcstatus/><internalId>541</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.CERT_958.KeyRequestedValid</srcid><srcstatus/><internalId>542</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.CERT_958.SignatureValid</srcid><srcstatus/><internalId>543</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.CheckPreloadedCertificates</srcid><srcstatus/><internalId>544</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.KeyExchangeReq.CheckAuthCertificates</srcid><srcstatus/><internalId>545</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1209</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        For ECIES (CERT_1894) only the following parameters/variants shall be supported:
        - According to IEEE 1363a.
        - Key agreement: ECC Diffie-Hellman (ECDH).
        - Key derivation function (KDF): X9.63 with SHA-512
          - input: secret generated with DH key agreement, no shared info
          - output: K = KENC | KMAC (Length of K = 256/8 + 512/8 = 96 bytes)
        - Symmetric cipher: AES-CBC 256 bit (Key = KENC, IV = 0x00)
        - HMAC: SHA-512 (Key = KMAC)
          - input: encrypted message C
          - output: mac T
        - The encoding of the ECIES cryptogram shall be: ECIES cryptogram = (V | C | T), with:
          - V = public key of ephemeral key pair
          - C = encrypted message
          - T = tag/mac of the message (64 byte for SHA-512)
        - The ephemeral public key can be encoded as an uncompressed EC point or a compressed
          EC point. The type is encoded in the first byte of V:
          - 0x02 or 0x03: compressed EC point, length of V is 1 + length of one coordinate
          - 0x04: uncompressed EC point, length of V is 1 + 2 * length of one coordinate

        Note: For additional information check the current Cryptographic Policy.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01079_KeyExchange</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_134</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The PTP messages for the Secure Timing module shall follow the IEEE 802.1AS Pdelay request
        and response sequence.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for DevAuth
        implementation.
        PTP message handling is implemented by EthTSyn module.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_139</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The PTP messages for the Secure Timing module shall include IEEE 1588-2008
        Authentication_Challenge TLVs (Annex K).
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for DevAuth
        implementation.
        PTP message handling is implemented by EthTSyn module.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_411</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>3</version>
      <description>
        AUTHENTICATION_CHALLENGE TLV (everything in Big Endian format):
          - tlvType [2 Bytes]: AUTHENTICATION_CHALLENGE (0x20 0x01)
          - lengthField [2 Bytes]: 14
          - challengeType [1 Byte]: (0x00 ChallengeRequest for messages Authenticator -&gt;
            Supplicant, 0x02 challengeResponse for Supplicant -&gt; Authenticator)
          - reserved [1 Byte]: 0x00
          - requestNonce [4 Bytes]: (Identical to Nonce1 in EAP messages.
            Selected by authenticator.)
          - responseNonce [4 Bytes]: (Identical to Nonce2 in EAP messages. 0, until supplicant sends
            first message.)

        Note: While we use the experimental AUTHENTICATION_CHALLENGE_TLV format of IEEE 1588-2008,
        we do not use it exactly is intended (no copying of Nonces, etc.).
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for DevAuth
        implementation.
        PTP message handling is implemented by EthTSyn module.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_141</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The challenge nonces shall be used for the complete Pdelay exchange (i.e. authenticator
        chooses Nonce1 in EAP Request before, supplicant when receiving messages from
        authenticator).
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01004_AuthenticateEcu</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2126</srcid><srcstatus/><internalId>250</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_140</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        Challenge nonces shall be random and collisions shall be avoided.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01004_AuthenticateEcu</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2127</srcid><srcstatus/><internalId>251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1145</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        Nonces shall be checked and message ignored, if the nonce is not correct.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01022_AuthenticateEcu_IncorrectNonce</srcid><srcstatus/><internalId>595</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_143</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The PTP module of the Authenticator and Supplicant shall interface with the local EAP
        Secure Timing Module by exchanging at least the timestamps and challenge nonces.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01004_AuthenticateEcu</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_352</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_402</srcid><srcstatus/><internalId>217</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2124</srcid><srcstatus/><internalId>248</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2181</srcid><srcstatus/><internalId>252</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1205</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The Authenticator shall not send pDelay messages in parallel to the pDelay messages with the
        Authentication Challenge TLV used by this specification since that would break the
        measurement of the delay.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1164</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The supplicant will change the behavior based upon, if ECU Authentication is enabled or
        disabled (see Diagnostics in NET_SEC_450).
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01052_AuthenticateEcu_NotActivated</srcid><srcstatus/><internalId>625</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1208</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The integrator shall make sure that the NM timings and similar are long enough to keep the
        ECU alive, while the authentication runs.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_133</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        If ECU Authentication is enabled, the supplicant shall send an EAPoL-Start after the
        Ethernet link is online.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01000_FirstEapolStartTx</srcid><srcstatus/><internalId>573</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01027_ProvideTxBuffer_BUFREQ_E_NOT_OK</srcid><srcstatus/><internalId>600</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0111.EapolStart</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1161</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The EAPoL-Start shall be resend, if no answer (e.g., EAP Request (Identity or EAP Success).
        See NET_SEC_183.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_183</srcid><srcstatus/><internalId>125</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01037_SEND_EAPOL_START_2_Ready_ON_RxEapSuccess</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01127_SEND_EAPOL_START_2_READY_ON_AuthRespTimeout</srcid><srcstatus/><internalId>700</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0111.EapolStart</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1165</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        If ECU Authentication is disabled, the Supplicant shall start up the system as usual.
      </description>
      <comment/>
      <verifycrit>
        Verify this requirement by testing that all communication (including non-EAP traffic)
        will be enabled when link goes active while authentication is disabled.
      </verifycrit>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01128_Initial_2_AUTH_STOPPED</srcid><srcstatus/><internalId>701</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1176</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        After not receiving an answer to EAPoL-Start and its retries (total of 3 secs),
        the ECU shall start the following:
        - Activate communications as after a EAP Success.
        - Activate diagnostics by allowing access to the Diagnostic Ports (e.g., HSFZ-internal: 6801/tcp on vlan 0x49).
        - Announce the diagnostic port (e.g., using SOME/IP Service 0x1002 HSFZ-internal).
        - Listen to the status of the activation line (SOME/IP Service 0x1001 ActivationLine) to enable the external interface (vlan: untagged).
        Note: This allows to access the ECUs diagnostics even, when no authenticator is present.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth_NET_SEC_1176</srcid><srcstatus/><internalId>184</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.EB.NET_SEC_1176</srcid><srcstatus/><internalId>548</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_171</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        The supplicant shall answer an EAP Request (Identity) with an EAP Response (Identity)
        with its ECU-UID as text string.
        Note: This is true, no matter if ECU Authentication is enabled.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01003_EapIdentity</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01026_MessageReTransmission</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01031_EapRespIdentity_BufferNotProvided</srcid><srcstatus/><internalId>604</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0105.EapIdentity</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1177</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        When a EAP Success is received the system shall enable all communications as it would have
        done with the link up in the scenario with ECU Authentication disabled.
        Note: This is true, no matter if ECU Authentication is enabled.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01006_Ready_EapSuccess</srcid><srcstatus/><internalId>579</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01037_SEND_EAPOL_START_2_Ready_ON_RxEapSuccess</srcid><srcstatus/><internalId>610</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4469</srcid><srcstatus/><internalId>306</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4683</srcid><srcstatus/><internalId>320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0108.EapSuccess</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1160</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1178</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        If ECU Authentication is enabled, receiving an EAP Failure shall do the following:
        - Record the error for further analysis.
        - Restart with a EAPoL-Start after a timeout of 60s.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth_NET_SEC_1178</srcid><srcstatus/><internalId>185</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.EB.NET_SEC_1178</srcid><srcstatus/><internalId>549</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1180</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        If ECU Authentication is disabled, an incoming EAP Failure shall be ignored.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5017</srcid><srcstatus/><internalId>332</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01136_Ready_OFF_2_Ready_OFF_EapFailure</srcid><srcstatus/><internalId>709</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0109.EapFailure</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1179</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        When ECU Authentication is disabled, the Supplicant shall answer with Status Code "03:
        not activated".
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01052_AuthenticateEcu_NotActivated</srcid><srcstatus/><internalId>625</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2648</srcid><srcstatus/><internalId>274</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0101.AuthenticateEcu</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1181</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        When ECU Authentication is enabled, the Supplicant will wait for the PTP exchange to finish
        (see NET_SEC_176), generate the response, and sent it out.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01004_AuthenticateEcu</srcid><srcstatus/><internalId>577</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01061_AuthenticateEcu_FragmentedRx</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01137_FragmentedRx_IgnorePadding</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1182</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        On receiving EAP Secure-Timing: Enable Diagnostics request, the Supplicant shall do the
        following:
        - Activate diagnostics by allowing access to the Diagnostic Ports (e.g., HSFZ-internal:
          6801/tcp on vlan 0x49). This can be achieved by activating the complete communication.
        - Assume that the Activation Line is active and has a linkup. So external diagnostics is
          being enabled.
        - Answer the EAP Secure-Timing: Enable Diagnostics request based on the addresses of the
          diagnostic endpoints.
        Note: This is true, no matter if ECU Authentication is enabled.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_146</srcid><srcstatus/><internalId>55</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_168</srcid><srcstatus/><internalId>58</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0102.EnableDiagnostic</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>

    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1207</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        Hint for AUTOSAR implementers and integrators.
        To activate external diagnostics, the following is recommended:
        - The Basic Software Modul for the 802.1X/EAP handling shall allow registering a callback,
          which is being call upon receiving the Enable Diagnostics message.
        - The integrator shall connect this callback to the following call of EthDiagMM:
        - void EthDiagMM_GenericNotifyActivationLineMessage(const EthDiagMM_ActivationLineMessage*
          message)
        - Payload shall be based on the current FIBEX configuration for Service Interface
          ActivationWireExtDiag (currently 0x01 0x01 for Link Up and ActivationWire high).
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_1207.Supplicant</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0102.EnableDiagnostic</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_146</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1207.Supplicant</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        Hint for AUTOSAR implementers and integrators.
        To activate external diagnostics, the following is recommended:
        - The Basic Software Modul for the 802.1X/EAP handling shall allow registering a callback,
          which is being call upon receiving the Enable Diagnostics message.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.EB.User_DevAuthEnableDiagCallback</srcid><srcstatus/><internalId>526</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0102.EnableDiagnostic</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1207</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1207.Integrator</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        Hint for AUTOSAR implementers and integrators.
        To activate external diagnostics, the following is recommended:
        - The integrator shall connect EnableDiagnostic callback to the following call of EthDiagMM:
        - void EthDiagMM_GenericNotifyActivationLineMessage(const EthDiagMM_ActivationLineMessage*
          message)
        - Payload shall be based on the current FIBEX configuration for Service Interface
          ActivationWireExtDiag (currently 0x01 0x01 for Link Up and ActivationWire high).
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1183</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        When ECU Authentication is active, the EAP Secure-Timing: Key Exchange message shall be
        answered to exchange a key.
      </description>
      <comment/>
      <verifycrit>
        Test the following use cases:
        - Response on key exchange request in case authentication is enabled
        - Ignore of EAP-Request(Key exchange) when authentication is disabled.
      </verifycrit>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01079_KeyExchange</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1198</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        When ECU Authentication is active, but the supplicant does not have a certificate, it shall
        answer with the following vendor data:
        - Sequence number copied over from request.
        - Length set to 0.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01084_KeyExReq_SuppCert_NotValid</srcid><srcstatus/><internalId>657</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_174</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The supplicant shall answer the PTP Pdelay exchange as specified in the standard and use
        a fresh Nonce for it.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for DevAuth
        implementation. PTP message handling is implemented by EthTSyn module.
        The requirement to use fresh Nonce is covered by NET_SEC_140.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_177</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The supplicant shall save the timestamps t2 (Pdelay request received) and t3
        (Pdelay response sent).
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01004_AuthenticateEcu</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2125</srcid><srcstatus/><internalId>249</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2200</srcid><srcstatus/><internalId>253</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0101.AuthenticateEcu</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_176</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The supplicant shall send an EAP Response (Secure Timing: Authenticate ECU) when the
        timestamps t2 and t3 are available and use those as well as the nonces for  building
        the message.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01004_AuthenticateEcu</srcid><srcstatus/><internalId>577</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01022_AuthenticateEcu_IncorrectNonce</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01124_AuthECU_ReqNonceDoesntMatchRespNonce</srcid><srcstatus/><internalId>697</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01148_AuthenticateEcu_ReqMsgLengthSmallerThanMinimum</srcid><srcstatus/><internalId>721</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2608</srcid><srcstatus/><internalId>272</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0101.AuthenticateEcu</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1184</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        When ECU Authentication is active, the Supplicant shall sent out a EAP Logoff, before taking
        down the Ethernet Link or rebooting.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01038_Ready_ON_2_WAIT_LOGOFF_CONF_Shutdown</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0106.EapolLogoff</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1185</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The Authenticator will change the behavior based upon, if ECU Authentication is enabled or
        disabled (see Diagnostics in NET_SEC_450).
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1213</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The authenticator should use the built-in EAP features or modes of a switch.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1214</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The authenticator shall setup Switch-based filtering to achieve the requirements of this
        specification.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1215</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        Example rules for Ethernet Switch based filtering (processing in order as presented here):
        - Rule: Do not allow the supplicant to open a diagnostic connection:
          - Ports: Supplicants -&gt; *
          - L2: vlan=0x49/internal or vlan=0x45/external
          - L4: sourceport=Diagport (currently: 6801/tcp), Syn=1, Ack=0
          - Action: Drop
        - Rule: Internal Diagnostics opened by GW is accepted (uplink):
          - Ports: Supplicants -&gt; Uplink
          - L2: vlan=0x49/internal
          - L3: destip=GW (as of time of writing: 160.48.199.16)
          - L4: sourceport=Diagport (currently: 6801/tcp)
          - Action: Accept/EAP_Bypass
        - Rule: Internal Diagnostics opened by GW is accepted (downlink):
          - Ports: Uplink -&gt; Supplicants
          - L2: vlan=0x49/internal
          - L3: srcip=GW (as of time of writing: 160.48.199.16)
          - L4: destport=Diagport (currently: 6801/tcp)
          - Action: Accept/EAP_Bypass
        - Rule: NM bypass:
          - Ports: Uplink -&gt; Supplicants
          - L2: vlan=0x49/internal
          - L3: srcip=GW (as of time of writing: 160.48.199.16)
          - L4: destport=NM-Port (currently: 30500/udp)
          - Action: Accept/EAP_Bypass
        - Rule: link local addressing bypass:
          - Ports: Supplicants -&gt; Uplink or Uplink -&gt; Supplicants
          - L2: vlan=0x45 (external), proto=0x0806 (arp)
          - Action: Accept/EAP_Bypass
        - Rule: External Diagnostics is accepted (uplink):
          - Ports: Supplicants -&gt; Uplink
          - L2: vlan=0x45/external
          - L4: sourceport=Diagport (currently: 6801/tcp)
          - Action: Accept/EAP_Bypass
        - Rule: External Diagnostics is accepted (downlink):
          - Ports: Uplink -&gt; Supplicants
          - L2: vlan=0x45/external
          - L4: destport=Diagport (currently: 6801/tcp)
          - Action: Accept/EAP_Bypass
        - Additional rules or configurations for routing the pDelay messages (01-80-C3-00-00-0E) to
          the microcontroller may apply.
        Note: Uplink denotes the switch port towards the OBD connector. Supplicants denotes the
              switch port towards the supplicants. Micro denotes the switch port towards the micro
              controller that implements the EAP features.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1196</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        If ECU Authentication is enabled, the authenticator shall filter the communication of the
        supplicant, so that the supplicant can only communicate to the authenticator.
        Note: For the startup the Authenticator should only allow EAP and PTP on the untagged
              Ethernet and drop everything else.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1195</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        If ECU Authentication is disabled, the authenticator shall not filter the communication of
        the supplicant.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1194</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        If ECU Authentication is enabled and the Ethernet link to the supplicant came up, the
        authenticator shall even start the Identity Exchange without receiving an EAPoL-Start.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_170</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        If ECU Authentication is enabled, the authenticator shall start the Identity Exchange after
        receiving an EAPoL-Start by sending out the EAP Request (Identity).
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1193</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        If ECU Authentication is disabled, the authenticator shall answer the EAPoL-Start with EAP
        Success.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_172</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        When the authenticator receives an EAP Response (Identity), it shall use it to determine
        the keys of the client and send an EAP Request (Secure Timing: Authenticate ECU) with a
        random Nonce and the configured crypto suite.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_173</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        The authenticator shall start a PTP Pdelay exchange and sent out the EAP Request
        (Secure Timing: Authenticate ECU) with the same Nonce used for it.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_175</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The authenticator shall record the timestamps t1 (Pdelay request sent) and t4
        (Pdelay response received).
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_178</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        Upon receiving an EAP Response (Secure Timing: Authenticate ECU) the authenticator shall
        compare the PTP timestamps with t2 and t3.
        If the timestamps match, the authenticator shall calculate the delay between authenticator
        and client:
        - T1 = t4-t1
        - T2 = t3-t2
        - Delay = T1 - T2

        If the timestamps don't match, the EAP message shall be ignored and a new EAP exchange
        shall be started.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_179</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The authenticator shall compare the measured delay with the threshold as agreed upon with
        the BMW Security Architects.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_180</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The threshold shall be small enough to successfully detect at least two back-to-back
        Ethernet Transceivers connected between supplicant and authenticator, if those transceivers
        are configured for minimum latency (e.g. PTP timestamping off).
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_181</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        A typical threshold is in the area of 800ns - 2us.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1201</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        On receiving the Enable Diagnostics response, the authenticator shall do the following:
        - Update the filters to enable access to the internal and external diagnostics port based on
          the IP and port number present in the response.
        - Send out SOME/IP-SD messages for the supplicant to allow the diagnostic gateway to find
          out the IP and port number of the supplicant (SOME/IP Service 0x1002 HSFZ-Intern with the
          Instance ID, IP-Address, Portnumber supplied by the supplicant, if this Instance ID was
          not yet supplied by another ECU. This includes using the MAC address of the supplicant for
          the SOME/IP-SD messages.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1199</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        When ECU Authentication is enabled, the authenticator shall check the incoming message:
        - Check that the sequence number matches the sequence number of the request.
        - Check Signer Certificate and Path to root (correct root, correct signatures, ...).
        - Check Subject Common Name to start with "ID".
        - Check Signature of message.
        - Check that Key(s) can be decrypted.
        - Check that requested Key IDs are present.
        If everything is OK, install the key and send out a Secure Timing: Authenticate ECU request.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
        Note: This relates to reacting to Secure Timing: Key Exchange response.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1200</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        When ECU Authentication is enabled the authenticator shall check that the following is true:
        - Vendor Data present and contains only Sequence Number and Length.
        - Length is 0.
        If this is true, send out EAP Secure Timing: Enable Diagnostics.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1202</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        When ECU Authentication is enabled, the authenticator shall do the following on shutdown:
        - Pull Ethernet Link to supplicant down.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_157</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The following figure shows an exemplary successful message exchange for authenticating an
        ECU.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_1160</srcid><srcstatus/><internalId>117</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1160</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The flow in Figure NET_SEC_101 is as follows:
        - The supplicant starts with the EAPoL-Start after the link comes up.
        - The authenticator answers the EAPoL-Start with the EAP Request (Identity).
        - The supplicant answers with its Identity (EAP Response (Identity).
        - Based on the Identity the Authenticator can determine the key material and configuration
          of the supplicant.
        - The Authenticator starts the EAP-Request (Secure Timing: Auth ECU) and the PTP to
          determine the path delay.
        - The Supplicant reacts on the PTP Pdelay_Req with Pdelay_Res and Pdelay_Res_FollowUp.
        - The Supplicant generates the EAP Response (Secure Timing: Auth ECU) based on the Request
          and the Timestamps of the PTP messages.
        - The Authenticator checks the ICV and the timings to decide, if everything is OK and
          sending out the EAP-Success.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_1177</srcid><srcstatus/><internalId>81</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_1138</srcid><srcstatus/><internalId>119</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_157</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1148</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        In this section example message flows are presented.
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1138</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        Message flow: Regular Authentication:
        - Supplicant: EAPoL Start (optional)
        - Authenticator: EAP Request Identity
        - Supplicant: EAP Response Identity
        - Authenticator: EAP Secure Timing: Authenticate ECU Request
        - PTP exchange
        - Supplicant: EAP Secure Timing: Authenticate ECU Response (Status Code 0 OK)
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_116</srcid><srcstatus/><internalId>14</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_120</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_122</srcid><srcstatus/><internalId>21</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01004_AuthenticateEcu</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1160</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1139</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        Message flow: Symmetric Key not present at Supplicant:
        - Supplicant: EAPoL Start (optional)
        - Authenticator: EAP Request Identity
        - Supplicant: EAP Response Identity
        - Authenticator: EAP Secure Timing: Authenticate ECU Request
        - PTP exchange
        - Supplicant: EAP Secure Timing: Authenticate ECU Response (Status Code 1 No Session Key)
        - Authenticator: EAP Secure Timing: Key Exchange Request
        - Supplicant: EAP Secure Timing: Key Exchange Response
        - Authenticator: EAP Secure Timing: Authenticate ECU Request
        - PTP exchange
        - Supplicant: EAP Secure Timing: Authenticate ECU Response (Status Code 0 OK)
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_116</srcid><srcstatus/><internalId>14</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_120</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_122</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_164</srcid><srcstatus/><internalId>62</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_162</srcid><srcstatus/><internalId>63</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_183</srcid><srcstatus/><internalId>125</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01004_AuthenticateEcu</srcid><srcstatus/><internalId>577</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01074_AuthenticateEcu_NoSessionKey</srcid><srcstatus/><internalId>647</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1140</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        Message flow: Authentication fails with wrong ICV:
        - Supplicant: EAPoL Start (optional)
        - Authenticator: EAP Request Identity
        - Supplicant: EAP Response Identity
        - Authenticator: EAP Secure Timing: Authenticate ECU Request
        - PTP exchange
        - Supplicant: EAP Secure Timing: Authenticate ECU Response (Status Code 0 OK) - ICV check fails at Authenticator
        - Authenticator: EAP Secure Timing: Key Exchange Request
        - Supplicant: EAP Secure Timing: Key Exchange Response
        - Authenticator: EAP Secure Timing: Authenticate ECU Request
        - PTP exchange
        - Supplicant: EAP Secure Timing: Authenticate ECU Response (Status Code 0 OK)
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_116</srcid><srcstatus/><internalId>14</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_120</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_122</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_164</srcid><srcstatus/><internalId>62</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_162</srcid><srcstatus/><internalId>63</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_183</srcid><srcstatus/><internalId>125</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01004_AuthenticateEcu</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1141</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        Message flow: Certificate missing on Supplicant:
        - Supplicant: EAPoL Start (optional)
        - Authenticator: EAP Request Identity
        - Supplicant: EAP Response Identity
        - Authenticator: EAP Secure Timing: Authenticate ECU Request
        - PTP exchange
        - Supplicant: EAP Secure Timing: Authenticate ECU Response (Status Code 2 No Certificate)
        - Authenticator:EAP Secure Timing: Enable Diagnostics Request
        - Supplicant: EAP Secure Timing: Enable Diagnostics Response
        - ...
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_116</srcid><srcstatus/><internalId>14</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_120</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_122</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_147</srcid><srcstatus/><internalId>57</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_148</srcid><srcstatus/><internalId>59</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_183</srcid><srcstatus/><internalId>125</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01126_AuthenticateEcu_NoCertificate</srcid><srcstatus/><internalId>699</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1146</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        Message flow: ECU Authentication active on Authenticator but not on Supplicant:
        - Supplicant: EAPoL Start (optional)
        - Authenticator: EAP Request Identity
        - Supplicant: EAP Response Identity
        - Authenticator: EAP Secure Timing: Authenticate ECU Request
        - PTP exchange
        - Supplicant: EAP Secure Timing: Authenticate ECU Response (Status Code 3 Not activated)
        - Authenticator:EAP Secure Timing: Enable Diagnostics Request
        - Supplicant: EAP Secure Timing: Enable Diagnostics Response
        - ...
      </description>
      <comment>
        In case authentication is disabled supplicant will not transmit EAPoL-Start messages, i.e.
        the first line of message sequence is incorrect.
      </comment>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_116</srcid><srcstatus/><internalId>14</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_120</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_122</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_147</srcid><srcstatus/><internalId>57</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_148</srcid><srcstatus/><internalId>59</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_183</srcid><srcstatus/><internalId>125</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01050_READY_OFF_RxIdentityReq</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01052_AuthenticateEcu_NotActivated</srcid><srcstatus/><internalId>625</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1149</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        Message flow: ECU Authentication active on Supplicant but not on Authenticator
        - Supplicant: EAPoL Start (optional)
        - timeout
        - Supplicant: EAPoL Start (optional) [retry after timeout]
        - timeout
        - Supplicant: EAPoL Start (optional) [retry after timeout]
        - timeout
        - Supplicant starting regular communication
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_116</srcid><srcstatus/><internalId>14</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_183</srcid><srcstatus/><internalId>125</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.NET_SEC_1176</srcid><srcstatus/><internalId>548</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_183</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        If the supplicant does not receive any EAP message after sending out the EAPoL Start for
        100ms, it shall repeat the EAPoL start but doubling the timeout until it stays at 800ms
        (i.e. 100ms, 200ms, 400ms, 800ms, 800ms, ...).
        Note: Depending on the implementation used the timings may be adapted after consulting the
              central security architects.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01002_RepeatEapolStartTx</srcid><srcstatus/><internalId>575</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01157_AllConfiguredCtrls_EAPoLStart_RxIdentity</srcid><srcstatus/><internalId>730</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/DevAuth_Cfg.h.m4_32</srcid><srcstatus/><internalId>186</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0111.EapolStart</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1161</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1139</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1140</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1141</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1146</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1149</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_184</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        After the Identity exchange the supplicant shall have a timeout of 2s before restarting
        the overall method by sending an EAPoL Start.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01019_READY_ON_2_SEND_EAPOL_START_AuthSessionTimeout</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01021_RestartAuthenticationSessionTimeout</srcid><srcstatus/><internalId>594</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/DevAuth_Cfg.h.m4_39</srcid><srcstatus/><internalId>187</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_187</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The supplicant shall answer to the EAP Request (Secure Timing: Authenticate ECU) with the
        Status Code 1 (No Session Key), if no session key with Authenticator was exchanged.
      </description>
      <comment/>
      <verifycrit>
        Test the following use cases:
        1) When EAP-Request(AuthEcu) is called before successful key exchange was performed.
        2) When Csm_MacGenerate() called in the context of EAP-Response(AuthEcu) generation:
          - Returns the value other then E_OK.
          - Returns the value of output parameter macLengthPtr other then the configured value of
            Icv length (/CsmMacGenerate/CsmMacGenerateConfig/CsmMacGenerateResultLength).
      </verifycrit>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01074_AuthenticateEcu_NoSessionKey</srcid><srcstatus/><internalId>647</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01125_KeyEx_TxAuthEcuResp_GenICVFailed</srcid><srcstatus/><internalId>698</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2658</srcid><srcstatus/><internalId>276</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0101.AuthenticateEcu</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_188</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The supplicant shall answer to the EAP Request (Secure Timing: Authenticate ECU) with the
        Status Code 2 (No Certificate), if its certificates or bindings are not present.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01126_AuthenticateEcu_NoCertificate</srcid><srcstatus/><internalId>699</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2653</srcid><srcstatus/><internalId>275</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0101.AuthenticateEcu</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_189</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The authenticator shall start the "Secure Timing: Enable Diagnostics" exchange, if the
        supplicant answers with Status Code 2 to an EAP Request (Secure Timing: Authenticate ECU)
        or if it determines after the identity exchange that the certificate or the binding
        for this supplicant is not present.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_191</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        If the authenticator is trying to start the "Secure Timing: Enable Diagnostics" exchange but
        external diagnostics are not present, it shall retry 3 times with a 1s timeout and send an
        EAP Failure, if external diagnostics did not come available.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_190</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The authenticator shall start the "Secure Timing: Key Exchange" exchange, if the supplicant
        answers with Status Code 1 to an EAP Request (Secure Timing: Authenticate ECU) or if it
        determines after the identity exchange that the session key for this supplicant is not
        present.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_192</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The authenticator shall send an EAP Failure, if:
        - the integrity check value in the EAP Request (Secure Timing: Authenticate ECU) was not
          verified correctly,
        - the nonces in the EAP Request (Secure Timing: Authenticate ECU) were not correct,
        - the delay between authenticator and supplicant could not be calculated, and
        - the delay between authenticator and supplicant was higher than the determined threshold.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_451</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        ECUs shall support explicit configuration of the ECU Authentication features, so that it can
        be controlled when 802.1X and EAP startup.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_459</srcid><srcstatus/><internalId>137</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0112.AuthenticationJobs</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_452</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        ECUs shall be shipped with 802.1X and EAP turned off.
      </description>
      <comment>This requirement is informational only. </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_454</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        The state machine covers the following behavior, which needs to be implemented by the ECU:
        - The job ECU_AUTH_START moves the state machine from "ECU Auth stopped" to
          "ECU Auth started". The feature is now running.
        - The joy ECU_AUTH_STOP moves the state machine from "ECU Auth started" to
          "ECU Auth stopped", if the state machine is not in state LOCKED.
        - The job ECU_AUTH_LOCK moves the state machine from "ECU Auth unlocked" to
          "ECU Auth locked". Now the job ECU_AUTH_STOP is not accepted anymore.
      </description>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2236</srcid><srcstatus/><internalId>254</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2270</srcid><srcstatus/><internalId>257</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2305</srcid><srcstatus/><internalId>260</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.EB.ClientSM</srcid><srcstatus/><internalId>404</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0112.AuthenticationJobs</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_665</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The following DTCs are active at the following states:
        - DTC ECU_AUTH_NOT_STARTED (see NET_SEC_652) shall be active, when the state machine is not
          in the state "ECU Auth started".
        - DTC ECU_AUTH_NOT_LOCKED (see NET_SEC_655) shall be active, when the state machine is not
          in the state "ECU Auth locked".
        - DTC ECU_AUTH_ERROR_OCCURRED (see NET_SEC_658) shall be active, when errors occur. This is
          independent to the state of the state machine.
      </description>
      <comment>
        ECU_AUTH_ERROR_OCCURRED is according to NET_SEC_659 only implemented on authenticator side.
      </comment>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4037</srcid><srcstatus/><internalId>287</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4062</srcid><srcstatus/><internalId>288</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4087</srcid><srcstatus/><internalId>289</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01054_EcuAuthStop_ALREADY_RUNNING</srcid><srcstatus/><internalId>627</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0113.AuthenticationDTC</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_459</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        ECUs implementing ECU Authentication shall support diagnostic jobs to control, whether
        802.1X and EAP are running.
      </description>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_463</srcid><srcstatus/><internalId>140</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_524</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_585</srcid><srcstatus/><internalId>146</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0112.AuthenticationJobs</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_451</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_460</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The state whether the ECU Authentication is started or stopped as well as the state whether
        ECU Authentication is locked shall be stored in a persistent manner.
        Note: The ECU shall be in the same state after a Reset, Flash-Update, Coding, etc..
      </description>
      <verifycrit>
        This requirement shall be tested for:
        * The case when NVRAM callback functions are provided (and enabled) and disabled. In this
          case initial state of Client state machine is STARTED_UNLOCKED.
        * Each of 3 states of Client state machine AUTH_STOPPED, STARTED_UNLOCKED and
          AUTH_STARTED_LOCKED in the following way:
          a) State is set,
          b) DevAuth is initialized
          c) It is verified that the initial client state transition is according to saved value.
      </verifycrit>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01128_Initial_2_AUTH_STOPPED</srcid><srcstatus/><internalId>701</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01129_Initial_2_STARTED_LOCKED</srcid><srcstatus/><internalId>702</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01130_Initial_2_STARTED_UNLOCKED</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01131_STARTED_LOCKED_2_STARTED_UNLOCKED</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.dsn.Func0104.NvramSupport</srcid><srcstatus/><internalId>393</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0112.AuthenticationJobs</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_461</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        It shall be possible to activate/deactivate ECU Authentication only as long as ECU
        Authentication is unlocked and/or the ECU is in the engineering or plant mode, if present.
        Note: If engineering and plant mode are not present, the system department shall be
              contacted in order to determine how an unlock may be implemented.
      </description>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01057_EcuAuthStop_EcuAuthStart_FORBIDDEN</srcid><srcstatus/><internalId>630</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0112.AuthenticationJobs</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_463</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The ECU shall support a job to start all key exchanges for which flags are set:
        - ECU_AUTH_START with the following RID: 0x1114

        This jobs returns a single status byte (unsigned char) with the following meaning:
        - 0x00 OK - ECU Authentication was activated successfully.
        - 0x01 ERROR - ECU Authentication could not be activated successfully. Reason unknown.
        - 0x02 OPERATION_ALREADY_RUNNING - ECU Authentication already activated.
        - 0x03 FORBIDDEN - Operation not allowed (e.g. because ECU Authentication is locked).
        - 0xFF INVALID.

        This activates ECU Authentication and can only done as long as the ECU Authentication
        configuration is not locked.
      </description>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01049_EcuAuthStart_READY_OFF_OK</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01053_EcuAuthStart_ALREADY_RUNNING</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01057_EcuAuthStop_EcuAuthStart_FORBIDDEN</srcid><srcstatus/><internalId>630</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0112.AuthenticationJobs</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_459</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_464</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The request for ECU_AUTH_START has the following format:
        ____________________________________________________________________________________________
        |Data| Parameter name                                                       |Cvt|Byte Value|
        |#1  | RoutineControl Request SID                                           | M |   0x31   |
        |#2  | Sub-function (startRoutine, suppressPosRspMsgIndicationBit = FALSE)  | M |   0x01   |
        |#3  | routineIdentifier (ECU_AUTH_START (MSB))                             | M |   0x11   |
        |#4  | routineIdentifier (ECU_AUTH_START (LSB))                             | M |   0x14   |

      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for DevAuth implementation.
        It is relevant for configuration of Dcm which in turn calls DevAuth public API functions.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_491</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The response for ECU_AUTH_START has the following format:
        ____________________________________________________________________________________________
        |Data| Parameter name                                                       |Cvt|Byte Value|
        |#1  | RoutineControl Request SID                                           | M |   0x71   |
        |#2  | Sub-function(startRoutine, suppressPosRspMsgIndicationBit = FALSE))  | M |   0x01   |
        |#3  | routineIdentifier (ECU_AUTH_START (MSB))                             | M |   0x11   |
        |#4  | routineIdentifier (ECU_AUTH_START (LSB))                             | M |   0x14   |
        |#5  | Status                                                               | M | 0x00-0x03|
                                                                                        |  or 0xff |
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for DevAuth implementation.
        It is relevant for configuration of Dcm which in turn calls DevAuth public API functions.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_524</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The ECU shall support a job to stop all key exchanges for which flags are set:
        - ECU_AUTH_STOP with the following RID: 0x1115.
        This jobs returns a single status byte (unsigned char) with the following meaning:
        - 0x00 OK - ECU Authentication was deactivated successfully.
        - 0x01 ERROR - ECU Authentication could not be deactivated successfully. Reason unknown.
        - 0x02 OPERATION_ALREADY_RUNNING - ECU Authentication already deactivated.
        - 0x03 FORBIDDEN - Operation not allowed (e.g. because ECU Authentication is locked).
        - 0xFF INVALID.
        This also deactivates ECU Authentication and can only done as long as the ECU Authentication
        configuration is not locked.
      </description>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01044_EcuAuthStop_SEND_EAPOL_START_OK</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01045_EcuAuthStop_READY_ON_OK</srcid><srcstatus/><internalId>618</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01054_EcuAuthStop_ALREADY_RUNNING</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01057_EcuAuthStop_EcuAuthStart_FORBIDDEN</srcid><srcstatus/><internalId>630</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0112.AuthenticationJobs</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_459</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_586</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_525</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The request for ECU_AUTH_STOP has the following format:
        ____________________________________________________________________________________________
        |Data| Parameter name                                                       |Cvt|Byte Value|
        |#1  | RoutineControl Request SID                                           | M |   0x31   |
        |#2  | Sub-function(startRoutine, suppressPosRspMsgIndicationBit = FALSE))  | M |   0x01   |
        |#3  | routineIdentifier (ECU_AUTH_STOP (MSB))                              | M |   0x11   |
        |#4  | routineIdentifier (ECU_AUTH_STOP (LSB))                              | M |   0x15   |
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for DevAuth implementation.
        It is relevant for configuration of Dcm which in turn calls DevAuth public API functions.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_552</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The response for ECU_AUTH_STOP_KEY_EXCHANGE has the following format:
        ____________________________________________________________________________________________
        |Data| Parameter name                                                       |Cvt|Byte Value|
        |#1  | RoutineControl Request SID                                           | M |   0x71   |
        |#2  | Sub-function(startRoutine, suppressPosRspMsgIndicationBit = FALSE))  | M |   0x01   |
        |#3  | routineIdentifier (ECU_AUTH_STOP (MSB))                              | M |   0x11   |
        |#4  | routineIdentifier (ECU_AUTH_STOP (LSB))                              | M |   0x15   |
        |#5  | Status                                                               | M | 0x00-0x03|
                                                                                        |  or 0xff |
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for DevAuth implementation.
        It is relevant for configuration of Dcm which in turn calls DevAuth public API functions.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_585</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The ECU shall support a job to lock the ECU Authentication configuration (ECU AUTH Start and
        Stop RIDs), so that it cannot be modified anymore (secure storage):
        - ECU_AUTH_LOCK with the following RID: 0x1116.
          This jobs returns a single status byte (unsigned char) with the following meaning:
        - 0x00 OK - ECU Authentication was locked successfully.
        - 0x01 ERROR - ECU Authentication could not be locked successfully. Reason unknown.
        - 0x02 OPERATION_ALREADY_RUNNING - ECU Authentication already locked.
        - 0x03 FORBIDDEN - Operation not allowed (e.g. because ECU Authentication has not been
          started).
        - 0xFF INVALID.
        The ECU Authentication configuration shall only be unlocked by a proprietary secure command
        (e.g. in engineering mode or using a Secure Token) that has to be determined together with
        the PSR.
      </description>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01056_EcuAuthLock_OK_ALREADY_RUNNING</srcid><srcstatus/><internalId>629</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0112.AuthenticationJobs</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_459</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_586</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        The following operations are still allowed, when ECU Authentication is locked:
        - Installation of new Certificates/Bindings with another or the same VIN17.
        - Installation of Secure Tokens to deactivate ECU Authentication on certain links
          (e.g., for changing a partner ECU to an ECU not capable of ECU Authentication).
        - Change of Coding that deactivates ECU Authentication and complete communication to an ECU
          (e.g., if an ECU is not present in the vehicle).
        Note: This list is not extensive.
      </description>
      <comment>
        Installation of new certificates is done in Crypto driver, i.e. out of scope of DevAuth.
        Deactivation and unlocking of authentication process is described by related requirements.
      </comment>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_524</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_649</srcid><srcstatus/><internalId>152</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0112.AuthenticationJobs</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_587</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        As long as ECU Authentication was not started with ECU_AUTH_START the diagnostics job
        ECU_AUTH_LOCK shall return 0x03 FORBIDDEN.
      </description>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01055_EcuAuthLock_FORBIDDEN</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0112.AuthenticationJobs</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_588</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The request for ECU_AUTH_LOCK has the following format:
        ____________________________________________________________________________________________
        |Data| Parameter name                                                       |Cvt|Byte Value|
        |#1  | RoutineControl Request SID                                           | M |   0x31   |
        |#2  | Sub-function (startRoutine, suppressPosRspMsgIndicationBit = FALSE)  | M |   0x01   |
        |#3  | routineIdentifier (ECU_AUTH_LOCK (MSB))                              | M |   0x11   |
        |#4  | routineIdentifier (ECU_AUTH_LOCK (LSB))                              | M |   0x16   |
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for DevAuth implementation.
        It is relevant for configuration of Dcm which in turn calls DevAuth public API functions.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_615</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The response for ECU_AUTH_LOCK has the following format:
        ____________________________________________________________________________________________
        |Data| Parameter name                                                       |Cvt|Byte Value|
        |#1  | RoutineControl Request SID                                           | M |   0x71   |
        |#2  | Sub-function (startRoutine, suppressPosRspMsgIndicationBit = FALSE)  | M |   0x01   |
        |#3  | routineIdentifier (ECU_AUTH_LOCK (MSB))                              | M |   0x11   |
        |#4  | routineIdentifier (ECU_AUTH_LOCK (LSB))                              | M |   0x16   |
        |#5  | Status                                                               | M | 0x00-0x03|
                                                                                        |  or 0xff |
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for DevAuth implementation.
        It is relevant for configuration of Dcm which in turn calls DevAuth public API functions.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_648</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The ECU shall not implement a RID ECU_AUTH_UNLOCK, since this would not be secure.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for DevAuth implementation.
        It is relevant for configuration of Dcm.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_649</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        The ECU shall support a secure ECU_AUTH_UNLOCK operation (e.g., by a Secure Token or
        protected by a Debug-Token or a diagnostic job only available in Engineering Mode).
      </description>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.EB.User_DevAuthIsUnlockSafe</srcid><srcstatus/><internalId>532</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0112.AuthenticationJobs</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_586</linksto><dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_766</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        At least Authenticator ECUs shall support a job to show the current status of the
        ECU Authentication on its Ethernet ports:
        - ECU_AUTH_STATUS with the following RID: 0x01117.

        The job returns:
        - Number of Entries [uint8]: 0..255
        - Entry:
        - Port ID [uint8]: The internal ID of the switch port (0x00 .. 0xff)
        - Supplicant ID [uint8]: the ID of the supplicant (diagnostic address).
        - Supplicant MAC [6x uint8]: the MAC Address of the supplicant.
        - Status [uint8]
          - 0x00 Port Authenticated
          - 0x01 Waiting for supplicant link to come up.
          - 0x02 Waiting for supplicant to start 802.1X.
          - 0x03 ECU Authentication in progress.
          - 0x04 No symmetric key present for supplicant. Enabling Key Exchange.
          - 0x05 Enabling diagnostics for supplicant.
          - 0x06 Authentication failure: unknown peer.
          - 0x07 Authentication failure: peer certificate failure.
          - 0xff Status undefined.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
        This feature is on supplicant side supplemented with status log functionality.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_767</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The request for ECU_AUTH_STATUS has the following format:
        ____________________________________________________________________________________________
        |Data| Parameter name                                                       |Cvt|Byte Value|
        |#1  | RoutineControl Request SID                                           | M |   0x31   |
        |#2  | Sub-function (startRoutine, suppressPosRspMsgIndicationBit = FALSE)  | M |   0x01   |
        |#3  | routineIdentifier (ECU_AUTH_STATUS (MSB))                            | M |   0x11   |
        |#4  | routineIdentifier (ECU_AUTH_STATUS (LSB))                            | M |   0x17   |
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_794</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The response for ECU_AUTH_STATUS has the following format:
        ____________________________________________________________________________________________
        |Data| Parameter name                                                       |Cvt|Byte Value|
        |#1  | RoutineControl Request SID                                           | M |   0x71   |
        |#2  | Sub-function (startRoutine, suppressPosRspMsgIndicationBit = FALSE)  | M |   0x01   |
        |#3  | routineIdentifier (ECU_AUTH_STATUS (MSB))                            | M |   0x11   |
        |#4  | routineIdentifier (ECU_AUTH_STATUS (LSB))                            | M |   0x17   |
        |#5  | Number of Entries                                                    | M |0x00-0xff |
        |    | Port ID                                                              | M |0x00-0xff |
        |    | Peer ID                                                              | M |0x00-0xff |
        |    | Peer MAC (first byte)                                                | M |0x00-0xff |
        |    | ...                                                                  |   |          |
        |    | Peer MAC (sixth byte)                                                | M |0x00-0xff |
        |    | ECU Auth Status                                                      | M |0x00-0xff |
        |    | ...                                                                  |   |          |
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_651</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The ECU shall at least support the following DTCs (all mode DTCs with instant delete):
        - A DTC "ECU_AUTH_NOT_STARTED" that is active as long as the ECU Authentication is
          not started by "ECU_AUTH_START".
        - A DTC "ECU_AUTH_NOT_LOCKED" that is active as long as the ECU Authentication is not locked.
        - A DTC "ECU_AUTH_ERROR_OCCURRED" if the ECU Authentication is experiencing a problem.
        Note: The DTCs ECU_AUTH_NOT_STARTED and ECU_AUTH_NOT_LOCKED need to be deleted using
        Dem_ClearDTC (see AUTOSAR DEM specification).
      </description>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01141_ClientSM_DTCs</srcid><srcstatus/><internalId>714</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0113.AuthenticationDTC</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_653</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The DTCs that ECU Authentication is not initialized are named as follows:
        - ECU_AUTH_NOT_STARTED (ETH_NET_SEC_DTCDOP(0x000073))
        DTC formula shall be taken from ZEDIS and is at the time this specification was updated:
        0x020000 + 0x0100*DiagID + 0x73.
        Note: The current list is maintain by the system department. ECUs are responsible to check,
        whether additional entries exist.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for DevAuth implementation.
        It is relevant for configuring of Dcm.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_654</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        As soon as ECU Authentication is started by the job ECU_AUTH_START the DTC
        ECU_AUTH_NOT_STARTED shall be deleted.
      </description>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01049_EcuAuthStart_READY_OFF_OK</srcid><srcstatus/><internalId>622</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0113.AuthenticationDTC</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_656</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The DTC that ECU Authentication configuration is not locked is called as follows:
        - ECU_AUTH_NOT_LOCKED (ETH_NET_SEC_DTCDOP(0x000074))
        DTC formula shall be taken from ZEDIS and is at the time this specification was updated:
        0x020000 + 0x0100*DiagID + 0x74.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for DevAuth implementation.
        It is relevant for configuring of Dcm.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_657</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        When ECU Authentication is locked the DTC ECU_AUTH_NOT_LOCKED shall be deleted.
      </description>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01056_EcuAuthLock_OK_ALREADY_RUNNING</srcid><srcstatus/><internalId>629</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0113.AuthenticationDTC</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_659</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        Authenticator ECUs implementing ECU Authentication shall support the DTC ECU Authentication,
        if the ECU Authentication fails.
        DTC formula shall be taken from ZEDIS and is at the time this specification was updated:
        0x020000 + 0x0100*DiagID + 0x75.
        Note: If the peer ECU is not available, no DTC shall be set.
        Note: Whether this DTC is used, shall be determined by the Project Security Responsible
              (PSR).
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_660</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        If the DTC is present, further details can be determined by the ECU_AUTH_STATUS
        (NET_SEC_765) job.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_661</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        The ECU shall check after 20s of starting up, every 20s the status.
        Note: After everything works and status is "ECU Authentication is OK", the supplicant and
              authenticator can stop checking until the next link-down/link-up transition.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
        ECU_AUTH_STATUS job is on supplicant side supplemented by status logging feature.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_662</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        If five check in a row (consecutive checks) show the same error, the DTC shall be set.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for DevAuth implementation.
        It is relevant for Dcm configuration.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_663</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        For all partner ECUs not relevant (deactivated by coding, FSC, SFA-Token or not configured
        to communication with), shall status be set to "0: ECU Authentication is OK".
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
        ECU_AUTH_STATUS job is on supplicant side supplemented by status logging feature.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_664</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>2</version>
      <description>
        When ECU Authentication works again, the DTC is updated, possibly not present anymore, but
        not deleted (DTC not present but already stored).
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_1211</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        To allow the validation of the ECU Authentication feature and to allow logging in the
        vehicle with the feature turned on, the Authenticators shall support a secure mechanism to
        adjust the delay bound being compared to the delay measured.
        Note: Acceptable secure mechanisms include but are not limited to: Secure Token/SFA and
              a protected Diagnostic Job, which can only be run in Engineering Mode.
      </description>
      <comment>
        This requirement is not applicable, because it is not relevant for supplicant
        implementation.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_19</id>
      <status>rejected</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        A secured way of configuring all features specified in this document shall be supported.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release/>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_23</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        ECUs shall support that configuration files are signed by the BMW system department.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth_NET_SEC_1176</srcid><srcstatus/><internalId>184</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_22</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The implementation shall check the integrity and authenticity of configuration files.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth_NET_SEC_1176</srcid><srcstatus/><internalId>184</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_28</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The configuration file shall be treated as security artifact.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth_NET_SEC_1176</srcid><srcstatus/><internalId>184</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_20</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The ECU project shall consult the system department on the exact configuration
        formats used.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth_NET_SEC_1176</srcid><srcstatus/><internalId>184</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>

    <specobject>
      <id>DevAuth_NET_SEC_21</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <version>1</version>
      <description>
        The ECU project shall support a secure update of the configuration files.
      </description>
      <comment/>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.DevAuth_NET_SEC_1176</srcid><srcstatus/><internalId>184</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>

  </specobjects>
    <specobjects doctype="swrs">

<!-- === === DET Errors === === -->

    <specobject>
      <id>DevAuth.RFC3748.PacketFormat.Length.DiscardPadding</id>
      <status>approved</status>
      <source>RFC3748, June 2004</source>
      <version>1</version>
      <description>
        [The Length field (of EAP packet) is two octets and indicates the length, in
        octets, of the EAP packet including the Code, Identifier, Length, and Data
        fields.]
        Octets outside the range of the Length field should be treated as Data Link
        Layer padding and MUST be ignored upon reception.
      </description>
      <comment>
        RFC3748, Chapter 4, page 20.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01059_EapMessage_IgnorePadding</srcid><srcstatus/><internalId>632</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.RFC3748.MultipleEapMsg.Ignore</linksto><dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>

    <specobject>
      <id>DevAuth.RFC3748.IdentityResponse.Empty</id>
      <status>approved</status>
      <source>RFC3748</source>
      <version>1</version>
      <description>
        In case that supplicant cannot retrieve Identity (EcuUid), it shall send Identity response
        message with an empty Type Data field.
      </description>
      <comment>
        The requirement is taken out of RFC3748, Chapter 5.1. Identity, page 28:
        If the Identity is unknown, the Identity Response field should be zero bytes in length.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01028_EapIdentity_EmptyEcuUid</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>

    <specobject>
      <id>DevAuth.RFC3748.PacketFormat.Length.MsgTooSmall</id>
      <status>approved</status>
      <source>RFC3748, June 2004</source>
      <version>1</version>
      <description>
        [The Length field (of EAP packet) is two octets and indicates the length, in
        octets, of the EAP packet including the Code, Identifier, Length, and Data
        fields.]
        A message with the Length field set to a value larger than the number of
        received octets MUST be silently discarded.
      </description>
      <comment>
        RFC3748, Chapter 4, page 20.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01075_RxEapMsg_LongerLengthThanMessage</srcid><srcstatus/><internalId>648</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

    <specobject>
      <id>DevAuth.RFC3748.LockStepProtocol</id>
      <status>rejected</status>
      <source>RFC3748</source>
      <version>1</version>
      <description>
        EAP is a 'lock step' protocol, so that other than the initial Request, a new Request
        cannot be sent prior to receiving a valid Response. The authenticator is responsible
        for retransmitting requests.
      </description>
      <comment>This requirement is informational only.</comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>

    <specobject>
      <id>DevAuth.RFC3748.MultipleEapMsg.Ignore</id>
      <status>approved</status>
      <source>RFC3748</source>
      <version>1</version>
      <description>
        Since EAP is a 'lock step' protocol, meaning that other than the initial Request, a new
        Request cannot be sent prior to receiving a valid Response, supplicant shall support only
        one EAP message per Ethernet frame.
        If more then one EAP message is received in a single Ethernet frame, only the first one
        shall be processed, and subsequent ones shall be ignored.
      </description>
      <comment>
        The requirement is taken out of RFC3748, Chapter 2., [3].
      </comment>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.RFC3748.PacketFormat.Length.DiscardPadding</srcid><srcstatus/><internalId>174</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

  </specobjects>
    <specobjects doctype="swrs">

    <specobject>
      <id>DevAuth.EB.PBSelectable.FileName</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        If postBuildVariant returns a non-empty string, the module's post-build-time
        configuration file names shall be changed in the following way:
        &lt;Mod&gt;[_*]_PBcfg.* to &lt;Mod&gt;_&lt;postBuildVariant&gt;[_*]_PBcfg.*
       </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01161_PostBuildSelectable</srcid><srcstatus/><internalId>734</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

    <specobject>
       <id>DevAuth.EB.PBSelectable.TypeName</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        If postBuildVariant returns a non-empty string, the module's post-build-time
        configuration type/variable names shall be changed in the following way:
        - DevAuth_[Const]ConfigLayoutType to DevAuth_&lt;postBuildVariant&gt;_[Const]ConfigLayoutType
       </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01161_PostBuildSelectable</srcid><srcstatus/><internalId>734</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

    <specobject>
       <id>DevAuth.EB.PBSelectable.Master</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        If postBuildVariant returns a non-empty string, the module shall generate a post-build-time
        configuration file DevAuth_PBcfg.h/c which includes all the variants specific 
        post-build-time configurations (DevAuth_&lt;postBuildVariant&gt;[_*]_PBcfg.h/c).
       </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01161_PostBuildSelectable</srcid><srcstatus/><internalId>734</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>

  </specobjects>
    <specobjects doctype="swrs">

    <specobject>
      <id>DevAuth.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_DevAuth_VerifyCodeStub</srcid><srcstatus/><internalId>564</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.DevAuth.ConfigurationData</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>17</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_394</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_387</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_405</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_388</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_389</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_390</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_196</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>
    <specobject>
      <id>dev.DevAuth_NET_SEC_1176</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_23</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_22</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_28</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_20</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_21</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>
    <specobject>
      <id>dev.DevAuth_NET_SEC_1178</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/DevAuth_Cfg.h.m4_32</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/generate/include/DevAuth_Cfg.h.m4</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_183</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/DevAuth_Cfg.h.m4_39</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/generate/include/DevAuth_Cfg.h.m4</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/DevAuth_Cfg.h.m4_46</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/generate/include/DevAuth_Cfg.h.m4</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.NET_SEC_1178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/DevAuth_Cfg.h.m4_55</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/generate/include/DevAuth_Cfg.h.m4</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.NET_SEC_1176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/DevAuth_PBcfg.h_9</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/generate/include/DevAuth_PBcfg.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PostBuildSelectable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/DevAuth_Lcfg.c_30</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/generate/src/DevAuth_Lcfg.c</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthReadEcuUid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/DevAuth_Lcfg.c_38</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/generate/src/DevAuth_Lcfg.c</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthIsUnlockSafe</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/DevAuth_Lcfg.c_46</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/generate/src/DevAuth_Lcfg.c</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthSetNvramData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/DevAuth_Lcfg.c_54</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/generate/src/DevAuth_Lcfg.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthGetNvramData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/DevAuth_PBcfg.c_5</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/generate/src/DevAuth_PBcfg.c</sourcefile>
      <sourceline>5</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PostBuildSelectable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/DevAuth_Int.h_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/include/DevAuth_Int.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/DevAuth_Int.h_616</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/include/DevAuth_Int.h</sourcefile>
      <sourceline>616</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyAgreement.ECDH.p384</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/DevAuth_Lib.h_14</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/include/DevAuth_Lib.h</sourcefile>
      <sourceline>14</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/DevAuth_Lib.h_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/include/DevAuth_Lib.h</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/DevAuth_Lib.h_36</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/include/DevAuth_Lib.h</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/DevAuth_Lib.h_48</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/include/DevAuth_Lib.h</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/DevAuth_Lib.h_61</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/include/DevAuth_Lib.h</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_12</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>12</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.CodeReusability.DecopuleVendorSpecificCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.RuntimePerformance.MainFunctionIdle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_177</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>177</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.GetVersionInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_258</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>258</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.MainFunction.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_276</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>276</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.RuntimePerformance.MainFunctionIdle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_296</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>296</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_136</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_297</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>297</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.RxIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_298</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>298</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.RxIndication.InvalidFrameType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_299</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>299</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.RxIndication.InvalidPhysAddrPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_300</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>300</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.RxIndication.InvalidDataPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_352</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>352</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_353</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>353</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.PDelayReqIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_354</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>354</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.PDelayReqIndication.InvalidPdelayReqRxTimestampPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_355</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>355</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.PDelayReqIndication.InvalidResponseNoncePtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_402</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>402</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_403</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>403</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.PDelayResIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_404</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>404</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.PDelayResIndication.InvalidPdelayResTxTimestampPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_472</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>472</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.TxConfirmation.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_510</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>510</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.TrcvLinkStateChg.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_511</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>511</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.TrcvLinkStateChg.InvalidLinkState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_543</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>543</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.EcuAuthStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_585</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>585</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.EcuAuthStop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_626</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>626</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.EcuAuthLock</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>461</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_744</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>744</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_745</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>745</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.TxNonExpMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_788</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>788</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.TxNonExpMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_789</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>789</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_834</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>834</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.TxNonExpMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_1113</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>1113</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.Unsupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_1120</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>1120</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.UnsupportedProtocolVersion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_1132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>1132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.PacketBodyLength.Short</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_1149</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>1149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.UnsupportedPacketType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_1218</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>1218</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.IgnoreResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_1219</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>1219</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.UnsupportedEapType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_1225</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>1225</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.ReqResp.ShortLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_1232</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>1232</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.InvalidCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_1241</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>1241</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.LengthFieldsMismtach</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth.c.m4_1242</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth.c.m4</sourcefile>
      <sourceline>1242</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.IncompleteMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/DevAuth_Lib.c_88</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_Lib.c</sourcefile>
      <sourceline>88</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.RuntimePerformance.DeadlineMonitoring</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_48</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyAgreement.ECDH.p384</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_55</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyAgreement.ECDH.p384</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_74</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>74</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyAgreement.ECDH.p384</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_531</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>531</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_880</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_532</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>532</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_1979</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>1979</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.Inital_2_Ready</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2125</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2125</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2126</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2126</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2127</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2127</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2181</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2181</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2200</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2200</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2236</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2236</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_454</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2249</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2249</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStartedUnlocked_Start</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2261</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2261</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedLocked_StartStop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2270</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2270</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_454</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2283</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2283</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStopped_2_AuthStopped_Stop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2296</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2296</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedLocked_StartStop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2305</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2305</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_454</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2318</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2318</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedLocked_Lock</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2331</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2331</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStopped_2_AuthStopped_LockUnlock</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2352</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2352</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthIsUnlockSafe</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2364</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2364</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStartedUnlocked_Unlock</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2365</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2365</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStopped_2_AuthStopped_LockUnlock</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2432</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2432</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.Ready_2_TxFrag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2433</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2433</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.TxFrag_2_Ready</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2434</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2434</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.TxAck_2_RxFrag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2435</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2435</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.TxFrag_2_WaitAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2603</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2603</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2607</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2607</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_138</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2608</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2608</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2609</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2609</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_165</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2648</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2648</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1179</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2653</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2653</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2658</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2658</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2666</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2666</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_159</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_2683</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>2683</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_3409</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>3409</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ASN1.LengthEncoding</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_3449</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>3449</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyExchangeReq.CheckAuthCertificates</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_3492</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>3492</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyExchangeReq.CheckAuthCertificates</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_3573</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>3573</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyExchangeReq.CheckAuthCertificates</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_3781</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>3781</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.CERT_958.CheckAcceptableAuthenticator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_3926</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>3926</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.CERT_958.KeyRequestedValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_3931</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>3931</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.CERT_958.CheckNonceA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4002</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4002</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.CERT_958.SignatureValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4037</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4037</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_665</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4062</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4062</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_665</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4087</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4087</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_665</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4112</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4112</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.Initial_2_AuthStopped</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4126</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4126</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.Initial_2_AuthStartedUnlocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4139</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4139</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.Initial_2_AuthStartedLocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4153</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4153</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStopped_2_AuthStartedUnlocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4178</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4178</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStopped</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4203</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4203</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStartedLocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4228</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4228</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedUnlocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4263</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4263</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4329</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4329</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.Initial_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4342</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4342</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.LinkInactive_2_SendEapolStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4355</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4355</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.LinkInactive_2_ReadyAuthenticateOff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4369</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4369</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.LinkInactive_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4385</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4385</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.SendEapolStart_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4400</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4400</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.SendEapolStart_2_WaitLogoffConf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4415</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4415</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_RxIdentityReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4449</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4449</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_AuthRespTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4469</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4469</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4470</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4470</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_RxEapSuccess</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4492</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4492</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticateOff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4510</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4510</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4511</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4511</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.SendEapolStart_2_SendEapolStart_SendStartTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4530</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4530</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4550</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4550</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_WaitLogoffConf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4566</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4566</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4580</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4580</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_SendEapolStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4597</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4597</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxEapFailure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4615</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4615</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_AuthEcu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4631</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4631</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_KeyExchange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4645</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4645</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_EnableDiag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4665</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4665</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_RxEnableDiag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4683</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4683</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4684</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4684</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxEapSuccess</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4702</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4702</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxIdentityReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4724</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4724</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_SendEapolStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4738</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4738</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4752</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4752</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_RxIdentityReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4775</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4775</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_Shutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4791</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4791</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_AuthEcu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4806</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4806</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.WaitLogoffConf_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4820</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4820</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.WaitLogoffConf_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4836</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4836</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.WaitLogoffConf_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_4941</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>4941</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.NET_SEC_1178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5017</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5017</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5025</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5025</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5203</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5203</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_881</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5204</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5204</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_882</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5205</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5205</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_883</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5380</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5380</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_880</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5483</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5483</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxExpMsg.BufferOverflow</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5532</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5532</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxExpMsg.BufferOverflow</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5614</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5614</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxExpMsg.BufferOverflow</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5720</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5720</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxExpMsg.UnsupportedVendorType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5726</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5726</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxExpMsg.UnsupportedVendorId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5935</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5935</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.NewMsgRx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5936</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5936</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.Ready_2_Ready_Discard</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5937</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5937</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.Ready_2_Ready_NonFrag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>494</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5938</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5938</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.Ready_2_TxAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5939</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5939</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.RxFrag_2_TxAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5940</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5940</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.RxFrag_2_RxFrag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5941</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5941</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.RxFrag_2_Ready</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5942</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5942</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.TxAck_2_TxAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5943</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5943</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.TxFrag_2_TxFrag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/DevAuth_SecureTiming.c_5944</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/src/DevAuth_SecureTiming.c</sourcefile>
      <sourceline>5944</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.WaitAck_2_WaitAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_36</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PostBuildSelectable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_61</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.CodeReusability.MultipleAuthenticationPorts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_64</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthPortIdx.NotZeroBased</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_65</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthMaxAuthenticationPorts.Exceeded</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_95</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>95</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthMaxEapMsgSize.Exceeded</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_172</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>172</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthEapEthIfControllerRef.NotUntagged</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_182</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>182</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PostBuildSelectable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_213</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>213</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PostBuildSelectable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_243</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>243</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PostBuildSelectable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_313</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>313</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DevAuthAcceptableAuthenticators_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1412</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1412</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DevAuthEnableDiagCallback_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1413</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1413</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.CodeReusability.CalloutFunctions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1431</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1431</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DevAuthEnableDiagCallbackName_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1455</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1455</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthEnableDiagCallbackName.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1462</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1462</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DevAuthReadEcuUidCallback_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1463</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1463</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.CodeReusability.CalloutFunctions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1481</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1481</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DevAuthReadEcuUidCallbackName_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1505</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1505</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthReadEcuUidCallbackName.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1512</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1512</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DevAuthIsUnlockSafeCallback_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1513</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1513</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.CodeReusability.CalloutFunctions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1531</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1531</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DevAuthIsUnlockSafeCallbackName_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1563</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1563</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthIsUnlockSafeCallbackName.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1571</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1571</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DevAuthNvramCallbacks_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1572</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1572</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.CodeReusability.CalloutFunctions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1590</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1590</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DevAuthSetNvramCallbackName_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1611</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1611</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthSetNvramData.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1616</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1616</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DevAuthGetNvramCallbackName_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1637</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1637</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthGetNvramData.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1643</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1643</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DevAuthLogStatusCallback_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1659</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1659</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DevAuthLogStatusCallbackName_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1682</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1682</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthLogStatusCallbackName.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/DevAuth.xdm.m4_1690</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/config/DevAuth.xdm.m4</sourcefile>
      <sourceline>1690</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DevAuthHeaderFileInclusion_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_var/xgen/DevAuth.xgen_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/generate_var/xgen/DevAuth.xgen</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PostBuildSelectable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/DevAuth.xgen_62</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/generate_var/xgen/DevAuth.xgen</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PostBuildSelectable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/DevAuth.xgen_293</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/generate_var/xgen/DevAuth.xgen</sourcefile>
      <sourceline>293</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PostBuildSelectable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/DevAuth.xgen_419</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/generate_var/xgen/DevAuth.xgen</sourcefile>
      <sourceline>419</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_159</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/DevAuth.xgen_444</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/src/Autosar/generate_var/xgen/DevAuth.xgen</sourcefile>
      <sourceline>444</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_159</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs" title="DevAuth Top Level Functional Requirements">
    <specobject>
      <id>DevAuth.dsn.Func0101.AuthenticateEcu</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1014</sourceline>
      <version>1</version>
      <description>
          In order to support ECU authentication using symmetric key DevAuth shall implement
          Authenticate Ecu functionality.
        </description>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_136</srcid><srcstatus/><internalId>36</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_138</srcid><srcstatus/><internalId>37</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_1151</srcid><srcstatus/><internalId>38</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_165</srcid><srcstatus/><internalId>39</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_166</srcid><srcstatus/><internalId>41</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_159</srcid><srcstatus/><internalId>42</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_1179</srcid><srcstatus/><internalId>84</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_177</srcid><srcstatus/><internalId>93</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_176</srcid><srcstatus/><internalId>94</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_187</srcid><srcstatus/><internalId>127</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_188</srcid><srcstatus/><internalId>128</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.CheckPreloadedCertificates</srcid><srcstatus/><internalId>544</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>
    <specobject>
      <id>DevAuth.dsn.Func0102.EnableDiagnostic</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1028</sourceline>
      <version>1</version>
      <description>
          In order to support external diagnostics and flash update DevAuth shall implement
          Enable diagnostic functionality.
        </description>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_146</srcid><srcstatus/><internalId>55</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_147</srcid><srcstatus/><internalId>57</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_168</srcid><srcstatus/><internalId>58</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_148</srcid><srcstatus/><internalId>59</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_1182</srcid><srcstatus/><internalId>86</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_1207</srcid><srcstatus/><internalId>87</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_1207.Supplicant</srcid><srcstatus/><internalId>88</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.DevAuthHeaderFileInclusion_Conf</srcid><srcstatus/><internalId>523</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.DevAuthEnableDiagCallback_Conf</srcid><srcstatus/><internalId>524</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.DevAuthEnableDiagCallbackName_Conf</srcid><srcstatus/><internalId>525</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.User_DevAuthEnableDiagCallback</srcid><srcstatus/><internalId>526</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.XdmCheck.DevAuthEnableDiagCallbackName.Empty</srcid><srcstatus/><internalId>555</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>
    <specobject>
      <id>DevAuth.dsn.Func0103.KeyExchange</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1042</sourceline>
      <version>1</version>
      <description>
          In order to support tunneling of a key transport protocol DevAuth shall implement
          Key exchange functionality.
        </description>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_163</srcid><srcstatus/><internalId>60</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_164</srcid><srcstatus/><internalId>62</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_162</srcid><srcstatus/><internalId>63</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_1144</srcid><srcstatus/><internalId>64</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_1209</srcid><srcstatus/><internalId>65</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_1183</srcid><srcstatus/><internalId>90</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_1198</srcid><srcstatus/><internalId>91</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.DevAuthAcceptableAuthenticators_Conf</srcid><srcstatus/><internalId>539</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.CERT_958.CheckAcceptableAuthenticator</srcid><srcstatus/><internalId>540</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.CERT_958.CheckNonceA</srcid><srcstatus/><internalId>541</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.CERT_958.KeyRequestedValid</srcid><srcstatus/><internalId>542</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.CERT_958.SignatureValid</srcid><srcstatus/><internalId>543</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.CheckPreloadedCertificates</srcid><srcstatus/><internalId>544</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.KeyExchangeReq.CheckAuthCertificates</srcid><srcstatus/><internalId>545</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.SymmetricalKey</srcid><srcstatus/><internalId>546</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.KeyExchange.ShortResponse</srcid><srcstatus/><internalId>547</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.KeyAgreement.ECDH.p384</srcid><srcstatus/><internalId>552</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ASN1.LengthEncoding</srcid><srcstatus/><internalId>553</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>
    <specobject>
      <id>DevAuth.dsn.Func0104.NvramSupport</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1056</sourceline>
      <version>1</version>
      <description>
          DevAuth shall support storing data in persistent memory (NVRAM).
        </description>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.EB.DevAuthNvramCallbacks_Conf</srcid><srcstatus/><internalId>533</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.DevAuthSetNvramCallbackName_Conf</srcid><srcstatus/><internalId>534</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.DevAuthGetNvramCallbackName_Conf</srcid><srcstatus/><internalId>535</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.User_DevAuthSetNvramData</srcid><srcstatus/><internalId>536</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.User_DevAuthGetNvramData</srcid><srcstatus/><internalId>537</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.XdmCheck.DevAuthSetNvramData.Empty</srcid><srcstatus/><internalId>557</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.XdmCheck.DevAuthGetNvramData.Empty</srcid><srcstatus/><internalId>558</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_460</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>
    <specobject>
      <id>DevAuth.dsn.Func0105.EapIdentity</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1074</sourceline>
      <version>1</version>
      <description>
          DevAuth shall support identity exchange with Authenticator by using
          EAP-Request/Response(Identity) messages.
        </description>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_120</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_121</srcid><srcstatus/><internalId>20</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_122</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_171</srcid><srcstatus/><internalId>80</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.DevAuthReadEcuUidCallback_Conf</srcid><srcstatus/><internalId>527</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.DevAuthReadEcuUidCallbackName_Conf</srcid><srcstatus/><internalId>528</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.User_DevAuthReadEcuUid</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_80</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>
    <specobject>
      <id>DevAuth.dsn.Func0106.EapolLogoff</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1093</sourceline>
      <version>1</version>
      <description>
          DevAuth shall support transmission of EAPoL-Logoff message in case of a port shutdown.
          DevAuth needs to synchronize with EthSM to ensure that Logoff message is transmitted on
          physical interface prior shutdown is performed.
        </description>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_1154</srcid><srcstatus/><internalId>24</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_1184</srcid><srcstatus/><internalId>95</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_80</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>
    <specobject>
      <id>DevAuth.dsn.Func0107.Fragmentation</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1113</sourceline>
      <version>1</version>
      <description>
          In order to overcome Ethernet frame size limitation when exchanging certificates
          (as a part of Key exchange process) or exchanging switch configuration data,
          DevAuth is required to support fragmentation functionality.
        </description>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_880</srcid><srcstatus/><internalId>30</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_881</srcid><srcstatus/><internalId>31</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_882</srcid><srcstatus/><internalId>32</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_883</srcid><srcstatus/><internalId>33</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_884</srcid><srcstatus/><internalId>34</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_1135</srcid><srcstatus/><internalId>35</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_878</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>
    <specobject>
      <id>DevAuth.dsn.Func0108.EapSuccess</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1133</sourceline>
      <version>1</version>
      <description>
          DevAuth shall support reception and processing of EAP-Success message.
        </description>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_1177</srcid><srcstatus/><internalId>81</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_80</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>
    <specobject>
      <id>DevAuth.dsn.Func0109.EapFailure</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1151</sourceline>
      <version>1</version>
      <description>
          DevAuth shall support reception and processing of EAP-Failure message.
        </description>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_1180</srcid><srcstatus/><internalId>83</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.NET_SEC_1178</srcid><srcstatus/><internalId>549</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_80</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>
    <specobject>
      <id>DevAuth.dsn.Func0111.EapolStart</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1169</sourceline>
      <version>1</version>
      <description>
          DevAuth shall support generation of EAPoL-Start messages.
        </description>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_116</srcid><srcstatus/><internalId>14</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_133</srcid><srcstatus/><internalId>76</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_1161</srcid><srcstatus/><internalId>77</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_183</srcid><srcstatus/><internalId>125</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_80</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>
    <specobject>
      <id>DevAuth.dsn.Func0112.AuthenticationJobs</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1187</sourceline>
      <version>1</version>
      <description>
          DevAuth shall support diagnostic jobs in order to control whether authentication is running.
        </description>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_451</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_454</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_459</srcid><srcstatus/><internalId>137</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_460</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_461</srcid><srcstatus/><internalId>139</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_463</srcid><srcstatus/><internalId>140</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_524</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_585</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_586</srcid><srcstatus/><internalId>147</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_587</srcid><srcstatus/><internalId>148</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_649</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.DevAuthIsUnlockSafeCallback_Conf</srcid><srcstatus/><internalId>530</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.DevAuthIsUnlockSafeCallbackName_Conf</srcid><srcstatus/><internalId>531</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.User_DevAuthIsUnlockSafe</srcid><srcstatus/><internalId>532</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.XdmCheck.DevAuthIsUnlockSafeCallbackName.Empty</srcid><srcstatus/><internalId>556</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>
    <specobject>
      <id>DevAuth.dsn.Func0113.AuthenticationDTC</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1200</sourceline>
      <version>1</version>
      <description>
          DevAuth shall support DTCs to ease configuration and diagnostic of ECU Authentication
          functionality.
        </description>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_NET_SEC_665</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_651</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_654</srcid><srcstatus/><internalId>158</internalId></linkedfrom><linkedfrom><srcid>DevAuth_NET_SEC_657</srcid><srcstatus/><internalId>160</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>
    <specobject>
      <id>DevAuth.dsn.Func0114.PostBuildSelectable</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1214</sourceline>
      <version>1</version>
      <description>
          DevAuth shall support post-build selectable configuration for the following parameters:
          1) DevAuthPort\DevAuthInternalIpAddress, 
          2) DevAuthPort\DevAuthInternalDiagnosticsPortNumber,
          3) DevAuthPort\DevAuthDiagnosticsAddress.
        </description>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.EB.PostBuildSelectable</srcid><srcstatus/><internalId>554</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd" title="DevAuth State Machine Top Level Requirements">
    <specobject>
      <id>DevAuth.EB.PortSM</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1237</sourceline>
      <version>1</version>
      <description>
          For each configured supplicant port an instance of Port state machine
          shall be implemented.
        </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.EB.PortSM.ClearUnexpectedEvents</srcid><srcstatus/><internalId>466</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.WaitLogoffConf_2_LinkInactive</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_WaitLogoffConf</srcid><srcstatus/><internalId>496</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.SendEapolStart_2_WaitLogoffConf</srcid><srcstatus/><internalId>497</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.Initial_2_LinkInactive</srcid><srcstatus/><internalId>498</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_RxEapSuccess</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_AuthRespTimeout</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.SendEapolStart_2_LinkInactive</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.SendEapolStart_2_SendEapolStart_SendStartTimeout</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_RxIdentityReq</srcid><srcstatus/><internalId>503</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticateOff</srcid><srcstatus/><internalId>504</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_SendEapolStart</srcid><srcstatus/><internalId>505</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_SendEapolStart</srcid><srcstatus/><internalId>506</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.LinkInactive_2_SendEapolStart</srcid><srcstatus/><internalId>507</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_RxIdentityReq</srcid><srcstatus/><internalId>508</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_Shutdown</srcid><srcstatus/><internalId>509</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_AuthEcu</srcid><srcstatus/><internalId>510</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_RxEnableDiag</srcid><srcstatus/><internalId>511</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_LinkInactive</srcid><srcstatus/><internalId>512</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.LinkInactive_2_ReadyAuthenticateOff</srcid><srcstatus/><internalId>513</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOff</srcid><srcstatus/><internalId>514</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_KeyExchange</srcid><srcstatus/><internalId>515</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxEapFailure</srcid><srcstatus/><internalId>516</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxEapSuccess</srcid><srcstatus/><internalId>517</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_EnableDiag</srcid><srcstatus/><internalId>518</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxIdentityReq</srcid><srcstatus/><internalId>519</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_LinkInactive</srcid><srcstatus/><internalId>520</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_AuthEcu</srcid><srcstatus/><internalId>521</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.PortSM.LinkInactive_2_LinkInactive</srcid><srcstatus/><internalId>522</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1251</sourceline>
      <version>1</version>
      <description>
          For each configured supplicant port an instance of Client state machine
          shall be implemented that controls enabling/disabling/locking
          authentication process.
        </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.EB.ClientSM.EcuAuthUnlock</srcid><srcstatus/><internalId>460</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.EcuAuthLock</srcid><srcstatus/><internalId>461</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.EcuAuthStop</srcid><srcstatus/><internalId>462</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.EcuAuthStart</srcid><srcstatus/><internalId>463</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedLocked_Lock</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedLocked_StartStop</srcid><srcstatus/><internalId>468</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedUnlocked</srcid><srcstatus/><internalId>469</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.Initial_2_AuthStartedLocked</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStartedLocked</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStopped</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStartedUnlocked_Unlock</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStartedUnlocked_Start</srcid><srcstatus/><internalId>474</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.AuthStopped_2_AuthStartedUnlocked</srcid><srcstatus/><internalId>475</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.Initial_2_AuthStartedUnlocked</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.Initial_2_AuthStopped</srcid><srcstatus/><internalId>477</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.AuthStopped_2_AuthStopped_LockUnlock</srcid><srcstatus/><internalId>478</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.ClientSM.AuthStopped_2_AuthStopped_Stop</srcid><srcstatus/><internalId>479</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_454</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1271</sourceline>
      <version>1</version>
      <description>
          For each configured supplicant port an instance of Fragmentation state machine
          shall be implemented to support fragmentation of Expanded-type EAP messages.
        </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.EB.FragSM.TxNonExpMsg</srcid><srcstatus/><internalId>464</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.NewMsgRx</srcid><srcstatus/><internalId>465</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.Inital_2_Ready</srcid><srcstatus/><internalId>480</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.TxFrag_2_Ready</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.TxFrag_2_WaitAck</srcid><srcstatus/><internalId>482</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.TxFrag_2_TxFrag</srcid><srcstatus/><internalId>483</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.WaitAck_2_TxFrag</srcid><srcstatus/><internalId>484</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.Ready_2_TxFrag</srcid><srcstatus/><internalId>485</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.WaitAck_2_WaitAck</srcid><srcstatus/><internalId>486</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.TxAck_2_TxAck</srcid><srcstatus/><internalId>487</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.TxAck_2_RxFrag</srcid><srcstatus/><internalId>488</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.RxFrag_2_TxAck</srcid><srcstatus/><internalId>489</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.Ready_2_TxAck</srcid><srcstatus/><internalId>490</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.RxFrag_2_Ready</srcid><srcstatus/><internalId>491</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.RxFrag_2_RxFrag</srcid><srcstatus/><internalId>492</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.Ready_2_Ready_Discard</srcid><srcstatus/><internalId>493</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.FragSM.Ready_2_Ready_NonFrag</srcid><srcstatus/><internalId>494</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd" title="Runtime performance">
    <specobject>
      <id>DevAuth.dsn.RuntimePerformance.MainFunctionIdle</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1446</sourceline>
      <version>1</version>
      <description>
                The main function execution time shall be reduced to a minimum when there
                is no trigger to execute a task during main function. Global trigger flags
                shall be used instead of condition polling to ensure a minimum main function idle
                execution time.
              </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_132</srcid><srcstatus/><internalId>204</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_276</srcid><srcstatus/><internalId>207</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>
    <specobject>
      <id>DevAuth.dsn.RuntimePerformance.DeadlineMonitoring</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1462</sourceline>
      <version>1</version>
      <description>
                Since DevAuth uses several timers per authentication port and in order to save
                processing time deadline monitoring shall be used instead of maintaining and
                running each timer separately.
              </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_Lib.c_88</srcid><srcstatus/><internalId>241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd" title="Code reusability">
    <specobject>
      <id>DevAuth.dsn.CodeReusability.DecopuleVendorSpecificCode</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1488</sourceline>
      <version>1</version>
      <description>
                In order to allow easy introduction of other vendor specific authentication
                protocols, DevAuth shall be made out of two units - first implementing the generic
                part and the second implementing vendor specific part.
              </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_12</srcid><srcstatus/><internalId>203</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>
    <specobject>
      <id>DevAuth.dsn.CodeReusability.CalloutFunctions</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1503</sourceline>
      <version>1</version>
      <description>
                In order to allow easy integration of DevAuth into environments of different 
                vendors, DevAuth shall use callout functions instead of direct linkage for the 
                following interfaces:
                1) Enabling diagnostic on reception of EAP-Request(Enable diagnostic) message.
                2) Retrieval of EcuUid field for Identity exchange.
                3) Checking if the ECU is in plant or engineering mode for authentication unlock 
                   operation.
                4) Access to NVRAM for storing/retrieving authentication status. 
              </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1413</srcid><srcstatus/><internalId>364</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1463</srcid><srcstatus/><internalId>368</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1513</srcid><srcstatus/><internalId>372</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1572</srcid><srcstatus/><internalId>376</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>
    <specobject>
      <id>DevAuth.dsn.CodeReusability.MultipleAuthenticationPorts</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>1523</sourceline>
      <version>1</version>
      <description>
                In order to be future proof DevAuth shall support ECU configurations with multiple 
                authentication ports.
              </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_61</srcid><srcstatus/><internalId>354</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs" title="DET Reporting">
    <specobject>
      <id>DevAuth.EB.Det.RxIndication.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6452</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: DevAuth_RxIndication() shall
        check that the service DevAuth_Init() was previously called. If the check fails,
        the function shall raise the development error DEVAUTH_E_UNINIT.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_297</srcid><srcstatus/><internalId>209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.RxIndication.InvalidFrameType</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6469</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check if the
        FrameType is 0x888e. If the check fails the function shall raise the
        development error DEVAUTH_E_INVALID_PARAMETER.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det004_RxIndication_InvalidParam</srcid><srcstatus/><internalId>569</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_298</srcid><srcstatus/><internalId>210</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.RxIndication.InvalidPhysAddrPtr</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6486</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check if the
        PhysAddrPtr is not NULL_PTR. If the check fails the function shall raise the
        development error DEVAUTH_E_PARAM_POINTER.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det004_RxIndication_InvalidParam</srcid><srcstatus/><internalId>569</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_299</srcid><srcstatus/><internalId>211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.RxIndication.InvalidDataPtr</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6503</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check if the
        DataPtr is not NULL_PTR. If the check fails the function shall raise the
        development error DEVAUTH_E_PARAM_POINTER.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det004_RxIndication_InvalidParam</srcid><srcstatus/><internalId>569</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_300</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.PDelayReqIndication.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6520</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: DevAuth_PDelayReqIndication() shall
        check that the service DevAuth_Init() was previously called. If the check fails, the
        function shall raise the development error DEVAUTH_E_UNINIT and return E_NOT_OK.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_353</srcid><srcstatus/><internalId>214</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.PDelayReqIndication.InvalidPdelayReqRxTimestampPtr</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6537</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check if the
        PdelayReqRxTimestampPtr is not NULL_PTR. If the check fails the function shall raise the
        development error DEVAUTH_E_PARAM_POINTER and return E_NOT_OK.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det005_PDelayReqIndication_InvalidParam</srcid><srcstatus/><internalId>570</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_354</srcid><srcstatus/><internalId>215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.PDelayReqIndication.InvalidResponseNoncePtr</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6554</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check if the
        ResponseNoncePtr is not NULL_PTR. If the check fails the function shall raise the
        development error DEVAUTH_E_PARAM_POINTER and return E_NOT_OK.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det005_PDelayReqIndication_InvalidParam</srcid><srcstatus/><internalId>570</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_355</srcid><srcstatus/><internalId>216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.PDelayResIndication.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6571</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: DevAuth_PDelayResIndication() shall
        check that the service DevAuth_Init() was previously called. If the check fails, the
        function shall raise the development error DEVAUTH_E_UNINIT and return E_NOT_OK.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_403</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.PDelayResIndication.InvalidPdelayResTxTimestampPtr</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6588</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check if the
        PdelayResTxTimestampPtr is not NULL_PTR. If the check fails the function shall
        raise the development error DEVAUTH_E_PARAM_POINTER and return E_NOT_OK.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det006_PDelayResIndication_InvalidParam</srcid><srcstatus/><internalId>571</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_404</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.TxConfirmation.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6605</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: DevAuth_TxConfirmation() shall
        check that the service DevAuth_Init() was previously called. If the check fails, the
        function shall raise the development error DEVAUTH_E_UNINIT.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_472</srcid><srcstatus/><internalId>220</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.TrcvLinkStateChg.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6622</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: DevAuth_TrcvLinkStateChg() shall
        check that the service DevAuth_Init() was previously called. If the check fails, the
        function shall raise the development error DEVAUTH_E_UNINIT.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_510</srcid><srcstatus/><internalId>221</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.RequestComModeNoCom.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6639</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: DevAuth_RequestComModeNoCom() shall
        check that the service DevAuth_Init() was previously called. If the check fails, the
        function shall raise the development error DEVAUTH_E_UNINIT.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.EcuAuthStart.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6655</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: DevAuth_EcuAuthStart() shall
        check that the service DevAuth_Init() was previously called. If the check fails, the
        function shall raise the development error DEVAUTH_E_UNINIT.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.EcuAuthStop.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6671</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: DevAuth_EcuAuthStop() shall
        check that the service DevAuth_Init() was previously called. If the check fails, the
        function shall raise the development error DEVAUTH_E_UNINIT.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.EcuAuthLock.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6687</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: DevAuth_EcuAuthLock() shall
        check that the service DevAuth_Init() was previously called. If the check fails, the
        function shall raise the development error DEVAUTH_E_UNINIT.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.EcuAuthUnlock.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6703</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: DevAuth_EcuAuthUnlock() shall
        check that the service DevAuth_Init() was previously called. If the check fails, the
        function shall raise the development error DEVAUTH_E_UNINIT.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det001_Uninit</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.TrcvLinkStateChg.InvalidLinkState</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6719</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check if the
        LinkState is ETHTRCV_LINK_STATE_DOWN or ETHTRCV_LINK_STATE_ACTIVE. If the check fails the
        function shall raise the development error DEVAUTH_E_INVALID_PARAMETER.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det007_TrcvLinkStateChg_InvalidParam</srcid><srcstatus/><internalId>572</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_511</srcid><srcstatus/><internalId>222</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.GetVersionInfo.InvalidVersionInfo</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6736</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check if the
        VersionInfo is not NULL_PTR. If the check fails the function shall raise the
        development error DEVAUTH_E_PARAM_POINTER.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det002_GetVersionInfo_InvalidParam</srcid><srcstatus/><internalId>567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.Det.Init.InvalidConfigPtr</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6752</sourceline>
      <version>1</version>
      <description>
        If development error detection is enabled: The function shall check if the
        ConfigPtr is not NULL_PTR. If the check fails the function shall raise the
        development error DEVAUTH_E_PARAM_POINTER.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_Det003_Init_InvalidParam</srcid><srcstatus/><internalId>568</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs" title="Invalid EAP Messages Handling">
    <specobject>
      <id>DevAuth.EB.DiscardRxMsg</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6772</sourceline>
      <version>1</version>
      <description>
        If DevAuth_RxIndication() is called for an EAP message with incorrect message format, the
        message shall be discarded.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.EB.RxEapMsg.Unsupported</srcid><srcstatus/><internalId>431</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.RxEapMsg.IncompleteMsg</srcid><srcstatus/><internalId>432</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.RxEapMsg.PacketBodyLength.Short</srcid><srcstatus/><internalId>433</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.RxEapMsg.InvalidCode</srcid><srcstatus/><internalId>434</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.RxEapMsg.UnsupportedPacketType</srcid><srcstatus/><internalId>435</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.RxEapMsg.UnsupportedEapType</srcid><srcstatus/><internalId>436</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.RxEapMsg.UnsupportedProtocolVersion</srcid><srcstatus/><internalId>437</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.RxExpMsg.UnsupportedVendorId</srcid><srcstatus/><internalId>438</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.RxExpMsg.UnsupportedVendorType</srcid><srcstatus/><internalId>439</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.RxExpMsg.BufferOverflow</srcid><srcstatus/><internalId>440</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.RxEapMsg.ReqResp.ShortLength</srcid><srcstatus/><internalId>441</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.RxEapMsg.LengthFieldsMismtach</srcid><srcstatus/><internalId>443</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.RxEapMsg.Unsupported</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6787</sourceline>
      <version>1</version>
      <description>
        If EAP message is received with a size smaller then the size of the smallest supported
        message, DevAuth shall discard it.
      </description>
      <comment>
        The smallest messages DevAuth supports are EAP Success and Failure that are 8 bytes long.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_1113</srcid><srcstatus/><internalId>231</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01016_RxEapMsg_Unsupported</srcid><srcstatus/><internalId>589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DiscardRxMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.RxEapMsg.IncompleteMsg</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6811</sourceline>
      <version>1</version>
      <description>
        If incomplete EAP message is received, i.e. the size of the message received from  a
        physical layer is smaller then the size indicated by EAP Length field, DevAuth shall
        discard the message.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_1242</srcid><srcstatus/><internalId>240</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01014_RxEapMsg_IncompleteMsg</srcid><srcstatus/><internalId>587</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DiscardRxMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.RxEapMsg.PacketBodyLength.Short</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6834</sourceline>
      <version>1</version>
      <description>
        If EAP message is received with the Packet Body Length field smaller then the minimal
        length (4 bytes), DevAuth shall discard the message.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_1132</srcid><srcstatus/><internalId>233</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01033_RxEapMsg_PacketBodyLength_Short</srcid><srcstatus/><internalId>606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DiscardRxMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.RxEapMsg.InvalidCode</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6856</sourceline>
      <version>1</version>
      <description>
        If EAP message is received with an invalid value of Code field, DevAuth shall discard it.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_1232</srcid><srcstatus/><internalId>238</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01015_EapMsg_InvCode</srcid><srcstatus/><internalId>588</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DiscardRxMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.RxEapMsg.UnsupportedPacketType</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6877</sourceline>
      <version>1</version>
      <description>
        If EAP message is received with an unsupported Packet Type, DevAuth shall discard it.
      </description>
      <comment>
        DevAuth supports only EAPOL-EAP Packet Type (0).
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_1149</srcid><srcstatus/><internalId>234</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01020_RxEapMsg_UnsupportedPacketType</srcid><srcstatus/><internalId>593</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DiscardRxMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.RxEapMsg.UnsupportedEapType</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6900</sourceline>
      <version>1</version>
      <description>
        If EAP message is received with an unsupported EAP Type, DevAuth shall discard it.
      </description>
      <comment>
        DevAuth supports the following EAP message types: Identity (1) and Expanded (254).
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_1219</srcid><srcstatus/><internalId>236</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01034_RxEapMsg_UnsupportedEapType</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DiscardRxMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.RxEapMsg.UnsupportedProtocolVersion</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6923</sourceline>
      <version>1</version>
      <description>
        If EAP message is received with Protocol Version field value smaller then 2,
        DevAuth shall discard the message.
      </description>
      <comment>
        DevAuth is made according to IEEE 802.1X-2004., where protocol version is 2 specified.
        Higher protocol versions are also supported according to backward compatibility rules
        as specified in IEEE 802.1X standard.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_1120</srcid><srcstatus/><internalId>232</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01017_RxEapMsg_UnsupportedProtocolVersion</srcid><srcstatus/><internalId>590</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DiscardRxMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.RxExpMsg.UnsupportedVendorId</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6949</sourceline>
      <version>1</version>
      <description>
        If expanded EAP message is received with an unsupported Vendor ID, DevAuth shall
        discard the message.
      </description>
      <comment>
        DevAuth supports only BMW Vendor Id (0x000201).
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5726</srcid><srcstatus/><internalId>342</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01023_RxExpMsg_UnsupportedVendorId</srcid><srcstatus/><internalId>596</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DiscardRxMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.RxExpMsg.UnsupportedVendorType</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6973</sourceline>
      <version>1</version>
      <description>
        If expanded EAP message is received with an unsupported Vendor Type is received,
        DevAuth shall discard the message.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5720</srcid><srcstatus/><internalId>341</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01024_RxExpMsg_UnsupportedVendorType</srcid><srcstatus/><internalId>597</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DiscardRxMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.RxExpMsg.BufferOverflow</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>6995</sourceline>
      <version>1</version>
      <description>
        If expanded EAP message is received larger then the configured maximum message size
        (DevAuthMaxEapMsgSize), DevAuth shall discard the message.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5483</srcid><srcstatus/><internalId>338</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5532</srcid><srcstatus/><internalId>339</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5614</srcid><srcstatus/><internalId>340</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01076_RxExpMsg_BufferOverflow</srcid><srcstatus/><internalId>649</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01134_CopyFirstFrag_SizeGreaterThanSupported</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01135_CopyFirstFrag_MsgLengthGreaterThanBuffer</srcid><srcstatus/><internalId>708</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DiscardRxMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.RxEapMsg.ReqResp.ShortLength</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7017</sourceline>
      <version>1</version>
      <description>
        If EAP request or response message is received without Type field (EAP Length fields is
        smaller then 5), DevAuth shall discard the message.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_1225</srcid><srcstatus/><internalId>237</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01035_RxIdentityReq_HeaderLengthTooSmall</srcid><srcstatus/><internalId>608</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DiscardRxMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.RxEapMsg.IgnoreResponse</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7039</sourceline>
      <version>1</version>
      <description>
        If EAP response message is received, and the message is not of expanded type,
        DevAuth shall discarded it.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_1218</srcid><srcstatus/><internalId>235</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01029_RxEapMsg_IgnoreResponse</srcid><srcstatus/><internalId>602</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.RxEapMsg.LengthFieldsMismtach</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7055</sourceline>
      <version>1</version>
      <description>
        If EAP message is received with the different values of Packet Body Length and EAP Length
        fields, DevAuth shall discard the message.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_1241</srcid><srcstatus/><internalId>239</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01060_RxEapMsg_LengthFieldsMismtach</srcid><srcstatus/><internalId>633</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.DiscardRxMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs" title="Log Status Reporting">
    <specobject>
      <id>DevAuth.dsn.Func0110.LogStatus</id>
      <status>approved</status>
      <source>DESIGN</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7081</sourceline>
      <version>1</version>
      <description>
        In order to ease integration process, DevAuth shall support logging of relevant
        events and errors by calling user callback function.
      </description>
      <needscoverage>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.EB.DevAuthLogStatusCallback_Conf</srcid><srcstatus/><internalId>445</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.DevAuthLogStatusCallbackName_Conf</srcid><srcstatus/><internalId>446</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.User_DevAuthLogStatusCallback</srcid><srcstatus/><internalId>447</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.LogStatusCode</srcid><srcstatus/><internalId>448</internalId></linkedfrom><linkedfrom><srcid>DevAuth.EB.XdmCheck.DevAuthLogStatusCallbackName.Empty</srcid><srcstatus/><internalId>559</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.NET_SEC_1178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.DevAuthLogStatusCallback_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7100</sourceline>
      <version>1</version>
      <description>
        DevAuth shall implement the following configuration container:
        Name: DevAuthLogStatusCallback
        Parent Container: DevAuthGeneral
        Description: This container describes the callback function DevAuth use
                     to log events/errors.
        Multiplicity: 1
        Build Variant Multiplicity: false
        Post-Build Variant Value: false
        Value Configuration Class:  Link-time (All variants)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1643</srcid><srcstatus/><internalId>381</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0110.LogStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.DevAuthLogStatusCallbackName_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7126</sourceline>
      <version>1</version>
      <description>
        DevAuth shall implement the following configuration parameter:
        Name: DevAuthLogStatusCallbackName
        Parent Container: DevAuthLogStatusCallback
        Description: This parameter holds C callback function name used to report events
                     of a specified port.
                     If the DevAuthLogStatusCallbackName parameter is set the DevAuth
                     shall call the configured callback function
                     (User_LogStatusCallbackName) when relevant event/error has occurred
                     on a specific port.
        Multiplicity: 0..1
        Multiplicity Configuration Class: Link-time
        Value Configuration Class: Link-compile time
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1659</srcid><srcstatus/><internalId>382</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0110.LogStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.User_DevAuthLogStatusCallback</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7155</sourceline>
      <version>1</version>
      <description>
        Service name: User_DevAuthLogStatusCallback
        Syntax: void User_DevAuthLogStatusCallback
        (
          uint8 PortIdx,
          uint8 Status
        )
        Service ID[hex]: 0x00
        Sync/Async: Synchronous
        Reentrancy: Don't care
        Parameters (in): PortIdx - Index of a port for which an event is reported
                         Status - Event/error code
        Parameters (out): None

        Description: DevAuth shall call this user defined callback function
        when relevant event/error has occurred on a specific port
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01000_FirstEapolStartTx</srcid><srcstatus/><internalId>573</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01003_EapIdentity</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01004_AuthenticateEcu</srcid><srcstatus/><internalId>577</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01006_Ready_EapSuccess</srcid><srcstatus/><internalId>579</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01007_Ready_ON_2_Inactive_LinkDown</srcid><srcstatus/><internalId>580</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01010_Ready_ON_2_Ready_ON_EapFailure</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01015_EapMsg_InvCode</srcid><srcstatus/><internalId>588</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01016_RxEapMsg_Unsupported</srcid><srcstatus/><internalId>589</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01017_RxEapMsg_UnsupportedProtocolVersion</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01020_RxEapMsg_UnsupportedPacketType</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01022_AuthenticateEcu_IncorrectNonce</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01025_Nonce2_GenFailed</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01033_RxEapMsg_PacketBodyLength_Short</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01038_Ready_ON_2_WAIT_LOGOFF_CONF_Shutdown</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01049_EcuAuthStart_READY_OFF_OK</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01054_EcuAuthStop_ALREADY_RUNNING</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01056_EcuAuthLock_OK_ALREADY_RUNNING</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01060_RxEapMsg_LengthFieldsMismtach</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01062_Ready_ON_2_Ready_ON_EnableDiag</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01066_RX_FRAG_2_RX_FRAG_DiscardMsg</srcid><srcstatus/><internalId>639</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01081_KeyEx_Cryptogram_NotGenerated</srcid><srcstatus/><internalId>654</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01083_KeyEx_Signature_NotGenerated</srcid><srcstatus/><internalId>656</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01085_KeyExReq_AuthCert_LoadFailed</srcid><srcstatus/><internalId>658</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01087_KeyExReq_AuthSignature_VerifyFailed</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01088_KeyExReq_MsgTooShort</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01090_KeyExReq_KeyReqValueInvalid</srcid><srcstatus/><internalId>663</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01091_KeyEx_NonceA_Repeated</srcid><srcstatus/><internalId>664</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01099_KeyEx_GenSecret_GetPublicKeyFailed</srcid><srcstatus/><internalId>672</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01102_KeyEx_GenSymKey_RandomNumberGenFailed</srcid><srcstatus/><internalId>675</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01109_KeyEx_EncryptSymKey_EncryptFailed</srcid><srcstatus/><internalId>682</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01111_KeyEx_GenerateTMac_MacGenerateFailed</srcid><srcstatus/><internalId>684</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01113_KeyEx_VerifySignature_UnsupportedSignatureAlgo</srcid><srcstatus/><internalId>686</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01121_KeyEx_FillCertB_GetSuppL4Failed</srcid><srcstatus/><internalId>694</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01122_KeyEx_AcceptableSender_GetAuthCertSubjectFailed</srcid><srcstatus/><internalId>695</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01142_KeyEx_SuppL3CertSizeGreaterThanMaxL3Size</srcid><srcstatus/><internalId>715</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01143_KeyEx_SuppL4CertSizeGreaterThanMaxL4Size</srcid><srcstatus/><internalId>716</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01145_KeyEx_ParseCertSubject_FieldMismatch</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01146_KeyEx_CheckAuthIsAcceptable_UnequalSubjects</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01149_ParseExpMsg_EXPHeaderIncomplete</srcid><srcstatus/><internalId>722</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01150_KeyEx_SubjElemExceededBufferSize</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01152_ReadEcuUid_NoCallbackConfigured</srcid><srcstatus/><internalId>725</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01153_IsUnlockSafe_NoCallbackConfigured</srcid><srcstatus/><internalId>726</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01155_StatusLog_FirstFrag_LengthFieldMissing</srcid><srcstatus/><internalId>728</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0110.LogStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.LogStatusCode</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7188</sourceline>
      <version>1</version>
      <description>
        DevAuth shall report status / events use log status codes from the table below:

        STATUS CODE                                 DESCRIPTION
        ------------------------------------------------------------------------------------------------
        DEVAUTH_AUTHENTICATION_STARTED         (1)  Indication that authentication process has been started.
        DEVAUTH_AUTHENTICATION_STOPPED         (2)  Indicating that authentication process has been stopped.
        DEVAUTH_AUTHENTICATION_LOCKED          (3)  Indicating that authentication process has been locked.
        DEVAUTH_AUTHENTICATION_UNLOCKED        (4)  Indicating that authentication process has been unlocked.
        DEVAUTH_PORT_AUTHENTICATED             (5)  Indicating that port is successfully authenticated.
        DEVAUTH_PORT_UNAUTHENTICATED           (6)  Indicating that port is not authenticated.
        DEVAUTH_LINK_ACTIVE                    (7)  Indicating that link is active.
        DEVAUTH_LINK_INACTIVE                  (8)  Indicating that link is inactive.
        DEVAUTH_RX_UNSUPPORTED_MSG             (9)  Indicating that unsupported EAP message has been received.
        DEVAUTH_RX_UNSUPPORTED_PROTOCOL_VER   (10)  Indicating that EAP message with unsupported protocol version has been received.
        DEVAUTH_RX_UNEXPECTED_PACKET_TYPE     (11)  Indicating that EAP message with unexpected packet type has been received - only EAP packet type is supported.
        DEVAUTH_RX_MSG_TOO_SMALL              (12)  Indicating that too small EAP message has been received.
        DEVAUTH_RX_INVALID_LENGTH             (13)  Indicating that the message with invalid length has been received.
        DEVAUTH_RX_INVALID_EAP_CODE           (14)  Indicating that the message with invalid EAP Code field value has been received.
        DEVAUTH_RX_EAPSUCCESS                 (15)  Indicating that the EAP-Success has been received.
        DEVAUTH_RX_EAPIDENTITY                (16)  Indicating that the EAP-Identity has been received.
        DEVAUTH_RX_PDELAYREQ                  (17)  Indicating that the P-Delay has been received.
        DEVAUTH_NONCE_MISMATCH                (18)  Indicating that the request nonce does not match Nonce1.
        DEVAUTH_NONCE_GENFAILED               (19)  Indicating that the Nonce generation failed.
        DEVAUTH_TX_PDELAYRES                  (20)  Indicating that the P-Delay has been sent.
        DEVAUTH_TX_EAPOLSTART                 (21)  Indicating that the EAPol-Start has been sent.
        DEVAUTH_TX_EAPOLLOGOFF                (22)  Indicating that the EAPol-Logoff has been sent.
        DEVAUTH_TX_IDENTITYRESP               (23)  Indicating that the Identity response has been sent.
        DEVAUTH_DIAGNOSTIC_ENABLED            (24)  Indicating that the diagnostic was enabled.
        DEVAUTH_EPHEMERAL_KEY_GEN_FAILED      (25)  Indicating that the Ephemeral key pair generation failed.
        DEVAUTH_SECRET_GEN_FAILED             (26)  Indicating that the Secret generation failed.
        DEVAUTH_UNSUPPORTED_SIGNATURE_ALGO    (27)  Indicating that unsupported signature algorithm is requested.
        DEVAUTH_SIGNATURE_VERIFICATION_FAILED (28)  Indicating that signature verification of Key exchange
        DEVAUTH_KEY_EXCH_REQ_MSG_INCOMPLETE   (29)  Indicating incomplete Key exchange request message.
        DEVAUTH_SUPP_CERT_INVALID             (30)  Indicating that verification of supplicant certificate failed.
        DEVAUTH_AUTH_CERT_INVALID             (31)  Indicating that verification of authenticator certificate failed.
        DEVAUTH_INVALID_KEY_REQUESTED         (32)  Indicating that invalid key was requested in Key exchange request.
        DEVAUTH_NONCE_REPEATED                (33)  Indicating that NonceA in Key exchange request is was used before.
        DEVAUTH_SYMMETRIC_KEY_GEN_FAILED      (34)  Indicating that NonceA in Key exchange request is was used before.
        DEVAUTH_BUFFER_TOO_SMALL              (35)  Indicating that internal message buffer is not sufficient.
        DEVAUTH_KEY_DERIVATION_FAILED         (36)  Indicating that Key derivation (Kmac, Kenc) failed.
        DEVAUTH_ENCRYPT_FAILED                (37)  Indicating that symmetric key encryption failed.
        DEVAUTH_TMAC_GEN_FAILED               (38)  Indicating that MAC(T) generation failed.
        DEVAUTH_CERTB_RETRIEVAL_FAILED        (39)  Indicating the retrieval of supplicant certificate failed.
        DEVAUTH_SIGNATURE_GEN_FAILED          (40)  Indicating that signature generation of Key exchange response failed.
        DEVAUTH_RX_EAPFAILURE                 (41)  Indicating that the EAP-Failure has been received.
        DEVAUTH_UNACCEPTABLE_AUTHENTICATOR    (42)  Indicating that the authenticator is unacceptable sender.
        DEVAUTH_EXP_HEADER_INCOMPLETE         (43)  Indicating that the expanded type header is incomplete.
        DEVAUTH_FRAG_LENGTH_MISSING           (44)  Indicating that fragmentation length is missing.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <verifycrit>
        Each status code shall be captured and verified within relevant use scenario.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01000_FirstEapolStartTx</srcid><srcstatus/><internalId>573</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01003_EapIdentity</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01004_AuthenticateEcu</srcid><srcstatus/><internalId>577</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01006_Ready_EapSuccess</srcid><srcstatus/><internalId>579</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01007_Ready_ON_2_Inactive_LinkDown</srcid><srcstatus/><internalId>580</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01010_Ready_ON_2_Ready_ON_EapFailure</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01015_EapMsg_InvCode</srcid><srcstatus/><internalId>588</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01016_RxEapMsg_Unsupported</srcid><srcstatus/><internalId>589</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01017_RxEapMsg_UnsupportedProtocolVersion</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01020_RxEapMsg_UnsupportedPacketType</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01022_AuthenticateEcu_IncorrectNonce</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01025_Nonce2_GenFailed</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01033_RxEapMsg_PacketBodyLength_Short</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01038_Ready_ON_2_WAIT_LOGOFF_CONF_Shutdown</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01049_EcuAuthStart_READY_OFF_OK</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01054_EcuAuthStop_ALREADY_RUNNING</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01056_EcuAuthLock_OK_ALREADY_RUNNING</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01060_RxEapMsg_LengthFieldsMismtach</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01062_Ready_ON_2_Ready_ON_EnableDiag</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01066_RX_FRAG_2_RX_FRAG_DiscardMsg</srcid><srcstatus/><internalId>639</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01081_KeyEx_Cryptogram_NotGenerated</srcid><srcstatus/><internalId>654</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01083_KeyEx_Signature_NotGenerated</srcid><srcstatus/><internalId>656</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01085_KeyExReq_AuthCert_LoadFailed</srcid><srcstatus/><internalId>658</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01087_KeyExReq_AuthSignature_VerifyFailed</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01088_KeyExReq_MsgTooShort</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01090_KeyExReq_KeyReqValueInvalid</srcid><srcstatus/><internalId>663</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01091_KeyEx_NonceA_Repeated</srcid><srcstatus/><internalId>664</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01099_KeyEx_GenSecret_GetPublicKeyFailed</srcid><srcstatus/><internalId>672</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01102_KeyEx_GenSymKey_RandomNumberGenFailed</srcid><srcstatus/><internalId>675</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01108_KeyEx_DeriveKmacKenc_Failed</srcid><srcstatus/><internalId>681</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01109_KeyEx_EncryptSymKey_EncryptFailed</srcid><srcstatus/><internalId>682</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01111_KeyEx_GenerateTMac_MacGenerateFailed</srcid><srcstatus/><internalId>684</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01113_KeyEx_VerifySignature_UnsupportedSignatureAlgo</srcid><srcstatus/><internalId>686</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01120_KeyEx_SuppL3Cert_ParseFailed</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01121_KeyEx_FillCertB_GetSuppL4Failed</srcid><srcstatus/><internalId>694</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01122_KeyEx_AcceptableSender_GetAuthCertSubjectFailed</srcid><srcstatus/><internalId>695</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01142_KeyEx_SuppL3CertSizeGreaterThanMaxL3Size</srcid><srcstatus/><internalId>715</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01143_KeyEx_SuppL4CertSizeGreaterThanMaxL4Size</srcid><srcstatus/><internalId>716</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01147_KeyEx_ReqMsgLengthSmallerThanMinimum</srcid><srcstatus/><internalId>720</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01148_AuthenticateEcu_ReqMsgLengthSmallerThanMinimum</srcid><srcstatus/><internalId>721</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01150_KeyEx_SubjElemExceededBufferSize</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01152_ReadEcuUid_NoCallbackConfigured</srcid><srcstatus/><internalId>725</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01153_IsUnlockSafe_NoCallbackConfigured</srcid><srcstatus/><internalId>726</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01155_StatusLog_FirstFrag_LengthFieldMissing</srcid><srcstatus/><internalId>728</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01162_DevAuthSetNvramData_StatusLog</srcid><srcstatus/><internalId>735</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0110.LogStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs" title="Other Error Handling Requirements">
    <specobject>
      <id>DevAuth.EB.RxIndication.InvalidEthIfCtrlIdx</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7261</sourceline>
      <version>1</version>
      <description>
        If DevAuth_RxIndication() is called with invalid EhfIfCtrlIdx, DevAuth shall silently
        discard EAPoL packet.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01009_RxIndication_InvalidEthIfCtrlIdx</srcid><srcstatus/><internalId>582</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PDelayReqIndication.InvalidEthIfCtrlIdx</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7276</sourceline>
      <version>1</version>
      <description>
        If DevAuth_PDelayReqIndication() is called with invalid EhfIfCtrlIdx, DevAuth shall ignore
        the indication and return E_NOT_OK.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01011_PDelayReqIndication_InvalidEthIfCtrlIdx</srcid><srcstatus/><internalId>584</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PDelayResIndication.InvalidEthIfCtrlIdx</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7291</sourceline>
      <version>1</version>
      <description>
        If DevAuth_PDelayResIndication() is called with invalid EhfIfCtrlIdx, DevAuth shall ignore
        the indication and return E_NOT_OK.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01012_PDelayResIndication_InvalidEthIfCtrlIdx</srcid><srcstatus/><internalId>585</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PDelayReqIndication.NonceGenFailed</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7306</sourceline>
      <version>1</version>
      <description>
        If DevAuth fails to generate Nonce while processing DevAuth_PDelayReqIndication()
        (e.g. Csm_RandomGenerate returns other then E_OK) it shall ignore the indication,
        and return E_NOT_OK.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01025_Nonce2_GenFailed</srcid><srcstatus/><internalId>598</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PDelayResIndication.InvalidNonce1</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7322</sourceline>
      <version>1</version>
      <description>
        If DevAuth_PDelayResIndication() is called with a value of RequestNonce different to the
        value of Nonce1 received in EAP-Request(Authenticate ECU) and RequestNonce from
        PDelayReqIndication), DevAuth shall ignore the indication and return E_NOT_OK.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01124_AuthECU_ReqNonceDoesntMatchRespNonce</srcid><srcstatus/><internalId>697</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PDelayResIndication.PDelayReqNotReceived</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7338</sourceline>
      <version>1</version>
      <description>
        If DevAuth_PDelayResIndication() is called before a valid PDelay Request indication was
        received, DevAuth shall silently discard PDelay Response Indication.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01036_PDelayRespIndBeforeReq</srcid><srcstatus/><internalId>609</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.TxConfirmation.InvalidEthIfCtrlIdx</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7353</sourceline>
      <version>1</version>
      <description>
        If DevAuth_TxConfirmation() is called with invalid EhfIfCtrlIdx, DevAuth shall ignore it,
        i.e. EthSM_DevAuthNoComModeIndication() shall not be called.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01071_Logoff_TxConfirmation_Invalid_PortIdx</srcid><srcstatus/><internalId>644</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.TxConfirmation.InvalidBufIdx</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7368</sourceline>
      <version>1</version>
      <description>
        If DevAuth_TxConfirmation() is called with the BufIdx different to the one used to transmit
        EAPoL-Logoff message, DevAuth shall ignore it, i.e. EthSM_DevAuthNoComModeIndication()
        shall not be called.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01072_Enable_Logoff_TxConfirmation_Invalid_BufIdx</srcid><srcstatus/><internalId>645</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.RequestComModeNoCom.InvalidEthIfCtrlIdx</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7384</sourceline>
      <version>1</version>
      <description>
        If DevAuth_RequestComModeNoCom() is called with invalid EhfIfCtrlIdx, DevAuth shall ignore
        it and return E_NOT_OK.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01073_RequestComModeNoCom_InvalidEthIfCtrlIdx</srcid><srcstatus/><internalId>646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.TrcvLinkStateChg.InvalidEthIfCtrlIdx</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7399</sourceline>
      <version>1</version>
      <description>
        If DevAuth_TrcvLinkStateChg() is called with invalid EhfIfCtrlIdx, DevAuth shall ignore it.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01013_TrcvLinkStateChg_InvalidEthIfCtrlIdx</srcid><srcstatus/><internalId>586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.MainFunction.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7413</sourceline>
      <version>1</version>
      <description>
        The DevAuth_MainFunction() shall check that the service DevAuth_Init() was previously
        called. If the check fails, the function shall skip further processing and no DET
        shall be generated.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01_NoDet00_Uninit</srcid><srcstatus/><internalId>565</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_258</srcid><srcstatus/><internalId>206</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>DevAuth.EB.ClientSM.EcuAuthUnlock</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7460</sourceline>
      <version>1</version>
      <description>Service name: DevAuth_EcuAuthUnlock
Syntax: Std_ReturnType DevAuth_EcuAuthUnlock
(
  Dcm_OpStatusType OpStatus,
  uint8* ParamOut,
  Dcm_NegativeResponseCodeType* ErrorCode
)
Sync/Async: Synchronous
Reentrancy: Don't care

\param[in] OpStatus - The parameter is not used.
\param[in] Status - Job status according to the following mapping:
  E_OK (0x00) - ECU Authentication successfully unlocked
   E_FORBIDDEN (0x03) - Operation not allowed (e.g. because ECU Authentication is not locked).
\param[out] ErrorCode - Csm error code
  DCM_E_POSITIVERESPONSE (0x00) - Request executed and status successfully retrieved.
  DCM_E_GENERALREJECT (0x10) - Request not executed, e.g. DevAuth not initialized.

\return Std_ReturnType
\retval E_OK (0x00) - Request executed and status successfully retrieved.
\retval E_NOT_OK (0x01) - Request not executed, e.g. DevAuth not initialized.

Description:
API called to unlock ECU authentication. It can be successfully executed only if ECU is in engineering or plant mode.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01131_STARTED_LOCKED_2_STARTED_UNLOCKED</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01144_EcuAuthUnlock_FORBIDDEN</srcid><srcstatus/><internalId>717</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.EcuAuthLock</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7502</sourceline>
      <version>1</version>
      <description>Service name: DevAuth_EcuAuthLock
Syntax: Std_ReturnType DevAuth_EcuAuthLock
(
  Dcm_OpStatusType OpStatus,
  uint8* ParamOut,
  Dcm_NegativeResponseCodeType* ErrorCode
)
Sync/Async: Synchronous
Reentrancy: Don't care

\param[in] OpStatus - The parameter is not used.
\param[in] Status - Job status according to the following mapping:
  E_OK (0x00) - ECU Authentication successfully deactivated.
  E_ERROR (0x01) - ECU Authentication could not be deactivated successfully. Reason unknown.
  E_OPERATION_ALREADY_RUNNING (0x02) - ECU Authentication already deactivated.
  E_FORBIDDEN (0x03) - Operation not allowed (e.g. because ECU Authentication is locked).
  E_INVALID (0xFF)- INVALID
\param[out] ErrorCode - Csm error code
  DCM_E_POSITIVERESPONSE (0x00) - Request executed and status successfully retrieved.
  DCM_E_GENERALREJECT (0x10) - Request not executed, e.g. DevAuth not initialized.

\return Std_ReturnType
\retval E_OK (0x00) - Request executed and status successfully retrieved.
\retval E_NOT_OK (0x01) - Request not executed, e.g. DevAuth not initialized.

Description:
API called by ECU_AUTH_STOP (0x1115) job to stop ECU authentication
It can be successfully executed only if ECU Authentication configuration is not locked.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01055_EcuAuthLock_FORBIDDEN</srcid><srcstatus/><internalId>628</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01056_EcuAuthLock_OK_ALREADY_RUNNING</srcid><srcstatus/><internalId>629</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_626</srcid><srcstatus/><internalId>225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.EcuAuthStop</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7549</sourceline>
      <version>1</version>
      <description>Service name: DevAuth_EcuAuthStop
Syntax: Std_ReturnType DevAuth_EcuAuthStop
(
  Dcm_OpStatusType OpStatus,
  uint8* ParamOut,
  Dcm_NegativeResponseCodeType* ErrorCode
)
Sync/Async: Synchronous
Reentrancy: Don't care
\param[in] OpStatus - The parameter is not used.
\param[in] Status - Job status according to the following mapping:
  E_OK (0x00) - ECU Authentication successfully deactivated.
  E_ERROR (0x01) - ECU Authentication could not be deactivated successfully. Reason unknown.
  E_OPERATION_ALREADY_RUNNING (0x02) - ECU Authentication already deactivated.
  E_FORBIDDEN (0x03) - Operation not allowed (e.g. because ECU Authentication is locked).
  E_INVALID (0xFF)- INVALID
\param[out] ErrorCode - Csm error code
  DCM_E_POSITIVERESPONSE (0x00) - Request executed and status successfully retrieved.
  DCM_E_GENERALREJECT (0x10) - Request not executed, e.g. DevAuth not initialized.

\return Std_ReturnType
\retval E_OK (0x00) - Request executed and status successfully retrieved.
\retval E_NOT_OK (0x01) - Request not executed, e.g. DevAuth not initialized.  
Description:
API called by ECU_AUTH_STOP (0x1115) job to stop ECU authentication
It can be successfully executed only if ECU Authentication configuration is not locked.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01044_EcuAuthStop_SEND_EAPOL_START_OK</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01045_EcuAuthStop_READY_ON_OK</srcid><srcstatus/><internalId>618</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01054_EcuAuthStop_ALREADY_RUNNING</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01057_EcuAuthStop_EcuAuthStart_FORBIDDEN</srcid><srcstatus/><internalId>630</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_585</srcid><srcstatus/><internalId>224</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.EcuAuthStart</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7594</sourceline>
      <version>1</version>
      <description>Service name: DevAuth_EcuAuthStart
Syntax: Std_ReturnType DevAuth_EcuAuthStart
(
  Dcm_OpStatusType OpStatus,
  uint8* ParamOut,
  Dcm_NegativeResponseCodeType* ErrorCode
)
Sync/Async: Synchronous 
Reentrancy: Don't care

param[in] OpStatus - The parameter is not used.
param[out] Status - Job status according to the following mapping:
   E_OK (0x00) - ECU Authentication successfully activated.
   E_ERROR (0x01) - ECU Authentication could not be activated successfully. Reason unknown.
   E_OPERATION_ALREADY_RUNNING (0x02) - ECU Authentication already activated.
   E_FORBIDDEN (0x03) - Operation not allowed (e.g. because ECU Authentication is locked).
   E_INVALID (0xFF)- INVALID
param[out] ErrorCode - Csm error code
   DCM_E_POSITIVERESPONSE (0x00) - Request executed and status successfully retrieved.
   DCM_E_GENERALREJECT (0x10) - Request not executed, e.g. DevAuth not initialized.
return Std_ReturnType
   retval E_OK (0x00) - Request executed and status successfully retrieved.
   retval E_NOT_OK (0x01) - Request not executed, e.g. DevAuth not initialized.

Description:
API called by ECU_AUTH_START (0x1114) job to start ECU authentication.
It can be successfully executed only if ECU Authentication configuration is not locked.</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01049_EcuAuthStart_READY_OFF_OK</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01053_EcuAuthStart_ALREADY_RUNNING</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01057_EcuAuthStop_EcuAuthStart_FORBIDDEN</srcid><srcstatus/><internalId>630</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_543</srcid><srcstatus/><internalId>223</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.TxNonExpMsg</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7637</sourceline>
      <version>1</version>
      <description>Transmission of non-expanded EAP messages (EAPoL-Start, EAPoL-Logoff and EAP-Response(Identity)) is done directly by allocating buffer with EthIf_ProvideTxBuffer() and transmitting with EthIf_Transmit(), i.e. without utilizing local buffer and without
involvement of Fragmentation state machine.

&lt;b&gt;Rationale:&lt;/b&gt;
&lt;b&gt;[1]&lt;/b&gt; EAPoL Start messages are transmitted only during initial phase, before any message is received from Authenticator. Accordingly no clash between Fragmentation state machine can occur here.
&lt;b&gt;[2]&lt;/b&gt; EAPoL-Logoff message is sent in case of a port shutdown, thus out of Authenticator control. Indeed Logoff can terminate ongoing TX or RX process at Authenticator side. However, due to the fact that shutdown will terminate ongoing authentication process anyway it is safe to give priority to Logoff message transmission over other messages.
&lt;b&gt;[3]&lt;/b&gt; Transmission of EAP-Response(Identity) can happen only as a result of EAP-Request(Identity) at the beginning of Authentication process, thus it is safe to transmit it independent of Fragmentation state machine.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_745</srcid><srcstatus/><internalId>227</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_788</srcid><srcstatus/><internalId>228</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_834</srcid><srcstatus/><internalId>230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.NewMsgRx</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7662</sourceline>
      <version>1</version>
      <description>Reception of a valid new expanded EAP message (non-fragmented or first fragment) terminates ongoing transmit or receive process. The data in the buffer is discarded and new message is stored in it.

1) Transition: ANY_STATE -&amp;gt; READY upon reception of a new non-fragmented message. Received message is processed and events are generated.
2) Transition: ANY_STATE -&amp;gt; TX_ACK upon reception of a first fragment.

&lt;b&gt;Rationale:&lt;/b&gt;
[1] Since EAP is a lock-step protocol (see [EAP.LockStepProtocol], Authenticator shall send a new request only after receiving a response from a previous request. The case when Authenticator sends a new request before receiving previous response, indicates that the previous request/response exchange failed, (e.g. due to timeout). Accordingly in such a case Supplicant shall terminate previous request/response  sequence and process a new request.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01064_FragmentedRx_DiscardRxOnNewMessage</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01092_RxFRAG_2_Ready_UnfragmentedMsg</srcid><srcstatus/><internalId>665</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01093_WAITACK_2_Ready_UnfragmentedMsg</srcid><srcstatus/><internalId>666</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01094_WAITACK_2_TX_ACK_FirstFrag</srcid><srcstatus/><internalId>667</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01096_TX_ACK_2_READY_UnfragmentedMsg</srcid><srcstatus/><internalId>669</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01097_TX_ACK_2_READY_FragmentedMsg</srcid><srcstatus/><internalId>670</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01158_RX_FRAG_InvalidNonFrag_Discard</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01159_WAIT_ACK_RxFirstFrag_Invalid</srcid><srcstatus/><internalId>732</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01160_TX_ACK_RxFirstFrag_Invalid</srcid><srcstatus/><internalId>733</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5935</srcid><srcstatus/><internalId>343</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ClearUnexpectedEvents</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7688</sourceline>
      <version>1</version>
      <description>In each state all events that are not explicitly assigned to transitions shall be ignored and cleared.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01018_SEND_EAPOL_START_Discard</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01047_WAIT_LOGOFF_CONF_ClearUnexpectedEvents</srcid><srcstatus/><internalId>620</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedLocked_Lock</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7707</sourceline>
      <version>1</version>
      <description>State self-transition shall be made from AUTH_STARTED_LOCK to AUTH_STARTED_LOCK upon receiving DevAuth_EcuAuthLock()
which shall generate return code E_OPERATION_ALREADY_RUNNING.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01056_EcuAuthLock_OK_ALREADY_RUNNING</srcid><srcstatus/><internalId>629</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2318</srcid><srcstatus/><internalId>261</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedLocked_StartStop</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7728</sourceline>
      <version>1</version>
      <description>State self-transition shall be made from AUTH_STARTED_LOCK to AUTH_STARTED_LOCK upon receiving DevAuth_EcuAuthStart() or DevAuth_EcuAuthStop() which shall generate return code E_JOB_FORBIDDEN.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01057_EcuAuthStop_EcuAuthStart_FORBIDDEN</srcid><srcstatus/><internalId>630</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2261</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2296</srcid><srcstatus/><internalId>259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedUnlocked</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7748</sourceline>
      <version>1</version>
      <description>State transition shall be made from AUTH_STARTED_LOCK  to AUTH_STARTED_UNLOCK upon receiving DevAuth_EcuAuthUnlock() which shall generate return code E_OK.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01131_STARTED_LOCKED_2_STARTED_UNLOCKED</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4228</srcid><srcstatus/><internalId>296</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.Initial_2_AuthStartedLocked</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7768</sourceline>
      <version>1</version>
      <description>State transition shall be made from Inital to AUTH_STARTED_LOCKED during DevAuth_SecT_Init(), if Client SM state retrieved by a callout function is AUTH_STARTED_LOCKED.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01129_Initial_2_STARTED_LOCKED</srcid><srcstatus/><internalId>702</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4139</srcid><srcstatus/><internalId>292</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStartedLocked</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7788</sourceline>
      <version>1</version>
      <description>State transition shall be made from AUTH_STARTED_UNLOCK to AUTH_STARTED_LOCK  upon receiving DevAuth_EcuAuthLock() which shall generate return code E_OK.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01056_EcuAuthLock_OK_ALREADY_RUNNING</srcid><srcstatus/><internalId>629</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4203</srcid><srcstatus/><internalId>295</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStopped</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7808</sourceline>
      <version>1</version>
      <description>State transition shall be made from AUTH_STARTED_UNLOCK to AUTH_STOPPED  upon receiving DevAuth_EcuAuthStop() which shall generate return code E_OK.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01044_EcuAuthStop_SEND_EAPOL_START_OK</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01045_EcuAuthStop_READY_ON_OK</srcid><srcstatus/><internalId>618</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4178</srcid><srcstatus/><internalId>294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStartedUnlocked_Unlock</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7828</sourceline>
      <version>1</version>
      <description>State self-transition shall be made from AUTH_STARTED_UNLOCKED to AUTH_STARTED_UNLOCKED upon receiving DevAuth_EcuAuthUnlock() which shall generate return code E_JOB_FORBIDDEN.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01144_EcuAuthUnlock_FORBIDDEN</srcid><srcstatus/><internalId>717</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2364</srcid><srcstatus/><internalId>264</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStartedUnlocked_Start</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7848</sourceline>
      <version>1</version>
      <description>State self-transition shall be made from AUTH_STARTED_UNLOCKED to AUTH_STARTED_UNLOCKED upon receiving DevAuth_EcuAuthStart() which shall generate return code E_OPERATION_ALREADY_RUNNING.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01053_EcuAuthStart_ALREADY_RUNNING</srcid><srcstatus/><internalId>626</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2249</srcid><srcstatus/><internalId>255</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.AuthStopped_2_AuthStartedUnlocked</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7868</sourceline>
      <version>1</version>
      <description>State transition shall be made from AUTH_STOPPED to AUTH_STARTED_UNLOCK upon receiving DevAuth_EcuAuthStart() which shall generate return code E_OK.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01049_EcuAuthStart_READY_OFF_OK</srcid><srcstatus/><internalId>622</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4153</srcid><srcstatus/><internalId>293</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.Initial_2_AuthStartedUnlocked</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7888</sourceline>
      <version>1</version>
      <description>State transition shall be made from Inital to AUTH_STARTED_UNLOCKED during DevAuth_SecT_Init(), if Client SM state retrieved by a callout function is AUTH_STARTED_UNLOCKED.
This transition shall also be used when reading of NVRAM (suing callout function) during initialization fails. </description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01130_Initial_2_STARTED_UNLOCKED</srcid><srcstatus/><internalId>703</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4126</srcid><srcstatus/><internalId>291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.Initial_2_AuthStopped</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7909</sourceline>
      <version>1</version>
      <description>State transition shall be made from Inital to AUTH_STOPPED during DevAuth_SecT_Init(), if Client SM state retrieved by a callout function is AUTH_STOPPED.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01128_Initial_2_AUTH_STOPPED</srcid><srcstatus/><internalId>701</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01132_Initial_2_Default_GetNvramData_FpFailed</srcid><srcstatus/><internalId>705</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01154_Initial_2_Default_GetNvramData_InvalidState</srcid><srcstatus/><internalId>727</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4112</srcid><srcstatus/><internalId>290</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.AuthStopped_2_AuthStopped_LockUnlock</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7929</sourceline>
      <version>1</version>
      <description>State self-transition shall be made from AUTH_STOPPED to AUTH_STOPPED upon receiving DevAuth_EcuAuthLock() or DevAuth_EcuAuthUnlock() which shall generate return code E_JOB_FORBIDDEN.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01055_EcuAuthLock_FORBIDDEN</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2331</srcid><srcstatus/><internalId>262</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2365</srcid><srcstatus/><internalId>265</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ClientSM.AuthStopped_2_AuthStopped_Stop</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7949</sourceline>
      <version>1</version>
      <description>State self-transition shall be made from AUTH_STOPPED to AUTH_STOPPED upon receiving DevAuth_EcuAuthStop()
which shall generate return code E_OPERATION_ALREADY_RUNNING.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01054_EcuAuthStop_ALREADY_RUNNING</srcid><srcstatus/><internalId>627</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2283</srcid><srcstatus/><internalId>258</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.Inital_2_Ready</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7970</sourceline>
      <version>1</version>
      <description>State shall be changed from INITIAL to READY upon the call of DevAuth_Init().</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01070_FragSM_Initial_2_READY</srcid><srcstatus/><internalId>643</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_1979</srcid><srcstatus/><internalId>247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.TxFrag_2_Ready</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>7990</sourceline>
      <version>1</version>
      <description>Transaction is performed in the context of MainFunction().
State shall be changed from TX_FRAG to READY in case non-fragmented message or last fragment is transmitted.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01068_FragmentedTx</srcid><srcstatus/><internalId>641</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2433</srcid><srcstatus/><internalId>267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.TxFrag_2_WaitAck</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8011</sourceline>
      <version>1</version>
      <description>Transaction is performed in the context of MainFunction().
State shall be changed from TX_FRAG to WAIT_ACK in case first fragment or middle fragment is transmitted.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01068_FragmentedTx</srcid><srcstatus/><internalId>641</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01159_WAIT_ACK_RxFirstFrag_Invalid</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2435</srcid><srcstatus/><internalId>269</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.TxFrag_2_TxFrag</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8032</sourceline>
      <version>1</version>
      <description>Self-transaction is performed in the context of RxIndication().
Self-transition with message discard shall be performed in case middle fragment, last fragment, acknowledge message or invalid message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01140_TX_FRAG_2_TX_FRAG_DiscardMsg</srcid><srcstatus/><internalId>713</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5943</srcid><srcstatus/><internalId>351</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.WaitAck_2_TxFrag</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8053</sourceline>
      <version>1</version>
      <description>Transaction is performed in the context of RxIndication().
State shall be changed from WAIT_ACK to TX_FRAG in case acknowledge message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01068_FragmentedTx</srcid><srcstatus/><internalId>641</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.Ready_2_TxFrag</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8073</sourceline>
      <version>1</version>
      <description>Transaction is performed in the context of DevAuth_MainFunction().
State shall be changed from READY to TX_FRAG in DevAuth needs to send Expanded EAP message, i.e. DevAuth_TxExpEapMsg() is called.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01068_FragmentedTx</srcid><srcstatus/><internalId>641</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2432</srcid><srcstatus/><internalId>266</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.WaitAck_2_WaitAck</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8094</sourceline>
      <version>1</version>
      <description>Self-transaction is performed in the context of RxIndication().
Self-transition with message discard shall be performed in case middle fragment, last fragment or invalid message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01095_WAITACK_MiddleFrag_Discard</srcid><srcstatus/><internalId>668</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5944</srcid><srcstatus/><internalId>352</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.TxAck_2_TxAck</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8115</sourceline>
      <version>1</version>
      <description>Self-transaction is performed in the context of RxIndication().
Self-transition with message discard shall be performed in case middle fragment, last fragment, acknowledge message or invalid message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01067_TX_ACK_2_TX_ACK_DiscardMsg</srcid><srcstatus/><internalId>640</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5942</srcid><srcstatus/><internalId>350</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.TxAck_2_RxFrag</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8136</sourceline>
      <version>1</version>
      <description>Transaction is performed in the context of MainFunction().
State shall be changed from TX_ACK to RX_FRAG in case acknowledge message is transmitted.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01061_AuthenticateEcu_FragmentedRx</srcid><srcstatus/><internalId>634</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2434</srcid><srcstatus/><internalId>268</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.RxFrag_2_TxAck</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8157</sourceline>
      <version>1</version>
      <description>Transaction is performed in the context of RxIndication().
State shall be changed from RX_FRAG to TX_ACK in case valid middle fragment is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01061_AuthenticateEcu_FragmentedRx</srcid><srcstatus/><internalId>634</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5939</srcid><srcstatus/><internalId>347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.Ready_2_TxAck</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8178</sourceline>
      <version>1</version>
      <description>Transaction is performed in the context of RxIndication().
State shall be changed from READY to TX_ACK in case first fragment is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01061_AuthenticateEcu_FragmentedRx</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01077_FragmentedRx_TxAck_Retry</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5938</srcid><srcstatus/><internalId>346</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.RxFrag_2_Ready</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8199</sourceline>
      <version>1</version>
      <description>Transaction is performed in the context of RxIndication().
State shall be changed from TX_FRAG to READY in case last fragment is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01061_AuthenticateEcu_FragmentedRx</srcid><srcstatus/><internalId>634</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5941</srcid><srcstatus/><internalId>349</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.RxFrag_2_RxFrag</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8220</sourceline>
      <version>1</version>
      <description>Self-transaction is performed in the context of RxIndication().
Self-transition with message discard shall be performed in case acknowledge message or invalid message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01066_RX_FRAG_2_RX_FRAG_DiscardMsg</srcid><srcstatus/><internalId>639</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5940</srcid><srcstatus/><internalId>348</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.Ready_2_Ready_Discard</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8241</sourceline>
      <version>1</version>
      <description>Self-transaction is performed in the context of RxIndication().
Self-transition with message discard shall be performed in case middle fragment, last fragment, acknowledge message or invalid message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01065_FragmentedRx_READY_2_READY_DiscardMSG</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5936</srcid><srcstatus/><internalId>344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.FragSM.Ready_2_Ready_NonFrag</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8262</sourceline>
      <version>1</version>
      <description>Self-transaction is performed in the context of RxIndication().
Self-transition with coping and processing is triggered by receiving non-fragmented message.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01139_Ready_2_Ready_NonFrag</srcid><srcstatus/><internalId>712</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_5937</srcid><srcstatus/><internalId>345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.WaitLogoffConf_2_LinkInactive</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8283</sourceline>
      <version>1</version>
      <description>State shall be changed from WAIT_LOGOFF_CONF to LINK_INACTIVE if:
1) EAPoL-Logoff message is confirmed or 
2) LogoffTimer expires or
3) Link is DOWN.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01040_WAIT_LOGOFF_CONF_2_LINK_INACTIVE_RxLogoffConf</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01042_WAIT_LOGOFF_CONF_2_LINK_INACTIVE_LinkInactive</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01046_WAIT_LOGOFF_CONF_2_LINK_INACTIVE_LogoffTimeout</srcid><srcstatus/><internalId>619</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4806</srcid><srcstatus/><internalId>328</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4820</srcid><srcstatus/><internalId>329</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4836</srcid><srcstatus/><internalId>330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_WaitLogoffConf</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8306</sourceline>
      <version>1</version>
      <description>State shall be changed from READY_AUTHENTICATE_ON to WAIT_LOGOFF_CONF in case Shutdown event is received (EthSM initiated port shutdown procedure).</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01038_Ready_ON_2_WAIT_LOGOFF_CONF_Shutdown</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4550</srcid><srcstatus/><internalId>312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.SendEapolStart_2_WaitLogoffConf</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8326</sourceline>
      <version>1</version>
      <description>State shall be changed from SEND_EAPOL_START to WAIT_LOGOFF_CONF if Shutdown event is received (EthSM initiates port shutdown procedure).</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01043_SEND_EAPOL_START_2_WAIT_LOGOFF_CONF_Shutdown</srcid><srcstatus/><internalId>616</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4400</srcid><srcstatus/><internalId>303</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.Initial_2_LinkInactive</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8346</sourceline>
      <version>1</version>
      <description>State shall be changed from INITIAL to LINK_INACTIVE upon the call of DevAuth_Init().</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01000_FirstEapolStartTx</srcid><srcstatus/><internalId>573</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4329</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_RxEapSuccess</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8366</sourceline>
      <version>1</version>
      <description>State shall be changed from SEND_EAPOL_START to READY_AUTHENTICATE_ON when Eap Success message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01037_SEND_EAPOL_START_2_Ready_ON_RxEapSuccess</srcid><srcstatus/><internalId>610</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4470</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_AuthRespTimeout</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8386</sourceline>
      <version>1</version>
      <description>State shall be changed from SEND_EAPOL_START to READY_AUTHENTICATE_ON when AuthenticatorResponseTimeout expires, i.e. no response to EAPoL-Start message from Authenticator is received for a specified time interval.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01127_SEND_EAPOL_START_2_READY_ON_AuthRespTimeout</srcid><srcstatus/><internalId>700</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4449</srcid><srcstatus/><internalId>305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.SendEapolStart_2_LinkInactive</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8406</sourceline>
      <version>1</version>
      <description>State shall be changed from SEND_EAPOL_START to LINK_INACTIVE if Link state changes to DOWN.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01001_SendEapolStart_LinkInactive</srcid><srcstatus/><internalId>574</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4385</srcid><srcstatus/><internalId>302</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.SendEapolStart_2_SendEapolStart_SendStartTimeout</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8426</sourceline>
      <version>1</version>
      <description>Self-transition is performed in case SendEapolStartTimeout has expired.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01002_RepeatEapolStartTx</srcid><srcstatus/><internalId>575</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4511</srcid><srcstatus/><internalId>310</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_RxIdentityReq</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8446</sourceline>
      <version>1</version>
      <description>State shall be changed from SEND_EAPOL_START to READY_AUTHENTICATE_ON when Identity req message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01003_EapIdentity</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01157_AllConfiguredCtrls_EAPoLStart_RxIdentity</srcid><srcstatus/><internalId>730</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4415</srcid><srcstatus/><internalId>304</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticateOff</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8466</sourceline>
      <version>1</version>
      <description>State shall be changed from SEND_EAPOL_START to READY_AUTHENTICATE_OFF if Authenticate gets disabled.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01044_EcuAuthStop_SEND_EAPOL_START_OK</srcid><srcstatus/><internalId>617</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4492</srcid><srcstatus/><internalId>308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_SendEapolStart</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8486</sourceline>
      <version>1</version>
      <description>State shall be changed from READY_AUTHENTICATE_OFF to SEND_EAPOL_START if Authenticate gets enabled.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01049_EcuAuthStart_READY_OFF_OK</srcid><srcstatus/><internalId>622</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4724</srcid><srcstatus/><internalId>323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_SendEapolStart</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8506</sourceline>
      <version>1</version>
      <description>State shall be changed from READY_AUTHENTICATE_ON to SEND_EAPOL_START if either of Timer1(RestartAuthenticationSessionTimeout) or Timer2 (HeldWhileTimeout) expire.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01019_READY_ON_2_SEND_EAPOL_START_AuthSessionTimeout</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01021_RestartAuthenticationSessionTimeout</srcid><srcstatus/><internalId>594</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01058_READY_ON_2_SEND_EAPOL_START_HeldWhileTimeout</srcid><srcstatus/><internalId>631</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4580</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.LinkInactive_2_SendEapolStart</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8526</sourceline>
      <version>1</version>
      <description>State shall be changed from LINK_INACTIVE to SEND_EAPOL_START if both Authenticate and LinkActive are set.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01000_FirstEapolStartTx</srcid><srcstatus/><internalId>573</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4342</srcid><srcstatus/><internalId>299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_RxIdentityReq</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8546</sourceline>
      <version>1</version>
      <description>Self-transition is performed in case EAP Identity request message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01050_READY_OFF_RxIdentityReq</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01078_READY_OFF_TxIdentityRes_Retransmission</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4752</srcid><srcstatus/><internalId>325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_Shutdown</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8566</sourceline>
      <version>1</version>
      <description>Self-transition shall be performed in case Shutdown event is received (EthSM initiates port shutdown procedure).</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01051_READY_OFF_Shutdown</srcid><srcstatus/><internalId>624</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4775</srcid><srcstatus/><internalId>326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_AuthEcu</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8586</sourceline>
      <version>1</version>
      <description>Self-transition shall be performed in case Expanded EAP Authenticate ECU message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01052_AuthenticateEcu_NotActivated</srcid><srcstatus/><internalId>625</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4791</srcid><srcstatus/><internalId>327</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_RxEnableDiag</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8606</sourceline>
      <version>1</version>
      <description>Self-transition shall be performed in case Expanded EAP Enable diagnostic message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01063_Ready_OFF_2_Ready_OFF_EnableDiag</srcid><srcstatus/><internalId>636</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4665</srcid><srcstatus/><internalId>319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_LinkInactive</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8626</sourceline>
      <version>1</version>
      <description>State shall be changed from READY_AUTHENTICATE_OFF to LINK_INACTIVE  if LinkActive gets disabled.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01069_READY_OFF_2_LINK_INACTIVE_LinkInactive</srcid><srcstatus/><internalId>642</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4738</srcid><srcstatus/><internalId>324</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.LinkInactive_2_ReadyAuthenticateOff</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8646</sourceline>
      <version>1</version>
      <description>State shall be changed from LINK_INACTIVE to READY_AUTHENTICATE_OFF if LinkActive gets enabled, while Authenticate is disabled.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01048_LINK_INACTIVE_2_READY_OFF_UnAuthenticate</srcid><srcstatus/><internalId>621</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4355</srcid><srcstatus/><internalId>300</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOff</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8666</sourceline>
      <version>1</version>
      <description>State shall be changed from READY_AUTHENTICATE_ON to READY_AUTHENTICATE_OFF if Authenticate changes to disabled.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01045_EcuAuthStop_READY_ON_OK</srcid><srcstatus/><internalId>618</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4530</srcid><srcstatus/><internalId>311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_KeyExchange</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8686</sourceline>
      <version>1</version>
      <description>Self-transition is performed in case Expanded EAP Key exchange message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01138_Ready_ON_2_Ready_ON_KeyExchange</srcid><srcstatus/><internalId>711</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4631</srcid><srcstatus/><internalId>317</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxEapFailure</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8706</sourceline>
      <version>1</version>
      <description>Self-transition is performed in case EAP Failure message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01010_Ready_ON_2_Ready_ON_EapFailure</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01133_TxFragment_RetransmissionIfFailed</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4597</srcid><srcstatus/><internalId>315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxEapSuccess</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8726</sourceline>
      <version>1</version>
      <description>Self-transition is performed in case Eap success message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01006_Ready_EapSuccess</srcid><srcstatus/><internalId>579</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4684</srcid><srcstatus/><internalId>321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_EnableDiag</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8746</sourceline>
      <version>1</version>
      <description>Self-transition is performed in case Expanded EAP Enable diagnostic message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01062_Ready_ON_2_Ready_ON_EnableDiag</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01149_ParseExpMsg_EXPHeaderIncomplete</srcid><srcstatus/><internalId>722</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01151_EnableDiag_NoCallbackConfigured</srcid><srcstatus/><internalId>724</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4645</srcid><srcstatus/><internalId>318</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxIdentityReq</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8766</sourceline>
      <version>1</version>
      <description>Self-transition is performed in case Identity request message is received.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01005_Ready_RxIdentityReq</srcid><srcstatus/><internalId>578</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4702</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_LinkInactive</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8786</sourceline>
      <version>1</version>
      <description>State shall be changed from READY_AUTHENTICATE_ON to LINK_INACTIVE in case link state goes DOWN.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01007_Ready_ON_2_Inactive_LinkDown</srcid><srcstatus/><internalId>580</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4566</srcid><srcstatus/><internalId>313</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_AuthEcu</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8806</sourceline>
      <version>1</version>
      <description>Self-transition is performed in case Expanded EAP Authenticate ECU message is received accomplished with PDelayReq and PDelayResp events.</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01004_AuthenticateEcu</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4615</srcid><srcstatus/><internalId>316</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PortSM.LinkInactive_2_LinkInactive</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8826</sourceline>
      <version>1</version>
      <description>Self-transition shall be performed in case Shutdown event is received (EthSM initiated port shutdown procedure).</description>
      <tags>
        <tag>REQM_PROVIDESCOVERAGE</tag>
      </tags>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01041_LINK_INACTIVE_2_LINK_INACTIVE_Shutdown</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4369</srcid><srcstatus/><internalId>301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs" title="Functionality requirements: Enable Diagnostic Callback Function">
    <specobject>
      <id>DevAuth.EB.DevAuthHeaderFileInclusion_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8855</sourceline>
      <version>1</version>
      <description>
        DevAuth shall implement the following configuration container:
        Name: DevAuthHeaderFileInclusion
        Parent Container: DevAuthGeneral
        Description: Name of the header file(s) to be included by the DevAuth module containing
                     the used C-callback declarations.
        Multiplicity: 0..*
        Build Variant Multiplicity: false
        Post-Build Variant Value: false
        Multiplicity Configuration Class: Pre-compile time
        Value Configuration Class:  Pre-compile time
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1690</srcid><srcstatus/><internalId>384</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0102.EnableDiagnostic</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.DevAuthEnableDiagCallback_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8883</sourceline>
      <version>1</version>
      <description>
        DevAuth shall implement the following configuration container:
        Name: DevAuthEnableDiagCallback
        Parent Container: DevAuthGeneral
        Description: This container describes the callback function to activate diagnostics
                     upon receiving EAP-Request(EnableDiagnostic) for a specific port.
        Multiplicity: 1
        Build Variant Multiplicity: false
        Post-Build Variant Value: false
        Value Configuration Class:  Link-time (All variants)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1412</srcid><srcstatus/><internalId>363</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0102.EnableDiagnostic</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.DevAuthEnableDiagCallbackName_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8910</sourceline>
      <version>1</version>
      <description>
        DevAuth shall implement the following configuration parameter:
        Name: DevAuthEnableDiagCallbackName
        Parent Container: DevAuthEnableDiagCallback
        Description: This parameter holds C callback function name used to activate diagnostics
                     upon receiving EAP-Request(EnableDiagnostic) for a specific port.
                     If the DevAuthEnableDiagCallbackName parameter is set the DevAuth
                     module shall call the configured callback function
                     (User_EnableDiagCallbackName) upon receiving EAP-Request(EnableDiagnostic)
                     for a specific port.
        Multiplicity: 0..1
        Multiplicity Configuration Class: Link-time
        Value Configuration Class: Link-compile time
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1431</srcid><srcstatus/><internalId>365</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0102.EnableDiagnostic</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.User_DevAuthEnableDiagCallback</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8940</sourceline>
      <version>1</version>
      <description>
        Service name: User_DevAuthEnableDiagCallback
        Syntax: void User_DevAuthEnableDiagCallback(uint8 PortIdx)
        Service ID[hex]: 0x00
        Sync/Async: Synchronous
        Reentrancy: Don't care
        Parameters (in): PortIdx - Index of port for which diagnostic shall be enabled.
        Parameters (out): None

        Description: DevAuth shall call this user defined callback function
        (DevAuth.EB.DevAuthEnableDiagCallbackName_Conf) upon receiving
        EAP-Request(EnableDiagnostic) to activate diagnostics for that port.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01062_Ready_ON_2_Ready_ON_EnableDiag</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01151_EnableDiag_NoCallbackConfigured</srcid><srcstatus/><internalId>724</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0102.EnableDiagnostic</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1207.Supplicant</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs" title="Functionality requirements: ReadEcuUid callback function">
    <specobject>
      <id>DevAuth.EB.DevAuthReadEcuUidCallback_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>8975</sourceline>
      <version>1</version>
      <description>
        DevAuth shall implement the following configuration container:
        Name: DevAuthReadEcuUidCallback
        Parent Container: DevAuthGeneral
        Description: This container describes the callback function to read EcuUid value which is
        returned in EAP-Response(Identity) message.
        Multiplicity: 1
        Build Variant Multiplicity: false
        Post-Build Variant Value: false
        Value Configuration Class:  Link-time (All variants)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1462</srcid><srcstatus/><internalId>367</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0105.EapIdentity</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.DevAuthReadEcuUidCallbackName_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9001</sourceline>
      <version>1</version>
      <description>
        DevAuth shall implement the following configuration parameter:
        Name: DevAuthReadEcuUidCallbackName
        Parent Container: DevAuthReadEcuUidCallback
        Description: This parameter holds C callback function name used read EcuUid value.
        Multiplicity: 0..1
        Multiplicity Configuration Class: Link-time
        Value Configuration Class: Link-compile time
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1481</srcid><srcstatus/><internalId>369</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0105.EapIdentity</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.User_DevAuthReadEcuUid</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9026</sourceline>
      <version>1</version>
      <description>
        Service name: User_DevAuthReadEcuUid
        Syntax: Std_ReturnType User_DevAuthReadEcuUid(uint8* EcuUidPtr)
        Service ID[hex]: 0x00
        Sync/Async: Synchronous
        Reentrancy: Don't care
        Parameters (in): EcuUidPtr - Pointer to the memory location where EcuUid shall be copied.
        Parameters (out):
        Return value: Std_ReturnType
        E_OK: EcuUid successfully retrieved
        E_NOT_OK: EcuUid retrieval failed.

        Description: DevAuth shall call this user defined callback function to retrieve EcuUid when
        assembling EAP-Response(Identity) message.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/DevAuth_Lcfg.c_30</srcid><srcstatus/><internalId>191</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01003_EapIdentity</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01152_ReadEcuUid_NoCallbackConfigured</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0105.EapIdentity</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs" title="Functionality requirements: Callback function to verify                                      if authentication process can be safely unlocked.">
    <specobject>
      <id>DevAuth.EB.DevAuthIsUnlockSafeCallback_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9060</sourceline>
      <version>1</version>
      <description>
        DevAuth shall implement the following configuration container:
        Name: DevAuthIsUnlockSafeCallback
        Parent Container: DevAuthGeneral
        Description: This container describes the callback function to verify if the authentication
        process can be unlocked with respective diagnostic job for a specified port.
        Multiplicity: 1
        Build Variant Multiplicity: false
        Post-Build Variant Value: false
        Value Configuration Class:  Link-time (All variants)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1512</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0112.AuthenticationJobs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.DevAuthIsUnlockSafeCallbackName_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9086</sourceline>
      <version>1</version>
      <description>
        DevAuth shall implement the following configuration parameter:
        Name: DevAuthIsUnlockSafeCallbackName
        Parent Container: DevAuthIsUnlockSafeCallback
        Description: This parameter holds C callback function name used to verify if the
        authentication process can be unlocked with a respective diagnostic job for a specified
        port.
        Multiplicity: 0..1
        Multiplicity Configuration Class: Link-time
        Value Configuration Class: Link-compile time
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1531</srcid><srcstatus/><internalId>373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0112.AuthenticationJobs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.User_DevAuthIsUnlockSafe</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9113</sourceline>
      <version>1</version>
      <description>
        Service name: User_DevAuthIsUnlockSafe
        Syntax: boolean User_DevAuthIsUnlockSafe(uint8 PortIdx)
        Service ID[hex]: 0x00
        Sync/Async: Synchronous
        Reentrancy: Don't care
        Parameters (in): PortIdx - Index of port for which it shall be checked if it can be unlocked.
        Parameters (out): None
        Description: DevAuth shall call this user defined callback function
        (DevAuth.EB.DevAuthIsUnlockSafeCallbackName_Conf) upon receiving API call
        DevAuth_EcuAuthUnlock().
        Only if the function returns TRUE, DevAuth shall proceed with port unlocking. If the
        function returns FALSE, or callback function is not configured, DevAuth will reject pot
        unlocking.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/DevAuth_Lcfg.c_38</srcid><srcstatus/><internalId>192</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_2352</srcid><srcstatus/><internalId>263</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01131_STARTED_LOCKED_2_STARTED_UNLOCKED</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01153_IsUnlockSafe_NoCallbackConfigured</srcid><srcstatus/><internalId>726</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0112.AuthenticationJobs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_649</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs" title="Functionality requirements: NVRAM Callback Functions">
    <specobject>
      <id>DevAuth.EB.DevAuthNvramCallbacks_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9151</sourceline>
      <version>1</version>
      <description>
        DevAuth shall implement the following configuration container:
        Name: DevAuthNvramCallbacks
        Parent Container: DevAuthGeneral
        Description: This container describes the callback function to read and write
                     in ECU persistent memory (NVRAM).
        Multiplicity: 1
        Build Variant Multiplicity: false
        Post-Build Variant Value: false
        Value Configuration Class:  Link-time (All variants)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1571</srcid><srcstatus/><internalId>375</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0104.NvramSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.DevAuthSetNvramCallbackName_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9178</sourceline>
      <version>1</version>
      <description>
        DevAuth shall implement the following configuration parameter:
        Name: DevAuthSetNvramCallbackName
        Parent Container: DevAuthNvramCallbacks
        Description: This parameter holds C callback function name used to set an entry
                     in a persistent memory (NVRAM).
        Multiplicity: 0..1
        Multiplicity Configuration Class: Link-time
        Value Configuration Class: Link-compile time
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1590</srcid><srcstatus/><internalId>377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0104.NvramSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.DevAuthGetNvramCallbackName_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9204</sourceline>
      <version>1</version>
      <description>
        DevAuth shall implement the following configuration parameter:
        Name: DevAuthGetNvramCallbackName
        Parent Container: DevAuthNvramCallbacks
        Description: This parameter holds C callback function name used to retrieve an entry
                     from a persistent memory (NVRAM).
        Multiplicity: 0..1
        Multiplicity Configuration Class: Link-time
        Value Configuration Class: Link-compile time
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1616</srcid><srcstatus/><internalId>379</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0104.NvramSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.User_DevAuthSetNvramData</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9230</sourceline>
      <version>1</version>
      <description>
        Service name: User_DevAuthSetNvramData
        Syntax: Std_ReturnType User_DevAuthSetNvramData
        (
          uint8 PortIdx,
          DevAuth_NvramDataType* Data
        )
        Service ID[hex]: 0x00
        Sync/Async: Synchronous
        Reentrancy: Don't care
        Parameters (in): PortIdx - Port index
        Parameters (in): DataPtr - Pointer to that data that shall be stored in NVRAM
        Return value: Std_ReturnType
        E_OK: Entry successfully stored in NVRAM
        E_NOT_OK: Storing entry failed

        Description: DevAuth shall call this user defined callback function (if configured) to
                     store an entry in NVRAM memory. The entry is indexed by PortIdx.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <verifycrit>
        Test the following use cases:
        - Bring Client state machine in each of 3 states: AUTH_STOPPED, AUTH_STARTED_UNLOCKED,
          AUTH_STARTED_LOCKED.
        - Initialize DevAuth
        - Verify that after initialization Client state machine state has not changed.
        ...
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01128_Initial_2_AUTH_STOPPED</srcid><srcstatus/><internalId>701</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01129_Initial_2_STARTED_LOCKED</srcid><srcstatus/><internalId>702</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01131_STARTED_LOCKED_2_STARTED_UNLOCKED</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/DevAuth_Lcfg.c_46</srcid><srcstatus/><internalId>193</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0104.NvramSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.User_DevAuthGetNvramData</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9274</sourceline>
      <version>1</version>
      <description>
        Service name: User_DevAuthGetNvramData
        Syntax: Std_ReturnType User_DevAuthFetNvramData
        (
          uint8 PortIdx,
          DevAuth_NvramDataType* Data
        )
        Service ID[hex]: 0x00
        Sync/Async: Synchronous
        Reentrancy: Don't care
        Parameters (in): PortIdx - Port index
        Parameters (out): DataPtr - Pointer to that data that shall be retrieved from NVRAM
        Return value: Std_ReturnType
        E_OK: Entry successfully retrieved in NVRAM
        E_NOT_OK: Retrieving entry failed

        Description: DevAuth shall call this user defined callback function (if configured) to
                     retrieve an entry from NVRAM memory. The entry is indexed by PortIdx.
                     If callback fails to return entry DevAuth shall set ClientSM state to default.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01128_Initial_2_AUTH_STOPPED</srcid><srcstatus/><internalId>701</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01129_Initial_2_STARTED_LOCKED</srcid><srcstatus/><internalId>702</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01130_Initial_2_STARTED_UNLOCKED</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01131_STARTED_LOCKED_2_STARTED_UNLOCKED</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01132_Initial_2_Default_GetNvramData_FpFailed</srcid><srcstatus/><internalId>705</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01154_Initial_2_Default_GetNvramData_InvalidState</srcid><srcstatus/><internalId>727</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/DevAuth_Lcfg.c_54</srcid><srcstatus/><internalId>194</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0104.NvramSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs" title="Functionality requirements: Key Exchange">
    <specobject>
      <id>DevAuth.EB.XdmCheck.DevAuthMaxEapMsgSize.Exceeded</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9317</sourceline>
      <version>1</version>
      <description>
        Generator shall raise an error if the sum of SupplicantL3CertificateSize and
        SupplicanL4CertificateSize indicates that EAP-Response(Key exchange) will not fit
        into message buffer.
        This means that DevAuthGeneral/DevAuthMaxEapMsgSize is smaller then the sum of:
        1) The first part of the response message up to the LengthEncryptedData field (41 bytes) +
        2) SupplicantL3CertificateSize +
        3) SupplicanL4CertificateSize +
        4) V (97 bytes) +
        5) Block size rounded encrypted data (CSize) +
        6) Signature (96 bytes).

        CSize = ((RawEncryptedDataSize / BlockSize) + 1) / BlockSize
        RawEncryptedDataSize = DevAuthGeneral/DevAuthMaxSymmetricalKeySize + KeyIdSize(1)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_GenTest_01005_DevAuthMaxEapMsgSize_Too_Small_For_SuppCertificates</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_95</srcid><srcstatus/><internalId>357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.DevAuthAcceptableAuthenticators_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9343</sourceline>
      <version>1</version>
      <description>
        Container Name      DevAuthAcceptableAuthenticators
        Description         This container holds list of acceptable authenticators (senders),
                            specified as L (Locality) certificate subject field.
                            The list is specified for each port, it the container is placed under
                            DevAuthPort container.

        Multiplicity        1..255
        Multiplicity Configuration Class: Post-build time
        Value Configuration Class: Post-build time
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_313</srcid><srcstatus/><internalId>362</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.CERT_958.CheckAcceptableAuthenticator</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9373</sourceline>
      <version>1</version>
      <description>
        On reception of EAP-Request(Key exchange) supplicant shall check that the authenticator
        is an acceptable sender. The following procedure shall be used:
          1) Subjects shall be retrieved from authenticator and supplicant L4 certificates.
          2) Subject elements G, S, OU, O, CN shall be equal.
          3) T and SERIALNUMBER shall be ignored;
          4) L shall match an entry in a configured list.
      List of L is configured in DevAuthAcceptableAuthenticators container.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01079_KeyExchange</srcid><srcstatus/><internalId>652</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01146_KeyEx_CheckAuthIsAcceptable_UnequalSubjects</srcid><srcstatus/><internalId>719</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_3781</srcid><srcstatus/><internalId>283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.CERT_958.CheckNonceA</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9401</sourceline>
      <version>1</version>
      <description>
        On reception of EAP-Request(Key exchange) supplicant shall check that NonceA is a new
        value. This requirement is simplified to only check if the received NonceA is different
        to the previously received value.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01091_KeyEx_NonceA_Repeated</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_3931</srcid><srcstatus/><internalId>285</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.CERT_958.KeyRequestedValid</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9425</sourceline>
      <version>1</version>
      <description>
        On reception of EAP-Request(Key exchange) supplicant shall check that KeyRequested field
        contains the value 0x01 0x00 0x00 0x00.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01090_KeyExReq_KeyReqValueInvalid</srcid><srcstatus/><internalId>663</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_3926</srcid><srcstatus/><internalId>284</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.CERT_958.SignatureValid</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9448</sourceline>
      <version>1</version>
      <description>
        On reception of EAP-Request(Key exchange) supplicant shall check that the received signature
        is the valid one.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01079_KeyExchange</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4002</srcid><srcstatus/><internalId>286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.CheckPreloadedCertificates</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9471</sourceline>
      <version>1</version>
      <description>
        During preparation of EAP-Response(AuthEcu) and EAP-Response(Key exchange) DevAuth shall use
        Csm_CertificateParse() to check if L2 (DevAuthL2CertificateRef) and supplicant L3
        (DevAuthSupplicantL3CertificateRef) and L4 (DevAuthSupplicantL4CertificateRef) certificates
        are available.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01079_KeyExchange</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0101.AuthenticateEcu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.KeyExchangeReq.CheckAuthCertificates</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9498</sourceline>
      <version>1</version>
      <description>
        During preparation of EAP-Response(Key exchange) DevAuth shall check authenticator
        certificates in the following way:
        1) Check that received CertA contains 2 authenticator certificates - L4 and L3, and
           that the size of those certificates match LengthCert.
        2) Use Csm_CertificateParse() to verify both AuthCertL4 and AuthCertL3 certificates.
        3) Use Csm_CertificateVerify() to verify AuthCertL4 against AuthCertL3.
        4) Use Csm_CertificateVerify() to verify AuthCertL3 against pre-loaded L2 certificate.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01079_KeyExchange</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_3449</srcid><srcstatus/><internalId>280</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_3492</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_3573</srcid><srcstatus/><internalId>282</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.SymmetricalKey</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9526</sourceline>
      <version>1</version>
      <description>
        Symmetrical key that is used for ICV calculation and is a subject of Key exchange process
        is freshly generated with each key exchange session.
        It is generated by random number generator, with a size depending on a configured
        crypto suite as defined in [DevAuth_NET_SEC_159].
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01079_KeyExchange</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.KeyExchange.ShortResponse</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9550</sourceline>
      <version>1</version>
      <description>
        If verifying EAP-Request(KeyExchange) or generating EAP-Response(Key exchange) fails
        for any reason (e.g. due to certificate missing, CertA verification failure, Csm
        returns error, etc.), DevAuth will send back a "short" EAP-Response(Key exchange)
        message with:
          1) Vendor Data that contains only Sequence Number and Length.
          2) Length is set to 0.
      </description>
      <comment>
        BMW QA 43.
      </comment>
      <verifycrit>
        When configuring Csm stubs pay attention that the functions Csm_SignatureVerify and
        Csm_CertificateVerify use output parameter verifyPtr in addition to API return value
        to report unsuccessful operation result.

        Test use case for each error case:
        - NonceB generation failed,
        ...
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01080_KeyEx_NonceB_NotGenerated</srcid><srcstatus/><internalId>653</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01081_KeyEx_Cryptogram_NotGenerated</srcid><srcstatus/><internalId>654</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01082_KeyEx_CertB_Not_Filled</srcid><srcstatus/><internalId>655</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01083_KeyEx_Signature_NotGenerated</srcid><srcstatus/><internalId>656</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01084_KeyExReq_SuppCert_NotValid</srcid><srcstatus/><internalId>657</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01085_KeyExReq_AuthCert_LoadFailed</srcid><srcstatus/><internalId>658</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01086_KeyExReq_AuthCert_VerifyFailed</srcid><srcstatus/><internalId>659</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01087_KeyExReq_AuthSignature_VerifyFailed</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01088_KeyExReq_MsgTooShort</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01089_KeyExReq_CertValueInvalid</srcid><srcstatus/><internalId>662</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01090_KeyExReq_KeyReqValueInvalid</srcid><srcstatus/><internalId>663</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01091_KeyEx_NonceA_Repeated</srcid><srcstatus/><internalId>664</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01142_KeyEx_SuppL3CertSizeGreaterThanMaxL3Size</srcid><srcstatus/><internalId>715</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01143_KeyEx_SuppL4CertSizeGreaterThanMaxL4Size</srcid><srcstatus/><internalId>716</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01150_KeyEx_SubjElemExceededBufferSize</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs" title="Other requirements">
    <specobject>
      <id>DevAuth.EB.NET_SEC_1176</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9588</sourceline>
      <version>1</version>
      <description>
        After not receiving an answer to EAPoL-Start and its retries (for a time interval
        specified in DevAuthAuthenticatorResponseTimeout), the ECU shall start the following:
        - Activate communications as after a EAP Success.
        - Activate diagnostics by calling user defined callback function specified in
          DevAuthEnableDiagnosticCallbackName.
        Note: This allows to access the ECUs diagnostics even, when no authenticator is present.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01127_SEND_EAPOL_START_2_READY_ON_AuthRespTimeout</srcid><srcstatus/><internalId>700</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/DevAuth_Cfg.h.m4_55</srcid><srcstatus/><internalId>189</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.NET_SEC_1178</id>
      <status>approved</status>
      <source>LH_10833648_Ethernet_Network_Security_V2.1.pdf</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9619</sourceline>
      <version>1</version>
      <description>
        If ECU Authentication is enabled, receiving an EAP Failure shall do the following:
        - Report an event using event logging functionality.
        - Restart with a EAPoL-Start after DevAuthHeldWhileTimeout expires (default 60s).
      </description>
      <comment>&lt;comment/&gt;</comment>
      <verifycrit>
        Test the following use cases:
        1) Reception of EAP-Failure message and expiration of HeldWhileTimeout.
        2) Logging of event when EAP-Failure message is received.
      </verifycrit>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01010_Ready_ON_2_Ready_ON_EapFailure</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01058_READY_ON_2_SEND_EAPOL_START_HeldWhileTimeout</srcid><srcstatus/><internalId>631</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/DevAuth_Cfg.h.m4_46</srcid><srcstatus/><internalId>188</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_4941</srcid><srcstatus/><internalId>331</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swrs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth.dsn.Func0110.LogStatus</srcid><srcstatus/><internalId>444</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0109.EapFailure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.GetVersionInfo</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9653</sourceline>
      <version>1</version>
      <description>
        The call of DevAuth_GetVersionInfo() shall return the module version independent if the
        module is initialized or not.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01008_GetVersionInfo</srcid><srcstatus/><internalId>581</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth.c.m4_177</srcid><srcstatus/><internalId>205</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.RespMsg.RepeatTransmission</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9669</sourceline>
      <version>1</version>
      <description>
        If message transmit fails for any reason, DevAuth shall retry transmission in the next
        MainFunction() call. This requirement does not apply to EAPoL-Logoff message as DevAuth
        will not try to retransmit this message.
      </description>
      <comment>&lt;comment/&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01026_MessageReTransmission</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01027_ProvideTxBuffer_BUFREQ_E_NOT_OK</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01030_AuthenticateEcu_BufferNotProvided</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01031_EapRespIdentity_BufferNotProvided</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01032_RxIdentityRes_ReTransmission</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01039_TxEapolLogoff_GetTxBufferFailed</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01077_FragmentedRx_TxAck_Retry</srcid><srcstatus/><internalId>650</internalId></linkedfrom><linkedfrom><srcid>DevAuth_ConTest01078_READY_OFF_TxIdentityRes_Retransmission</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.KeyAgreement.ECDH.p384</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9685</sourceline>
      <version>1</version>
      <description>
        DevAuth shall supported the following key agreement: ECC Diffie-Hellman (ECDH), p384 curve.
        Consequently the sizes of key elements are as follows:
        1) The size of a public and ephemeral keys is 96 bytes
        2) The size of a private keys is 48 bytes
        3) The size of a common secret is 48 bytes
        4) The size of a signature is 96 bytes.
      </description>
      <comment>
        Source of information is BMW QA session - questions 35, 50 and 51.
      </comment>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/DevAuth_Int.h_616</srcid><srcstatus/><internalId>197</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_48</srcid><srcstatus/><internalId>242</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_55</srcid><srcstatus/><internalId>243</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_74</srcid><srcstatus/><internalId>244</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.ASN1.LengthEncoding</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9714</sourceline>
      <version>1</version>
      <description>
        EAP-Request(Key exchange) message contains two certificates in a single CertA field. 
        In order to delimit them it is necessary to extract information of their size by parsing
        their tag-length-value which is given in ASN.1 length field encoding.
        DevAuth supports up to 3 bytes long length fields (up to 65535 bytes). 
      </description>
      <comment>&lt;comment/&gt;</comment>
      <releases>
        <release/>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/DevAuth_SecureTiming.c_3409</srcid><srcstatus/><internalId>279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0103.KeyExchange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.PostBuildSelectable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>9739</sourceline>
      <version>1</version>
      <description>
        DevAuth shall support post-build selectable configuration for the following parameters:
        1) DevAuthPort\DevAuthInternalIpAddress, 
        2) DevAuthPort\DevAuthInternalDiagnosticsPortNumber,
        3) DevAuthPort\DevAuthDiagnosticsAddress.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_ConTest01161_PostBuildSelectable</srcid><srcstatus/><internalId>734</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/DevAuth_PBcfg.h_9</srcid><srcstatus/><internalId>190</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/DevAuth_PBcfg.c_5</srcid><srcstatus/><internalId>195</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_36</srcid><srcstatus/><internalId>353</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_182</srcid><srcstatus/><internalId>359</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_213</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_243</srcid><srcstatus/><internalId>361</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/DevAuth.xgen_20</srcid><srcstatus/><internalId>385</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/DevAuth.xgen_62</srcid><srcstatus/><internalId>386</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/DevAuth.xgen_293</srcid><srcstatus/><internalId>387</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0114.PostBuildSelectable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs" title="XDM Checks">
    <specobject>
      <id>DevAuth.EB.XdmCheck.DevAuthEnableDiagCallbackName.Empty</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>10609</sourceline>
      <version>1</version>
      <description>
        Generator shall raise an error if DevAuthGeneral/DevAuthEnableDiagCallback is enabled,
        but the user callback function name is not specified (field is empty).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_GenTest_01003_Invalid_DevAuth_Xdm_DevAuthEnableDiagCallbackName_Empty</srcid><srcstatus/><internalId>738</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1455</srcid><srcstatus/><internalId>366</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0102.EnableDiagnostic</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.XdmCheck.DevAuthIsUnlockSafeCallbackName.Empty</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>10629</sourceline>
      <version>1</version>
      <description>
        Generator shall raise an error if DevAuthGeneral/DevAuthIsUnlockSafeCallback is enabled,
        but the user callback function name is not specified (field is empty).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_GenTest_01007_Invalid_DevAuth_Xdm_DevAuthIsUnlockSafeCallbackName_Empty</srcid><srcstatus/><internalId>742</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1563</srcid><srcstatus/><internalId>374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0112.AuthenticationJobs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.XdmCheck.DevAuthSetNvramData.Empty</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>10649</sourceline>
      <version>1</version>
      <description>
        Generator shall raise an error if DevAuthGeneral/DevAuthSetNvramCallbackName is enabled,
        but the user callback function name is not specified (field is empty).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_GenTest_01001_Invalid_DevAuth_Xdm_DevAuthSetNvramData_Empty</srcid><srcstatus/><internalId>736</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1611</srcid><srcstatus/><internalId>378</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0104.NvramSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.XdmCheck.DevAuthGetNvramData.Empty</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>10669</sourceline>
      <version>1</version>
      <description>
        Generator shall raise an error if DevAuthGeneral/DevAuthGetNvramCallbackName is enabled,
        but the user callback function name is not specified (field is empty).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_GenTest_01002_Invalid_DevAuth_Xdm_DevAuthGetNvramData_Empty</srcid><srcstatus/><internalId>737</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1637</srcid><srcstatus/><internalId>380</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0104.NvramSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.XdmCheck.DevAuthLogStatusCallbackName.Empty</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>10689</sourceline>
      <version>1</version>
      <description>
        Generator shall raise an error if DevAuthGeneral/DevAuthLogStatusCallback is enabled,
        but the user callback function name is not specified (field is empty).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1682</srcid><srcstatus/><internalId>383</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_GenTest_01004_Invalid_DevAuth_Xdm_DevAuthLogStatusCallbackName_Empty</srcid><srcstatus/><internalId>739</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.dsn.Func0110.LogStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.XdmCheck.DevAuthReadEcuUidCallbackName.Empty</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>10709</sourceline>
      <version>1</version>
      <description>
        Generator shall raise an error if DevAuthGeneral/DevAuthReadEcuUidCallback is enabled,
        but the user callback function name is not specified (field is empty).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_1505</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_GenTest_01006_Invalid_DevAuth_Xdm_DevAuthReadEcuUidCallbackName_Empty</srcid><srcstatus/><internalId>741</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.XdmCheck.DevAuthPortIdx.NotZeroBased</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>10724</sourceline>
      <version>1</version>
      <description>
        Generator shall raise an error if DevAuthPortIdx is not 0-based and dense.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_64</srcid><srcstatus/><internalId>355</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_GenTest_01008_Invalid_DevAuth_Xdm_AuthenticationPorts_Exceeded_NotZeroBased</srcid><srcstatus/><internalId>743</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.XdmCheck.DevAuthMaxAuthenticationPorts.Exceeded</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>10738</sourceline>
      <version>1</version>
      <description>
        Generator shall raise an error if number of configured DevAuthPorts exceed
        /DoIPGeneral/DevAuthMaxAuthenticationPorts.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_65</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_GenTest_01008_Invalid_DevAuth_Xdm_AuthenticationPorts_Exceeded_NotZeroBased</srcid><srcstatus/><internalId>743</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>
    <specobject>
      <id>DevAuth.EB.XdmCheck.DevAuthEapEthIfControllerRef.NotUntagged</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/doc/project/design/pdf/DevAuth_Design-profiled.xml</sourcefile>
      <sourceline>10753</sourceline>
      <version>1</version>
      <description>
        Generator shall raise an error if /DevAuthPort/DevAuthEapEthIfControllerRef is configured
        to EthIfCtrl that is not Vlan untagged.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/DevAuth.xdm.m4_172</srcid><srcstatus/><internalId>358</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DevAuth_GenTest_01009_Invalid_DevAuth_Xdm_DevAuthEapEthIfControllerRef_NotUntagged</srcid><srcstatus/><internalId>744</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_DevAuth_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/build/reqm/common_req/DevAuth_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(DevAuth.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>DevAuth_ConTest01_NoDet00_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth_MainFunction() is called before DevAuth_Init(),
    its processing is skipped and no DET is generated.
  
Test Object: 
    DevAuth_MainFunction().
  
Test Precondition: 
    DevAuth not initialized.
  
Test Execution: 
    01: Call DevAuth_MainFunction().
    02: VP(): Verify that no DET is generated.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.MainFunction.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01_Det001_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>113</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Call all APIs while DevAuth module is uninitialized.
  
Test Object: 
    Verify APIs reaction when called while DevAuth is uninitialized.
  
Test Precondition: 
    DET enabled.
    DevAuth uninitialized.
  
Test Execution: 
    01: Call DevAuth_RxIndication().
    02: VP(DevAuth.EB.Det.RxIndication.Uninit): Verify that DEVAUTH_E_UNINIT was reported to DET.
    03: Call DevAuth_PDelayReqIndication().
    04: VP(DevAuth.EB.Det.PDelayReqIndication.Uninit): Verify that it returned E_NOT_OK.
    05: VP(DevAuth.EB.Det.PDelayReqIndication.Uninit): Verify that DEVAUTH_E_UNINIT was reported
        to DET.
    06: Call DevAuth_PDelayResIndication().
    07: VP(DevAuth.EB.Det.PDelayResIndication.Uninit): Verify that it returned E_NOT_OK.
    08: VP(DevAuth.EB.Det.PDelayResIndication.Uninit): Verify that DEVAUTH_E_UNINIT was reported
        to DET.
    09: Call DevAuth_TxConfirmation().
    10: VP(DevAuth.EB.Det.TxConfirmation.Uninit): Verify that DEVAUTH_E_UNINIT was reported to DET.
    11: Call DevAuth_TrcvLinkStateChg().
    12: VP(DevAuth.EB.Det.TrcvLinkStateChg.Uninit): Verify that DEVAUTH_E_UNINIT was reported
        to DET.
    13: Call DevAuth_RequestComModeNoCom().
    14: VP(DevAuth.EB.Det.RequestComModeNoCom.Uninit): Verify that DEVAUTH_E_UNINIT was reported
        to DET.
    15: Call DevAuth_EcuAuthStart().
    16: VP(DevAuth.EB.Det.EcuAuthStart.Uninit): Verify that DEVAUTH_E_UNINIT was reported
        to DET.
    17: Call DevAuth_EcuAuthStop() to disable (stop) authentication.
    18: VP(DevAuth.EB.Det.EcuAuthStop.Uninit): Verify that DEVAUTH_E_UNINIT was reported
        to DET.
    19: Call DevAuth_EcuAuthLock().
    20: VP(DevAuth.EB.Det.EcuAuthLock.Uninit): Verify that DEVAUTH_E_UNINIT was reported
        to DET.
    21: Call DevAuth_EcuAuthUnlock().
    22: VP(DevAuth.EB.Det.EcuAuthUnlock.Uninit): Verify that DEVAUTH_E_UNINIT was reported
        to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.RxIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.Det.PDelayReqIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.Det.PDelayResIndication.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.Det.TxConfirmation.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.Det.TrcvLinkStateChg.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.Det.RequestComModeNoCom.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.Det.EcuAuthStart.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.Det.EcuAuthStop.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.Det.EcuAuthLock.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.Det.EcuAuthUnlock.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01_Det002_GetVersionInfo_InvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>306</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if DevAuth_GetVersionInfo() is called with NULL_PTR,
    DEVAUTH_E_PARAM_POINTER will be reported to DET.
  
Test Object: 
    DevAuth_GetVersionInfo().
  
Test Precondition: 
  
Test Execution: 
    01: Call DevAuth_GetVersionInfo(NULL_PTR).
    02: VP(DevAuth.EB.Det.GetVersionInfo.InvalidVersionInfo): Verify that DEVAUTH_E_PARAM_POINTER
        was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.GetVersionInfo.InvalidVersionInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01_Det003_Init_InvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>349</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if DevAuth_Init() is called with NULL_PTR,
    DEVAUTH_E_PARAM_POINTER will be reported to DET.
  
Test Object: 
    DevAuth_Init().
  
Test Precondition: 
  
Test Execution: 
    01: Call DevAuth_Init(NULL_PTR).
    02: VP(DevAuth.EB.Det.Init.InvalidConfigPtr): Verify that DEVAUTH_E_PARAM_POINTER was reported
        to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.Init.InvalidConfigPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01_Det004_RxIndication_InvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>390</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     This test verifies that DevAuth_RxIndication() will raise DET error in case it is called with
     invalid FrameType or PhysAddrPtr or DataPtr set to NULL_PTR.
  
Test Object: 
    DevAuth_RxIndication().
  
Test Precondition: 
    DevAuth initialized.
  
Test Execution: 
    01: Call DevAuth_RxIndication() with wrong FrameType.
    02: VP(DevAuth.EB.Det.RxIndication.InvalidFrameType): Verify that DEVAUTH_E_INVALID_PARAMETER
        was reported to DET.
    03: Call DevAuth_RxIndication() with PhysAddrPtr pointer as NULL_PTR.
    04: VP(DevAuth.EB.Det.RxIndication.InvalidPhysAddrPtr): Verify that DEVAUTH_E_PARAM_POINTER was
        reported to DET.
    05: Call DevAuth_RxIndication() with DataPtr pointer as NULL_PTR.
    06: VP(DevAuth.EB.Det.RxIndication.InvalidDataPtr): Verify that DEVAUTH_E_PARAM_POINTER was
        reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.RxIndication.InvalidFrameType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.Det.RxIndication.InvalidDataPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.Det.RxIndication.InvalidPhysAddrPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01_Det005_PDelayReqIndication_InvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>481</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if DevAuth_PDelayReqIndication() is called with PdelayReqRxTimestampPtr
    or ResponseNoncePtr as NULL_PTR, DEVAUTH_E_PARAM_POINTER will be reported to DET.
  
Test Object: 
    DevAuth_PDelayReqIndication().
  
Test Precondition: 
    DevAuth initialized.
  
Test Execution: 
    01: Call DevAuth_PDelayReqIndication() with PdelayReqRxTimestampPtr pointer as NULL_PTR.
    02: VP(DevAuth.EB.Det.PDelayResIndication.InvalidPdelayReqRxTimestampPtr): Verify that function
        returned E_NOT_OK.
    03: VP(DevAuth.EB.Det.PDelayReqIndication.InvalidPdelayReqRxTimestampPtr): Verify that
        DEVAUTH_E_INVALID_PARAMETER was reported to DET.
    04: Call DevAuth_PDelayReqIndication() with ResponseNoncePtr pointer as NULL_PTR.
    05: VP(DevAuth.EB.Det.PDelayResIndication.InvalidResponseNoncePtr): Verify that function
        returned E_NOT_OK.
    06: VP(DevAuth.EB.Det.PDelayReqIndication.InvalidResponseNoncePtr): Verify that
        DEVAUTH_E_PARAM_POINTER was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.PDelayReqIndication.InvalidPdelayReqRxTimestampPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.Det.PDelayReqIndication.InvalidResponseNoncePtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01_Det006_PDelayResIndication_InvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>566</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if DevAuth_PDelayResIndication() is called with PdelayResTxTimestamp as
    NULL_PTR, DEVAUTH_E_PARAM_POINTER will be reported to DET.
  
Test Object: 
    DevAuth_PDelayResIndication().
  
Test Precondition: 
    DevAuth initialized.
  
Test Execution: 
    01: Call DevAuth_PDelayResIndication() with PdelayResTxTimestampPtr pointer as NULL_PTR.
    02: VP(DevAuth.EB.Det.PDelayResIndication.InvalidPdelayResTxTimestampPtr): Verify that function
        returned E_NOT_OK.
    03: VP(DevAuth.EB.Det.PDelayResIndication.InvalidPdelayResTxTimestampPtr): Verify that
        DEVAUTH_E_INVALID_PARAMETER was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.PDelayResIndication.InvalidPdelayResTxTimestampPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01_Det007_TrcvLinkStateChg_InvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>625</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if DevAuth_TrcvLinkStateChg() is called with invalid value of LinkState,
    DEVAUTH_E_INVALID_PARAMETER will be reported to DET.
  
Test Object: 
    DevAuth_TrcvLinkStateChg().
  
Test Precondition: 
    DevAuth initialized.
  
Test Execution: 
    01: Call DevAuth_TrcvLinkStateChg() with PdelayResTxTimestampPtr pointer with invalid state.
    02: VP(DevAuth.EB.Det.TrcvLinkStateChg.InvalidLinkState): Verify that
        DEVAUTH_E_INVALID_PARAMETER was reported to DET.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.Det.TrcvLinkStateChg.InvalidLinkState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01000_FirstEapolStartTx</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>674</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies Port state machine transition form LINK_INACTIVE to SEND_EAPOL_START upon
    reception of link state ACTIVE notification, indirectly confirming state transition from
    INITIAL -&gt; LINK_INACTIVE. It also verifies Eapol-Start message format and initial transmission
    towards Ethernet interface.
  
Test Object: 
    EAPOL-Start message.
    Status log reporting.
    Port state transition: INITIAL -&gt; LINK_INACTIVE.
    Port state transition: LINK_INACTIVE -&gt; SEND_EAPOL_START.
  
Test Precondition: 
    DevAuth initialized.
  
Test Execution: 
    01: Call DevAuth_TrcvLinkStateChg() to indicate link activation of EthIfController
        (EthIfCtrlIdx = 5).
    02: VP(DevAuth.EB.LogStatusCode): Verify that status log raised correct code for
           DEVAUTH_LINK_ACTIVE.
    03: Call DevAuth_MainFunction() to process link activation.
    04: VP(DevAuth_NET_SEC_116, DevAuth_NET_SEC_133, DevAuth.EB.PortSM.Initial_2_LinkInactive,
        DevAuth.EB.PortSM.LinkInactive_2_SendEapolStart): Verify Port_0 state machine transition
        from LINK_INACTIVE -&gt; SEND_EAPOL_START state by verifying that
        EthIf_DisableRelatedEthIfCtrls() was called, verifying transmission of
        Eapol-Start message - EthIf_ProvideTxBuffer() and EthIf_Transmit() are called with expected
        parameters and buffer contains Eapol_Start message.
    05: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_TX_EAPOLSTART.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_133</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.Initial_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.LinkInactive_2_SendEapolStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01001_SendEapolStart_LinkInactive</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>776</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies Port state machine transition form SEND_EAPOL_START to LINK_INACTIVE upon
    the call of DevAuth_TrcvLinkStateChg().
  
Test Object: 
    Port state transition: SEND_EAPOL_START -&gt; LINK_INACTIVE.
  
Test Precondition: 
    Port state machine is in state SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_TrcvLinkStateChg() to set the Link state to DOWN for Port 0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify State Machine transition from SEND_EAPOL_START -&gt; LINK_INACTIVE state for
              Port 0.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.SendEapolStart_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01002_RepeatEapolStartTx</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>831</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in SEND_EAPOL_START state it shall repeat transmission
    of EAPoL start messages in time intervals 100ms, 200ms, 400ms, 800ms, 800ms, ...
  
Test Object: 
    EAPOL-Start message transmission.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state: SEND_EAPOL_START.
  
Test Execution: 
    01: VP(DevAuth_NET_SEC_183, DevAuth.EB.PortSM.SendEapolStart_2_SendEapolStart_SendStartTimeout):
        Verify that Eapol-Start message is transmitted in intervals (F * 100 ms),
        where F = [1, 2, 4, 8, 8], by checking the sequence of steps 04-05:
    02: Call DevAuth_MainFunction() to tick Initial Eapol timer (F*INITIAL_EAPOL_TIMEOUT - 1) times.
    03: Verify that no message have been transmitted.
    04: Tick initial Eapol timer one more time.
    05: VP(DevAuth_NET_SEC_183, DevAuth.EB.PortSM.SendEapolStart_2_SendEapolStart_SendStartTimeout,
        DevAuth_NET_SEC_132): Verify that Eapol-Start message have been transmitted towards Ethernet
        interface.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_183</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.SendEapolStart_2_SendEapolStart_SendStartTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_132</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01003_EapIdentity</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>930</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in SEND_EAPOL_START and it receives EAP-Request(Identity)
    message, it will transmit EAP-Response(Identity) message and make transition to
    READY_AUTHENTICATE_ON state.
  
Test Object: 
    Reception of EAP-Request(Identity) message.
    Transmission of EAP-Response(Identity) message.
    Status log reporting.
    Port state transition: SEND_EAPOL_START -&gt; READY_AUTHENTICATE_ON (upon reception of
    EAP-Request(Identity)).
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) on Port_0.
    02: VP(DevAuth.EB.LogStatusCode): Verify that status log raised correct code for
           DEVAUTH_RX_EAPIDENTITY.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth.EB.User_DevAuthReadEcuUid): Verify that user callback function is called to
        retrieve EcuUid.
    05: VP(DevAuth_NET_SEC_121, DevAuth_NET_SEC_122, DevAuth_NET_SEC_171, DevAuth_NET_SEC_132,
          DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_RxIdentityReq): Verify that
          reception of RAP-Request(Identity) has generated EAP-Response(Identity) message
          containing supplicant ECU-UID and that state machine transition from SEND_EAPOL_START -&gt;
          READY_AUTHENTICATE_ON has occurred.
    06: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_TX_IDENTITYRESP.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_122</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_171</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_132</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthReadEcuUid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_RxIdentityReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01004_AuthenticateEcu</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>1043</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in READY_AUTHENTICATE_ON state and it receives Expanded
    EAP-Request(AuthECU) message, and it receives both PDelays request and response indications
    with the correct values of Nonce1, it will transmit Expanded EAP-Response(AuthEcu) message
    with Status Code set to 0 (OK) and stay in READY_AUTHENTICATE_ON state.
  
Test Object: 
    Reception of Expanded EAP-Request(Authenticate ECU) message.
    Transmission of Expanded EAP-Response(Authenticate ECU) message.
    Port state self transition: READY_AUTHENTICATE_ON -&gt; READY_AUTHENTICATE_ON (upon reception of
    Expanded EAP-Request(AuthEcu).
    Status log reporting.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call EbTest_ExchangeKeys() to Exchange keys with Authenticator.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(AuthEcu) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth_NET_SEC_176): Verify that no message is generated because no PDelay Request and
        PDelay Response indications have been received.
    05: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay Request message.
    06: VP(DevAuth_NET_SEC_140, DevAuth_NET_SEC_141): Verify that Csm_RandomGenerate() was called to
        generate Nonce2 with expected parameters values.
    07: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_RX_PDELAYREQ.
    08: Call DevAuth_MainFunction() to process state machine transition.
    09: VP(DevAuth_NET_SEC_176): Verify that no message is generated because PDelay Response
           indicationhave not been received.
    10: Call DevAuth_PDelayRespIndication() to indicate reception PDelay Response message.
    11: VP(DevAuth.EB.LogStatusCode): Verify that status log raised correct code for
           DEVAUTH_TX_PDELAYRES.
    12: Call DevAuth_MainFunction() to process state machine transition.
    13: VP(DevAuth_NET_SEC_136, DevAuth_NET_SEC_138, DevAuth_NET_SEC_143, DevAuth_NET_SEC_177,
           DevAuth_NET_SEC_176, DevAuth_NET_SEC_132,
           DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_AuthEcu,
           DevAuth_NET_SEC_1181, DevAuth_NET_SEC_1138, DevAuth_NET_SEC_1139, DevAuth_NET_SEC_1140):
           Verify that EAP-Response(AuthEcu) message is transmitted with expected message format
           and Status Code set to 0 (OK).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_136</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_138</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_132</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1138</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1139</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1140</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_AuthEcu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01005_Ready_RxIdentityReq</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>1201</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in READY_AUTHENTICATE_ON state and it receives
    EAP-Request(Identity) message it will transmit EAP-Response(Identity) message and stay in
    READY_AUTHENTICATE_ON state.
  
Test Object: 
    Reception of EAP-Request(Identity) message.
    Transmission of EAP-Response(Identity) message.
    Port state self transition: READY_AUTHENTICATE_ON -&gt; READY_AUTHENTICATE_ON (upon reception of
    Identity Req message).
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(DevAuth.EB.PortSM.Ready_2_Ready_RxIdentityReq): Verify that EAP-Response(Identity)
        message is transmitted and State machine transition from
        READY_AUTHENTICATE_ON -&gt; READY_AUTHENTICATE_ON state for Port 0 has occurred.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxIdentityReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01006_Ready_EapSuccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>1272</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in READY_AUTHENTICATE_ON state and it receives Eap-Success
    message, it will activate traffic on all related ports and stay in READY_AUTHENTICATE_ON state.
  
Test Object: 
    Reception of Eap-Success message.
    Status log reporting.
    Port state transition: READY_AUTHENTICATE_ON -&gt; READY_AUTHENTICATE_ON (upon reception of
    Eap-Success).
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of Eap-Success message on Port_0.
    02: VP(DevAuth.EB.LogStatusCode): Verify that status log raised correct code for
           DEVAUTH_RX_EAPSUCCESS.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_PORT_AUTHENTICATED.
    05: VP(DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxEapSuccess,
           DevAuth_NET_SEC_1177): Verify that EthIf_EnableRelatedEthIfCtrls() was called for the
           given port  and State machine transition from
           READY_AUTHENTICATE_ON -&gt; READY_AUTHENTICATE_ON state for Port 0 has occurred.
    06: Call DevAuth_MainFunction() to tick AUTHENTICATIOIN_SESSION_TIMEOUT times.
    07: VP(DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxEapSuccess):
        Verify that AuthenticationSessionTimeout has been disabled because because no
        further action is taken.
    08: Configure EthIf_EnableRelatedEthIfCtrls_Stub to return E_NOT_OK.
    09: Call DevAuth_RxIndication() again to indicate reception of Eap-Success message.
    10: Call DevAuth_MainFunction() to process state machine transition.
    11: VP(DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxEapSuccess):
        Verify that EthIf_EnableRelatedEthIfCtrls() was called again which indicates
        State machine is in state READY_AUTHENTICATE_ON.
    12: VP(DevAuth.EB.LogStatusCode): Verify that status log reported ENABLE_ETHIFCTRLS_FAILED
        since EthIf_EnableRelatedEthIfCtrls() returned E_NOT_OK.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxEapSuccess</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01007_Ready_ON_2_Inactive_LinkDown</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>1407</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies Port state machine transition form READY_AUTHENTICATE_ON to LINK_INACTIVE
    upon the call of DevAuth_TrcvLinkStateChg().
  
Test Object: 
    Port state transition: READY_AUTHENTICATE_ON -&gt; LINK_INACTIVE.
    Status log reporting.
  
Test Precondition: 
    Port state machine is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_TrcvLinkStateChg() to set the Link state to DOWN for Port 0.
    02: VP(DevAuth.EB.LogStatusCode): Verify that status log raised correct code for
           DEVAUTH_LINK_INACTIVE.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_PORT_UNAUTHENTICATED.
    05: VP(DevAuth.EB.PortSM.ReadyAuthenticateOn_2_LinkInactive): Verify that LINK_INACTIVE state
           transition occurred.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01008_GetVersionInfo</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>1474</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if DevAuth_GetVersionInfo() is called the function will return module
    version information.
  
Test Object: 
    DevAuth_GetVersionInfo().
  
Test Precondition: 
  
Test Execution: 
    01: Call DevAuth_GetVersionInfo().
    02: VP(DevAuth.EB.GetVersionInfo): Verify that DevAuth_GetVersionInfo() returns the module
        version information.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.GetVersionInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01009_RxIndication_InvalidEthIfCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>1528</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if DevAuth_RxIndication() is called with invalid EhfIfCtrlIdx, DevAuth
    will silently discard Eapol packet.
  
Test Object: 
    DevAuth_RxIndication().
  
Test Precondition: 
  
Test Execution: 
    01: Call DevAuth_RxIndication() with invalid EthIfCtrlIdx.
    02: VP(DevAuth.EB.RxIndication.InvalidEthIfCtrlIdx): Verify that DevAuth_RxIndication() didn't
        call anything as PortIdx is Invalid.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxIndication.InvalidEthIfCtrlIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01010_Ready_ON_2_Ready_ON_EapFailure</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>1576</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in READY_AUTHENTICATE_ON and it receives Eap-Failure
    message, it will disable related port and stay in READY_AUTHENTICATE_ON state.
  
Test Object: 
    Reception of Eap-Failure message.
    Status log reporting.
    Port state transition: READY_AUTHENTICATE_ON -&gt; READY_AUTHENTICATE_ON (upon reception of
    Eap-Failure).
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of Eap-Failure message on Port_0.
    02: VP(DevAuth.EB.NET_SEC_1178, DevAuth.EB.LogStatusCode,
           DevAuth.EB.User_DevAuthLogStatusCallback): Verify that reception of EAP-Failure raised
           status log with correct code.
    03: Set EthIf_DisableRelatedEthIfCtrls stub to return E_NOT_OK.
    04: Call DevAuth_MainFunction() to process state machine transition.
    05: VP(DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxEapFailure): Verify that
           EthIf_DisableRelatedEthIfCtrls() was called for the given port.
    06: VP(DevAuth.EB.LogStatusCode): Verify that status log raised DISABLE_ETHIFCTRLS_FAILED
        since EthIf_DisableRelatedEthIfCtrls returned E_NOT_OK.
    07: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Enable Diagnostics).
    08: Call DevAuth_MainFunction() to process state machine transition.
    09: VP(DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxEapFailure): Verify that
           User Callback EnableDiag was called, indirectly confirming that State machine transition
           from READY_AUTHENTICATE_ON -&gt; READY_AUTHENTICATE_ON state for Port 0.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxEapFailure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.NET_SEC_1178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01011_PDelayReqIndication_InvalidEthIfCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>1690</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if DevAuth_PDelayReqIndication() is called with invalid EthIfCtrlIdx,
    function will return E_NOT_OK and DevAuth shall silently discard PDelay Request Indication.
  
Test Object: 
    DevAuth_PDelayReqIndication().
  
Test Precondition: 
  
Test Execution: 
    01: Call DevAuth_PDelayReqIndication() with invalid EthIfCtrlIdx.
    02: VP(DevAuth.EB.PDelayReqIndication.InvalidEthIfCtrlIdx): Verify that
        DevAuth_PDelayReqIndication() returned E_NOT_OK and call is ignored as PortIdx is Invalid.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PDelayReqIndication.InvalidEthIfCtrlIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01012_PDelayResIndication_InvalidEthIfCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>1743</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if DevAuth_PDelayResIndication() is called with invalid EthIfCtrlIdx,
    function will return E_NOT_OK and DevAuth shall silently discard PDelay Response
    indication.
  
Test Object: 
    DevAuth_PDelayResIndication() with invalid EthIfCtrlIdx.
  
Test Precondition: 
  
Test Execution: 
    01: Call DevAuth_PDelayResIndication().
    02: VP(): Verify that DevAuth_PDelayResIndication() returned E_NOT_OK and didn't call anything
             as PortIdx is Invalid.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PDelayResIndication.InvalidEthIfCtrlIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01013_TrcvLinkStateChg_InvalidEthIfCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>1791</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if DevAuth_TrcvLinkStateChg() is called with invalid EthIfCtrlIdx,
    DevAuth shall silently discard Link State message.
  
Test Object: 
    DevAuth_TrcvLinkStateChg() with invalid EthIfCtrlIdx.
  
Test Precondition: 
  
Test Execution: 
    01: Call DevAuth_TrcvLinkStateChg().
    02: VP(DevAuth.EB.TrcvLinkStateChg.InvalidEthIfCtrlIdx): Verify that DevAuth_TrcvLinkStateChg()
        didn't call anything as PortIdx is Invalid.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.TrcvLinkStateChg.InvalidEthIfCtrlIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01014_RxEapMsg_IncompleteMsg</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>1832</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when incomplete EAP message is received, i.e. the size of the message
    received from  a physical layer is smaller then the value of EAP Length field, DevAuth will
    discard the message.
  
Test Object: 
    Reception of incomplete EAP message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) with incomplete
        message on Port_0.
    02: Call DevAuth_MainFunction() to process the message.
    03: VP(): Verify that EAP-Response(Identity) message is not transmitted because request message
              was discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.IncompleteMsg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01015_EapMsg_InvCode</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>1898</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when EAP request with an invalid value of Code field is received,
    it will be discarded.
  
Test Object: 
    Reception of EAP request message with an invalid Code field value.
    Status log reporting.
  
Test Precondition: 
    Port_0 is in state SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP request message with an invalid
        value of Code field on Port_0.
    02: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_RX_INVALID_EAP_CODE.
    03: Call DevAuth_MainFunction() to process the message.
    04: VP(DevAuth.EB.RxEapMsg.InvalidCode): Verify that EAP-Response message was not transmitted
           because request message was discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.InvalidCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01016_RxEapMsg_Unsupported</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>1965</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when EAP message is received with a message size smaller then the
    minimal supported message size (8 bytes), DevAuth willdiscard it.
  
Test Object: 
    Reception of EAP message.
    Status log reporting.
  
Test Precondition: 
    Port_0 is in state SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP message with message size smaller
        than the minimal size.
    02: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_RX_UNSUPPORTED_MSG.
    02: Call DevAuth_MainFunction() to process the message.
    03: VP(DevAuth.EB.RxEapMsg.Unsupported): Verify that EAP response message is not transmitted
           because received message is discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.Unsupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01017_RxEapMsg_UnsupportedProtocolVersion</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>2032</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives EAP message with unsupported Protocol Version
    (smaller the 2), the message will be discarded.
  
Test Object: 
    Reception of EAP message.
    Status log reporting.
  
Test Precondition: 
    Port_0 is in state SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP message with Invalid Protocol
        version.
    02: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_RX_UNSUPPORTED_PROTOCOL_VER.
    03: Call DevAuth_MainFunction() to process the message.
    04: VP(DevAuth.EB.RxEapMsg.UnsupportedProtocolVersion): Verify that EAP response message is not
           transmitted because received message is discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.UnsupportedProtocolVersion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01018_SEND_EAPOL_START_Discard</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>2111</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in SEND_EAPOL_START state it shall ignore all Unexpected
    Messages (clear unexpected Events) and the state will not change.
  
Test Object: 
    Port state transition: SEND_EAPOL_START -&gt; SEND_EAPOL_START upon discard.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state: SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of Eap-Failure on Port_0.
    02: Call DevAuth_MainFunction() to process the message.
    03: VP(): Verify that no further action is taken because message is discarded (Event cleared).
    04: Call DevAuth_RxIndication() to indicate reception of EAP-Request(AuthEcu) message on Port_0.
    05: Call DevAuth_MainFunction() to process the message.
    06: VP(): Verify that no further action is taken because message is discarded (Event cleared).
    07: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay-request message on Port_0.
    08: Call DevAuth_MainFunction() to process the message.
    09: VP(): Verify that no further action is taken because message is discarded (Event cleared).
    10: Call DevAuth_PDelayResIndication() to indicate reception of PDelay-response message on
        Port_0.
    11: Call DevAuth_MainFunction() to process the message.
    12: VP(): Verify that no further action is taken because message is discarded (Event cleared).
    13: Call DevAuth_RxIndication() to indicate reception of EAP-EnableDiag message on Port_0.
    14: Call DevAuth_MainFunction() to process the message.
    15: VP(): Verify that no further action is taken because message is discarded (Event cleared).
    16: Call DevAuth_RxIndication() to indicate reception of EAP-EnableDiag message on Port_0.
    17: Call DevAuth_MainFunction() to process the message.
    18: VP(): Verify that no further action is taken because message is discarded (Event cleared).
    19: DevAuth_MainFunction() has already been called 4 times, call DevAuth_MainFunction()
        to tick Initial Eapol timer INITIAL_EAPOL_TIMEOUT times.
    20: VP(DevAuth.EB.WaitIdentityReq_2_WaitIdentityReq_Timeout):
        Verify that Eapol-Start message has been transmitted towards Ethernet interface which
        also verifies that state machine remained in state SEND_EAPOL_START.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ClearUnexpectedEvents</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01019_READY_ON_2_SEND_EAPOL_START_AuthSessionTimeout</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>2287</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies Port state machine transition form READY_AUTHENTICATE_ON to SEND_EAPOL_START
    after the AUTHENTICATIOIN_SESSION_TIMEOUT.
  
Test Object: 
    Port state transition: READY_AUTHENTICATE_ON -&gt; SEND_EAPOL_START.
  
Test Precondition: 
    Port state machine is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_MainFunction() for AUTHENTICATIOIN_SESSION_TIMEOUT-1 times.
    02: Check that timeout did not occur as no action is taken.
    03: Call DevAuth_MainFunction() one more time.
    04: VP(DevAuth.EB.PortSM.ReadyAuthenticateOn_2_SendEapolStart, DevAuth_NET_SEC_184): Verify that
           EAPol Start message was sent implying State machine transition from
           READY_AUTHENTICATE_ON -&gt; SEND_EAPOL_START has occurred.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_SendEapolStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01020_RxEapMsg_UnsupportedPacketType</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>2355</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when EAP message with an unsupported packet type is received,
    it will be discarded.
  
Test Object: 
    Reception of EAP message.
  
Test Precondition: 
    Port_0 is in state SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request message with unsupported
        packet type on Port_0.
    02: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_RX_UNEXPECTED_PACKET_TYPE.
    03: Call DevAuth_MainFunction() to process the message.
    04: VP(DevAuth.EB.RxEapMsg.UnsupportedPacketType): Verify that EAP-Response(Identity) message is
           not transmitted because message is discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.UnsupportedPacketType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01021_RestartAuthenticationSessionTimeout</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>2430</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth shall have a timeout of 2 seconds after the Identity exchange
    before restarting overall method by sending an EAPol Start message.
  
Test Object: 
    EAPOL-Start message transmission.
    Status log reporting.
    Port state transition: READY_AUTHENTICATE_ON -&gt; SEND_EAPOL_START (upon Timeout event).
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call EbTest_ExchangeKeys() to Exchange keys with Authenticator.
    02: Call DevAuth_MainFunction() AUTHENTICATIOIN_SESSION_TIMEOUT -1 times to process state
        machine transition.
    03: Call DevAuth_MainFunction() once again to process state machine transition to
        SEND_EAPOL_START and send EAPol Start message.
    04: VP(DevAuth_NET_SEC_184, DevAuth.EB.PortSM.ReadyAuthenticateOn_2_SendEapolStart): Verify that
           EAPol Start message was sent after AUTHENTICATIOIN_SESSION_TIMEOUT.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_SendEapolStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01022_AuthenticateEcu_IncorrectNonce</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>2505</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that if the Nonce of EAP-Request and PDelay Request is not the same
    value, message shall be ignored.
  
Test Object: 
    Reception of Expanded EAP-Request(Authenticate ECU) message.
    Status log reporting.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(AuthEcu) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(DevAuth_NET_SEC_176): Verify that no message is generated because no PDelay Request and
        response indications have been received.
    04: Call DevAuth_PDelayReqIndication() with different Nonce value to indicate reception of
        PDelay Request message.
    05: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_NONCE_MISMATCH.
    06: VP(DevAuth_NET_SEC_1145): Verify that DevAuth_PDelayReqIndication() returned E_NOT_OK and
           that Csm_RandomGenerate() was not called which indicates that message was silently
           discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1145</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01023_RxExpMsg_UnsupportedVendorId</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>2594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives expanded EAP Request message with unsupported
    Vendor ID, the message shall be discarded.
  
Test Object: 
    Reception of Expanded EAP Request message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(AuthEcu) with unsupported
        Vendor ID on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that no message is generated because no PDelay Request and
              PDelay Responseindications have been received.
    04: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay Request message.
    05: VP(): Verify that DevAuth_PDelayReqIndication() returned E_NOT_OK because
              EAP-Request(AuthECU) was not accepted due to wrong Vendor ID.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxExpMsg.UnsupportedVendorId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01024_RxExpMsg_UnsupportedVendorType</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>2688</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives expanded EAP message with unsupported
    Vendor Type, the message shall be discarded.
  
Test Object: 
    Reception of Expanded EAP-Request message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request with unsupported Vendor
        Type on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(DevAuth_NET_SEC_176): Verify that no message is generated because no PDelay Request and
        PDelay Response indications have been received.
    04: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay Request message.
    05: VP(): Verify that DevAuth_PDelayReqIndication() returned E_NOT_OK because EAP-Request was
              not accepted due to wrong Vendor type.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxExpMsg.UnsupportedVendorType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01025_Nonce2_GenFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>2785</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when Csm_RandomGenerate returns E_NOT_OK DevAuth shall discard the
    indication.
  
Test Object: 
    Response Nonce generation.
    Status log reporting.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    Csm_RandomGenerate_Stub.RetVal configured to return E_NOT_OK
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(AuthEcu) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay Request message.
    04: VP(): Verify that Csm_RandomGenerate() was called and that
        DevAuth_PDelayReqIndication() returned E_NOT_OK to show that generation failed and
        indication was discarded.
    05: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_NONCE_GENFAILED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PDelayReqIndication.NonceGenFailed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01026_MessageReTransmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>2872</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that it will transmit EAP-Response(Identity) message in the next
    MainFunction() call if transmission fails in the first time.
  
Test Object: 
    Reception of EAP-Request(Identity) message.
    Transmission of EAP-Response(Identity) message.
    Retransmission of EAP-Response(Identity) message.
    Port state transition: SEND_EAPOL_START -&gt; READY_AUTHENTICATE_ON (upon reception of
    EAP-Request (Identity).
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state SEND_EAPOL_START.
    EthIf_Transmit_Stub set to return E_NOT_OK;
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(DevAuth.EB.RespMsg.RepeatTransmission): Verify that EthIf_Transmit() is called with
           return value E_NOT_OK.
    04: Set EthIf_Transmit_Stub() to return E_OK.
    05: Call DevAuth_MainFunction() to process state machine transition and retry transmission.
    06: VP(DevAuth_NET_SEC_121, DevAuth_NET_SEC_171, DevAuth.EB.RespMsg.RepeatTransmission): Verify
           that EAP-Response(Identity) message is transmitted with expected message format and State
           machine transition from SEND_EAPOL_START -&gt; READY_AUTHENTICATE_ON state for Port 0 has
           occurred.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_171</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.RespMsg.RepeatTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01027_ProvideTxBuffer_BUFREQ_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>2965</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that if EthIf_ProvideTxBuffer() returns BUFREQ_E_NOT_OK, DevAuth will try to
    acquire buffer in the next MainFunction() call.
  
Test Object: 
    Reacquiring buffer.
  
Test Precondition: 
    DevAuth initialized.
    EthIf_ProvideTxBuffer Stub set to return BUFREQ_E_NOT_OK;
  
Test Execution: 
    01: Call DevAuth_TrcvLinkStateChg() to indicate link activation of EthIfController
        (EthIfCtrlIdx = 5).
    02: Call DevAuth_MainFunction() to process link activation.
    03: VP(DevAuth.EB.RespMsg.RepeatTransmission): Verify that EthIf_Transmit() is not called.
    04: Set EthIf_ProvideTxBuffer_Stub to return BUFREQ_OK and call MainFunction()
        DEVAUTH_INITIAL_EAPOL_TIMEOUT times to trigger message transmit.
    05: VP(DevAuth_NET_SEC_116, DevAuth_NET_SEC_133, DevAuth.EB.RespMsg.RepeatTransmission): Verify
           that EthIf_ProvideTxBuffer() and EthIf_Transmit() are called with expected parameters and
           that buffer contains Eapol-Start message.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_133</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.RespMsg.RepeatTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01028_EapIdentity_EmptyEcuUid</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>3070</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when ECU-UID cannot be retrieved, DevAuth shall send
    EAP-Response(Identity) message with an empty Type-Data field.
  
Test Object: 
    Transmission of EAP-Response(Identity) message.
  
Test Precondition: 
    DevAuth initialized.
    User_ReadDataByIdentifierEcuUid_Stub.RetVal set to return E_NOT_OK.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that EAP-Response(Identity) message is transmitted without Type-Data(ECU-ID).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.RFC3748.IdentityResponse.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01029_RxEapMsg_IgnoreResponse</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>3151</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when EAP response message is received, and the message is not of
    expanded type, DevAuth shall discarded it.
  
Test Object: 
    Reception of EAP-Response message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Response on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that nothing was called as EAP-Response was received.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.IgnoreResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01030_AuthenticateEcu_BufferNotProvided</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>3209</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth tries to transmit EAP-Response(AuthECU) message but
    EthIf_ProvideTxBuffer returns BUFREQ_E_NOT_OK, it will try to acquire TxBuffer in the next
    MainFunction() call and send EAP-Response(AuthECU) message.
  
Test Object: 
    Transmission of Expanded EAP-Response(Authenticate ECU) message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call EbTest_ExchangeKeys() to Exchange keys with Authenticator.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(AuthEcu) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay Request message.
    05: Call DevAuth_MainFunction() to process state machine transition.
    06: Call DevAuth_PDelayRespIndication() to indicate reception PDelay Response message.
    07: Set EthIf_ProvideTxBuffer to return BUFREQ_E_NOT_OK and call DevAuth_MainFunction() to
           process state machine transition.
    08: VP(DevAuth.EB.EapMsg.TxEcuAuthenticate.NoBuffer.RepeatSMTransition): Verify that
           EthIf_Transmit() is not called as Buffer is not provided.
    09: Set EthIf_ProvideTxBuffer to return BUFREQ_OK and call DevAuth_MainFunction() to process
        state machine transition.
    10: VP(DevAuth_NET_SEC_136): Verify that EAP-Response(AuthEcu) message is transmitted with
           expected message format.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_136</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.RespMsg.RepeatTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01031_EapRespIdentity_BufferNotProvided</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>3335</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives EAP-Request(Identity) message, but
    EthIf_ProvideTxBuffer returns BUFREQ_E_NOT_OK, it will try to acquire TxBuffer in the next
    MainFunction() call and it will transmit EAP-Response (Identity) message.
  
Test Object: 
    Transmission of EAP-Response(Identity) message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) on Port_0.
    02: Set EthIf_ProvideTxBuffer to return BUFREQ_E_NOT_OK and call DevAuth_MainFunction() to
           process state machine transition.
    03: VP(DevAuth.EB.RespMsg.RepeatTransmission): Verify that EthIf_Transmit() is not called as
           Buffer is not provided.
    04: Set EthIf_ProvideTxBuffer to return BUFREQ_OK and call DevAuth_MainFunction() to process
        state machine transition.
    05: VP(DevAuth_NET_SEC_121, DevAuth_NET_SEC_122, DevAuth_NET_SEC_171,
           DevAuth.EB.RespMsg.RepeatTransmission): Verify that EAP-Response(Identity) message is
           transmitted with expected message format.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_122</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_171</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.RespMsg.RepeatTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01032_RxIdentityRes_ReTransmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>3419</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives EAP-Request(Identity) message and
    DevAuth_TxIdentityResp() returns BUFREQ_E_NOT_OK it will transmit EAP-Response(Identity)
    message in the next MainFunction() call.
  
Test Object: 
    Transmission of EAP-Response(Identity) message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) on Port_0.
    02: Set EthIf_ProvideTxBuffer_Stub.RetVal to return BUFREQ_E_NOT_OK and call
        DevAuth_MainFunction() to process state machine transition.
    03: Set EthIf_ProvideTxBuffer_Stub.RetVal to return BUFREQ_OK and call DevAuth_MainFunction()
        to process state machine transition.
    04: VP(): Verify that EAP-Response(Identity) message is transmitted and State machine transition
              from READY_AUTHENTICATE_ON -&gt; READY_AUTHENTICATE_ON state for Port 0 has occurred.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RespMsg.RepeatTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01033_RxEapMsg_PacketBodyLength_Short</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>3496</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when EAP-Request message is received with Packet Body Length smaller
    than the minimal length (4 bytes), it will be discarded.
  
Test Object: 
    Reception of EAP-Request(Identity) message.
    Status log reporting.
  
Test Precondition: 
    Port_0 is in state SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) message
        with packet body length too small on Port_0.
    02: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_RX_MSG_TOO_SMALL.
    03: Call DevAuth_MainFunction() to process the message.
    04: VP(DevAuth.EB.RxEapMsg.PacketBodyLength.Short): Verify that EAP-Response(Identity) message
           is not transmitted because message is discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.PacketBodyLength.Short</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01034_RxEapMsg_UnsupportedEapType</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>3572</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when EAP-Request message with an unsupported EAP Type is received,
    DevAuth will discard the message.
  
Test Object: 
    Reception of EAP-Request message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request message with an unexpected
        EAP Type on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that EAP-Response message is not transmitted because request message was
              discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.UnsupportedEapType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01035_RxIdentityReq_HeaderLengthTooSmall</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>3641</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when EAP request is received without Type field (EAP Length field
    is smaller then 5), DevAuth shall discard the message.
  
Test Object: 
    Reception of EAP-Request message.
  
Test Precondition: 
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) with Packet Body
        length 0x04U.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that EAP-Response message is not transmitted because message is discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.ReqResp.ShortLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01036_PDelayRespIndBeforeReq</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>3712</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth_PDelayResIndication() is called and PDelay Request was
    not received, DevAuth will ignore response indication.
  
Test Object: 
    PDelay Response indication.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    Keys exchanged.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(AuthEcu) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: Call DevAuth_PDelayResIndication() with Timestamp A.
    04: Call DevAuth_MainFunction() to process state machine transition.
    05: Call DevAuth_PDelayReqIndication().
    06: Call DevAuth_MainFunction() to process state machine transition.
    07: VP(): Verify that EAP-Response(AuthEcu) message was not transmitted as PDelay Request
              message was not sent.
    08: Call DevAuth_PDelayResIndication() with Timestamp B.
    09: Call DevAuth_MainFunction() to process state machine transition.
    10: VP(): Verify that EAP-Response(AuthEcu) is transmitted with TIMESTAMP_B because the first
              DevAuth_PDelayResIndication() with TIMESTAMP_A was ignored.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PDelayResIndication.PDelayReqNotReceived</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01037_SEND_EAPOL_START_2_Ready_ON_RxEapSuccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>3830</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in SEND_EAPOL_START and it receives Eap-Success message,
    it will authenticate the port, activate traffic on all related ports and make transition
    to READY_AUTHENTICATE_ON state.
  
Test Object: 
    Reception of Eap-Success message.
    Port state transition:SEND_EAPOL_START -&gt; READY_AUTHENTICATE_ON (upon reception of Eap-Success.)
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of Eap-Success on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_RxEapSuccess,
           DevAuth_NET_SEC_1177): Verify that State machine transition from
           SEND_EAPOL_START -&gt; READY_AUTHENTICATE_ON state for Port 0 has occurred. Also verify that
           traffic is activated on all related port.
    04: Call DevAuth_MainFunction() 8 * EBTEST_INITIAL_EAPOL_TIMEOUT times.
    05: VP(DevAuth_NET_SEC_1161): Verify that EAPoL-Start message was NOT transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_RxEapSuccess</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01038_Ready_ON_2_WAIT_LOGOFF_CONF_Shutdown</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>3915</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in READY_AUTHENTICATE_ON state and it receives Shutdown
    event it will transmit EAPol Logoff message and make transition to WAIT_LOGOFF_CONF state.
  
Test Object: 
    Transmission of EAPol Logoff message.
    Port state transition: READY_AUTHENTICATE_ON -&gt; WAIT_LOGOFF_CONF.
    Status log reporting.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RequestComModeNoCom() to indicate reception of Shutdown request.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(DevAuth_NET_SEC_1154, DevAuth_NET_SEC_1184,
           DevAuth.EB.PortSM.ReadyAuthenticateOn_2_WaitLogoffConf): Verify that EAPol Logoff message
           is transmitted and State machine transition from
           READY_AUTHENTICATE_ON -&gt; WAIT_LOGOFF_CONF state for Port 0 has occurred.
    04: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_TX_EAPOLLOGOFF.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_WaitLogoffConf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01039_TxEapolLogoff_GetTxBufferFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>3985</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in READY_AUTHENTICATE_ON state and it receives Shutdown
    event but EthIf fails to provide buffer, DevAuth shall not transmit EapolLogoff message.
  
Test Object: 
    Transmission of EAPol Logoff message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RequestComModeNoCom() to indicate reception of Shutdown request.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that EAPol Logoff message is not transmitted as buffer was not provided.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RespMsg.RepeatTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01040_WAIT_LOGOFF_CONF_2_LINK_INACTIVE_RxLogoffConf</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>4046</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in WAIT_LOGOFF_CONF state and it receives Logoff
    confirmation it will notify EthSM with EthSM_DevAuthNoComModeIndication() and make
    transition to LINK_INACTIVE state.
  
Test Object: 
    Transmission of EAPol Logoff message.
    Port state transition: WAIT_LOGOFF_CONF -&gt; LINK_INACTIVE.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RequestComModeNoCom() to indicate reception of Shutdown event.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: Check that EAPol Logoff message is transmitted and State machine transition from
        READY_AUTHENTICATE_ON -&gt; WAIT_LOGOFF_CONF state for Port 0 has occurred.
    04: Call DevAuth_TxConfirmation() to confirm transmission of EAPol Logoff message.
    05: Call DevAuth_MainFunction() to process state machine transition.
    06: VP(DevAuth_NET_SEC_1154): Verify that EthSM is notified about successful transmission of
           Logoff messages, so it can continue with link down procedure.
    07: Call DevAuth_MainFunction() to process state machine transition.
    08: VP(DevAuth.EB.PortSM.WaitLogoffConf_2_LinkInactive): Verify that EAPol Start message was
           sent indirectly indicating that state was changed from WAIT_LOGOFF_CONF -&gt; LINK_INACTIVE
           and finally to SEND_EAPOL_START.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.WaitLogoffConf_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01041_LINK_INACTIVE_2_LINK_INACTIVE_Shutdown</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>4134</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies Port state machine transition form LINK_INACTIVE to LINK_INACTIVE upon
    reception of Shutdown event, indirectly confirming state transition.
  
Test Object: 
    Reception of Shutdown event.
    Port state transition: LINK_INACTIVE -&gt; LINK_INACTIVE.
  
Test Precondition: 
  
Test Execution: 
    01: Call DevAuth_RequestComModeNoCom() to indicate reception of Shutdown event.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that EthSM_DevAuthNoComModeIndication() occurred and state transitioned from
        LINK_INACTIVE -&gt; LINK_INACTIVE.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.LinkInactive_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01042_WAIT_LOGOFF_CONF_2_LINK_INACTIVE_LinkInactive</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>4186</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port transition from WAIT_LOGOFF_CONF to LINK_INACTIVE upon
    reception of Shutdown event.
  
Test Object: 
    Transmission of EAPol Logoff message.
    Port state transition: WAIT_LOGOFF_CONF -&gt; LINK_INACTIVE.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RequestComModeNoCom() to indicate reception of Shutdown event.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: Check that EAPol Logoff message is transmitted and State machine transition from
        READY_AUTHENTICATE_ON -&gt; WAIT_LOGOFF_CONF state for Port 0 has occurred.
    04: Call DevAuth_TrcvLinkStateChg() to set the Link state to DOWN for Port 0.
    05: Call DevAuth_MainFunction() to process state machine transition.
    06: VP(): Verify that EthSM_DevAuthNoComModeIndication() occurred and state transitioned from
        WAIT_LOGOFF_CONF -&gt; LINK_INACTIVE.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.WaitLogoffConf_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01043_SEND_EAPOL_START_2_WAIT_LOGOFF_CONF_Shutdown</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>4265</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in SEND_EAPOL_START state and it receives Shutdown
    event it will transmit EAPol Logoff message and make transition to WAIT_LOGOFF_CONF state.
  
Test Object: 
    Transmission of EAPol Logoff message.
    Port state transition: SEND_EAPOL_START -&gt; WAIT_LOGOFF_CONF.
  
Test Precondition: 
    Port_0 is in state SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_RequestComModeNoCom() to indicate reception of Shutdown request.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that EAPol Logoff message is transmitted and State machine transition from
        SEND_EAPOL_START -&gt; WAIT_LOGOFF_CONF state for Port 0 has occurred.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.SendEapolStart_2_WaitLogoffConf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01044_EcuAuthStop_SEND_EAPOL_START_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>4321</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth_EcuAuthStop() is called to disable ECU Authentication
    while Client state machine is in AUTH_STARTED_UNLOCKED state and Port state machine is in
    SEND_EAPOL_START state, the operation will succeed and status code OK will be returned.
    It also verifies that EAPol Logoff message will be transmitted, that port state machine will
    transit to READY_AUTHENTICATE_OFF state and Client state machine to AUTH_STOPPED state.
  
Test Object: 
    Transmission of EAPol Logoff message.
    Port state transition: SEND_EAPOL_START -&gt; READY_AUTHENTICATE_OFF.
    Client state transition: AUTH_STARTED_UNLOCKED -&gt; AUTH_STOPPED.
  
Test Precondition: 
    Port_0 is in state SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_EcuAuthStop() to disable ECU Authentication.
    02: VP(DevAuth.EB.ClientSM.EcuAuthStop, DevAuth_NET_SEC_524):
          Verify that DevAuth_EcuAuthStop() has returned status code OK (0), indicating that
          ECU Authentication has been successfully disabled.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticateOff,
           DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStopped): Verify that EAPol Logoff message
           is transmitted, related controllers were enabled and state machine transition from
           SEND_EAPOL_START -&gt; READY_AUTHENTICATE_OFF state for Port 0 has occurred.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticateOff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStopped</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.EcuAuthStop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_524</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01045_EcuAuthStop_READY_ON_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>4428</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth_EcuAuthStop() is called to disable ECU Authentication
    while Client state machine is in AUTH_STARTED_UNLOCKED state and Port state machine is in
    READY_AUTHENTICATE_ON state, the operation will succeed and status code OK will be returned.
    It also verifies that EAPol Logoff message will be transmitted, that port state machine will
    transit to READY_AUTHENTICATE_OFF state and Client state machine to AUTH_STOPPED state.
  
Test Object: 
    Transmission of EAPol Logoff message.
    Port state transition: READY_AUTHENTICATE_ON -&gt; READY_AUTHENTICATE_OFF.
    Client state transition: AUTH_STARTED_UNLOCKED -&gt; AUTH_STOPPED.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_EcuAuthStop() to indicate reception of Shutdown request.
    02: VP(DevAuth.EB.ClientSM.EcuAuthStop, DevAuth_NET_SEC_524):
          Verify that DevAuth_EcuAuthStop() has returned status code OK (0), indicating that
          ECU Authentication has been successfully disabled.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOff,
           DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStopped): Verify that EAPol Logoff message
           is transmitted, Related Controllers were enabled and State machine transition from
           READY_AUTHENTICATE_ON -&gt; READY_AUTHENTICATE_OFF state for Port 0 has occurred.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStopped</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.EcuAuthStop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_524</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01046_WAIT_LOGOFF_CONF_2_LINK_INACTIVE_LogoffTimeout</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>4535</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in WAIT_LOGOFF_CONF state and Timeout1 elapses DevAuth will
    notify EthSM that it can proceed with interface shutdown and make transition to
    LINK_INACTIVE state.
  
Test Object: 
    Transmission of EAPol Logoff message.
    Port state transition: WAIT_LOGOFF_CONF -&gt; LINK_INACTIVE.
    Timeout1.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RequestComModeNoCom() to indicate reception of Shutdown event.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: Check that EAPol Logoff message is transmitted and State machine transition from
        READY_AUTHENTICATE_ON -&gt; WAIT_LOGOFF_CONF state for Port 0 has occurred.
    04: Call DevAuth_MainFunction() EBTEST_LOGOFF_TIMEOUT -1 times to Logoff timeout almost elapse.
    05: Call DevAuth_MainFunction() one more time to Logoff timeout elapses and to process state
        machine transition.
    06: VP(): Verify that RxLogoff message is indicated.
    07: Call DevAuth_MainFunction() to process state machine transition.
    08: VP(): Verify that EAPol Start message was sent indirectly indicating that state was changed
        from WAIT_LOGOFF_CONF -&gt; LINK_INACTIVE and finally to SEND_EAPOL_START.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.WaitLogoffConf_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01047_WAIT_LOGOFF_CONF_ClearUnexpectedEvents</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>4626</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when PortSM is in WAIT_LOGOFF_CONF state and DevAuth receives
    unexpected event, it will be cleared and PortSM will stay in WAIT_LOGOFF_CONF state.
  
Test Object: 
    PortSM unexpected events behaviour.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RequestComModeNoCom() to indicate reception of Shutdown event.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: Check that EAPol Logoff message is transmitted and State machine transition from
        READY_AUTHENTICATE_ON -&gt; WAIT_LOGOFF_CONF state for Port 0 has occurred.
    04: Call DevAuth_RxIndication() to indicate reception of Eap-Success message.
    05: Call DevAuth_MainFunction() to process event.
    06: Call DevAuth_RxIndication() to indicate reception of Eap-Failure message.
    07: Call DevAuth_MainFunction() to process event.
    08: Call DevAuth_RxIndication() to indicate reception of EAP-Request(EnableDiag) message.
    09: Call DevAuth_MainFunction() to process event.
    10: Call DevAuth_TxConfirmation() to confirm transmission of EAPol Logoff message.
    11: Call DevAuth_MainFunction() to process state machine transition to LINK_INACTIVE.
    12: Call DevAuth_MainFunction() to process state machine transition to SEND_EAPOL_START.
    13: VP(): Verify that EAPol Start message was sent indirectly indicating that state was changed
              from WAIT_LOGOFF_CONF -&gt; LINK_INACTIVE and finally to SEND_EAPOL_START.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ClearUnexpectedEvents</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01048_LINK_INACTIVE_2_READY_OFF_UnAuthenticate</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>4785</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies Port state machine transition form LINK_INACTIVE to READY_AUTHENTICATE_OFF
    when link becomes active, while authentication is disabled.
  
Test Object: 
    Port state transition: LINK_INACTIVE -&gt; READY_AUTHENTICATE_OFF.
    Client state transition: AUTH_STARTED_UNLOCKED -&gt; AUTH_STOPPED.
  
Test Precondition: 
    DevAuth initialized.
  
Test Execution: 
    01: Call DevAuth_EcuAuthStop() to disable (stop) authentication.
    02: Call DevAuth_TrcvLinkStateChg() to indicate Link state change to Active.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that EthIf_EnableRelatedEthIfCtrls() occurred and state transitioned from
        LINK_INACTIVE -&gt; READY_AUTHENTICATE_OFF.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.LinkInactive_2_ReadyAuthenticateOff</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01049_EcuAuthStart_READY_OFF_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>4883</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth_EcuAuthStart() is called to enable ECU Authentication
    while Client state machine is in AUTH_STOPPED state and Port state machine is in
    READY_AUTHENTICATE_OFF state, the operation will succeed and status code OK will be returned.
    It also verifies that port state machine will transit to SEND_EAPOL_START state and Client
    state machine to AUTH_STARTED_UNLOCKED state.
  
Test Object: 
    Port state transition: READY_AUTHENTICATE_OFF -&gt; SEND_EAPOL_START.
    Client state transition: AUTH_STOPPED -&gt; AUTH_STARTED_UNLOCKED.
    Status log reporting.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_OFF.
  
Test Execution: 
    01: Call DevAuth_EcuAuthStart() to activate ECU Authentication.
    02: VP(DevAuth.EB.ClientSM.EcuAuthStart, DevAuth_NET_SEC_463):
          Verify that DevAuth_EcuAuthStart() has returned status code OK (0), indicating that
          ECU Authentication has been successfully activated.
    03: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_AUTHENTICATION_STARTED and
           DEVAUTH_AUTHENTICATION_UNLOCKED.
    04: VP(DevAuth_NET_SEC_654): Verify that DTC ECU_AUTH_NOT_STARTED was deleted.
    05: Call DevAuth_MainFunction() to process state machine transition.
    06: VP(DevAuth.EB.PortSM.ReadyAuthenticateOff_2_SendEapolStart,
           DevAuth.EB.ClientSM.AuthStopped_2_AuthStartedUnlocked): Verify that EAPoL Start was sent
           indicating machine state change to SEND_EAPOL_START.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_SendEapolStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStopped_2_AuthStartedUnlocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.EcuAuthStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_463</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01050_READY_OFF_RxIdentityReq</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>4989</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in READY_AUTHENTICATE_OFF state (authentication is
    disabled) and it receives EAP-Request(Identity) message it will transmit EAP-Response(Identity)
    message and stay in READY_AUTHENTICATE_OFF state.
  
Test Object: 
    Transmission of EAP-Response(Identity) message.
    Port state self transition: READY_AUTHENTICATE_OFF -&gt; READY_AUTHENTICATE_OFF.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_OFF.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_RxIdentityReq,
           DevAuth_NET_SEC_1142, DevAuth_NET_SEC_1146): Verify that EAP-Response(Identity) message
           is transmitted with expected message format and State machine transition from
           READY_AUTHENTICATE_OFF -&gt; READY_AUTHENTICATE_OFF state for Port 0 has occurred. It also
           verifies that message exchange works even when authentication is disabled.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_RxIdentityReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1146</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01051_READY_OFF_Shutdown</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>5060</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in READY_AUTHENTICATE_OFF state and receives Shutdown
    request it will send Logoff indication to EthSM and stay in READY_AUTHENTICATE_OFF state.
  
Test Object: 
    Reception of Shutdown request.
    Transmission of EAPol Logoff message.
    Port state self transition: READY_AUTHENTICATE_OFF -&gt; READY_AUTHENTICATE_OFF.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_OFF.
  
Test Execution: 
    01: Call DevAuth_RequestComModeNoCom() to indicate reception of Shutdown request.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_Shutdown):
          Verify that EthSM_DevAuthNoComModeIndication() was called and port state machine remained
          in the state READY_AUTHENTICATE_OFF.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_Shutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01052_AuthenticateEcu_NotActivated</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>5117</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in READY_AUTHENTICATE_OFF state (authentication is
    disabled) and it receives EAP-Request(AuthECU) message it will transmit EAP-Response(AuthEcu)
    message with StatusCode = 03 (Not Activated) and stay in READY_AUTHENTICATE_OFF state.
  
Test Object: 
    Reception of Expanded EAP-Request(Authenticate ECU) message.
    Transmission of Expanded EAP-Response(Authenticate ECU StatusCode = 03) message.
    Port state self transition: READY_AUTHENTICATE_OFF -&gt; READY_AUTHENTICATE_OFF (upon reception of
      Expanded EAP-Request(AuthEcu).
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_OFF.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(AuthEcu) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_AuthEcu,
           DevAuth_NET_SEC_1164, DevAuth_NET_SEC_1142, DevAuth_NET_SEC_1146): Verify that
           EAP-Response(AuthEcu) message is transmitted with expected message format
           StatusCode = 03 (Not Activated) indicating self transition
           READY_AUTHENTICATE_OFF -&gt; READY_AUTHENTICATE_OFF. It also verifies that message exchange
           works even when authentication is disabled.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1179</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_AuthEcu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1146</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01053_EcuAuthStart_ALREADY_RUNNING</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>5188</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that calling DevAuth_EcuAuthStart() while Client state machine is in
    AUTH_STARTED_UNLOCKED state will return status code E_OPERATION_ALREADY_RUNNING without
    changing state machine state.
  
Test Object: 
    Client state self transition: AUTH_STARTED_UNLOCKED -&gt; AUTH_STARTED_UNLOCKED.
    E_OPERATION_ALREADY_RUNNING status code.
  
Test Precondition: 
    Client state machine in AUTH_STARTED_UNLOCKED state.
  
Test Execution: 
    01: Call DevAuth_EcuAuthStart().
    02: VP(DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStartedUnlocked_Start,
           DevAuth.EB.ClientSM.EcuAuthStart, DevAuth_NET_SEC_463):
           Verify that DevAuth_EcuAuthStart() returned JOB_E_OPERATION_ALREADY_RUNNING.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStartedUnlocked_Start</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.EcuAuthStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_463</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01054_EcuAuthStop_ALREADY_RUNNING</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>5244</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that calling DevAuth_EcuAuthStop() while Client state machine is in
    AUTH_STOPPED state will return status code E_OPERATION_ALREADY_RUNNING without changing
    state machine state.
  
Test Object: 
    Client state self transition: AUTH_STOPPED -&gt; AUTH_STOPPED.
    E_OPERATION_ALREADY_RUNNING status code.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
  
Test Execution: 
    01: Call DevAuth_EcuAuthStop() to disable (stop) authentication.
    02: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_AUTHENTICATION_STOPPED and
           DEVAUTH_AUTHENTICATION_UNLOCKED.
    03: VP(DevAuth_NET_SEC_665): Verify that DTC ECU_AUTH_NOT_STARTED and ECU_AUTH_NOT_LOCKED are
           active as state machine is not in ECU Auth started nor in ECU Auth locked.
    04: Call DevAuth_EcuAuthStop() one more time.
    05: VP(DevAuth.EB.ClientSM.AuthStopped_2_AuthStopped_Stop, DevAuth.EB.ClientSM.EcuAuthStop,
           DevAuth_NET_SEC_524):
           Verify that DevAuth_EcuAuthSstop() returned JOB_E_OPERATION_ALREADY_RUNNING.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStopped_2_AuthStopped_Stop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.EcuAuthStop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_524</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_665</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01055_EcuAuthLock_FORBIDDEN</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>5355</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth_EcuAuthLock() is called while Client state machine
    is in AUTH_STOPPED state it will return status code E_FORBIDDEN and remain in AUTH_STOPPED
    state.
  
Test Object: 
    Client state self transition: AUTH_STOPPED -&gt; AUTH_STOPPED.
    E_FORBIDDEN status code.
  
Test Precondition: 
    DevAuth initialized.
  
Test Execution: 
    01: Call DevAuth_EcuAuthStop() to disable (stop) authentication.
    02: Call DevAuth_TrcvLinkStateChg() to indicate Link state change.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: Call DevAuth_EcuAuthLock().
    05: VP(DevAuth.EB.ClientSM.AuthStopped_2_AuthStopped_LockUnlock,
           DevAuth.EB.ClientSM.EcuAuthLock, DevAuth_NET_SEC_587):
           Verify that DevAuth_EcuAuthLock() returned E_FORBIDDEN.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStopped_2_AuthStopped_LockUnlock</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.EcuAuthLock</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>461</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_587</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01056_EcuAuthLock_OK_ALREADY_RUNNING</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>5463</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that calling DevAuth_EcuAuthLock() while Client state machine is in
    AUTH_STARTED_UNLOCKED state will make transition to AUTH_STARTED_LOCKED state, delete
    DTC ECU_AUTH_NOT_LOCKED and return status code E_OK.
    Additionally it verifies that calling Devauth_EcuAuthLock() while Client state machine is in
    AUTH_STARTED_LOCKED state, will return status code JOB_E_OPERATION_ALREADY_RUNNING
    and remain in the same state.
  
Test Object: 
    Client state transition: AUTH_STARTED_UNLOCKED -&gt; AUTH_STARTED_LOCKED.
    Client state self transition: AUTH_STARTED_UNLOCKED -&gt; AUTH_STARTED_UNLOCKED.
    DTC ECU_AUTH_NOT_LOCKED deletion.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
  
Test Execution: 
    01: Call DevAuth_EcuAuthLock() to indicate Client SM change.
    02: VP(DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStartedLocked, DevAuth_NET_SEC_585):
          Verify that DevAuth_EcuAuthLock() returned E_OK.
    03: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_AUTHENTICATION_STARTED and
           DEVAUTH_AUTHENTICATION_LOCKED.
    04: VP(DevAuth_NET_SEC_657): Verify that Authentication is locked and DTC ECU_AUTH_NOT_LOCKED
           was deleted.
    05: Call DevAuth_EcuAuthLock().
    06: VP(DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedLocked_Lock,
           DevAuth.EB.ClientSM.EcuAuthLock, DevAuth_NET_SEC_585):
           Verify that DevAuth_EcuAuthLock() returned JOB_E_OPERATION_ALREADY_RUNNING indicating
           that AUTH_STARTED_LOCKED state occurred.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStartedLocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedLocked_Lock</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.EcuAuthLock</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>461</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_585</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_657</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01057_EcuAuthStop_EcuAuthStart_FORBIDDEN</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>5585</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that calling DevAuth_EcuAuthStop() or DevAuth_EcuAuthStart() while Client
    state machine is in AUTH_STARTED_LOCKED state will return status code JOB_E_FORBIDDEN and
    remain in the same state.
  
Test Object: 
    Client state self transition: AUTH_STARTED_LOCKED -&gt; AUTH_STARTED_LOCKED.
  
Test Precondition: 
    DevAuth initialized.
  
Test Execution: 
    01: Call DevAuth_EcuAuthLock() to indicate Client SM change.
    02: Call DevAuth_EcuAuthStop() to disable (stop) authentication.
    03: VP(DevAuth.EB.ClientSM.EcuAuthStop, DevAuth_NET_SEC_461, DevAuth_NET_SEC_524):
          Verify that DevAuth_EcuAuthStop() returned JOB_E_FORBIDDEN because ECU Authentication
          is locked.
    04: Call DevAuth_EcuAuthStart().
    05: VP(DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedLocked_StartStop,
          DevAuth.EB.ClientSM.EcuAuthStart, DevAuth_NET_SEC_461, DevAuth_NET_SEC_463):
          Verify that DevAuth_EcuAuthStart() returned JOB_E_FORBIDDEN because ECU Authentication
          is locked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedLocked_StartStop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.EcuAuthStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.EcuAuthStop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_463</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_524</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_461</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01058_READY_ON_2_SEND_EAPOL_START_HeldWhileTimeout</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>5697</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when EAP-Failure is received in READY_AUTHENTICATE_ON state and
    DevAuthHeldWhileTimeout elapses, the port will make transition to SEND_EAPOL_START state.
  
Test Object: 
    Port state transition: READY_AUTHENTICATE_ON -&gt; SEND_EAPOL_START.
    Timeout2.
  
Test Precondition: 
    DevAuth Initialized.
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of Eap-Failure message on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: Call DevAuth_MainFunction() EBTEST_HELD_WHILE_TIMEOUT - 1 times.
    04: Call DevAuth_MainFunction() one more time to elapse HeldWhileTimeout timer and
        process state machine transition.
    05: VP(EB.DevAuth_NET_SEC_1178, DevAuth.EB.PortSM.ReadyAuthenticateOn_2_SendEapolStart):
          Verify that Eapol start message was sent verifying timer functionality and indicating
          the state machine transition from READY_AUTHENTICATE_ON -&gt; SEND_EAPOL_START state.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.NET_SEC_1178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_SendEapolStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01059_EapMessage_IgnorePadding</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>5786</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when EAP message is received with additional bytes outside of the range
    of EAP Length field (e.g. Data Link Layer padding), those padding bytes will be ignored.
  
Test Object: 
    Ignoring EAP message padding bytes.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) will 3 additional
       (padding) bytes outside of the range of EAP Length field.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that EAP-Response(Identity) message is transmitted with expected message format
              indicating that padding bytes have been ignored.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.RFC3748.PacketFormat.Length.DiscardPadding</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1152</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01060_RxEapMsg_LengthFieldsMismtach</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>5863</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives EAP-Request message with different
    Pocket Body Length and EAP Length, it will discard the message silently.
  
Test Object: 
    Reception of EAP-Request(Identity) message with different Pocket Body Length and EAP Length.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) on Port_0.
    02: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_RX_INVALID_LENGTH.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that EAP-Response(Identity) message was not transmitted as
              EAP-Request(Identity) was silently discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxEapMsg.LengthFieldsMismtach</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01061_AuthenticateEcu_FragmentedRx</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>5940</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in READY_AUTHENTICATE_ON state and it receives fragmented
    Expanded EAP-Request(AuthECU) message, and it receives both PDelays request and response
    indications, it will transmit fragmented Expanded EAP-Response(AuthEcu) message and stay in
    READY_AUTHENTICATE_ON state.
  
Test Object: 
    Reception of fragmented Expanded EAP-Request(Authenticate ECU) message.
    Transmission of fragmented Expanded EAP-Response(Authenticate ECU) message.
    Frag state transition: READY -&gt; TX_ACK (upon reception of Expanded EAP-Request(AuthEcu).
    Frag state transition: TX_ACK -&gt; RX_FRAG
    Frag state transition: RX_FRAG -&gt; TX_ACK
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call EbTest_ExchangeKeys() to exchange keys with Authenticator.
    02: Call EbTest_RxInd_FirstFrag() to send first fragment of EAP-Request(AuthEcu) on Port_0.
    03: Call DevAuth_MainFunction() to process Frag state machine transition.
    04: VP(DevAuth_NET_SEC_884, DevAuth_NET_SEC_1135, DevAuth.EB.FragSM.Ready_2_TxAck,
           DevAuth.EB.FragSM.TxAck_2_RxFrag): Verify that DevAuth has generated acknowledge.
    05: Call EbTest_RxInd_MiddleFrag() to send subsequent fragments.
    06: Call EbTest_RxInd_LastFrag() to send last fragment.
    07: Call DevAuth_MainFunction() to process Frag state machine transition.
    08: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay Request message.
    09: Call DevAuth_MainFunction() to process state machine transition.
    10: Call DevAuth_PDelayRespIndication() to indicate reception PDelay Response message.
    11: Call DevAuth_MainFunction() to process state machine transition.
    12: VP(DevAuth_NET_SEC_1181, DevAuth.EB.FragSM.RxFrag_2_Ready): Verify that
           EAP-Response(AuthEcu) message is transmitted as last fragment was received indicating
           FragSM state change to Ready.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_884</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1135</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.FragSM.Ready_2_TxAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.FragSM.TxAck_2_RxFrag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.FragSM.RxFrag_2_TxAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.FragSM.RxFrag_2_Ready</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01062_Ready_ON_2_Ready_ON_EnableDiag</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>6116</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in READY_AUTHENTICATE_ON and it receives
    EAP-Request(EnableDiag) message, it will send EAP-EnableDiag response message, enable diagnostic
    and stay in READY_AUTHENTICATE_ON state.
  
Test Object: 
    EAP-EnableDiag message.
    Status log reporting.
    Port state transition: READY_AUTHENTICATE_ON -&gt; READY_AUTHENTICATE_ON.
  
Test Precondition: 
    Port state machine is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Enable Diagnostics).
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(DevAuth_NET_SEC_148, DevAuth_NET_SEC_147, DevAuth_NET_SEC_168, DevAuth.EB.LogStatusCode
           DevAuth.EB.User_DevAuthEnableDiagCallback, DevAuth.EB.User_DevAuthLogStatusCallback,
           DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_EnableDiag): Verify that
           EAP-Response(Enable Diagnostics) message is transmitted with expected message format
           after receiving EAP-Request(Enable Diagnostics) with expected message format.
           Furthermore, verify that status log raised correct code for DEVAUTH_DIAGNOSTIC_ENABLED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_148</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_147</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthEnableDiagCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_EnableDiag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01063_Ready_OFF_2_Ready_OFF_EnableDiag</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>6203</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in READY_AUTHENTICATE_OFF (authentication is disabled)
    and it receives EAP-Request(EnableDiag) message, it will send EAP-Response(EnableDiag) message,
    enable diagnostic and stay in READY_AUTHENTICATE_OFF state.
  
Test Object: 
    EAP-EnableDiag message.
    Port state transition: READY_AUTHENTICATE_OFF -&gt; READY_AUTHENTICATE_OFF.
  
Test Precondition: 
    Port state machine is in state READY_AUTHENTICATE_OFF.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Enable Diagnostics).
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(DevAuth_NET_SEC_148, DevAuth_NET_SEC_168, DevAuth_NET_SEC_1142): Verify that
           EAP-Response(Enable Diagnostics) message is transmitted with expected message format.
           It also verifies that message exchange works even when authentication is disabled.
    04: VP(DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_RxEnableDiag): Verify
           that Port SM stayed in state READY_AUTHENTICATE_OFF
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_148</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_RxEnableDiag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01064_FragmentedRx_DiscardRxOnNewMessage</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>6283</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives a new message while it was already receiving a
    fragmented message it will discard the old one and receive the new message.
  
Test Object: 
    Reception of a valid new Expanded EAP-Request(Authenticate ECU) message terminating ongoing
    receive process.
    Transmission of Expanded EAP-Response(Authenticate ECU) message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    Keys exchanged.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to send first fragment of EAP-Request(AuthEcu) on Port_0.
    02: Call DevAuth_MainFunction() to process Frag state machine transition.
    03: Call DevAuth_RxIndication() to indicate reception of EAP-Request(AuthEcu) on Port_0.
    04: Call DevAuth_MainFunction() to process Frag state machine transition.
    05: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay Request message.
    06: Call DevAuth_MainFunction() to process state machine transition.
    07: Call DevAuth_PDelayRespIndication() to indicate reception PDelay Response message.
    08: Call DevAuth_MainFunction() to process state machine transition.
    09: VP(DevAuth_NET_SEC_138): Verify that EAP-Response(AuthEcu) message is transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_138</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_884</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1135</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.FragSM.NewMsgRx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01065_FragmentedRx_READY_2_READY_DiscardMSG</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>6440</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when FragSM is in READY state and it receives middle fragment or
    acknowledge message or message is invalid it will discard received messages silently.
  
Test Object: 
    Fragmentation state machine.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    FragSM is in state READY.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to send middle fragment of EAP-Request(AuthEcu) on Port_0.
    02: Call DevAuth_MainFunction() to process Frag state machine transition.
    03: VP(): Verify that nothing happened as message was discarded.
    04: Call DevAuth_RxIndication() to send Acknowledge message.
    05: Call DevAuth_MainFunction() to process Frag state machine transition.
    06: VP(): Verify that nothing happened as message was discarded.
    07: Call DevAuth_RxIndication() to send Invalid message.
    08: Call DevAuth_MainFunction() to process Frag state machine transition.
    09: VP(): Verify that nothing happened as message was discarded.
    10: Call DevAuth_RxIndication() to send first fragment of EAP-Request(AuthEcu) on Port_0.
    11: Call DevAuth_MainFunction() to process Frag state machine transition.
    12: VP(): Verify that buffer was provided and Message was transmitted, indirectly verifying that
              FragSM stayed in READY state before sending first fragment of the EAP-Request(AuthEcu)
              message.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.Ready_2_Ready_Discard</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01066_RX_FRAG_2_RX_FRAG_DiscardMsg</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>6596</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when FragSM is in RX_FRAG state and it receives Ack message or
    Invalid message, it will discard the message silently and stay in RX_FRAG state.
  
Test Object: 
    Discarding received unsupported messages in RX_FRAG state.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    FragSM is in the state READY.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to receive first fragment of EAP-Request(AuthEcu) on Port_0.
    02: Call DevAuth_MainFunction() to transmit ACK message and to transition towards RX_FRAG.
    03: Call DevAuth_RxIndication() to indicate reception of Acknowledge message.
    04: VP(DevAuth.EB.FragSM.RxFrag_2_RxFrag): Verify that message was discarded and that the trace
           is empty.
    05: Call DevAuth_RxIndication() to send Invalid expanded message with invalid LenByte.
    06: VP(DevAuth.EB.FragSM.RxFrag_2_RxFrag): Verify that message was discarded and that the trace
           is empty.
    07: Call DevAuth_RxIndication() to indicate reception of middle fragment with copy size greater
        than remaining length.
    08: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback,
            DevAuth.EB.FragSM.RxFrag_2_RxFrag): Verify that RX_INVALID_LENGTH status log is captured
            (if enabled) and that the message was discarded and that the trace is empty.
    09: Call DevAuth_RxIndication() to receive middle fragment of EAP-Request(AuthEcu) on Port_0.
    10: Call DevAuth_MainFunction() to indicate reception of middle fragment.
    11: VP(DevAuth.EB.FragSM.RxFrag_2_RxFrag): Verify that Acknowledge message was transmitted,
           indirectly indicating that FragSM stayed in RX_FRAG state after receiving AckMsg and
           Invalid messages.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.RxFrag_2_RxFrag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01067_TX_ACK_2_TX_ACK_DiscardMsg</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>6784</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when FragSM is in TX_ACK state and it receives MiddleFrag, AckMsg or
    an Invalid message, it will discard the message silently and stay in TX_ACK state.
  
Test Object: 
    Discarding received unsupported messages in TX_ACK state.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    FragSM is in the state READY.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to receive first fragment of EAP-Request(AuthEcu) to transition
        FragSM in TX_ACK state.
    02: Call DevAuth_RxIndication() to indicate reception of Acknowledge message.
    03: VP(): Verify that message was discarded and that the trace is empty.
    04: Call DevAuth_RxIndication() to send Invalid expanded message.
    05: VP(): Verify that message was discarded and that the trace is empty.
    06: Call DevAuth_RxIndication() to receive Middle fragment of EAP-Request(AuthEcu) on Port_0.
    07: VP(): Verify that message was discarded and that the trace is empty.
    08: Call DevAuth_MainFunction() to process Frag state machine transition.
    09: VP(): Verify that Acknowledge message for First Frag was transmitted, indicating that FragSM
              stayed in TX_ACK state after receiving MiddleFrag, LastFrag, AckMsg and InvalidMsg.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.TxAck_2_TxAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01068_FragmentedTx</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>6929</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies transmission of fragmented expanded EAP message.
  
Test Object: 
    Transmission of fragmented Expanded EAP-Response(Authenticate ECU) message.
    Frag state transition: READY -&gt; TX_FRAG
    Frag state transition: TX_FRAG -&gt; WAIT_ACK
    Frag state transition: WAIT_ACK -&gt; TX_FRAG
    Frag state transition: TX_FRAG -&gt; READY
    Length field present bit (L)
    Fragmentation Length field
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call EbTest_ExchangeKeys() to Exchange keys with Authenticator.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay Request message.
    05: Call DevAuth_MainFunction() to process state machine transition.
    06: Call DevAuth_PDelayRespIndication() to indicate reception PDelay Response message.
    07: Call DevAuth_MainFunction() to process state machine transition.
    08: VP(DevAuth.EB.FragSM.Ready_2_TxFrag, DevAuth.EB.FragSM.TxFrag_2_WaitAck,
           DevAuth_NET_SEC_881, DevAuth_NET_SEC_882, DevAuth_NET_SEC_883): Verify that first
           fragment was sent indicating transmission change from READY -&gt; TX_FRAG -&gt; WAIT_ACK. Also
           verify that L bit is set, Length field is available and set to the Vendor data size.
    09: Indicate reception of Acknowledge message from Authenticator.
    10: Call DevAuth_MainFunction() to process Frag state machine transition.
    11: VP(DevAuth.EB.FragSM.TxFrag_2_WaitAck, DevAuth.EB.FragSM.WaitAck_2_TxFrag,
           DevAuth.EB.FragSM.TxFrag_2_Ready, DevAuth_NET_SEC_881, DevAuth_NET_SEC_882):
           Verify that middle and the last fragments were sent. Also verify that L bit is not set
           and that Length field is not available for middle or last fragment.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.Ready_2_TxFrag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.FragSM.TxFrag_2_WaitAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.FragSM.WaitAck_2_TxFrag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.FragSM.TxFrag_2_Ready</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_881</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_882</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_883</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01069_READY_OFF_2_LINK_INACTIVE_LinkInactive</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>7078</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies Port state machine transition form READY_AUTHENTICATE_OFF to LINK_INACTIVE
    upon the Transceiver state change to ETHTRCV_LINK_STATE_DOWN.
  
Test Object: 
    Port state self transition: READY_AUTHENTICATE_OFF -&gt; LINK_INACTIVE.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_OFF.
  
Test Execution: 
    01: Call DevAuth_TrcvLinkStateChg() to change EthTrcv state to ETHTRCV_LINK_STATE_DOWN.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that tate transitioned from READY_AUTHENTICATE_OFF -&gt; LINK_INACTIVE.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_LinkInactive</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01070_FragSM_Initial_2_READY</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>7134</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies Fragmentation state machine transition form Initial to READY
    upon DevAuth Initialization.
  
Test Object: 
    Port state self transition: INITIAL -&gt; READY.
  
Test Precondition: 
    DevAuth uninitialized.
  
Test Execution: 
    01: Call DevAuth_Init() to Initialize DevAuth.
    02: Call DevAuth_TrcvLinkStateChg() to indicate link activation of EthIfController.
    03: Call DevAuth_MainFunction() to process link activation.
    04: Call DevAuth_RxIndication() to indicate reception of EAP-Success message.
    05: Call DevAuth_MainFunction() to process state machine change.
    06: VP(): Indirectly verify that state transitioned from INITIAL -&gt; READY by verifying that
              communication was enabled.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.Inital_2_Ready</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01071_Logoff_TxConfirmation_Invalid_PortIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>7208</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in WAIT_LOGOFF_CONF state and it receives Logoff
    confirmation with invalid PortIdx it will not send out Logoff confirmation.
  
Test Object: 
    Transmission of EAPol Logoff message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RequestComModeNoCom() to indicate reception of Shutdown event.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: Check that EAPol Logoff message is transmitted and State machine transition from
        READY_AUTHENTICATE_ON -&gt; WAIT_LOGOFF_CONF state for Port 0 has occurred.
    04: Call DevAuth_TxConfirmation() with invalid EthIfCtrlIdx.
    05: Call DevAuth_MainFunction() to process state machine transition.
    06: VP(): Verify that Logoff message is not confirmed as invalid EthIfCtrlIdx was detected.
    07: Call DevAuth_TxConfirmation() with right EthIfCtrlIdx to confirm transmission of
        Logoff - DevAuth transmits Logoff message.
    08: Call DevAuth_MainFunction() to process state machine transition.
    09: VP():Verify that EthSM is notified with EthSM_DevAuthNoComModeIndication(), so it can
           continue with port shutdown process.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.TxConfirmation.InvalidEthIfCtrlIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01072_Enable_Logoff_TxConfirmation_Invalid_BufIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>7295</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in WAIT_LOGOFF_CONF state and it receives Logoff
    confirmation with invalid BufIdx it will not send out Logoff confirmation.
  
Test Object: 
    Transmission of EAPol Logoff message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RequestComModeNoCom() to indicate reception of Shutdown event.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: Check that EAPol Logoff message is transmitted and State machine transition from
        READY_AUTHENTICATE_ON -&gt; WAIT_LOGOFF_CONF state for Port 0 has occurred.
    04: Call DevAuth_TxConfirmation() with invalid BufferIdx.
    05: Call DevAuth_MainFunction() to process state machine transition.
    06: VP(): Verify that Logoff message is not confirmed as invalid BufIdx was detected.
    07: Call DevAuth_TxConfirmation() with right BufIdx to confirm transmission of EAPol
        Logoff message.
    08: Call DevAuth_MainFunction() to process state machine transition.
    09: VP(): Verify that EthSM is notified with EthSM_DevAuthNoComModeIndication(), so it can
           continue with port shutdown process.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.TxConfirmation.InvalidBufIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01073_RequestComModeNoCom_InvalidEthIfCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>7383</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in WAIT_LOGOFF_CONF state and tries to notify port shutdown
    to the EthSM by calling DevAuth_RequestComModeNoCom() with Invalid EthIfCtrlIdx,
    DevAuth_RequestComModeNoCom() will return E_NOT_OK and will not send out any message.
  
Test Object: 
    Transmission of EAPol Logoff message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RequestComModeNoCom() with Invalid EthIfCtrlIdx.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that DevAuth_RequestComModeNoCom() returned E_NOT_OK and that no message was
              transmitted.
    04: Call DevAuth_RequestComModeNoCom() with correct EthIfCtrlIdx to indicate reception of
        Shutdown event.
    05: Call DevAuth_MainFunction() to process state machine transition.
    06: VP(): Verify that Logoff message is confirmed.
    07: Call DevAuth_TxConfirmation() with right EthIfCtrlIdx to confirm reception of EAPol Logoff
        message.
    08: Call DevAuth_MainFunction() to process state machine transition.
    09: VP(): Verify that EthSM is notified about successful transmission of Logoff messages, so it
           can continue with link down procedure.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RequestComModeNoCom.InvalidEthIfCtrlIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01074_AuthenticateEcu_NoSessionKey</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>7475</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when EAP-Request(Authenticate ECU) is received before key exchange
    was performed (symmetric key is not available), DevAuth will generate
    EAP-Response(Authenticate ECU), with Status Code 1 (No Session Key), while the remaining
    part of the message is skipped.
  
Test Object: 
    Transmission of Expanded EAP-Response(Authenticate ECU) message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    Key exchange was not performed (symmetric key is not available).
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(AuthEcu) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: Call DevAuth_PDelayReqIndication().
    04: Call DevAuth_MainFunction() to process state machine transition.
    05: Call DevAuth_PDelayRespIndication().
    06: Call DevAuth_MainFunction() to process state machine transition.
    09: VP(DevAuth_NET_SEC_187, DevAuth_NET_SEC_1151, DevAuth_NET_SEC_1139):
        Verify that EAP-Response(Authenticate ECU) message is transmitted with with Status Code 1
        (No Session Key), while the remaining part of the message is skipped.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1139</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01075_RxEapMsg_LongerLengthThanMessage</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>7584</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when EAP message is received, and the Length field indicates message
    size larger than the number of received bytes, it will be discarded.
  
Test Object: 
    Reception of EAP message.
  
Test Precondition: 
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request message where Length
        field is set larger then the total total message size.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that RX_INVALID_LENGTH status log is captured (if enabled) and that the
              response message has not been generated, i.e. request was discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.RFC3748.PacketFormat.Length.MsgTooSmall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01076_RxExpMsg_BufferOverflow</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>7648</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when expanded EAP message is received larger then the configured
    maximum message size (DevAuthMaxEapMsgSize), DevAuth will discard the message.
  
Test Object: 
    Reception of oversized expanded EAP-Request message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    EAP-Request(AuthECU) length fields configured too long.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of oversized EAP-Request message.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay Request message.
    04: VP(): Verify that DevAuth_PDelayReqIndication() returned E_NOT_OK because no valid
              EAP-Request(Authenticate ECU) message was received.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxExpMsg.BufferOverflow</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01077_FragmentedRx_TxAck_Retry</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>7745</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when during reception of fragmented message DevAuth fails to transmit
    acknowledge message, it shall retry in the next DevAuth_MainFunction() call.
  
Test Object: 
    Tx Fragment Acknowledge message retransmission.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    EthIf_ProvideTxBuffer_Stub return value set to BUFREQ_E_NOT_OK.
  
Test Execution: 
    01: Call EbTest_RxInd_FirstFrag() to send first fragment of EAP-Request(AuthEcu) on Port_0.
    02: Call DevAuth_MainFunction() to process Frag state machine transition.
    03: Set EthIf_ProvideTxBuffer() stub to return BUFREQ_OK.
    04: Call DevAuth_MainFunction() to process Frag state machine transition and retry sending
        TX_ACK.
    05: VP(DevAuth_NET_SEC_884, DevAuth.EB.FragSM.Ready_2_TxAck,
           DevAuth.EB.RespMsg.RepeatTransmission): Verify that DevAuth has generated acknowledge.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_884</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.FragSM.Ready_2_TxAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.RespMsg.RepeatTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01078_READY_OFF_TxIdentityRes_Retransmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>7833</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives EAP-Request(Identity) message and fails to
    transmit EAP-Response(Identity) message DevAuth shall try to retransmit the message in the
    next DevAuth_MainFunction().
  
Test Object: 
    Transmission of EAP-Response(Identity) message.
    Port state self transition: READY_AUTHENTICATE_OFF -&gt; READY_AUTHENTICATE_OFF.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_OFF.
    EthIf Stub return value set to E_NOT_OK.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(DevAuth.EB.RespMsg.RepeatTransmission): Verify that there is no trace of EthIf_Transmit()
           indicating that message was not sent and retransmission shall be tried in next
           DevAuth_MainFunction() call.
    04: Set EthIf_ProvideTxBuffer() stub to return BUFREQ_OK.
    05: Call DevAuth_MainFunction() to process state machine transition.
    06: VP(DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_RxIdentityReq,
          DevAuth.EB.RespMsg.RepeatTransmission): Verify that EAP-Response(Identity) message is
          transmitted with expected message format and State machine transition from
          READY_AUTHENTICATE_OFF -&gt; READY_AUTHENTICATE_OFF state for Port 0 has occurred.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOff_2_ReadyAuthenticateOff_RxIdentityReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.RespMsg.RepeatTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01079_KeyExchange</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>7923</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies Key exchange process between authenticator and supplicant.
  
Test Object: 
    Reception of EAP-Request(Key exchange) message.
    Transmission of EAP-Response(Key exchange) message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(DevAuth.EB.CheckPreloadedCertificates): Verify that Csm_CertificateParse() is
           called to verify if pre-loaded L2 and supplicant L3 and L4 certificates are available.
    04: VP(DevAuth.EB.KeyExchangeReq.CheckAuthCertificates): Verify that the first authenticator
           (L4) certificate was loaded into Csm and verified by calling Csm_CertificateParse().
    05: VP(DevAuth.EB.KeyExchangeReq.CheckAuthCertificates): Verify that the second authenticator
           (L3) certificate was loaded into Csm and verified by calling Csm_CertificateParse().
    06: VP(DevAuth.EB.KeyExchangeReq.CheckAuthCertificates): Verify that Csm_CertificateVerify()
           is called to verify the authenticator(L4) certificate against authenticator(L3)
           certificate.
    07: VP(DevAuth.EB.KeyExchangeReq.CheckAuthCertificates): Verify that Csm_CertificateVerify()
           is called to verify the authenticator(L3) certificate against L2 certificate.
    08: VP(DevAuth.EB.CERT_958.CheckAcceptableAuthenticator): Verify that Csm_KeyElementGet() is
           called to retrieve authenticator and supplicant certificate subjects in order to verify
        if authenticator is acceptable sender.
    09: VP(DevAuth.EB.CERT_958.SignatureValid): Verify that Csm_SignatureVerify() is called to
           verify the signature of the request message.
    10: VP(DevAuth_NET_SEC_162): Verify that Csm_RandomGenerate() is called to generate NonceB.
    11: VP(DevAuth.EB.SymmetricalKey): Verify that Csm_RandomGenerate() is called to generate
           symmetrical key.
    12: VP(DevAuth_NET_SEC_1209): Verify that the Csm_KeyGenerate() is called to generate ephemeral
           key pair according to ECC Diffie-Hellman (ECDH) key agreement, with p384 curve.
    13: VP(DevAuth_NET_SEC_1209): Verify that Csm_KeyExchangeCalcSecret() is called to generate
           common secret out of authenticator public key and the supplicant ephemeral private key.
    14: VP(DevAuth_NET_SEC_1209): Verify that Csm_Hash() is called twice to perform Key derivation
           function (KDF) (X9.63 with SHA-512).
    15: VP(DevAuth_NET_SEC_1209): Verify that Csm_Encrypt() is called to encrypt KeyId + symmetrical
           key.
    16: VP(DevAuth_NET_SEC_1209): Verify that Csm_MacGenerate() is called to generate MAC T
           (MAC over encrypted symmetrical key).
    17: VP(DevAuth_NET_SEC_162): Verify that Csm_SignatureGenerate() is called to generate signature
           of EAP-Response(Key exchange) message according to the algorithm specified in
           SignatureAlgo field of the request message.
    18: VP(DevAuth_NET_SEC_162, DevAuth_NET_SEC_164, DevAuth_NET_SEC_1183): Verify that expected
           EAP-Response(Key exchange) message is transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.CERT_958.SignatureValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.CERT_958.CheckAcceptableAuthenticator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_162</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.SymmetricalKey</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.CheckPreloadedCertificates</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.KeyExchangeReq.CheckAuthCertificates</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01080_KeyEx_NonceB_NotGenerated</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>8234</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when generation of EAP-Response(Key exchange) fails because NonceB
    could not be generated, DevAuth will transmit "short" Key exchange response message.
  
Test Object: 
    Processing EAP-Request(KeyEx) and generation of response message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Configure Csm_RandomGenerate_Stub to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth_NET_SEC_164): Verify that Key Exchange request message is received.
    05: VP(): Verify that expected EAP-Response(Key exchange) short message
        is transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyExchange.ShortResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01081_KeyEx_Cryptogram_NotGenerated</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>8330</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when generation of EAP-Response(Key exchange) fails because ephemeral
    key could not be generated, DevAuth will transmit "short" Key exchange response message.
  
Test Object: 
    Processing EAP-Request(KeyEx) and generation of response message.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Configure Csm_KeyGenerate_Stub to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth.EB.KeyExchange.ShortResponse, DevAuth.EB.LogStatusCode,
           DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected
           EAP-Response(Key exchange) short message is transmitted as epehemral key could not be
           generated and that status log raised correct code for DEVAUTH_KEY_GEN_FAILED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyExchange.ShortResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01082_KeyEx_CertB_Not_Filled</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>8406</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when generation of EAP-Response(Key exchange) fails when retrieving
    supplicant L3 certificate out of Crypto, DevAuth will transmit "short" Key exchange response
    message.
  
Test Object: 
    Processing EAP-Request(KeyEx) and generation of response message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Configure Csm_KeyElementGet_Stub to return E_NOT_OK to cause retriaval of supplicant L3
        fail.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message
        is transmitted as CertB retrival failed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyExchange.ShortResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01083_KeyEx_Signature_NotGenerated</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>8479</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when generation of EAP-Response(Key exchange) fails to generate
    signature, DevAuth will transmit "short" Key exchange response message.
  
Test Object: 
    Processing of EAP-Request(KeyEx) message.
    Transmission of EAP-Response(Key exchange) short message.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Configure Csm_SignatureGenerate_Stub to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message
        is transmitted as signature generation failed and that status log raised correct code for
        DEVAUTH_SIGNATURE_GEN_FAILED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyExchange.ShortResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01084_KeyExReq_SuppCert_NotValid</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>8555</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when generation of EAP-Response(Key exchange) has invalid
    Supplicant certificate, DevAuth will transmit "short" Key exchange response message.
  
Test Object: 
    Processing EAP-Request(KeyEx) and generation of response message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Confgure Csm_CertificateParse_Stub to return E_NOT_OK to cause L4 cert parsing to fail.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth_NET_SEC_1198, DevAuth.EB.KeyExchange.ShortResponse):
        Verify that short EAP-Response(Key exchange) message is transmitted, because supplicant
        certificate is invalid.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.KeyExchange.ShortResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01085_KeyExReq_AuthCert_LoadFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>8631</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when generation of EAP-Response(Key exchange) fails to load
    authenticator certificate, DevAuth will transmit "short" Key exchange response message.
  
Test Object: 
    Processing EAP-Request(KeyEx) and generation of response message.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Configure Csm_CertificateParse_Stub to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that Key Exchange request message is received and that expected
          EAP-Response(Key exchange) short message is transmitted as authenticator certificate
          failed to load also verify that status log raised correct code for
          DEVAUTH_AUTH_CERT_INVALID.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.KeyExchange.ShortResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01086_KeyExReq_AuthCert_VerifyFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>8710</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when generation of EAP-Response(Key exchange) fails to verify
    authenticator certificate, DevAuth will transmit "short" Key exchange response message.
  
Test Object: 
    Processing EAP-Request(KeyEx) and generation of response message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Configure Csm_CertificateVerify_Stub to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth.EB.KeyExchange.ShortResponse): Verify that expected EAP-Response(Key exchange)
           short message is transmitted as authenticator certificate failed to verify.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.KeyExchange.ShortResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01087_KeyExReq_AuthSignature_VerifyFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>8784</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when generation of EAP-Response(Key exchange) fails to verify
    EAP-Request(KeyEx) signature, DevAuth will transmit "short" Key exchange response message.
  
Test Object: 
    Processing EAP-Request(KeyEx) and generation of response message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
    Status log reporting.
  
Test Execution: 
    01: Configure Csm_SignatureVerify_Stub to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth_NET_SEC_164): Verify that Key Exchange request message is received.
    05: VP(DevAuth.EB.KeyExchange.ShortResponse, DevAuth.EB.LogStatusCode,
           DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected
           EAP-Response(Key exchange) short message is transmitted as request message signature
           failed to verify and that status log raised correct code for
           DEVAUTH_SIGNATURE_VERIFICATION_FAILED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.KeyExchange.ShortResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01088_KeyExReq_MsgTooShort</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>8865</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies Key exchange process between authenticator and supplicant,  if actually
    received message length is smaller then the length specified in Key exchange length field
    DevAuth shall ignore the message and send out short response.
  
Test Object: 
    Processing EAP-Request(KeyEx) and generation of response message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
    LenByte reduced for 1 byte to simulate a too short message.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that expected EAP-Response(Key exchange) short message
        is transmitted as LenByte was shorter than message and that status log raised correct code
        for DEVAUTH_KEY_EXCH_REQ_MSG_INCOMPLETE.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyExchange.ShortResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01089_KeyExReq_CertValueInvalid</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>8934</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies Key exchange process between authenticator and supplicant, if length of
    authenticator certificates from CertA does not match KeyExchange length from key exchange
    request message DevAuth shall send out short response.
  
Test Object: 
    Processing EAP-Request(KeyEx) and generation of response message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
    Certificate Length field Invalid value.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           Certificate Length field is invalid.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyExchange.ShortResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01090_KeyExReq_KeyReqValueInvalid</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>9012</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies Key exchange process between authenticator and supplicant, if
    Key Requested Field is invalid DevAuth shall send out short response.
  
Test Object: 
    Processing EAP-Request(KeyEx) and generation of response message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
    Key Requested field Invalid value.
    Status log reporting.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that short EAP-Response(Key exchange) message is transmitted, because invalid
           KeyRequested field was received in the request message and that status log raised
           correct code for DEVAUTH_INVALID_KEY_REQUESTED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.CERT_958.KeyRequestedValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.KeyExchange.ShortResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01091_KeyEx_NonceA_Repeated</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>9085</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies Key exchange process between authenticator and supplicant, if NonceA
    of the received message is the same as the last one DevAuth shall send out short response.
  
Test Object: 
    Processing EAP-Request(KeyEx) and generation of response message.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(DevAuth_NET_SEC_164): Verify that Key Exchange request message is received.
    04: VP(DevAuth_NET_SEC_162): Verify that expected EAP-Response(Key exchange) message is transmitted.
    05: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0,
        with the same NonceA as used in step 01.
    06: Call DevAuth_MainFunction() to process state machine transition.
    07: VP(DevAuth.EB.CERT_958.CheckNonceA, DevAuth.EB.KeyExchange.ShortResponse,
           DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that short
           EAP-Response(Key exchange) message is transmitted, because NonceA was used in the
           previous request message and that status log raised correct code for
           DEVAUTH_NONCE_REPEATED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_162</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.KeyExchange.ShortResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.CERT_958.CheckNonceA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01092_RxFRAG_2_Ready_UnfragmentedMsg</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>9224</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives a new unfragmented message in RX_FRAG state, it
    will discard the previous message and transition to READY state.
  
Test Object: 
    Reception of a valid new Expanded EAP-Request(EnableDiag) message terminating ongoing
    receive process.
    Transmission of Expanded EAP-Response(EnableDiag) message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    Keys exchanged.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to send first fragment of EAP-Request(AuthEcu) on Port_0.
    02: Call DevAuth_MainFunction() to process Frag state machine transition.
    03: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Enable Diagnostics).
    04: Call DevAuth_MainFunction() to process state machine transition.
    05: VP(): Verify that EAP-Response(Enable Diagnostics) message is transmitted with expected
              message format.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.NewMsgRx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01093_WAITACK_2_Ready_UnfragmentedMsg</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>9338</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives a new unfragmented message in WAIT_ACK state, it
    will abort current transmission, process new message and transition to READY state.
  
Test Object: 
    Reception of a valid new Expanded EAP-Request message terminating ongoing transmission process.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    Keys exchanged.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to send EAP-Request(KeyEx) on Port_0.
    02: Call DevAuth_MainFunction() to process Frag state machine transition.
    03: VP(): Verify transmission of the first fragment indirectly indicating that FragSM changed
              state to WAIT_ACK.
    04: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Enable Diagnostics).
    05: Call DevAuth_MainFunction() to process state machine transition.
    06: VP(): Verify that EAP-Response(Enable Diagnostics) message is transmitted with expected
              message format.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.NewMsgRx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01094_WAITACK_2_TX_ACK_FirstFrag</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>9476</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives a first fragment of a new message in WAIT_ACK
    state, it will abort current transmission and discard the message, store first fragment in the
    buffer and proceed with message reception.
  
Test Object: 
    Reception of a new valid fragmented Expanded EAP-Request(AuthECU) message terminating ongoing
    transmission process.
    Transmission of Expanded EAP-Response(AuthECU) message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    Keys exchanged.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to send EAP-Request(KeyEx) on Port_0.
    02: Call DevAuth_MainFunction() to process Frag state machine transition.
    03: VP(): Verify transmission of the first fragment indirectly indicating that FragSM changed
              state to WAIT_ACK.
    04: Call DevAuth_RxIndication() to indicate reception of EAP-Request(AuthEcu) on Port_0.
    05: Call DevAuth_MainFunction() to process Frag state machine transition.
    06: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay Request message.
    07: Call DevAuth_MainFunction() to process state machine transition.
    08: Call DevAuth_PDelayRespIndication() to indicate reception PDelay Response message.
    09: Call DevAuth_MainFunction() to process state machine transition.
    10: VP(): Verify that EAP-Response(AuthEcu) message is transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.NewMsgRx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01095_WAITACK_MiddleFrag_Discard</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>9649</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives a middle fragment of a new message in WAIT_ACK
    state, it will discard the message and proceed with fragmented message transmission.
  
Test Object: 
    Discarding the middle frag reception in WAIT_ACK fragSM state.
    Transmission of Expanded EAP-Response message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    Keys exchanged.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to send EAP-Request on Port_0.
    02: Call DevAuth_MainFunction() to process Frag state machine transition.
    03: VP(): Verify transmission of the first fragment indirectly indicating that FragSM changed
              state to WAIT_ACK.
    04: Call EbTest_RxInd_MiddleFrag() to send middle fragment of EAP-Request on Port_0.
    05: VP(): Verify that buffer is empty as message was discarded.
    06: Indicate reception of Acknowledge message from Authenticator.
    07: Call DevAuth_MainFunction() to process Frag state machine transition.
    08: VP(): Verify that middle fragments were sent and that last fragment was sent.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.WaitAck_2_WaitAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01096_TX_ACK_2_READY_UnfragmentedMsg</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>9795</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies FragSM transmission from TX_ACK state to READY state upon reception of
    unfragmented message.
  
Test Object: 
    Reception of unfragmented message in TX_ACK state.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    FragSM is in the state READY.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to receive first fragment of EAP-Request message on Port_0.
    02: Call DevAuth_RxIndication() to indicate reception of unfragmented EAP-Request message.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that EAP-Response message is transmitted with expected message format
              indirectly verifying that FragSM transition to READY state.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.NewMsgRx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01097_TX_ACK_2_READY_FragmentedMsg</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>9907</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that FragSM transitions from TX_ACK state to READY state upon reception
    of first fragment of the message.
  
Test Object: 
    Reception of first fragment of the message in TX_ACK state.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    FragSM is in the state READY.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to receive first fragment of EAP-Request message on Port_0.
    02: Call EbTest_RxInd_FirstFrag() to receive the first fragment of a new EAP-Request on Port_0.
    03: Receive rest of the message.
    04: Call DevAuth_MainFunction() to process Frag state machine transition.
    05: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay Request message.
    06: Call DevAuth_MainFunction() to process state machine transition.
    07: Call DevAuth_PDelayRespIndication() to indicate reception PDelay Response message.
    08: Call DevAuth_MainFunction() to process state machine transition.
    09: VP(): Verify that EAP-Response message is transmitted indirectly indicating FragSM state
              transition to READY.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.NewMsgRx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01098_DiscardMsg_UnsuportedFlags</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>10076</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will discard the message with unsupported fragmentation flags
    field value.
  
Test Object: 
    Reception of message with unsupported flags field.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    FragSM is in the state READY.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to receive first fragment of EAP-Request message with
        unsupported flags on Port_0.
    02: VP(): Verify that nothing was transmitted as message was discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_880</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01099_KeyEx_GenSecret_GetPublicKeyFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>10149</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to generate secret after CSM failed to return authenticator public key.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_KeyElementGet_Stub.RetVal to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           secret generation failed and that status log raised correct code for
           DEVAUTH_SECRET_GEN_FAILED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01100_KeyEx_GenSecret_SecretCalcFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>10219</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to generate secret after CSM failed to calculate the secret.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_KeyExchangeCalcSecret_Stub.RetVal to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           secret generation failed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01101_KeyEx_GenSecret_GetSecretValueFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>10285</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to generate secret after CSM failed to return Secret Value.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_KeyElementGet_Stub.RetVal to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           secret generation failed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01102_KeyEx_GenSymKey_RandomNumberGenFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>10351</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to generate Symetric key after CSM failed to return Random Number.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_RandomGenerate_Stub.RetVal to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           symmetric key generation failed and that status log raised correct code for
           DEVAUTH_SYMMETRIC_KEY_GEN_FAILED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01103_KeyEx_GenSymKey_LoadSymetricalKeyFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>10421</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to generate symmetric key after CSM failed to load symmetric key.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_KeyElementSet_Stub.RetVal to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           symmetric key generation failed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01104_KeyEx_GenEpheKeyPair_GetEphePubKeyFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>10487</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to generate Ephemeral key pair after CSM failed to retrieve generated Ephemeral
    Public Key.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_KeyElementGet_Stub.RetVal to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           ephemeral key generation failed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01105_KeyEx_GenEpheKeyPair_LoadEphePubKeyFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>10554</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to generate Ephemeral key pair after CSM failed to load Ephemeral Public Key.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Csm_KeyElementSet_Stub.RetVal set to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           ephemeral key generation failed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01106_KeyEx_GenEpheKeyPair_GetEphePrivKeyFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>10620</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to generate Ephemeral key pair after CSM failed to retrieve generate Ephemeral
    Private Key.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_KeyElementGet_Stub.RetVal to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           ephemeral key generation failed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01107_KeyEx_GenEpheKeyPair_LoadEphePrivKeyFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>10687</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to generate Ephemeral key pair after CSM failed to load Ephemeral Private Key.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_KeyElementSet_Stub.RetVal to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           ephemeral key generation failed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01108_KeyEx_DeriveKmacKenc_Failed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>10753</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to derive a key (KDF).
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_Hash_Stub.RetVal to return E_NOT_OK to make first part of hashed key fail.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth_NET_SEC_164, DevAuth.EB.LogStatusCode): Verify that expected
           EAP-Response(Key exchange) short message is transmitted as key derivation failed after
           CDM failed to return the first part of hashed key and that status log raised correct code
           for DEVAUTH_KEY_DERIVATION_FAILED.
    05: Set Csm_Hash_Stub.RetVal to return E_NOT_OK to make second part of hashed key fail.
    06: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    07: Call DevAuth_MainFunction() to process state machine transition.
    08: VP(DevAuth_NET_SEC_164, DevAuth.EB.LogStatusCode): Verify that expected
           EAP-Response(Key exchange) short message is transmitted as key derivation failed and that
           status log raised correct code for DEVAUTH_KEY_DERIVATION_FAILED.
    09: Csm_KeyElementSet_Stub.RetVal set to return E_NOT_OK to make loading the Kenc value fail.
    10: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    11: Call DevAuth_MainFunction() to process state machine transition.
    12: VP(DevAuth_NET_SEC_164, DevAuth.EB.LogStatusCode): Verify that expected
           EAP-Response(Key exchange) short message is transmitted as key derivation failed and that
           status log raised correct code for DEVAUTH_KEY_DERIVATION_FAILED.
    13: Set Csm_KeyElementSet_Stub.RetVal to return E_NOT_OK to make loading the Kmac value fail.
    14: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    15: Call DevAuth_MainFunction() to process state machine transition.
    16: VP(DevAuth_NET_SEC_164, DevAuth.EB.LogStatusCode): Verify that expected
           EAP-Response(Key exchange) short message is transmitted as key derivation failed and that
           status log raised correct code for DEVAUTH_KEY_DERIVATION_FAILED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01109_KeyEx_EncryptSymKey_EncryptFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>10952</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to Encrypt Symmetrical Key after CSM failed to return Encrypted data.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
    Csm_Encrypt_Stub.RetVal set to return E_NOT_OK.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           encrypting data failed and that status log raised correct code for
           DEVAUTH_ENCRYPT_FAILED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01110_KeyEx_EncryptSymKey_InvalidLengthReturned</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>11022</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to Encrypt Symmetrical Key after CSM returned invalid Length of encrypted data.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
    Csm_Encrypt_Stub.resultLengthPtr_Outset set to return Incorrect value.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           encrypting symmetrical key failed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01111_KeyEx_GenerateTMac_MacGenerateFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>11090</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to Generate Mac (T) because related Csm call failed.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_MacGenerate_Stub.RetVal to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           mac generation failed and that status log raised correct code for
           DEVAUTH_TMAC_GEN_FAILED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01112_KeyEx_GenerateTMac_MacGenerateInvalidLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>11160</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to Generate Mac (T) after Csm returned invalid MAC size.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_MacGenerate_Stub.macLengthPtr_Out to return invalid Length.
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as mac
           generation failed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01113_KeyEx_VerifySignature_UnsupportedSignatureAlgo</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>11229</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth receives EAP-Request(Key Exchange) message with unsupported Signature Algorithm.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           received signature algorithm is unsupported and that status log raised correct code for
           DEVAUTH_UNSUPPORTED_SIGNATURE_ALGO.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01114_KeyEx_CertLengthInvalid_4ByteLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>11302</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth receives EAP-Request(Key exchange) message where certificates have length more than
    3 bytes long.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) with CertA
        length in more than 3 bytes long.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           authenticator certificate is invalid.
    04: Configure EAP-Req(KeyEx) message CertB to have 3 bytes long length.
    05: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) with CertB
        length in more than 3 bytes long.
    06: Call DevAuth_MainFunction() to process state machine transition.
    07: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           authenticator certificate is invalid.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01115_KeyEx_MissingSequenceTag</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>11401</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth receives EAP-Request(Key exchange) message with a certificate that does not start with
    a SEQUENCE tag.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) with CertA
        without sequence tag on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           authenticator certificate is invalid.
    04: Set CertB first byte to value that isn't Sequence tag (0x30).
    05: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) with CertB
        without sequence tag on Port_0.
    06: Call DevAuth_MainFunction() to process state machine transition.
    07: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           authenticator certificate is invalid.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01116_KeyEx_LoadAuthCertFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>11510</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to load certificate into Csm.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_KeyElementSet_Stub.RetVal to return E_NOT_OK so CertA load fails.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           authenticator certificate is invalid.
    05: Set Csm_KeyElementSet_Stub.RetVal to return E_NOT_OK so CertB load fails.
    06: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    07: Call DevAuth_MainFunction() to process state machine transition.
    08: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           authenticator certificate is invalid.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01117_KeyEx_LoadAuthCert_AuthCert1ParseFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>11609</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to parse the first certificate from CertA.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
    Csm_CertificateParse_Stub.RetVal set to return E_NOT_OK.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           authenticator certificate is invalid.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01118_KeyEx_VerifyAuthCert_L3L2Failed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>11675</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to verify authenticator L4 certificate against authenticator L3 certificate.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
    Csm_CertificateVerify_Stub.RetVal set to return E_NOT_OK.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           authenticator certificate is invalid.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01119_KeyEx_VerifyAuthCert_GetAuthPubKeyFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>11760</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails retrieve authenticator public key out of its L4 certificate.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
    Csm_CertificateVerify_Stub.RetVal set to return E_NOT_OK.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           authenticator certificate is invalid.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01120_KeyEx_SuppL3Cert_ParseFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>11826</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to verify availability of supplicant Certificates after CSM failed to parse
    supplicant certificates.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Csm_CertificateParse_Stub.RetVal set to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth_NET_SEC_164, DevAuth.EB.LogStatusCode): Verify that expected
           EAP-Response(Key exchange) short message is transmitted as supplicant L4 certificate is
           invalid and that status log raised correct code for DEVAUTHT_SUPP_CERT_INVALID.
    05: Csm_CertificateParse_Stub.RetVal set to return E_NOT_OK.
    06: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    07: Call DevAuth_MainFunction() to process state machine transition.
    08: VP(DevAuth_NET_SEC_164, DevAuth.EB.LogStatusCode): Verify that expected
           EAP-Response(Key exchange) short message is transmitted as supplicant L3 certificate is
           invalid and that status log raised correct code for DEVAUTHT_SUPP_CERT_INVALID.
    09: Csm_CertificateParse_Stub.RetVal set to return E_NOT_OK.
    10: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    11: Call DevAuth_MainFunction() to process state machine transition.
    12: VP(DevAuth_NET_SEC_164, DevAuth.EB.LogStatusCode): Verify that expected
           EAP-Response(Key exchange) short message is transmitted as supplicant L2 certificate is
           invalid and that status log raised correct code for DEVAUTHT_SUPP_CERT_INVALID.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01121_KeyEx_FillCertB_GetSuppL4Failed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>11956</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to fill CertB after CSM failed to retrieve pre-loaded supplicant L4 certificate.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_CertificateParse_Stub.RetVal to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           supplicant L4 retrieval failed and that status code raised correct code for
           DEVAUTH_CERTB_RETRIEVAL_FAILED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01122_KeyEx_AcceptableSender_GetAuthCertSubjectFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>12026</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth failed to verify that authenticator is an acceptable sender because CSM failed to
    retrieve certificate subject out of authenticator L4 certificate.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_KeyElementGet_Stub.RetVal to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted and that
           status log raised correct code for DEVAUTH_UNACCEPTABLE_AUTHENTICATOR..
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01123_KeyEx_AcceptableSender_GetSuppCertSubjectFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>12095</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth failed to verify that authenticator is an acceptable sender because CSM failed to
    retrieve certificate subject out of supplicant L4 certificate.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_KeyElementGet_Stub.RetVal to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01124_AuthECU_ReqNonceDoesntMatchRespNonce</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>12161</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth_PDelayResIndication() is called with a value of
    RequestNonce that is different to the value received in EAP-Request(Authenticate ECU) message,
    PDelay-Response message will be ignored.
  
Test Object: 
    Reception of EAP-Request(Authenticate ECU) message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call EbTest_ExchangeKeys() to Exchange keys with Authenticator.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(AuthEcu) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth_NET_SEC_176): Verify that no message is generated because no PDelay request and
        response indications have been received.
    05: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay request message.
    06: Call DevAuth_MainFunction() to process state machine transition.
    07: VP(DevAuth_NET_SEC_176): Verify that no message is generated because PDelay-Resp indication
        have not been received.
    08: Call DevAuth_PDelayRespIndication() with a Nonce value different to the one received in
        PDelayReqIndication().
    09: VP(DevAuth.EB.PDelayResIndication.InvalidNonce1): Verify that PdelayResIndication()
           returned E_NOT_OK.
    10: Call DevAuth_MainFunction() to process state machine transition.
    11: VP(DevAuth.EB.PDelayResIndication.InvalidNonce1): Verify that EAP-Response(AuthEcu) message
           is not transmitted as PDelay Resp Nonce doesn't match PDelay Req Nonce.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PDelayResIndication.InvalidNonce1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01125_KeyEx_TxAuthEcuResp_GenICVFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>12275</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when during generation of EAP-Response(AuthEcu) DevAuth fails to
    generate ICV field, the Status code field will be set to 1 (No session Key).
  
Test Object: 
    Transmission of Expanded EAP-Response(Authenticate ECU) message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    Keys exchanged with authenticator.
  
Test Execution: 
    01: Set Csm_MacGenerate_Stub to return E_NOT_OK.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(AuthEcu) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay Request message.
    05: Call DevAuth_MainFunction() to process state machine transition.
    06: Call DevAuth_PDelayRespIndication() to indicate reception PDelay Response message.
    07: Call DevAuth_MainFunction() to process state machine transition.
    08: VP(DevAuth_NET_SEC_187): Verify that EAP-Response(AuthEcu) message is transmitted with
           Status Code 1 (No Session Key).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01126_AuthenticateEcu_NoCertificate</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>12393</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will transmit EAP-Response(Authenticate ECU) with
    Status Code 2 (No Certificate), if supplicant certificates are not present
    (parsing of certificate fails).
  
Test Object: 
    Transmission of Expanded EAP-Response(Authenticate ECU) message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set Csm_CertificateParse_Stub to return E_NOT_OK in order to indicate that supplicant
        certificates are not present.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(AuthEcu) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay Request message.
    05: Call DevAuth_MainFunction() to process state machine transition.
    06: Call DevAuth_PDelayRespIndication() to indicate reception PDelay Response message.
    07: Call DevAuth_MainFunction() to process state machine transition.
    08: VP(DevAuth_NET_SEC_188, DevAuth_NET_SEC_1141): Verify that EAP-Response(AuthEcu) message is
           transmitted with Status Code 2 (No Certificate).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1141</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01127_SEND_EAPOL_START_2_READY_ON_AuthRespTimeout</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>12505</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies the case when authenticator has not answered to EAPoL-Start messages for
    DevAuthAuthenticatorResponseTimeout seconds, DevAuth shall do the following:
        - Activate communications as after a EAP Success
        - Activate diagnostics by calling user defined callback function.
  
Test Object: 
    Port state transition: SEND_EAPOL_START -&gt; READY_AUTHENTICATE_ON (upon Timeout2 event).
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state: SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_MainFunction() to tick the timer (AUTHENTICATOR_RESPONSE_TIMEOUT - 1) times.
    02: Tick Eapol timer one more time.
    03: VP(EB.DevAuth_NET_SEC_1176,
           DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_AuthRespTimeout): Verify that
           after AuthenticatorResponseTimeout has expired communication was enabled and that the
           user defined callback function for enabling diagnostic was called.
    04: Call DevAuth_MainFunction() to tick the timer (8 * INITIAL_EAPOL_TIMEOUT) times.
    05: VP(DevAuth_NET_SEC_1161): Verify that EAPoL-Start was NOT transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.NET_SEC_1176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_AuthRespTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01128_Initial_2_AUTH_STOPPED</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>12594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that the state of Client state machine is stored in NVRAM, and that stored
    value is used for DevAuth initialization, additionally test verifies that all communication
    shall be enabled upon reception of link state ACTIVE notification.
  
Test Object: 
    Client State Machine transition Initial -&gt; AUTH_STOPPED.
    Store of Client state machine state in NVRAM.
  
Test Precondition: 
     DevAuth initialized.
     Client state machine is in AUTH_STARTED_UNLOCKED state.
  
Test Execution: 
    01: Call DevAuth_EcuAuthStop() to disable ECU Authentication. The new state is stored NVRAM.
    02: Call DevAuth_Init() to initialize DevAuth.
    03: VP(DevAuth.EB.ClientSM.Initial_2_AuthStopped, DevAuth.EB.User_DevAuthSetNvramData,
           DevAuth.EB.User_DevAuthGetNvramData, DevAuth_NET_SEC_460):
           Verify that Client state machine is in AUTH_STOPPED state indicating the transition
           from Initial state. This also verifies that transition from step 01 was stored in NVRAM.
    04: Call DevAuth_TrcvLinkStateChg()  to indicate link activation.
    05: Call MainFunction() to process link activation.
    06: VP(DevAuth_NET_SEC_1165): verify that EthIf_EnableRelatedEthIfCtrls() was called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.Initial_2_AuthStopped</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthGetNvramData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthSetNvramData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_460</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_1165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01129_Initial_2_STARTED_LOCKED</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>12731</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Test case verifies that the state of Client state machine is stored in NVRAM, and that stored
     value is used for DevAuth initialization.
  
Test Object: 
    Client State Machine transition Initial -&gt; AUTH_STARTED_LOCKED.
    Store of Client state machine state in NVRAM.
  
Test Precondition: 
     DevAuth initialized.
     Client state machine is in AUTH_STARTED_UNLOCKED state.
  
Test Execution: 
    01: Call DevAuth_EcuAuthLock() to lock ECU Authentication. The new state is stored NVRAM.
    02: Call DevAuth_Init() to initialize DevAuth.
    03: VP(DevAuth.EB.ClientSM.Initial_2_AuthStartedLocked, DevAuth.EB.User_DevAuthSetNvramData,
           DevAuth.EB.User_DevAuthGetNvramData, DevAuth_NET_SEC_460):
           Verify that Client state machine is in AUTH_STARTED_LOCKED state indicating the
           transition from Initial state. This also verifies that transition from step 01 was
           stored in NVRAM.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.Initial_2_AuthStartedLocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthGetNvramData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthSetNvramData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_460</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01130_Initial_2_STARTED_UNLOCKED</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>12849</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Test case verifies that the state of Client state machine is stored in NVRAM, and that stored
     value is used for DevAuth initialization indicating state transition from
     Initial -&gt; AUTH_STARTED_UNLOCKED.
  
Test Object: 
    Client State Machine transition Initial -&gt; AUTH_STARTED_LOCKED.
    Store of Client state machine state in NVRAM.
  
Test Precondition: 
     DevAuth initialized.
     AUTH_STARTED_LOCKED state is saved to NVRAM.
     User_DevAuthIsUnlockSafe_Stub set to return TRUE to allow saving the state to the NVRAM.
  
Test Execution: 
    01: Call DevAuth_EcuAuthUnlock() to unlock ECU Authentication. The new state is stored NVRAM.
    02: Call DevAuth_Init() to initialize DevAuth.
    03: VP(DevAuth.EB.ClientSM.Initial_2_AuthStartedUnlocked, DevAuth.EB.User_DevAuthSetNvramData,
           DevAuth.EB.User_DevAuthGetNvramData, DevAuth_NET_SEC_460):
           Verify that Client state machine is in AUTH_STARTED_UNLOCKED state indicating the
           transition from Initial state. This also verifies that transition from step 01 was
           stored in NVRAM.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.Initial_2_AuthStartedUnlocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthGetNvramData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_460</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01131_STARTED_LOCKED_2_STARTED_UNLOCKED</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>12970</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that the Client state machine shall make transition from
    AUTH_STARTED_LOCKED to AUTH_STARTED_UNLOCKED state upon DevAuth_EcuAuthUnlock() call,
    if the user callback function User_IsUnlockSafe() is configured and returns TRUE, otherwise
    it will return JOB_E_FORBIDDEN.
    Test case also checks that DevAuth stores ClientSM state into NVRAM.
  
Test Object: 
    User callback function User_IsUnlockSafe().
    Client State Machine transition Initial -&gt; AUTH_STARTED_LOCKED.
    Store of Client state machine state in NVRAM.
  
Test Precondition: 
     DevAuth initialized.
     Client state machine is in AUTH_STARTED_UNLOCKED state.
  
Test Execution: 
    01: Call DevAuth_EcuAuthLock() to lock ECU Authentication. The new state is stored NVRAM.
    02: Call DevAuth_Init() to initialize DevAuth.
    03: VP(DevAuth.EB.ClientSM.Initial_2_AuthStartedLocked, DevAuth.EB.User_DevAuthSetNvramData,
           DevAuth.EB.User_DevAuthGetNvramData, DevAuth_NET_SEC_460):
           Verify that Client state machine is in AUTH_STARTED_LOCKED state indicating the
           transition from Initial state. This also verifies that transition from step 01 was
           stored in NVRAM.
    04: Configure User_DevAuthIsUnlockSafe_Stub for Port0 and Port1 to return FALSE indicating
        that ECU is in a field mode, i.e. that authentication process cannot be unlocked.
    05: Call DevAuth_EcuAuthUnlock() to unlock ECU Authentication.
    06: VP(DevAuth.EB.User_DevAuthIsUnlockSafe): Verify that User_DevAuthIsUnlockSafe() is called
        for both ports and that DevAuth_EcuAuthUnlock() returned JOB_E_FORBIDDEN indicating that
        unlock operation cannot be executed.
    07: Configure User_DevAuthIsUnlockSafe_Stub for Port0 and Port1 to return TRUE indicating that
        ECU is in plant or engineering mode, i.e. that authentication process cannot be unlocked.
    08: Call DevAuth_EcuAuthUnlock() to unlock ECU Authentication. The new state is stored NVRAM.
    09: VP(DevAuth.EB.User_DevAuthIsUnlockSafe): Verify that user callback function is called for
        Port 0 to verify if unlock procedure can be executed.
    10: VP(DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedUnlocked,
           DevAuth.EB.User_DevAuthSetNvramData, DevAuth.EB.User_DevAuthGetNvramData,
           DevAuth_NET_SEC_460, DevAuth.EB.ClientSM.EcuAuthUnlock): Verify that Client state
           machine made transition to AUTH_STARTED_UNLOCKED state because
           User_DevAuthIsUnlockSafe returned TRUE.
           This also verifies that transition from step 08 was stored in NVRAM.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedLocked_2_AuthStartedUnlocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthGetNvramData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthSetNvramData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_460</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.EcuAuthUnlock</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>460</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthIsUnlockSafe</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01132_Initial_2_Default_GetNvramData_FpFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>13164</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will initialize Client state machine in AUTH_STOPPED
    state when reading of NVRAM fails during initialization process.
  
Test Object: 
    Client State Machine transition from Initial -&gt; Default(AUTH_STOPPED).
  
Test Precondition: 
    User_DevAuthGetNvramData_Stub set to return E_NOT_OK.
  
Test Execution: 
    01: Call DevAuth_Init() to initialize DevAuth and trigger state change from
        Initial -&gt; AUTH_STARTED_UNLOCKED.
    02: VP(): Verify that ClienSM for the first port is in AUTH_STOPPED state.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthGetNvramData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.Initial_2_AuthStopped</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01133_TxFragment_RetransmissionIfFailed</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>13230</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth fails to send out a message fragment, it will retry in the
    next MainFunction() call.
  
Test Object: 
    Retransmission of fragmented Exp Eap message.
  
Test Precondition: 
    DevAuth initialized.
    Port is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Enable Diagnostics).
    02: Set EthIf_Transmit_Stub to return E_NOT_OK.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that the response message is not in the Tx buffer indicating that transmission
        of the message did not happened.
    05: Set EthIf_Transmit_Stub to return E_OK.
    06: Call DevAuth_MainFunction() to process state machine transition.
    07: VP(): Verify that complete fragmented ExpEap message was sent.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_RxEapFailure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01134_CopyFirstFrag_SizeGreaterThanSupported</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>13327</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when the first fragment of EXP message has the size greater than the
    maximum message size (DevAuthMaxEapMsgSize, excluding fragmentation Length field), the message
    will be silently discarded.
  
Test Object: 
    Reception of fragmented EAP message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of first fragment of EXP message with
        message size greater than DevAuthMaxEapMsgSize - FRAGMENT_HEADER_SIZE.
    02: Call DevAuth_MainFunction() to process the message.
    03: VP(): Verify that EAP response message is not transmitted because received message is
              discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxExpMsg.BufferOverflow</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01135_CopyFirstFrag_MsgLengthGreaterThanBuffer</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>13408</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when the first fragment of EXP message has the size greater than the
    maximum buffer size the message will be silently discarded.
  
Test Object: 
    Reception of fragmented EAP message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of first fragment of EXP message with
        EAP length greater than DevAuthMaxEapMsgSize + 2.
    02: Call DevAuth_MainFunction() to process the message.
    03: VP(): Verify that EAP response message is not transmitted because received message is
              discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.RxExpMsg.BufferOverflow</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01136_Ready_OFF_2_Ready_OFF_EapFailure</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>13488</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in READY_AUTHENTICATE_OFF and it receives Eap-Failure
    message, it will silently discard the message and stay in READY_AUTHENTICATE_OFF state.
  
Test Object: 
    Reception of Eap-Failure message.
    Port state transition: READY_AUTHENTICATE_OFF -&gt; READY_AUTHENTICATE_OFF (upon reception of
    Eap-Failure).
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_OFF.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of Eap-Failure message on Port_0.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that EthIf_DisableRelatedEthIfCtrls() was not called for the given port and
              that portSM stayed in READY_AUTHETICATE_OFF state.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01137_FragmentedRx_IgnorePadding</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>13551</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives fragmented Expanded EAP-Request message with all
    fragments having padding, padding will be ignored and response shall be generated.
  
Test Object: 
    Reception of fragmented Expanded EAP-Request message with padding in every fragment.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call EbTest_RxInd_FirstFrag() to send first fragment of EAP-Request with 5 bytes padding.
    02: Call DevAuth_MainFunction() to process Frag state machine transition.
    03: Call EbTest_RxInd_MiddleFrag() to send subsequent fragments with 7 bytes padding.
    04: Call EbTest_RxInd_LastFrag() to send last fragment with 8 bytes padding.
    05: Call DevAuth_MainFunction() to process Frag state machine transition.
    06: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay Request message.
    07: Call DevAuth_MainFunction() to process state machine transition.
    08: Call DevAuth_PDelayRespIndication() to indicate reception PDelay Response message.
    09: Call DevAuth_MainFunction() to process state machine transition.
    10: VP(DevAuth_NET_SEC_1181): Verify that EAP-Response(AuthEcu) message is transmitted.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_1181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01138_Ready_ON_2_Ready_ON_KeyExchange</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>13708</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case verifies that DevAuth will self transition to READY_AUTHENTICATE_ON upon
    reception of EAP-Request(KeyEx) in READY_AUTHENTICATE_ON state.
  
Test Object: 
    Port state transition: READY_AUTHENTICATE_ON -&gt; READY_AUTHENTICATE_ON (upon reception of
    EAP-Request(KeyEx).
  
Test Precondition: 
    DevAuth initialized.
    Port is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call EbTest_ExchangeKeys() to Indicate EAP-Request(KeyEx) and to Exchange keys with
        Authenticator.
    02: VP(): Verify that State machine transitioned from
              READY_AUTHENTICATE_ON -&gt; READY_AUTHENTICATE_ON.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_KeyExchange</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01139_Ready_2_Ready_NonFrag</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>13762</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when FragSM is in READY state and it receives a non fragmented message,
    it shall process the message and self transition READY -&gt; READY state.
  
Test Object: 
    Frag state self transition: READY -&gt; READY.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Enable Diagnostics).
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that EAP-Response(Enable Diagnostics) message is transmitted
        with expected message format and State machine transition from READY_ON -&gt;
        READY_ON state for given Port has occurred.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.Ready_2_Ready_NonFrag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>494</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01140_TX_FRAG_2_TX_FRAG_DiscardMsg</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>13830</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when FragSM is in TX_FRAG state and receives Middle fragment,
    Acknowledge message or Invalid message it shall discard the messages and stay in TX_FRAG state.
  
Test Object: 
    Discarding messages in TX_FRAG.
    Frag state transition: TX_FRAG -&gt; TX_FRAG.
  
Test Precondition: 
    Port state machine is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that first fragment was sent.
    04: Call EbTest_SendExpAck() to indicate reception of Acknowledge message in order to FragSM
        transition to TX_FRAG state.
    05: Call EbTest_RxInd_MiddleFrag() to indicate reception of middle fragment.
    06: VP(): Verify that nothing happened as message was discarded.
    07: Call RxIndication() to indicate reception of Invalid message.
    08: VP(): Verify that nothing happened as message was discarded.
    09: Call RxIndication() to indicate reception of Acknowledge message.
    10: VP(): Verify that nothing happened as message was discarded.
    11: Set the message position at the right value.
    12: VP(): Check that rest of the message was sent verifying that FragSM discarded received
              messages and transitioned from TX_FRAG -&gt; TX_FRAG.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.TxFrag_2_TxFrag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01141_ClientSM_DTCs</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>13958</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DTC ECU_AUTH_NOT_STARTED is active as long as the ECU Authentication is
    not started and that a DTC ECU_AUTH_NOT_LOCKED  is active as long as the ECU Authentication is
    not locked.
  
Test Object: 
    DTCs ECU_AUTH_NOT_STARTED and ECU_AUTH_NOT_LOCKED support.
  
Test Precondition: 
    DevAuth initialized.
  
Test Execution: 
    01: Call DevAuth_EcuAuthStop() to indicate Client SM change and activate DTC
        ECU_AUTH_NOT_STARTED.
    02: VP(): Verify that ECU_AUTH_NOT_STARTED and ECU_AUTH_NOT_LOCKED are activated.
    03: Call DevAuth_EcuAuthStart() to indicate Client SM change and deactivate DTC
        ECU_AUTH_NOT_STARTED.
    04: VP(): Verify that ECU_AUTH_NOT_STARTED is deactivated and ECU_AUTH_NOT_LOCKED is activated.
    05: Call DevAuth_EcuAuthLock() to indicate Client SM change and deactivate DTCs
        ECU_AUTH_NOT_STARTED and ECU_AUTH_NOT_LOCKED.
    06: VP(): Verify that ECU_AUTH_NOT_STARTED and ECU_AUTH_NOT_LOCKED are deactivated.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_651</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01142_KeyEx_SuppL3CertSizeGreaterThanMaxL3Size</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>14081</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when generation of EAP-Response(Key exchange) retrieve too long
    supplicant L3 certificate length out of Crypto, DevAuth shall transmit "short" Key exchange
    response message.
  
Test Object: 
    Processing EAP-Request(KeyEx) and generation of response message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Configure Csm_KeyElementGet_Stub to return supplicant L3 Cert length + 1U.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as CSM
        returned too large CertB length and that status log raised correct code for
        DEVAUTH_BUFFER_TOO_SMALL.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyExchange.ShortResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01143_KeyEx_SuppL4CertSizeGreaterThanMaxL4Size</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>14156</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when generation of EAP-Response(Key exchange) retrieve too long
    supplicant L4 certificate length out of Crypto, DevAuth shall transmit "short" Key exchange
    response message.
  
Test Object: 
    Processing EAP-Request(KeyEx) and generation of response message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Configure Csm_KeyElementGet_Stub to return supplicant L4 Cert length + 1U.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as CSM
        returned too large CertB length and that status log raised correct code for
        DEVAUTH_BUFFER_TOO_SMALL.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyExchange.ShortResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01144_EcuAuthUnlock_FORBIDDEN</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>14231</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth_EcuAuthUnlock() is called while Client state machine
    is in AUTH_STARTED_UNLOCKED or AUTH_STOPPED state it will return status code E_FORBIDDEN and
    remain in previous state.
  
Test Object: 
    Client state self transition: AUTH_STARTED_UNLOCKED -&gt; AUTH_STARTED_UNLOCKED.
    E_FORBIDDEN status code.
  
Test Precondition: 
    DevAuth initialized.
  
Test Execution: 
    01: Call DevAuth_EcuAuthUnlock().
    02: VP(DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStartedUnlocked_Unlock,
           DevAuth.EB.ClientSM.EcuAuthUnlock):
           Verify that DevAuth_EcuAuthUnlock() returned E_FORBIDDEN.
    03: Call DevAuth_EcuAuthStop() to transition to ClientSM state AUTH_STOPPED.
    04: Call DevAuth_EcuAuthUnlock().
    05: VP(DevAuth.EB.ClientSM.AuthStopped_2_AuthStopped_LockUnlock,
           DevAuth.EB.ClientSM.EcuAuthUnlock): Verify that DevAuth_EcuAuthUnlock() returned
           E_FORBIDDEN.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.EcuAuthUnlock</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>460</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.AuthStartedUnlocked_2_AuthStartedUnlocked_Unlock</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01145_KeyEx_ParseCertSubject_FieldMismatch</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>14317</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to get authenticator certificate subject due to improperly set subject elements.
  
Test Object: 
    Authenticator certificate parsing.
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set EbTest_EapReqKeyExchange SET_TAG location with mismatched tag, also match
        EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth_NET_SEC_164, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected
           EAP-Response(Key exchange) short message is transmitted and that status log raised
           correct code for DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    05: Set EbTest_EapReqKeyExchange SEQUENCE_TAG location with mismatched tag, also match
        EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    06: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    07: Call DevAuth_MainFunction() to process state machine transition.
    08: VP(DevAuth_NET_SEC_164, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected
           EAP-Response(Key exchange) short message is transmitted and that status log raised
           correct code for DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    09: Set EbTest_EapReqKeyExchange DEVAUTH_OID_TAG location with mismatched tag, also match
        EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    10: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    11: Call DevAuth_MainFunction() to process state machine transition.
    12: VP(DevAuth_NET_SEC_164, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected
           EAP-Response(Key exchange) short message is transmitted and that status log raised
           correct code for DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    13: Set EbTest_EapReqKeyExchange set OBJECT_ID length to something else than 3 bytes, also match
        EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    14: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    15: Call DevAuth_MainFunction() to process state machine transition.
    16: VP(DevAuth_NET_SEC_164, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected
           EAP-Response(Key exchange) short message is transmitted and that status log raised
           correct code for DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    17: Set EbTest_EapReqKeyExchange first part of COMMON_NAME to unsupported value, also match
        EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    18: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    19: Call DevAuth_MainFunction() to process state machine transition.
    20: VP(DevAuth_NET_SEC_164, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected
           EAP-Response(Key exchange) short message is transmitted and that status log raised
           correct code for DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    21: Set EbTest_EapReqKeyExchange second part of COMMON_NAME to unsupported value, also match
        EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    22: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    23: Call DevAuth_MainFunction() to process state machine transition.
    24: VP(DevAuth_NET_SEC_164, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected
           EAP-Response(Key exchange) short message is transmitted and that status log raised
           correct code for DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    25: Set EbTest_EapReqKeyExchange STRING_TYPE to unsupported value, also match
        EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    26: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    27: Call DevAuth_MainFunction() to process state machine transition.
    28: VP(DevAuth_NET_SEC_164, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected
           EAP-Response(Key exchange) short message is transmitted and that status log raised
           correct code for DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    29: Set EbTest_EapReqKeyExchange SET_TAG length to different value than SEQUENCE_TAG + 2 length
        also match EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    30: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    31: Call DevAuth_MainFunction() to process state machine transition.
    32: VP(DevAuth_NET_SEC_164, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected
           EAP-Response(Key exchange) short message is transmitted and that status log raised
           correct code for DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    33: Set EbTest_EapReqKeyExchange SEQUENCE_TAG length to different value than sum of OBJECT_ID
        length + STRING_TYPE length + 4, also match EbTest_AuthCert_L4 accordingly
        (in order to Csm_KeyElementSet() return E_OK).
    34: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    35: Call DevAuth_MainFunction() to process state machine transition.
    36: VP(DevAuth_NET_SEC_164, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected
           EAP-Response(Key exchange) short message is transmitted and that status log raised
           correct code for DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    37: Set EbTest_EapReqKeyExchange SET_TAG length to size bigger than buffer, also match
        EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    38: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    39: Call DevAuth_MainFunction() to process state machine transition.
    40: VP(DevAuth_NET_SEC_164, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected
           EAP-Response(Key exchange) short message is transmitted and that status log raised
           correct code for DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>718</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01146_KeyEx_CheckAuthIsAcceptable_UnequalSubjects</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>14715</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will response with EAP-Response(Key exchange) short message if
    DevAuth fails to parse supplicant certificate, Locality name (L) of authenticator does not match
    an entry in configured list, and also if authenticator subject elements (G, S, OU, O, CN) are
    not equal to supplicant subject elements.
  
Test Object: 
    Authenticator certificate parsing.
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set EbTest_EapReqKeyExchange auth subject element "locality name" (L) to unsupported value,
        also match EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth.EB.CERT_958.CheckAcceptableAuthenticator,
           DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected EAP-Response(KeyEx) short
           message is transmitted and that status log raised correct code for
           DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    05: Set EbTest_EapReqKeyExchange auth subject element given name (G) to unsupported value, also
        match EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    06: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    07: Call DevAuth_MainFunction() to process state machine transition.
    08: VP(DevAuth.EB.CERT_958.CheckAcceptableAuthenticator,
           DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected EAP-Response(KeyEx) short
           message is transmitted and that status log raised correct code for
           DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    09: Set EbTest_EapReqKeyExchange auth subject element state (S) to unsupported value, also
        match EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    10: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    11: Call DevAuth_MainFunction() to process state machine transition.
    12: VP(DevAuth.EB.CERT_958.CheckAcceptableAuthenticator,
           DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected EAP-Response(KeyEx) short
           message is transmitted and that status log raised correct code for
           DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    13: Set EbTest_EapReqKeyExchange auth subject organizational unit (OU) to unsupported value,
        also match EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    14: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    15: Call DevAuth_MainFunction() to process state machine transition.
    16: VP(DevAuth.EB.CERT_958.CheckAcceptableAuthenticator,
           DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected EAP-Response(KeyEx) short
           message is transmitted and that status log raised correct code for
           DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    17: Set EbTest_EapReqKeyExchange auth subject organizational name (O) to unsupported value,
        also match EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    18: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    19: Call DevAuth_MainFunction() to process state machine transition.
    20: VP(DevAuth.EB.CERT_958.CheckAcceptableAuthenticator,
           DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected EAP-Response(KeyEx) short
           message is transmitted and that status log raised correct code for
           DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    21: Set EbTest_EapReqKeyExchange auth subject common name (CN) to unsupported value,
        also match EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    22: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    23: Call DevAuth_MainFunction() to process state machine transition.
    24: VP(DevAuth.EB.CERT_958.CheckAcceptableAuthenticator,
           DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected EAP-Response(KeyEx) short
           message is transmitted and that status log raised correct code for
           DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    25: Set EbTest_SuppL4Cert SEQUENCE_TAG location with mismatched tag so supplicant certificate
        parse will fail.
    26: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    27: Call DevAuth_MainFunction() to process state machine transition.
    28: VP(DevAuth.EB.CERT_958.CheckAcceptableAuthenticator,
           DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected EAP-Response(KeyEx) short
           message is transmitted and that status log raised correct code for
           DEVAUTH_UNACCEPTABLE_AUTHENTICATOR.
    29: Set EbTest_EapReqKeyExchange auth COMMON_NAME_TAG to unsupported value,
        also match EbTest_AuthCert_L4 accordingly (in order to Csm_KeyElementSet() return E_OK).
    30: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) on Port_0.
    31: Call DevAuth_MainFunction() to process state machine transition.
    32: VP(DevAuth.EB.CERT_958.CheckAcceptableAuthenticator,
           DevAuth.EB.User_DevAuthLogStatusCallback): Verify that expected EAP-Response(KeyEx) short
           message is transmitted and that status log raised correct code for
           DEVAUTH_UNACCEPTABLE_AUTHENTICATOR as the tag was ignored.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.CERT_958.CheckAcceptableAuthenticator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01147_KeyEx_ReqMsgLengthSmallerThanMinimum</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>15046</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in READY_AUTHENTICATE_ON and it receives
    EAP-Request(KeyEx) message with message length smaller than EBTEST_KEYEXC_REQ_MIN_LEN,
    KeyExcReq event will not be set and message will be discarded.
  
Test Object: 
    EAP-Request(KeyEx) message.
    Status log reporting.
  
Test Precondition: 
    Port state machine is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set EAP-Request(KeyEx) message Packet Body Length and EAP Length to
        (EBTEST_KEYEXC_REQ_MIN_LEN - EBTEST_EAPOL_HEADER_LEN - 1).
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(KeyEx) with LenByte set to
        (EBTEST_KEYEXC_REQ_MIN_LEN - 1).
    03: VP(DevAuth.EB.LogStatusCode): Verify that DevAuth status log reported
           EBTEST_RX_UNSUPPORTED_MSG as EAP-Request(KeyEx) message length was smaller than
           EBTEST_KEYEXC_REQ_MIN_LEN.
    04: Call DevAuth_MainFunction() to process state machine transition.
    05: VP(DevAuth_NET_SEC_164): Verify that nothing was called as KeyExcReq event was not set.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01148_AuthenticateEcu_ReqMsgLengthSmallerThanMinimum</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>15122</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when port is in READY_AUTHENTICATE_ON and it receives
    EAP-Request(AuthEcu) message with message length smaller than EBTEST_AUTHECU_REQ_LEN,
    AuthEcuReq event will not be set and message will be discarded.
  
Test Object: 
    Reception of Expanded EAP-Request(Authenticate ECU) message.
    Status log reporting.
  
Test Precondition: 
    Port is in state READY_AUTHENTICATE_ON.
    Keys exchanged.
  
Test Execution: 
    01: Set EAP-Request(AuthEcu) message Packet Body Length and EAP Length to
        (EBTEST_AUTHECU_REQ_LEN - EBTEST_EAPOL_HEADER_LEN - 1).
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(AuthEcu) with LenByte set
        to (EBTEST_AUTHECU_REQ_LEN - 1).
    03: VP(DevAuth.EB.LogStatusCode): Verify that DevAuth status log reported
           EBTEST_RX_UNSUPPORTED_MSG as EAP-Request(AuthEcu) message length was smaller than
           EBTEST_AUTHECU_REQ_LEN.
    04: Call DevAuth_MainFunction() to process state machine transition.
    05: VP(DevAuth_NET_SEC_176): Verify that no message is generated because no PDelay Request and
        PDelay Response indications have been received and EAP-Request(AuthEcu) was invalid.
    06: Call DevAuth_PDelayReqIndication() to indicate reception of PDelay Request message.
    07: VP(): Verify that EAP-Request(AuthEcu) was not received.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01149_ParseExpMsg_EXPHeaderIncomplete</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>15216</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives Expanded EAP message with length less than
    DEVAUTH_FRAGMENT_HEADER_SIZE, message will be discarded and DEVAUTH_EXP_HEADER_INCOMPLETE
    status log DEVAUTH_EXP_HEADER_INCOMPLETE will be reported.
  
Test Object: 
    Status log reporting.
  
Test Precondition: 
    Port state machine is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Set EAP-Request message Packet Body Length and EAP Length to 12.
    02: Call DevAuth_RxIndication() to indicate reception of Expanded message.
    03: VP(DevAuth.EB.User_DevAuthLogStatusCallback, DevAuth.EB.User_DevAuthEnableDiagCallback):
           Verify that DevAuth status log reported EBTEST_EXP_HEADER_INCOMPLETE as Expanded type
           header was incomplete.
    04: Call DevAuth_MainFunction() to process state machine transition.
    05: VP(DevAuth.EB.User_DevAuthLogStatusCallback, DevAuth.EB.User_DevAuthEnableDiagCallback):
           Verify that nothing was called as Exp message was discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_EnableDiag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01150_KeyEx_SubjElemExceededBufferSize</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>15297</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that EAP-Response(KeyEx) short message will be sent if DevAuth fails to parse
    certificate subject, thus it cannot accept the authenticator.
  
Test Object: 
    Processing EAP-Request(KeyEx) and generation of response message.
  
Test Precondition: 
    DevAuth initialized.
    Port is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Configure Csm_KeyElementGet_Stub to return 1 which is less than (SET tag + 1 byte length)
        when checking if autheticator is acceptable.
    02: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange).
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           buffer had insufficient space to store SET tag + 1 byte length.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.KeyExchange.ShortResponse</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01151_EnableDiag_NoCallbackConfigured</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>15371</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when EnableDiag callout is not configured, port is in
    READY_AUTHENTICATE_ON and it receives EAP-Request(EnableDiag) message, it will send
    EAP-EnableDiag response message and will not call a callout function as it's not configured.
  
Test Object: 
    EAP-EnableDiag message.
    Status log reporting.
    Port state transition: READY_AUTHENTICATE_ON -&gt; READY_AUTHENTICATE_ON.
  
Test Precondition: 
    Port state machine is in state READY_AUTHENTICATE_ON.
    DevAuthEnableDiagnosticCallback not configured.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Enable Diagnostics).
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(DevAuth_NET_SEC_148, DevAuth_NET_SEC_147, DevAuth_NET_SEC_168, DevAuth.EB.LogStatusCode
           DevAuth.EB.User_DevAuthEnableDiagCallback, DevAuth.EB.User_DevAuthLogStatusCallback,
           DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_EnableDiag): Verify that
           EAP-Response(Enable Diagnostics) message is transmitted with expected message format
           after receiving EAP-Request(Enable Diagnostics) with expected message format.
           Furthermore, verify that callout was not called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_148</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_147</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthEnableDiagCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.ReadyAuthenticateOn_2_ReadyAuthenticateOn_EnableDiag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01152_ReadEcuUid_NoCallbackConfigured</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>15460</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when ReadEcuUid Callout is not configured, port is in SEND_EAPOL_START
    and it receives EAP-Request(Identity) message, it will transmit EAP-Response(Identity) message
    without ECU-UID.
  
Test Object: 
    Transmission of EAP-Response(Identity) message without ECU-UID.
    Status log reporting.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state SEND_EAPOL_START.
    DevAuthReadEcuUidCallback not configured.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) on Port_0.
    02: VP(DevAuth.EB.LogStatusCode): Verify that status log raised correct code for
           DEVAUTH_RX_EAPIDENTITY.
    03: Call DevAuth_MainFunction() to process state machine transition.
    04: VP(DevAuth.EB.User_DevAuthReadEcuUid): Verify that user callback function is NOT called as
           callout is not configured.
    05: VP(DevAuth_NET_SEC_120, DevAuth_NET_SEC_121): Verify that reception of RAP-Request(Identity)
           has generated EAP-Response(Identity) message without ECU-UID.
    06: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_TX_IDENTITYRESP.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>DevAuth_NET_SEC_121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthReadEcuUid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01153_IsUnlockSafe_NoCallbackConfigured</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>15562</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that upon DevAuth_EcuAuthUnlock() call, if the user callback function
    User_IsUnlockSafe() is NOT configured DevAuth will return JOB_E_FORBIDDEN.
  
Test Object: 
    User callback function DevAuth_ReadEcuUidDummy().
  
Test Precondition: 
     DevAuth initialized.
     Client state machine is in AUTH_STARTED_UNLOCKED state.
     DevAuthIsUnlockSafeCallback not configured.
  
Test Execution: 
    01: Call DevAuth_EcuAuthStart() to start ECU Authentication.
    02: Call DevAuth_EcuAuthLock() to lock ECU Authentication.
    03: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that ECU
           Authentication is locked (StatusLog).
    04: Call DevAuth_EcuAuthUnlock() to try to unlock ECU Authentication.
    05: VP(DevAuth.EB.User_DevAuthIsUnlockSafe): Verify that User_DevAuthIsUnlockSafe() was NOT
           called as callout was not configured and that DevAuth_EcuAuthUnlock() returned
           JOB_E_FORBIDDEN indicating that unlock operation cannot be executed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthIsUnlockSafe</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01154_Initial_2_Default_GetNvramData_InvalidState</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>15656</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will initialize Client state machine in AUTH_STOPPED
    state when reading of NVRAM returns invalid state during initialization process.
  
Test Object: 
    Client State Machine transition from Initial -&gt; Default(AUTH_STOPPED).
  
Test Precondition: 
    EbTest_NVRAM_ClientSMState set to return invalid state (9).
    NVRAM state set to AUTH_STARTED_UNLOCKED (non-default) state.
  
Test Execution: 
    01: Call DevAuth_Init() to initialize DevAuth and trigger state change from
        Initial -&gt; AUTH_STARTED_UNLOCKED.
    02: VP(): Verify that ClienSM for the first port is in AUTH_STOPPED state.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthGetNvramData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.ClientSM.Initial_2_AuthStopped</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01155_StatusLog_FirstFrag_LengthFieldMissing</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>15722</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives a new first fragment without fragmentation length,
    it will discard the message and raise a status log error DEVAUTH_FRAG_LENGTH_MISSING.
  
Test Object: 
    Status log reporting.
  
Test Precondition: 
    First fragment configured without fragmentation length.
    Port is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to send first fragment of EAP-Request(AuthEcu) without
        fragmentation length.
    02: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that status
           log raised correct code for DEVAUTH_FRAG_LENGTH_MISSING.
    03: Call DevAuth_MainFunction() to process Frag state machine transition.
    04: VP(DevAuth.EB.LogStatusCode, DevAuth.EB.User_DevAuthLogStatusCallback): Verify that nothing
           was called as message was discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.User_DevAuthLogStatusCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01156_KeyEx_CertLengthBytes</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>15812</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will parse Certificate length field if length is one or two
    bytes long.
    Note: According to ASN.1 notation length bytes are represented as follows:
          If the length is less than 128, you just use a single byte, with the high bit set to zero.
          Otherwise the high bit is set to one, and the low seven bits set to the length of length.
          The length is then encoded in that many bytes.
  
Test Object: 
    Transmission of EAP-Response(Key exchange) short message.
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) with CertA
        length which is 1 byte long.
    02: Call DevAuth_MainFunction() to process state machine transition.
    03: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           authenticator certificate is invalid.
    04: Configure EAP-Req(KeyEx) message CertA to have 2 bytes long length.
    05: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Key exchange) with CertA
        length which is 2 bytes long.
    06: Call DevAuth_MainFunction() to process state machine transition.
    07: VP(): Verify that expected EAP-Response(Key exchange) short message is transmitted as
           authenticator certificate is invalid.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_164</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01157_AllConfiguredCtrls_EAPoLStart_RxIdentity</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>15913</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that DevAuth will send EAPoL-Start message from all configured controllers
    that are active and have authentication enabled, additionally DevAuth shall transition from
    SEND_EAPOL_START -&gt; READY_AUTHENTICATE_ON upon reception of EAP-Request(Identity) on
    corresponding EthIfCtrl.
  
Test Object: 
    Transmission of EAPoL-Start message
    Port state transition: SEND_EAPOL_START -&gt; READY_AUTHENTICATE_ON (upon reception of
    EAP-Request(Identity)).
  
Test Precondition: 
    DevAuth initialized.
    Port_0 is active and in state SEND_EAPOL_START.
  
Test Execution: 
    01: Call DevAuth_MainFunction() to tick a timer close to Port_0 EAPoL Start timeout.
    02: Call DevAuth_TrcvLinkStateChg() to indicate link activation of EthIfController on Port_1.
    03: Call DevAuth_MainFunction() to process link state change on Port_1.
    04: VP(DevAuth_NET_SEC_183): Verify that EAPoL-Start message was sent from Port_1.
    05: Call DevAuth_MainFunction() to send out EAPoL-Start message from Port_0.
    06: VP(DevAuth_NET_SEC_183): Verify that EAPoL-Start message was sent from Port_0.
    07: Call DevAuth_MainFunction() to tick timer one more time so Port_1 sends out EAPoL-Start.
    08: VP(DevAuth_NET_SEC_183): Verify that EAPoL-Start message was sent from Port_1.

    09: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) on Port_0.
    10: Call DevAuth_MainFunction() to process state machine transition.
    11: VP(DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_RxIdentityReq): Verify
           transmission of EAP-Response(Identity) on Port_0 indicating state machine transition from
           SEND_EAPOL_START -&gt; READY_AUTHENTICATE_ON.
    12: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Identity) on Port_1.
    13: Call DevAuth_MainFunction() to process state machine transition.
    14: VP(DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_RxIdentityReq): Verify
           transmission of EAP-Response(Identity) on Port_1 indicating state machine transition from
           SEND_EAPOL_START -&gt; READY_AUTHENTICATE_ON.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth_NET_SEC_183</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PortSM.SendEapolStart_2_ReadyAuthenticationOn_RxIdentityReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01158_RX_FRAG_InvalidNonFrag_Discard</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>16052</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when FragSM is in RX_FRAG state and it receives new non fragmented
    invalid message it will discard the message.
  
Test Object: 
    Discarding received unsupported messages in RX_FRAG state.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
    FragSM is in the state READY.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to receive first fragment of EAP-Request(AuthEcu) on Port_0.
    02: Call DevAuth_MainFunction() to transmit ACK message and to transition towards RX_FRAG.
    03: Call DevAuth_RxIndication() to receive new non-fragmented invalid message with the same
        header as fragment before.
    04: Call DevAuth_MainFunction() to process the message.
    05: VP(): Verify that nothing happened as message was invalid.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.NewMsgRx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01159_WAIT_ACK_RxFirstFrag_Invalid</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>16169</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives invalid first fragment in WAIT_ACK state it will
    discard the message.
  
Test Object: 
    Reception of fragmented EAP message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to indicate reception of EAP-Request(KeyEx).
    02: Call DevAuth_MainFunction() to process Frag state machine transition.
    03: VP(DevAuth.EB.FragSM.TxFrag_2_WaitAck): Verify transmission of the first fragment indirectly
           indicating that FragSM changed state to WAIT_ACK.
    04: Call DevAuth_RxIndication() to indicate reception of invalid first fragment.
    05: Call DevAuth_MainFunction() to process the message.
    06: VP(DevAuth.EB.FragSM.NewMsgRx): Verify that EAP response message is not transmitted because
           received message is discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.TxFrag_2_WaitAck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.FragSM.NewMsgRx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01160_TX_ACK_RxFirstFrag_Invalid</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>16311</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that when DevAuth receives invalid first fragment in TX_ACK state it will
    discard the message.
  
Test Object: 
    Reception of fragmented EAP message.
  
Test Precondition: 
    Port_0 is in state READY_AUTHENTICATE_ON.
  
Test Execution: 
    01: Call DevAuth_RxIndication() to FirstFragment to make FragSM transition to TX_ACK.
    02: Call DevAuth_RxIndication() to indicate reception of invalid first fragment.
    03: Call DevAuth_MainFunction() to process the message.
    04: VP(DevAuth.EB.FragSM.NewMsgRx): Verify that EAP response message is not transmitted because
           only one fragment is received and next recieved fragment is discarded.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.FragSM.NewMsgRx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01161_PostBuildSelectable</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>16416</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies support of post-build selectable feature, by initializing DevAuth with
    two different variants and verifying that EAP-Response(Enable diagnostic) message contains
    field values that belong to different variant sets.
  
Test Object: 
    Post-build selectable support.
  
Test Precondition: 
  
Test Execution: 
    01: VP(DevAuth.EB.PBSelectable.Master): Check that DevAuth_PBcfg.h exists and can be included.
    02: VP(DevAuth.EB.PBSelectable.FileName): Verify that files DevAuth_V1_PBcfg.h and
        DevAuth_V2_PBcfg.h exist.
    03: VP(DevAuth.EB.PBSelectable.TypeName): Verify that types DevAuth_V1_ConstConfigLayoutType,
        DevAuth_V2_ConstConfigLayoutType, DevAuth_V1_ConfigLayoutType and
        DevAuth_V2_ConfigLayoutType exist.
    04: VP(DevAuth.EB.PBSelectable.TypeName, DevAuth.EB.PBSelectable.FileName): Call DevAuth_Init()
        with DevAuth_V1_ConfigLayout to initialize DevAuth with V1 configuration. This verifies that
        DevAuth_V1_ConfigLayout exist and indirectly that DevAuth_V1_PBcfg.c is compiled and linked.
    05: Bring port state machine into READY_AUTHENTICATE_ON state.
    06: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Enable Diagnostics).
    07: Call DevAuth_MainFunction() to process state machine transition.
    08: VP(DevAuth.EB.PostBuildSelectable): Verify that EAP-Response(Enable Diagnostics) is transmitted
        with the values of Internal IP Address, Internal Diagnostic Port Number and Diagnostic Address
        fields that match configuration parameters set in variant V1.
    04: VP(DevAuth.EB.PBSelectable.TypeName, DevAuth.EB.PBSelectable.FileName): Call DevAuth_Init()
        with DevAuth_V2_ConfigLayout to initialize DevAuth with V2 configuration. This verifies that
        DevAuth_V2_ConfigLayout exist and indirectly that DevAuth_V2_PBcfg.c is compiled and linked.
    10: Bring port state machine into READY_AUTHENTICATE_ON state.
    11: Call DevAuth_RxIndication() to indicate reception of EAP-Request(Enable Diagnostics).
    12: Call DevAuth_MainFunction() to process state machine transition.
    13: VP(DevAuth.EB.PostBuildSelectable): Verify that EAP-Response(Enable Diagnostics) is transmitted
        with the values of Internal IP Address, Internal Diagnostic Port Number and Diagnostic Address
        fields that match configuration parameters set in variant V2.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.PostBuildSelectable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>
    <specobject>
      <id>DevAuth_ConTest01162_DevAuthSetNvramData_StatusLog</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Conformance/IN/DevAuth_ConTest01/source/application/DevAurth_ConTest01.c</sourcefile>
      <sourceline>16597</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test case verifies that status log entry will be written in case writing to NVRAM fails.
  
Test Object: 
    Status log reporting when writing to NVRAM fails (SET_NVRAM_FAILED).
  
Test Precondition: 
    DevAuth initialized.
  
Test Execution: 
    01: Configure User_DevAuthSetNvramData stub to return E_NOT_OK for 8 calls and
        User_DevAuthIsUnlockSafe stub to allow unlock.
    02: Call DevAuth_EcuAuthStop() to disable authentication.
    03: VP(DevAuth.EB.LogStatusCode): Verify that DevAuth has reported events log entry
        SET_NVRAM_FAILED.
    04: Call DevAuth_EcuAuthStart() enable authentication.
    05: VP(DevAuth.EB.LogStatusCode): Verify that DevAuth has reported events log entry
        SET_NVRAM_FAILED.
    06: Call DevAuth_EcuAuthLock() to lock authentication status.
    07: VP(DevAuth.EB.LogStatusCode): Verify that DevAuth has reported events log entry
        SET_NVRAM_FAILED.
    08: Call DevAuth_EcuAuthUnlock() to unlock authentication status.
    09: VP(DevAuth.EB.LogStatusCode): Verify that DevAuth has reported events log entry
        SET_NVRAM_FAILED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.LogStatusCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>DevAuth_GenTest_01001_Invalid_DevAuth_Xdm_DevAuthSetNvramData_Empty</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Generic/IN/DevAuth_GenTest01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test will check that an error is generated if
  DevAuthNvramCallbacks/DevAuthSetNvramCallbackName is is empty when DevAuthNvramCallbacks is
  enabled.
&lt;/para&gt;

Test Object: XDM check
Test Precondition: 
  In DevAuth/DevAuthGeneral/DevAuthNvramCallbacks = TRUE.

Test Execution: 
  VP(DevAuth.EB.XdmCheck.DevAuthSetNvramData.Empty): The following error must be issued:
  When DevAuthNvramCallbacks is enabled, user callback function name needs to be specified.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthSetNvramData.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>
    <specobject>
      <id>DevAuth_GenTest_01002_Invalid_DevAuth_Xdm_DevAuthGetNvramData_Empty</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Generic/IN/DevAuth_GenTest01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test will check that an error is generated if
  DevAuthNvramCallbacks/DevAuthGetNvramCallbackName is empty when DevAuthNvramCallbacks is enabled.
&lt;/para&gt;

Test Object: XDM check
Test Precondition: 
  In DevAuth/DevAuthGeneral/DevAuthNvramCallbacks = TRUE.

Test Execution: 
  VP(DevAuth.EB.XdmCheck.DevAuthGetNvramData.Empty): The following error must be issued:
  When DevAuthNvramCallbacks is enabled, user callback function name needs to be specified.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthGetNvramData.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>
    <specobject>
      <id>DevAuth_GenTest_01003_Invalid_DevAuth_Xdm_DevAuthEnableDiagCallbackName_Empty</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Generic/IN/DevAuth_GenTest01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test will check that an error is generated if
  DevAuthEnableDiagnosticCallback/DevAuthEnableDiagnosticCallbackName is empty when
  DevAuthEnableDiagnosticCallback is enabled.
&lt;/para&gt;

Test Object: XDM check
Test Precondition: 
  DevAuth/DevAuthGeneral/DevAuthEnableDiagnosticCallback = TRUE.

Test Execution: 
  VP(DevAuth.EB.XdmCheck.DevAuthEnableDiagCallbackName.Empty): The following error must be issued:
  When DevAuthEnableDiagnosticCallback is enabled, user callback function name needs to be
  specified.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthEnableDiagCallbackName.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>
    <specobject>
      <id>DevAuth_GenTest_01004_Invalid_DevAuth_Xdm_DevAuthLogStatusCallbackName_Empty</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Generic/IN/DevAuth_GenTest01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>108</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test will check that an error is generated if
  DevAuthLogStatusCallback/DevAuthLogStatusCallbackName is empty when DevAuthEnableStatusLogging is
  enabled.
&lt;/para&gt;

Test Object: XDM check
Test Precondition: 
  DevAuth/DevAuthGeneral/DevAuthEnableStatusLogging = TRUE.

Test Execution: 
  VP(DevAuth.EB.XdmCheck.DevAuthLogStatusCallbackName.Empty): The following error must be issued:
  When DevAuthLogStatusCallback is enabled, user callback function name needs to be specified.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthLogStatusCallbackName.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>
    <specobject>
      <id>DevAuth_GenTest_01005_DevAuthMaxEapMsgSize_Too_Small_For_SuppCertificates</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Generic/IN/DevAuth_GenTest01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test will check that an error is generated if DevAuthGeneral/DevAuthMaxEapMsgSize is exceeded
  when DevAuthSupplicantL3CertificateSize and DevAuthSupplicantL4CertificateSize values are too
  large.
&lt;/para&gt;

Test Object: XDM check
Test Precondition: 

Test Execution: 
  VP(DevAuth.EB.XdmCheck.DevAuthMaxEapMsgSize.Exceeded): The following error must be issued:
     The first part of the response message up to the LengthEncryptedData field (41 bytes) +
     SupplicantL3CertificateSize +
     SupplicanL4CertificateSize +
     V (97 bytes) +
     Block size rounded encrypted data (CSize) +
     Signature (96 bytes) must not exceed DevAuthGeneral/DevAuthMaxEapMsgSize.
     Where CSize = ((RawEncryptedDataSize / BlockSize) + 1) / BlockSize &amp;
     RawEncryptedDataSize = DevAuthGeneral/DevAuthMaxSymmetricalKeySize + KeyIdSize(1).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthMaxEapMsgSize.Exceeded</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>
    <specobject>
      <id>DevAuth_GenTest_01006_Invalid_DevAuth_Xdm_DevAuthReadEcuUidCallbackName_Empty</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Generic/IN/DevAuth_GenTest01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>168</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test will check that an error is generated if
  DevAuthReadEcuUidCallback/DevAuthReadEcuUidCallbackName is empty when DevAuthReadEcuUidCallback
  is enabled.
&lt;/para&gt;

Test Object: XDM check
Test Precondition: 
  In DevAuth/DevAuthGeneral/DevAuthReadEcuUidCallback = TRUE.

Test Execution: 
  VP(DevAuth.EB.XdmCheck.DevAuthReadEcuUidCallbackName.Empty): The following error must be issued:
     When DevAuthReadEcuUidCallback is enabled, user callback function name needs to be specified.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthReadEcuUidCallbackName.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>
    <specobject>
      <id>DevAuth_GenTest_01007_Invalid_DevAuth_Xdm_DevAuthIsUnlockSafeCallbackName_Empty</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Generic/IN/DevAuth_GenTest01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>195</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test will check that an error is generated if
  DevAuthIsUnlockSafeCallback/DevAuthIsUnlockSafeCallbackName is empty when
  DevAuthIsUnlockSafeCallback is enabled.
&lt;/para&gt;

Test Object: XDM check
Test Precondition: 
  In DevAuth/DevAuthGeneral/DevAuthIsUnlockSafeCallback = TRUE.

Test Execution: 
  VP(DevAuth.EB.XdmCheck.DevAuthIsUnlockSafeCallbackName.Empty): The following error must be issued:
     When DevAuthReadEcuUidCallback is enabled, user callback function name needs to be specified.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthIsUnlockSafeCallbackName.Empty</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>
    <specobject>
      <id>DevAuth_GenTest_01008_Invalid_DevAuth_Xdm_AuthenticationPorts_Exceeded_NotZeroBased</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Generic/IN/DevAuth_GenTest01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test will check that an error is generated if DevAuthConfigSet/DevAuthPort has more ports
  configured than /DoIPGeneral/DevAuthMaxAuthenticationPorts and if ports are not 0-based and dense.
&lt;/para&gt;

Test Object: XDM check
Test Precondition: 
  In DevAuth/DevAuthGeneral/DevAuthIsUnlockSafeCallback = TRUE.

Test Execution: 
  VP(DevAuth.EB.XdmCheck.DevAuthPortIdx.NotZeroBased): The following error must be issued:
     DevAuthPortIdx shall be 0-based and dense.
  VP(DevAuth.EB.XdmCheck.DevAuthMaxAuthenticationPorts.Exceeded): The following error must be
     issued: The number of configured ports must not exceed
     /DoIPGeneral/DevAuthMaxAuthenticationPorts.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthPortIdx.NotZeroBased</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthMaxAuthenticationPorts.Exceeded</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>
    <specobject>
      <id>DevAuth_GenTest_01009_Invalid_DevAuth_Xdm_DevAuthEapEthIfControllerRef_NotUntagged</id>
      <status>approved</status>
      <source>EB test case specification (asc_DevAuth)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_DevAuth/test/ts5/Generic/IN/DevAuth_GenTest01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>255</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test will check that an error is generated if EthIfCtrl referenced in
  DevAuth/DevAuthConfigSet/DevAuthPort/DevAuthPort/DevAuthEapEthIfControllerRef is not a Vlan
  untagged.
&lt;/para&gt;

Test Object: XDM check
Test Precondition: 
  In DevAuth/DevAuthGeneral/DevAuthIsUnlockSafeCallback = TRUE.

Test Execution: 
  VP(DevAuth.EB.XdmCheck.DevAuthEapEthIfControllerRef.NotUntagged): The following error must be
     issued: Referenced EthIfController has to be Vlan untagged.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>DevAuth.EB.XdmCheck.DevAuthEapEthIfControllerRef.NotUntagged</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
